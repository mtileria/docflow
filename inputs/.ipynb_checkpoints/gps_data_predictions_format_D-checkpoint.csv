ind,key,doc,lr,svm,xg,nn
0,AppMeasurementContentProvider_attachInfo,attach info from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,sink,sink,neither,sink
1,AppMeasurementContentProvider_delete,delete from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,neither,neither,neither,sink
2,AppMeasurementContentProvider_getType,get type from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,source,source,source,source
3,AppMeasurementContentProvider_insert,insert from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,sink,sink,sink,sink
4,AppMeasurementContentProvider_onCreate,on create from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,neither,neither,neither,sink
5,AppMeasurementContentProvider_query,query from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,neither,neither,neither,sink
6,AppMeasurementContentProvider_update,update from app measurement content provider . this class is deprecated  replaced by com google firebase provider firebase init provider,neither,neither,neither,sink
7,AppMeasurementJobService_onCreate,on create from app measurement job service . a job service used by firebase analytics,neither,neither,neither,neither
8,AppMeasurementJobService_onDestroy,on destroy from app measurement job service . a job service used by firebase analytics,neither,neither,neither,neither
9,AppMeasurementJobService_onRebind,on rebind from app measurement job service . a job service used by firebase analytics,neither,neither,neither,neither
10,AppMeasurementJobService_onStartJob,on start job from app measurement job service . a job service used by firebase analytics,neither,neither,neither,neither
11,AppMeasurementJobService_onStopJob,on stop job from app measurement job service . a job service used by firebase analytics,neither,neither,neither,neither
12,AppMeasurementJobService_onUnbind,on unbind from app measurement job service . a job service used by firebase analytics,neither,neither,neither,neither
13,AppMeasurementReceiver_doGoAsync,do go async from app measurement receiver . a broadcast receiver for firebase analytics,neither,neither,neither,neither
14,AppMeasurementReceiver_doStartService,do start service from app measurement receiver . a broadcast receiver for firebase analytics,neither,neither,neither,neither
15,AppMeasurementReceiver_onReceive,on receive from app measurement receiver . a broadcast receiver for firebase analytics,neither,neither,neither,neither
16,AppMeasurementService_onBind,on bind from app measurement service . an service used by firebase analytics,neither,neither,neither,neither
17,AppMeasurementService_onCreate,on create from app measurement service . an service used by firebase analytics,neither,neither,neither,neither
18,AppMeasurementService_onDestroy,on destroy from app measurement service . an service used by firebase analytics,neither,neither,neither,neither
19,AppMeasurementService_onRebind,on rebind from app measurement service . an service used by firebase analytics,neither,neither,neither,neither
20,AppMeasurementService_onStartCommand,on start command from app measurement service . an service used by firebase analytics,neither,sink,neither,sink
21,AppMeasurementService_onUnbind,on unbind from app measurement service . an service used by firebase analytics,neither,neither,neither,neither
22,RtbAdapter_collectSignals,collect signals from rtb adapter called by the google mobile ads sdk to start signal generatio. Return type is  void and parameters are rtb signal data signal callbacks. mediation adapter that also supports open bidding,neither,neither,neither,neither
23,RtbAdapter_loadRtbBannerAd,load rtb banner ad from rtb adapter called by the google mobile ads sdk to begin loading an open bidding banner ad given a mediation ad configuration used to load the winning ad from an open bidding reques. Return type is void and parameters are mediation banner ad configuration mediation ad load callback< mediation banner ad mediation banner ad callback>. mediation adapter that also supports open bidding,neither,neither,sink,neither
24,RtbAdapter_loadRtbInterscrollerAd,load rtb interscroller ad from rtb adapter called by the google mobile ads sdk to begin loading an open bidding interscroller ad given a mediation ad configuration used to load the winning ad from an open bidding reques. Return type is void and parameters are mediation banner ad configuration mediation ad load callback< mediation interscroller ad mediation banner ad callback>. mediation adapter that also supports open bidding,neither,neither,sink,neither
25,RtbAdapter_loadRtbInterstitialAd,load rtb interstitial ad from rtb adapter called by the google mobile ads sdk to begin loading an open bidding interstitial ad given a mediation ad configuration used to load the winning ad from an open bidding reques. Return type is void and parameters are mediation interstitial ad configuration mediation ad load callback< mediation interstitial ad mediation interstitial ad callback>. mediation adapter that also supports open bidding,neither,neither,neither,neither
26,RtbAdapter_loadRtbNativeAd,load rtb native ad from rtb adapter called by the google mobile ads sdk to begin loading an open bidding native ad given a mediation ad configuration used to load the winning ad from an open bidding reques. Return type is void and parameters are mediation native ad configuration mediation ad load callback< unified native ad mapper mediation native ad callback>. mediation adapter that also supports open bidding,neither,neither,sink,neither
27,RtbAdapter_loadRtbRewardedAd,load rtb rewarded ad from rtb adapter called by the google mobile ads sdk to begin loading an open bidding rewarded ad given a mediation ad configuration used to load the winning ad from an open bidding reques. Return type is void and parameters are mediation rewarded ad configuration mediation ad load callback< mediation rewarded ad mediation rewarded ad callback>. mediation adapter that also supports open bidding,neither,neither,sink,sink
28,RtbAdapter_loadRtbRewardedInterstitialAd,load rtb rewarded interstitial ad from rtb adapter called by the google mobile ads sdk to begin loading an open bidding rewarded interstitial ad given a mediation ad configuration used to load the winning ad from an open bidding reques. Return type is void and parameters are mediation rewarded ad configuration mediation ad load callback< mediation rewarded ad mediation rewarded ad callback>. mediation adapter that also supports open bidding,neither,neither,neither,neither
29,RtbSignalData_getAdSize,"get ad size from rtb signal data returns the ad size associated with a banner ad request, or null if this signal data is not for a banner ad reques. Return type is Ad Size and no argument. data passed into the adapter for signal generation",source,source,source,source
30,RtbSignalData_getConfiguration,get configuration from rtb signal data deprecate. Return type is Mediation Configuration and no argument. data passed into the adapter for signal generation,source,source,source,source
31,RtbSignalData_getConfigurations,get configurations from rtb signal data returns the configurations defined by the publisher in the ad mob or ad manager u. Return type is List and no argument. data passed into the adapter for signal generation,source,source,source,source
32,RtbSignalData_getContext,get context from rtb signal data returns the contex. Return type is Context and no argument. data passed into the adapter for signal generation,source,source,source,source
33,RtbSignalData_getNetworkExtras,get network extras from rtb signal data returns the extra parameters set by the publisher on a per-request basis for a specific ad network adapte. Return type is Bundle and no argument. data passed into the adapter for signal generation,source,source,source,source
34,SignalCallbacks_onFailure,on failure from signal callbacks called when signal generation fail. Return type is  void and parameters are ad error. callback for signal generation from 3p s d ks for rtb mediation,neither,neither,neither,neither
35,SignalCallbacks_onFailure,on failure from signal callbacks deprecate. Return type is  void and parameters are string. callback for signal generation from 3p s d ks for rtb mediation,neither,neither,neither,neither
36,SignalCallbacks_onSuccess,on success from signal callbacks success callback for a 3p signal generatio. Return type is  void and parameters are string. callback for signal generation from 3p s d ks for rtb mediation,neither,neither,neither,neither
37,CastSeekBar_getMaxProgress,get max progress from cast seek bar returns the maximum progres. Return type is int and no argument. a custom seek bar provided by the cast sdk mimicking the android seek bar,source,source,source,source
38,CastSeekBar_getProgress,get progress from cast seek bar returns the progres. Return type is int and no argument. a custom seek bar provided by the cast sdk mimicking the android seek bar,source,source,source,source
39,CastSeekBar_onDraw,on draw from cast seek bar . a custom seek bar provided by the cast sdk mimicking the android seek bar,neither,neither,neither,neither
40,CastSeekBar_onTouchEvent,on touch event from cast seek bar . a custom seek bar provided by the cast sdk mimicking the android seek bar,neither,neither,neither,neither
41,ExpandedControllerActivity_getButtonImageViewAt,"get button image view at from expanded controller activity returns the image view of the button at slot index in this containe. Return type is Image View and parameters are int. this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",source,source,source,neither
42,ExpandedControllerActivity_getButtonSlotCount,"get button slot count from expanded controller activity returns the number of slots to hold control buttons in this containe. Return type is final int and no argument. this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",source,source,source,neither
43,ExpandedControllerActivity_getButtonTypeAt,"get button type at from expanded controller activity returns the type of the button at slot index in this containe. Return type is final int and parameters are int. this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",source,source,source,neither
44,ExpandedControllerActivity_getSeekBar,"get seek bar from expanded controller activity deprecate. Return type is Seek Bar and no argument. this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",source,source,source,source
45,ExpandedControllerActivity_getStatusTextView,"get status text view from expanded controller activity returns the text view that displays the status tex. Return type is Text View and no argument. this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",source,source,source,source
46,ExpandedControllerActivity_getUIMediaController,"get u i media controller from expanded controller activity returns the u i media controller used to bind views in this containe. Return type is U I Media Controller and no argument. this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",source,source,source,source
47,ExpandedControllerActivity_onOptionsItemSelected,"on options item selected from expanded controller activity . this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",neither,neither,neither,neither
48,ExpandedControllerActivity_onWindowFocusChanged,"on window focus changed from expanded controller activity . this abstract class provides most of the implementation of an expanded controller, which is an out of the box remote player, used when casting media to a cast device",neither,neither,neither,neither
49,MiniControllerFragment_getButtonImageViewAt,get button image view at from mini controller fragment returns the image view of the button at slot index in this containe. Return type is Image View and parameters are int. a fragment that provides remote control functionality,source,source,source,neither
50,MiniControllerFragment_getButtonSlotCount,get button slot count from mini controller fragment returns the number of slots to hold control buttons in this containe. Return type is final int and no argument. a fragment that provides remote control functionality,source,source,source,source
51,MiniControllerFragment_getButtonTypeAt,get button type at from mini controller fragment returns the type of the button at slot index in this containe. Return type is final int and parameters are int. a fragment that provides remote control functionality,source,source,source,neither
52,MiniControllerFragment_getUIMediaController,get u i media controller from mini controller fragment returns the u i media controller used to bind views in this containe. Return type is U I Media Controller and no argument. a fragment that provides remote control functionality,source,source,source,source
53,MiniControllerFragment_onCreateView,on create view from mini controller fragment . a fragment that provides remote control functionality,neither,neither,neither,neither
54,MiniControllerFragment_onDestroy,on destroy from mini controller fragment . a fragment that provides remote control functionality,neither,neither,neither,neither
55,MiniControllerFragment_onInflate,on inflate from mini controller fragment . a fragment that provides remote control functionality,neither,neither,neither,neither
56,ControlButtonsContainer_getButtonImageViewAt,get button image view at from control buttons container returns the image view of the button at slot index in this containe. Return type is Image View and parameters are int. an interface that defines a container which holds a certain number of slots to show control buttons,source,source,neither,neither
57,ControlButtonsContainer_getButtonSlotCount,get button slot count from control buttons container returns the number of slots to hold control buttons in this containe. Return type is  int and no argument. an interface that defines a container which holds a certain number of slots to show control buttons,source,source,source,neither
58,ControlButtonsContainer_getButtonTypeAt,get button type at from control buttons container returns the type of the button at slot index in this containe. Return type is  int and parameters are int. an interface that defines a container which holds a certain number of slots to show control buttons,source,source,source,neither
59,ControlButtonsContainer_getUIMediaController,get u i media controller from control buttons container returns the u i media controller used to bind views in this containe. Return type is U I Media Controller and no argument. an interface that defines a container which holds a certain number of slots to show control buttons,source,source,source,neither
60,Nearby_getConnectionsClient,get connections client from nearby creates a new instance of connections clien. Return type is Connections Client and parameters are context. a p i for communication with nearby devices,source,source,source,source
61,Nearby_getConnectionsClient,get connections client from nearby creates a new instance of connections clien. Return type is Connections Client and parameters are activity. a p i for communication with nearby devices,source,source,source,source
62,Nearby_getExposureNotificationClient,get exposure notification client from nearby creates a new instance of exposure notification clien. Return type is Exposure Notification Client and parameters are context. a p i for communication with nearby devices,source,source,source,source
63,Nearby_getMessagesClient,get messages client from nearby creates a new instance of messages clien. Return type is Messages Client and parameters are activity messages options. a p i for communication with nearby devices,source,source,source,source
64,Nearby_getMessagesClient,get messages client from nearby creates a new instance of messages clien. Return type is Messages Client and parameters are activity. a p i for communication with nearby devices,source,source,source,source
65,Nearby_getMessagesClient,get messages client from nearby creates a new instance of messages clien. Return type is Messages Client and parameters are context messages options. a p i for communication with nearby devices,source,source,source,source
66,Nearby_getMessagesClient,get messages client from nearby creates a new instance of messages clien. Return type is Messages Client and parameters are context. a p i for communication with nearby devices,source,source,source,source
67,PersonBuffer_get,get from person buffer get the item at the specified positio. Return type is Person and parameters are int. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
68,Person_getAboutMe,get about me from person a short biography for this perso. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
69,Person_getAgeRange,get age range from person the age range of the perso. Return type is Person. Age Range and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
70,Person_getBirthday,"get birthday from person the person's date of birth, represented as y y y y- m m- d. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
71,Person_getBraggingRights,"get bragging rights from person the ""bragging rights"" line of this perso. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
72,Person_getCircledByCount,"get circled by count from person if a google+ page and for followers who are visible, the number of people who have added this page to a circl. Return type is  int and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
73,Person_getCover,get cover from person the cover photo conten. Return type is Person. Cover and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
74,Person_getCurrentLocation,get current location from person the current location for this perso. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
75,Person_getDisplayName,"get display name from person the name of this person, which is suitable for displa. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
76,Person_getGender,get gender from person the person's gende. Return type is  int and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
77,Person_getId,get id from person the id of this perso. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
78,Person_getImage,get image from person the representation of the person's profile phot. Return type is Person. Image and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
79,Person_getLanguage,get language from person the user's preferred language for renderin. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
80,Person_getName,get name from person an object representation of the individual components of a person's nam. Return type is Person. Name and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
81,Person_getNickname,get nickname from person the nickname of this perso. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
82,Person_getObjectType,get object type from person type of person within google. Return type is  int and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
83,Person_getOrganizations,get organizations from person a list of current or past organizations with which this person is associate. Return type is List and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
84,Person_getPlacesLived,get places lived from person a list of places where this person has live. Return type is List and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,neither
85,Person_getPlusOneCount,"get plus one count from person if a google+ page, the number of people who have +1'd this pag. Return type is  int and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
86,Person_getRelationshipStatus,get relationship status from person the person's relationship statu. Return type is  int and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
87,Person_getTagline,get tagline from person the brief descriptio. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
88,Person_getUrl,get url from person the url of this person's profil. Return type is String and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
89,Person_getUrls,get urls from person a list of u r ls for this perso. Return type is List and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
90,Person_hasAboutMe,"has about me from person indicates whether the ""about me"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,neither,neither
91,Person_hasAgeRange,"has age range from person indicates whether the ""age range"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
92,Person_hasBirthday,"has birthday from person indicates whether the ""birthday"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
93,Person_hasBraggingRights,"has bragging rights from person indicates whether the ""bragging rights"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
94,Person_hasCircledByCount,"has circled by count from person indicates whether the ""circled by count"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",neither,neither,neither,neither
95,Person_hasCover,"has cover from person indicates whether the ""cover"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",neither,source,neither,neither
96,Person_hasCurrentLocation,"has current location from person indicates whether the ""current location"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
97,Person_hasDisplayName,"has display name from person indicates whether the ""display name"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
98,Person_hasGender,"has gender from person indicates whether the ""gender"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
99,Person_hasId,"has id from person indicates whether the ""id"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
100,Person_hasImage,"has image from person indicates whether the ""image"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
101,Person_hasIsPlusUser,"has is plus user from person indicates whether the ""is plus user"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,neither,neither
102,Person_hasLanguage,"has language from person indicates whether the ""language"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,source
103,Person_hasName,"has name from person indicates whether the ""name"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
104,Person_hasNickname,"has nickname from person indicates whether the ""nickname"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,neither,source
105,Person_hasObjectType,"has object type from person indicates whether the ""object type"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,neither,neither
106,Person_hasOrganizations,"has organizations from person indicates whether the ""organizations"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,neither,neither
107,Person_hasPlacesLived,"has places lived from person indicates whether the ""places lived"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",neither,source,neither,neither
108,Person_hasPlusOneCount,"has plus one count from person indicates whether the ""plus one count"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",neither,source,neither,neither
109,Person_hasRelationshipStatus,"has relationship status from person indicates whether the ""relationship status"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,neither,neither
110,Person_hasTagline,"has tagline from person indicates whether the ""tagline"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
111,Person_hasUrl,"has url from person indicates whether the ""url"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
112,Person_hasUrls,"has urls from person indicates whether the ""urls"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
113,Person_hasVerified,"has verified from person indicates whether the ""verified"" field is explicitly set to a valu. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details",source,source,source,neither
114,Person_isPlusUser,is plus user from person whether this user has signed up for google. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,neither
115,Person_isVerified,is verified from person whether the person or google+ page has been verifie. Return type is  boolean and no argument. this interface was deprecated  this api has been deprecated  please refer to deprecation notes for details,neither,neither,neither,neither
116,Person.AgeRange_getMax,"get max from person age range the age range's upper bound, if an. Return type is  int and no argument. the age range of the person",source,source,source,source
117,Person.AgeRange_getMin,"get min from person age range the age range's lower bound, if an. Return type is  int and no argument. the age range of the person",source,source,source,source
118,Person.AgeRange_hasMax,"has max from person age range indicates whether the ""max"" field is explicitly set to a valu. Return type is  boolean and no argument. the age range of the person",source,source,source,source
119,Person.AgeRange_hasMin,"has min from person age range indicates whether the ""min"" field is explicitly set to a valu. Return type is  boolean and no argument. the age range of the person",source,source,neither,source
120,Person.Cover_getCoverInfo,get cover info from person cover extra information about the cover phot. Return type is Person. Cover. Cover Info and no argument. the cover photo content,source,source,source,neither
121,Person.Cover_getCoverPhoto,get cover photo from person cover the person's primary cover imag. Return type is Person. Cover. Cover Photo and no argument. the cover photo content,source,source,source,neither
122,Person.Cover_getLayout,get layout from person cover the layout of the cover ar. Return type is  int and no argument. the cover photo content,source,source,source,neither
123,Person.Cover_hasCoverInfo,"has cover info from person cover indicates whether the ""cover info"" field is explicitly set to a valu. Return type is  boolean and no argument. the cover photo content",source,source,source,neither
124,Person.Cover_hasCoverPhoto,"has cover photo from person cover indicates whether the ""cover photo"" field is explicitly set to a valu. Return type is  boolean and no argument. the cover photo content",source,source,source,neither
125,Person.Cover_hasLayout,"has layout from person cover indicates whether the ""layout"" field is explicitly set to a valu. Return type is  boolean and no argument. the cover photo content",neither,source,neither,neither
126,Person.Cover.CoverInfo_getLeftImageOffset,get left image offset from person cover cover info the difference between the left position of the cover image and the actual displayed cover imag. Return type is  int and no argument. extra information about the cover photo,source,source,source,source
127,Person.Cover.CoverInfo_getTopImageOffset,get top image offset from person cover cover info the difference between the top position of the cover image and the actual displayed cover imag. Return type is  int and no argument. extra information about the cover photo,source,source,source,source
128,Person.Cover.CoverInfo_hasLeftImageOffset,"has left image offset from person cover cover info indicates whether the ""left image offset"" field is explicitly set to a valu. Return type is  boolean and no argument. extra information about the cover photo",source,source,source,neither
129,Person.Cover.CoverInfo_hasTopImageOffset,"has top image offset from person cover cover info indicates whether the ""top image offset"" field is explicitly set to a valu. Return type is  boolean and no argument. extra information about the cover photo",source,source,source,source
130,Person.Cover.CoverPhoto_getHeight,get height from person cover cover photo the height of the imag. Return type is  int and no argument. the person's primary cover image,source,source,source,source
131,Person.Cover.CoverPhoto_getUrl,get url from person cover cover photo the url of the imag. Return type is String and no argument. the person's primary cover image,source,source,source,source
132,Person.Cover.CoverPhoto_getWidth,get width from person cover cover photo the width of the imag. Return type is  int and no argument. the person's primary cover image,source,source,source,source
133,Person.Cover.CoverPhoto_hasHeight,"has height from person cover cover photo indicates whether the ""height"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
134,Person.Cover.CoverPhoto_hasUrl,"has url from person cover cover photo indicates whether the ""url"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
135,Person.Cover.CoverPhoto_hasWidth,"has width from person cover cover photo indicates whether the ""width"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
136,Person.Image_getUrl,get url from person image the url of the person's profile phot. Return type is String and no argument. the representation of the person's profile photo,source,source,source,source
137,Person.Image_hasUrl,"has url from person image indicates whether the ""url"" field is explicitly set to a valu. Return type is  boolean and no argument. the representation of the person's profile photo",source,source,source,neither
138,Person.Name_getFamilyName,get family name from person name the family nam. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
139,Person.Name_getFormatted,"get formatted from person name the full name of this person, including middle names, suffixes, et. Return type is String and no argument. an object representation of the individual components of a person's name",source,source,source,source
140,Person.Name_getGivenName,get given name from person name the given nam. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
141,Person.Name_getHonorificPrefix,get honorific prefix from person name the honorific prefixe. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
142,Person.Name_getHonorificSuffix,get honorific suffix from person name the honorific suffixe. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
143,Person.Name_getMiddleName,get middle name from person name the middle name of this perso. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
144,Person.Name_hasFamilyName,"has family name from person name indicates whether the ""family name"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,source,neither,neither
145,Person.Name_hasFormatted,"has formatted from person name indicates whether the ""formatted"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,neither,neither
146,Person.Name_hasGivenName,"has given name from person name indicates whether the ""given name"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,neither,neither
147,Person.Name_hasHonorificPrefix,"has honorific prefix from person name indicates whether the ""honorific prefix"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,neither,neither
148,Person.Name_hasHonorificSuffix,"has honorific suffix from person name indicates whether the ""honorific suffix"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,source,neither
149,Person.Name_hasMiddleName,"has middle name from person name indicates whether the ""middle name"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,source,neither
150,Person.Organizations_getDepartment,get department from person organizations the department within the organizatio. Return type is String and no argument.,source,source,source,neither
151,Person.Organizations_getDescription,get description from person organizations a short description of the person's role in this organizatio. Return type is String and no argument.,source,source,source,source
152,Person.Organizations_getEndDate,get end date from person organizations the date that the person left this organizatio. Return type is String and no argument.,source,source,source,source
153,Person.Organizations_getLocation,get location from person organizations the location of this organizatio. Return type is String and no argument.,source,source,source,source
154,Person.Organizations_getName,get name from person organizations the name of the organizatio. Return type is String and no argument.,source,source,source,source
155,Person.Organizations_getStartDate,get start date from person organizations the date that the person joined this organizatio. Return type is String and no argument.,source,source,source,source
156,Person.Organizations_getTitle,get title from person organizations the person's job title or role within the organizatio. Return type is String and no argument.,source,source,source,source
157,Person.Organizations_getType,get type from person organizations the type of organizatio. Return type is  int and no argument.,source,source,source,neither
158,Person.Organizations_hasDepartment,"has department from person organizations indicates whether the ""department"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
159,Person.Organizations_hasDescription,"has description from person organizations indicates whether the ""description"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
160,Person.Organizations_hasEndDate,"has end date from person organizations indicates whether the ""end date"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,neither,neither
161,Person.Organizations_hasLocation,"has location from person organizations indicates whether the ""location"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
162,Person.Organizations_hasName,"has name from person organizations indicates whether the ""name"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
163,Person.Organizations_hasPrimary,"has primary from person organizations indicates whether the ""primary"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,source
164,Person.Organizations_hasStartDate,"has start date from person organizations indicates whether the ""start date"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
165,Person.Organizations_hasTitle,"has title from person organizations indicates whether the ""title"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
166,Person.Organizations_hasType,"has type from person organizations indicates whether the ""type"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,neither,neither
167,Person.Organizations_isPrimary,"is primary from person organizations if ""true"", indicates this organization is the person's primary one, which is typically interpreted as the current on. Return type is  boolean and no argument.",source,neither,neither,neither
168,Person.PlacesLived_getValue,get value from person places lived a place where this person has live. Return type is String and no argument.,source,source,source,source
169,Person.PlacesLived_hasPrimary,"has primary from person places lived indicates whether the ""primary"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,neither,neither
170,Person.PlacesLived_hasValue,"has value from person places lived indicates whether the ""value"" field is explicitly set to a valu. Return type is  boolean and no argument.",neither,source,neither,neither
171,Person.PlacesLived_isPrimary,"is primary from person places lived if ""true"", this place of residence is this person's primary residenc. Return type is  boolean and no argument.",neither,neither,neither,neither
172,Person.Urls_getLabel,get label from person urls the label of the ur. Return type is String and no argument.,source,source,source,source
173,Person.Urls_getType,get type from person urls the type of ur. Return type is  int and no argument.,source,source,source,source
174,Person.Urls_getValue,get value from person urls the url valu. Return type is String and no argument.,source,source,source,source
175,Person.Urls_hasLabel,"has label from person urls indicates whether the ""label"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
176,Person.Urls_hasType,"has type from person urls indicates whether the ""type"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
177,Person.Urls_hasValue,"has value from person urls indicates whether the ""value"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
178,Person.AgeRange_getMax,"get max from person age range the age range's upper bound, if an. Return type is  int and no argument. the age range of the person",source,source,source,source
179,Person.AgeRange_getMin,"get min from person age range the age range's lower bound, if an. Return type is  int and no argument. the age range of the person",source,source,source,source
180,Person.AgeRange_hasMax,"has max from person age range indicates whether the ""max"" field is explicitly set to a valu. Return type is  boolean and no argument. the age range of the person",source,source,source,source
181,Person.AgeRange_hasMin,"has min from person age range indicates whether the ""min"" field is explicitly set to a valu. Return type is  boolean and no argument. the age range of the person",source,source,neither,source
182,Person.Cover_getCoverInfo,get cover info from person cover extra information about the cover phot. Return type is Person. Cover. Cover Info and no argument. the cover photo content,source,source,source,neither
183,Person.Cover_getCoverPhoto,get cover photo from person cover the person's primary cover imag. Return type is Person. Cover. Cover Photo and no argument. the cover photo content,source,source,source,neither
184,Person.Cover_getLayout,get layout from person cover the layout of the cover ar. Return type is  int and no argument. the cover photo content,source,source,source,neither
185,Person.Cover_hasCoverInfo,"has cover info from person cover indicates whether the ""cover info"" field is explicitly set to a valu. Return type is  boolean and no argument. the cover photo content",source,source,source,neither
186,Person.Cover_hasCoverPhoto,"has cover photo from person cover indicates whether the ""cover photo"" field is explicitly set to a valu. Return type is  boolean and no argument. the cover photo content",source,source,source,neither
187,Person.Cover_hasLayout,"has layout from person cover indicates whether the ""layout"" field is explicitly set to a valu. Return type is  boolean and no argument. the cover photo content",neither,source,neither,neither
188,Person.Image_getUrl,get url from person image the url of the person's profile phot. Return type is String and no argument. the representation of the person's profile photo,source,source,source,source
189,Person.Image_hasUrl,"has url from person image indicates whether the ""url"" field is explicitly set to a valu. Return type is  boolean and no argument. the representation of the person's profile photo",source,source,source,neither
190,Person.Name_getFamilyName,get family name from person name the family nam. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
191,Person.Name_getFormatted,"get formatted from person name the full name of this person, including middle names, suffixes, et. Return type is String and no argument. an object representation of the individual components of a person's name",source,source,source,source
192,Person.Name_getGivenName,get given name from person name the given nam. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
193,Person.Name_getHonorificPrefix,get honorific prefix from person name the honorific prefixe. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
194,Person.Name_getHonorificSuffix,get honorific suffix from person name the honorific suffixe. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
195,Person.Name_getMiddleName,get middle name from person name the middle name of this perso. Return type is String and no argument. an object representation of the individual components of a person's name,source,source,source,source
196,Person.Name_hasFamilyName,"has family name from person name indicates whether the ""family name"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,source,neither,neither
197,Person.Name_hasFormatted,"has formatted from person name indicates whether the ""formatted"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,neither,neither
198,Person.Name_hasGivenName,"has given name from person name indicates whether the ""given name"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,neither,neither
199,Person.Name_hasHonorificPrefix,"has honorific prefix from person name indicates whether the ""honorific prefix"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,neither,neither
200,Person.Name_hasHonorificSuffix,"has honorific suffix from person name indicates whether the ""honorific suffix"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,source,neither
201,Person.Name_hasMiddleName,"has middle name from person name indicates whether the ""middle name"" field is explicitly set to a valu. Return type is  boolean and no argument. an object representation of the individual components of a person's name",neither,neither,source,neither
202,Person.Organizations_getDepartment,get department from person organizations the department within the organizatio. Return type is String and no argument.,source,source,source,neither
203,Person.Organizations_getDescription,get description from person organizations a short description of the person's role in this organizatio. Return type is String and no argument.,source,source,source,source
204,Person.Organizations_getEndDate,get end date from person organizations the date that the person left this organizatio. Return type is String and no argument.,source,source,source,source
205,Person.Organizations_getLocation,get location from person organizations the location of this organizatio. Return type is String and no argument.,source,source,source,source
206,Person.Organizations_getName,get name from person organizations the name of the organizatio. Return type is String and no argument.,source,source,source,source
207,Person.Organizations_getStartDate,get start date from person organizations the date that the person joined this organizatio. Return type is String and no argument.,source,source,source,source
208,Person.Organizations_getTitle,get title from person organizations the person's job title or role within the organizatio. Return type is String and no argument.,source,source,source,source
209,Person.Organizations_getType,get type from person organizations the type of organizatio. Return type is  int and no argument.,source,source,source,neither
210,Person.Organizations_hasDepartment,"has department from person organizations indicates whether the ""department"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
211,Person.Organizations_hasDescription,"has description from person organizations indicates whether the ""description"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
212,Person.Organizations_hasEndDate,"has end date from person organizations indicates whether the ""end date"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,neither,neither
213,Person.Organizations_hasLocation,"has location from person organizations indicates whether the ""location"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
214,Person.Organizations_hasName,"has name from person organizations indicates whether the ""name"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
215,Person.Organizations_hasPrimary,"has primary from person organizations indicates whether the ""primary"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,source
216,Person.Organizations_hasStartDate,"has start date from person organizations indicates whether the ""start date"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
217,Person.Organizations_hasTitle,"has title from person organizations indicates whether the ""title"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
218,Person.Organizations_hasType,"has type from person organizations indicates whether the ""type"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,neither,neither
219,Person.Organizations_isPrimary,"is primary from person organizations if ""true"", indicates this organization is the person's primary one, which is typically interpreted as the current on. Return type is  boolean and no argument.",source,neither,neither,neither
220,Person.PlacesLived_getValue,get value from person places lived a place where this person has live. Return type is String and no argument.,source,source,source,source
221,Person.PlacesLived_hasPrimary,"has primary from person places lived indicates whether the ""primary"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,neither,neither
222,Person.PlacesLived_hasValue,"has value from person places lived indicates whether the ""value"" field is explicitly set to a valu. Return type is  boolean and no argument.",neither,source,neither,neither
223,Person.PlacesLived_isPrimary,"is primary from person places lived if ""true"", this place of residence is this person's primary residenc. Return type is  boolean and no argument.",neither,neither,neither,neither
224,Person.Urls_getLabel,get label from person urls the label of the ur. Return type is String and no argument.,source,source,source,source
225,Person.Urls_getType,get type from person urls the type of ur. Return type is  int and no argument.,source,source,source,source
226,Person.Urls_getValue,get value from person urls the url valu. Return type is String and no argument.,source,source,source,source
227,Person.Urls_hasLabel,"has label from person urls indicates whether the ""label"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
228,Person.Urls_hasType,"has type from person urls indicates whether the ""type"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
229,Person.Urls_hasValue,"has value from person urls indicates whether the ""value"" field is explicitly set to a valu. Return type is  boolean and no argument.",source,source,source,neither
230,Person.Cover.CoverInfo_getLeftImageOffset,get left image offset from person cover cover info the difference between the left position of the cover image and the actual displayed cover imag. Return type is  int and no argument. extra information about the cover photo,source,source,source,source
231,Person.Cover.CoverInfo_getTopImageOffset,get top image offset from person cover cover info the difference between the top position of the cover image and the actual displayed cover imag. Return type is  int and no argument. extra information about the cover photo,source,source,source,source
232,Person.Cover.CoverInfo_hasLeftImageOffset,"has left image offset from person cover cover info indicates whether the ""left image offset"" field is explicitly set to a valu. Return type is  boolean and no argument. extra information about the cover photo",source,source,source,neither
233,Person.Cover.CoverInfo_hasTopImageOffset,"has top image offset from person cover cover info indicates whether the ""top image offset"" field is explicitly set to a valu. Return type is  boolean and no argument. extra information about the cover photo",source,source,source,source
234,Person.Cover.CoverPhoto_getHeight,get height from person cover cover photo the height of the imag. Return type is  int and no argument. the person's primary cover image,source,source,source,source
235,Person.Cover.CoverPhoto_getUrl,get url from person cover cover photo the url of the imag. Return type is String and no argument. the person's primary cover image,source,source,source,source
236,Person.Cover.CoverPhoto_getWidth,get width from person cover cover photo the width of the imag. Return type is  int and no argument. the person's primary cover image,source,source,source,source
237,Person.Cover.CoverPhoto_hasHeight,"has height from person cover cover photo indicates whether the ""height"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
238,Person.Cover.CoverPhoto_hasUrl,"has url from person cover cover photo indicates whether the ""url"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
239,Person.Cover.CoverPhoto_hasWidth,"has width from person cover cover photo indicates whether the ""width"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
240,Person.Cover.CoverInfo_getLeftImageOffset,get left image offset from person cover cover info the difference between the left position of the cover image and the actual displayed cover imag. Return type is  int and no argument. extra information about the cover photo,source,source,source,source
241,Person.Cover.CoverInfo_getTopImageOffset,get top image offset from person cover cover info the difference between the top position of the cover image and the actual displayed cover imag. Return type is  int and no argument. extra information about the cover photo,source,source,source,source
242,Person.Cover.CoverInfo_hasLeftImageOffset,"has left image offset from person cover cover info indicates whether the ""left image offset"" field is explicitly set to a valu. Return type is  boolean and no argument. extra information about the cover photo",source,source,source,neither
243,Person.Cover.CoverInfo_hasTopImageOffset,"has top image offset from person cover cover info indicates whether the ""top image offset"" field is explicitly set to a valu. Return type is  boolean and no argument. extra information about the cover photo",source,source,source,source
244,Person.Cover.CoverPhoto_getHeight,get height from person cover cover photo the height of the imag. Return type is  int and no argument. the person's primary cover image,source,source,source,source
245,Person.Cover.CoverPhoto_getUrl,get url from person cover cover photo the url of the imag. Return type is String and no argument. the person's primary cover image,source,source,source,source
246,Person.Cover.CoverPhoto_getWidth,get width from person cover cover photo the width of the imag. Return type is  int and no argument. the person's primary cover image,source,source,source,source
247,Person.Cover.CoverPhoto_hasHeight,"has height from person cover cover photo indicates whether the ""height"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
248,Person.Cover.CoverPhoto_hasUrl,"has url from person cover cover photo indicates whether the ""url"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
249,Person.Cover.CoverPhoto_hasWidth,"has width from person cover cover photo indicates whether the ""width"" field is explicitly set to a valu. Return type is  boolean and no argument. the person's primary cover image",source,source,source,neither
250,CountrySpecification_getCountryCode,get country code from country specification . parcelable representing a country,source,source,source,source
251,CountrySpecification_writeToParcel,write to parcel from country specification . parcelable representing a country,sink,sink,sink,sink
252,UserAddress_fromIntent,from intent from user address . parcelable representing an address,sink,sink,sink,sink
253,UserAddress_getAddress1,get address1 from user address . parcelable representing an address,source,source,source,source
254,UserAddress_getAddress2,get address2 from user address . parcelable representing an address,source,source,source,source
255,UserAddress_getAddress3,get address3 from user address . parcelable representing an address,source,source,source,source
256,UserAddress_getAddress4,get address4 from user address . parcelable representing an address,source,source,source,source
257,UserAddress_getAddress5,get address5 from user address . parcelable representing an address,source,source,source,source
258,UserAddress_getAdministrativeArea,get administrative area from user address . parcelable representing an address,source,source,source,source
259,UserAddress_getCompanyName,get company name from user address . parcelable representing an address,source,source,source,source
260,UserAddress_getCountryCode,get country code from user address . parcelable representing an address,source,source,source,source
261,UserAddress_getEmailAddress,get email address from user address . parcelable representing an address,source,source,source,source
262,UserAddress_getLocality,get locality from user address . parcelable representing an address,source,source,source,source
263,UserAddress_getName,get name from user address . parcelable representing an address,source,source,source,source
264,UserAddress_getPhoneNumber,get phone number from user address . parcelable representing an address,source,source,source,source
265,UserAddress_getPostalCode,get postal code from user address . parcelable representing an address,source,source,source,source
266,UserAddress_getSortingCode,get sorting code from user address . parcelable representing an address,source,source,source,source
267,UserAddress_isPostBox,is post box from user address . parcelable representing an address,sink,neither,neither,sink
268,UserAddress_writeToParcel,write to parcel from user address . parcelable representing an address,sink,sink,sink,sink
269,AdManagerAdRequest_getCustomTargeting,get custom targeting from ad manager ad request returns the custom targeting parameter. Return type is Bundle and no argument. an ad manager ad request contains targeting information used to fetch an ad from google ad manager,source,source,source,source
270,AdManagerAdRequest_getPublisherProvidedId,"get publisher provided id from ad manager ad request returns the identifier used for frequency capping, audience segmentation and targeting, sequential ad rotation, and other audience-based ad delivery controls across device. Return type is String and no argument. an ad manager ad request contains targeting information used to fetch an ad from google ad manager",source,source,source,source
271,AdManagerAdRequest.Builder_addCategoryExclusion,add category exclusion from ad manager ad request builder sets a slot-level ad category exclusion labe. Return type is Ad Manager Ad Request. Builder and parameters are string. builds an ad manager ad request,neither,neither,neither,neither
272,AdManagerAdRequest.Builder_addCustomTargeting,add custom targeting from ad manager ad request builder adds a custom targeting paramete. Return type is Ad Manager Ad Request. Builder and parameters are string list. builds an ad manager ad request,neither,neither,neither,neither
273,AdManagerAdRequest.Builder_addCustomTargeting,add custom targeting from ad manager ad request builder adds a custom targeting paramete. Return type is Ad Manager Ad Request. Builder and parameters are string string. builds an ad manager ad request,sink,neither,neither,neither
274,AdManagerAdRequest.Builder_build,build from ad manager ad request builder constructs an ad manager ad request with the specified attribute. Return type is Ad Manager Ad Request and no argument. builds an ad manager ad request,neither,neither,neither,neither
275,AdManagerAdRequest.Builder_setPublisherProvidedId,"set publisher provided id from ad manager ad request builder sets an identifier for use in frequency capping, audience segmentation and targeting, sequential ad rotation, and other audience-based ad delivery controls across device. Return type is Ad Manager Ad Request. Builder and parameters are string. builds an ad manager ad request",sink,sink,sink,sink
276,AdManagerAdView_getAdSizes,get ad sizes from ad manager ad view returns the ad sizes supported by this ad manager ad vie. Return type is Ad Size[] and no argument. the view to display banner ads for use with google ad manager,source,source,source,neither
277,AdManagerAdView_getAppEventListener,get app event listener from ad manager ad view returns the app event listener for this ad manager ad vie. Return type is App Event Listener and no argument. the view to display banner ads for use with google ad manager,source,source,source,neither
278,AdManagerAdView_getVideoController,get video controller from ad manager ad view returns the video controller for this ad vie. Return type is Video Controller and no argument. the view to display banner ads for use with google ad manager,source,source,source,source
279,AdManagerAdView_getVideoOptions,get video options from ad manager ad view returns the video options for this ad vie. Return type is Video Options and no argument. the view to display banner ads for use with google ad manager,source,source,source,source
280,AdManagerAdView_loadAd,load ad from ad manager ad view loads an a. Return type is void and parameters are ad manager ad request. the view to display banner ads for use with google ad manager,neither,neither,neither,neither
281,AdManagerAdView_recordManualImpression,record manual impression from ad manager ad view records a manual impressio. Return type is void and no argument. the view to display banner ads for use with google ad manager,sink,neither,neither,sink
282,AdManagerAdView_setAdSizes,set ad sizes from ad manager ad view sets the supported sizes of the banner a. Return type is void and parameters are ad size   . the view to display banner ads for use with google ad manager,sink,sink,sink,sink
283,AdManagerAdView_setAppEventListener,set app event listener from ad manager ad view sets an app event listener for this ad manager ad vie. Return type is void and parameters are app event listener. the view to display banner ads for use with google ad manager,sink,sink,sink,neither
284,AdManagerAdView_setManualImpressionsEnabled,set manual impressions enabled from ad manager ad view indicates whether you intend to record impressions manually for this ad manager ad vie. Return type is void and parameters are boolean. the view to display banner ads for use with google ad manager,sink,sink,sink,sink
285,AdManagerAdView_setVideoOptions,set video options from ad manager ad view sets the video options for this ad vie. Return type is void and parameters are video options. the view to display banner ads for use with google ad manager,sink,sink,sink,sink
286,AdManagerInterstitialAd_getAppEventListener,"get app event listener from ad manager interstitial ad returns the app event listener for this ad manager interstitial a. Return type is App Event Listener and no argument. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load for google ad manager publishers",source,source,source,neither
287,AdManagerInterstitialAd_load,"load from ad manager interstitial ad loads an ad manager interstitial a. Return type is  void and parameters are context string ad manager ad request ad manager interstitial ad load callback. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load for google ad manager publishers",neither,neither,neither,neither
288,AdManagerInterstitialAd_setAppEventListener,"set app event listener from ad manager interstitial ad sets an app event listener for this ad manager interstitial a. Return type is  void and parameters are app event listener. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load for google ad manager publishers",sink,sink,sink,neither
289,AppEventListener_onAppEvent,on app event from app event listener called when an app event occur. Return type is  void and parameters are string string. a listener interface for app events triggered by ads,neither,neither,neither,neither
290,AdManagerAdRequest.Builder_addCategoryExclusion,add category exclusion from ad manager ad request builder sets a slot-level ad category exclusion labe. Return type is Ad Manager Ad Request. Builder and parameters are string. builds an ad manager ad request,neither,neither,neither,neither
291,AdManagerAdRequest.Builder_addCustomTargeting,add custom targeting from ad manager ad request builder adds a custom targeting paramete. Return type is Ad Manager Ad Request. Builder and parameters are string list. builds an ad manager ad request,neither,neither,neither,neither
292,AdManagerAdRequest.Builder_addCustomTargeting,add custom targeting from ad manager ad request builder adds a custom targeting paramete. Return type is Ad Manager Ad Request. Builder and parameters are string string. builds an ad manager ad request,sink,neither,neither,neither
293,AdManagerAdRequest.Builder_build,build from ad manager ad request builder constructs an ad manager ad request with the specified attribute. Return type is Ad Manager Ad Request and no argument. builds an ad manager ad request,neither,neither,neither,neither
294,AdManagerAdRequest.Builder_setPublisherProvidedId,"set publisher provided id from ad manager ad request builder sets an identifier for use in frequency capping, audience segmentation and targeting, sequential ad rotation, and other audience-based ad delivery controls across device. Return type is Ad Manager Ad Request. Builder and parameters are string. builds an ad manager ad request",sink,sink,sink,sink
295,MediaView_setImageScaleType,set image scale type from media view sets the image view scale type when image is rendered in media vie. Return type is void and parameters are image view scale type. view for displaying native app install ad media content,sink,sink,sink,sink
296,MediaView_setMediaContent,set media content from media view sets the media content to be displayed in the media vie. Return type is void and parameters are media content. view for displaying native app install ad media content,sink,sink,sink,sink
297,NativeAd_cancelUnconfirmedClick,cancel unconfirmed click from native ad cancels an unconfirmed click that was previously recorded for the a. Return type is  void and no argument. a google native ad,neither,neither,neither,neither
298,NativeAd_destroy,destroy from native ad destroys the ad objec. Return type is  void and no argument. a google native ad,neither,neither,neither,neither
299,NativeAd_enableCustomClickGesture,enable custom click gesture from native ad enables publishers reporting clicks using custom gestures for this native a. Return type is  void and no argument. a google native ad,neither,neither,neither,neither
300,NativeAd_getAdChoicesInfo,get ad choices info from native ad returns the information for the ad choices attributio. Return type is Native Ad. Ad Choices Info and no argument. a google native ad,source,source,source,source
301,NativeAd_getAdvertiser,get advertiser from native ad returns text that identifies the advertise. Return type is String and no argument. a google native ad,source,source,source,source
302,NativeAd_getBody,get body from native ad returns body tex. Return type is String and no argument. a google native ad,source,source,source,source
303,NativeAd_getCallToAction,get call to action from native ad returns the ad's call to actio. Return type is String and no argument. a google native ad,source,source,source,source
304,NativeAd_getExtras,get extras from native ad returns a bundle of extra assets associated with the native a. Return type is Bundle and no argument. a google native ad,source,source,source,source
305,NativeAd_getHeadline,get headline from native ad returns the primary text headlin. Return type is String and no argument. a google native ad,source,source,source,source
306,NativeAd_getIcon,get icon from native ad returns a small image identifying the advertise. Return type is Native Ad. Image and no argument. a google native ad,source,source,source,source
307,NativeAd_getImages,get images from native ad returns a list of large image. Return type is List and no argument. a google native ad,source,source,source,source
308,NativeAd_getMediaContent,get media content from native ad returns the media content associated with this a. Return type is Media Content and no argument. a google native ad,source,source,source,source
309,NativeAd_getMuteThisAdReasons,get mute this ad reasons from native ad returns mute this ad reasons available for this a. Return type is List and no argument. a google native ad,source,source,source,source
310,NativeAd_getPrice,"get price from native ad for ads about apps, returns a string representing how much the app cost. Return type is String and no argument. a google native ad",source,source,source,source
311,NativeAd_getResponseInfo,get response info from native ad returns the response info object for the loaded a. Return type is Response Info and no argument. a google native ad,source,source,source,source
312,NativeAd_getStarRating,"get star rating from native ad for ads about apps, returns a star rating from 0 to 5 representing how many stars the app has in the store offering i. Return type is Double and no argument. a google native ad",source,source,source,source
313,NativeAd_getStore,"get store from native ad for ads about apps, returns the name of the store offering the app for downloa. Return type is String and no argument. a google native ad",source,source,source,source
314,NativeAd_isCustomClickGestureEnabled,is custom click gesture enabled from native ad indicates whether clicks can be reported using custom click gesture. Return type is  boolean and no argument. a google native ad,neither,neither,neither,neither
315,NativeAd_isCustomMuteThisAdEnabled,is custom mute this ad enabled from native ad returns true if this ad can be muted programmaticall. Return type is  boolean and no argument. a google native ad,neither,neither,neither,neither
316,NativeAd_muteThisAd,mute this ad from native ad mutes this ad programmaticall. Return type is  void and parameters are mute this ad reason. a google native ad,neither,neither,neither,neither
317,NativeAd_performClick,perform click from native ad should be called when the user has clicked on the a. Return type is  void and parameters are bundle. a google native ad,neither,neither,neither,neither
318,NativeAd_recordCustomClickGesture,record custom click gesture from native ad reports clicks for this native ad using custom click gestur. Return type is  void and no argument. a google native ad,neither,neither,neither,neither
319,NativeAd_recordImpression,record impression from native ad should be called when the ad is first displaye. Return type is  boolean and parameters are bundle. a google native ad,neither,neither,neither,neither
320,NativeAd_reportTouchEvent,report touch event from native ad should be called when a touch event happens on the a. Return type is  void and parameters are bundle. a google native ad,neither,neither,neither,neither
321,NativeAd_setMuteThisAdListener,set mute this ad listener from native ad sets the mute this ad listener for the a. Return type is  void and parameters are mute this ad listener. a google native ad,sink,sink,sink,sink
322,NativeAd_setOnPaidEventListener,set on paid event listener from native ad register a callback to be invoked when this ad is estimated to have earned mone. Return type is  void and parameters are on paid event listener. a google native ad,sink,neither,sink,neither
323,NativeAd_setUnconfirmedClickListener,set unconfirmed click listener from native ad sets the unconfirmed click listener for the a. Return type is  void and parameters are native ad unconfirmed click listener. a google native ad,sink,sink,sink,sink
324,NativeAd.AdChoicesInfo_getImages,get images from native ad ad choices info returns a list of images for the attributio. Return type is List and no argument. attribution information,source,source,source,neither
325,NativeAd.AdChoicesInfo_getText,get text from native ad ad choices info returns the attribution tex. Return type is Char Sequence and no argument. attribution information,source,source,source,source
326,NativeAd.Image_getDrawable,get drawable from native ad image returns the drawable representing the imag. Return type is Drawable and no argument. a native ad image asset,source,source,source,source
327,NativeAd.Image_getScale,"get scale from native ad image returns the scale for this image, which denotes the ratio of pixels to d. Return type is  double and no argument. a native ad image asset",source,source,source,source
328,NativeAd.Image_getUri,get uri from native ad image returns the uri for this imag. Return type is Uri and no argument. a native ad image asset,source,source,source,source
329,NativeAdOptions_getAdChoicesPlacement,get ad choices placement from native ad options returns the ad choices placemen. Return type is int and no argument. used to configure native ad requests,source,source,source,neither
330,NativeAdOptions_getMediaAspectRatio,get media aspect ratio from native ad options returns the aspect ratio of the media to be returne. Return type is int and no argument. used to configure native ad requests,source,source,source,source
331,NativeAdOptions_getVideoOptions,get video options from native ad options returns the video options objec. Return type is Video Options and no argument. used to configure native ad requests,source,source,source,source
332,NativeAdOptions_shouldRequestMultipleImages,should request multiple images from native ad options returns true if multiple images are requeste. Return type is boolean and no argument. used to configure native ad requests,neither,neither,source,neither
333,NativeAdOptions_shouldReturnUrlsForImageAssets,should return urls for image assets from native ad options returns true if urls will be returned for image assets instead of images themselve. Return type is boolean and no argument. used to configure native ad requests,source,source,source,neither
334,NativeAdOptions.Builder_build,build from native ad options builder constructs a native ad options object with the specified attribute. Return type is Native Ad Options and no argument. builder class for native ad options,neither,neither,neither,neither
335,NativeAdOptions.Builder_setAdChoicesPlacement,set ad choices placement from native ad options builder sets the placement of ad choices ico. Return type is Native Ad Options. Builder and parameters are int. builder class for native ad options,sink,sink,sink,sink
336,NativeAdOptions.Builder_setMediaAspectRatio,set media aspect ratio from native ad options builder . builder class for native ad options,sink,sink,sink,sink
337,NativeAdOptions.Builder_setRequestCustomMuteThisAd,set request custom mute this ad from native ad options builder set this boolean to true to request a custom implementation for the mute this ad featur. Return type is Native Ad Options. Builder and parameters are boolean. builder class for native ad options,sink,sink,sink,sink
338,NativeAdOptions.Builder_setRequestMultipleImages,set request multiple images from native ad options builder sets whether multiple images should be requested or no. Return type is Native Ad Options. Builder and parameters are boolean. builder class for native ad options,sink,sink,sink,sink
339,NativeAdOptions.Builder_setReturnUrlsForImageAssets,set return urls for image assets from native ad options builder sets whether u r ls alone should be returned for image asset. Return type is Native Ad Options. Builder and parameters are boolean. builder class for native ad options,sink,sink,sink,sink
340,NativeAdOptions.Builder_setVideoOptions,set video options from native ad options builder sets the video options objec. Return type is Native Ad Options. Builder and parameters are video options. builder class for native ad options,sink,sink,sink,sink
341,NativeAdView_destroy,destroy from native ad view destroys the native ad vie. Return type is void and no argument. root view for native ad,neither,neither,neither,neither
342,NativeAdView_getAdChoicesView,get ad choices view from native ad view returns the view associated with ad choices conten. Return type is Ad Choices View and no argument. root view for native ad,source,source,source,neither
343,NativeAdView_getAdvertiserView,get advertiser view from native ad view returns the view associated with the advertiser asse. Return type is View and no argument. root view for native ad,source,source,source,source
344,NativeAdView_getBodyView,get body view from native ad view returns the view associated with the body asse. Return type is View and no argument. root view for native ad,source,source,source,source
345,NativeAdView_getCallToActionView,get call to action view from native ad view returns the view associated with the call to action asse. Return type is View and no argument. root view for native ad,source,source,source,source
346,NativeAdView_getHeadlineView,get headline view from native ad view returns the view associated with the headline asse. Return type is View and no argument. root view for native ad,source,source,source,source
347,NativeAdView_getIconView,get icon view from native ad view returns the view associated with the icon asse. Return type is View and no argument. root view for native ad,source,source,source,source
348,NativeAdView_getImageView,get image view from native ad view returns the view associated with the image asse. Return type is View and no argument. root view for native ad,source,source,source,source
349,NativeAdView_getMediaView,get media view from native ad view returns the view associated with the media conten. Return type is Media View and no argument. root view for native ad,source,source,source,source
350,NativeAdView_getPriceView,get price view from native ad view returns the view associated with the price asse. Return type is View and no argument. root view for native ad,source,source,source,source
351,NativeAdView_getStarRatingView,get star rating view from native ad view returns the view associated with the star rating asse. Return type is View and no argument. root view for native ad,source,source,source,neither
352,NativeAdView_getStoreView,get store view from native ad view returns the view associated with the store asse. Return type is View and no argument. root view for native ad,source,source,source,source
353,NativeAdView_setAdChoicesView,set ad choices view from native ad view sets an ad choices view for displaying ad choices conten. Return type is void and parameters are ad choices view. root view for native ad,sink,sink,sink,sink
354,NativeAdView_setAdvertiserView,set advertiser view from native ad view sets a view for the advertiser asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
355,NativeAdView_setBodyView,set body view from native ad view sets a view for the body asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
356,NativeAdView_setCallToActionView,set call to action view from native ad view sets a view for the call to action asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
357,NativeAdView_setClickConfirmingView,set click confirming view from native ad view sets the view that users will use to confirm their clickthrough. Return type is void and parameters are view. root view for native ad,sink,sink,sink,neither
358,NativeAdView_setHeadlineView,set headline view from native ad view sets a view for the headline asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
359,NativeAdView_setIconView,set icon view from native ad view sets a view for the icon asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
360,NativeAdView_setImageView,set image view from native ad view sets a view for the image asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
361,NativeAdView_setMediaView,set media view from native ad view sets a media view for media conten. Return type is void and parameters are media view. root view for native ad,sink,sink,sink,sink
362,NativeAdView_setNativeAd,set native ad from native ad view sets the native ad that this view is currently displayin. Return type is void and parameters are native ad. root view for native ad,sink,sink,sink,sink
363,NativeAdView_setPriceView,set price view from native ad view sets a view for the price asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
364,NativeAdView_setStarRatingView,set star rating view from native ad view sets a view for the star rating asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
365,NativeAdView_setStoreView,set store view from native ad view sets a view for the store asse. Return type is void and parameters are view. root view for native ad,sink,sink,sink,sink
366,NativeAdViewHolder_setClickConfirmingView,set click confirming view from native ad view holder sets the view that users will use to confirm their clickthrough. Return type is void and parameters are view. view holder for native ads which is an alternative way to show native ads,sink,sink,sink,sink
367,NativeAdViewHolder_setNativeAd,set native ad from native ad view holder sets the native ad that this view holder will sho. Return type is void and parameters are native ad. view holder for native ads which is an alternative way to show native ads,sink,sink,sink,sink
368,NativeAdViewHolder_unregisterNativeAd,unregister native ad from native ad view holder dissociate this view holder from the native ad it's currently showin. Return type is void and no argument. view holder for native ads which is an alternative way to show native ads,neither,neither,neither,neither
369,NativeAd.OnNativeAdLoadedListener_onNativeAdLoaded,on native ad loaded from native ad on native ad loaded listener called when a native ad has successfully loade. Return type is  void and parameters are native ad. interface definition for a callback to be invoked when a native ad has successfully loaded,neither,neither,neither,neither
370,NativeAd.UnconfirmedClickListener_onUnconfirmedClickCancelled,on unconfirmed click cancelled from native ad unconfirmed click listener called after on unconfirmed click receiv. Return type is  void and no argument. a listener interface apps can use to receive unconfirmed click events when using the confirmed click feature,neither,neither,neither,neither
371,NativeAd.UnconfirmedClickListener_onUnconfirmedClickReceived,on unconfirmed click received from native ad unconfirmed click listener called when a native ad object receives an unconfirmed clic. Return type is  void and parameters are string. a listener interface apps can use to receive unconfirmed click events when using the confirmed click feature,neither,neither,neither,neither
372,NativeCustomFormatAd_destroy,destroy from native custom format ad destroys the ad objec. Return type is  void and no argument. an ad manager custom native ad format,neither,neither,neither,neither
373,NativeCustomFormatAd_getAvailableAssetNames,get available asset names from native custom format ad returns a list of all available asset. Return type is List and no argument. an ad manager custom native ad format,source,source,source,neither
374,NativeCustomFormatAd_getCustomFormatId,get custom format id from native custom format ad returns the custom native ad format's id as defined in the ad manager u. Return type is String and no argument. an ad manager custom native ad format,source,source,source,source
375,NativeCustomFormatAd_getDisplayOpenMeasurement,get display open measurement from native custom format ad returns the native custom format ad display open measurement associated with this a. Return type is Native Custom Format Ad. Display Open Measurement and no argument. an ad manager custom native ad format,source,source,source,source
376,NativeCustomFormatAd_getImage,get image from native custom format ad returns an image asse. Return type is Native Ad. Image and parameters are string. an ad manager custom native ad format,source,source,source,source
377,NativeCustomFormatAd_getText,"get text from native custom format ad returns a string asset of numbers, u r ls, or other types other than an image asse. Return type is Char Sequence and parameters are string. an ad manager custom native ad format",source,source,source,source
378,NativeCustomFormatAd_getVideoController,get video controller from native custom format ad returns the video controller associated with this a. Return type is Video Controller and no argument. an ad manager custom native ad format,source,source,source,source
379,NativeCustomFormatAd_getVideoMediaView,get video media view from native custom format ad returns a media view containing this ad's video content or null if there is no video conten. Return type is Media View and no argument. an ad manager custom native ad format,source,source,source,source
380,NativeCustomFormatAd_performClick,perform click from native custom format ad called when the user has clicked on the a. Return type is  void and parameters are string. an ad manager custom native ad format,neither,neither,neither,neither
381,NativeCustomFormatAd_recordImpression,record impression from native custom format ad pings impression u r ls and records the impressio. Return type is  void and no argument. an ad manager custom native ad format,sink,sink,sink,sink
382,NativeCustomFormatAd.DisplayOpenMeasurement_setView,set view from native custom format ad display open measurement sets the view to track for viewability measurement. Return type is  void and parameters are view. an interface for open measurement in display ads,sink,sink,sink,sink
383,NativeCustomFormatAd.DisplayOpenMeasurement_start,start from native custom format ad display open measurement starts omid viewability measurements for display ad. Return type is  boolean and no argument. an interface for open measurement in display ads,neither,neither,neither,neither
384,NativeCustomFormatAd.OnCustomClickListener_onCustomClick,on custom click from native custom format ad on custom click listener called when a custom native ad format is clicke. Return type is  void and parameters are native custom format ad string. interface definition for a callback to be invoked when a user clicks on a custom native ad format,neither,neither,neither,neither
385,NativeCustomFormatAd.OnCustomFormatAdLoadedListener_onCustomFormatAdLoaded,on custom format ad loaded from native custom format ad on custom format ad loaded listener called when a custom native ad format has successfully loade. Return type is  void and parameters are native custom format ad. interface definition for a callback to be invoked when a custom native ad format has successfully loaded,neither,neither,neither,neither
386,NativeAd.AdChoicesInfo_getImages,get images from native ad ad choices info returns a list of images for the attributio. Return type is List and no argument. attribution information,source,source,source,neither
387,NativeAd.AdChoicesInfo_getText,get text from native ad ad choices info returns the attribution tex. Return type is Char Sequence and no argument. attribution information,source,source,source,source
388,NativeAd.Image_getDrawable,get drawable from native ad image returns the drawable representing the imag. Return type is Drawable and no argument. a native ad image asset,source,source,source,source
389,NativeAd.Image_getScale,"get scale from native ad image returns the scale for this image, which denotes the ratio of pixels to d. Return type is  double and no argument. a native ad image asset",source,source,source,source
390,NativeAd.Image_getUri,get uri from native ad image returns the uri for this imag. Return type is Uri and no argument. a native ad image asset,source,source,source,source
391,NativeAd.OnNativeAdLoadedListener_onNativeAdLoaded,on native ad loaded from native ad on native ad loaded listener called when a native ad has successfully loade. Return type is  void and parameters are native ad. interface definition for a callback to be invoked when a native ad has successfully loaded,neither,neither,neither,neither
392,NativeAd.UnconfirmedClickListener_onUnconfirmedClickCancelled,on unconfirmed click cancelled from native ad unconfirmed click listener called after on unconfirmed click receiv. Return type is  void and no argument. a listener interface apps can use to receive unconfirmed click events when using the confirmed click feature,neither,neither,neither,neither
393,NativeAd.UnconfirmedClickListener_onUnconfirmedClickReceived,on unconfirmed click received from native ad unconfirmed click listener called when a native ad object receives an unconfirmed clic. Return type is  void and parameters are string. a listener interface apps can use to receive unconfirmed click events when using the confirmed click feature,neither,neither,neither,neither
394,NativeAdOptions.Builder_build,build from native ad options builder constructs a native ad options object with the specified attribute. Return type is Native Ad Options and no argument. builder class for native ad options,neither,neither,neither,neither
395,NativeAdOptions.Builder_setAdChoicesPlacement,set ad choices placement from native ad options builder sets the placement of ad choices ico. Return type is Native Ad Options. Builder and parameters are int. builder class for native ad options,sink,sink,sink,sink
396,NativeAdOptions.Builder_setMediaAspectRatio,set media aspect ratio from native ad options builder . builder class for native ad options,sink,sink,sink,sink
397,NativeAdOptions.Builder_setRequestCustomMuteThisAd,set request custom mute this ad from native ad options builder set this boolean to true to request a custom implementation for the mute this ad featur. Return type is Native Ad Options. Builder and parameters are boolean. builder class for native ad options,sink,sink,sink,sink
398,NativeAdOptions.Builder_setRequestMultipleImages,set request multiple images from native ad options builder sets whether multiple images should be requested or no. Return type is Native Ad Options. Builder and parameters are boolean. builder class for native ad options,sink,sink,sink,sink
399,NativeAdOptions.Builder_setReturnUrlsForImageAssets,set return urls for image assets from native ad options builder sets whether u r ls alone should be returned for image asset. Return type is Native Ad Options. Builder and parameters are boolean. builder class for native ad options,sink,sink,sink,sink
400,NativeAdOptions.Builder_setVideoOptions,set video options from native ad options builder sets the video options objec. Return type is Native Ad Options. Builder and parameters are video options. builder class for native ad options,sink,sink,sink,sink
401,NativeCustomFormatAd.DisplayOpenMeasurement_setView,set view from native custom format ad display open measurement sets the view to track for viewability measurement. Return type is  void and parameters are view. an interface for open measurement in display ads,sink,sink,sink,sink
402,NativeCustomFormatAd.DisplayOpenMeasurement_start,start from native custom format ad display open measurement starts omid viewability measurements for display ad. Return type is  boolean and no argument. an interface for open measurement in display ads,neither,neither,neither,neither
403,NativeCustomFormatAd.OnCustomClickListener_onCustomClick,on custom click from native custom format ad on custom click listener called when a custom native ad format is clicke. Return type is  void and parameters are native custom format ad string. interface definition for a callback to be invoked when a user clicks on a custom native ad format,neither,neither,neither,neither
404,NativeCustomFormatAd.OnCustomFormatAdLoadedListener_onCustomFormatAdLoaded,on custom format ad loaded from native custom format ad on custom format ad loaded listener called when a custom native ad format has successfully loade. Return type is  void and parameters are native custom format ad. interface definition for a callback to be invoked when a custom native ad format has successfully loaded,neither,neither,neither,neither
405,Auth.AuthCredentialsOptions_equals,equals from auth auth credentials options . this class is deprecated  please use credentials options instead,neither,neither,source,neither
406,Auth.AuthCredentialsOptions_hashCode,hash code from auth auth credentials options . this class is deprecated  please use credentials options instead,neither,neither,neither,neither
407,Auth.AuthCredentialsOptions.Builder_forceEnableSaveDialog,force enable save dialog from auth auth credentials options builder specifies that the save confirmation dialog should always be shown when require. Return type is Auth. Auth Credentials Options. Builder and no argument. this class is deprecated  please use credentials options builder instead,sink,sink,sink,neither
408,Auth.AuthCredentialsOptions_equals,equals from auth auth credentials options . this class is deprecated  please use credentials options instead,neither,neither,source,neither
409,Auth.AuthCredentialsOptions_hashCode,hash code from auth auth credentials options . this class is deprecated  please use credentials options instead,neither,neither,neither,neither
410,Auth.AuthCredentialsOptions.Builder_forceEnableSaveDialog,force enable save dialog from auth auth credentials options builder specifies that the save confirmation dialog should always be shown when require. Return type is Auth. Auth Credentials Options. Builder and no argument. this class is deprecated  please use credentials options builder instead,sink,sink,sink,neither
411,Auth.AuthCredentialsOptions.Builder_forceEnableSaveDialog,force enable save dialog from auth auth credentials options builder specifies that the save confirmation dialog should always be shown when require. Return type is Auth. Auth Credentials Options. Builder and no argument. this class is deprecated  please use credentials options builder instead,sink,sink,sink,neither
412,SafeBrowsingThreat_getThreatType,get threat type from safe browsing threat gets the threat type for this threa. Return type is int and no argument. a threat of interest used as input to lookup uri and returned as output if these threats are detected for the input uri to lookup uri,source,source,source,source
413,SafetyNet_getClient,get client from safety net returns a safety net client that is used to access all a p is that are called when the app has a foreground activit. Return type is Safety Net Client and parameters are activity. the safety net api provides access to google services that help you assess the health and safety of an android device,source,source,source,source
414,SafetyNet_getClient,get client from safety net returns a safety net client that is used to access all a p is that are called without access to a foreground activit. Return type is Safety Net Client and parameters are context. the safety net api provides access to google services that help you assess the health and safety of an android device,source,source,source,source
415,SafetyNetApi.AttestationResponse_getJwsResult,get jws result from safety net api attestation response gets the json web signature attestation resul. Return type is String and no argument. response from attest that contains a compatibility test suite attestation result,source,source,source,neither
416,SafetyNetApi.HarmfulAppsResponse_getHarmfulAppsList,get harmful apps list from safety net api harmful apps response returns a list of harmful apps data that contains information on potentially harmful apps installe. Return type is List and no argument. a response returned from list harmful apps,source,source,source,source
417,SafetyNetApi.HarmfulAppsResponse_getHoursSinceLastScanWithHarmfulApp,get hours since last scan with harmful app from safety net api harmful apps response gets the number of hours since the last scan on other profiles that detected a harmful ap. Return type is int and no argument. a response returned from list harmful apps,source,source,source,source
418,SafetyNetApi.HarmfulAppsResponse_getLastScanTimeMs,get last scan time ms from safety net api harmful apps response . a response returned from list harmful apps,source,source,source,source
419,SafetyNetApi.RecaptchaTokenResponse_getTokenResult,get token result from safety net api recaptcha token response gets the re c a p t c h a user response token which must be validated by calling the siteverify method described in verify the user's respons. Return type is String and no argument. response from verify with recaptcha,source,source,source,source
420,SafetyNetApi.SafeBrowsingResponse_getDetectedThreats,get detected threats from safety net api safe browsing response returns threats detected from the input ur. Return type is List and no argument. response for lookup uri,source,source,source,source
421,SafetyNetApi.VerifyAppsUserResponse_isVerifyAppsEnabled,is verify apps enabled from safety net api verify apps user response returns whether the user has enabled verify apps when prompte. Return type is boolean and no argument. a response to get user decisions for the verify apps api,source,source,source,source
422,SafetyNetClient_attest,attest from safety net client provides attestation results for the devic. Return type is Task and parameters are byte[] string. the main entry point for safety net,neither,neither,neither,neither
423,SafetyNetClient_enableVerifyApps,enable verify apps from safety net client prompts the user to enable verify apps if it is currently turned of. Return type is Task and no argument. the main entry point for safety net,neither,neither,neither,source
424,SafetyNetClient_initSafeBrowsing,init safe browsing from safety net client initializes the safe browsing ap. Return type is Task and no argument. the main entry point for safety net,neither,neither,neither,neither
425,SafetyNetClient_isVerifyAppsEnabled,is verify apps enabled from safety net client determines whether verify apps is enable. Return type is Task and no argument. the main entry point for safety net,source,source,source,source
426,SafetyNetClient_listHarmfulApps,"list harmful apps from safety net client gets a list of known, potentially harmful apps installe. Return type is Task and no argument. the main entry point for safety net",source,source,source,sink
427,SafetyNetClient_lookupUri,lookup uri from safety net client checks whether a uri is known to have specific threat. Return type is Task and parameters are string string int   . the main entry point for safety net,source,source,source,neither
428,SafetyNetClient_shutdownSafeBrowsing,"shutdown safe browsing from safety net client safely shuts down the safe browsing a p i, releasing a resources from the syste. Return type is Task and no argument. the main entry point for safety net",neither,neither,neither,neither
429,SafetyNetClient_verifyWithRecaptcha,verify with recaptcha from safety net client provides user attestation with re c a p t c h. Return type is Task and parameters are string. the main entry point for safety net,neither,neither,neither,neither
430,SafetyNetApi_verifyWithRecaptcha,verify with recaptcha from safety net api this method was deprecated use verify with recaptc. Return type is Pending Result and parameters are google api client string. the main entry point for interacting with safety net,source,neither,neither,source
431,SafetyNetApi.RecaptchaTokenResult_getTokenResult,"get token result from safety net api recaptcha token result gets the re c a p t c h a user response token, which must be validated by calling the siteverify method described in verify the user's respons. Return type is String and no argument. this interface was deprecated  use safety net api recaptcha token response returned from verify with recaptcha",source,source,source,source
432,SafetyNetApi.AttestationResponse_getJwsResult,get jws result from safety net api attestation response gets the json web signature attestation resul. Return type is String and no argument. response from attest that contains a compatibility test suite attestation result,source,source,source,neither
433,SafetyNetApi.HarmfulAppsResponse_getHarmfulAppsList,get harmful apps list from safety net api harmful apps response returns a list of harmful apps data that contains information on potentially harmful apps installe. Return type is List and no argument. a response returned from list harmful apps,source,source,source,source
434,SafetyNetApi.HarmfulAppsResponse_getHoursSinceLastScanWithHarmfulApp,get hours since last scan with harmful app from safety net api harmful apps response gets the number of hours since the last scan on other profiles that detected a harmful ap. Return type is int and no argument. a response returned from list harmful apps,source,source,source,source
435,SafetyNetApi.HarmfulAppsResponse_getLastScanTimeMs,get last scan time ms from safety net api harmful apps response . a response returned from list harmful apps,source,source,source,source
436,SafetyNetApi.RecaptchaTokenResponse_getTokenResult,get token result from safety net api recaptcha token response gets the re c a p t c h a user response token which must be validated by calling the siteverify method described in verify the user's respons. Return type is String and no argument. response from verify with recaptcha,source,source,source,source
437,SafetyNetApi.RecaptchaTokenResult_getTokenResult,"get token result from safety net api recaptcha token result gets the re c a p t c h a user response token, which must be validated by calling the siteverify method described in verify the user's respons. Return type is String and no argument. this interface was deprecated  use safety net api recaptcha token response returned from verify with recaptcha",source,source,source,source
438,SafetyNetApi.SafeBrowsingResponse_getDetectedThreats,get detected threats from safety net api safe browsing response returns threats detected from the input ur. Return type is List and no argument. response for lookup uri,source,source,source,source
439,SafetyNetApi.VerifyAppsUserResponse_isVerifyAppsEnabled,is verify apps enabled from safety net api verify apps user response returns whether the user has enabled verify apps when prompte. Return type is boolean and no argument. a response to get user decisions for the verify apps api,source,source,source,source
440,AdMobExtras_getExtras,"get extras from ad mob extras returns the extra ad request parameter. Return type is Bundle and no argument. this class is deprecated  instead of using this class in conjunction with ad request builder add network extras, pass a bundle to ad request builder add network extras bundle along with com google ads mediation admob ad mob adapter class",source,source,source,source
441,CastMediaOptions_getExpandedControllerActivityClassName,get expanded controller activity class name from cast media options returns the name of the expanded controller activity that displays a full-screen media controlle. Return type is String and no argument. configuration parameters for starting a cast media session,source,source,source,source
442,CastMediaOptions_getImagePicker,get image picker from cast media options returns the image picker to choose an appropriate imag. Return type is Image Picker and no argument. configuration parameters for starting a cast media session,source,source,source,source
443,CastMediaOptions_getMediaIntentReceiverClassName,get media intent receiver class name from cast media options returns the name of the broadcast receiver that handles media intents from notification and lock scree. Return type is String and no argument. configuration parameters for starting a cast media session,source,source,source,source
444,CastMediaOptions_getMediaSessionEnabled,get media session enabled from cast media options returns true if the cast sdk automatically creates and manages a media session for cast session. Return type is boolean and no argument. configuration parameters for starting a cast media session,source,source,source,source
445,CastMediaOptions_getNotificationOptions,get notification options from cast media options returns the options to configure notificatio. Return type is Notification Options and no argument. configuration parameters for starting a cast media session,source,source,source,source
446,CastMediaOptions_writeToParcel,write to parcel from cast media options . configuration parameters for starting a cast media session,sink,sink,sink,sink
447,CastMediaOptions.Builder_build,build from cast media options builder builds and returns the cast media options objec. Return type is Cast Media Options and no argument. a builder to create an instance of cast media options,neither,neither,neither,neither
448,CastMediaOptions.Builder_setExpandedControllerActivityClassName,set expanded controller activity class name from cast media options builder sets the class name of the expanded controller activit. Return type is Cast Media Options. Builder and parameters are string. a builder to create an instance of cast media options,sink,sink,sink,sink
449,CastMediaOptions.Builder_setImagePicker,set image picker from cast media options builder sets the image picke. Return type is Cast Media Options. Builder and parameters are image picker. a builder to create an instance of cast media options,sink,sink,sink,sink
450,CastMediaOptions.Builder_setMediaIntentReceiverClassName,set media intent receiver class name from cast media options builder sets the class name of the media intent receive. Return type is Cast Media Options. Builder and parameters are string. a builder to create an instance of cast media options,sink,sink,sink,sink
451,CastMediaOptions.Builder_setMediaSessionEnabled,set media session enabled from cast media options builder enables or disables the media session created and managed by the cast sd. Return type is Cast Media Options. Builder and parameters are boolean. a builder to create an instance of cast media options,sink,sink,sink,sink
452,CastMediaOptions.Builder_setNotificationOptions,set notification options from cast media options builder sets the notification options used to configure the notification with notification compat media styl. Return type is Cast Media Options. Builder and parameters are notification options. a builder to create an instance of cast media options,sink,sink,sink,sink
453,ImageHints_getHeightInPixels,"get height in pixels from image hints returns the expected height of the image, in number of pixel. Return type is int and no argument. an object that provides hints to an image picker about the type and size of an image to be selected for display in the ui",source,source,source,source
454,ImageHints_getType,"get type from image hints returns the type of the image, defined in image picke. Return type is int and no argument. an object that provides hints to an image picker about the type and size of an image to be selected for display in the ui",source,source,source,source
455,ImageHints_getWidthInPixels,"get width in pixels from image hints returns the expected width of the image, in number of pixel. Return type is int and no argument. an object that provides hints to an image picker about the type and size of an image to be selected for display in the ui",source,source,source,source
456,ImageHints_writeToParcel,write to parcel from image hints . an object that provides hints to an image picker about the type and size of an image to be selected for display in the ui,sink,sink,sink,sink
457,ImagePicker_onPickImage,"on pick image from image picker deprecate. Return type is Web Image and parameters are media metadata int. an image picker to pick an appropriate image from the list of images in a media metadata based on the use of the image, for example, notification thumbnail or full screen background",neither,neither,neither,neither
458,ImagePicker_onPickImage,"on pick image from image picker returns the web image to be used based on the given image hint. Return type is Web Image and parameters are media metadata image hints. an image picker to pick an appropriate image from the list of images in a media metadata based on the use of the image, for example, notification thumbnail or full screen background",neither,neither,neither,neither
459,MediaIntentReceiver_onReceive,"on receive from media intent receiver . a broadcast receiver for receiving media button actions from the status bar notification, the lock screen, and the cast dialog",neither,neither,neither,neither
460,MediaNotificationService_isNotificationOptionsValid,is notification options valid from media notification service returns true if notification options in the cast options provides valid action. Return type is  boolean and parameters are cast options. a service to provide status bar notifications when casting,neither,neither,neither,neither
461,MediaNotificationService_onBind,on bind from media notification service . a service to provide status bar notifications when casting,neither,neither,neither,neither
462,MediaNotificationService_onCreate,on create from media notification service . a service to provide status bar notifications when casting,neither,neither,neither,neither
463,MediaNotificationService_onDestroy,on destroy from media notification service . a service to provide status bar notifications when casting,neither,neither,neither,neither
464,MediaNotificationService_onStartCommand,on start command from media notification service . a service to provide status bar notifications when casting,sink,neither,sink,neither
465,MediaQueue_fetchMoreItemsRelativeToIndex,fetch more items relative to index from media queue requests a range of queue item i ds before or after the given index in the queu. Return type is Pending Result and parameters are int int int. a data model representation of a media queue of arbitrary length,source,source,source,source
466,MediaQueue_getItemAtIndex,get item at index from media queue returns the media queue item at the given inde. Return type is Media Queue Item and parameters are int. a data model representation of a media queue of arbitrary length,source,source,source,source
467,MediaQueue_getItemAtIndex,get item at index from media queue returns the media queue item at the given inde. Return type is Media Queue Item and parameters are int boolean. a data model representation of a media queue of arbitrary length,source,source,source,source
468,MediaQueue_getItemCount,get item count from media queue returns the number of items in the queu. Return type is int and no argument. a data model representation of a media queue of arbitrary length,source,source,source,source
469,MediaQueue_getItemIds,get item ids from media queue returns the list of item i ds in the queu. Return type is int[] and no argument. a data model representation of a media queue of arbitrary length,source,source,source,source
470,MediaQueue_indexOfItemWithId,index of item with id from media queue looks up the index of a queue item in the queu. Return type is int and parameters are int. a data model representation of a media queue of arbitrary length,source,source,source,source
471,MediaQueue_itemIdAtIndex,item id at index from media queue returns the item id of the item at the given index in the queu. Return type is int and parameters are int. a data model representation of a media queue of arbitrary length,source,source,source,source
472,MediaQueue_registerCallback,register callback from media queue registers a media queue callback to receive media queue update. Return type is void and parameters are media queue callback. a data model representation of a media queue of arbitrary length,neither,neither,neither,neither
473,MediaQueue_setCacheCapacity,set cache capacity from media queue sets the capacity of the cache of the queu. Return type is void and parameters are int. a data model representation of a media queue of arbitrary length,sink,sink,sink,sink
474,MediaQueue_unregisterCallback,unregister callback from media queue unregisters a media queue callback to stop receiving media queue update. Return type is void and parameters are media queue callback. a data model representation of a media queue of arbitrary length,neither,neither,neither,neither
475,MediaQueue.Callback_itemsInsertedInRange,items inserted in range from media queue callback called when a contiguous range of queue items have been inserted into the queu. Return type is void and parameters are int int. callback interface for receiving updates from media queue,neither,neither,neither,neither
476,MediaQueue.Callback_itemsReloaded,items reloaded from media queue callback called when the queue has been entirely reloade. Return type is void and no argument. callback interface for receiving updates from media queue,neither,neither,neither,neither
477,MediaQueue.Callback_itemsRemovedAtIndexes,items removed at indexes from media queue callback called when one or more queue items have been removed from the queu. Return type is void and parameters are int[]. callback interface for receiving updates from media queue,neither,neither,neither,neither
478,MediaQueue.Callback_itemsReorderedAtIndexes,items reordered at indexes from media queue callback called when one or more queue items have been reordered in the queu. Return type is void and parameters are list int. callback interface for receiving updates from media queue,neither,neither,neither,neither
479,MediaQueue.Callback_itemsUpdatedAtIndexes,items updated at indexes from media queue callback called when one or more queue items have been updated in the queu. Return type is void and parameters are int[]. callback interface for receiving updates from media queue,neither,neither,neither,neither
480,MediaQueue.Callback_mediaQueueChanged,media queue changed from media queue callback called when one or more changes have been made to the queu. Return type is void and no argument. callback interface for receiving updates from media queue,neither,neither,neither,neither
481,MediaQueue.Callback_mediaQueueWillChange,media queue will change from media queue callback called when one or more changes are about to be made to the queu. Return type is void and no argument. callback interface for receiving updates from media queue,neither,neither,neither,neither
482,MediaQueueArrayAdapter_areAllItemsEnabled,are all items enabled from media queue array adapter . a array adapter for media queue using media queue as backend,neither,neither,neither,neither
483,MediaQueueArrayAdapter_dispose,dispose from media queue array adapter disposes the adapter so it no longer receives update from media queu. Return type is void and no argument. a array adapter for media queue using media queue as backend,neither,neither,neither,neither
484,MediaQueueArrayAdapter_getCount,get count from media queue array adapter . a array adapter for media queue using media queue as backend,source,source,source,source
485,MediaQueueArrayAdapter_getItem,get item from media queue array adapter . a array adapter for media queue using media queue as backend,source,source,source,source
486,MediaQueueArrayAdapter_getItemId,get item id from media queue array adapter . a array adapter for media queue using media queue as backend,source,source,source,source
487,MediaQueueArrayAdapter_getMediaQueue,get media queue from media queue array adapter returns the media queue backing this adapte. Return type is Media Queue and no argument. a array adapter for media queue using media queue as backend,source,source,source,source
488,MediaQueueArrayAdapter_hasStableIds,has stable ids from media queue array adapter . a array adapter for media queue using media queue as backend,neither,neither,neither,neither
489,MediaQueueArrayAdapter_isEmpty,is empty from media queue array adapter . a array adapter for media queue using media queue as backend,neither,neither,neither,neither
490,MediaQueueArrayAdapter_isEnabled,is enabled from media queue array adapter . a array adapter for media queue using media queue as backend,neither,neither,neither,neither
491,MediaQueueRecyclerViewAdapter<VH extendsRecyclerView.ViewHolder>_dispose,dispose from media queue recycler view adapter< v h extends recycler view view holder> disposes the adapter so it no longer receives update from media queu. Return type is void and no argument. a recycler view adapter for media queue using media queue as backend,neither,neither,neither,neither
492,MediaQueueRecyclerViewAdapter<VH extendsRecyclerView.ViewHolder>_getItem,get item from media queue recycler view adapter< v h extends recycler view view holder> returns the media queue item at a given position in the queu. Return type is Media Queue Item and parameters are int. a recycler view adapter for media queue using media queue as backend,source,source,source,source
493,MediaQueueRecyclerViewAdapter<VH extendsRecyclerView.ViewHolder>_getItemCount,get item count from media queue recycler view adapter< v h extends recycler view view holder> . a recycler view adapter for media queue using media queue as backend,source,source,source,source
494,MediaQueueRecyclerViewAdapter<VH extendsRecyclerView.ViewHolder>_getItemId,get item id from media queue recycler view adapter< v h extends recycler view view holder> . a recycler view adapter for media queue using media queue as backend,source,source,source,source
495,MediaQueueRecyclerViewAdapter<VH extendsRecyclerView.ViewHolder>_getMediaQueue,get media queue from media queue recycler view adapter< v h extends recycler view view holder> returns the media queue backing this adapte. Return type is Media Queue and no argument. a recycler view adapter for media queue using media queue as backend,source,source,source,source
496,MediaUtils_getImageUri,get image uri from media utils returns an uri of an image for the media info at the given inde. Return type is Uri and parameters are media info int. utils for remote media control,source,source,source,source
497,MediaUtils_getImageUrl,get image url from media utils returns the url of an image for the media info at the given inde. Return type is String and parameters are media info int. utils for remote media control,source,source,source,source
498,MediaUtils_getTrackLanguage,get track language from media utils deprecate. Return type is Locale and parameters are media track. utils for remote media control,source,source,source,source
499,NotificationAction_getAction,get action from notification action returns the intent actio. Return type is String and no argument. an object representing an action in the media notification,source,source,source,source
500,NotificationAction_getContentDescription,get content description from notification action returns the content description that is used for accessibilit. Return type is String and no argument. an object representing an action in the media notification,source,source,source,source
501,NotificationAction_getIconResId,get icon res id from notification action returns the icon's resource i. Return type is int and no argument. an object representing an action in the media notification,source,source,source,source
502,NotificationAction_writeToParcel,write to parcel from notification action . an object representing an action in the media notification,sink,sink,sink,sink
503,NotificationAction.Builder_build,build from notification action builder builds a notification actio. Return type is Notification Action and no argument. a builder for notification action,neither,neither,neither,neither
504,NotificationAction.Builder_setAction,set action from notification action builder sets the intent actio. Return type is Notification Action. Builder and parameters are string. a builder for notification action,sink,sink,sink,sink
505,NotificationAction.Builder_setContentDescription,set content description from notification action builder sets the content description that is used for accessibilit. Return type is Notification Action. Builder and parameters are string. a builder for notification action,sink,sink,sink,sink
506,NotificationAction.Builder_setIconResId,set icon res id from notification action builder sets the icon's resource i. Return type is Notification Action. Builder and parameters are int. a builder for notification action,sink,sink,sink,sink
507,NotificationActionsProvider_getApplicationContext,"get application context from notification actions provider returns the context in which the app is runnin. Return type is Context and no argument. if developers want to add dynamic custom actions in the media notification, they should extend this class to provide necessary data to build the media notification",source,source,source,neither
508,NotificationActionsProvider_getCompactViewActionIndices,"get compact view action indices from notification actions provider developers should override this method to returns the indices of actions that will appear in the compact view of the media notificatio. Return type is  int[] and no argument. if developers want to add dynamic custom actions in the media notification, they should extend this class to provide necessary data to build the media notification",source,source,source,neither
509,NotificationActionsProvider_getNotificationActions,"get notification actions from notification actions provider developers should override this method to return the list of notification action that will appear in expanded view of the media notificatio. Return type is List and no argument. if developers want to add dynamic custom actions in the media notification, they should extend this class to provide necessary data to build the media notification",source,source,source,neither
510,NotificationOptions_getActions,get actions from notification options returns the list of actions to show in the notificatio. Return type is List and no argument. configuration parameters for building the media notification,source,source,source,source
511,NotificationOptions_getCastingToDeviceStringResId,"get casting to device string res id from notification options returns the resource id of the "" casting to"" format string, used as the subtitle in the notificatio. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
512,NotificationOptions_getCompatActionIndices,get compat action indices from notification options returns a copy of the indices of the actions which should be shown in the compact form of the notificatio. Return type is int[] and no argument. configuration parameters for building the media notification,source,source,source,source
513,NotificationOptions_getDisconnectDrawableResId,"get disconnect drawable res id from notification options returns the resource id of the icon that indicates a ""disconnect"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
514,NotificationOptions_getForward10DrawableResId,"get forward10 drawable res id from notification options returns the resource id of the icon that indicates a ""skip forward 10 seconds"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
515,NotificationOptions_getForward30DrawableResId,"get forward30 drawable res id from notification options returns the resource id of the icon that indicates a ""skip forward 30 seconds"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
516,NotificationOptions_getForwardDrawableResId,"get forward drawable res id from notification options returns the resource id of the icon that indicates a ""skip forward"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
517,NotificationOptions_getPauseDrawableResId,"get pause drawable res id from notification options returns the resource id of the icon that indicates a ""pause"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
518,NotificationOptions_getPlayDrawableResId,"get play drawable res id from notification options returns the resource id of the icon that indicates a ""play"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
519,NotificationOptions_getRewind10DrawableResId,"get rewind10 drawable res id from notification options returns the resource id of the icon that indicates a ""rewind 10 seconds"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
520,NotificationOptions_getRewind30DrawableResId,"get rewind30 drawable res id from notification options returns the resource id of the icon that indicates a ""rewind 30 seconds"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
521,NotificationOptions_getRewindDrawableResId,"get rewind drawable res id from notification options returns the resource id of the icon that indicates a ""rewind"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
522,NotificationOptions_getSkipNextDrawableResId,"get skip next drawable res id from notification options returns the resource id of the icon that indicates a ""skip next"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
523,NotificationOptions_getSkipPrevDrawableResId,"get skip prev drawable res id from notification options returns the resource id of the icon that indicates a ""skip previous"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
524,NotificationOptions_getSkipStepMs,get skip step ms from notification options returns the amount to jump if media intent receiver a c t i o n_ f o r w a r d or media intent receiver a c t i o n_ r e w i n d are included in the notification action. Return type is long and no argument. configuration parameters for building the media notification,source,source,source,source
525,NotificationOptions_getSmallIconDrawableResId,get small icon drawable res id from notification options returns the resource id of the small icon that will be used to build the notificatio. Return type is int and no argument. configuration parameters for building the media notification,source,source,source,neither
526,NotificationOptions_getStopLiveStreamDrawableResId,"get stop live stream drawable res id from notification options returns the resource id of the icon that indicates a ""stop playing live stream"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
527,NotificationOptions_getStopLiveStreamTitleResId,"get stop live stream title res id from notification options returns the resource id of the label for the "" stop live stream"" butto. Return type is int and no argument. configuration parameters for building the media notification",source,source,source,source
528,NotificationOptions_getTargetActivityClassName,get target activity class name from notification options returns the name of the activity that will be launched when user taps on the content area of the notificatio. Return type is String and no argument. configuration parameters for building the media notification,source,source,source,source
529,NotificationOptions_writeToParcel,write to parcel from notification options . configuration parameters for building the media notification,sink,sink,sink,sink
530,NotificationOptions.Builder_build,build from notification options builder builds and returns the notification options objec. Return type is Notification Options and no argument. a builder for creating an instance of notification options,neither,neither,neither,neither
531,NotificationOptions.Builder_setActions,"set actions from notification options builder sets at most 5 actions to show in the notification, and the indices to the actions to show in the compact vie. Return type is Notification Options. Builder and parameters are list int[]. a builder for creating an instance of notification options",sink,sink,sink,sink
532,NotificationOptions.Builder_setDisconnectDrawableResId,"set disconnect drawable res id from notification options builder sets the resource id of the icon that indicates ""disconnect. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
533,NotificationOptions.Builder_setForward10DrawableResId,"set forward10 drawable res id from notification options builder sets the resource id of the icon that indicates ""skip forward 10 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
534,NotificationOptions.Builder_setForward30DrawableResId,"set forward30 drawable res id from notification options builder sets the resource id of the icon that indicates ""skip forward 30 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
535,NotificationOptions.Builder_setForwardDrawableResId,"set forward drawable res id from notification options builder sets the resource id of the icon that indicates ""skip forward. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
536,NotificationOptions.Builder_setNotificationActionsProvider,"set notification actions provider from notification options builder sets a notification actions provider, which can be subclassed to provide dynamic custom action. Return type is Notification Options. Builder and parameters are notification actions provider. a builder for creating an instance of notification options",sink,sink,sink,sink
537,NotificationOptions.Builder_setPauseDrawableResId,"set pause drawable res id from notification options builder sets the resource id of the icon that indicates ""pause. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
538,NotificationOptions.Builder_setPlayDrawableResId,"set play drawable res id from notification options builder sets the resource id of the icon that indicates ""play. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
539,NotificationOptions.Builder_setRewind10DrawableResId,"set rewind10 drawable res id from notification options builder sets the resource id of the icon that indicates ""rewind 10 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
540,NotificationOptions.Builder_setRewind30DrawableResId,"set rewind30 drawable res id from notification options builder sets the resource id of the icon that indicates ""rewind 30 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
541,NotificationOptions.Builder_setRewindDrawableResId,"set rewind drawable res id from notification options builder sets the resource id of the icon that indicates ""rewind. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
542,NotificationOptions.Builder_setSkipNextDrawableResId,"set skip next drawable res id from notification options builder sets the resource id of the icon that indicates ""skip next. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,neither
543,NotificationOptions.Builder_setSkipPrevDrawableResId,"set skip prev drawable res id from notification options builder sets the resource id of the icon that indicates ""skip previous. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
544,NotificationOptions.Builder_setSkipStepMs,set skip step ms from notification options builder sets the amount to jump if media intent receiver a c t i o n_ f o r w a r d or media intent receiver a c t i o n_ r e w i n d are included for the notification action. Return type is Notification Options. Builder and parameters are long. a builder for creating an instance of notification options,sink,sink,sink,sink
545,NotificationOptions.Builder_setSmallIconDrawableResId,set small icon drawable res id from notification options builder sets the resource id for the notification icon drawabl. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options,sink,sink,sink,sink
546,NotificationOptions.Builder_setStopLiveStreamDrawableResId,"set stop live stream drawable res id from notification options builder sets the resource id of the icon that indicates ""stop playing live stream. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,neither
547,NotificationOptions.Builder_setTargetActivityClassName,set target activity class name from notification options builder sets the name of the activity that will be launched when user taps on the content area of the notificatio. Return type is Notification Options. Builder and parameters are string. a builder for creating an instance of notification options,sink,sink,sink,sink
548,RemoteMediaClient_addListener,add listener from remote media client deprecate. Return type is void and parameters are remote media client listener. class for controlling a media player application running on a receiver,neither,neither,neither,neither
549,RemoteMediaClient_addProgressListener,add progress listener from remote media client adds the remote media client progress listener to the progress update. Return type is boolean and parameters are remote media client progress listener long. class for controlling a media player application running on a receiver,neither,neither,neither,neither
550,RemoteMediaClient_getApproximateAdBreakClipPositionMs,get approximate ad break clip position ms from remote media client returns the approximate ad break clip position as calculated from the last received stream information and the elapsed wall-time since that updat. Return type is long and no argument. class for controlling a media player application running on a receiver,source,source,source,source
551,RemoteMediaClient_getApproximateLiveSeekableRangeEnd,get approximate live seekable range end from remote media client returns the approximate end positio. Return type is long and no argument. class for controlling a media player application running on a receiver,source,source,source,source
552,RemoteMediaClient_getApproximateLiveSeekableRangeStart,get approximate live seekable range start from remote media client returns the approximate start positio. Return type is long and no argument. class for controlling a media player application running on a receiver,source,source,source,source
553,RemoteMediaClient_getApproximateStreamPosition,get approximate stream position from remote media client returns the approximate stream position as calculated from the last received stream information and the elapsed wall-time since that updat. Return type is long and no argument. class for controlling a media player application running on a receiver,source,source,source,source
554,RemoteMediaClient_getCurrentItem,"get current item from remote media client returns the current item in the queue, or null if the queue is empt. Return type is Media Queue Item and no argument. class for controlling a media player application running on a receiver",source,source,source,source
555,RemoteMediaClient_getIdleReason,get idle reason from remote media client returns the current idle reaso. Return type is int and no argument. class for controlling a media player application running on a receiver,source,source,source,source
556,RemoteMediaClient_getLoadingItem,"get loading item from remote media client returns the currently loading item in the queue, or null if no item is being loade. Return type is Media Queue Item and no argument. class for controlling a media player application running on a receiver",source,source,source,source
557,RemoteMediaClient_getMediaInfo,"get media info from remote media client returns the current media information, or null if there isn't a media sessio. Return type is Media Info and no argument. class for controlling a media player application running on a receiver",source,source,source,source
558,RemoteMediaClient_getMediaQueue,get media queue from remote media client returns the associated media queu. Return type is Media Queue and no argument. class for controlling a media player application running on a receiver,source,source,source,source
559,RemoteMediaClient_getMediaStatus,"get media status from remote media client returns the current media status, or null if there isn't a media sessio. Return type is Media Status and no argument. class for controlling a media player application running on a receiver",source,source,source,source
560,RemoteMediaClient_getNamespace,get namespace from remote media client returns the media control namespac. Return type is String and no argument. class for controlling a media player application running on a receiver,source,source,source,source
561,RemoteMediaClient_getPlayerState,get player state from remote media client returns the current player stat. Return type is int and no argument. class for controlling a media player application running on a receiver,source,source,source,source
562,RemoteMediaClient_getPreloadedItem,"get preloaded item from remote media client returns the currently preloaded item in the queue, or null if no item has been preloade. Return type is Media Queue Item and no argument. class for controlling a media player application running on a receiver",source,source,source,source
563,RemoteMediaClient_getStreamDuration,get stream duration from remote media client convenience method for getting the stream duratio. Return type is long and no argument. class for controlling a media player application running on a receiver,source,source,source,source
564,RemoteMediaClient_hasMediaSession,"has media session from remote media client returns true if there is a media session, that is, media being loaded on the remote receive. Return type is boolean and no argument. class for controlling a media player application running on a receiver",source,source,source,source
565,RemoteMediaClient_isBuffering,is buffering from remote media client returns true if the current media is bufferin. Return type is boolean and no argument. class for controlling a media player application running on a receiver,source,source,neither,neither
566,RemoteMediaClient_isLiveStream,"is live stream from remote media client returns true if the currently loaded media is a live stream, otherwise returns fals. Return type is boolean and no argument. class for controlling a media player application running on a receiver",source,source,source,neither
567,RemoteMediaClient_isLoadingNextItem,is loading next item from remote media client returns true if the next item is being loade. Return type is boolean and no argument. class for controlling a media player application running on a receiver,neither,neither,neither,neither
568,RemoteMediaClient_isPaused,is paused from remote media client returns true if the current media is pause. Return type is boolean and no argument. class for controlling a media player application running on a receiver,neither,source,neither,source
569,RemoteMediaClient_isPlaying,is playing from remote media client returns true if the current media is playin. Return type is boolean and no argument. class for controlling a media player application running on a receiver,source,source,neither,source
570,RemoteMediaClient_isPlayingAd,is playing ad from remote media client returns true if an ad is playin. Return type is boolean and no argument. class for controlling a media player application running on a receiver,source,source,neither,neither
571,RemoteMediaClient_load,load from remote media client deprecate. Return type is Pending Result and parameters are media info boolean long. class for controlling a media player application running on a receiver,neither,neither,neither,neither
572,RemoteMediaClient_load,load from remote media client deprecate. Return type is Pending Result and parameters are media info boolean long long[] j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
573,RemoteMediaClient_load,load from remote media client deprecate. Return type is Pending Result and parameters are media info. class for controlling a media player application running on a receiver,neither,neither,neither,neither
574,RemoteMediaClient_load,load from remote media client loads a new media item with specified option. Return type is Pending Result and parameters are media info media load options. class for controlling a media player application running on a receiver,neither,neither,neither,neither
575,RemoteMediaClient_load,load from remote media client deprecate. Return type is Pending Result and parameters are media info boolean long j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
576,RemoteMediaClient_load,load from remote media client loads a new media item and/or a queue with specified option. Return type is Pending Result and parameters are media load request data. class for controlling a media player application running on a receiver,neither,neither,neither,neither
577,RemoteMediaClient_load,load from remote media client deprecate. Return type is Pending Result and parameters are media info boolean. class for controlling a media player application running on a receiver,neither,neither,neither,neither
578,RemoteMediaClient_onMessageReceived,on message received from remote media client . class for controlling a media player application running on a receiver,neither,neither,neither,neither
579,RemoteMediaClient_pause,pause from remote media client pauses playback of the current media ite. Return type is Pending Result and no argument. class for controlling a media player application running on a receiver,neither,neither,neither,neither
580,RemoteMediaClient_pause,pause from remote media client pauses playback of the current media ite. Return type is Pending Result and parameters are j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
581,RemoteMediaClient_play,play from remote media client begin. Return type is Pending Result and no argument. class for controlling a media player application running on a receiver,neither,neither,neither,neither
582,RemoteMediaClient_play,play from remote media client begin. Return type is Pending Result and parameters are j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
583,RemoteMediaClient_queueAppendItem,queue append item from remote media client appends a new media item to the end of the queu. Return type is Pending Result and parameters are media queue item j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
584,RemoteMediaClient_queueInsertAndPlayItem,queue insert and play item from remote media client a convenience method that inserts a single item into the queue and starts playing it at the specified positio. Return type is Pending Result and parameters are media queue item int long j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
585,RemoteMediaClient_queueInsertAndPlayItem,queue insert and play item from remote media client a convenience method that inserts a single item into the queue and starts playing i. Return type is Pending Result and parameters are media queue item int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
586,RemoteMediaClient_queueInsertItems,queue insert items from remote media client inserts a list of new media items into the queu. Return type is Pending Result and parameters are media queue item[] int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
587,RemoteMediaClient_queueJumpToItem,queue jump to item from remote media client plays the item with item id in the queu. Return type is Pending Result and parameters are int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
588,RemoteMediaClient_queueJumpToItem,queue jump to item from remote media client plays the item with item id in the queu. Return type is Pending Result and parameters are int long j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
589,RemoteMediaClient_queueLoad,queue load from remote media client loads and optionally starts playback of a new queue of media item. Return type is Pending Result and parameters are media queue item[] int int long j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
590,RemoteMediaClient_queueLoad,queue load from remote media client loads and optionally starts playback of a new queue of media item. Return type is Pending Result and parameters are media queue item[] int int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
591,RemoteMediaClient_queueMoveItemToNewIndex,queue move item to new index from remote media client moves the item with item id to a new position in the queu. Return type is Pending Result and parameters are int int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
592,RemoteMediaClient_queueNext,queue next from remote media client jumps to the next item in the queu. Return type is Pending Result and parameters are j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
593,RemoteMediaClient_queuePrev,queue prev from remote media client jumps to the previous item in the queu. Return type is Pending Result and parameters are j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
594,RemoteMediaClient_queueRemoveItem,queue remove item from remote media client removes the item with item id from the queu. Return type is Pending Result and parameters are int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
595,RemoteMediaClient_queueRemoveItems,queue remove items from remote media client removes a list of items from the queu. Return type is Pending Result and parameters are int[] j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
596,RemoteMediaClient_queueReorderItems,queue reorder items from remote media client reorders a list of media items in the queu. Return type is Pending Result and parameters are int[] int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
597,RemoteMediaClient_queueSetRepeatMode,queue set repeat mode from remote media client sets the repeat mode of the queu. Return type is Pending Result and parameters are int j s o n object. class for controlling a media player application running on a receiver,sink,sink,sink,neither
598,RemoteMediaClient_queueUpdateItems,queue update items from remote media client updates properties of a subset of the existing items in the media queu. Return type is Pending Result and parameters are media queue item[] j s o n object. class for controlling a media player application running on a receiver,neither,neither,sink,neither
599,RemoteMediaClient_registerCallback,register callback from remote media client registers the remote media client callback to get status update. Return type is void and parameters are remote media client callback. class for controlling a media player application running on a receiver,neither,neither,neither,neither
600,RemoteMediaClient_removeListener,remove listener from remote media client deprecate. Return type is void and parameters are remote media client listener. class for controlling a media player application running on a receiver,neither,neither,neither,neither
601,RemoteMediaClient_removeProgressListener,remove progress listener from remote media client removes the remote media client progress listene. Return type is void and parameters are remote media client progress listener. class for controlling a media player application running on a receiver,neither,neither,neither,neither
602,RemoteMediaClient_requestStatus,request status from remote media client requests updated media status information from the receive. Return type is Pending Result and no argument. class for controlling a media player application running on a receiver,source,source,source,source
603,RemoteMediaClient_seek,seek from remote media client deprecate. Return type is Pending Result and parameters are long. class for controlling a media player application running on a receiver,neither,neither,neither,neither
604,RemoteMediaClient_seek,seek from remote media client seeks to a new position as specified in seek option. Return type is Pending Result and parameters are media seek options. class for controlling a media player application running on a receiver,source,neither,neither,neither
605,RemoteMediaClient_seek,seek from remote media client deprecate. Return type is Pending Result and parameters are long int j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
606,RemoteMediaClient_seek,seek from remote media client deprecate. Return type is Pending Result and parameters are long int. class for controlling a media player application running on a receiver,neither,neither,neither,neither
607,RemoteMediaClient_setActiveMediaTracks,set active media tracks from remote media client sets the active media track. Return type is Pending Result and parameters are long[]. class for controlling a media player application running on a receiver,sink,sink,sink,sink
608,RemoteMediaClient_setParseAdsInfoCallback,set parse ads info callback from remote media client sets a remote media client parse ads info callbac. Return type is void and parameters are remote media client parse ads info callback. class for controlling a media player application running on a receiver,sink,sink,sink,sink
609,RemoteMediaClient_setPlaybackRate,set playback rate from remote media client sets the playback rate for the current media item and can pass along custom dat. Return type is Pending Result and parameters are double j s o n object. class for controlling a media player application running on a receiver,sink,sink,sink,sink
610,RemoteMediaClient_setPlaybackRate,set playback rate from remote media client sets the playback rate for the current media ite. Return type is Pending Result and parameters are double. class for controlling a media player application running on a receiver,sink,sink,sink,sink
611,RemoteMediaClient_setStreamMute,set stream mute from remote media client toggles the stream mutin. Return type is Pending Result and parameters are boolean. class for controlling a media player application running on a receiver,sink,sink,sink,sink
612,RemoteMediaClient_setStreamMute,set stream mute from remote media client toggles the stream mutin. Return type is Pending Result and parameters are boolean j s o n object. class for controlling a media player application running on a receiver,sink,sink,sink,sink
613,RemoteMediaClient_setStreamVolume,set stream volume from remote media client sets the stream volum. Return type is Pending Result and parameters are double j s o n object. class for controlling a media player application running on a receiver,sink,sink,sink,sink
614,RemoteMediaClient_setStreamVolume,set stream volume from remote media client sets the stream volume of the current media ite. Return type is Pending Result and parameters are double. class for controlling a media player application running on a receiver,sink,sink,sink,sink
615,RemoteMediaClient_setTextTrackStyle,set text track style from remote media client sets the text track styl. Return type is Pending Result and parameters are text track style. class for controlling a media player application running on a receiver,sink,sink,sink,sink
616,RemoteMediaClient_skipAd,skip ad from remote media client skips the playing a. Return type is Pending Result and no argument. class for controlling a media player application running on a receiver,neither,neither,neither,neither
617,RemoteMediaClient_stop,stop from remote media client stops playback of the current media ite. Return type is Pending Result and parameters are j s o n object. class for controlling a media player application running on a receiver,neither,neither,neither,neither
618,RemoteMediaClient_stop,stop from remote media client stops playback of the current media ite. Return type is Pending Result and no argument. class for controlling a media player application running on a receiver,neither,neither,neither,neither
619,RemoteMediaClient_togglePlayback,toggle playback from remote media client toggles remote media playbac. Return type is void and no argument. class for controlling a media player application running on a receiver,neither,neither,neither,neither
620,RemoteMediaClient_unregisterCallback,unregister callback from remote media client unregisters the remote media client callback to stop receiving status update. Return type is void and parameters are remote media client callback. class for controlling a media player application running on a receiver,neither,neither,neither,neither
621,RemoteMediaClient.Callback_onAdBreakStatusUpdated,on ad break status updated from remote media client callback called when updated ad break status information is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
622,RemoteMediaClient.Callback_onMediaError,on media error from remote media client callback called when receiving media error messag. Return type is void and parameters are media error. the callback for tracking player status changes,neither,neither,neither,neither
623,RemoteMediaClient.Callback_onMetadataUpdated,on metadata updated from remote media client callback called when updated media metadata is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
624,RemoteMediaClient.Callback_onPreloadStatusUpdated,"on preload status updated from remote media client callback called when updated player queue preload status information is received, for example, the next item to play has been preloade. Return type is void and no argument. the callback for tracking player status changes",neither,neither,neither,neither
625,RemoteMediaClient.Callback_onQueueStatusUpdated,on queue status updated from remote media client callback called when updated player queue status information is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
626,RemoteMediaClient.Callback_onSendingRemoteMediaRequest,on sending remote media request from remote media client callback called when there is an outgoing request to the receive. Return type is void and no argument. the callback for tracking player status changes,sink,neither,sink,neither
627,RemoteMediaClient.Callback_onStatusUpdated,on status updated from remote media client callback called when updated player status information is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
628,TracksChooserDialogFragment_newInstance,new instance from tracks chooser dialog fragment creates a new instance of the dialo. Return type is Tracks Chooser Dialog Fragment and no argument. a dialog fragment to show the available tracks  for user to select,neither,neither,neither,neither
629,TracksChooserDialogFragment_newInstance,new instance from tracks chooser dialog fragment deprecate. Return type is Tracks Chooser Dialog Fragment and parameters are media info long[]. a dialog fragment to show the available tracks  for user to select,neither,neither,neither,sink
630,TracksChooserDialogFragment_onCreate,on create from tracks chooser dialog fragment . a dialog fragment to show the available tracks  for user to select,neither,neither,neither,neither
631,TracksChooserDialogFragment_onCreateDialog,on create dialog from tracks chooser dialog fragment . a dialog fragment to show the available tracks  for user to select,neither,neither,neither,neither
632,TracksChooserDialogFragment_onDestroyView,on destroy view from tracks chooser dialog fragment . a dialog fragment to show the available tracks  for user to select,neither,neither,neither,neither
633,RemoteMediaClient.Listener_onAdBreakStatusUpdated,on ad break status updated from remote media client listener called when updated ad break status information is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
634,RemoteMediaClient.Listener_onMetadataUpdated,on metadata updated from remote media client listener called when updated media metadata is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
635,RemoteMediaClient.Listener_onPreloadStatusUpdated,"on preload status updated from remote media client listener called when updated player queue preload status information is received, for example, the next item to play has been preloade. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead",neither,neither,neither,neither
636,RemoteMediaClient.Listener_onQueueStatusUpdated,on queue status updated from remote media client listener called when updated player queue status information is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
637,RemoteMediaClient.Listener_onSendingRemoteMediaRequest,on sending remote media request from remote media client listener called when there is an outgoing request to the receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,sink,neither,sink,neither
638,RemoteMediaClient.Listener_onStatusUpdated,on status updated from remote media client listener called when updated player status information is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
639,RemoteMediaClient.MediaChannelResult_getCustomData,get custom data from remote media client media channel result custom data received from the receiver applicatio. Return type is J S O N Object and no argument. the result of a media command,source,source,source,source
640,RemoteMediaClient.MediaChannelResult_getMediaError,get media error from remote media client media channel result the error received from the receiver applicatio. Return type is Media Error and no argument. the result of a media command,source,source,source,source
641,RemoteMediaClient.ParseAdsInfoCallback_parseAdBreaksFromMediaStatus,"parse ad breaks from media status from remote media client parse ads info callback returns a list of ad break info instances, which contains information about a list of ads that is or will be played on the receive. Return type is List and parameters are media status. the callback interface for parsing ads information from the custom data inside the media status",source,neither,neither,neither
642,RemoteMediaClient.ParseAdsInfoCallback_parseIsPlayingAdFromMediaStatus,parse is playing ad from media status from remote media client parse ads info callback returns whether an ad is playing on the receive. Return type is  boolean and parameters are media status. the callback interface for parsing ads information from the custom data inside the media status,source,neither,source,neither
643,RemoteMediaClient.ProgressListener_onProgressUpdated,on progress updated from remote media client progress listener called when progress or duration of the current playing media change. Return type is  void and parameters are long long. the listener interface for getting updates on the progress of the currently playing media,neither,neither,neither,neither
644,CastMediaOptions.Builder_build,build from cast media options builder builds and returns the cast media options objec. Return type is Cast Media Options and no argument. a builder to create an instance of cast media options,neither,neither,neither,neither
645,CastMediaOptions.Builder_setExpandedControllerActivityClassName,set expanded controller activity class name from cast media options builder sets the class name of the expanded controller activit. Return type is Cast Media Options. Builder and parameters are string. a builder to create an instance of cast media options,sink,sink,sink,sink
646,CastMediaOptions.Builder_setImagePicker,set image picker from cast media options builder sets the image picke. Return type is Cast Media Options. Builder and parameters are image picker. a builder to create an instance of cast media options,sink,sink,sink,sink
647,CastMediaOptions.Builder_setMediaIntentReceiverClassName,set media intent receiver class name from cast media options builder sets the class name of the media intent receive. Return type is Cast Media Options. Builder and parameters are string. a builder to create an instance of cast media options,sink,sink,sink,sink
648,CastMediaOptions.Builder_setMediaSessionEnabled,set media session enabled from cast media options builder enables or disables the media session created and managed by the cast sd. Return type is Cast Media Options. Builder and parameters are boolean. a builder to create an instance of cast media options,sink,sink,sink,sink
649,CastMediaOptions.Builder_setNotificationOptions,set notification options from cast media options builder sets the notification options used to configure the notification with notification compat media styl. Return type is Cast Media Options. Builder and parameters are notification options. a builder to create an instance of cast media options,sink,sink,sink,sink
650,MediaQueue.Callback_itemsInsertedInRange,items inserted in range from media queue callback called when a contiguous range of queue items have been inserted into the queu. Return type is void and parameters are int int. callback interface for receiving updates from media queue,neither,neither,neither,neither
651,MediaQueue.Callback_itemsReloaded,items reloaded from media queue callback called when the queue has been entirely reloade. Return type is void and no argument. callback interface for receiving updates from media queue,neither,neither,neither,neither
652,MediaQueue.Callback_itemsRemovedAtIndexes,items removed at indexes from media queue callback called when one or more queue items have been removed from the queu. Return type is void and parameters are int[]. callback interface for receiving updates from media queue,neither,neither,neither,neither
653,MediaQueue.Callback_itemsReorderedAtIndexes,items reordered at indexes from media queue callback called when one or more queue items have been reordered in the queu. Return type is void and parameters are list int. callback interface for receiving updates from media queue,neither,neither,neither,neither
654,MediaQueue.Callback_itemsUpdatedAtIndexes,items updated at indexes from media queue callback called when one or more queue items have been updated in the queu. Return type is void and parameters are int[]. callback interface for receiving updates from media queue,neither,neither,neither,neither
655,MediaQueue.Callback_mediaQueueChanged,media queue changed from media queue callback called when one or more changes have been made to the queu. Return type is void and no argument. callback interface for receiving updates from media queue,neither,neither,neither,neither
656,MediaQueue.Callback_mediaQueueWillChange,media queue will change from media queue callback called when one or more changes are about to be made to the queu. Return type is void and no argument. callback interface for receiving updates from media queue,neither,neither,neither,neither
657,NotificationAction.Builder_build,build from notification action builder builds a notification actio. Return type is Notification Action and no argument. a builder for notification action,neither,neither,neither,neither
658,NotificationAction.Builder_setAction,set action from notification action builder sets the intent actio. Return type is Notification Action. Builder and parameters are string. a builder for notification action,sink,sink,sink,sink
659,NotificationAction.Builder_setContentDescription,set content description from notification action builder sets the content description that is used for accessibilit. Return type is Notification Action. Builder and parameters are string. a builder for notification action,sink,sink,sink,sink
660,NotificationAction.Builder_setIconResId,set icon res id from notification action builder sets the icon's resource i. Return type is Notification Action. Builder and parameters are int. a builder for notification action,sink,sink,sink,sink
661,NotificationOptions.Builder_build,build from notification options builder builds and returns the notification options objec. Return type is Notification Options and no argument. a builder for creating an instance of notification options,neither,neither,neither,neither
662,NotificationOptions.Builder_setActions,"set actions from notification options builder sets at most 5 actions to show in the notification, and the indices to the actions to show in the compact vie. Return type is Notification Options. Builder and parameters are list int[]. a builder for creating an instance of notification options",sink,sink,sink,sink
663,NotificationOptions.Builder_setDisconnectDrawableResId,"set disconnect drawable res id from notification options builder sets the resource id of the icon that indicates ""disconnect. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
664,NotificationOptions.Builder_setForward10DrawableResId,"set forward10 drawable res id from notification options builder sets the resource id of the icon that indicates ""skip forward 10 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
665,NotificationOptions.Builder_setForward30DrawableResId,"set forward30 drawable res id from notification options builder sets the resource id of the icon that indicates ""skip forward 30 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
666,NotificationOptions.Builder_setForwardDrawableResId,"set forward drawable res id from notification options builder sets the resource id of the icon that indicates ""skip forward. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
667,NotificationOptions.Builder_setNotificationActionsProvider,"set notification actions provider from notification options builder sets a notification actions provider, which can be subclassed to provide dynamic custom action. Return type is Notification Options. Builder and parameters are notification actions provider. a builder for creating an instance of notification options",sink,sink,sink,sink
668,NotificationOptions.Builder_setPauseDrawableResId,"set pause drawable res id from notification options builder sets the resource id of the icon that indicates ""pause. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
669,NotificationOptions.Builder_setPlayDrawableResId,"set play drawable res id from notification options builder sets the resource id of the icon that indicates ""play. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
670,NotificationOptions.Builder_setRewind10DrawableResId,"set rewind10 drawable res id from notification options builder sets the resource id of the icon that indicates ""rewind 10 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
671,NotificationOptions.Builder_setRewind30DrawableResId,"set rewind30 drawable res id from notification options builder sets the resource id of the icon that indicates ""rewind 30 seconds. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
672,NotificationOptions.Builder_setRewindDrawableResId,"set rewind drawable res id from notification options builder sets the resource id of the icon that indicates ""rewind. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
673,NotificationOptions.Builder_setSkipNextDrawableResId,"set skip next drawable res id from notification options builder sets the resource id of the icon that indicates ""skip next. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,neither
674,NotificationOptions.Builder_setSkipPrevDrawableResId,"set skip prev drawable res id from notification options builder sets the resource id of the icon that indicates ""skip previous. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,sink
675,NotificationOptions.Builder_setSkipStepMs,set skip step ms from notification options builder sets the amount to jump if media intent receiver a c t i o n_ f o r w a r d or media intent receiver a c t i o n_ r e w i n d are included for the notification action. Return type is Notification Options. Builder and parameters are long. a builder for creating an instance of notification options,sink,sink,sink,sink
676,NotificationOptions.Builder_setSmallIconDrawableResId,set small icon drawable res id from notification options builder sets the resource id for the notification icon drawabl. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options,sink,sink,sink,sink
677,NotificationOptions.Builder_setStopLiveStreamDrawableResId,"set stop live stream drawable res id from notification options builder sets the resource id of the icon that indicates ""stop playing live stream. Return type is Notification Options. Builder and parameters are int. a builder for creating an instance of notification options",sink,sink,sink,neither
678,NotificationOptions.Builder_setTargetActivityClassName,set target activity class name from notification options builder sets the name of the activity that will be launched when user taps on the content area of the notificatio. Return type is Notification Options. Builder and parameters are string. a builder for creating an instance of notification options,sink,sink,sink,sink
679,RemoteMediaClient.Callback_onAdBreakStatusUpdated,on ad break status updated from remote media client callback called when updated ad break status information is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
680,RemoteMediaClient.Callback_onMediaError,on media error from remote media client callback called when receiving media error messag. Return type is void and parameters are media error. the callback for tracking player status changes,neither,neither,neither,neither
681,RemoteMediaClient.Callback_onMetadataUpdated,on metadata updated from remote media client callback called when updated media metadata is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
682,RemoteMediaClient.Callback_onPreloadStatusUpdated,"on preload status updated from remote media client callback called when updated player queue preload status information is received, for example, the next item to play has been preloade. Return type is void and no argument. the callback for tracking player status changes",neither,neither,neither,neither
683,RemoteMediaClient.Callback_onQueueStatusUpdated,on queue status updated from remote media client callback called when updated player queue status information is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
684,RemoteMediaClient.Callback_onSendingRemoteMediaRequest,on sending remote media request from remote media client callback called when there is an outgoing request to the receive. Return type is void and no argument. the callback for tracking player status changes,sink,neither,sink,neither
685,RemoteMediaClient.Callback_onStatusUpdated,on status updated from remote media client callback called when updated player status information is receive. Return type is void and no argument. the callback for tracking player status changes,neither,neither,neither,neither
686,RemoteMediaClient.Listener_onAdBreakStatusUpdated,on ad break status updated from remote media client listener called when updated ad break status information is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
687,RemoteMediaClient.Listener_onMetadataUpdated,on metadata updated from remote media client listener called when updated media metadata is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
688,RemoteMediaClient.Listener_onPreloadStatusUpdated,"on preload status updated from remote media client listener called when updated player queue preload status information is received, for example, the next item to play has been preloade. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead",neither,neither,neither,neither
689,RemoteMediaClient.Listener_onQueueStatusUpdated,on queue status updated from remote media client listener called when updated player queue status information is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
690,RemoteMediaClient.Listener_onSendingRemoteMediaRequest,on sending remote media request from remote media client listener called when there is an outgoing request to the receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,sink,neither,sink,neither
691,RemoteMediaClient.Listener_onStatusUpdated,on status updated from remote media client listener called when updated player status information is receive. Return type is  void and no argument. this interface is deprecated  use remote media client callback instead,neither,neither,neither,neither
692,RemoteMediaClient.MediaChannelResult_getCustomData,get custom data from remote media client media channel result custom data received from the receiver applicatio. Return type is J S O N Object and no argument. the result of a media command,source,source,source,source
693,RemoteMediaClient.MediaChannelResult_getMediaError,get media error from remote media client media channel result the error received from the receiver applicatio. Return type is Media Error and no argument. the result of a media command,source,source,source,source
694,RemoteMediaClient.ParseAdsInfoCallback_parseAdBreaksFromMediaStatus,"parse ad breaks from media status from remote media client parse ads info callback returns a list of ad break info instances, which contains information about a list of ads that is or will be played on the receive. Return type is List and parameters are media status. the callback interface for parsing ads information from the custom data inside the media status",source,neither,neither,neither
695,RemoteMediaClient.ParseAdsInfoCallback_parseIsPlayingAdFromMediaStatus,parse is playing ad from media status from remote media client parse ads info callback returns whether an ad is playing on the receive. Return type is  boolean and parameters are media status. the callback interface for parsing ads information from the custom data inside the media status,source,neither,source,neither
696,RemoteMediaClient.ProgressListener_onProgressUpdated,on progress updated from remote media client progress listener called when progress or duration of the current playing media change. Return type is  void and parameters are long long. the listener interface for getting updates on the progress of the currently playing media,neither,neither,neither,neither
697,BeginSignInRequest_builder,builder from begin sign in request . configurations that can be used to filter acceptable types of credentials returned from a sign in attempt,neither,neither,neither,neither
698,BeginSignInRequest_equals,equals from begin sign in request . configurations that can be used to filter acceptable types of credentials returned from a sign in attempt,neither,neither,neither,neither
699,BeginSignInRequest_getGoogleIdTokenRequestOptions,get google id token request options from begin sign in request . configurations that can be used to filter acceptable types of credentials returned from a sign in attempt,source,source,source,source
700,BeginSignInRequest_getPasswordRequestOptions,get password request options from begin sign in request . configurations that can be used to filter acceptable types of credentials returned from a sign in attempt,source,source,source,source
701,BeginSignInRequest_hashCode,hash code from begin sign in request . configurations that can be used to filter acceptable types of credentials returned from a sign in attempt,neither,neither,neither,source
702,BeginSignInRequest_isAutoSelectEnabled,"is auto select enabled from begin sign in request returns true if auto-select is requested, false otherwis. Return type is boolean and no argument. configurations that can be used to filter acceptable types of credentials returned from a sign in attempt",source,neither,source,source
703,BeginSignInRequest_writeToParcel,write to parcel from begin sign in request . configurations that can be used to filter acceptable types of credentials returned from a sign in attempt,sink,sink,sink,sink
704,BeginSignInRequest.Builder_build,build from begin sign in request builder returns the built begin sign in reques. Return type is Begin Sign In Request and no argument. builder for begin sign in request,neither,neither,neither,neither
705,BeginSignInRequest.Builder_setAutoSelectEnabled,set auto select enabled from begin sign in request builder sets the auto-select behavior in the reques. Return type is Begin Sign In Request. Builder and parameters are boolean. builder for begin sign in request,sink,sink,sink,sink
706,BeginSignInRequest.Builder_setGoogleIdTokenRequestOptions,set google id token request options from begin sign in request builder sets the begin sign in request google id token request options for the reques. Return type is Begin Sign In Request. Builder and parameters are begin sign in request google id token request options. builder for begin sign in request,sink,sink,sink,sink
707,BeginSignInRequest.Builder_setPasswordRequestOptions,set password request options from begin sign in request builder sets the begin sign in request password request options for the reques. Return type is Begin Sign In Request. Builder and parameters are begin sign in request password request options. builder for begin sign in request,sink,sink,sink,sink
708,BeginSignInRequest.GoogleIdTokenRequestOptions_builder,builder from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,source
709,BeginSignInRequest.GoogleIdTokenRequestOptions_equals,equals from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,neither
710,BeginSignInRequest.GoogleIdTokenRequestOptions_filterByAuthorizedAccounts,filter by authorized accounts from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,source
711,BeginSignInRequest.GoogleIdTokenRequestOptions_getIdTokenDepositionScopes,get id token deposition scopes from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
712,BeginSignInRequest.GoogleIdTokenRequestOptions_getLinkedServiceId,get linked service id from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
713,BeginSignInRequest.GoogleIdTokenRequestOptions_getNonce,get nonce from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
714,BeginSignInRequest.GoogleIdTokenRequestOptions_getServerClientId,get server client id from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
715,BeginSignInRequest.GoogleIdTokenRequestOptions_hashCode,hash code from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,neither,source
716,BeginSignInRequest.GoogleIdTokenRequestOptions_isSupported,is supported from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,source
717,BeginSignInRequest.GoogleIdTokenRequestOptions_writeToParcel,write to parcel from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,sink,sink,sink,sink
718,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_associateLinkedAccounts,associate linked accounts from begin sign in request google id token request options builder sets whether to support sign-in using google accounts that are linked to your users' account. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string list. builder for begin sign in request google id token request options,sink,neither,sink,sink
719,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_build,build from begin sign in request google id token request options builder returns the built begin sign in request google id token request option. Return type is Begin Sign In Request. Google Id Token Request Options and no argument. builder for begin sign in request google id token request options,neither,neither,source,neither
720,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setFilterByAuthorizedAccounts,set filter by authorized accounts from begin sign in request google id token request options builder sets whether to only allow the user to select from google accounts that are already authorized to sign in to your applicatio. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are boolean. builder for begin sign in request google id token request options,sink,sink,sink,sink
721,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setNonce,set nonce from begin sign in request google id token request options builder sets the nonce to use when generating a google id toke. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string. builder for begin sign in request google id token request options,sink,sink,sink,sink
722,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setServerClientId,set server client id from begin sign in request google id token request options builder sets the server's client id to use as the audience for google id tokens generated during the sign-i. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string. builder for begin sign in request google id token request options,sink,sink,sink,sink
723,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setSupported,set supported from begin sign in request google id token request options builder sets whether google id token-backed credentials should be returned by the ap. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are boolean. builder for begin sign in request google id token request options,sink,sink,sink,sink
724,BeginSignInRequest.PasswordRequestOptions_builder,builder from begin sign in request password request options . options for requesting password backed credentials during sign in,neither,neither,neither,sink
725,BeginSignInRequest.PasswordRequestOptions_equals,equals from begin sign in request password request options . options for requesting password backed credentials during sign in,neither,neither,source,neither
726,BeginSignInRequest.PasswordRequestOptions_hashCode,hash code from begin sign in request password request options . options for requesting password backed credentials during sign in,source,source,source,source
727,BeginSignInRequest.PasswordRequestOptions_isSupported,is supported from begin sign in request password request options . options for requesting password backed credentials during sign in,neither,neither,neither,source
728,BeginSignInRequest.PasswordRequestOptions_writeToParcel,write to parcel from begin sign in request password request options . options for requesting password backed credentials during sign in,sink,sink,sink,sink
729,BeginSignInRequest.PasswordRequestOptions.Builder_build,build from begin sign in request password request options builder returns the built begin sign in request password request option. Return type is Begin Sign In Request. Password Request Options and no argument. builder for begin sign in request password request options,neither,neither,source,source
730,BeginSignInRequest.PasswordRequestOptions.Builder_setSupported,set supported from begin sign in request password request options builder sets whether password-backed credentials should be returned by the ap. Return type is Begin Sign In Request. Password Request Options. Builder and parameters are boolean. builder for begin sign in request password request options,sink,sink,sink,sink
731,BeginSignInResult_getPendingIntent,get pending intent from begin sign in result . result returned from sign in initiation that includes a pending intent that can be used to continue the sign in flow,source,source,source,source
732,BeginSignInResult_writeToParcel,write to parcel from begin sign in result . result returned from sign in initiation that includes a pending intent that can be used to continue the sign in flow,sink,sink,sink,sink
733,GetPhoneNumberHintIntentRequest_builder,builder from get phone number hint intent request . request object used to get an intent to start the phone number hint flow,source,source,source,source
734,GetPhoneNumberHintIntentRequest_equals,equals from get phone number hint intent request . request object used to get an intent to start the phone number hint flow,source,source,source,neither
735,GetPhoneNumberHintIntentRequest_hashCode,hash code from get phone number hint intent request . request object used to get an intent to start the phone number hint flow,source,source,source,source
736,GetPhoneNumberHintIntentRequest_writeToParcel,write to parcel from get phone number hint intent request . request object used to get an intent to start the phone number hint flow,sink,sink,sink,sink
737,GetPhoneNumberHintIntentRequest.Builder_build,build from get phone number hint intent request builder . builder for get phone number hint intent reques,source,source,source,neither
738,GetSignInIntentRequest_builder,builder from get sign in intent request . request to get a google sign in intent,source,source,source,source
739,GetSignInIntentRequest_equals,equals from get sign in intent request . request to get a google sign in intent,source,source,source,source
740,GetSignInIntentRequest_getHostedDomainFilter,"get hosted domain filter from get sign in intent request returns the hosted domain filter if it was set in the request, or null otherwis. Return type is String and no argument. request to get a google sign in intent",source,source,source,source
741,GetSignInIntentRequest_getNonce,get nonce from get sign in intent request returns the nonce that was set in the reques. Return type is String and no argument. request to get a google sign in intent,source,source,source,source
742,GetSignInIntentRequest_getServerClientId,get server client id from get sign in intent request returns the server client id that was set in the reques. Return type is String and no argument. request to get a google sign in intent,source,source,source,source
743,GetSignInIntentRequest_hashCode,hash code from get sign in intent request . request to get a google sign in intent,source,source,source,source
744,GetSignInIntentRequest_writeToParcel,write to parcel from get sign in intent request . request to get a google sign in intent,sink,sink,sink,sink
745,GetSignInIntentRequest.Builder_build,build from get sign in intent request builder . builder class for get sign in intent request,source,source,source,neither
746,GetSignInIntentRequest.Builder_filterByHostedDomain,filter by hosted domain from get sign in intent request builder sets the hosted domain filte. Return type is Get Sign In Intent Request. Builder and parameters are string. builder class for get sign in intent request,source,source,source,sink
747,GetSignInIntentRequest.Builder_setNonce,set nonce from get sign in intent request builder sets the nonce to use when generating a google id toke. Return type is Get Sign In Intent Request. Builder and parameters are string. builder class for get sign in intent request,sink,sink,sink,sink
748,GetSignInIntentRequest.Builder_setServerClientId,set server client id from get sign in intent request builder sets the client id of the server that will verify the integrity of the toke. Return type is Get Sign In Intent Request. Builder and parameters are string. builder class for get sign in intent request,sink,sink,sink,sink
749,Identity_getCredentialSavingClient,get credential saving client from identity returns a new instance of credential saving clien. Return type is Credential Saving Client and parameters are activity. the entry point to the sign in a p is,source,source,source,source
750,Identity_getCredentialSavingClient,get credential saving client from identity returns a new instance of credential saving clien. Return type is Credential Saving Client and parameters are context. the entry point to the sign in a p is,source,source,source,source
751,Identity_getSignInClient,get sign in client from identity returns a new instance of sign in clien. Return type is Sign In Client and parameters are activity. the entry point to the sign in a p is,source,source,source,source
752,Identity_getSignInClient,get sign in client from identity returns a new instance of sign in clien. Return type is Sign In Client and parameters are context. the entry point to the sign in a p is,source,source,source,source
753,SaveAccountLinkingTokenRequest_builder,builder from save account linking token request returns an instance of the save account linking token request builder that can be used to build an instance of save account linking token reques. Return type is Save Account Linking Token Request. Builder and no argument. configurations that allow saving a token to google for the purpose of account linking,sink,sink,neither,neither
754,SaveAccountLinkingTokenRequest_equals,equals from save account linking token request . configurations that allow saving a token to google for the purpose of account linking,neither,neither,source,neither
755,SaveAccountLinkingTokenRequest_getConsentPendingIntent,get consent pending intent from save account linking token request returns the pending intent that is set in the request and will be used to launch the consent page by google play services during the flo. Return type is Pending Intent and no argument. configurations that allow saving a token to google for the purpose of account linking,source,source,source,source
756,SaveAccountLinkingTokenRequest_getScopes,get scopes from save account linking token request returns the scopes that were set in the reques. Return type is List and no argument. configurations that allow saving a token to google for the purpose of account linking,source,source,source,neither
757,SaveAccountLinkingTokenRequest_getServiceId,get service id from save account linking token request returns the service-id that was set in the reques. Return type is String and no argument. configurations that allow saving a token to google for the purpose of account linking,source,source,source,source
758,SaveAccountLinkingTokenRequest_getTokenType,get token type from save account linking token request returns the type of token that is requeste. Return type is String and no argument. configurations that allow saving a token to google for the purpose of account linking,source,source,source,source
759,SaveAccountLinkingTokenRequest_hashCode,hash code from save account linking token request . configurations that allow saving a token to google for the purpose of account linking,sink,sink,sink,neither
760,SaveAccountLinkingTokenRequest_writeToParcel,write to parcel from save account linking token request . configurations that allow saving a token to google for the purpose of account linking,sink,sink,sink,sink
761,SaveAccountLinkingTokenRequest.Builder_build,build from save account linking token request builder builds an immutable instance of the save account linking token reques. Return type is Save Account Linking Token Request and no argument. builder for save account linking token request,sink,sink,neither,neither
762,SaveAccountLinkingTokenRequest.Builder_setConsentPendingIntent,set consent pending intent from save account linking token request builder sets th. Return type is Save Account Linking Token Request. Builder and parameters are pending intent. builder for save account linking token request,sink,sink,sink,sink
763,SaveAccountLinkingTokenRequest.Builder_setScopes,set scopes from save account linking token request builder sets the list of scopes that are associated with the token that will be saved to googl. Return type is Save Account Linking Token Request. Builder and parameters are list. builder for save account linking token request,sink,sink,sink,sink
764,SaveAccountLinkingTokenRequest.Builder_setServiceId,set service id from save account linking token request builder sets the service-id that can be obtained from your google cloud projec. Return type is Save Account Linking Token Request. Builder and parameters are string. builder for save account linking token request,sink,sink,sink,sink
765,SaveAccountLinkingTokenRequest.Builder_setTokenType,set token type from save account linking token request builder sets the type of token that will be saved to googl. Return type is Save Account Linking Token Request. Builder and parameters are string. builder for save account linking token request,sink,sink,sink,sink
766,SaveAccountLinkingTokenResult_equals,equals from save account linking token result . result returned from the initial call to save an account linking token that includes a pending intent that can be used to continue the flow,neither,neither,neither,neither
767,SaveAccountLinkingTokenResult_getPendingIntent,get pending intent from save account linking token result returns the pending intent that can be used to launch the flo. Return type is Pending Intent and no argument. result returned from the initial call to save an account linking token that includes a pending intent that can be used to continue the flow,source,source,source,neither
768,SaveAccountLinkingTokenResult_hasResolution,has resolution from save account linking token result returns true if and only if this result contains a resolution that needs to be launche. Return type is boolean and no argument. result returned from the initial call to save an account linking token that includes a pending intent that can be used to continue the flow,source,source,source,neither
769,SaveAccountLinkingTokenResult_hashCode,hash code from save account linking token result . result returned from the initial call to save an account linking token that includes a pending intent that can be used to continue the flow,sink,neither,neither,neither
770,SaveAccountLinkingTokenResult_writeToParcel,write to parcel from save account linking token result . result returned from the initial call to save an account linking token that includes a pending intent that can be used to continue the flow,sink,sink,sink,sink
771,SavePasswordRequest_builder,builder from save password request returns a new instance of the save password request builde. Return type is Save Password Request. Builder and no argument. configurations that allow saving a sign in passwordto google,sink,sink,neither,sink
772,SavePasswordRequest_equals,equals from save password request . configurations that allow saving a sign in passwordto google,sink,sink,source,sink
773,SavePasswordRequest_getSignInPassword,get sign in password from save password request . configurations that allow saving a sign in passwordto google,source,source,source,source
774,SavePasswordRequest_hashCode,hash code from save password request . configurations that allow saving a sign in passwordto google,sink,sink,sink,neither
775,SavePasswordRequest_writeToParcel,write to parcel from save password request . configurations that allow saving a sign in passwordto google,sink,sink,sink,sink
776,SavePasswordRequest.Builder_build,build from save password request builder builds and returns a new instance of save password reques. Return type is Save Password Request and no argument. builder for save password request,sink,sink,neither,neither
777,SavePasswordRequest.Builder_setSignInPassword,set sign in password from save password request builder sets the sign in passwor. Return type is Save Password Request. Builder and parameters are sign in password. builder for save password request,sink,sink,sink,sink
778,SavePasswordResult_equals,equals from save password result . the result returned from calling credential saving client save password that includes a pending intent that can be used to launch the password saving flow,neither,neither,sink,neither
779,SavePasswordResult_getPendingIntent,get pending intent from save password result returns the pending intent that should be launched to start the ui flow for saving the passwor. Return type is Pending Intent and no argument. the result returned from calling credential saving client save password that includes a pending intent that can be used to launch the password saving flow,source,source,source,source
780,SavePasswordResult_hashCode,hash code from save password result . the result returned from calling credential saving client save password that includes a pending intent that can be used to launch the password saving flow,source,source,neither,neither
781,SavePasswordResult_writeToParcel,write to parcel from save password result . the result returned from calling credential saving client save password that includes a pending intent that can be used to launch the password saving flow,sink,sink,sink,sink
782,SignInCredential_equals,equals from sign in credential . the credential returned as a result of a successful sign in,neither,neither,source,neither
783,SignInCredential_getDisplayName,get display name from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
784,SignInCredential_getFamilyName,get family name from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
785,SignInCredential_getGivenName,get given name from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
786,SignInCredential_getGoogleIdToken,get google id token from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
787,SignInCredential_getId,get id from sign in credential returns the identifier of the credentia. Return type is String and no argument. the credential returned as a result of a successful sign in,source,source,source,source
788,SignInCredential_getPassword,get password from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
789,SignInCredential_getProfilePictureUri,get profile picture uri from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
790,SignInCredential_hashCode,hash code from sign in credential . the credential returned as a result of a successful sign in,source,source,source,source
791,SignInCredential_writeToParcel,write to parcel from sign in credential . the credential returned as a result of a successful sign in,sink,sink,sink,sink
792,SignInPassword_equals,"equals from sign in password . an account id such as a username or an email, and a password that can be used to sign a user in",source,source,source,source
793,SignInPassword_getId,"get id from sign in password . an account id such as a username or an email, and a password that can be used to sign a user in",source,source,source,source
794,SignInPassword_getPassword,"get password from sign in password . an account id such as a username or an email, and a password that can be used to sign a user in",source,source,source,source
795,SignInPassword_hashCode,"hash code from sign in password . an account id such as a username or an email, and a password that can be used to sign a user in",source,source,source,source
796,SignInPassword_writeToParcel,"write to parcel from sign in password . an account id such as a username or an email, and a password that can be used to sign a user in",sink,sink,sink,sink
797,CredentialSavingClient_saveAccountLinkingToken,save account linking token from credential saving client attempts to save a token for account linkin. Return type is Task and parameters are save account linking token request. a client for the credential saving api,sink,sink,sink,sink
798,CredentialSavingClient_savePassword,save password from credential saving client initiates the storage of a password-backed credential that can later be used to sign a user i. Return type is Task and parameters are save password request. a client for the credential saving api,sink,sink,sink,sink
799,SignInClient_beginSignIn,begin sign in from sign in client initiates the retrieval of a credential that can assist the caller in signing a user in to their applicatio. Return type is Task and parameters are begin sign in request. a client for the sign in api,neither,neither,neither,sink
800,SignInClient_getPhoneNumberFromIntent,"get phone number from intent from sign in client retrieves the phone number from the intent returned upon a successful phone number hint request, throwing an api exception if no phone number is available or the input intent is nul. Return type is String and parameters are intent. a client for the sign in api",source,source,source,source
801,SignInClient_getPhoneNumberHintIntent,get phone number hint intent from sign in client gets the pending intent that initiates the phone number hint flo. Return type is Task and parameters are get phone number hint intent request. a client for the sign in api,source,source,source,source
802,SignInClient_getSignInCredentialFromIntent,"get sign in credential from intent from sign in client retrieves the sign in credential from the intent returned upon successful sign-in, throwing an api exception if no credential is presen. Return type is Sign In Credential and parameters are intent. a client for the sign in api",source,source,source,source
803,SignInClient_getSignInIntent,get sign in intent from sign in client gets the pending intent that initiates the google sign-in flo. Return type is Task and parameters are get sign in intent request. a client for the sign in api,source,source,source,source
804,SignInClient_signOut,sign out from sign in client resets internal state related to sign-i. Return type is Task and no argument. a client for the sign in api,neither,neither,neither,neither
805,BeginSignInRequest.Builder_build,build from begin sign in request builder returns the built begin sign in reques. Return type is Begin Sign In Request and no argument. builder for begin sign in request,neither,neither,neither,neither
806,BeginSignInRequest.Builder_setAutoSelectEnabled,set auto select enabled from begin sign in request builder sets the auto-select behavior in the reques. Return type is Begin Sign In Request. Builder and parameters are boolean. builder for begin sign in request,sink,sink,sink,sink
807,BeginSignInRequest.Builder_setGoogleIdTokenRequestOptions,set google id token request options from begin sign in request builder sets the begin sign in request google id token request options for the reques. Return type is Begin Sign In Request. Builder and parameters are begin sign in request google id token request options. builder for begin sign in request,sink,sink,sink,sink
808,BeginSignInRequest.Builder_setPasswordRequestOptions,set password request options from begin sign in request builder sets the begin sign in request password request options for the reques. Return type is Begin Sign In Request. Builder and parameters are begin sign in request password request options. builder for begin sign in request,sink,sink,sink,sink
809,BeginSignInRequest.GoogleIdTokenRequestOptions_builder,builder from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,source
810,BeginSignInRequest.GoogleIdTokenRequestOptions_equals,equals from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,neither
811,BeginSignInRequest.GoogleIdTokenRequestOptions_filterByAuthorizedAccounts,filter by authorized accounts from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,source
812,BeginSignInRequest.GoogleIdTokenRequestOptions_getIdTokenDepositionScopes,get id token deposition scopes from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
813,BeginSignInRequest.GoogleIdTokenRequestOptions_getLinkedServiceId,get linked service id from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
814,BeginSignInRequest.GoogleIdTokenRequestOptions_getNonce,get nonce from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
815,BeginSignInRequest.GoogleIdTokenRequestOptions_getServerClientId,get server client id from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,source,source
816,BeginSignInRequest.GoogleIdTokenRequestOptions_hashCode,hash code from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,source,source,neither,source
817,BeginSignInRequest.GoogleIdTokenRequestOptions_isSupported,is supported from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,neither,neither,source,source
818,BeginSignInRequest.GoogleIdTokenRequestOptions_writeToParcel,write to parcel from begin sign in request google id token request options . options for requesting google id token backed credentials during sign in,sink,sink,sink,sink
819,BeginSignInRequest.PasswordRequestOptions_builder,builder from begin sign in request password request options . options for requesting password backed credentials during sign in,neither,neither,neither,sink
820,BeginSignInRequest.PasswordRequestOptions_equals,equals from begin sign in request password request options . options for requesting password backed credentials during sign in,neither,neither,source,neither
821,BeginSignInRequest.PasswordRequestOptions_hashCode,hash code from begin sign in request password request options . options for requesting password backed credentials during sign in,source,source,source,source
822,BeginSignInRequest.PasswordRequestOptions_isSupported,is supported from begin sign in request password request options . options for requesting password backed credentials during sign in,neither,neither,neither,source
823,BeginSignInRequest.PasswordRequestOptions_writeToParcel,write to parcel from begin sign in request password request options . options for requesting password backed credentials during sign in,sink,sink,sink,sink
824,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_associateLinkedAccounts,associate linked accounts from begin sign in request google id token request options builder sets whether to support sign-in using google accounts that are linked to your users' account. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string list. builder for begin sign in request google id token request options,sink,neither,sink,sink
825,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_build,build from begin sign in request google id token request options builder returns the built begin sign in request google id token request option. Return type is Begin Sign In Request. Google Id Token Request Options and no argument. builder for begin sign in request google id token request options,neither,neither,source,neither
826,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setFilterByAuthorizedAccounts,set filter by authorized accounts from begin sign in request google id token request options builder sets whether to only allow the user to select from google accounts that are already authorized to sign in to your applicatio. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are boolean. builder for begin sign in request google id token request options,sink,sink,sink,sink
827,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setNonce,set nonce from begin sign in request google id token request options builder sets the nonce to use when generating a google id toke. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string. builder for begin sign in request google id token request options,sink,sink,sink,sink
828,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setServerClientId,set server client id from begin sign in request google id token request options builder sets the server's client id to use as the audience for google id tokens generated during the sign-i. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string. builder for begin sign in request google id token request options,sink,sink,sink,sink
829,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setSupported,set supported from begin sign in request google id token request options builder sets whether google id token-backed credentials should be returned by the ap. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are boolean. builder for begin sign in request google id token request options,sink,sink,sink,sink
830,BeginSignInRequest.PasswordRequestOptions.Builder_build,build from begin sign in request password request options builder returns the built begin sign in request password request option. Return type is Begin Sign In Request. Password Request Options and no argument. builder for begin sign in request password request options,neither,neither,source,source
831,BeginSignInRequest.PasswordRequestOptions.Builder_setSupported,set supported from begin sign in request password request options builder sets whether password-backed credentials should be returned by the ap. Return type is Begin Sign In Request. Password Request Options. Builder and parameters are boolean. builder for begin sign in request password request options,sink,sink,sink,sink
832,GetPhoneNumberHintIntentRequest.Builder_build,build from get phone number hint intent request builder . builder for get phone number hint intent reques,source,source,source,neither
833,GetSignInIntentRequest.Builder_build,build from get sign in intent request builder . builder class for get sign in intent request,source,source,source,neither
834,GetSignInIntentRequest.Builder_filterByHostedDomain,filter by hosted domain from get sign in intent request builder sets the hosted domain filte. Return type is Get Sign In Intent Request. Builder and parameters are string. builder class for get sign in intent request,source,source,source,sink
835,GetSignInIntentRequest.Builder_setNonce,set nonce from get sign in intent request builder sets the nonce to use when generating a google id toke. Return type is Get Sign In Intent Request. Builder and parameters are string. builder class for get sign in intent request,sink,sink,sink,sink
836,GetSignInIntentRequest.Builder_setServerClientId,set server client id from get sign in intent request builder sets the client id of the server that will verify the integrity of the toke. Return type is Get Sign In Intent Request. Builder and parameters are string. builder class for get sign in intent request,sink,sink,sink,sink
837,SaveAccountLinkingTokenRequest.Builder_build,build from save account linking token request builder builds an immutable instance of the save account linking token reques. Return type is Save Account Linking Token Request and no argument. builder for save account linking token request,sink,sink,neither,neither
838,SaveAccountLinkingTokenRequest.Builder_setConsentPendingIntent,set consent pending intent from save account linking token request builder sets th. Return type is Save Account Linking Token Request. Builder and parameters are pending intent. builder for save account linking token request,sink,sink,sink,sink
839,SaveAccountLinkingTokenRequest.Builder_setScopes,set scopes from save account linking token request builder sets the list of scopes that are associated with the token that will be saved to googl. Return type is Save Account Linking Token Request. Builder and parameters are list. builder for save account linking token request,sink,sink,sink,sink
840,SaveAccountLinkingTokenRequest.Builder_setServiceId,set service id from save account linking token request builder sets the service-id that can be obtained from your google cloud projec. Return type is Save Account Linking Token Request. Builder and parameters are string. builder for save account linking token request,sink,sink,sink,sink
841,SaveAccountLinkingTokenRequest.Builder_setTokenType,set token type from save account linking token request builder sets the type of token that will be saved to googl. Return type is Save Account Linking Token Request. Builder and parameters are string. builder for save account linking token request,sink,sink,sink,sink
842,SavePasswordRequest.Builder_build,build from save password request builder builds and returns a new instance of save password reques. Return type is Save Password Request and no argument. builder for save password request,sink,sink,neither,neither
843,SavePasswordRequest.Builder_setSignInPassword,set sign in password from save password request builder sets the sign in passwor. Return type is Save Password Request. Builder and parameters are sign in password. builder for save password request,sink,sink,sink,sink
844,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_associateLinkedAccounts,associate linked accounts from begin sign in request google id token request options builder sets whether to support sign-in using google accounts that are linked to your users' account. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string list. builder for begin sign in request google id token request options,sink,neither,sink,sink
845,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_build,build from begin sign in request google id token request options builder returns the built begin sign in request google id token request option. Return type is Begin Sign In Request. Google Id Token Request Options and no argument. builder for begin sign in request google id token request options,neither,neither,source,neither
846,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setFilterByAuthorizedAccounts,set filter by authorized accounts from begin sign in request google id token request options builder sets whether to only allow the user to select from google accounts that are already authorized to sign in to your applicatio. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are boolean. builder for begin sign in request google id token request options,sink,sink,sink,sink
847,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setNonce,set nonce from begin sign in request google id token request options builder sets the nonce to use when generating a google id toke. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string. builder for begin sign in request google id token request options,sink,sink,sink,sink
848,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setServerClientId,set server client id from begin sign in request google id token request options builder sets the server's client id to use as the audience for google id tokens generated during the sign-i. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are string. builder for begin sign in request google id token request options,sink,sink,sink,sink
849,BeginSignInRequest.GoogleIdTokenRequestOptions.Builder_setSupported,set supported from begin sign in request google id token request options builder sets whether google id token-backed credentials should be returned by the ap. Return type is Begin Sign In Request. Google Id Token Request Options. Builder and parameters are boolean. builder for begin sign in request google id token request options,sink,sink,sink,sink
850,BeginSignInRequest.PasswordRequestOptions.Builder_build,build from begin sign in request password request options builder returns the built begin sign in request password request option. Return type is Begin Sign In Request. Password Request Options and no argument. builder for begin sign in request password request options,neither,neither,source,source
851,BeginSignInRequest.PasswordRequestOptions.Builder_setSupported,set supported from begin sign in request password request options builder sets whether password-backed credentials should be returned by the ap. Return type is Begin Sign In Request. Password Request Options. Builder and parameters are boolean. builder for begin sign in request password request options,sink,sink,sink,sink
852,Pay_getClient,get client from pay creates a new instance of pay client for use in an activit. Return type is Pay Client and parameters are activity. entry point for pay api,source,source,source,source
853,Pay_getClient,get client from pay creates a new instance of pay client for use in a non- activity contex. Return type is Pay Client and parameters are context. entry point for pay api,source,source,source,source
854,PayClient_getPayApiAvailabilityStatus,get pay api availability status from pay client gets the pay api availability status of the current user and devic. Return type is Task and parameters are int. interface for pay api,source,source,source,source
855,PayClient_savePasses,save passes from pay client saves one or multiple passes in a json forma. Return type is  void and parameters are string activity int. interface for pay api,sink,sink,sink,sink
856,PayClient_savePassesJwt,save passes jwt from pay client saves one or multiple passes in a jwt forma. Return type is  void and parameters are string activity int. interface for pay api,sink,sink,sink,neither
857,AppOpenAd_getAdUnitId,get ad unit id from app open ad returns the ad unit i. Return type is String and no argument. app open ads are used to display ads when users enter your app,source,source,source,source
858,AppOpenAd_getFullScreenContentCallback,get full screen content callback from app open ad gets the full screen content callback for this app open a. Return type is Full Screen Content Callback and no argument. app open ads are used to display ads when users enter your app,source,source,source,source
859,AppOpenAd_getOnPaidEventListener,get on paid event listener from app open ad gets the on paid event listener for this app open a. Return type is On Paid Event Listener and no argument. app open ads are used to display ads when users enter your app,source,source,source,source
860,AppOpenAd_getResponseInfo,get response info from app open ad returns the response info for the loaded a. Return type is Response Info and no argument. app open ads are used to display ads when users enter your app,source,source,source,source
861,AppOpenAd_load,load from app open ad loads an app open a. Return type is  void and parameters are context string ad manager ad request int app open ad app open ad load callback. app open ads are used to display ads when users enter your app,neither,neither,neither,neither
862,AppOpenAd_load,load from app open ad loads an app open a. Return type is  void and parameters are context string ad request int app open ad app open ad load callback. app open ads are used to display ads when users enter your app,neither,neither,neither,neither
863,AppOpenAd_setFullScreenContentCallback,set full screen content callback from app open ad registers a callback to be invoked when ads show and dismiss full screen conten. Return type is  void and parameters are full screen content callback. app open ads are used to display ads when users enter your app,sink,sink,sink,sink
864,AppOpenAd_setImmersiveMode,set immersive mode from app open ad sets a flag that controls if this app open ad object will be displayed in immersive mod. Return type is  void and parameters are boolean. app open ads are used to display ads when users enter your app,sink,sink,sink,sink
865,AppOpenAd_setOnPaidEventListener,set on paid event listener from app open ad registers a callback to be invoked when this ad is estimated to have earned mone. Return type is  void and parameters are on paid event listener. app open ads are used to display ads when users enter your app,sink,sink,sink,neither
866,AppOpenAd_show,show from app open ad shows the app open a. Return type is  void and parameters are activity. app open ads are used to display ads when users enter your app,neither,neither,source,neither
867,EditAudioTracksData_getCustomData,get custom data from edit audio tracks data returns the custom dat. Return type is J S O N Object and no argument. data structure for edit audio tracks command requests,source,source,source,source
868,EditAudioTracksData_getIsSuggestedLanguage,get is suggested language from edit audio tracks data returns true if the provided language returned by get langua. Return type is Boolean and no argument. data structure for edit audio tracks command requests,source,source,source,source
869,EditAudioTracksData_getLanguage,get language from edit audio tracks data returns the language for the track that should be activ. Return type is String and no argument. data structure for edit audio tracks command requests,source,source,source,source
870,EditAudioTracksData_writeToParcel,write to parcel from edit audio tracks data . data structure for edit audio tracks command requests,sink,sink,sink,sink
871,EditTracksInfoData_getActiveTrackIds,get active track ids from edit tracks info data array of the track i ds that should be activ. Return type is long[] and no argument. data structure for edit track info command requests,source,source,source,source
872,EditTracksInfoData_getCustomData,get custom data from edit tracks info data returns the custom dat. Return type is J S O N Object and no argument. data structure for edit track info command requests,source,source,source,source
873,EditTracksInfoData_getEnableTextTracks,get enable text tracks from edit tracks info data flag to enable or disable text track. Return type is Boolean and no argument. data structure for edit track info command requests,source,source,source,source
874,EditTracksInfoData_getIsSuggestedLanguage,"get is suggested language from edit tracks info data returns true if the provided language was not explicit user request, but rather inferred from used language in voice quer. Return type is Boolean and no argument. data structure for edit track info command requests",source,source,source,source
875,EditTracksInfoData_getLanguage,get language from edit tracks info data language for the tracks that should be activ. Return type is String and no argument. data structure for edit track info command requests,source,source,source,source
876,EditTracksInfoData_getTextTrackStyle,get text track style from edit tracks info data the requested text track styl. Return type is Text Track Style and no argument. data structure for edit track info command requests,source,source,source,source
877,EditTracksInfoData_writeToParcel,write to parcel from edit tracks info data . data structure for edit track info command requests,sink,sink,sink,sink
878,FetchItemsRequestData_getCustomData,get custom data from fetch items request data returns the custom dat. Return type is J S O N Object and no argument. request data structure for fetching more items relative to a media item,source,source,source,source
879,FetchItemsRequestData_getItemId,get item id from fetch items request data returns the id of the item relative to which the other items should be fetche. Return type is int and no argument. request data structure for fetching more items relative to a media item,source,source,source,source
880,FetchItemsRequestData_getNextCount,get next count from fetch items request data returns the maximum number of item i ds to fetch after the given ite. Return type is Integer and no argument. request data structure for fetching more items relative to a media item,source,source,source,source
881,FetchItemsRequestData_getPrevCount,get prev count from fetch items request data returns the maximum number of item i ds to fetch before the given ite. Return type is Integer and no argument. request data structure for fetching more items relative to a media item,source,source,source,source
882,FetchItemsRequestData_writeToParcel,write to parcel from fetch items request data . request data structure for fetching more items relative to a media item,sink,sink,sink,sink
883,MediaCommandCallback_onEditAudioTracks,on edit audio tracks from media command callback called when a edit audio tracks command is receive. Return type is Task and parameters are string edit audio tracks data. callback for cast media commands,sink,sink,neither,neither
884,MediaCommandCallback_onEditTracksInfo,on edit tracks info from media command callback called when a edit tracks info command is receive. Return type is Task and parameters are string edit tracks info data. callback for cast media commands,neither,neither,neither,neither
885,MediaCommandCallback_onFetchItems,on fetch items from media command callback called when a sender requests to fetch more items relative to an ite. Return type is Task and parameters are string fetch items request data. callback for cast media commands,neither,neither,neither,neither
886,MediaCommandCallback_onPause,on pause from media command callback called when a pause command is receive. Return type is Task and parameters are string request data. callback for cast media commands,neither,neither,neither,neither
887,MediaCommandCallback_onPlay,on play from media command callback called when a play command is receive. Return type is Task and parameters are string request data. callback for cast media commands,neither,neither,neither,neither
888,MediaCommandCallback_onPlayAgain,on play again from media command callback called when assistant requests to play the last media agai. Return type is Task and parameters are string request data. callback for cast media commands,neither,neither,neither,neither
889,MediaCommandCallback_onQueueInsert,on queue insert from media command callback called when a queue insert command is receive. Return type is Task and parameters are string queue insert request data. callback for cast media commands,neither,neither,neither,neither
890,MediaCommandCallback_onQueueRemove,on queue remove from media command callback called when a queue remove command is receive. Return type is Task and parameters are string queue remove request data. callback for cast media commands,neither,neither,neither,neither
891,MediaCommandCallback_onQueueReorder,on queue reorder from media command callback called when a queue reorder command is receive. Return type is Task and parameters are string queue reorder request data. callback for cast media commands,neither,neither,neither,neither
892,MediaCommandCallback_onQueueUpdate,on queue update from media command callback called when a queue update command is receive. Return type is Task and parameters are string queue update request data. callback for cast media commands,neither,neither,neither,neither
893,MediaCommandCallback_onSeek,on seek from media command callback called when a seek command is receive. Return type is Task and parameters are string seek request data. callback for cast media commands,neither,neither,neither,neither
894,MediaCommandCallback_onSelectTracksByType,"on select tracks by type from media command callback called by default when a track-editing command is received, either on edit tracks in. Return type is Task and parameters are string int list. callback for cast media commands",neither,neither,neither,neither
895,MediaCommandCallback_onSetPlaybackRate,on set playback rate from media command callback called when a command is received to set the playback rat. Return type is Task and parameters are string set playback rate request data. callback for cast media commands,sink,sink,sink,neither
896,MediaCommandCallback_onSetTextTrackStyle,"on set text track style from media command callback called by default when a track-editing command is received, which requests to change the text track styl. Return type is Task and parameters are string text track style. callback for cast media commands",sink,sink,sink,neither
897,MediaCommandCallback_onSkipAd,on skip ad from media command callback called when a skip ad command is receive. Return type is Task and parameters are string request data. callback for cast media commands,neither,neither,neither,neither
898,MediaCommandCallback_onStop,on stop from media command callback called when a stop command is receive. Return type is Task and parameters are string request data. callback for cast media commands,neither,neither,neither,neither
899,MediaCommandCallback_onUserAction,on user action from media command callback called when the app receives a user actio. Return type is Task and parameters are string user action request data. callback for cast media commands,neither,neither,neither,neither
900,MediaInfoModifier_clear,"clear from media info modifier clears all override. Return type is void and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",neither,neither,neither,neither
901,MediaInfoModifier_getAdBreakClips,"get ad break clips from media info modifier returns the list of ad break clip infos to overrid. Return type is List and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
902,MediaInfoModifier_getAdBreaks,"get ad breaks from media info modifier returns the list of ad break infos to overrid. Return type is List and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
903,MediaInfoModifier_getContentId,"get content id from media info modifier returns the content id to overrid. Return type is String and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
904,MediaInfoModifier_getContentType,"get content type from media info modifier returns the conten. Return type is String and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
905,MediaInfoModifier_getContentUrl,"get content url from media info modifier returns the content url to overrid. Return type is String and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
906,MediaInfoModifier_getCustomData,"get custom data from media info modifier returns the custom data to overrid. Return type is J S O N Object and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
907,MediaInfoModifier_getEntity,"get entity from media info modifier returns the entity to overrid. Return type is String and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
908,MediaInfoModifier_getMediaTracks,"get media tracks from media info modifier returns the list of media tracks to overrid. Return type is List and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
909,MediaInfoModifier_getMetadataModifier,"get metadata modifier from media info modifier returns the media metadata modifie. Return type is Media Metadata Modifier and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
910,MediaInfoModifier_getStartAbsoluteTime,"get start absolute time from media info modifier returns the start absolute time to overrid. Return type is Long and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
911,MediaInfoModifier_getStreamDuration,"get stream duration from media info modifier returns the stream duration to overrid. Return type is Long and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
912,MediaInfoModifier_getStreamType,"get stream type from media info modifier returns the stream type to overrid. Return type is Integer and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
913,MediaInfoModifier_getTextTrackStyle,"get text track style from media info modifier returns the text track style to overrid. Return type is Text Track Style and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
914,MediaInfoModifier_getVmapAdsRequest,"get vmap ads request from media info modifier returns the vmap ad request configuration to overrid. Return type is Vast Ads Request and no argument. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",source,source,source,source
915,MediaInfoModifier_setAdBreakClips,"set ad break clips from media info modifier sets the list of ad break clip info. Return type is Media Info Modifier and parameters are list. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
916,MediaInfoModifier_setAdBreaks,"set ad breaks from media info modifier sets the list of ad break info. Return type is Media Info Modifier and parameters are list. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
917,MediaInfoModifier_setContentId,"set content id from media info modifier sets the content id to overrid. Return type is Media Info Modifier and parameters are string. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
918,MediaInfoModifier_setContentType,"set content type from media info modifier sets the conten. Return type is Media Info Modifier and parameters are string. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
919,MediaInfoModifier_setContentUrl,"set content url from media info modifier sets the url of the content to be playe. Return type is Media Info Modifier and parameters are string. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
920,MediaInfoModifier_setCustomData,"set custom data from media info modifier sets the custom dat. Return type is Media Info Modifier and parameters are j s o n object. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
921,MediaInfoModifier_setDataFromMediaInfo,"set data from media info from media info modifier sets the data of the modifier from a given media inf. Return type is void and parameters are media info. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
922,MediaInfoModifier_setEntity,"set entity from media info modifier sets the entity: a uri that identifies content in an application-specific wa. Return type is Media Info Modifier and parameters are string. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
923,MediaInfoModifier_setMediaTracks,"set media tracks from media info modifier sets the list of media track. Return type is Media Info Modifier and parameters are list. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
924,MediaInfoModifier_setMetadataModifier,"set metadata modifier from media info modifier sets the media metadata modifier which modifies the metadata of the processed media inf. Return type is void and parameters are media metadata modifier. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
925,MediaInfoModifier_setStartAbsoluteTime,"set start absolute time from media info modifier sets the start absolute time, in milliseconds in epoch tim. Return type is Media Info Modifier and parameters are long. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
926,MediaInfoModifier_setStreamDuration,"set stream duration from media info modifier sets the stream duration to override, in millisecond. Return type is Media Info Modifier and parameters are long. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
927,MediaInfoModifier_setStreamType,"set stream type from media info modifier sets the stream type to overrid. Return type is Media Info Modifier and parameters are integer. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
928,MediaInfoModifier_setTextTrackStyle,"set text track style from media info modifier sets the text track styl. Return type is Media Info Modifier and parameters are text track style. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
929,MediaInfoModifier_setVmapAdsRequest,"set vmap ads request from media info modifier sets the vmap ad request configuration, which is a collection of vast ad. Return type is Media Info Modifier and parameters are vast ads request. the modifier to override the media info auto generated from media session, and provide additional fields that are not in media session",sink,sink,sink,sink
930,MediaInfoWriter_getMediaInfo,get media info from media info writer returns the wrapped media info objec. Return type is Media Info and no argument. the writer class to modify a media info instance,source,source,source,source
931,MediaInfoWriter_setAdBreakClips,"set ad break clips from media info writer sets an unmodifiable list of ad break clip infos, or null if unspecifie. Return type is Media Info Writer and parameters are list. the writer class to modify a media info instance",sink,sink,sink,sink
932,MediaInfoWriter_setAdBreaks,"set ad breaks from media info writer sets an unmodifiable list of ad break infos, or null if unspecifie. Return type is Media Info Writer and parameters are list. the writer class to modify a media info instance",sink,sink,sink,sink
933,MediaInfoWriter_setContentId,set content id from media info writer sets the content i. Return type is Media Info Writer and parameters are string. the writer class to modify a media info instance,sink,sink,sink,sink
934,MediaInfoWriter_setContentType,set content type from media info writer sets the conten. Return type is Media Info Writer and parameters are string. the writer class to modify a media info instance,sink,sink,sink,sink
935,MediaInfoWriter_setContentUrl,set content url from media info writer sets the url of the content to be playe. Return type is Media Info Writer and parameters are string. the writer class to modify a media info instance,sink,sink,sink,sink
936,MediaInfoWriter_setCustomData,"set custom data from media info writer sets the custom data, if an. Return type is Media Info Writer and parameters are j s o n object. the writer class to modify a media info instance",sink,sink,sink,sink
937,MediaInfoWriter_setEntity,set entity from media info writer sets the entity: a uri that identifies content in an application-specific wa. Return type is Media Info Writer and parameters are string. the writer class to modify a media info instance,sink,sink,sink,sink
938,MediaInfoWriter_setMediaTracks,"set media tracks from media info writer sets the list of media tracks, or null if unspecifie. Return type is Media Info Writer and parameters are list. the writer class to modify a media info instance",sink,sink,sink,sink
939,MediaInfoWriter_setMetadata,set metadata from media info writer sets the media item metadat. Return type is Media Info Writer and parameters are media metadata. the writer class to modify a media info instance,sink,sink,sink,sink
940,MediaInfoWriter_setStartAbsoluteTime,"set start absolute time from media info writer sets the start absolute time in milliseconds in epoch time, or media info u n k n o w n_ s t a r t_ a b s o l u t e_ t i m e if it is not availabl. Return type is Media Info Writer and parameters are long. the writer class to modify a media info instance",sink,sink,sink,sink
941,MediaInfoWriter_setStreamDuration,"set stream duration from media info writer sets the stream duration, in millisecond. Return type is Media Info Writer and parameters are long. the writer class to modify a media info instance",sink,sink,sink,sink
942,MediaInfoWriter_setStreamType,set stream type from media info writer sets the stream typ. Return type is Media Info Writer and parameters are int. the writer class to modify a media info instance,sink,sink,sink,sink
943,MediaInfoWriter_setTextTrackStyle,"set text track style from media info writer sets the text track style, or null if unspecifie. Return type is Media Info Writer and parameters are text track style. the writer class to modify a media info instance",sink,sink,sink,sink
944,MediaInfoWriter_setVmapAdsRequest,"set vmap ads request from media info writer sets the vmap ad request configuration, which is a collection of vast ad. Return type is Media Info Writer and parameters are vast ads request. the writer class to modify a media info instance",sink,sink,sink,sink
945,MediaLoadCommandCallback_onLoad,on load from media load command callback called when a sender requests to load medi. Return type is Task and parameters are string media load request data. callback for cast load commands,neither,neither,neither,neither
946,MediaManager_broadcastMediaStatus,broadcast media status from media manager trigger a media status broadcas. Return type is void and no argument. manager class for all media status and commands,neither,neither,neither,neither
947,MediaManager_getBaseMediaStatus,"get base media status from media manager returns the base media status which is generated from android media session, before applying any overrides from media status modifier, media queue manager or media manager media status intercepto. Return type is Media Status and no argument. manager class for all media status and commands",source,source,source,source
948,MediaManager_getCurrentMediaStatus,get current media status from media manager returns the current media status generated from the base media status with overrides applied from media status modifier and media queue manage. Return type is Media Status and no argument. manager class for all media status and commands,source,source,source,source
949,MediaManager_getMediaQueueManager,get media queue manager from media manager returns the media queue manage. Return type is Media Queue Manager and no argument. manager class for all media status and commands,source,source,source,source
950,MediaManager_getMediaStatusModifier,get media status modifier from media manager returns the media status modifie. Return type is Media Status Modifier and no argument. manager class for all media status and commands,source,source,source,source
951,MediaManager_onNewIntent,on new intent from media manager passes a new activity intent to media manage. Return type is boolean and parameters are intent. manager class for all media status and commands,neither,neither,sink,neither
952,MediaManager_setDataFromLoad,set data from load from media manager initializes media status modifier and media queue manager overrides using the information from a load reques. Return type is void and parameters are media load request data. manager class for all media status and commands,sink,sink,sink,sink
953,MediaManager_setMediaCommandCallback,set media command callback from media manager sets the media command callbac. Return type is void and parameters are media command callback. manager class for all media status and commands,sink,sink,sink,sink
954,MediaManager_setMediaLoadCommandCallback,set media load command callback from media manager sets the media load command callback to handle load and resume session request. Return type is void and parameters are media load command callback. manager class for all media status and commands,sink,sink,sink,sink
955,MediaManager_setMediaStatusInterceptor,set media status interceptor from media manager sets the media manager media status interceptor to intercept and modify the media status before it is being sent ou. Return type is void and parameters are media manager media status interceptor. manager class for all media status and commands,sink,sink,sink,sink
956,MediaManager_setSessionCompatToken,set session compat token from media manager sets and attaches to a media session toke. Return type is void and parameters are media session compat token. manager class for all media status and commands,sink,sink,sink,sink
957,MediaMetadataModifier_clear,clear from media metadata modifier clears all override. Return type is void and no argument. the class to modify the media metadata of the media info in media status,neither,neither,neither,neither
958,MediaMetadataModifier_getDate,get date from media metadata modifier returns the date override on a given ke. Return type is Calendar and parameters are string. the class to modify the media metadata of the media info in media status,source,source,source,source
959,MediaMetadataModifier_getDouble,get double from media metadata modifier returns the double override on a given ke. Return type is Double and parameters are string. the class to modify the media metadata of the media info in media status,source,source,source,source
960,MediaMetadataModifier_getImages,get images from media metadata modifier returns the list of images to overrid. Return type is List and no argument. the class to modify the media metadata of the media info in media status,source,source,source,source
961,MediaMetadataModifier_getInt,get int from media metadata modifier returns the int override on a given ke. Return type is Integer and parameters are string. the class to modify the media metadata of the media info in media status,source,source,source,source
962,MediaMetadataModifier_getMediaType,get media type from media metadata modifier returns the media type to overrid. Return type is Integer and no argument. the class to modify the media metadata of the media info in media status,source,source,source,source
963,MediaMetadataModifier_getString,get string from media metadata modifier returns the string override on a given ke. Return type is String and parameters are string. the class to modify the media metadata of the media info in media status,source,source,source,source
964,MediaMetadataModifier_getTimeMillis,get time millis from media metadata modifier returns the time override on a given ke. Return type is Long and parameters are string. the class to modify the media metadata of the media info in media status,source,source,source,source
965,MediaMetadataModifier_hasOverrideForKey,has override for key from media metadata modifier returns whether the metadata has override on a given ke. Return type is boolean and parameters are string. the class to modify the media metadata of the media info in media status,source,source,source,source
966,MediaMetadataModifier_putDate,put date from media metadata modifier specifies a value to override in a date fiel. Return type is Media Metadata Modifier and parameters are string calendar. the class to modify the media metadata of the media info in media status,sink,sink,sink,sink
967,MediaMetadataModifier_putDouble,put double from media metadata modifier specifies a value to override in a double fiel. Return type is Media Metadata Modifier and parameters are string double. the class to modify the media metadata of the media info in media status,sink,sink,sink,sink
968,MediaMetadataModifier_putInt,put int from media metadata modifier specifies a value to override in a int fiel. Return type is Media Metadata Modifier and parameters are string integer. the class to modify the media metadata of the media info in media status,sink,sink,sink,sink
969,MediaMetadataModifier_putString,put string from media metadata modifier specifies a value to override in a string fiel. Return type is Media Metadata Modifier and parameters are string string. the class to modify the media metadata of the media info in media status,sink,sink,sink,sink
970,MediaMetadataModifier_putTimeMillis,"put time millis from media metadata modifier specifies a value to override in a time field, as a long in millisecond. Return type is Media Metadata Modifier and parameters are string long. the class to modify the media metadata of the media info in media status",sink,sink,sink,sink
971,MediaMetadataModifier_removeOverride,"remove override from media metadata modifier remove the override of the given key, so that the sdk uses the default value auto-generated from media metadata compa. Return type is Media Metadata Modifier and parameters are string. the class to modify the media metadata of the media info in media status",neither,neither,neither,neither
972,MediaMetadataModifier_setImages,set images from media metadata modifier specifies the list of images to overrid. Return type is Media Metadata Modifier and parameters are list. the class to modify the media metadata of the media info in media status,sink,sink,sink,sink
973,MediaMetadataModifier_setMediaType,set media type from media metadata modifier sets the media type to overrid. Return type is Media Metadata Modifier and parameters are integer. the class to modify the media metadata of the media info in media status,sink,sink,sink,sink
974,MediaQueueItemWriter_setActiveTrackIds,set active track ids from media queue item writer sets the active track i ds for this ite. Return type is Media Queue Item Writer and parameters are long[]. the modifier to modify media queue item,sink,sink,sink,sink
975,MediaQueueItemWriter_setAutoplay,set autoplay from media queue item writer sets the autoplay for this ite. Return type is Media Queue Item Writer and parameters are boolean. the modifier to modify media queue item,sink,sink,sink,sink
976,MediaQueueItemWriter_setCustomData,set custom data from media queue item writer sets the custom data for this ite. Return type is Media Queue Item Writer and parameters are j s o n object. the modifier to modify media queue item,sink,sink,sink,sink
977,MediaQueueItemWriter_setItemId,set item id from media queue item writer sets the item id for this ite. Return type is Media Queue Item Writer and parameters are int. the modifier to modify media queue item,sink,sink,sink,sink
978,MediaQueueItemWriter_setMedia,set media from media queue item writer sets the media info for this ite. Return type is Media Queue Item Writer and parameters are media info. the modifier to modify media queue item,sink,sink,sink,sink
979,MediaQueueItemWriter_setPlaybackDuration,set playback duration from media queue item writer sets the playback duration for this ite. Return type is Media Queue Item Writer and parameters are double. the modifier to modify media queue item,sink,sink,sink,sink
980,MediaQueueItemWriter_setPreloadTime,set preload time from media queue item writer sets the preload time for this ite. Return type is Media Queue Item Writer and parameters are double. the modifier to modify media queue item,sink,sink,sink,sink
981,MediaQueueItemWriter_setStartTime,set start time from media queue item writer sets the start time for this ite. Return type is Media Queue Item Writer and parameters are double. the modifier to modify media queue item,sink,sink,sink,sink
982,MediaQueueManager_autoGenerateItemId,auto generate item id from media queue manager allocate a new unique item i. Return type is int and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,neither,neither,source,source
983,MediaQueueManager_clear,clear from media queue manager clears all overrides in this media queue manage. Return type is void and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,neither,neither,neither,neither
984,MediaQueueManager_getCurrentItemId,get current item id from media queue manager returns the current item id to override in media statu. Return type is Integer and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,source,source,source,source
985,MediaQueueManager_getMediaQueueData,get media queue data from media queue manager returns the media queue data that is being used to override in media statu. Return type is Media Queue Data and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,source,source,source,source
986,MediaQueueManager_getQueueItems,get queue items from media queue manager returns the current list of items that is being used to override in media statu. Return type is List and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,source,source,source,source
987,MediaQueueManager_getQueueRepeatMode,get queue repeat mode from media queue manager returns the queue repeat mode to override in media statu. Return type is Integer and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,source,source,source,source
988,MediaQueueManager_notifyItemsChanged,notify items changed from media queue manager notifies that some items in the queue has change. Return type is void and parameters are list. the class for manipulating the media queue which overrides the default queue translated from media session,sink,neither,sink,neither
989,MediaQueueManager_notifyItemsInserted,notify items inserted from media queue manager notifies that items has been inserted into the queu. Return type is void and parameters are list integer. the class for manipulating the media queue which overrides the default queue translated from media session,sink,neither,sink,sink
990,MediaQueueManager_notifyItemsRemoved,notify items removed from media queue manager notifies that items has been removed from the queu. Return type is void and parameters are list. the class for manipulating the media queue which overrides the default queue translated from media session,neither,neither,sink,neither
991,MediaQueueManager_notifyQueueFullUpdate,notify queue full update from media queue manager notifies that the entire queue has been change. Return type is void and no argument. the class for manipulating the media queue which overrides the default queue translated from media session,sink,neither,sink,neither
992,MediaQueueManager_setCurrentItemId,set current item id from media queue manager sets the current item id to override in media statu. Return type is Media Queue Manager and parameters are integer. the class for manipulating the media queue which overrides the default queue translated from media session,sink,sink,sink,sink
993,MediaQueueManager_setMediaQueueData,set media queue data from media queue manager sets the media queue data to override in media statu. Return type is Media Queue Manager and parameters are media queue data. the class for manipulating the media queue which overrides the default queue translated from media session,sink,sink,sink,sink
994,MediaQueueManager_setQueueItems,set queue items from media queue manager sets the list of items to override the items in media statu. Return type is Media Queue Manager and parameters are list. the class for manipulating the media queue which overrides the default queue translated from media session,sink,sink,sink,sink
995,MediaQueueManager_setQueueRepeatMode,set queue repeat mode from media queue manager sets the queue repeat mode to override in media statu. Return type is Media Queue Manager and parameters are integer. the class for manipulating the media queue which overrides the default queue translated from media session,sink,sink,sink,sink
996,MediaQueueManager_setQueueStatusLimit,set queue status limit from media queue manager sets whether to limit the number of queue items to be reported in media statu. Return type is void and parameters are boolean. the class for manipulating the media queue which overrides the default queue translated from media session,sink,sink,sink,sink
997,MediaResumeSessionRequestData_equals,equals from media resume session request data . the data structure for a resume session request,neither,neither,neither,neither
998,MediaResumeSessionRequestData_getCustomData,get custom data from media resume session request data returns the custom dat. Return type is J S O N Object and no argument. the data structure for a resume session request,source,source,source,source
999,MediaResumeSessionRequestData_getSessionState,get session state from media resume session request data returns the session state of the resume session reques. Return type is Session State and no argument. the data structure for a resume session request,source,source,source,source
1000,MediaResumeSessionRequestData_hashCode,hash code from media resume session request data . the data structure for a resume session request,source,source,neither,neither
1001,MediaResumeSessionRequestData_writeToParcel,write to parcel from media resume session request data . the data structure for a resume session request,sink,sink,sink,sink
1002,MediaStatusModifier_clear,"clear from media status modifier clears all overrides in the modifie. Return type is void and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",neither,neither,neither,neither
1003,MediaStatusModifier_getAdBreakStatus,"get ad break status from media status modifier returns the ad break status to overrid. Return type is Ad Break Status and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1004,MediaStatusModifier_getCustomData,"get custom data from media status modifier returns the custom data to overrid. Return type is J S O N Object and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1005,MediaStatusModifier_getIdleReason,"get idle reason from media status modifier returns the idle reason to overrid. Return type is Integer and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1006,MediaStatusModifier_getLiveSeekableRange,"get live seekable range from media status modifier returns the media live seekable range to overrid. Return type is Media Live Seekable Range and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1007,MediaStatusModifier_getLoadingItemId,"get loading item id from media status modifier returns the id of the current item being loaded to overrid. Return type is Integer and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1008,MediaStatusModifier_getMediaInfoModifier,"get media info modifier from media status modifier returns the media info modifier to override fields of the top-level media inf. Return type is Media Info Modifier and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1009,MediaStatusModifier_getMediaTracksModifier,"get media tracks modifier from media status modifier returns the media tracks modifie. Return type is Media Tracks Modifier and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1010,MediaStatusModifier_getPlaybackRate,"get playback rate from media status modifier returns the playback rate to overrid. Return type is Double and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1011,MediaStatusModifier_getPlayerState,"get player state from media status modifier returns the player state to overrid. Return type is Integer and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1012,MediaStatusModifier_getPreloadedItemId,"get preloaded item id from media status modifier returns the id of the item that has been preloaded to overrid. Return type is Integer and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1013,MediaStatusModifier_getStreamPosition,"get stream position from media status modifier returns the stream position to overrid. Return type is Long and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1014,MediaStatusModifier_getSupportedMediaCommandOverride,"get supported media command override from media status modifier returns the supported media commands to overrid. Return type is Map and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1015,MediaStatusModifier_getVideoInfo,"get video info from media status modifier returns the video info to overrid. Return type is Video Info and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1016,MediaStatusModifier_isPlayingAd,"is playing ad from media status modifier returns whether the receiver is playing ad to overrid. Return type is Boolean and no argument. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",source,source,source,source
1017,MediaStatusModifier_setAdBreakStatus,"set ad break status from media status modifier sets the ad break statu. Return type is Media Status Modifier and parameters are ad break status. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1018,MediaStatusModifier_setCustomData,"set custom data from media status modifier sets the custom dat. Return type is Media Status Modifier and parameters are j s o n object. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1019,MediaStatusModifier_setIdleReason,"set idle reason from media status modifier sets the idle reason to override the auto-generated valu. Return type is Media Status Modifier and parameters are integer. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1020,MediaStatusModifier_setIsPlayingAd,"set is playing ad from media status modifier sets whether the receiver is playing a. Return type is Media Status Modifier and parameters are boolean. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1021,MediaStatusModifier_setLiveSeekableRange,"set live seekable range from media status modifier sets the media live seekable rang. Return type is Media Status Modifier and parameters are media live seekable range. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1022,MediaStatusModifier_setLoadingItemId,"set loading item id from media status modifier sets the id of the current item being loade. Return type is Media Status Modifier and parameters are integer. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1023,MediaStatusModifier_setMediaCommandSupported,"set media command supported from media status modifier sets an override to specify whether a media command is supporte. Return type is Media Status Modifier and parameters are long boolean. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1024,MediaStatusModifier_setMediaInfoModifier,"set media info modifier from media status modifier sets the media info modifier to override fields of the top-level media inf. Return type is void and parameters are media info modifier. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1025,MediaStatusModifier_setPlaybackRate,"set playback rate from media status modifier sets the playback rate to override the auto-generated valu. Return type is Media Status Modifier and parameters are double. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1026,MediaStatusModifier_setPlayerState,"set player state from media status modifier sets the player state to override the auto-generated valu. Return type is Media Status Modifier and parameters are integer. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1027,MediaStatusModifier_setPreloadedItemId,"set preloaded item id from media status modifier sets the id of the item that has been preloade. Return type is Media Status Modifier and parameters are integer. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1028,MediaStatusModifier_setStreamPosition,"set stream position from media status modifier sets the stream position to override the auto-generated valu. Return type is Media Status Modifier and parameters are long. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1029,MediaStatusModifier_setVideoInfo,"set video info from media status modifier sets the video inf. Return type is Media Status Modifier and parameters are video info. the modifier to override the base media status auto generated from media session, and provide additional status that are not in media session",sink,sink,sink,sink
1030,MediaStatusWriter_getMediaInfoWriter,get media info writer from media status writer returns a media info writer to modify the media info in this media statu. Return type is Media Info Writer and no argument. the writer class to make modifications on a media status instance,source,source,source,source
1031,MediaStatusWriter_getMediaStatus,get media status from media status writer returns the wrapped media status objec. Return type is Media Status and no argument. the writer class to make modifications on a media status instance,source,source,source,source
1032,MediaStatusWriter_setActiveTrackIds,set active track ids from media status writer sets the list of active track id. Return type is Media Status Writer and parameters are long[]. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1033,MediaStatusWriter_setAdBreakStatus,set ad break status from media status writer sets the ad break statu. Return type is Media Status Writer and parameters are ad break status. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1034,MediaStatusWriter_setCurrentItemId,set current item id from media status writer sets the item id of the item that that was active in the queu. Return type is Media Status Writer and parameters are int. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1035,MediaStatusWriter_setCustomData,set custom data from media status writer sets any custom data that is associated with the media ite. Return type is Media Status Writer and parameters are j s o n object. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1036,MediaStatusWriter_setIdleReason,set idle reason from media status writer sets the player state idle reaso. Return type is Media Status Writer and parameters are int. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1037,MediaStatusWriter_setIsPlayingAd,set is playing ad from media status writer sets whether an ad is playing on the receive. Return type is Media Status Writer and parameters are boolean. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1038,MediaStatusWriter_setLiveSeekableRange,set live seekable range from media status writer sets the seekable range of a live strea. Return type is Media Status Writer and parameters are media live seekable range. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1039,MediaStatusWriter_setLoadingItemId,set loading item id from media status writer sets the item id of the item that is currently loadin. Return type is Media Status Writer and parameters are int. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1040,MediaStatusWriter_setMediaInfo,set media info from media status writer sets the media info for this ite. Return type is Media Status Writer and parameters are media info. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1041,MediaStatusWriter_setMuteState,set mute state from media status writer sets the stream's mute stat. Return type is Media Status Writer and parameters are boolean. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1042,MediaStatusWriter_setPlaybackRate,set playback rate from media status writer sets the current stream playback rat. Return type is Media Status Writer and parameters are double. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1043,MediaStatusWriter_setPlayerState,set player state from media status writer sets the current media player stat. Return type is Media Status Writer and parameters are int. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1044,MediaStatusWriter_setPreloadedItemId,set preloaded item id from media status writer sets the next item has been preloaded this returns the preloaded item i. Return type is Media Status Writer and parameters are int. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1045,MediaStatusWriter_setQueueData,set queue data from media status writer sets the media queue dat. Return type is Media Status Writer and parameters are media queue data. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1046,MediaStatusWriter_setQueueItems,set queue items from media status writer sets the list of media queue ite. Return type is Media Status Writer and parameters are list. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1047,MediaStatusWriter_setQueueRepeatMode,set queue repeat mode from media status writer sets the repeat mode of the media queu. Return type is Media Status Writer and parameters are int. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1048,MediaStatusWriter_setStreamPosition,"set stream position from media status writer sets the current stream position, in millisecond. Return type is Media Status Writer and parameters are long. the writer class to make modifications on a media status instance",sink,sink,sink,sink
1049,MediaStatusWriter_setStreamVolume,set stream volume from media status writer sets the stream's volum. Return type is Media Status Writer and parameters are double. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1050,MediaStatusWriter_setSupportedMediaCommands,set supported media commands from media status writer sets the supported media command. Return type is Media Status Writer and parameters are long. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1051,MediaStatusWriter_setVideoInfo,set video info from media status writer sets the video inf. Return type is Media Status Writer and parameters are video info. the writer class to make modifications on a media status instance,sink,sink,sink,sink
1052,MediaTracksModifier_clear,clear from media tracks modifier clears the active track id. Return type is void and no argument. modifier class for managing media tracks,neither,neither,neither,neither
1053,MediaTracksModifier_getActiveTrackIds,get active track ids from media tracks modifier returns the set of i ds of all track. Return type is Set and no argument. modifier class for managing media tracks,source,source,source,source
1054,MediaTracksModifier_getActiveTracksByType,get active tracks by type from media tracks modifier returns the list of active media tracks of typ. Return type is List and parameters are int. modifier class for managing media tracks,source,source,source,source
1055,MediaTracksModifier_getMediaTracks,get media tracks from media tracks modifier returns the list of media tracks of the top-level media info modifie. Return type is List and no argument. modifier class for managing media tracks,source,source,source,source
1056,MediaTracksModifier_getMediaTracksByType,get media tracks by type from media tracks modifier returns the list of media tracks of type of the top-level media info modifie. Return type is List and parameters are int. modifier class for managing media tracks,source,source,source,source
1057,MediaTracksModifier_setActiveTrackIds,set active track ids from media tracks modifier sets the list of active track id. Return type is Media Tracks Modifier and parameters are long[]. modifier class for managing media tracks,sink,sink,sink,sink
1058,MediaTracksModifier_setActiveTracksByType,set active tracks by type from media tracks modifier sets the active track i ds of typ. Return type is void and parameters are int set. modifier class for managing media tracks,sink,sink,sink,sink
1059,MediaTracksModifier_setActiveTracksByType,set active tracks by type from media tracks modifier sets the active tracks for of typ. Return type is void and parameters are int list. modifier class for managing media tracks,sink,sink,sink,sink
1060,QueueInsertRequestData_getCurrentItemId,get current item id from queue insert request data i d of the current media item after the insertio. Return type is Integer and no argument. data structure for queue insert command requests,source,source,source,source
1061,QueueInsertRequestData_getCurrentItemIndex,get current item index from queue insert request data inde. Return type is Integer and no argument. data structure for queue insert command requests,source,source,source,source
1062,QueueInsertRequestData_getCurrentTime,get current time from queue insert request data milliseconds since the beginning of content to start playback of the current ite. Return type is Long and no argument. data structure for queue insert command requests,source,source,source,source
1063,QueueInsertRequestData_getCustomData,get custom data from queue insert request data returns the custom dat. Return type is J S O N Object and no argument. data structure for queue insert command requests,source,source,source,source
1064,QueueInsertRequestData_getInsertBefore,get insert before from queue insert request data i d of the item that will be located immediately after the inserted lis. Return type is Integer and no argument. data structure for queue insert command requests,source,source,source,source
1065,QueueInsertRequestData_getItems,get items from queue insert request data list of queue item. Return type is List and no argument. data structure for queue insert command requests,source,source,source,source
1066,QueueInsertRequestData_writeToParcel,write to parcel from queue insert request data . data structure for queue insert command requests,sink,sink,sink,sink
1067,QueueRemoveRequestData_getCurrentItemId,get current item id from queue remove request data i d of the current media item after the deletio. Return type is Integer and no argument. data structure for queue remove command requests,source,source,source,source
1068,QueueRemoveRequestData_getCurrentTime,get current time from queue remove request data milliseconds since the beginning of content to start playback of the current ite. Return type is Long and no argument. data structure for queue remove command requests,source,source,source,source
1069,QueueRemoveRequestData_getCustomData,get custom data from queue remove request data returns the custom dat. Return type is J S O N Object and no argument. data structure for queue remove command requests,source,source,source,source
1070,QueueRemoveRequestData_getItemIds,get item ids from queue remove request data i ds of queue items to be delete. Return type is List and no argument. data structure for queue remove command requests,source,source,source,source
1071,QueueRemoveRequestData_writeToParcel,write to parcel from queue remove request data . data structure for queue remove command requests,sink,sink,sink,sink
1072,QueueReorderRequestData_getCurrentItemId,get current item id from queue reorder request data i d of the current media item after the reorde. Return type is Integer and no argument. data structure for queue reorder command requests,source,source,source,source
1073,QueueReorderRequestData_getCurrentTime,get current time from queue reorder request data milliseconds since the beginning of content to start playback of the current ite. Return type is Long and no argument. data structure for queue reorder command requests,source,source,source,source
1074,QueueReorderRequestData_getCustomData,get custom data from queue reorder request data returns the custom dat. Return type is J S O N Object and no argument. data structure for queue reorder command requests,source,source,source,source
1075,QueueReorderRequestData_getInsertBefore,get insert before from queue reorder request data i d of the item that will be located immediately after the reordered lis. Return type is Integer and no argument. data structure for queue reorder command requests,source,source,source,source
1076,QueueReorderRequestData_getItemIds,"get item ids from queue reorder request data i ds of the items to be reordered, in the new orde. Return type is List and no argument. data structure for queue reorder command requests",source,source,source,source
1077,QueueReorderRequestData_writeToParcel,write to parcel from queue reorder request data . data structure for queue reorder command requests,sink,sink,sink,sink
1078,QueueUpdateRequestData_getCurrentItemId,get current item id from queue update request data i d of the current media item after the change. Return type is Integer and no argument. data structure for queue update command requests,source,source,source,source
1079,QueueUpdateRequestData_getCurrentTime,get current time from queue update request data milliseconds since the beginning of content to start playback of the current ite. Return type is Long and no argument. data structure for queue update command requests,source,source,source,source
1080,QueueUpdateRequestData_getCustomData,get custom data from queue update request data returns the custom dat. Return type is J S O N Object and no argument. data structure for queue update command requests,source,source,source,source
1081,QueueUpdateRequestData_getItems,get items from queue update request data list of queue items to be update. Return type is List and no argument. data structure for queue update command requests,source,source,source,source
1082,QueueUpdateRequestData_getJump,get jump from queue update request data skip/ go back jump number of items with respect to the position of current ite. Return type is Integer and no argument. data structure for queue update command requests,source,source,source,source
1083,QueueUpdateRequestData_getRepeatMode,get repeat mode from queue update request data behavior of the queue when all items have been playe. Return type is Integer and no argument. data structure for queue update command requests,source,source,source,source
1084,QueueUpdateRequestData_getShuffle,get shuffle from queue update request data shuffle the queue items when the update is processe. Return type is Boolean and no argument. data structure for queue update command requests,source,source,source,source
1085,QueueUpdateRequestData_writeToParcel,write to parcel from queue update request data . data structure for queue update command requests,sink,sink,sink,sink
1086,SeekRequestData_getCurrentTime,"get current time from seek request data returns the absolute time to seek to, in millisecond. Return type is Long and no argument. data structure for seek command requests",source,source,source,source
1087,SeekRequestData_getCustomData,get custom data from seek request data returns the custom dat. Return type is J S O N Object and no argument. data structure for seek command requests,source,source,source,source
1088,SeekRequestData_getRelativeTime,"get relative time from seek request data returns the time to seek to, relative to the current position, in millisecond. Return type is Long and no argument. data structure for seek command requests",source,source,source,source
1089,SeekRequestData_getResumeState,get resume state from seek request data returns the resume stat. Return type is int and no argument. data structure for seek command requests,source,source,source,source
1090,SeekRequestData_writeToParcel,write to parcel from seek request data . data structure for seek command requests,sink,sink,sink,sink
1091,SetPlaybackRateRequestData_getCustomData,get custom data from set playback rate request data returns the custom dat. Return type is J S O N Object and no argument. data structure for set playback rate command requests,source,source,source,source
1092,SetPlaybackRateRequestData_getPlaybackRate,get playback rate from set playback rate request data returns the new playback rat. Return type is Double and no argument. data structure for set playback rate command requests,source,source,source,source
1093,SetPlaybackRateRequestData_getRelativePlaybackRate,get relative playback rate from set playback rate request data returns the new playback rate relative to current playback rat. Return type is Double and no argument. data structure for set playback rate command requests,source,source,source,source
1094,SetPlaybackRateRequestData_writeToParcel,write to parcel from set playback rate request data . data structure for set playback rate command requests,sink,sink,sink,sink
1095,StoreSessionRequestData_getCustomData,get custom data from store session request data returns the custom dat. Return type is J S O N Object and no argument. request data for storing session state for stream transfer,source,source,source,source
1096,StoreSessionRequestData_writeToParcel,write to parcel from store session request data . request data for storing session state for stream transfer,sink,sink,sink,sink
1097,StoreSessionResponseData_equals,equals from store session response data . the response data for s t o r e_ s e s s i o n events,neither,neither,neither,neither
1098,StoreSessionResponseData_getCustomData,get custom data from store session response data returns the custom dat. Return type is J S O N Object and no argument. the response data for s t o r e_ s e s s i o n events,source,source,source,source
1099,StoreSessionResponseData_getSessionState,get session state from store session response data returns the session stat. Return type is Session State and no argument. the response data for s t o r e_ s e s s i o n events,source,source,source,source
1100,StoreSessionResponseData_hashCode,hash code from store session response data . the response data for s t o r e_ s e s s i o n events,source,source,source,source
1101,StoreSessionResponseData_writeToParcel,write to parcel from store session response data . the response data for s t o r e_ s e s s i o n events,sink,sink,sink,sink
1102,StoreSessionResponseData.Builder_build,build from store session response data builder builds a store session response dat. Return type is Store Session Response Data and no argument. builder of store session response data,neither,neither,neither,neither
1103,StoreSessionResponseData.Builder_setCustomData,set custom data from store session response data builder sets the custom dat. Return type is Store Session Response Data. Builder and parameters are j s o n object. builder of store session response data,sink,sink,sink,sink
1104,StoreSessionResponseData.Builder_setSessionState,set session state from store session response data builder sets the session stat. Return type is Store Session Response Data. Builder and parameters are session state. builder of store session response data,sink,sink,sink,sink
1105,UserActionRequestData_getCustomData,get custom data from user action request data returns the custom dat. Return type is J S O N Object and no argument. data structure for user action requests in command and command namespace,source,source,source,source
1106,UserActionRequestData_getUserAction,get user action from user action request data returns the user actio. Return type is String and no argument. data structure for user action requests in command and command namespace,source,source,source,source
1107,UserActionRequestData_getUserActionContext,get user action context from user action request data returns the context of user actio. Return type is String and no argument. data structure for user action requests in command and command namespace,source,source,source,source
1108,UserActionRequestData_writeToParcel,write to parcel from user action request data . data structure for user action requests in command and command namespace,sink,sink,sink,sink
1109,MediaManager.MediaStatusInterceptor_intercept,intercept from media manager media status interceptor intercepts a media status to modify it right before it's being broadcaste. Return type is  void and parameters are media status writer. interceptor interface for media status,neither,neither,neither,neither
1110,MediaManager.MediaStatusInterceptor_intercept,intercept from media manager media status interceptor intercepts a media status to modify it right before it's being broadcaste. Return type is  void and parameters are media status writer. interceptor interface for media status,neither,neither,neither,neither
1111,StoreSessionResponseData.Builder_build,build from store session response data builder builds a store session response dat. Return type is Store Session Response Data and no argument. builder of store session response data,neither,neither,neither,neither
1112,StoreSessionResponseData.Builder_setCustomData,set custom data from store session response data builder sets the custom dat. Return type is Store Session Response Data. Builder and parameters are j s o n object. builder of store session response data,sink,sink,sink,sink
1113,StoreSessionResponseData.Builder_setSessionState,set session state from store session response data builder sets the session stat. Return type is Store Session Response Data. Builder and parameters are session state. builder of store session response data,sink,sink,sink,sink
1114,AnalyticsJobService_callServiceStopSelfResult,call service stop self result from analytics job service . a job service used by google analytics,neither,neither,neither,neither
1115,AnalyticsJobService_onStartJob,on start job from analytics job service . a job service used by google analytics,neither,neither,neither,neither
1116,AnalyticsJobService_onStopJob,on stop job from analytics job service . a job service used by google analytics,neither,neither,neither,neither
1117,AnalyticsReceiver_onReceive,on receive from analytics receiver . a broadcast receiver used by google analytics,neither,neither,neither,neither
1118,AnalyticsService_callServiceStopSelfResult,call service stop self result from analytics service . a service used by google analytics,neither,neither,neither,neither
1119,AnalyticsService_onBind,on bind from analytics service . a service used by google analytics,neither,neither,neither,neither
1120,CampaignTrackingReceiver_onReceive,on receive from campaign tracking receiver . google analytics receiver for com android vending i n s t a l l_ r e f e r r e r,neither,neither,neither,neither
1121,CampaignTrackingService_onBind,on bind from campaign tracking service . this class was deprecated  campaign tracking happens in campaign tracking receiver only,neither,neither,neither,neither
1122,ExceptionReporter_getExceptionParser,get exception parser from exception reporter . used to catch any uncaught exceptions and report them to google analytics,source,source,source,source
1123,ExceptionReporter_setExceptionParser,set exception parser from exception reporter . used to catch any uncaught exceptions and report them to google analytics,sink,sink,sink,neither
1124,ExceptionReporter_uncaughtException,uncaught exception from exception reporter . used to catch any uncaught exceptions and report them to google analytics,neither,neither,neither,neither
1125,GoogleAnalytics_dispatchLocalHits,dispatch local hits from google analytics dispatches hits queued in the application stor. Return type is void and no argument. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,neither,neither,neither,neither
1126,GoogleAnalytics_enableAutoActivityReports,enable auto activity reports from google analytics on devices running api level 1. Return type is void and parameters are application. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,sink,sink,sink,sink
1127,GoogleAnalytics_getAppOptOut,get app opt out from google analytics returns whether the state of the application-level opt is o. Return type is boolean and no argument. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,source,source,source,source
1128,GoogleAnalytics_getInstance,"get instance from google analytics gets the google analytics instance, creating it when necessar. Return type is Google Analytics and parameters are context. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects",source,source,source,source
1129,GoogleAnalytics_getLogger,get logger from google analytics this method was deprecated logger interface is deprecated see logger interface for detail. Return type is Logger and no argument. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,source,source,source,source
1130,GoogleAnalytics_isDryRunEnabled,is dry run enabled from google analytics returns whether dry run mode is o. Return type is boolean and no argument. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,neither,neither,source,neither
1131,GoogleAnalytics_newTracker,new tracker from google analytics returns a tracker instance with the given tracking i. Return type is Tracker and parameters are string. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,neither,neither,neither,neither
1132,GoogleAnalytics_newTracker,new tracker from google analytics returns a tracker instance preconfigured with the values specified in config res i. Return type is Tracker and parameters are int. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,neither,neither,neither,sink
1133,GoogleAnalytics_reportActivityStart,"report activity start from google analytics report the start of an activity, so that it can be tracked by any trackers that have enabled auto activity trackin. Return type is void and parameters are activity. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects",sink,sink,neither,sink
1134,GoogleAnalytics_reportActivityStop,report activity stop from google analytics report the end of an activit. Return type is void and parameters are activity. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,neither,neither,neither,neither
1135,GoogleAnalytics_setAppOptOut,set app opt out from google analytics sets or resets the application-level opt out fla. Return type is void and parameters are boolean. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,sink,sink,sink,sink
1136,GoogleAnalytics_setDryRun,set dry run from google analytics toggles dry run mod. Return type is void and parameters are boolean. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,sink,sink,sink,sink
1137,GoogleAnalytics_setLocalDispatchPeriod,set local dispatch period from google analytics sets dispatch period for the local dispatche. Return type is void and parameters are int. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,sink,sink,sink,sink
1138,GoogleAnalytics_setLogger,set logger from google analytics this method was deprecated logger interface is deprecated see logger interface for detail. Return type is void and parameters are logger. the top level google analytics singleton that provides methods for configuring google analytics and creating tracker objects,sink,sink,sink,sink
1139,HitBuilders.EventBuilder_setAction,set action from hit builders event builder . a builder object to build event hits,sink,sink,sink,sink
1140,HitBuilders.EventBuilder_setCategory,set category from hit builders event builder . a builder object to build event hits,sink,sink,sink,neither
1141,HitBuilders.EventBuilder_setLabel,set label from hit builders event builder . a builder object to build event hits,sink,sink,sink,sink
1142,HitBuilders.EventBuilder_setValue,set value from hit builders event builder . a builder object to build event hits,sink,sink,sink,sink
1143,HitBuilders.ExceptionBuilder_setDescription,set description from hit builders exception builder . exception builder allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your app,sink,sink,sink,neither
1144,HitBuilders.ExceptionBuilder_setFatal,set fatal from hit builders exception builder . exception builder allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your app,sink,sink,sink,sink
1145,HitBuilders.HitBuilder<T extendsHitBuilder>_addImpression,add impression from hit builders hit builder< t extends hit builder> adds a product impression to the hi. Return type is T and parameters are product string. internal class to provide common builder class methods,neither,neither,neither,neither
1146,HitBuilders.HitBuilder<T extendsHitBuilder>_addProduct,add product from hit builders hit builder< t extends hit builder> adds product information to be sent with a given hi. Return type is T and parameters are product. internal class to provide common builder class methods,sink,neither,sink,neither
1147,HitBuilders.HitBuilder<T extendsHitBuilder>_addPromotion,add promotion from hit builders hit builder< t extends hit builder> adds promotion related information to the hi. Return type is T and parameters are promotion. internal class to provide common builder class methods,neither,neither,neither,neither
1148,HitBuilders.HitBuilder<T extendsHitBuilder>_build,build from hit builders hit builder< t extends hit builder> builds a map of parameters and values that can be set on the tracker objec. Return type is Map and no argument. internal class to provide common builder class methods,neither,neither,neither,neither
1149,HitBuilders.HitBuilder<T extendsHitBuilder>_set,set from hit builders hit builder< t extends hit builder> sets the value for the given parameter nam. Return type is T and parameters are string string. internal class to provide common builder class methods,sink,sink,sink,sink
1150,HitBuilders.HitBuilder<T extendsHitBuilder>_setAll,"set all from hit builders hit builder< t extends hit builder> adds a set of key, value pairs to the hit builde. Return type is T and parameters are map< string string>. internal class to provide common builder class methods",sink,sink,sink,sink
1151,HitBuilders.HitBuilder<T extendsHitBuilder>_setCampaignParamsFromUrl,set campaign params from url from hit builders hit builder< t extends hit builder> parses and translates utm campaign parameters to analytics campaign parameters and returns them as a ma. Return type is T and parameters are string. internal class to provide common builder class methods,sink,sink,sink,sink
1152,HitBuilders.HitBuilder<T extendsHitBuilder>_setCustomDimension,set custom dimension from hit builders hit builder< t extends hit builder> adds a custom dimension to the current hit builde. Return type is T and parameters are int string. internal class to provide common builder class methods,sink,sink,sink,sink
1153,HitBuilders.HitBuilder<T extendsHitBuilder>_setCustomMetric,set custom metric from hit builders hit builder< t extends hit builder> adds a custom metric to the current hit builde. Return type is T and parameters are int float. internal class to provide common builder class methods,sink,sink,sink,sink
1154,HitBuilders.HitBuilder<T extendsHitBuilder>_setNewSession,set new session from hit builders hit builder< t extends hit builder> . internal class to provide common builder class methods,sink,sink,neither,sink
1155,HitBuilders.HitBuilder<T extendsHitBuilder>_setNonInteraction,set non interaction from hit builders hit builder< t extends hit builder> . internal class to provide common builder class methods,sink,sink,neither,neither
1156,HitBuilders.HitBuilder<T extendsHitBuilder>_setProductAction,set product action from hit builders hit builder< t extends hit builder> sets a product action for all the products included in this hi. Return type is T and parameters are product action. internal class to provide common builder class methods,sink,sink,sink,sink
1157,HitBuilders.HitBuilder<T extendsHitBuilder>_setPromotionAction,set promotion action from hit builders hit builder< t extends hit builder> adds an action associated with the promotions in a given hi. Return type is T and parameters are string. internal class to provide common builder class methods,sink,sink,sink,sink
1158,HitBuilders.ItemBuilder_setCategory,"set category from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1159,HitBuilders.ItemBuilder_setCurrencyCode,"set currency code from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1160,HitBuilders.ItemBuilder_setName,"set name from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1161,HitBuilders.ItemBuilder_setPrice,"set price from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1162,HitBuilders.ItemBuilder_setQuantity,"set quantity from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1163,HitBuilders.ItemBuilder_setSku,"set sku from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1164,HitBuilders.ItemBuilder_setTransactionId,"set transaction id from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1165,HitBuilders.SocialBuilder_setAction,set action from hit builders social builder . a builder object to build social event hits,sink,sink,sink,neither
1166,HitBuilders.SocialBuilder_setNetwork,set network from hit builders social builder . a builder object to build social event hits,sink,sink,sink,sink
1167,HitBuilders.SocialBuilder_setTarget,set target from hit builders social builder . a builder object to build social event hits,sink,sink,sink,sink
1168,HitBuilders.TimingBuilder_setCategory,set category from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1169,HitBuilders.TimingBuilder_setLabel,set label from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1170,HitBuilders.TimingBuilder_setValue,set value from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1171,HitBuilders.TimingBuilder_setVariable,set variable from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1172,HitBuilders.TransactionBuilder_setAffiliation,"set affiliation from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1173,HitBuilders.TransactionBuilder_setCurrencyCode,"set currency code from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1174,HitBuilders.TransactionBuilder_setRevenue,"set revenue from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1175,HitBuilders.TransactionBuilder_setShipping,"set shipping from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1176,HitBuilders.TransactionBuilder_setTax,"set tax from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1177,HitBuilders.TransactionBuilder_setTransactionId,"set transaction id from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1178,StandardExceptionParser_getDescription,"get description from standard exception parser return a short description of a throwable suitable for reporting to google analytic. Return type is String and parameters are string throwable. this class will capture the root cause  throwable and report the exception type, class name, method name and thread name",source,source,source,source
1179,StandardExceptionParser_setIncludedPackages,"set included packages from standard exception parser sets the list of packages considered relevant to the list of packages in the context and the list of packages provided in the input parameter additional package. Return type is void and parameters are context collection. this class will capture the root cause  throwable and report the exception type, class name, method name and thread name",sink,sink,sink,sink
1180,Tracker_enableAdvertisingIdCollection,enable advertising id collection from tracker sets whether the advertising id and ad targeting preference should be collected while sending hits to ga server. Return type is void and parameters are boolean. composes and sends hits to google analytics,sink,sink,sink,sink
1181,Tracker_enableAutoActivityTracking,enable auto activity tracking from tracker specify whether activity starts should automatically generate screen views from this tracke. Return type is void and parameters are boolean. composes and sends hits to google analytics,sink,sink,sink,sink
1182,Tracker_enableExceptionReporting,enable exception reporting from tracker enables or disables uncaught exception reporting for a given tracke. Return type is void and parameters are boolean. composes and sends hits to google analytics,sink,sink,sink,sink
1183,Tracker_get,get from tracker gets the model value for the given ke. Return type is String and parameters are string. composes and sends hits to google analytics,source,source,source,source
1184,Tracker_send,send from tracker merges the model values set on this tracker via se. Return type is void and parameters are map< string string>. composes and sends hits to google analytics,sink,sink,sink,sink
1185,Tracker_set,set from tracker sets the model value for the given ke. Return type is void and parameters are string string. composes and sends hits to google analytics,sink,sink,sink,sink
1186,Tracker_setAnonymizeIp,set anonymize ip from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1187,Tracker_setAppId,set app id from tracker sets the id of the app for analytics report. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1188,Tracker_setAppInstallerId,set app installer id from tracker sets the installer id of the app for analytics report. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1189,Tracker_setAppName,set app name from tracker sets the name of the app for analytics report. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1190,Tracker_setAppVersion,set app version from tracker sets the version identifier of the app for analytics report. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1191,Tracker_setCampaignParamsOnNextHit,set campaign params on next hit from tracker includes the campaign parameters contained in the uri referrer in the next hi. Return type is void and parameters are uri. composes and sends hits to google analytics,sink,sink,sink,sink
1192,Tracker_setClientId,set client id from tracker sets a particular client id for the devic. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1193,Tracker_setEncoding,set encoding from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1194,Tracker_setHostname,set hostname from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1195,Tracker_setLanguage,set language from tracker sets the language based on user's preferred local. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1196,Tracker_setLocation,set location from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1197,Tracker_setPage,set page from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1198,Tracker_setReferrer,set referrer from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1199,Tracker_setSampleRate,set sample rate from tracker set the sample rate for all hits generated by the ap. Return type is void and parameters are double. composes and sends hits to google analytics,sink,sink,sink,sink
1200,Tracker_setScreenColors,set screen colors from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1201,Tracker_setScreenName,set screen name from tracker set the screen name to be associated with all subsequent hit. Return type is void and parameters are string. composes and sends hits to google analytics,sink,sink,sink,sink
1202,Tracker_setScreenResolution,set screen resolution from tracker sets the screen resolution of the devic. Return type is void and parameters are int int. composes and sends hits to google analytics,sink,sink,sink,sink
1203,Tracker_setSessionTimeout,set session timeout from tracker specify the tim. Return type is void and parameters are long. composes and sends hits to google analytics,sink,sink,sink,sink
1204,Tracker_setTitle,set title from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1205,Tracker_setUseSecure,set use secure from tracker sets whether hits should be sent securely over http. Return type is void and parameters are boolean. composes and sends hits to google analytics,sink,sink,sink,sink
1206,Tracker_setViewportSize,set viewport size from tracker . composes and sends hits to google analytics,sink,sink,sink,sink
1207,ExceptionParser_getDescription,"get description from exception parser return a short description of a throwable suitable for reporting to google analytic. Return type is String and parameters are string throwable. this interface is responsible for parsing a throwable and providing a short, meaningful description to report to google analytics",source,source,source,source
1208,Logger_error,error from logger this method was deprecated see logger interface for detail. Return type is  void and parameters are exception. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,sink,sink,sink,sink
1209,Logger_error,error from logger this method was deprecated see logger interface for detail. Return type is  void and parameters are string. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,sink,sink,sink,sink
1210,Logger_getLogLevel,get log level from logger this method was deprecated see logger interface for detail. Return type is  int and no argument. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,source,source,source,source
1211,Logger_info,info from logger this method was deprecated see logger interface for detail. Return type is  void and parameters are string. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,sink,sink,sink,sink
1212,Logger_setLogLevel,set log level from logger this method was deprecated see logger interface for detail. Return type is  void and parameters are int. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,sink,sink,sink,sink
1213,Logger_verbose,verbose from logger this method was deprecated see logger interface for detail. Return type is  void and parameters are string. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,sink,sink,sink,sink
1214,Logger_warn,warn from logger this method was deprecated see logger interface for detail. Return type is  void and parameters are string. this interface was deprecated  logger interface is deprecated  use adb shell setprop log tag g av4 debug to enable debug logging for google analytics,sink,sink,sink,sink
1215,HitBuilders.EventBuilder_setAction,set action from hit builders event builder . a builder object to build event hits,sink,sink,sink,sink
1216,HitBuilders.EventBuilder_setCategory,set category from hit builders event builder . a builder object to build event hits,sink,sink,sink,neither
1217,HitBuilders.EventBuilder_setLabel,set label from hit builders event builder . a builder object to build event hits,sink,sink,sink,sink
1218,HitBuilders.EventBuilder_setValue,set value from hit builders event builder . a builder object to build event hits,sink,sink,sink,sink
1219,HitBuilders.ExceptionBuilder_setDescription,set description from hit builders exception builder . exception builder allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your app,sink,sink,sink,neither
1220,HitBuilders.ExceptionBuilder_setFatal,set fatal from hit builders exception builder . exception builder allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your app,sink,sink,sink,sink
1221,HitBuilders.ItemBuilder_setCategory,"set category from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1222,HitBuilders.ItemBuilder_setCurrencyCode,"set currency code from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1223,HitBuilders.ItemBuilder_setName,"set name from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1224,HitBuilders.ItemBuilder_setPrice,"set price from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1225,HitBuilders.ItemBuilder_setQuantity,"set quantity from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1226,HitBuilders.ItemBuilder_setSku,"set sku from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1227,HitBuilders.ItemBuilder_setTransactionId,"set transaction id from hit builders item builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1228,HitBuilders.SocialBuilder_setAction,set action from hit builders social builder . a builder object to build social event hits,sink,sink,sink,neither
1229,HitBuilders.SocialBuilder_setNetwork,set network from hit builders social builder . a builder object to build social event hits,sink,sink,sink,sink
1230,HitBuilders.SocialBuilder_setTarget,set target from hit builders social builder . a builder object to build social event hits,sink,sink,sink,sink
1231,HitBuilders.TimingBuilder_setCategory,set category from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1232,HitBuilders.TimingBuilder_setLabel,set label from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1233,HitBuilders.TimingBuilder_setValue,set value from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1234,HitBuilders.TimingBuilder_setVariable,set variable from hit builders timing builder . hit builder used to collect timing related data,sink,sink,sink,sink
1235,HitBuilders.TransactionBuilder_setAffiliation,"set affiliation from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1236,HitBuilders.TransactionBuilder_setCurrencyCode,"set currency code from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1237,HitBuilders.TransactionBuilder_setRevenue,"set revenue from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1238,HitBuilders.TransactionBuilder_setShipping,"set shipping from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1239,HitBuilders.TransactionBuilder_setTax,"set tax from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1240,HitBuilders.TransactionBuilder_setTransactionId,"set transaction id from hit builders transaction builder . this class was deprecated  this class has been deprecated in favor of a richer set of a p is on all the hit builder classes  with the new approach, simply use add product, add impression, add promo and set action to add ecommerce data to any of the hits",sink,sink,sink,sink
1241,ImageManager_create,create from image manager returns a new image manager for loading images from the networ. Return type is Image Manager and parameters are context. this class is used to load images from the network and handles local caching for you,neither,neither,neither,neither
1242,ImageManager_loadImage,"load image from image manager loads an image to display from a u r i, using the given resource id as the default if no image is found for the given ur. Return type is void and parameters are image view uri int. this class is used to load images from the network and handles local caching for you",source,neither,neither,sink
1243,ImageManager_loadImage,load image from image manager load an image to display from a ur. Return type is void and parameters are image manager on image loaded listener uri. this class is used to load images from the network and handles local caching for you,neither,neither,neither,sink
1244,ImageManager_loadImage,load image from image manager loads an image to display from the given resource i. Return type is void and parameters are image view int. this class is used to load images from the network and handles local caching for you,neither,neither,neither,sink
1245,ImageManager_loadImage,"load image from image manager load an image to display from a u r i, using the given resource id as the default if no image is found for the given ur. Return type is void and parameters are image manager on image loaded listener uri int. this class is used to load images from the network and handles local caching for you",neither,neither,neither,neither
1246,ImageManager_loadImage,load image from image manager loads an image to display from a ur. Return type is void and parameters are image view uri. this class is used to load images from the network and handles local caching for you,neither,neither,neither,sink
1247,Size_equals,equals from size check if this size is equal to another siz. Return type is boolean and parameters are object. immutable class for describing width and height dimensions in pixels,neither,neither,neither,neither
1248,Size_getHeight,get height from size get the height of the siz. Return type is int and no argument. immutable class for describing width and height dimensions in pixels,source,source,source,source
1249,Size_getWidth,get width from size get the width of the siz. Return type is int and no argument. immutable class for describing width and height dimensions in pixels,source,source,source,source
1250,Size_hashCode,hash code from size . immutable class for describing width and height dimensions in pixels,neither,neither,neither,neither
1251,Size_parseSize,parse size from size parses the specified string as a size valu. Return type is Size and parameters are string. immutable class for describing width and height dimensions in pixels,neither,neither,neither,neither
1252,Size_toString,"to string from size return the size represented as a string with the format "" wx. Return type is String and no argument. immutable class for describing width and height dimensions in pixels",source,source,source,source
1253,WebImage_equals,equals from web image . a class that represents an image that is located on a web server,neither,neither,neither,neither
1254,WebImage_getHeight,"get height from web image gets the image height, in pixel. Return type is int and no argument. a class that represents an image that is located on a web server",source,source,source,source
1255,WebImage_getUrl,get url from web image gets the image ur. Return type is Uri and no argument. a class that represents an image that is located on a web server,source,source,source,source
1256,WebImage_getWidth,"get width from web image gets the image width, in pixel. Return type is int and no argument. a class that represents an image that is located on a web server",source,source,source,source
1257,WebImage_hashCode,hash code from web image . a class that represents an image that is located on a web server,neither,neither,neither,neither
1258,WebImage_toString,to string from web image returns a string representation of this objec. Return type is String and no argument. a class that represents an image that is located on a web server,source,source,source,source
1259,WebImage_writeToParcel,write to parcel from web image . a class that represents an image that is located on a web server,sink,sink,sink,sink
1260,ImageManager.OnImageLoadedListener_onImageLoaded,on image loaded from image manager on image loaded listener listener method invoked when an image has been loade. Return type is  void and parameters are uri drawable boolean. listener interface for handling when the image for a particular uri has been loaded,neither,neither,neither,neither
1261,ImageManager.OnImageLoadedListener_onImageLoaded,on image loaded from image manager on image loaded listener listener method invoked when an image has been loade. Return type is  void and parameters are uri drawable boolean. listener interface for handling when the image for a particular uri has been loaded,neither,neither,neither,neither
1262,Product_setBrand,set brand from product sets the brand associated with the product in ga report. Return type is Product and parameters are string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1263,Product_setCategory,set category from product sets the category associated with the product in ga report. Return type is Product and parameters are string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1264,Product_setCouponCode,set coupon code from product sets the coupon code associated with the produc. Return type is Product and parameters are string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1265,Product_setCustomDimension,set custom dimension from product sets the custom dimensions associated with the produc. Return type is Product and parameters are int string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1266,Product_setCustomMetric,set custom metric from product sets the custom metrics associated with the produc. Return type is Product and parameters are int int. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1267,Product_setId,set id from product sets the id that is used to identify a product in ga report. Return type is Product and parameters are string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1268,Product_setName,set name from product sets the name that is used to identify the product in ga report. Return type is Product and parameters are string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1269,Product_setPosition,set position from product sets the position of the product on the page/product impression list et. Return type is Product and parameters are int. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1270,Product_setPrice,set price from product sets the price of the produc. Return type is Product and parameters are double. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1271,Product_setQuantity,set quantity from product sets the quantity of the produc. Return type is Product and parameters are int. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1272,Product_setVariant,set variant from product sets the variant of the produc. Return type is Product and parameters are string. class to construct product related information for a google analytics hit,sink,sink,sink,sink
1273,Product_toString,to string from product . class to construct product related information for a google analytics hit,neither,neither,sink,neither
1274,ProductAction_setCheckoutOptions,set checkout options from product action sets the label associated with the checkou. Return type is Product Action and parameters are string. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1275,ProductAction_setCheckoutStep,set checkout step from product action sets the checkout processes's progres. Return type is Product Action and parameters are int. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1276,ProductAction_setProductActionList,set product action list from product action sets the list name associated with the products in the analytics hi. Return type is Product Action and parameters are string. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1277,ProductAction_setProductListSource,set product list source from product action sets the list source name associated with the products in the analytics hi. Return type is Product Action and parameters are string. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1278,ProductAction_setTransactionAffiliation,set transaction affiliation from product action sets the transaction's affiliation valu. Return type is Product Action and parameters are string. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1279,ProductAction_setTransactionCouponCode,set transaction coupon code from product action sets the coupon code used in a transactio. Return type is Product Action and parameters are string. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1280,ProductAction_setTransactionId,set transaction id from product action the unique id associated with the transactio. Return type is Product Action and parameters are string. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1281,ProductAction_setTransactionRevenue,set transaction revenue from product action sets the transaction's total revenu. Return type is Product Action and parameters are double. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1282,ProductAction_setTransactionShipping,set transaction shipping from product action sets the transaction's shipping cost. Return type is Product Action and parameters are double. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1283,ProductAction_setTransactionTax,set transaction tax from product action sets the transaction's total ta. Return type is Product Action and parameters are double. class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,sink,sink,sink
1284,ProductAction_toString,to string from product action . class to construct transaction/checkout or other product interaction related information for a google analytics hit,sink,neither,neither,neither
1285,Promotion_setCreative,set creative from promotion sets the name of the creative associated with the promotio. Return type is Promotion and parameters are string. class to construct promotion related fields for google analytics hits,sink,sink,sink,sink
1286,Promotion_setId,set id from promotion sets the id that is used to identify a promotion in ga report. Return type is Promotion and parameters are string. class to construct promotion related fields for google analytics hits,sink,sink,sink,sink
1287,Promotion_setName,set name from promotion sets the name that is used to identify the promotion in ga report. Return type is Promotion and parameters are string. class to construct promotion related fields for google analytics hits,sink,sink,sink,sink
1288,Promotion_setPosition,set position from promotion sets the position of the promotio. Return type is Promotion and parameters are string. class to construct promotion related fields for google analytics hits,sink,sink,sink,sink
1289,Promotion_toString,to string from promotion . class to construct promotion related fields for google analytics hits,neither,neither,neither,neither
1290,AdapterStatus_getDescription,get description from adapter status detailed description of the statu. Return type is String and no argument. an immutable snapshot of a mediation adapter's initialization status,source,source,source,source
1291,AdapterStatus_getInitializationState,get initialization state from adapter status gets the adapter's initialization stat. Return type is Adapter Status. State and no argument. an immutable snapshot of a mediation adapter's initialization status,source,source,source,source
1292,AdapterStatus_getLatency,get latency from adapter status the adapter's initialization latency in millisecond. Return type is  int and no argument. an immutable snapshot of a mediation adapter's initialization status,source,source,source,source
1293,InitializationStatus_getAdapterStatusMap,"get adapter status map from initialization status initialization status of each known ad network, keyed by its adapter's class nam. Return type is Map and no argument. the status of the sdk initialization",source,source,source,source
1294,OnInitializationCompleteListener_onInitializationComplete,on initialization complete from on initialization complete listener called when the sdk initialization is complet. Return type is  void and parameters are initialization status. listener that returns the status of sdk initialization upon initialization completion,neither,neither,neither,neither
1295,RewardedInterstitialAd_getAdMetadata,get ad metadata from rewarded interstitial ad gets all available ad metadata for this rewarded interstitial a. Return type is Bundle and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1296,RewardedInterstitialAd_getAdUnitId,get ad unit id from rewarded interstitial ad returns the ad unit i. Return type is String and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1297,RewardedInterstitialAd_getFullScreenContentCallback,get full screen content callback from rewarded interstitial ad gets the full screen content callback for this rewarded interstitial a. Return type is Full Screen Content Callback and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1298,RewardedInterstitialAd_getOnAdMetadataChangedListener,get on ad metadata changed listener from rewarded interstitial ad gets the on ad metadata changed listener for this rewarded interstitial a. Return type is On Ad Metadata Changed Listener and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1299,RewardedInterstitialAd_getOnPaidEventListener,get on paid event listener from rewarded interstitial ad gets the on paid event listener for this rewarded interstitial a. Return type is On Paid Event Listener and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1300,RewardedInterstitialAd_getResponseInfo,get response info from rewarded interstitial ad returns information about the loaded a. Return type is Response Info and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1301,RewardedInterstitialAd_getRewardItem,get reward item from rewarded interstitial ad gets reward item for the loaded rewarded interstitial a. Return type is Reward Item and no argument. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,source,source,source,source
1302,RewardedInterstitialAd_load,load from rewarded interstitial ad loads a rewarded interstitial a. Return type is  void and parameters are context string ad request rewarded interstitial ad load callback. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,neither,neither,neither,neither
1303,RewardedInterstitialAd_load,load from rewarded interstitial ad loads a rewarded interstitial a. Return type is  void and parameters are context string ad manager ad request rewarded interstitial ad load callback. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,neither,neither,neither,neither
1304,RewardedInterstitialAd_setFullScreenContentCallback,set full screen content callback from rewarded interstitial ad registers a callback to be invoked when ads show and dismiss full screen conten. Return type is  void and parameters are full screen content callback. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,sink,neither,sink,neither
1305,RewardedInterstitialAd_setImmersiveMode,set immersive mode from rewarded interstitial ad sets a flag that controls if this rewarded interstitial ad object will be displayed in immersive mod. Return type is  void and parameters are boolean. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,sink,sink,sink,sink
1306,RewardedInterstitialAd_setOnAdMetadataChangedListener,set on ad metadata changed listener from rewarded interstitial ad registers a callback to be invoked when the rewarded interstitial ad's metadata change. Return type is  void and parameters are on ad metadata changed listener. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,neither,neither,sink,neither
1307,RewardedInterstitialAd_setOnPaidEventListener,set on paid event listener from rewarded interstitial ad registers a callback to be invoked when this ad is estimated to have earned mone. Return type is  void and parameters are on paid event listener. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,neither,neither,neither,neither
1308,RewardedInterstitialAd_setServerSideVerificationOptions,set server side verification options from rewarded interstitial ad sets server side verification options for this rewarded interstitial a. Return type is  void and parameters are server side verification options. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,sink,sink,sink,sink
1309,RewardedInterstitialAd_show,show from rewarded interstitial ad shows the rewarded interstitial a. Return type is  void and parameters are activity on user earned reward listener. rewarded interstitials are full screen ads that reward users and can be shown without a user opt in,neither,neither,neither,neither
1310,BleDevice_equals,equals from ble device . this class is deprecated  use bluetooth manager directly,neither,neither,neither,neither
1311,BleDevice_getAddress,"get address from ble device returns the address of the ble device, from get addre. Return type is String and no argument. this class is deprecated  use bluetooth manager directly",source,source,source,source
1312,BleDevice_getDataTypes,get data types from ble device returns all of the fitness platform data types supported by the device's supported profile. Return type is List and no argument. this class is deprecated  use bluetooth manager directly,source,source,source,source
1313,BleDevice_getName,"get name from ble device returns the name of the ble device, from get na. Return type is String and no argument. this class is deprecated  use bluetooth manager directly",source,source,source,source
1314,BleDevice_getSupportedProfiles,get supported profiles from ble device returns a list of supported gatt profile specification types for the device which are also supported by the fitness platfor. Return type is List and no argument. this class is deprecated  use bluetooth manager directly,source,source,source,source
1315,BleDevice_hashCode,hash code from ble device . this class is deprecated  use bluetooth manager directly,neither,neither,neither,neither
1316,BleDevice_toString,to string from ble device . this class is deprecated  use bluetooth manager directly,sink,sink,sink,sink
1317,BleDevice_writeToParcel,write to parcel from ble device . this class is deprecated  use bluetooth manager directly,sink,sink,sink,sink
1318,Bucket_equals,equals from bucket . a bucket represents a time interval over which aggregated data is computed,neither,neither,neither,neither
1319,Bucket_getActivity,"get activity from bucket returns the activity of the bucket if bucketing by activity was requested, or unknown otherwis. Return type is String and no argument. a bucket represents a time interval over which aggregated data is computed",source,source,source,source
1320,Bucket_getBucketType,get bucket type from bucket returns the type of the bucke. Return type is int and no argument. a bucket represents a time interval over which aggregated data is computed,source,source,source,source
1321,Bucket_getDataSet,get data set from bucket returns the data set of requested data type over the time interval of the bucke. Return type is Data Set and parameters are data type. a bucket represents a time interval over which aggregated data is computed,source,source,source,source
1322,Bucket_getDataSets,get data sets from bucket returns the requested data sets over the time interval of the bucke. Return type is List and no argument. a bucket represents a time interval over which aggregated data is computed,source,source,source,source
1323,Bucket_getEndTime,"get end time from bucket returns the end time of the bucket, in the given time unit since epoc. Return type is long and parameters are time unit. a bucket represents a time interval over which aggregated data is computed",source,source,source,source
1324,Bucket_getSession,"get session from bucket returns the session of the bucket if bucketing by session was requested, null otherwis. Return type is Session and no argument. a bucket represents a time interval over which aggregated data is computed",source,source,source,source
1325,Bucket_getStartTime,"get start time from bucket returns the start time of the bucket, in the given time unit since epoc. Return type is long and parameters are time unit. a bucket represents a time interval over which aggregated data is computed",source,source,source,source
1326,Bucket_hashCode,hash code from bucket . a bucket represents a time interval over which aggregated data is computed,neither,neither,neither,source
1327,Bucket_toString,to string from bucket . a bucket represents a time interval over which aggregated data is computed,neither,neither,neither,source
1328,Bucket_writeToParcel,write to parcel from bucket . a bucket represents a time interval over which aggregated data is computed,sink,sink,sink,sink
1329,DataPoint_builder,builder from data point creates a new builder for a data point with the given data sourc. Return type is Data Point. Builder and parameters are data source. represents a single data point in a data type's stream from a particular data source,neither,neither,neither,neither
1330,DataPoint_create,create from data point deprecate. Return type is Data Point and parameters are data source. represents a single data point in a data type's stream from a particular data source,neither,neither,neither,neither
1331,DataPoint_equals,equals from data point . represents a single data point in a data type's stream from a particular data source,neither,neither,neither,neither
1332,DataPoint_extract,extract from data point extracts a data point from a callback intent received after registering to a data source with a pending inten. Return type is Data Point and parameters are intent. represents a single data point in a data type's stream from a particular data source,source,source,source,neither
1333,DataPoint_getDataSource,get data source from data point returns the data source for the data poin. Return type is Data Source and no argument. represents a single data point in a data type's stream from a particular data source,source,source,source,source
1334,DataPoint_getDataType,get data type from data point returns the data type defining the format of the values in this data poin. Return type is Data Type and no argument. represents a single data point in a data type's stream from a particular data source,source,source,source,source
1335,DataPoint_getEndTime,"get end time from data point returns the end time of the interval represented by this data point, in the given unit since epoc. Return type is long and parameters are time unit. represents a single data point in a data type's stream from a particular data source",source,source,source,source
1336,DataPoint_getOriginalDataSource,get original data source from data point returns the original data source for this data poin. Return type is Data Source and no argument. represents a single data point in a data type's stream from a particular data source,source,source,source,source
1337,DataPoint_getStartTime,"get start time from data point returns the start time of the interval represented by this data point, in the given unit since epoc. Return type is long and parameters are time unit. represents a single data point in a data type's stream from a particular data source",source,source,source,source
1338,DataPoint_getTimestamp,"get timestamp from data point returns the timestamp of the data point, in the given unit since epoc. Return type is long and parameters are time unit. represents a single data point in a data type's stream from a particular data source",source,source,source,source
1339,DataPoint_getValue,get value from data point returns the value holder for the field with the given nam. Return type is Value and parameters are field. represents a single data point in a data type's stream from a particular data source,source,source,source,source
1340,DataPoint_hashCode,hash code from data point . represents a single data point in a data type's stream from a particular data source,neither,neither,neither,neither
1341,DataPoint_setFloatValues,set float values from data point deprecate. Return type is Data Point and parameters are float   . represents a single data point in a data type's stream from a particular data source,sink,sink,sink,sink
1342,DataPoint_setIntValues,set int values from data point deprecate. Return type is Data Point and parameters are int   . represents a single data point in a data type's stream from a particular data source,sink,sink,sink,sink
1343,DataPoint_setTimeInterval,set time interval from data point deprecate. Return type is Data Point and parameters are long long time unit. represents a single data point in a data type's stream from a particular data source,sink,sink,sink,sink
1344,DataPoint_setTimestamp,set timestamp from data point deprecate. Return type is Data Point and parameters are long time unit. represents a single data point in a data type's stream from a particular data source,sink,sink,sink,sink
1345,DataPoint_toString,to string from data point . represents a single data point in a data type's stream from a particular data source,neither,neither,neither,neither
1346,DataPoint_writeToParcel,write to parcel from data point . represents a single data point in a data type's stream from a particular data source,sink,sink,sink,sink
1347,DataPoint.Builder_build,build from data point builder builds and returns the data poin. Return type is Data Point and no argument. builder for data point instances,neither,neither,neither,neither
1348,DataPoint.Builder_setActivityField,set activity field from data point builder sets the value of an activity field to activit. Return type is Data Point. Builder and parameters are field string. builder for data point instances,sink,sink,sink,sink
1349,DataPoint.Builder_setField,set field from data point builder sets the floating point value of the given field to valu. Return type is Data Point. Builder and parameters are field float. builder for data point instances,sink,sink,sink,sink
1350,DataPoint.Builder_setField,set field from data point builder sets the map value of the given field to valu. Return type is Data Point. Builder and parameters are field map< string float>. builder for data point instances,sink,sink,sink,sink
1351,DataPoint.Builder_setField,set field from data point builder sets the integer value of the given field to valu. Return type is Data Point. Builder and parameters are field int. builder for data point instances,sink,sink,sink,sink
1352,DataPoint.Builder_setField,set field from data point builder sets the string value of the given field to valu. Return type is Data Point. Builder and parameters are field string. builder for data point instances,sink,sink,sink,sink
1353,DataPoint.Builder_setFloatValues,"set float values from data point builder sets the values of the data point, where the format for all of its values is floa. Return type is Data Point. Builder and parameters are float   . builder for data point instances",sink,sink,sink,sink
1354,DataPoint.Builder_setIntValues,"set int values from data point builder sets the values of the data point, where the format for all of its values is in. Return type is Data Point. Builder and parameters are int   . builder for data point instances",sink,sink,sink,sink
1355,DataPoint.Builder_setTimeInterval,set time interval from data point builder sets the time interval of a data point that represents an interval of tim. Return type is Data Point. Builder and parameters are long long time unit. builder for data point instances,sink,sink,sink,sink
1356,DataPoint.Builder_setTimestamp,"set timestamp from data point builder sets the timestamp of a data point that represent an instantaneous reading, measurement, or inpu. Return type is Data Point. Builder and parameters are long time unit. builder for data point instances",sink,sink,sink,sink
1357,DataSet_add,add from data set deprecate. Return type is void and parameters are data point. represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,neither
1358,DataSet_addAll,add all from data set deprecate. Return type is void and parameters are iterable. represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,sink
1359,DataSet_builder,builder from data set creates a new builder for a data set with the given data sourc. Return type is Data Set. Builder and parameters are data source. represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,neither
1360,DataSet_create,create from data set creates a new data set to hold data points for the given data sourc. Return type is Data Set and parameters are data source. represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,neither
1361,DataSet_createDataPoint,create data point from data set creates an empty data point for this data set's data sourc. Return type is Data Point and no argument. represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,neither
1362,DataSet_equals,equals from data set . represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,neither
1363,DataSet_getDataPoints,get data points from data set returns the list of data points represented by this data se. Return type is List and no argument. represents a fixed set of data points in a data type's stream from a particular data source,source,source,source,source
1364,DataSet_getDataSource,get data source from data set returns the data source which this data set represent. Return type is Data Source and no argument. represents a fixed set of data points in a data type's stream from a particular data source,source,source,source,source
1365,DataSet_getDataType,get data type from data set returns the data type this data set represent. Return type is Data Type and no argument. represents a fixed set of data points in a data type's stream from a particular data source,source,source,source,source
1366,DataSet_hashCode,hash code from data set . represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,neither,neither
1367,DataSet_isEmpty,is empty from data set returns whether this data set contains no data point. Return type is boolean and no argument. represents a fixed set of data points in a data type's stream from a particular data source,neither,neither,source,neither
1368,DataSet_toString,to string from data set . represents a fixed set of data points in a data type's stream from a particular data source,sink,sink,sink,sink
1369,DataSet_writeToParcel,write to parcel from data set . represents a fixed set of data points in a data type's stream from a particular data source,sink,sink,sink,sink
1370,DataSet.Builder_add,add from data set builder adds a data point to this data se. Return type is Data Set. Builder and parameters are data point. builder used to create new data sets,neither,neither,neither,neither
1371,DataSet.Builder_addAll,add all from data set builder adds a list of data points to this data set in bul. Return type is Data Set. Builder and parameters are iterable. builder used to create new data sets,neither,neither,neither,sink
1372,DataSet.Builder_build,build from data set builder finishes building and returns the data se. Return type is Data Set and no argument. builder used to create new data sets,neither,neither,neither,neither
1373,DataSource_equals,equals from data source . definition of a unique source of sensor data,neither,neither,neither,neither
1374,DataSource_extract,"extract from data source extracts the data source extra from the given intent, such as an intent to view user's dat. Return type is Data Source and parameters are intent. definition of a unique source of sensor data",source,source,source,neither
1375,DataSource_getAppPackageName,"get app package name from data source returns the package name for the application responsible for setting the data, or null if unset/unknow. Return type is String and no argument. definition of a unique source of sensor data",source,source,source,source
1376,DataSource_getDataType,get data type from data source returns the data type for data coming from this data sourc. Return type is Data Type and no argument. definition of a unique source of sensor data,source,source,source,source
1377,DataSource_getDevice,"get device from data source returns the device where data is being collected, or null if unse. Return type is Device and no argument. definition of a unique source of sensor data",source,source,source,source
1378,DataSource_getStreamIdentifier,get stream identifier from data source returns a unique identifier for the data stream produced by this data sourc. Return type is String and no argument. definition of a unique source of sensor data,source,source,source,source
1379,DataSource_getStreamName,"get stream name from data source returns the specific stream name for the stream coming from this data source, or an empty string if unse. Return type is String and no argument. definition of a unique source of sensor data",source,source,source,source
1380,DataSource_getType,get type from data source returns the constant describing the type of this data sourc. Return type is int and no argument. definition of a unique source of sensor data,source,source,source,source
1381,DataSource_hashCode,hash code from data source . definition of a unique source of sensor data,neither,neither,neither,neither
1382,DataSource_toString,to string from data source . definition of a unique source of sensor data,source,neither,neither,source
1383,DataSource_writeToParcel,write to parcel from data source . definition of a unique source of sensor data,sink,sink,sink,sink
1384,DataSource.Builder_build,build from data source builder finishes building the data source and returns a data source objec. Return type is Data Source and no argument. a builder that can be used to construct new data source objects,neither,neither,neither,neither
1385,DataSource.Builder_setAppPackageName,set app package name from data source builder sets the package name for the application that is recording or computing the dat. Return type is Data Source. Builder and parameters are string. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1386,DataSource.Builder_setAppPackageName,set app package name from data source builder sets the package name for the application that is recording or computing the data based on the app's contex. Return type is Data Source. Builder and parameters are context. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1387,DataSource.Builder_setDataType,set data type from data source builder sets the data type for the data sourc. Return type is Data Source. Builder and parameters are data type. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1388,DataSource.Builder_setDevice,set device from data source builder sets the integrated device where data is being recorde. Return type is Data Source. Builder and parameters are device. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1389,DataSource.Builder_setStreamName,set stream name from data source builder the stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying produce. Return type is Data Source. Builder and parameters are string. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1390,DataSource.Builder_setType,set type from data source builder sets the type of the data sourc. Return type is Data Source. Builder and parameters are int. a builder that can be used to construct new data source objects,sink,sink,sink,neither
1391,DataType_equals,"equals from data type . the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",neither,neither,neither,neither
1392,DataType_getAggregateType,"get aggregate type from data type returns the aggregate output type for this type, or null if the type does not support aggregatio. Return type is Data Type and no argument. the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",source,source,source,neither
1393,DataType_getAggregatesForInput,"get aggregates for input from data type deprecate. Return type is List and parameters are data type. the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",source,source,source,source
1394,DataType_getFields,"get fields from data type returns the ordered list of fields for the data typ. Return type is List and no argument. the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",source,source,source,neither
1395,DataType_getMimeType,"get mime type from data type returns the mime type for a particular data typ. Return type is String and parameters are data type. the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",source,source,source,source
1396,DataType_getName,"get name from data type returns the namespaced name which uniquely identifies this data typ. Return type is String and no argument. the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",source,source,source,source
1397,DataType_hashCode,"hash code from data type . the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",neither,neither,neither,neither
1398,DataType_indexOf,"index of from data type returns the index of a fiel. Return type is int and parameters are field. the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",neither,source,neither,neither
1399,DataType_toString,"to string from data type . the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",neither,neither,neither,neither
1400,DataType_writeToParcel,"write to parcel from data type . the data type defines the schema for a stream of data being collected by, inserted into, or queried from google fit",sink,sink,sink,sink
1401,DataUpdateNotification_equals,equals from data update notification . captures the information needed to identify updates to google fitness store data,neither,neither,source,neither
1402,DataUpdateNotification_getDataSource,get data source from data update notification retrieves the data source whose data has been modifie. Return type is Data Source and no argument. captures the information needed to identify updates to google fitness store data,source,source,source,source
1403,DataUpdateNotification_getDataType,get data type from data update notification retrieves the data type whose data has been modifie. Return type is Data Type and no argument. captures the information needed to identify updates to google fitness store data,source,source,source,source
1404,DataUpdateNotification_getDataUpdateNotification,get data update notification from data update notification retrieves the data update notification from the given inten. Return type is Data Update Notification and parameters are intent. captures the information needed to identify updates to google fitness store data,source,source,source,source
1405,DataUpdateNotification_getOperationType,get operation type from data update notification retrieves the operation type which causes the update in fitness stor. Return type is int and no argument. captures the information needed to identify updates to google fitness store data,source,source,source,source
1406,DataUpdateNotification_getUpdateEndTime,get update end time from data update notification retrieves the end time of the interval range for which data has been modified in the given unit since epoc. Return type is long and parameters are time unit. captures the information needed to identify updates to google fitness store data,source,source,source,source
1407,DataUpdateNotification_getUpdateStartTime,get update start time from data update notification retrieves the start time of the interval range for which data has been modified in the given unit since epoc. Return type is long and parameters are time unit. captures the information needed to identify updates to google fitness store data,source,source,source,source
1408,DataUpdateNotification_hashCode,hash code from data update notification . captures the information needed to identify updates to google fitness store data,source,source,source,neither
1409,DataUpdateNotification_toString,to string from data update notification . captures the information needed to identify updates to google fitness store data,source,neither,source,neither
1410,DataUpdateNotification_writeToParcel,write to parcel from data update notification . captures the information needed to identify updates to google fitness store data,sink,sink,sink,sink
1411,Device_equals,equals from device . representation of an integrated device  that can hold sensors,neither,neither,neither,neither
1412,Device_getLocalDevice,"get local device from device returns the device representation of the local device, which can be used when defining local data source. Return type is Device and parameters are context. representation of an integrated device  that can hold sensors",source,source,source,source
1413,Device_getManufacturer,get manufacturer from device returns the manufacturer of the product/hardwar. Return type is String and no argument. representation of an integrated device  that can hold sensors,source,source,source,source
1414,Device_getModel,get model from device returns the end-user-visible model name for the devic. Return type is String and no argument. representation of an integrated device  that can hold sensors,source,source,source,source
1415,Device_getType,get type from device returns the constant representing the type of the devic. Return type is int and no argument. representation of an integrated device  that can hold sensors,source,source,source,source
1416,Device_getUid,get uid from device returns the serial number or other unique id for the hardwar. Return type is String and no argument. representation of an integrated device  that can hold sensors,source,source,source,source
1417,Device_hashCode,hash code from device . representation of an integrated device  that can hold sensors,neither,neither,neither,neither
1418,Device_toString,to string from device . representation of an integrated device  that can hold sensors,neither,neither,neither,sink
1419,Device_writeToParcel,write to parcel from device . representation of an integrated device  that can hold sensors,sink,sink,sink,sink
1420,Field_equals,equals from field . a field represents one dimension of a data type,neither,neither,neither,neither
1421,Field_getFormat,"get format from field returns the format of the field, as one of the format constant value. Return type is int and no argument. a field represents one dimension of a data type",source,source,source,source
1422,Field_getName,get name from field returns the name of the fiel. Return type is String and no argument. a field represents one dimension of a data type,source,source,source,source
1423,Field_hashCode,hash code from field . a field represents one dimension of a data type,neither,neither,neither,neither
1424,Field_isOptional,is optional from field . a field represents one dimension of a data type,neither,neither,neither,neither
1425,Field_toString,to string from field . a field represents one dimension of a data type,neither,neither,neither,neither
1426,Field_writeToParcel,write to parcel from field . a field represents one dimension of a data type,sink,sink,sink,sink
1427,Goal_equals,"equals from goal . a fitness goal, which users create in google fit",neither,neither,neither,sink
1428,Goal_getActivityName,"get activity name from goal returns the name of the goal's specific activity, if an. Return type is String and no argument. a fitness goal, which users create in google fit",source,source,source,source
1429,Goal_getCreateTime,"get create time from goal returns the creation time of the goal since epoch, in the specified time uni. Return type is long and parameters are time unit. a fitness goal, which users create in google fit",source,source,source,neither
1430,Goal_getDurationObjective,"get duration objective from goal returns the duration objective of the goal if the objective type is o b j e c t i v e_ t y p e_ d u r a t i o. Return type is Goal. Duration Objective and no argument. a fitness goal, which users create in google fit",source,source,source,neither
1431,Goal_getEndTime,"get end time from goal returns the end time of the time range that should be used to calculate goal progress for current tim. Return type is long and parameters are calendar time unit. a fitness goal, which users create in google fit",source,source,source,source
1432,Goal_getFrequencyObjective,"get frequency objective from goal returns the frequency objective of the goal if the objective type is o b j e c t i v e_ t y p e_ f r e q u e n c. Return type is Goal. Frequency Objective and no argument. a fitness goal, which users create in google fit",source,source,source,neither
1433,Goal_getMetricObjective,"get metric objective from goal returns the metric objective of the goal if the objective type is o b j e c t i v e_ t y p e_ m e t r i. Return type is Goal. Metric Objective and no argument. a fitness goal, which users create in google fit",source,source,source,source
1434,Goal_getObjectiveType,"get objective type from goal returns the type of the goal's objectiv. Return type is int and no argument. a fitness goal, which users create in google fit",source,source,source,neither
1435,Goal_getRecurrence,"get recurrence from goal returns the recurrence period of a goal if the goal is a recurring on. Return type is Goal. Recurrence and no argument. a fitness goal, which users create in google fit",source,source,source,neither
1436,Goal_getStartTime,"get start time from goal returns the start time of the time range that should be used to calculate goal progress for current tim. Return type is long and parameters are calendar time unit. a fitness goal, which users create in google fit",source,source,source,source
1437,Goal_hashCode,"hash code from goal . a fitness goal, which users create in google fit",sink,neither,neither,neither
1438,Goal_toString,"to string from goal . a fitness goal, which users create in google fit",sink,sink,neither,sink
1439,Goal_writeToParcel,"write to parcel from goal . a fitness goal, which users create in google fit",sink,sink,sink,sink
1440,Goal.DurationObjective_equals,"equals from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",neither,neither,neither,neither
1441,Goal.DurationObjective_getDuration,"get duration from goal duration objective returns the objective duration of the goal in the specified time uni. Return type is long and parameters are time unit. a duration objective, which uses duration time of activities to determine whether the goal is met",source,source,source,source
1442,Goal.DurationObjective_hashCode,"hash code from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",neither,neither,neither,neither
1443,Goal.DurationObjective_toString,"to string from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",neither,neither,neither,sink
1444,Goal.DurationObjective_writeToParcel,"write to parcel from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",sink,sink,sink,sink
1445,Goal.FrequencyObjective_equals,"equals from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",neither,neither,neither,neither
1446,Goal.FrequencyObjective_getFrequency,"get frequency from goal frequency objective returns the objective frequency of the goa. Return type is int and no argument. a frequency objective, which uses the number of activity segments to determine whether the goal is met",source,source,source,source
1447,Goal.FrequencyObjective_hashCode,"hash code from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",neither,neither,neither,neither
1448,Goal.FrequencyObjective_toString,"to string from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",sink,neither,neither,sink
1449,Goal.FrequencyObjective_writeToParcel,"write to parcel from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",sink,sink,sink,sink
1450,Goal.MetricObjective_equals,"equals from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",neither,neither,neither,neither
1451,Goal.MetricObjective_getDataTypeName,"get data type name from goal metric objective returns the data type name of the metric the goal tracks, such as comgooglestep_countdelta or comgoogledistancedelt. Return type is String and no argument. a metric objective, which uses a metric value to determine whether the goal is met",source,source,source,source
1452,Goal.MetricObjective_getValue,"get value from goal metric objective returns the objective metric's valu. Return type is double and no argument. a metric objective, which uses a metric value to determine whether the goal is met",source,source,source,source
1453,Goal.MetricObjective_hashCode,"hash code from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",neither,neither,neither,neither
1454,Goal.MetricObjective_toString,"to string from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",neither,neither,sink,neither
1455,Goal.MetricObjective_writeToParcel,"write to parcel from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",sink,sink,sink,sink
1456,Goal.Recurrence_equals,equals from goal recurrence . a recurrence period of a recurring goal,neither,neither,neither,neither
1457,Goal.Recurrence_getCount,get count from goal recurrence returns the count of unit of the recurrenc. Return type is int and no argument. a recurrence period of a recurring goal,neither,neither,neither,neither
1458,Goal.Recurrence_getUnit,get unit from goal recurrence returns the unit of the recurrenc. Return type is int and no argument. a recurrence period of a recurring goal,neither,neither,neither,neither
1459,Goal.Recurrence_hashCode,hash code from goal recurrence . a recurrence period of a recurring goal,neither,neither,neither,neither
1460,Goal.Recurrence_toString,to string from goal recurrence . a recurrence period of a recurring goal,neither,neither,neither,neither
1461,Goal.Recurrence_writeToParcel,write to parcel from goal recurrence . a recurrence period of a recurring goal,sink,neither,neither,neither
1462,Session_equals,equals from session . a session represents a time interval with associated metadata,neither,neither,neither,neither
1463,Session_extract,"extract from session extracts the session extra from the given intent, such as a callback intent received after registering to session start/end notifications, or an intent to view a sessio. Return type is Session and parameters are intent. a session represents a time interval with associated metadata",source,neither,source,neither
1464,Session_getActiveTime,get active time from session returns the active time period of the sessio. Return type is long and parameters are time unit. a session represents a time interval with associated metadata,source,source,source,source
1465,Session_getActivity,"get activity from session returns the activity associated with this session, if se. Return type is String and no argument. a session represents a time interval with associated metadata",source,source,source,source
1466,Session_getAppPackageName,get app package name from session returns the package name for the application responsible for adding the sessio. Return type is String and no argument. a session represents a time interval with associated metadata,source,source,source,source
1467,Session_getDescription,get description from session returns the description for this sessio. Return type is String and no argument. a session represents a time interval with associated metadata,source,source,source,source
1468,Session_getEndTime,"get end time from session returns the end time for the session, in the given unit since epoc. Return type is long and parameters are time unit. a session represents a time interval with associated metadata",source,source,source,source
1469,Session_getIdentifier,get identifier from session returns the identifier for this sessio. Return type is String and no argument. a session represents a time interval with associated metadata,source,source,source,source
1470,Session_getMimeType,get mime type from session returns the mime type which describes a session for a particular activit. Return type is String and parameters are string. a session represents a time interval with associated metadata,source,source,source,source
1471,Session_getName,"get name from session returns the name for this session, if se. Return type is String and no argument. a session represents a time interval with associated metadata",source,source,source,source
1472,Session_getStartTime,"get start time from session returns the start time for the session, in the given time unit since epoc. Return type is long and parameters are time unit. a session represents a time interval with associated metadata",source,source,source,source
1473,Session_hasActiveTime,has active time from session returns whether the session active time is se. Return type is boolean and no argument. a session represents a time interval with associated metadata,source,source,source,source
1474,Session_hashCode,hash code from session . a session represents a time interval with associated metadata,source,source,neither,source
1475,Session_isOngoing,is ongoing from session returns whether the session is ongoin. Return type is boolean and no argument. a session represents a time interval with associated metadata,source,source,source,source
1476,Session_toString,to string from session . a session represents a time interval with associated metadata,sink,source,source,source
1477,Session_writeToParcel,write to parcel from session . a session represents a time interval with associated metadata,sink,sink,sink,sink
1478,Session.Builder_build,build from session builder finishes building and returns the sessio. Return type is Session and no argument. builder used to create new sessions,neither,neither,neither,source
1479,Session.Builder_setActiveTime,set active time from session builder sets the active session period duratio. Return type is Session. Builder and parameters are long time unit. builder used to create new sessions,sink,sink,sink,sink
1480,Session.Builder_setActivity,set activity from session builder sets the activity associated with this sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1481,Session.Builder_setDescription,set description from session builder sets a description for this sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1482,Session.Builder_setEndTime,set end time from session builder sets the end time of the sessio. Return type is Session. Builder and parameters are long time unit. builder used to create new sessions,sink,sink,sink,sink
1483,Session.Builder_setIdentifier,set identifier from session builder sets the identifier for this sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1484,Session.Builder_setName,set name from session builder sets the a human readable name of the sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1485,Session.Builder_setStartTime,set start time from session builder sets the start time of the sessio. Return type is Session. Builder and parameters are long time unit. builder used to create new sessions,sink,sink,sink,sink
1486,Subscription_equals,equals from subscription . subscription for persistent storage of data from a given data source or for a given data type,neither,neither,neither,neither
1487,Subscription_getDataSource,"get data source from subscription returns the data source for this subscription, if specifie. Return type is Data Source and no argument. subscription for persistent storage of data from a given data source or for a given data type",source,source,source,source
1488,Subscription_getDataType,"get data type from subscription returns the data type for this subscription, if specifie. Return type is Data Type and no argument. subscription for persistent storage of data from a given data source or for a given data type",source,source,source,source
1489,Subscription_hashCode,hash code from subscription . subscription for persistent storage of data from a given data source or for a given data type,neither,neither,neither,neither
1490,Subscription_toDebugString,to debug string from subscription . subscription for persistent storage of data from a given data source or for a given data type,sink,neither,sink,neither
1491,Subscription_toString,to string from subscription . subscription for persistent storage of data from a given data source or for a given data type,sink,neither,neither,sink
1492,Subscription_writeToParcel,write to parcel from subscription . subscription for persistent storage of data from a given data source or for a given data type,sink,sink,sink,sink
1493,Value_asActivity,as activity from value returns the value of this object as an activit. Return type is String and no argument. holder object for the value of a single field in a data point,neither,neither,source,neither
1494,Value_asFloat,as float from value returns the value of this object as a floa. Return type is float and no argument. holder object for the value of a single field in a data point,neither,neither,neither,neither
1495,Value_asInt,as int from value returns the value of this object as an in. Return type is int and no argument. holder object for the value of a single field in a data point,neither,neither,neither,neither
1496,Value_asString,as string from value returns the value of this object as a strin. Return type is String and no argument. holder object for the value of a single field in a data point,neither,neither,source,neither
1497,Value_clearKey,clear key from value deprecate. Return type is void and parameters are string. holder object for the value of a single field in a data point,neither,neither,neither,neither
1498,Value_equals,equals from value . holder object for the value of a single field in a data point,neither,neither,neither,neither
1499,Value_getFormat,"get format from value returns the format of this value, which matches the appropriate field in the data type definitio. Return type is int and no argument. holder object for the value of a single field in a data point",source,source,source,source
1500,Value_getKeyValue,get key value from value returns the value of the given key in the map as a floa. Return type is Float and parameters are string. holder object for the value of a single field in a data point,source,source,source,source
1501,Value_hashCode,hash code from value . holder object for the value of a single field in a data point,neither,neither,neither,source
1502,Value_isSet,is set from value returns true if this object's value has been set by calling one of the setter. Return type is boolean and no argument. holder object for the value of a single field in a data point,neither,neither,neither,neither
1503,Value_setActivity,set activity from value deprecate. Return type is void and parameters are string. holder object for the value of a single field in a data point,sink,sink,sink,sink
1504,Value_setFloat,set float from value deprecate. Return type is void and parameters are float. holder object for the value of a single field in a data point,sink,sink,sink,sink
1505,Value_setInt,set int from value deprecate. Return type is void and parameters are int. holder object for the value of a single field in a data point,sink,sink,sink,sink
1506,Value_setKeyValue,set key value from value deprecate. Return type is void and parameters are string float. holder object for the value of a single field in a data point,sink,sink,sink,sink
1507,Value_setString,set string from value deprecate. Return type is void and parameters are string. holder object for the value of a single field in a data point,sink,sink,sink,sink
1508,Value_toString,to string from value . holder object for the value of a single field in a data point,neither,neither,sink,neither
1509,Value_writeToParcel,write to parcel from value . holder object for the value of a single field in a data point,sink,sink,sink,sink
1510,DataPoint.Builder_build,build from data point builder builds and returns the data poin. Return type is Data Point and no argument. builder for data point instances,neither,neither,neither,neither
1511,DataPoint.Builder_setActivityField,set activity field from data point builder sets the value of an activity field to activit. Return type is Data Point. Builder and parameters are field string. builder for data point instances,sink,sink,sink,sink
1512,DataPoint.Builder_setField,set field from data point builder sets the floating point value of the given field to valu. Return type is Data Point. Builder and parameters are field float. builder for data point instances,sink,sink,sink,sink
1513,DataPoint.Builder_setField,set field from data point builder sets the map value of the given field to valu. Return type is Data Point. Builder and parameters are field map< string float>. builder for data point instances,sink,sink,sink,sink
1514,DataPoint.Builder_setField,set field from data point builder sets the integer value of the given field to valu. Return type is Data Point. Builder and parameters are field int. builder for data point instances,sink,sink,sink,sink
1515,DataPoint.Builder_setField,set field from data point builder sets the string value of the given field to valu. Return type is Data Point. Builder and parameters are field string. builder for data point instances,sink,sink,sink,sink
1516,DataPoint.Builder_setFloatValues,"set float values from data point builder sets the values of the data point, where the format for all of its values is floa. Return type is Data Point. Builder and parameters are float   . builder for data point instances",sink,sink,sink,sink
1517,DataPoint.Builder_setIntValues,"set int values from data point builder sets the values of the data point, where the format for all of its values is in. Return type is Data Point. Builder and parameters are int   . builder for data point instances",sink,sink,sink,sink
1518,DataPoint.Builder_setTimeInterval,set time interval from data point builder sets the time interval of a data point that represents an interval of tim. Return type is Data Point. Builder and parameters are long long time unit. builder for data point instances,sink,sink,sink,sink
1519,DataPoint.Builder_setTimestamp,"set timestamp from data point builder sets the timestamp of a data point that represent an instantaneous reading, measurement, or inpu. Return type is Data Point. Builder and parameters are long time unit. builder for data point instances",sink,sink,sink,sink
1520,DataSet.Builder_add,add from data set builder adds a data point to this data se. Return type is Data Set. Builder and parameters are data point. builder used to create new data sets,neither,neither,neither,neither
1521,DataSet.Builder_addAll,add all from data set builder adds a list of data points to this data set in bul. Return type is Data Set. Builder and parameters are iterable. builder used to create new data sets,neither,neither,neither,sink
1522,DataSet.Builder_build,build from data set builder finishes building and returns the data se. Return type is Data Set and no argument. builder used to create new data sets,neither,neither,neither,neither
1523,DataSource.Builder_build,build from data source builder finishes building the data source and returns a data source objec. Return type is Data Source and no argument. a builder that can be used to construct new data source objects,neither,neither,neither,neither
1524,DataSource.Builder_setAppPackageName,set app package name from data source builder sets the package name for the application that is recording or computing the dat. Return type is Data Source. Builder and parameters are string. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1525,DataSource.Builder_setAppPackageName,set app package name from data source builder sets the package name for the application that is recording or computing the data based on the app's contex. Return type is Data Source. Builder and parameters are context. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1526,DataSource.Builder_setDataType,set data type from data source builder sets the data type for the data sourc. Return type is Data Source. Builder and parameters are data type. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1527,DataSource.Builder_setDevice,set device from data source builder sets the integrated device where data is being recorde. Return type is Data Source. Builder and parameters are device. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1528,DataSource.Builder_setStreamName,set stream name from data source builder the stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying produce. Return type is Data Source. Builder and parameters are string. a builder that can be used to construct new data source objects,sink,sink,sink,sink
1529,DataSource.Builder_setType,set type from data source builder sets the type of the data sourc. Return type is Data Source. Builder and parameters are int. a builder that can be used to construct new data source objects,sink,sink,sink,neither
1530,Goal.DurationObjective_equals,"equals from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",neither,neither,neither,neither
1531,Goal.DurationObjective_getDuration,"get duration from goal duration objective returns the objective duration of the goal in the specified time uni. Return type is long and parameters are time unit. a duration objective, which uses duration time of activities to determine whether the goal is met",source,source,source,source
1532,Goal.DurationObjective_hashCode,"hash code from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",neither,neither,neither,neither
1533,Goal.DurationObjective_toString,"to string from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",neither,neither,neither,sink
1534,Goal.DurationObjective_writeToParcel,"write to parcel from goal duration objective . a duration objective, which uses duration time of activities to determine whether the goal is met",sink,sink,sink,sink
1535,Goal.FrequencyObjective_equals,"equals from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",neither,neither,neither,neither
1536,Goal.FrequencyObjective_getFrequency,"get frequency from goal frequency objective returns the objective frequency of the goa. Return type is int and no argument. a frequency objective, which uses the number of activity segments to determine whether the goal is met",source,source,source,source
1537,Goal.FrequencyObjective_hashCode,"hash code from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",neither,neither,neither,neither
1538,Goal.FrequencyObjective_toString,"to string from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",sink,neither,neither,sink
1539,Goal.FrequencyObjective_writeToParcel,"write to parcel from goal frequency objective . a frequency objective, which uses the number of activity segments to determine whether the goal is met",sink,sink,sink,sink
1540,Goal.MetricObjective_equals,"equals from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",neither,neither,neither,neither
1541,Goal.MetricObjective_getDataTypeName,"get data type name from goal metric objective returns the data type name of the metric the goal tracks, such as comgooglestep_countdelta or comgoogledistancedelt. Return type is String and no argument. a metric objective, which uses a metric value to determine whether the goal is met",source,source,source,source
1542,Goal.MetricObjective_getValue,"get value from goal metric objective returns the objective metric's valu. Return type is double and no argument. a metric objective, which uses a metric value to determine whether the goal is met",source,source,source,source
1543,Goal.MetricObjective_hashCode,"hash code from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",neither,neither,neither,neither
1544,Goal.MetricObjective_toString,"to string from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",neither,neither,sink,neither
1545,Goal.MetricObjective_writeToParcel,"write to parcel from goal metric objective . a metric objective, which uses a metric value to determine whether the goal is met",sink,sink,sink,sink
1546,Goal.Recurrence_equals,equals from goal recurrence . a recurrence period of a recurring goal,neither,neither,neither,neither
1547,Goal.Recurrence_getCount,get count from goal recurrence returns the count of unit of the recurrenc. Return type is int and no argument. a recurrence period of a recurring goal,neither,neither,neither,neither
1548,Goal.Recurrence_getUnit,get unit from goal recurrence returns the unit of the recurrenc. Return type is int and no argument. a recurrence period of a recurring goal,neither,neither,neither,neither
1549,Goal.Recurrence_hashCode,hash code from goal recurrence . a recurrence period of a recurring goal,neither,neither,neither,neither
1550,Goal.Recurrence_toString,to string from goal recurrence . a recurrence period of a recurring goal,neither,neither,neither,neither
1551,Goal.Recurrence_writeToParcel,write to parcel from goal recurrence . a recurrence period of a recurring goal,sink,neither,neither,neither
1552,Session.Builder_build,build from session builder finishes building and returns the sessio. Return type is Session and no argument. builder used to create new sessions,neither,neither,neither,source
1553,Session.Builder_setActiveTime,set active time from session builder sets the active session period duratio. Return type is Session. Builder and parameters are long time unit. builder used to create new sessions,sink,sink,sink,sink
1554,Session.Builder_setActivity,set activity from session builder sets the activity associated with this sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1555,Session.Builder_setDescription,set description from session builder sets a description for this sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1556,Session.Builder_setEndTime,set end time from session builder sets the end time of the sessio. Return type is Session. Builder and parameters are long time unit. builder used to create new sessions,sink,sink,sink,sink
1557,Session.Builder_setIdentifier,set identifier from session builder sets the identifier for this sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1558,Session.Builder_setName,set name from session builder sets the a human readable name of the sessio. Return type is Session. Builder and parameters are string. builder used to create new sessions,sink,sink,sink,sink
1559,Session.Builder_setStartTime,set start time from session builder sets the start time of the sessio. Return type is Session. Builder and parameters are long time unit. builder used to create new sessions,sink,sink,sink,sink
1560,Plus.PlusOptions_builder,builder from plus plus options . a p i configuration parameters for google+,neither,sink,neither,sink
1561,Plus.PlusOptions.Builder_addActivityTypes,add activity types from plus plus options builder specify which user's app activity types can be written to google. Return type is Plus. Plus Options. Builder and parameters are string   . plus builder,sink,sink,sink,sink
1562,Plus.PlusOptions.Builder_build,build from plus plus options builder . plus builder,neither,neither,neither,neither
1563,Plus.PlusOptions.Builder_setServerClientId,set server client id from plus plus options builder specify the optional 3rd party server client id for offline aut. Return type is Plus. Plus Options. Builder and parameters are string. plus builder,sink,sink,sink,sink
1564,PlusOneButton_initialize,initialize from plus one button updates the +1 button with a ur. Return type is void and parameters are string int. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,neither,neither,neither,neither
1565,PlusOneButton_initialize,initialize from plus one button updates the +1 button with a client and ur. Return type is void and parameters are string plus one button on plus one click listener. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,neither,neither,neither,neither
1566,PlusOneButton_plusOneClick,plus one click from plus one button . this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,neither,neither,neither,neither
1567,PlusOneButton_setAnnotation,set annotation from plus one button sets the annotation to display next to the +1 butto. Return type is void and parameters are int. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,sink,sink,sink,sink
1568,PlusOneButton_setIntent,set intent from plus one button . this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,sink,sink,sink,sink
1569,PlusOneButton_setOnPlusOneClickListener,set on plus one click listener from plus one button sets the plus one button on plus one click listener to handle click. Return type is void and parameters are plus one button on plus one click listener. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,sink,sink,sink,sink
1570,PlusOneButton_setSize,set size from plus one button sets the size of the +1 butto. Return type is void and parameters are int. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,sink,sink,sink,sink
1571,PlusOneButton.DefaultOnPlusOneClickListener_onClick,"on click from plus one button default on plus one click listener . this is an view on click listener that will proxy clicks to an attached plus one button on plus one click listener, or default to attempt to start the intent using an activity context",neither,neither,neither,neither
1572,PlusOneButton.DefaultOnPlusOneClickListener_onPlusOneClick,"on plus one click from plus one button default on plus one click listener called when the +1 button is clicke. Return type is void and parameters are intent. this is an view on click listener that will proxy clicks to an attached plus one button on plus one click listener, or default to attempt to start the intent using an activity context",neither,neither,neither,neither
1573,PlusShare_createPerson,create person from plus share creates a person to use as a recipient with the given id and display nam. Return type is Person and parameters are string string. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,neither,neither,sink,neither
1574,PlusShare_getDeepLinkId,get deep link id from plus share get the incoming deep lin. Return type is String and parameters are intent. this class was deprecated  this api has been deprecated  please refer to deprecation notes for details,source,source,source,source
1575,PlusShare.Builder_addCallToAction,add call to action from plus share builder adds a call-to-action button for an interactive pos. Return type is Plus Share. Builder and parameters are string uri string.,neither,neither,neither,neither
1576,PlusShare.Builder_addStream,add stream from plus share builder add a stream uri to the data that should be share. Return type is Plus Share. Builder and parameters are uri.,sink,sink,sink,sink
1577,PlusShare.Builder_getIntent,get intent from plus share builder retrieve the intent as configured so far by the builde. Return type is Intent and no argument.,source,source,source,source
1578,PlusShare.Builder_setContentDeepLinkId,set content deep link id from plus share builder include a deep-link uri of a resource to share on google. Return type is Plus Share. Builder and parameters are string.,sink,sink,sink,sink
1579,PlusShare.Builder_setContentDeepLinkId,set content deep link id from plus share builder include a deep-link id to a resource to share on google. Return type is Plus Share. Builder and parameters are string string string uri.,sink,sink,sink,sink
1580,PlusShare.Builder_setContentUrl,set content url from plus share builder sets a url to link to from the content on the we. Return type is Plus Share. Builder and parameters are uri.,sink,sink,sink,sink
1581,PlusShare.Builder_setRecipients,set recipients from plus share builder sets a list of people to send the interactive post t. Return type is Plus Share. Builder and parameters are person list.,sink,sink,sink,sink
1582,PlusShare.Builder_setStream,set stream from plus share builder set a stream uri to the data that should be share. Return type is Plus Share. Builder and parameters are uri.,sink,sink,sink,sink
1583,PlusShare.Builder_setText,set text from plus share builder set a pre-filled message to be sent as part of the shar. Return type is Plus Share. Builder and parameters are char sequence.,sink,sink,sink,sink
1584,PlusShare.Builder_setType,set type from plus share builder set the type of data being share. Return type is Plus Share. Builder and parameters are string.,sink,sink,sink,sink
1585,Account_clearDefaultAccount,clear default account from account this method was deprecated replaced with sign o. Return type is  void and parameters are google api client. this interface was deprecated  replaced by google sign in api  see google sign in for guidance on integrating with this api,neither,neither,neither,source
1586,Account_getAccountName,get account name from account this method was deprecated use google sign in api and get sign in accou. Return type is String and parameters are google api client. this interface was deprecated  replaced by google sign in api  see google sign in for guidance on integrating with this api,source,source,source,source
1587,Account_revokeAccessAndDisconnect,revoke access and disconnect from account this method was deprecated replaced with revoke acce. Return type is Pending Result and parameters are google api client. this interface was deprecated  replaced by google sign in api  see google sign in for guidance on integrating with this api,neither,neither,neither,source
1588,People_getCurrentPerson,"get current person from people this method was deprecated use google sign in api and get sign in accou. Return type is Person and parameters are google api client. this interface was deprecated  this api may return empty results, even if the user consented to s c o p e_ p l u s_ l o g i n  please refer to deprecation notes for details  see below for suggested replacements on android, consider using contacts provider if you are looking for cross platform solutions, check out people api if you want to advocate your app to your existing users' social graph, check out firebase invites",source,source,source,source
1589,People_load,"load from people this method was deprecated in the future, you can possibly get empty data back even if user consented to the required scopes see people for detail. Return type is Pending Result and parameters are google api client collection. this interface was deprecated  this api may return empty results, even if the user consented to s c o p e_ p l u s_ l o g i n  please refer to deprecation notes for details  see below for suggested replacements on android, consider using contacts provider if you are looking for cross platform solutions, check out people api if you want to advocate your app to your existing users' social graph, check out firebase invites",source,source,source,source
1590,People_load,"load from people this method was deprecated in the future, you can possibly get empty data back even if user consented to the required scopes see people for detail. Return type is Pending Result and parameters are google api client string   . this interface was deprecated  this api may return empty results, even if the user consented to s c o p e_ p l u s_ l o g i n  please refer to deprecation notes for details  see below for suggested replacements on android, consider using contacts provider if you are looking for cross platform solutions, check out people api if you want to advocate your app to your existing users' social graph, check out firebase invites",source,source,source,source
1591,People_loadConnected,"load connected from people this method was deprecated in the future, you can possibly get empty data back even if user consented to the required scopes see people for detail. Return type is Pending Result and parameters are google api client. this interface was deprecated  this api may return empty results, even if the user consented to s c o p e_ p l u s_ l o g i n  please refer to deprecation notes for details  see below for suggested replacements on android, consider using contacts provider if you are looking for cross platform solutions, check out people api if you want to advocate your app to your existing users' social graph, check out firebase invites",source,source,source,source
1592,People_loadVisible,"load visible from people this method was deprecated in the future, you can possibly get empty data back even if user consented to the required scopes see people for detail. Return type is Pending Result and parameters are google api client int string. this interface was deprecated  this api may return empty results, even if the user consented to s c o p e_ p l u s_ l o g i n  please refer to deprecation notes for details  see below for suggested replacements on android, consider using contacts provider if you are looking for cross platform solutions, check out people api if you want to advocate your app to your existing users' social graph, check out firebase invites",source,source,source,neither
1593,People_loadVisible,"load visible from people this method was deprecated in the future, you can possibly get empty data back even if user consented to the required scopes see people for detail. Return type is Pending Result and parameters are google api client string. this interface was deprecated  this api may return empty results, even if the user consented to s c o p e_ p l u s_ l o g i n  please refer to deprecation notes for details  see below for suggested replacements on android, consider using contacts provider if you are looking for cross platform solutions, check out people api if you want to advocate your app to your existing users' social graph, check out firebase invites",source,source,source,neither
1594,People.LoadPeopleResult_getNextPageToken,"get next page token from people load people result returns the continuation token, which is used to page through large result set. Return type is String and no argument. information about the set of people that was loaded",source,source,source,neither
1595,People.LoadPeopleResult_getPersonBuffer,get person buffer from people load people result returns the requested peopl. Return type is Person Buffer and no argument. information about the set of people that was loaded,source,source,source,source
1596,PlusOneButton.OnPlusOneClickListener_onPlusOneClick,on plus one click from plus one button on plus one click listener called when the +1 button is clicke. Return type is  void and parameters are intent. a listener for +1 button clicks,neither,neither,neither,neither
1597,Plus.PlusOptions_builder,builder from plus plus options . a p i configuration parameters for google+,neither,sink,neither,sink
1598,Plus.PlusOptions.Builder_addActivityTypes,add activity types from plus plus options builder specify which user's app activity types can be written to google. Return type is Plus. Plus Options. Builder and parameters are string   . plus builder,sink,sink,sink,sink
1599,Plus.PlusOptions.Builder_build,build from plus plus options builder . plus builder,neither,neither,neither,neither
1600,Plus.PlusOptions.Builder_setServerClientId,set server client id from plus plus options builder specify the optional 3rd party server client id for offline aut. Return type is Plus. Plus Options. Builder and parameters are string. plus builder,sink,sink,sink,sink
1601,PlusOneButton.DefaultOnPlusOneClickListener_onClick,"on click from plus one button default on plus one click listener . this is an view on click listener that will proxy clicks to an attached plus one button on plus one click listener, or default to attempt to start the intent using an activity context",neither,neither,neither,neither
1602,PlusOneButton.DefaultOnPlusOneClickListener_onPlusOneClick,"on plus one click from plus one button default on plus one click listener called when the +1 button is clicke. Return type is void and parameters are intent. this is an view on click listener that will proxy clicks to an attached plus one button on plus one click listener, or default to attempt to start the intent using an activity context",neither,neither,neither,neither
1603,PlusOneButton.OnPlusOneClickListener_onPlusOneClick,on plus one click from plus one button on plus one click listener called when the +1 button is clicke. Return type is  void and parameters are intent. a listener for +1 button clicks,neither,neither,neither,neither
1604,PlusShare.Builder_addCallToAction,add call to action from plus share builder adds a call-to-action button for an interactive pos. Return type is Plus Share. Builder and parameters are string uri string.,neither,neither,neither,neither
1605,PlusShare.Builder_addStream,add stream from plus share builder add a stream uri to the data that should be share. Return type is Plus Share. Builder and parameters are uri.,sink,sink,sink,sink
1606,PlusShare.Builder_getIntent,get intent from plus share builder retrieve the intent as configured so far by the builde. Return type is Intent and no argument.,source,source,source,source
1607,PlusShare.Builder_setContentDeepLinkId,set content deep link id from plus share builder include a deep-link uri of a resource to share on google. Return type is Plus Share. Builder and parameters are string.,sink,sink,sink,sink
1608,PlusShare.Builder_setContentDeepLinkId,set content deep link id from plus share builder include a deep-link id to a resource to share on google. Return type is Plus Share. Builder and parameters are string string string uri.,sink,sink,sink,sink
1609,PlusShare.Builder_setContentUrl,set content url from plus share builder sets a url to link to from the content on the we. Return type is Plus Share. Builder and parameters are uri.,sink,sink,sink,sink
1610,PlusShare.Builder_setRecipients,set recipients from plus share builder sets a list of people to send the interactive post t. Return type is Plus Share. Builder and parameters are person list.,sink,sink,sink,sink
1611,PlusShare.Builder_setStream,set stream from plus share builder set a stream uri to the data that should be share. Return type is Plus Share. Builder and parameters are uri.,sink,sink,sink,sink
1612,PlusShare.Builder_setText,set text from plus share builder set a pre-filled message to be sent as part of the shar. Return type is Plus Share. Builder and parameters are char sequence.,sink,sink,sink,sink
1613,PlusShare.Builder_setType,set type from plus share builder set the type of data being share. Return type is Plus Share. Builder and parameters are string.,sink,sink,sink,sink
1614,People.LoadPeopleResult_getNextPageToken,"get next page token from people load people result returns the continuation token, which is used to page through large result set. Return type is String and no argument. information about the set of people that was loaded",source,source,source,neither
1615,People.LoadPeopleResult_getPersonBuffer,get person buffer from people load people result returns the requested peopl. Return type is Person Buffer and no argument. information about the set of people that was loaded,source,source,source,source
1616,Plus.PlusOptions.Builder_addActivityTypes,add activity types from plus plus options builder specify which user's app activity types can be written to google. Return type is Plus. Plus Options. Builder and parameters are string   . plus builder,sink,sink,sink,sink
1617,Plus.PlusOptions.Builder_build,build from plus plus options builder . plus builder,neither,neither,neither,neither
1618,Plus.PlusOptions.Builder_setServerClientId,set server client id from plus plus options builder specify the optional 3rd party server client id for offline aut. Return type is Plus. Plus Options. Builder and parameters are string. plus builder,sink,sink,sink,sink
1619,AdvertisingOptions_equals,equals from advertising options . options for a call to connections client start advertising,neither,neither,neither,neither
1620,AdvertisingOptions_getDisruptiveUpgrade,get disruptive upgrade from advertising options gets the disruptive upgrade fla. Return type is boolean and no argument. options for a call to connections client start advertising,source,source,source,source
1621,AdvertisingOptions_getLowPower,"get low power from advertising options gets whether low power should be used, if true only low power medium. Return type is boolean and no argument. options for a call to connections client start advertising",source,source,source,neither
1622,AdvertisingOptions_getStrategy,"get strategy from advertising options get the advertising strategy, the strategy used for advertisin. Return type is Strategy and no argument. options for a call to connections client start advertising",source,source,source,source
1623,AdvertisingOptions_hashCode,hash code from advertising options . options for a call to connections client start advertising,sink,sink,neither,neither
1624,AdvertisingOptions_toString,to string from advertising options . options for a call to connections client start advertising,sink,sink,sink,sink
1625,AdvertisingOptions_writeToParcel,write to parcel from advertising options . options for a call to connections client start advertising,sink,sink,sink,sink
1626,AdvertisingOptions.Builder_build,build from advertising options builder builds an instance of advertising option. Return type is Advertising Options and no argument. builder class for advertising options,neither,neither,neither,neither
1627,AdvertisingOptions.Builder_setDisruptiveUpgrade,set disruptive upgrade from advertising options builder sets the disruptive upgrade fla. Return type is Advertising Options. Builder and parameters are boolean. builder class for advertising options,sink,sink,sink,sink
1628,AdvertisingOptions.Builder_setLowPower,"set low power from advertising options builder sets whether low power should be used, if true only low poer medium. Return type is Advertising Options. Builder and parameters are boolean. builder class for advertising options",sink,sink,sink,sink
1629,AdvertisingOptions.Builder_setStrategy,"set strategy from advertising options builder set the advertising strategy, the strategy used for advertising, must match the strategy used in discovery option. Return type is Advertising Options. Builder and parameters are strategy. builder class for advertising options",sink,sink,sink,sink
1630,AppIdentifier_getIdentifier,get identifier from app identifier retrieves the identifier string for this applicatio. Return type is String and no argument. this class is deprecated  this class is no longer used an identifier for an application; the value of the identifier should be the package name for an android application to be installed or launched to discover and communicate with the advertised service   google applications may use this data to prompt the user to install the application,source,source,source,source
1631,AppIdentifier_writeToParcel,write to parcel from app identifier . this class is deprecated  this class is no longer used an identifier for an application; the value of the identifier should be the package name for an android application to be installed or launched to discover and communicate with the advertised service   google applications may use this data to prompt the user to install the application,sink,sink,sink,sink
1632,AppMetadata_getAppIdentifiers,get app identifiers from app metadata returns a list of app identifiers that can discover and communicate with the advertised servic. Return type is List and no argument. this class is deprecated  this class is no longer used metadata about an application  contains one or more app identifier objects indicating identifiers that can be used to install or launch application that can discover and communicate with the advertised service  google applications may use this data to prompt the user to install the application,source,source,source,source
1633,AppMetadata_writeToParcel,write to parcel from app metadata . this class is deprecated  this class is no longer used metadata about an application  contains one or more app identifier objects indicating identifiers that can be used to install or launch application that can discover and communicate with the advertised service  google applications may use this data to prompt the user to install the application,sink,sink,sink,sink
1634,ConnectionInfo_getAuthenticationDigits,get authentication digits from connection info a 4 digit authentication token that has been given to both device. Return type is String and no argument. information about a connection that is being initiated,source,source,source,source
1635,ConnectionInfo_getAuthenticationToken,get authentication token from connection info deprecate. Return type is String and no argument. information about a connection that is being initiated,source,source,source,source
1636,ConnectionInfo_getEndpointInfo,get endpoint info from connection info information that represents the remote device which is defined by the client or applicatio. Return type is byte[] and no argument. information about a connection that is being initiated,source,source,source,source
1637,ConnectionInfo_getEndpointName,get endpoint name from connection info the name of the remote device we're connecting t. Return type is String and no argument. information about a connection that is being initiated,source,source,source,source
1638,ConnectionInfo_getRawAuthenticationToken,get raw authentication token from connection info the ra. Return type is byte[] and no argument. information about a connection that is being initiated,source,source,source,source
1639,ConnectionInfo_isConnectionVerified,is connection verified from connection info deprecate. Return type is boolean and no argument. information about a connection that is being initiated,source,source,source,source
1640,ConnectionInfo_isIncomingConnection,is incoming connection from connection info true if the connection request was initiated from a remote devic. Return type is boolean and no argument. information about a connection that is being initiated,source,source,source,source
1641,ConnectionLifecycleCallback_onConnectionInitiated,on connection initiated from connection lifecycle callback a basic encrypted channel has been created between you and the endpoin. Return type is  void and parameters are string connection info. listener for lifecycle events associated with a connection to a remote endpoint,neither,neither,neither,neither
1642,ConnectionLifecycleCallback_onConnectionResult,on connection result from connection lifecycle callback called after both sides have either accepted or rejected the connectio. Return type is  void and parameters are string connection resolution. listener for lifecycle events associated with a connection to a remote endpoint,neither,neither,neither,neither
1643,ConnectionLifecycleCallback_onDisconnected,on disconnected from connection lifecycle callback called when a remote endpoint is disconnected or has become unreachabl. Return type is  void and parameters are string. listener for lifecycle events associated with a connection to a remote endpoint,neither,neither,neither,neither
1644,ConnectionOptions_equals,equals from connection options . options for a call to connections client request connection,neither,neither,neither,neither
1645,ConnectionOptions_getDisruptiveUpgrade,get disruptive upgrade from connection options gets the disruptive upgrade fla. Return type is boolean and no argument. options for a call to connections client request connection,source,source,source,source
1646,ConnectionOptions_getLowPower,get low power from connection options gets whether to attempt to connect with the lowest possible powe. Return type is boolean and no argument. options for a call to connections client request connection,source,source,source,source
1647,ConnectionOptions_hashCode,hash code from connection options . options for a call to connections client request connection,sink,source,source,source
1648,ConnectionOptions_toString,to string from connection options . options for a call to connections client request connection,sink,sink,sink,sink
1649,ConnectionOptions_writeToParcel,write to parcel from connection options . options for a call to connections client request connection,sink,sink,sink,sink
1650,ConnectionOptions.Builder_build,build from connection options builder builds an instance of connection option. Return type is Connection Options and no argument. builder class for connection options,neither,neither,neither,neither
1651,ConnectionOptions.Builder_setDisruptiveUpgrade,set disruptive upgrade from connection options builder sets the disruptive upgrade fla. Return type is Connection Options. Builder and parameters are boolean. builder class for connection options,sink,sink,sink,sink
1652,ConnectionOptions.Builder_setLowPower,set low power from connection options builder sets whether to attempt to connect with the lowest possible powe. Return type is Connection Options. Builder and parameters are boolean. builder class for connection options,sink,sink,sink,sink
1653,ConnectionResolution_getStatus,get status from connection resolution the status of the respons. Return type is Status and no argument. the result after connection lifecycle callback on connection initiated,source,source,source,source
1654,Connections.ConnectionRequestListener_onConnectionRequest,on connection request from connections connection request listener called when a remote endpoint requests a connection to a local endpoin. Return type is void and parameters are string string byte[]. this class is deprecated  use connection lifecycle callback instead,neither,neither,neither,neither
1655,Connections.EndpointDiscoveryListener_onEndpointFound,on endpoint found from connections endpoint discovery listener called when a remote endpoint is discovere. Return type is void and parameters are string string string. this class is deprecated  use endpoint discovery callback instead,neither,neither,neither,source
1656,Connections.EndpointDiscoveryListener_onEndpointLost,on endpoint lost from connections endpoint discovery listener called when a remote endpoint is no longer discoverable; only called for endpoints that previously had been passed to on endpoint fou. Return type is  void and parameters are string. this class is deprecated  use endpoint discovery callback instead,neither,neither,neither,neither
1657,ConnectionsOptions.Builder_build,build from connections options builder builds an instance of connections option. Return type is Connections Options and no argument. builder for connections options,neither,neither,neither,neither
1658,ConnectionsStatusCodes_getStatusCodeString,get status code string from connections status codes returns an untranslated debu. Return type is String and parameters are int. status codes for nearby connections results,source,source,source,source
1659,DiscoveredEndpointInfo_getEndpointInfo,get endpoint info from discovered endpoint info information advertised by the remote endpoin. Return type is byte[] and no argument. information about an endpoint when it's discovered,source,source,source,source
1660,DiscoveredEndpointInfo_getEndpointName,get endpoint name from discovered endpoint info the human readable name of the remote endpoin. Return type is String and no argument. information about an endpoint when it's discovered,source,source,source,source
1661,DiscoveredEndpointInfo_getServiceId,get service id from discovered endpoint info the id of the service advertised by the remote endpoin. Return type is String and no argument. information about an endpoint when it's discovered,source,source,source,source
1662,DiscoveryOptions_equals,equals from discovery options . options for a call to connections client start discovery,neither,neither,neither,neither
1663,DiscoveryOptions_getLowPower,"get low power from discovery options gets whether low power should be used, if true, only low power medium. Return type is boolean and no argument. options for a call to connections client start discovery",source,source,source,source
1664,DiscoveryOptions_getStrategy,"get strategy from discovery options gets the discovery strategy, the strategy to use for discovering, must match the strategy used in advertising option. Return type is Strategy and no argument. options for a call to connections client start discovery",source,source,source,source
1665,DiscoveryOptions_hashCode,hash code from discovery options . options for a call to connections client start discovery,sink,neither,neither,sink
1666,DiscoveryOptions_toString,to string from discovery options . options for a call to connections client start discovery,sink,sink,sink,sink
1667,DiscoveryOptions_writeToParcel,write to parcel from discovery options . options for a call to connections client start discovery,sink,sink,sink,sink
1668,DiscoveryOptions.Builder_build,build from discovery options builder builds an instance of discovery option. Return type is Discovery Options and no argument. builder class for discovery options,neither,neither,neither,neither
1669,DiscoveryOptions.Builder_setLowPower,set low power from discovery options builder sets whether to use low powe. Return type is Discovery Options. Builder and parameters are boolean. builder class for discovery options,sink,sink,sink,sink
1670,DiscoveryOptions.Builder_setStrategy,set strategy from discovery options builder sets the discovery strateg. Return type is Discovery Options. Builder and parameters are strategy. builder class for discovery options,sink,sink,sink,sink
1671,EndpointDiscoveryCallback_onEndpointFound,on endpoint found from endpoint discovery callback called when a remote endpoint is discovere. Return type is  void and parameters are string discovered endpoint info. listener invoked during endpoint discovery,neither,neither,neither,neither
1672,EndpointDiscoveryCallback_onEndpointLost,on endpoint lost from endpoint discovery callback called when a remote endpoint is no longer discoverable; only called for endpoints that previously had been passed to on endpoint fou. Return type is  void and parameters are string. listener invoked during endpoint discovery,neither,neither,neither,neither
1673,Payload_asBytes,as bytes from payload non-null for payloads of type payload type b y t e. Return type is byte[] and no argument. a payload sent between devices,neither,neither,neither,sink
1674,Payload_asFile,as file from payload non-null for payloads of type payload type f i l. Return type is Payload. File and no argument. a payload sent between devices,neither,neither,neither,sink
1675,Payload_asStream,as stream from payload non-null for payloads of type payload type s t r e a. Return type is Payload. Stream and no argument. a payload sent between devices,neither,neither,neither,neither
1676,Payload_close,close from payload closes to release any parcel file descriptor and input stream resources for payload file or payload stream when the transferring stoppe. Return type is void and no argument. a payload sent between devices,neither,neither,neither,neither
1677,Payload_fromBytes,from bytes from payload creates a payload of type payload type b y t e s for sending to another devic. Return type is Payload and parameters are byte[]. a payload sent between devices,sink,neither,sink,sink
1678,Payload_fromFile,from file from payload creates a payload of type payload type f i l. Return type is Payload and parameters are parcel file descriptor. a payload sent between devices,neither,neither,neither,neither
1679,Payload_fromFile,from file from payload creates a payload of type payload type f i l. Return type is Payload and parameters are file. a payload sent between devices,neither,neither,neither,neither
1680,Payload_fromStream,from stream from payload creates a payload of type payload type s t r e a. Return type is Payload and parameters are parcel file descriptor. a payload sent between devices,neither,neither,neither,neither
1681,Payload_fromStream,from stream from payload creates a payload of type payload type s t r e a. Return type is Payload and parameters are input stream. a payload sent between devices,neither,neither,neither,neither
1682,Payload_getId,get id from payload a unique identifier for this payloa. Return type is long and no argument. a payload sent between devices,source,source,source,source
1683,Payload_getOffset,get offset from payload returns the offset of this payload for resume sending or receivin. Return type is long and no argument. a payload sent between devices,source,source,source,source
1684,Payload_getType,"get type from payload the type of this payload, one of payload typ. Return type is int and no argument. a payload sent between devices",source,source,source,source
1685,Payload_setOffset,set offset from payload sets the offset from get offs. Return type is void and parameters are long. a payload sent between devices,sink,sink,sink,sink
1686,Payload_setSensitive,set sensitive from payload sets whether or not the payload is sensitiv. Return type is void and parameters are boolean. a payload sent between devices,sink,sink,sink,sink
1687,Payload.File_asJavaFile,as java file from payload file deprecate. Return type is File and no argument. represents a file in local storage on the device,neither,neither,neither,neither
1688,Payload.File_asParcelFileDescriptor,"as parcel file descriptor from payload file gets the parcel file descriptor from which to read the data of this file; useful when reading the file in a streaming fashion, before the entire contents have arrived from the remote endpoin. Return type is Parcel File Descriptor and no argument. represents a file in local storage on the device",source,source,neither,neither
1689,Payload.File_asUri,as uri from payload file gets a file uri for which the client package has read and write permission. Return type is Uri and no argument. represents a file in local storage on the device,source,source,source,neither
1690,Payload.File_close,close from payload file deprecate. Return type is void and no argument. represents a file in local storage on the device,neither,neither,neither,neither
1691,Payload.File_getSize,get size from payload file gets the size of this payload file in byte. Return type is long and no argument. represents a file in local storage on the device,source,source,source,source
1692,Payload.Stream_asInputStream,as input stream from payload stream gets the input stream from which to read the data for this strea. Return type is Input Stream and no argument. represents a stream of data,neither,neither,neither,neither
1693,Payload.Stream_asParcelFileDescriptor,as parcel file descriptor from payload stream gets the parcel file descriptor from which to read the data for this strea. Return type is Parcel File Descriptor and no argument. represents a stream of data,source,source,source,neither
1694,Payload.Stream_close,close from payload stream deprecate. Return type is void and no argument. represents a stream of data,neither,neither,neither,neither
1695,PayloadCallback_onPayloadReceived,on payload received from payload callback called when a payload is received from a remote endpoin. Return type is  void and parameters are string payload. listener for incoming/outgoing payloads between connected endpoints,neither,neither,neither,neither
1696,PayloadCallback_onPayloadTransferUpdate,"on payload transfer update from payload callback called with progress information about an active payload transfer, either incoming or outgoin. Return type is  void and parameters are string payload transfer update. listener for incoming/outgoing payloads between connected endpoints",neither,neither,neither,neither
1697,PayloadTransferUpdate_equals,"equals from payload transfer update . describes the status for an active payload transfer, either incoming or outgoing",neither,neither,neither,neither
1698,PayloadTransferUpdate_getBytesTransferred,"get bytes transferred from payload transfer update returns the number of bytes transferred so fa. Return type is long and no argument. describes the status for an active payload transfer, either incoming or outgoing",source,source,source,source
1699,PayloadTransferUpdate_getPayloadId,"get payload id from payload transfer update returns the payload identifie. Return type is long and no argument. describes the status for an active payload transfer, either incoming or outgoing",source,source,source,source
1700,PayloadTransferUpdate_getStatus,"get status from payload transfer update returns the status of the payloa. Return type is int and no argument. describes the status for an active payload transfer, either incoming or outgoing",source,source,source,source
1701,PayloadTransferUpdate_getTotalBytes,"get total bytes from payload transfer update returns the total number of bytes in the payloa. Return type is long and no argument. describes the status for an active payload transfer, either incoming or outgoing",source,source,source,source
1702,PayloadTransferUpdate_hashCode,"hash code from payload transfer update . describes the status for an active payload transfer, either incoming or outgoing",source,source,neither,neither
1703,PayloadTransferUpdate_writeToParcel,"write to parcel from payload transfer update . describes the status for an active payload transfer, either incoming or outgoing",sink,sink,sink,sink
1704,PayloadTransferUpdate.Builder_build,build from payload transfer update builder builds an instance of payload transfer updat. Return type is Payload Transfer Update and no argument. builder class for payload transfer update,neither,neither,neither,neither
1705,PayloadTransferUpdate.Builder_setBytesTransferred,set bytes transferred from payload transfer update builder sets the number of bytes transferred so fa. Return type is Payload Transfer Update. Builder and parameters are long. builder class for payload transfer update,sink,sink,sink,sink
1706,PayloadTransferUpdate.Builder_setPayloadId,set payload id from payload transfer update builder sets a payload identifie. Return type is Payload Transfer Update. Builder and parameters are long. builder class for payload transfer update,sink,sink,sink,sink
1707,PayloadTransferUpdate.Builder_setStatus,set status from payload transfer update builder sets the status of the payloa. Return type is Payload Transfer Update. Builder and parameters are int. builder class for payload transfer update,sink,sink,sink,sink
1708,PayloadTransferUpdate.Builder_setTotalBytes,set total bytes from payload transfer update builder sets the total number of bytes in the payloa. Return type is Payload Transfer Update. Builder and parameters are long. builder class for payload transfer update,sink,sink,sink,sink
1709,Strategy_equals,equals from strategy . the strategy to be used when discovering or advertising to nearby devices,neither,neither,neither,neither
1710,Strategy_hashCode,hash code from strategy . the strategy to be used when discovering or advertising to nearby devices,neither,neither,neither,neither
1711,Strategy_toString,to string from strategy . the strategy to be used when discovering or advertising to nearby devices,sink,sink,neither,sink
1712,Connections_acceptConnection,accept connection from connections accepts a connection to a remote endpoin. Return type is Pending Result and parameters are google api client string payload callback. this interface is deprecated  use connections client,neither,neither,neither,source
1713,Connections_acceptConnectionRequest,accept connection request from connections deprecate. Return type is Pending Result and parameters are google api client string byte[] connections message listener. this interface is deprecated  use connections client,neither,neither,neither,source
1714,Connections_cancelPayload,cancel payload from connections cancels a payload currently in-flight to or from remote endpoi. Return type is Pending Result and parameters are google api client long. this interface is deprecated  use connections client,neither,neither,neither,neither
1715,Connections_disconnectFromEndpoint,disconnect from endpoint from connections disconnects from a remote endpoin. Return type is  void and parameters are google api client string. this interface is deprecated  use connections client,neither,neither,neither,neither
1716,Connections_rejectConnection,reject connection from connections rejects a connection to a remote endpoin. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use connections client,neither,neither,neither,neither
1717,Connections_rejectConnectionRequest,reject connection request from connections deprecate. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use connections client,neither,neither,neither,neither
1718,Connections_requestConnection,request connection from connections sends a request to connect to a remote endpoin. Return type is Pending Result and parameters are google api client string string connection lifecycle callback. this interface is deprecated  use connections client,sink,sink,sink,sink
1719,Connections_sendConnectionRequest,send connection request from connections deprecate. Return type is Pending Result and parameters are google api client string string byte[] connections connection response callback connections message listener. this interface is deprecated  use connections client,sink,sink,sink,sink
1720,Connections_sendPayload,send payload from connections sends a payload to a remote endpoin. Return type is Pending Result and parameters are google api client string payload. this interface is deprecated  use connections client,sink,sink,sink,sink
1721,Connections_sendPayload,send payload from connections variant of send paylo. Return type is Pending Result and parameters are google api client list payload. this interface is deprecated  use connections client,sink,sink,sink,sink
1722,Connections_sendReliableMessage,send reliable message from connections deprecate. Return type is  void and parameters are google api client list byte[]. this interface is deprecated  use connections client,sink,sink,sink,sink
1723,Connections_sendReliableMessage,send reliable message from connections deprecate. Return type is  void and parameters are google api client string byte[]. this interface is deprecated  use connections client,sink,sink,sink,sink
1724,Connections_sendUnreliableMessage,send unreliable message from connections deprecate. Return type is  void and parameters are google api client string byte[]. this interface is deprecated  use connections client,sink,sink,sink,sink
1725,Connections_sendUnreliableMessage,send unreliable message from connections deprecate. Return type is  void and parameters are google api client list byte[]. this interface is deprecated  use connections client,sink,sink,sink,sink
1726,Connections_startAdvertising,start advertising from connections starts advertising an endpoint for a local ap. Return type is Pending Result and parameters are google api client string string connection lifecycle callback advertising options. this interface is deprecated  use connections client,sink,sink,sink,sink
1727,Connections_startAdvertising,start advertising from connections deprecate. Return type is Pending Result and parameters are google api client string app metadata long connections connection request listener. this interface is deprecated  use connections client,neither,neither,neither,sink
1728,Connections_startDiscovery,start discovery from connections deprecate. Return type is Pending Result and parameters are google api client string long connections endpoint discovery listener. this interface is deprecated  use connections client,neither,neither,neither,sink
1729,Connections_startDiscovery,start discovery from connections starts discovery for remote endpoints with the specified service i. Return type is Pending Result and parameters are google api client string endpoint discovery callback discovery options. this interface is deprecated  use connections client,neither,sink,neither,sink
1730,Connections_stopAdvertising,stop advertising from connections stops advertising a local endpoin. Return type is  void and parameters are google api client. this interface is deprecated  use connections client,neither,neither,neither,neither
1731,Connections_stopAllEndpoints,"stop all endpoints from connections disconnects from, and removes all traces of, all connected and/or discovered endpoint. Return type is  void and parameters are google api client. this interface is deprecated  use connections client",neither,neither,neither,neither
1732,Connections_stopDiscovery,"stop discovery from connections stops discovery for remote endpoints, after a previous call to start discove. Return type is  void and parameters are google api client. this interface is deprecated  use connections client",neither,neither,neither,neither
1733,Connections_stopDiscovery,stop discovery from connections deprecate. Return type is  void and parameters are google api client string. this interface is deprecated  use connections client,neither,neither,neither,neither
1734,Connections.ConnectionResponseCallback_onConnectionResponse,on connection response from connections connection response callback called when a response is received for a connection reques. Return type is  void and parameters are string status byte[]. this interface is deprecated  use connection lifecycle callback instead,neither,neither,neither,neither
1735,Connections.MessageListener_onDisconnected,on disconnected from connections message listener deprecate. Return type is  void and parameters are string. this interface is deprecated  use payload callback instead,neither,neither,neither,neither
1736,Connections.MessageListener_onMessageReceived,on message received from connections message listener deprecate. Return type is  void and parameters are string byte[] boolean. this interface is deprecated  use payload callback instead,neither,neither,neither,neither
1737,Connections.StartAdvertisingResult_getLocalEndpointName,get local endpoint name from connections start advertising result retrieves the human readable name for the local endpoint being advertise. Return type is String and no argument. result delivered when a local endpoint starts being advertised,source,source,source,source
1738,ConnectionsClient_acceptConnection,"accept connection from connections client accepts a connection to a remote endpoin. Return type is Task and parameters are string payload callback. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,sink
1739,ConnectionsClient_cancelPayload,"cancel payload from connections client cancels a payload currently in-flight to or from remote endpoi. Return type is Task and parameters are long. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,neither
1740,ConnectionsClient_disconnectFromEndpoint,"disconnect from endpoint from connections client disconnects from a remote endpoin. Return type is  void and parameters are string. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,neither
1741,ConnectionsClient_rejectConnection,"reject connection from connections client rejects a connection to a remote endpoin. Return type is Task and parameters are string. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,neither
1742,ConnectionsClient_requestConnection,"request connection from connections client sends a request to connect to a remote endpoin. Return type is Task and parameters are byte[] string connection lifecycle callback connection options. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1743,ConnectionsClient_requestConnection,"request connection from connections client sends a request to connect to a remote endpoin. Return type is Task and parameters are byte[] string connection lifecycle callback. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1744,ConnectionsClient_requestConnection,"request connection from connections client sends a request to connect to a remote endpoin. Return type is Task and parameters are string string connection lifecycle callback. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1745,ConnectionsClient_requestConnection,"request connection from connections client sends a request to connect to a remote endpoin. Return type is Task and parameters are string string connection lifecycle callback connection options. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1746,ConnectionsClient_sendPayload,"send payload from connections client sends a payload to a remote endpoin. Return type is Task and parameters are string payload. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1747,ConnectionsClient_sendPayload,"send payload from connections client variant of send paylo. Return type is Task and parameters are list payload. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1748,ConnectionsClient_startAdvertising,"start advertising from connections client starts advertising an endpoint for a local ap. Return type is Task and parameters are byte[] string connection lifecycle callback advertising options. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1749,ConnectionsClient_startAdvertising,"start advertising from connections client starts advertising an endpoint for a local ap. Return type is Task and parameters are string string connection lifecycle callback advertising options. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,sink,sink
1750,ConnectionsClient_startDiscovery,"start discovery from connections client starts discovery for remote endpoints with the specified service i. Return type is Task and parameters are string endpoint discovery callback discovery options. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",sink,sink,neither,sink
1751,ConnectionsClient_stopAdvertising,"stop advertising from connections client stops advertising a local endpoin. Return type is  void and no argument. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,neither
1752,ConnectionsClient_stopAllEndpoints,"stop all endpoints from connections client disconnects from, and removes all traces of, all connected and/or discovered endpoint. Return type is  void and no argument. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,neither
1753,ConnectionsClient_stopDiscovery,"stop discovery from connections client stops discovery for remote endpoints, after a previous call to start discove. Return type is  void and no argument. entry point for advertising and discovering nearby apps and services, and communicating with them over established connections",neither,neither,neither,neither
1754,AdvertisingOptions.Builder_build,build from advertising options builder builds an instance of advertising option. Return type is Advertising Options and no argument. builder class for advertising options,neither,neither,neither,neither
1755,AdvertisingOptions.Builder_setDisruptiveUpgrade,set disruptive upgrade from advertising options builder sets the disruptive upgrade fla. Return type is Advertising Options. Builder and parameters are boolean. builder class for advertising options,sink,sink,sink,sink
1756,AdvertisingOptions.Builder_setLowPower,"set low power from advertising options builder sets whether low power should be used, if true only low poer medium. Return type is Advertising Options. Builder and parameters are boolean. builder class for advertising options",sink,sink,sink,sink
1757,AdvertisingOptions.Builder_setStrategy,"set strategy from advertising options builder set the advertising strategy, the strategy used for advertising, must match the strategy used in discovery option. Return type is Advertising Options. Builder and parameters are strategy. builder class for advertising options",sink,sink,sink,sink
1758,ConnectionOptions.Builder_build,build from connection options builder builds an instance of connection option. Return type is Connection Options and no argument. builder class for connection options,neither,neither,neither,neither
1759,ConnectionOptions.Builder_setDisruptiveUpgrade,set disruptive upgrade from connection options builder sets the disruptive upgrade fla. Return type is Connection Options. Builder and parameters are boolean. builder class for connection options,sink,sink,sink,sink
1760,ConnectionOptions.Builder_setLowPower,set low power from connection options builder sets whether to attempt to connect with the lowest possible powe. Return type is Connection Options. Builder and parameters are boolean. builder class for connection options,sink,sink,sink,sink
1761,ConnectionsOptions.Builder_build,build from connections options builder builds an instance of connections option. Return type is Connections Options and no argument. builder for connections options,neither,neither,neither,neither
1762,DiscoveryOptions.Builder_build,build from discovery options builder builds an instance of discovery option. Return type is Discovery Options and no argument. builder class for discovery options,neither,neither,neither,neither
1763,DiscoveryOptions.Builder_setLowPower,set low power from discovery options builder sets whether to use low powe. Return type is Discovery Options. Builder and parameters are boolean. builder class for discovery options,sink,sink,sink,sink
1764,DiscoveryOptions.Builder_setStrategy,set strategy from discovery options builder sets the discovery strateg. Return type is Discovery Options. Builder and parameters are strategy. builder class for discovery options,sink,sink,sink,sink
1765,Payload.File_asJavaFile,as java file from payload file deprecate. Return type is File and no argument. represents a file in local storage on the device,neither,neither,neither,neither
1766,Payload.File_asParcelFileDescriptor,"as parcel file descriptor from payload file gets the parcel file descriptor from which to read the data of this file; useful when reading the file in a streaming fashion, before the entire contents have arrived from the remote endpoin. Return type is Parcel File Descriptor and no argument. represents a file in local storage on the device",source,source,neither,neither
1767,Payload.File_asUri,as uri from payload file gets a file uri for which the client package has read and write permission. Return type is Uri and no argument. represents a file in local storage on the device,source,source,source,neither
1768,Payload.File_close,close from payload file deprecate. Return type is void and no argument. represents a file in local storage on the device,neither,neither,neither,neither
1769,Payload.File_getSize,get size from payload file gets the size of this payload file in byte. Return type is long and no argument. represents a file in local storage on the device,source,source,source,source
1770,Payload.Stream_asInputStream,as input stream from payload stream gets the input stream from which to read the data for this strea. Return type is Input Stream and no argument. represents a stream of data,neither,neither,neither,neither
1771,Payload.Stream_asParcelFileDescriptor,as parcel file descriptor from payload stream gets the parcel file descriptor from which to read the data for this strea. Return type is Parcel File Descriptor and no argument. represents a stream of data,source,source,source,neither
1772,Payload.Stream_close,close from payload stream deprecate. Return type is void and no argument. represents a stream of data,neither,neither,neither,neither
1773,PayloadTransferUpdate.Builder_build,build from payload transfer update builder builds an instance of payload transfer updat. Return type is Payload Transfer Update and no argument. builder class for payload transfer update,neither,neither,neither,neither
1774,PayloadTransferUpdate.Builder_setBytesTransferred,set bytes transferred from payload transfer update builder sets the number of bytes transferred so fa. Return type is Payload Transfer Update. Builder and parameters are long. builder class for payload transfer update,sink,sink,sink,sink
1775,PayloadTransferUpdate.Builder_setPayloadId,set payload id from payload transfer update builder sets a payload identifie. Return type is Payload Transfer Update. Builder and parameters are long. builder class for payload transfer update,sink,sink,sink,sink
1776,PayloadTransferUpdate.Builder_setStatus,set status from payload transfer update builder sets the status of the payloa. Return type is Payload Transfer Update. Builder and parameters are int. builder class for payload transfer update,sink,sink,sink,sink
1777,PayloadTransferUpdate.Builder_setTotalBytes,set total bytes from payload transfer update builder sets the total number of bytes in the payloa. Return type is Payload Transfer Update. Builder and parameters are long. builder class for payload transfer update,sink,sink,sink,sink
1778,Connections.ConnectionRequestListener_onConnectionRequest,on connection request from connections connection request listener called when a remote endpoint requests a connection to a local endpoin. Return type is void and parameters are string string byte[]. this class is deprecated  use connection lifecycle callback instead,neither,neither,neither,neither
1779,Connections.ConnectionResponseCallback_onConnectionResponse,on connection response from connections connection response callback called when a response is received for a connection reques. Return type is  void and parameters are string status byte[]. this interface is deprecated  use connection lifecycle callback instead,neither,neither,neither,neither
1780,Connections.EndpointDiscoveryListener_onEndpointFound,on endpoint found from connections endpoint discovery listener called when a remote endpoint is discovere. Return type is void and parameters are string string string. this class is deprecated  use endpoint discovery callback instead,neither,neither,neither,source
1781,Connections.EndpointDiscoveryListener_onEndpointLost,on endpoint lost from connections endpoint discovery listener called when a remote endpoint is no longer discoverable; only called for endpoints that previously had been passed to on endpoint fou. Return type is  void and parameters are string. this class is deprecated  use endpoint discovery callback instead,neither,neither,neither,neither
1782,Connections.MessageListener_onDisconnected,on disconnected from connections message listener deprecate. Return type is  void and parameters are string. this interface is deprecated  use payload callback instead,neither,neither,neither,neither
1783,Connections.MessageListener_onMessageReceived,on message received from connections message listener deprecate. Return type is  void and parameters are string byte[] boolean. this interface is deprecated  use payload callback instead,neither,neither,neither,neither
1784,Connections.StartAdvertisingResult_getLocalEndpointName,get local endpoint name from connections start advertising result retrieves the human readable name for the local endpoint being advertise. Return type is String and no argument. result delivered when a local endpoint starts being advertised,source,source,source,source
1785,InstanceID_deleteInstanceID,delete instance i d from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is void and no argument. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,neither,neither,neither,neither
1786,InstanceID_deleteToken,delete token from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is void and parameters are string string. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,neither,neither,neither,neither
1787,InstanceID_getCreationTime,get creation time from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is long and no argument. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,source,source,source,source
1788,InstanceID_getId,get id from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is String and no argument. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,source,source,source,source
1789,InstanceID_getInstance,get instance from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is Instance I D and parameters are context. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,source,source,source,neither
1790,InstanceID_getToken,get token from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is String and parameters are string string. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,source,source,source,source
1791,InstanceID_getToken,get token from instance i d this method was deprecated instance id is deprecated and replaced by firebase instance id see the fcm migration guide for details on how to migrate to firebase instance i. Return type is String and parameters are string string bundle. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,source,source,source,source
1792,InstanceIDListenerService_onTokenRefresh,on token refresh from instance i d listener service called when the system determines that the tokens need to be refreshe. Return type is void and no argument. this class was deprecated  instance id is deprecated and replaced by firebase instance id  see the fcm migration guide for details on how to migrate to firebase instance id,neither,neither,neither,neither
1793,Fido_getFido2ApiClient,get fido2 api client from fido creates a new instance of fido2 api client for use in a non-activity contex. Return type is Fido2 Api Client and parameters are context. entry point for fido a p is,source,source,source,neither
1794,Fido_getFido2ApiClient,get fido2 api client from fido creates a new instance of fido2 api client for use in an activit. Return type is Fido2 Api Client and parameters are activity. entry point for fido a p is,source,source,source,neither
1795,Fido_getFido2PrivilegedApiClient,get fido2 privileged api client from fido creates a new instance of fido2 privileged api client for use in a non-activity contex. Return type is Fido2 Privileged Api Client and parameters are context. entry point for fido a p is,source,source,source,source
1796,Fido_getFido2PrivilegedApiClient,get fido2 privileged api client from fido create a new instance of fido2 privileged api client for use in an activit. Return type is Fido2 Privileged Api Client and parameters are activity. entry point for fido a p is,source,source,source,source
1797,Fido_getSourceDirectTransferClient,get source direct transfer client from fido creates a new instance of source direct transfer client for use in a non-activity contex. Return type is Source Direct Transfer Client and parameters are context. entry point for fido a p is,source,source,source,source
1798,Fido_getSourceDirectTransferClient,get source direct transfer client from fido creates a new instance of source direct transfer client for use in a an activit. Return type is Source Direct Transfer Client and parameters are activity. entry point for fido a p is,source,source,source,source
1799,Fido_getU2fApiClient,get u2f api client from fido creates a new instance of u2f api client for use in a non-activity contex. Return type is U2f Api Client and parameters are context. entry point for fido a p is,source,source,source,source
1800,Fido_getU2fApiClient,get u2f api client from fido creates a new instance of u2f api client for use in an activit. Return type is U2f Api Client and parameters are activity. entry point for fido a p is,source,source,source,source
1801,AdManagerAdViewOptions_getManualImpressionsEnabled,get manual impressions enabled from ad manager ad view options returns true if manual impression reporting is enable. Return type is boolean and no argument. options to configure google ad manager banner requests using an ad loader,source,source,source,source
1802,AdManagerAdViewOptions.Builder_build,build from ad manager ad view options builder constructs a ad manager ad view options object with the specified attribute. Return type is Ad Manager Ad View Options and no argument. builder for a ad manager ad view options,neither,neither,neither,neither
1803,AdManagerAdViewOptions.Builder_setManualImpressionsEnabled,set manual impressions enabled from ad manager ad view options builder enables manual impression reporting for google ad manager reservation. Return type is Ad Manager Ad View Options. Builder and parameters are boolean. builder for a ad manager ad view options,sink,sink,sink,sink
1804,MediaView_setImageScaleType,set image scale type from media view sets the image view scale type when image is rendered in media vie. Return type is void and parameters are image view scale type. this class is deprecated  use media view,sink,sink,sink,sink
1805,MediaView_setMediaContent,set media content from media view sets the media content to be displayed in the media vie. Return type is void and parameters are media content. this class is deprecated  use media view,sink,sink,sink,sink
1806,NativeAd_performClick,perform click from native ad deprecate. Return type is  void and parameters are bundle. this class is deprecated  use native ad,neither,neither,neither,neither
1807,NativeAd_recordImpression,record impression from native ad deprecate. Return type is  boolean and parameters are bundle. this class is deprecated  use native ad,neither,neither,neither,neither
1808,NativeAd_reportTouchEvent,report touch event from native ad deprecate. Return type is  void and parameters are bundle. this class is deprecated  use native ad,neither,neither,neither,neither
1809,NativeAd.AdChoicesInfo_getImages,get images from native ad ad choices info returns a list of images for the attributio. Return type is List and no argument. this class is deprecated  use native ad ad choices info,source,source,source,source
1810,NativeAd.AdChoicesInfo_getText,get text from native ad ad choices info returns the text representing the attribution typ. Return type is Char Sequence and no argument. this class is deprecated  use native ad ad choices info,source,source,source,source
1811,NativeAd.Image_getDrawable,get drawable from native ad image returns the drawable representing the imag. Return type is Drawable and no argument. this class is deprecated  use native ad image,source,source,source,source
1812,NativeAd.Image_getScale,"get scale from native ad image returns the scale for this image, which denotes the ratio of pixels to d. Return type is  double and no argument. this class is deprecated  use native ad image",source,source,source,source
1813,NativeAd.Image_getUri,get uri from native ad image returns the uri for this imag. Return type is Uri and no argument. this class is deprecated  use native ad image,source,source,source,source
1814,NativeAdOptions_getAdChoicesPlacement,get ad choices placement from native ad options returns the ad choices placemen. Return type is int and no argument. this class is deprecated  use native ad options,source,source,source,neither
1815,NativeAdOptions_getImageOrientation,get image orientation from native ad options deprecate. Return type is int and no argument. this class is deprecated  use native ad options,source,source,source,source
1816,NativeAdOptions_getMediaAspectRatio,get media aspect ratio from native ad options returns the aspect ratio of the media to be returne. Return type is int and no argument. this class is deprecated  use native ad options,source,source,source,source
1817,NativeAdOptions_getVideoOptions,get video options from native ad options returns the video options objec. Return type is Video Options and no argument. this class is deprecated  use native ad options,source,source,source,source
1818,NativeAdOptions_shouldRequestMultipleImages,should request multiple images from native ad options returns true if multiple images are requeste. Return type is boolean and no argument. this class is deprecated  use native ad options,neither,neither,source,neither
1819,NativeAdOptions_shouldReturnUrlsForImageAssets,should return urls for image assets from native ad options returns true if urls will be returned for image assets instead of images themselve. Return type is boolean and no argument. this class is deprecated  use native ad options,source,source,source,neither
1820,NativeAdOptions.Builder_build,build from native ad options builder constructs a native ad options object with the specified attribute. Return type is Native Ad Options and no argument.,neither,neither,neither,neither
1821,NativeAdOptions.Builder_setAdChoicesPlacement,set ad choices placement from native ad options builder sets the placement of ad choices ico. Return type is Native Ad Options. Builder and parameters are int.,sink,sink,sink,sink
1822,NativeAdOptions.Builder_setImageOrientation,set image orientation from native ad options builder deprecate. Return type is Native Ad Options. Builder and parameters are int.,sink,sink,sink,sink
1823,NativeAdOptions.Builder_setMediaAspectRatio,set media aspect ratio from native ad options builder .,sink,sink,sink,sink
1824,NativeAdOptions.Builder_setRequestCustomMuteThisAd,set request custom mute this ad from native ad options builder set this boolean to true to request a custom implementation for the mute this ad featur. Return type is Native Ad Options. Builder and parameters are boolean.,sink,sink,sink,sink
1825,NativeAdOptions.Builder_setRequestMultipleImages,set request multiple images from native ad options builder sets whether multiple images should be requested or no. Return type is Native Ad Options. Builder and parameters are boolean.,sink,sink,sink,sink
1826,NativeAdOptions.Builder_setReturnUrlsForImageAssets,set return urls for image assets from native ad options builder sets whether u r ls alone should be returned for image asset. Return type is Native Ad Options. Builder and parameters are boolean.,sink,sink,sink,sink
1827,NativeAdOptions.Builder_setVideoOptions,set video options from native ad options builder sets the video options objec. Return type is Native Ad Options. Builder and parameters are video options.,sink,sink,sink,sink
1828,OnAdManagerAdViewLoadedListener_onAdManagerAdViewLoaded,on ad manager ad view loaded from on ad manager ad view loaded listener called when an ad manager banner ad load. Return type is  void and parameters are ad manager ad view. interface definition for a callback to be invoked when a google ad manager banner ad loads,neither,neither,neither,neither
1829,AdManagerAdViewOptions.Builder_build,build from ad manager ad view options builder constructs a ad manager ad view options object with the specified attribute. Return type is Ad Manager Ad View Options and no argument. builder for a ad manager ad view options,neither,neither,neither,neither
1830,AdManagerAdViewOptions.Builder_setManualImpressionsEnabled,set manual impressions enabled from ad manager ad view options builder enables manual impression reporting for google ad manager reservation. Return type is Ad Manager Ad View Options. Builder and parameters are boolean. builder for a ad manager ad view options,sink,sink,sink,sink
1831,NativeAd.AdChoicesInfo_getImages,get images from native ad ad choices info returns a list of images for the attributio. Return type is List and no argument. this class is deprecated  use native ad ad choices info,source,source,source,source
1832,NativeAd.AdChoicesInfo_getText,get text from native ad ad choices info returns the text representing the attribution typ. Return type is Char Sequence and no argument. this class is deprecated  use native ad ad choices info,source,source,source,source
1833,NativeAd.Image_getDrawable,get drawable from native ad image returns the drawable representing the imag. Return type is Drawable and no argument. this class is deprecated  use native ad image,source,source,source,source
1834,NativeAd.Image_getScale,"get scale from native ad image returns the scale for this image, which denotes the ratio of pixels to d. Return type is  double and no argument. this class is deprecated  use native ad image",source,source,source,source
1835,NativeAd.Image_getUri,get uri from native ad image returns the uri for this imag. Return type is Uri and no argument. this class is deprecated  use native ad image,source,source,source,source
1836,NativeAdOptions.Builder_build,build from native ad options builder constructs a native ad options object with the specified attribute. Return type is Native Ad Options and no argument.,neither,neither,neither,neither
1837,NativeAdOptions.Builder_setAdChoicesPlacement,set ad choices placement from native ad options builder sets the placement of ad choices ico. Return type is Native Ad Options. Builder and parameters are int.,sink,sink,sink,sink
1838,NativeAdOptions.Builder_setImageOrientation,set image orientation from native ad options builder deprecate. Return type is Native Ad Options. Builder and parameters are int.,sink,sink,sink,sink
1839,NativeAdOptions.Builder_setMediaAspectRatio,set media aspect ratio from native ad options builder .,sink,sink,sink,sink
1840,NativeAdOptions.Builder_setRequestCustomMuteThisAd,set request custom mute this ad from native ad options builder set this boolean to true to request a custom implementation for the mute this ad featur. Return type is Native Ad Options. Builder and parameters are boolean.,sink,sink,sink,sink
1841,NativeAdOptions.Builder_setRequestMultipleImages,set request multiple images from native ad options builder sets whether multiple images should be requested or no. Return type is Native Ad Options. Builder and parameters are boolean.,sink,sink,sink,sink
1842,NativeAdOptions.Builder_setReturnUrlsForImageAssets,set return urls for image assets from native ad options builder sets whether u r ls alone should be returned for image asset. Return type is Native Ad Options. Builder and parameters are boolean.,sink,sink,sink,sink
1843,NativeAdOptions.Builder_setVideoOptions,set video options from native ad options builder sets the video options objec. Return type is Native Ad Options. Builder and parameters are video options.,sink,sink,sink,sink
1844,CreateFileActivityBuilder_build,build from create file activity builder gets an intent that can be used to start the create file activit. Return type is Intent Sender and parameters are google api client. this class was deprecated  use create file activity options instead,sink,neither,neither,sink
1845,CreateFileActivityBuilder_setActivityStartFolder,set activity start folder from create file activity builder sets the default folder that will be presented at activity startup as the location for file creatio. Return type is Create File Activity Builder and parameters are drive id. this class was deprecated  use create file activity options instead,sink,sink,sink,sink
1846,CreateFileActivityBuilder_setActivityTitle,set activity title from create file activity builder sets the title displayed in the activit. Return type is Create File Activity Builder and parameters are string. this class was deprecated  use create file activity options instead,sink,sink,sink,sink
1847,CreateFileActivityBuilder_setInitialDriveContents,set initial drive contents from create file activity builder sets the initial drive contents for the new fil. Return type is Create File Activity Builder and parameters are drive contents. this class was deprecated  use create file activity options instead,sink,sink,sink,sink
1848,CreateFileActivityBuilder_setInitialMetadata,set initial metadata from create file activity builder sets the initial metadata for the new fil. Return type is Create File Activity Builder and parameters are metadata change set. this class was deprecated  use create file activity options instead,sink,sink,sink,sink
1849,CreateFileActivityOptions.Builder_build,build from create file activity options builder builds the create shortcut file activity options with the current option. Return type is Create File Activity Options and no argument. builder used to create a new instance of create file activity options,neither,neither,neither,neither
1850,CreateFileActivityOptions.Builder_setActivityStartFolder,set activity start folder from create file activity options builder sets the folder that the create file dialog activity will initially display to folde. Return type is Create File Activity Options. Builder and parameters are drive id. builder used to create a new instance of create file activity options,sink,sink,sink,sink
1851,CreateFileActivityOptions.Builder_setActivityTitle,set activity title from create file activity options builder sets the title of the dialog activity to titl. Return type is Create File Activity Options. Builder and parameters are string. builder used to create a new instance of create file activity options,sink,sink,sink,sink
1852,CreateFileActivityOptions.Builder_setInitialDriveContents,set initial drive contents from create file activity options builder sets the initial contents for the new file to drive content. Return type is Create File Activity Options. Builder and parameters are drive contents. builder used to create a new instance of create file activity options,sink,sink,sink,sink
1853,CreateFileActivityOptions.Builder_setInitialMetadata,set initial metadata from create file activity options builder sets the initial metadata for the new file to metadata change se. Return type is Create File Activity Options. Builder and parameters are metadata change set. builder used to create a new instance of create file activity options,sink,sink,sink,sink
1854,Drive_getDriveClient,"get drive client from drive deprecate. Return type is Drive Client and parameters are activity google sign in account. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1855,Drive_getDriveClient,"get drive client from drive deprecate. Return type is Drive Client and parameters are context google sign in account. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1856,Drive_getDriveResourceClient,"get drive resource client from drive deprecate. Return type is Drive Resource Client and parameters are activity google sign in account. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1857,Drive_getDriveResourceClient,"get drive resource client from drive deprecate. Return type is Drive Resource Client and parameters are context google sign in account. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1858,DriveClient_getDriveId,"get drive id from drive client deprecate. Return type is Task and parameters are string. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1859,DriveClient_getUploadPreferences,"get upload preferences from drive client deprecate. Return type is Task and no argument. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1860,DriveClient_newCreateFileActivityIntentSender,"new create file activity intent sender from drive client deprecate. Return type is Task and parameters are create file activity options. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,sink
1861,DriveClient_newOpenFileActivityIntentSender,"new open file activity intent sender from drive client deprecate. Return type is Task and parameters are open file activity options. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1862,DriveClient_requestSync,"request sync from drive client deprecate. Return type is Task and no argument. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1863,DriveClient_setUploadPreferences,"set upload preferences from drive client deprecate. Return type is Task and parameters are transfer preferences. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,sink,sink,sink
1864,DriveId_asDriveFile,as drive file from drive id returns a drive file object that can be used to interact with the file specified by this drive i. Return type is Drive File and no argument. a canonical identifier for a drive resource,source,source,source,neither
1865,DriveId_asDriveFolder,as drive folder from drive id returns a drive folder object that can be used to interact with the folder specified by this drive i. Return type is Drive Folder and no argument. a canonical identifier for a drive resource,source,source,source,neither
1866,DriveId_asDriveResource,as drive resource from drive id returns a drive resource object that can be used to interact with the file or folder specified by this drive i. Return type is Drive Resource and no argument. a canonical identifier for a drive resource,source,source,source,neither
1867,DriveId_decodeFromString,decode from string from drive id decodes the result of encode to stri. Return type is Drive Id and parameters are string. a canonical identifier for a drive resource,source,source,source,source
1868,DriveId_encodeToString,"encode to string from drive id returns a string representation of this drive id that can be safely persisted, and from which an equivalent drive id can later be reconstructed using decode from stri. Return type is String and no argument. a canonical identifier for a drive resource",source,source,source,source
1869,DriveId_equals,equals from drive id . a canonical identifier for a drive resource,neither,neither,neither,neither
1870,DriveId_getResourceId,get resource id from drive id returns the remote drive resource id associated with the resourc. Return type is String and no argument. a canonical identifier for a drive resource,source,source,source,source
1871,DriveId_getResourceType,get resource type from drive id returns the resource type corresponding to this drive i. Return type is int and no argument. a canonical identifier for a drive resource,source,source,source,source
1872,DriveId_hashCode,hash code from drive id . a canonical identifier for a drive resource,source,source,neither,source
1873,DriveId_toInvariantString,to invariant string from drive id returns an invariant string for this drive i. Return type is String and no argument. a canonical identifier for a drive resource,source,source,source,source
1874,DriveId_toString,to string from drive id returns a string representation of the i. Return type is String and no argument. a canonical identifier for a drive resource,source,source,source,source
1875,DriveId_writeToParcel,write to parcel from drive id . a canonical identifier for a drive resource,sink,sink,sink,sink
1876,DriveResourceClient_addChangeListener,"add change listener from drive resource client deprecate. Return type is Task and parameters are drive resource on change listener. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1877,DriveResourceClient_addChangeSubscription,"add change subscription from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1878,DriveResourceClient_cancelOpenFileCallback,"cancel open file callback from drive resource client deprecate. Return type is Task and parameters are listener token. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1879,DriveResourceClient_commitContents,"commit contents from drive resource client deprecate. Return type is Task and parameters are drive contents metadata change set. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,neither,neither,neither
1880,DriveResourceClient_commitContents,"commit contents from drive resource client deprecate. Return type is Task and parameters are drive contents metadata change set execution options. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,neither,neither,neither
1881,DriveResourceClient_createContents,"create contents from drive resource client deprecate. Return type is Task and no argument. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1882,DriveResourceClient_createFile,"create file from drive resource client deprecate. Return type is Task and parameters are drive folder metadata change set drive contents execution options. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,sink,sink,sink
1883,DriveResourceClient_createFile,"create file from drive resource client deprecate. Return type is Task and parameters are drive folder metadata change set drive contents. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,sink,sink,sink
1884,DriveResourceClient_createFolder,"create folder from drive resource client deprecate. Return type is Task and parameters are drive folder metadata change set. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1885,DriveResourceClient_delete,"delete from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1886,DriveResourceClient_discardContents,"discard contents from drive resource client deprecate. Return type is Task and parameters are drive contents. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1887,DriveResourceClient_getAppFolder,"get app folder from drive resource client deprecate. Return type is Task and no argument. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1888,DriveResourceClient_getMetadata,"get metadata from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1889,DriveResourceClient_getRootFolder,"get root folder from drive resource client deprecate. Return type is Task and no argument. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1890,DriveResourceClient_listChildren,"list children from drive resource client deprecate. Return type is Task and parameters are drive folder. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1891,DriveResourceClient_listParents,"list parents from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1892,DriveResourceClient_openFile,"open file from drive resource client deprecate. Return type is Task and parameters are drive file int. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,source,source,source
1893,DriveResourceClient_openFile,"open file from drive resource client deprecate. Return type is Task and parameters are drive file int open file callback. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,source,neither,source
1894,DriveResourceClient_query,"query from drive resource client deprecate. Return type is Task and parameters are query. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,source,neither,source
1895,DriveResourceClient_queryChildren,"query children from drive resource client deprecate. Return type is Task and parameters are drive folder query. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1896,DriveResourceClient_removeChangeListener,"remove change listener from drive resource client deprecate. Return type is Task and parameters are listener token. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1897,DriveResourceClient_removeChangeSubscription,"remove change subscription from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1898,DriveResourceClient_reopenContentsForWrite,"reopen contents for write from drive resource client deprecate. Return type is Task and parameters are drive contents. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,sink,neither,neither
1899,DriveResourceClient_setParents,"set parents from drive resource client deprecate. Return type is Task and parameters are drive resource set. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,sink,sink,sink
1900,DriveResourceClient_trash,"trash from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1901,DriveResourceClient_untrash,"untrash from drive resource client deprecate. Return type is Task and parameters are drive resource. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1902,DriveResourceClient_updateMetadata,"update metadata from drive resource client deprecate. Return type is Task and parameters are drive resource metadata change set. this class is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1903,DriveStatusCodes_getStatusCodeString,"get status code string from drive status codes returns an untranslated debu. Return type is String and parameters are int. drive specific status codes, for use in get status code",source,source,source,source
1904,ExecutionOptions_equals,equals from execution options . options that can be included with certain requests to the api to configure notification and conflict resolution behavior,neither,neither,neither,neither
1905,ExecutionOptions_hashCode,hash code from execution options . options that can be included with certain requests to the api to configure notification and conflict resolution behavior,sink,neither,neither,neither
1906,ExecutionOptions.Builder_build,build from execution options builder . a builder for creating a new execution options,sink,sink,neither,sink
1907,ExecutionOptions.Builder_setConflictStrategy,set conflict strategy from execution options builder sets a conflict resolution strategy for this actio. Return type is Execution Options. Builder and parameters are int. a builder for creating a new execution options,sink,sink,sink,sink
1908,ExecutionOptions.Builder_setNotifyOnCompletion,set notify on completion from execution options builder sets whether the client should be notified when the action associated with these execution options is applied on the serve. Return type is Execution Options. Builder and parameters are boolean. a builder for creating a new execution options,sink,sink,sink,sink
1909,ExecutionOptions.Builder_setTrackingTag,set tracking tag from execution options builder sets a client-defined string that will be returned to the client through a completion notification on drive event service after this particular action either succeeds or fails when applied on the serve. Return type is Execution Options. Builder and parameters are string. a builder for creating a new execution options,sink,sink,sink,sink
1910,Metadata_getAlternateLink,get alternate link from metadata returns a link for opening the file using a relevant google editor or viewe. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1911,Metadata_getContentAvailability,get content availability from metadata returns c o n t e n t_ n o t_ a v a i l a b l e_ l o c a l l y when the content is not available on the device or c o n t e n t_ a v a i l a b l e_ l o c a l l y when the content is available on the devic. Return type is int and no argument. the details of a drive file or folder,source,source,source,source
1912,Metadata_getCreatedDate,get created date from metadata returns the create time for this resourc. Return type is Date and no argument. the details of a drive file or folder,source,source,source,source
1913,Metadata_getCustomProperties,get custom properties from metadata gets all custom properties and their associated value. Return type is Map and no argument. the details of a drive file or folder,source,source,source,source
1914,Metadata_getDescription,get description from metadata a short description of the resourc. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1915,Metadata_getDriveId,get drive id from metadata returns the id of the resourc. Return type is Drive Id and no argument. the details of a drive file or folder,source,source,source,source
1916,Metadata_getEmbedLink,get embed link from metadata a link for embedding the fil. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1917,Metadata_getFileExtension,get file extension from metadata the file extension used when downloading this fil. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1918,Metadata_getFileSize,get file size from metadata the size of the file in byte. Return type is long and no argument. the details of a drive file or folder,source,source,source,source
1919,Metadata_getLastViewedByMeDate,get last viewed by me date from metadata returns the last time this resource was viewed by the user or null if the user never viewed this resourc. Return type is Date and no argument. the details of a drive file or folder,source,source,source,source
1920,Metadata_getMimeType,get mime type from metadata returns the mime type of the resourc. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1921,Metadata_getModifiedByMeDate,get modified by me date from metadata returns the last time this resource was modified by the user or null if the user never modified this resourc. Return type is Date and no argument. the details of a drive file or folder,source,source,source,source
1922,Metadata_getModifiedDate,get modified date from metadata returns the last time this resource was modified by anyon. Return type is Date and no argument. the details of a drive file or folder,source,source,source,source
1923,Metadata_getOriginalFilename,"get original filename from metadata the original filename if the file was uploaded manually, or the original title if the file was inserted through the ap. Return type is String and no argument. the details of a drive file or folder",source,source,source,source
1924,Metadata_getQuotaBytesUsed,get quota bytes used from metadata the number of quota bytes used by this fil. Return type is long and no argument. the details of a drive file or folder,source,source,source,source
1925,Metadata_getSharedWithMeDate,get shared with me date from metadata returns the time at which this resource was shared with the user or null if the user is the owner of this resourc. Return type is Date and no argument. the details of a drive file or folder,source,source,source,source
1926,Metadata_getTitle,get title from metadata returns the title of the resourc. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1927,Metadata_getWebContentLink,get web content link from metadata a link for downloading the content of the file in a browser using cookie based authenticatio. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1928,Metadata_getWebViewLink,get web view link from metadata a link only available on public folders for viewing their static web asset. Return type is String and no argument. the details of a drive file or folder,source,source,source,source
1929,Metadata_isEditable,is editable from metadata returns true if this resource can be edited by the current use. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1930,Metadata_isExplicitlyTrashed,"is explicitly trashed from metadata returns true if this resource has been explicitly trashed, as opposed to recursively trashe. Return type is boolean and no argument. the details of a drive file or folder",neither,source,source,neither
1931,Metadata_isFolder,is folder from metadata returns true if this metadata is for a folde. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1932,Metadata_isInAppFolder,is in app folder from metadata returns true if this resource is in the application folde. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1933,Metadata_isPinnable,is pinnable from metadata returns true if the resource can be pinne. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1934,Metadata_isPinned,is pinned from metadata returns true if this resource has been pinne. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1935,Metadata_isRestricted,is restricted from metadata whether viewers are prevented from downloading this fil. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1936,Metadata_isShared,is shared from metadata returns true if this resource is a shared resourc. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1937,Metadata_isStarred,is starred from metadata returns true if this resource is starred by the use. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1938,Metadata_isTrashable,is trashable from metadata returns true if this resource can be trashed by this use. Return type is boolean and no argument. the details of a drive file or folder,neither,source,source,source
1939,Metadata_isTrashed,is trashed from metadata returns true if this resource has been trashe. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1940,Metadata_isViewed,is viewed from metadata whether this file has been viewed by this use. Return type is boolean and no argument. the details of a drive file or folder,source,source,source,source
1941,MetadataBuffer_get,get from metadata buffer . a data buffer that points to metadata entries,source,source,source,source
1942,MetadataBuffer_getNextPageToken,get next page token from metadata buffer deprecate. Return type is String and no argument. a data buffer that points to metadata entries,source,source,source,source
1943,MetadataBuffer_release,release from metadata buffer . a data buffer that points to metadata entries,neither,neither,neither,neither
1944,MetadataChangeSet_getCustomPropertyChangeMap,get custom property change map from metadata change set returns a map that defines the custom property changes for the resourc. Return type is Map and no argument. a collection of metadata changes,source,source,source,source
1945,MetadataChangeSet_getDescription,get description from metadata change set returns the new description for the resource or null if unchange. Return type is String and no argument. a collection of metadata changes,source,source,source,source
1946,MetadataChangeSet_getIndexableText,get indexable text from metadata change set returns the new text to be indexed for the resource or null if unchange. Return type is String and no argument. a collection of metadata changes,source,source,source,source
1947,MetadataChangeSet_getLastViewedByMeDate,get last viewed by me date from metadata change set returns the date which will be recorded as when the user most recently viewed the resource or null if unchange. Return type is Date and no argument. a collection of metadata changes,source,source,source,source
1948,MetadataChangeSet_getMimeType,get mime type from metadata change set returns the new mime type for the resource or null if unchange. Return type is String and no argument. a collection of metadata changes,source,source,source,source
1949,MetadataChangeSet_getTitle,get title from metadata change set returns the new title for the resource or null if unchange. Return type is String and no argument. a collection of metadata changes,source,source,source,source
1950,MetadataChangeSet_isPinned,is pinned from metadata change set returns the new pinned state for the resource or null if unchange. Return type is Boolean and no argument. a collection of metadata changes,neither,neither,neither,source
1951,MetadataChangeSet_isStarred,is starred from metadata change set returns the new starred state for the resource or null if unchange. Return type is Boolean and no argument. a collection of metadata changes,neither,neither,neither,neither
1952,MetadataChangeSet_isViewed,is viewed from metadata change set returns the new viewed state for the resource or null if unchange. Return type is Boolean and no argument. a collection of metadata changes,source,source,source,neither
1953,MetadataChangeSet.Builder_build,build from metadata change set builder . a builder for creating a new metadata change set,neither,neither,neither,neither
1954,MetadataChangeSet.Builder_deleteCustomProperty,delete custom property from metadata change set builder deletes the given custom property of the resourc. Return type is Metadata Change Set. Builder and parameters are custom property key. a builder for creating a new metadata change set,neither,neither,neither,neither
1955,MetadataChangeSet.Builder_setCustomProperty,set custom property from metadata change set builder sets a custom file property for the resourc. Return type is Metadata Change Set. Builder and parameters are custom property key string. a builder for creating a new metadata change set,sink,sink,sink,sink
1956,MetadataChangeSet.Builder_setDescription,set description from metadata change set builder sets the description for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
1957,MetadataChangeSet.Builder_setIndexableText,set indexable text from metadata change set builder sets the text to be indexed for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
1958,MetadataChangeSet.Builder_setLastViewedByMeDate,set last viewed by me date from metadata change set builder sets the date when the user most recently viewed the resourc. Return type is Metadata Change Set. Builder and parameters are date. a builder for creating a new metadata change set,sink,sink,sink,sink
1959,MetadataChangeSet.Builder_setMimeType,set mime type from metadata change set builder sets a mime type for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
1960,MetadataChangeSet.Builder_setPinned,"set pinned from metadata change set builder if true, the file's contents will be kept up to date locally and thus the contents will be available when the device is offlin. Return type is Metadata Change Set. Builder and parameters are boolean. a builder for creating a new metadata change set",sink,sink,sink,sink
1961,MetadataChangeSet.Builder_setStarred,set starred from metadata change set builder sets whether the resource will be starre. Return type is Metadata Change Set. Builder and parameters are boolean. a builder for creating a new metadata change set,sink,sink,sink,sink
1962,MetadataChangeSet.Builder_setTitle,set title from metadata change set builder sets the title for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
1963,MetadataChangeSet.Builder_setViewed,set viewed from metadata change set builder this method was deprecated use set view. Return type is Metadata Change Set. Builder and parameters are boolean. a builder for creating a new metadata change set,sink,sink,sink,sink
1964,MetadataChangeSet.Builder_setViewed,set viewed from metadata change set builder sets the resource to viewe. Return type is Metadata Change Set. Builder and no argument. a builder for creating a new metadata change set,sink,sink,sink,sink
1965,OpenFileActivityBuilder_build,build from open file activity builder builds an intent sender from the builder attributes that can be used to start the open file activity using start intent sender for resu. Return type is Intent Sender and parameters are google api client. this class was deprecated  use open file activity options instead,sink,sink,sink,sink
1966,OpenFileActivityBuilder_setActivityStartFolder,set activity start folder from open file activity builder sets the folder that the activity will display initiall. Return type is Open File Activity Builder and parameters are drive id. this class was deprecated  use open file activity options instead,sink,sink,sink,sink
1967,OpenFileActivityBuilder_setActivityTitle,set activity title from open file activity builder sets the title displayed in the activit. Return type is Open File Activity Builder and parameters are string. this class was deprecated  use open file activity options instead,sink,sink,sink,sink
1968,OpenFileActivityBuilder_setMimeType,set mime type from open file activity builder sets the mime type filter which controls which kinds of files are selectable in the file picke. Return type is Open File Activity Builder and parameters are string[]. this class was deprecated  use open file activity options instead,sink,sink,sink,sink
1969,OpenFileActivityBuilder_setSelectionFilter,set selection filter from open file activity builder sets the filter that controls which files are selectable in the file picke. Return type is Open File Activity Builder and parameters are filter. this class was deprecated  use open file activity options instead,sink,sink,sink,neither
1970,OpenFileActivityOptions.Builder_build,build from open file activity options builder build the create shortcut file activity options with the current option. Return type is Open File Activity Options and no argument. builder used to create a new instance of open file activity options,sink,sink,neither,neither
1971,OpenFileActivityOptions.Builder_setActivityStartFolder,set activity start folder from open file activity options builder sets the folder that the open file dialog activity will initially display to folde. Return type is Open File Activity Options. Builder and parameters are drive id. builder used to create a new instance of open file activity options,sink,sink,sink,sink
1972,OpenFileActivityOptions.Builder_setActivityTitle,set activity title from open file activity options builder sets the title of the dialog activity to titl. Return type is Open File Activity Options. Builder and parameters are string. builder used to create a new instance of open file activity options,sink,sink,sink,sink
1973,OpenFileActivityOptions.Builder_setMimeType,set mime type from open file activity options builder sets the mime-type filter to mime type. Return type is Open File Activity Options. Builder and parameters are list. builder used to create a new instance of open file activity options,sink,sink,sink,sink
1974,OpenFileActivityOptions.Builder_setSelectionFilter,set selection filter from open file activity options builder sets the filter that is used to control which files will be selectable in the open file dialog activity to filte. Return type is Open File Activity Options. Builder and parameters are filter. builder used to create a new instance of open file activity options,sink,sink,sink,sink
1975,TransferPreferencesBuilder_build,build from transfer preferences builder builds an instance of transfer preferences based on the values set in this builde. Return type is Transfer Preferences and no argument. builder of immutable transfer preferences instances,neither,neither,neither,neither
1976,TransferPreferencesBuilder_setBatteryUsagePreference,set battery usage preference from transfer preferences builder updates the value of battery usage preference in the builde. Return type is Transfer Preferences Builder and parameters are int. builder of immutable transfer preferences instances,sink,sink,sink,sink
1977,TransferPreferencesBuilder_setIsRoamingAllowed,set is roaming allowed from transfer preferences builder updates the value of roaming preference in the builde. Return type is Transfer Preferences Builder and parameters are boolean. builder of immutable transfer preferences instances,sink,sink,sink,sink
1978,TransferPreferencesBuilder_setNetworkPreference,set network preference from transfer preferences builder updates the value of network preference in the builde. Return type is Transfer Preferences Builder and parameters are int. builder of immutable transfer preferences instances,sink,sink,sink,sink
1979,DriveApi_fetchDriveId,"fetch drive id from drive api deprecate. Return type is Pending Result and parameters are google api client string. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1980,DriveApi_getAppFolder,"get app folder from drive api deprecate. Return type is Drive Folder and parameters are google api client. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1981,DriveApi_getRootFolder,"get root folder from drive api deprecate. Return type is Drive Folder and parameters are google api client. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1982,DriveApi_newCreateFileActivityBuilder,"new create file activity builder from drive api deprecate. Return type is Create File Activity Builder and no argument. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1983,DriveApi_newDriveContents,"new drive contents from drive api deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1984,DriveApi_newOpenFileActivityBuilder,"new open file activity builder from drive api deprecate. Return type is Open File Activity Builder and no argument. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1985,DriveApi_query,"query from drive api deprecate. Return type is Pending Result and parameters are google api client query. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,source,neither,source
1986,DriveApi_requestSync,"request sync from drive api deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",neither,neither,neither,neither
1987,DriveApi.DriveContentsResult_getDriveContents,"get drive contents from drive api drive contents result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1988,DriveApi.DriveIdResult_getDriveId,"get drive id from drive api drive id result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1989,DriveApi.MetadataBufferResult_getMetadataBuffer,"get metadata buffer from drive api metadata buffer result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
1990,DriveContents_commit,commit from drive contents this method was deprecated use commit conten. Return type is Pending Result and parameters are google api client metadata change set execution options. a reference to a drive file's contents,sink,sink,sink,sink
1991,DriveContents_commit,commit from drive contents this method was deprecated use commit conten. Return type is Pending Result and parameters are google api client metadata change set. a reference to a drive file's contents,sink,sink,sink,sink
1992,DriveContents_discard,discard from drive contents this method was deprecated use discard conten. Return type is  void and parameters are google api client. a reference to a drive file's contents,neither,neither,neither,neither
1993,DriveContents_getDriveId,get drive id from drive contents gets the drive id for the file that owns these content. Return type is Drive Id and no argument. a reference to a drive file's contents,source,source,source,source
1994,DriveContents_getInputStream,get input stream from drive contents returns an input stream that allows you to read this file's content. Return type is Input Stream and no argument. a reference to a drive file's contents,source,source,source,source
1995,DriveContents_getMode,get mode from drive contents gets the mode the contents are opened i. Return type is  int and no argument. a reference to a drive file's contents,source,source,source,source
1996,DriveContents_getOutputStream,get output stream from drive contents returns an output stream that allows you to write new content. Return type is Output Stream and no argument. a reference to a drive file's contents,source,source,source,source
1997,DriveContents_getParcelFileDescriptor,get parcel file descriptor from drive contents returns a parcel file descriptor that points to the drive file's content. Return type is Parcel File Descriptor and no argument. a reference to a drive file's contents,source,source,source,source
1998,DriveContents_reopenForWrite,reopen for write from drive contents this method was deprecated use reopen contents for wri. Return type is Pending Result and parameters are google api client. a reference to a drive file's contents,sink,sink,sink,neither
1999,DriveFile_open,open from drive file this method was deprecated use open fi. Return type is Pending Result and parameters are google api client int drive file download progress listener. a file in drive,source,source,source,source
2000,DriveFile.DownloadProgressListener_onProgress,on progress from drive file download progress listener . this interface is deprecated  use open file callback instead,neither,neither,neither,neither
2001,DriveFolder_createFile,create file from drive folder this method was deprecated use create fi. Return type is Pending Result and parameters are google api client metadata change set drive contents. a folder in drive,sink,sink,sink,sink
2002,DriveFolder_createFile,create file from drive folder this method was deprecated use create fi. Return type is Pending Result and parameters are google api client metadata change set drive contents execution options. a folder in drive,sink,sink,sink,sink
2003,DriveFolder_createFolder,create folder from drive folder this method was deprecated use create fold. Return type is Pending Result and parameters are google api client metadata change set. a folder in drive,neither,neither,neither,neither
2004,DriveFolder_listChildren,list children from drive folder this method was deprecated use list childr. Return type is Pending Result and parameters are google api client. a folder in drive,neither,neither,source,neither
2005,DriveFolder_queryChildren,query children from drive folder this method was deprecated use query childr. Return type is Pending Result and parameters are google api client query. a folder in drive,source,source,source,source
2006,DriveFolder.DriveFileResult_getDriveFile,get drive file from drive folder drive file result . this interface is deprecated  drive file objects are returned directly in the new drive clients,source,source,source,source
2007,DriveFolder.DriveFolderResult_getDriveFolder,get drive folder from drive folder drive folder result . this interface is deprecated  drive folder objects are returned directly in the new drive clients,source,source,source,source
2008,DrivePreferencesApi_getFileUploadPreferences,"get file upload preferences from drive preferences api this method isdeprecated the google drive android api is deprecated and will be turned down on december 6, 2019 see the migration guide for instructions on migrating to the rest ap. Return type is Pending Result and parameters are google api client. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
2009,DrivePreferencesApi_setFileUploadPreferences,"set file upload preferences from drive preferences api this method isdeprecated the google drive android api is deprecated and will be turned down on december 6, 2019 see the migration guide for instructions on migrating to the rest ap. Return type is Pending Result and parameters are google api client file upload preferences. this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",sink,sink,sink,sink
2010,DrivePreferencesApi.FileUploadPreferencesResult_getFileUploadPreferences,"get file upload preferences from drive preferences api file upload preferences result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
2011,DriveResource_addChangeListener,add change listener from drive resource this method was deprecated use add change listen. Return type is Pending Result and parameters are google api client change listener. a resource represents a file or folder in drive,neither,neither,neither,neither
2012,DriveResource_addChangeSubscription,add change subscription from drive resource this method was deprecated use add change subscripti. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,neither,neither,sink,neither
2013,DriveResource_delete,delete from drive resource this method was deprecated use dele. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,neither,neither,neither,neither
2014,DriveResource_getDriveId,get drive id from drive resource returns the drive id that uniquely identifies this resourc. Return type is Drive Id and no argument. a resource represents a file or folder in drive,source,source,source,source
2015,DriveResource_getMetadata,get metadata from drive resource this method was deprecated use get metada. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,source,source,source,source
2016,DriveResource_listParents,list parents from drive resource this method was deprecated use list paren. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,source,source,source,source
2017,DriveResource_removeChangeListener,remove change listener from drive resource this method was deprecated use remove change listen. Return type is Pending Result and parameters are google api client change listener. a resource represents a file or folder in drive,neither,neither,neither,neither
2018,DriveResource_removeChangeSubscription,remove change subscription from drive resource this method was deprecated use remove change subscripti. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,neither,neither,neither,neither
2019,DriveResource_setParents,set parents from drive resource this method was deprecated use set paren. Return type is Pending Result and parameters are google api client set. a resource represents a file or folder in drive,sink,sink,sink,sink
2020,DriveResource_trash,trash from drive resource this method was deprecated use tra. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,neither,neither,neither,neither
2021,DriveResource_untrash,untrash from drive resource this method was deprecated use untra. Return type is Pending Result and parameters are google api client. a resource represents a file or folder in drive,neither,neither,neither,neither
2022,DriveResource_updateMetadata,update metadata from drive resource this method was deprecated use update metada. Return type is Pending Result and parameters are google api client metadata change set. a resource represents a file or folder in drive,sink,sink,sink,sink
2023,DriveResource.MetadataResult_getMetadata,get metadata from drive resource metadata result . this interface is deprecated  metadata objects are returned directly in the new drive clients,source,source,source,source
2024,FileUploadPreferences_getBatteryUsagePreference,get battery usage preference from file upload preferences returns the current battery usage preference valu. Return type is  int and no argument. this interface is deprecated  use transfer preferences and transfer preferences builder instead,source,source,source,source
2025,FileUploadPreferences_getNetworkTypePreference,get network type preference from file upload preferences returns the current network type preference valu. Return type is  int and no argument. this interface is deprecated  use transfer preferences and transfer preferences builder instead,source,source,source,source
2026,FileUploadPreferences_isRoamingAllowed,is roaming allowed from file upload preferences returns the current roaming preference valu. Return type is  boolean and no argument. this interface is deprecated  use transfer preferences and transfer preferences builder instead,sink,sink,sink,sink
2027,FileUploadPreferences_setBatteryUsagePreference,set battery usage preference from file upload preferences sets the battery usage preference to be applied on operations performed by the calling applicatio. Return type is  void and parameters are int. this interface is deprecated  use transfer preferences and transfer preferences builder instead,sink,sink,sink,sink
2028,FileUploadPreferences_setNetworkTypePreference,set network type preference from file upload preferences sets the network type preference to be applied on operations performed by the calling applicatio. Return type is  void and parameters are int. this interface is deprecated  use transfer preferences and transfer preferences builder instead,sink,sink,sink,sink
2029,FileUploadPreferences_setRoamingAllowed,set roaming allowed from file upload preferences sets whether the operations by the calling application are allowed while the device is on roamin. Return type is  void and parameters are boolean. this interface is deprecated  use transfer preferences and transfer preferences builder instead,sink,sink,sink,sink
2030,TransferPreferences_getBatteryUsagePreference,get battery usage preference from transfer preferences returns the battery usage preferenc. Return type is  int and no argument. transfer preferences interface,source,source,source,source
2031,TransferPreferences_getNetworkPreference,get network preference from transfer preferences returns the network type preferenc. Return type is  int and no argument. transfer preferences interface,source,source,source,source
2032,TransferPreferences_isRoamingAllowed,is roaming allowed from transfer preferences returns whether roaming is allowe. Return type is  boolean and no argument. transfer preferences interface,source,source,source,source
2033,CreateFileActivityOptions.Builder_build,build from create file activity options builder builds the create shortcut file activity options with the current option. Return type is Create File Activity Options and no argument. builder used to create a new instance of create file activity options,neither,neither,neither,neither
2034,CreateFileActivityOptions.Builder_setActivityStartFolder,set activity start folder from create file activity options builder sets the folder that the create file dialog activity will initially display to folde. Return type is Create File Activity Options. Builder and parameters are drive id. builder used to create a new instance of create file activity options,sink,sink,sink,sink
2035,CreateFileActivityOptions.Builder_setActivityTitle,set activity title from create file activity options builder sets the title of the dialog activity to titl. Return type is Create File Activity Options. Builder and parameters are string. builder used to create a new instance of create file activity options,sink,sink,sink,sink
2036,CreateFileActivityOptions.Builder_setInitialDriveContents,set initial drive contents from create file activity options builder sets the initial contents for the new file to drive content. Return type is Create File Activity Options. Builder and parameters are drive contents. builder used to create a new instance of create file activity options,sink,sink,sink,sink
2037,CreateFileActivityOptions.Builder_setInitialMetadata,set initial metadata from create file activity options builder sets the initial metadata for the new file to metadata change se. Return type is Create File Activity Options. Builder and parameters are metadata change set. builder used to create a new instance of create file activity options,sink,sink,sink,sink
2038,ExecutionOptions.Builder_build,build from execution options builder . a builder for creating a new execution options,sink,sink,neither,sink
2039,ExecutionOptions.Builder_setConflictStrategy,set conflict strategy from execution options builder sets a conflict resolution strategy for this actio. Return type is Execution Options. Builder and parameters are int. a builder for creating a new execution options,sink,sink,sink,sink
2040,ExecutionOptions.Builder_setNotifyOnCompletion,set notify on completion from execution options builder sets whether the client should be notified when the action associated with these execution options is applied on the serve. Return type is Execution Options. Builder and parameters are boolean. a builder for creating a new execution options,sink,sink,sink,sink
2041,ExecutionOptions.Builder_setTrackingTag,set tracking tag from execution options builder sets a client-defined string that will be returned to the client through a completion notification on drive event service after this particular action either succeeds or fails when applied on the serve. Return type is Execution Options. Builder and parameters are string. a builder for creating a new execution options,sink,sink,sink,sink
2042,MetadataChangeSet.Builder_build,build from metadata change set builder . a builder for creating a new metadata change set,neither,neither,neither,neither
2043,MetadataChangeSet.Builder_deleteCustomProperty,delete custom property from metadata change set builder deletes the given custom property of the resourc. Return type is Metadata Change Set. Builder and parameters are custom property key. a builder for creating a new metadata change set,neither,neither,neither,neither
2044,MetadataChangeSet.Builder_setCustomProperty,set custom property from metadata change set builder sets a custom file property for the resourc. Return type is Metadata Change Set. Builder and parameters are custom property key string. a builder for creating a new metadata change set,sink,sink,sink,sink
2045,MetadataChangeSet.Builder_setDescription,set description from metadata change set builder sets the description for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
2046,MetadataChangeSet.Builder_setIndexableText,set indexable text from metadata change set builder sets the text to be indexed for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
2047,MetadataChangeSet.Builder_setLastViewedByMeDate,set last viewed by me date from metadata change set builder sets the date when the user most recently viewed the resourc. Return type is Metadata Change Set. Builder and parameters are date. a builder for creating a new metadata change set,sink,sink,sink,sink
2048,MetadataChangeSet.Builder_setMimeType,set mime type from metadata change set builder sets a mime type for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
2049,MetadataChangeSet.Builder_setPinned,"set pinned from metadata change set builder if true, the file's contents will be kept up to date locally and thus the contents will be available when the device is offlin. Return type is Metadata Change Set. Builder and parameters are boolean. a builder for creating a new metadata change set",sink,sink,sink,sink
2050,MetadataChangeSet.Builder_setStarred,set starred from metadata change set builder sets whether the resource will be starre. Return type is Metadata Change Set. Builder and parameters are boolean. a builder for creating a new metadata change set,sink,sink,sink,sink
2051,MetadataChangeSet.Builder_setTitle,set title from metadata change set builder sets the title for the resourc. Return type is Metadata Change Set. Builder and parameters are string. a builder for creating a new metadata change set,sink,sink,sink,sink
2052,MetadataChangeSet.Builder_setViewed,set viewed from metadata change set builder this method was deprecated use set view. Return type is Metadata Change Set. Builder and parameters are boolean. a builder for creating a new metadata change set,sink,sink,sink,sink
2053,MetadataChangeSet.Builder_setViewed,set viewed from metadata change set builder sets the resource to viewe. Return type is Metadata Change Set. Builder and no argument. a builder for creating a new metadata change set,sink,sink,sink,sink
2054,OpenFileActivityOptions.Builder_build,build from open file activity options builder build the create shortcut file activity options with the current option. Return type is Open File Activity Options and no argument. builder used to create a new instance of open file activity options,sink,sink,neither,neither
2055,OpenFileActivityOptions.Builder_setActivityStartFolder,set activity start folder from open file activity options builder sets the folder that the open file dialog activity will initially display to folde. Return type is Open File Activity Options. Builder and parameters are drive id. builder used to create a new instance of open file activity options,sink,sink,sink,sink
2056,OpenFileActivityOptions.Builder_setActivityTitle,set activity title from open file activity options builder sets the title of the dialog activity to titl. Return type is Open File Activity Options. Builder and parameters are string. builder used to create a new instance of open file activity options,sink,sink,sink,sink
2057,OpenFileActivityOptions.Builder_setMimeType,set mime type from open file activity options builder sets the mime-type filter to mime type. Return type is Open File Activity Options. Builder and parameters are list. builder used to create a new instance of open file activity options,sink,sink,sink,sink
2058,OpenFileActivityOptions.Builder_setSelectionFilter,set selection filter from open file activity options builder sets the filter that is used to control which files will be selectable in the open file dialog activity to filte. Return type is Open File Activity Options. Builder and parameters are filter. builder used to create a new instance of open file activity options,sink,sink,sink,sink
2059,DriveApi.DriveContentsResult_getDriveContents,"get drive contents from drive api drive contents result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
2060,DriveApi.DriveIdResult_getDriveId,"get drive id from drive api drive id result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
2061,DriveApi.MetadataBufferResult_getMetadataBuffer,"get metadata buffer from drive api metadata buffer result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
2062,DriveFile.DownloadProgressListener_onProgress,on progress from drive file download progress listener . this interface was deprecated  use open file callback instead,neither,neither,neither,neither
2063,DriveFolder.DriveFileResult_getDriveFile,get drive file from drive folder drive file result . this interface was deprecated  drive file objects are returned directly in the new drive clients,source,source,source,source
2064,DriveFolder.DriveFolderResult_getDriveFolder,get drive folder from drive folder drive folder result . this interface was deprecated  drive folder objects are returned directly in the new drive clients,source,source,source,source
2065,DrivePreferencesApi.FileUploadPreferencesResult_getFileUploadPreferences,"get file upload preferences from drive preferences api file upload preferences result . this interface is deprecated  the google drive android api is deprecated and will be turned down on december 6, 2019  see the migration guide for instructions on migrating to the rest api",source,source,source,source
2066,DriveResource.MetadataResult_getMetadata,get metadata from drive resource metadata result . this interface was deprecated  metadata objects are returned directly in the new drive clients,source,source,source,source
2067,ProviderInstaller_installIfNeeded,"install if needed from provider installer installs the dynamically updatable security provider, if it's not already installe. Return type is  void and parameters are context. a utility class for installing a dynamically updatable provider to replace the platform default provider",neither,neither,neither,neither
2068,ProviderInstaller_installIfNeededAsync,"install if needed async from provider installer asynchronously installs the dynamically updatable security provider, if it's not already installe. Return type is  void and parameters are context provider installer provider install listener. a utility class for installing a dynamically updatable provider to replace the platform default provider",neither,neither,neither,neither
2069,ProviderInstaller.ProviderInstallListener_onProviderInstallFailed,on provider install failed from provider installer provider install listener called when installing the provider fail. Return type is  void and parameters are int intent. callback for notification of the result of provider installation,neither,neither,neither,neither
2070,ProviderInstaller.ProviderInstallListener_onProviderInstalled,on provider installed from provider installer provider install listener called when installing the provider succeed. Return type is  void and no argument. callback for notification of the result of provider installation,neither,neither,neither,neither
2071,ProviderInstaller.ProviderInstallListener_onProviderInstallFailed,on provider install failed from provider installer provider install listener called when installing the provider fail. Return type is  void and parameters are int intent. callback for notification of the result of provider installation,neither,neither,neither,neither
2072,ProviderInstaller.ProviderInstallListener_onProviderInstalled,on provider installed from provider installer provider install listener called when installing the provider succeed. Return type is  void and no argument. callback for notification of the result of provider installation,neither,neither,neither,neither
2073,LeaderboardBuffer_get,get from leaderboard buffer . abstract data buffer implementation containing leaderboard data,source,source,source,source
2074,LeaderboardBuffer_getCount,get count from leaderboard buffer . abstract data buffer implementation containing leaderboard data,source,source,source,source
2075,LeaderboardScoreBuffer_get,get from leaderboard score buffer . abstract data buffer containing leaderboard score data,source,source,source,source
2076,ScoreSubmissionData_getLeaderboardId,get leaderboard id from score submission data retrieves the id of the leaderboard the score was submitted t. Return type is String and no argument. data object representing the result of submitting a score to a leaderboard,source,source,source,source
2077,ScoreSubmissionData_getPlayerId,get player id from score submission data retrieves the id of the player the score was submitted fo. Return type is String and no argument. data object representing the result of submitting a score to a leaderboard,source,source,source,source
2078,ScoreSubmissionData_getScoreResult,"get score result from score submission data retrieves the score submission data result object for the given time span, if an. Return type is Score Submission Data. Result and parameters are int. data object representing the result of submitting a score to a leaderboard",source,source,source,source
2079,ScoreSubmissionData_toString,to string from score submission data . data object representing the result of submitting a score to a leaderboard,sink,sink,sink,sink
2080,ScoreSubmissionData.Result_toString,to string from score submission data result . simple data class containing the result data for a particular time span,sink,sink,neither,sink
2081,Leaderboard_getDisplayName,get display name from leaderboard retrieves the display name of this leaderboar. Return type is String and no argument. data interface for leaderboard metadata,source,source,source,source
2082,Leaderboard_getDisplayName,get display name from leaderboard loads this leaderboard's display name into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for leaderboard metadata,source,source,source,source
2083,Leaderboard_getIconImageUri,"get icon image uri from leaderboard retrieves an image uri that can be used to load this leaderboard's icon, or null if there was a problem retrieving the ico. Return type is Uri and no argument. data interface for leaderboard metadata",source,source,source,source
2084,Leaderboard_getLeaderboardId,get leaderboard id from leaderboard retrieves the id of this leaderboar. Return type is String and no argument. data interface for leaderboard metadata,source,source,source,source
2085,Leaderboard_getScoreOrder,get score order from leaderboard retrieves the sort order of scores for this leaderboar. Return type is  int and no argument. data interface for leaderboard metadata,source,source,source,source
2086,Leaderboard_getVariants,get variants from leaderboard retrieves the leaderboard variants for this leaderboar. Return type is Array List and no argument. data interface for leaderboard metadata,source,source,source,source
2087,Leaderboards_getAllLeaderboardsIntent,get all leaderboards intent from leaderboards gets an intent to show the list of leaderboards for a gam. Return type is Intent and parameters are google api client. this interface is deprecated  use leaderboards client instea,source,source,source,source
2088,Leaderboards_getLeaderboardIntent,get leaderboard intent from leaderboards gets an intent to show a leaderboard for a gam. Return type is Intent and parameters are google api client string. this interface is deprecated  use leaderboards client instea,source,source,source,source
2089,Leaderboards_getLeaderboardIntent,get leaderboard intent from leaderboards gets an intent to show a leaderboard for a gam. Return type is Intent and parameters are google api client string int. this interface is deprecated  use leaderboards client instea,source,source,source,source
2090,Leaderboards_getLeaderboardIntent,get leaderboard intent from leaderboards gets an intent to show a leaderboard for a gam. Return type is Intent and parameters are google api client string int int. this interface is deprecated  use leaderboards client instea,source,source,source,source
2091,Leaderboards_loadCurrentPlayerLeaderboardScore,load current player leaderboard score from leaderboards asynchronously load the currently signed in player's score for a given leaderboar. Return type is Pending Result and parameters are google api client string int int. this interface is deprecated  use leaderboards client instea,source,source,source,source
2092,Leaderboards_loadLeaderboardMetadata,load leaderboard metadata from leaderboards asynchronously load a specific leaderboard's metadata for this gam. Return type is Pending Result and parameters are google api client string boolean. this interface is deprecated  use leaderboards client instea,source,neither,source,sink
2093,Leaderboards_loadLeaderboardMetadata,load leaderboard metadata from leaderboards asynchronously load the list of leaderboard metadata for this gam. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use leaderboards client instea,source,neither,source,sink
2094,Leaderboards_loadMoreScores,load more scores from leaderboards asynchronously loads an additional page of score data for the given score buffe. Return type is Pending Result and parameters are google api client leaderboard score buffer int int. this interface is deprecated  use leaderboards client instea,neither,sink,neither,sink
2095,Leaderboards_loadPlayerCenteredScores,load player centered scores from leaderboards asynchronously load the player-centered page of scores for a given leaderboar. Return type is Pending Result and parameters are google api client string int int int. this interface is deprecated  use leaderboards client instea,neither,sink,neither,sink
2096,Leaderboards_loadPlayerCenteredScores,load player centered scores from leaderboards asynchronously load the player-centered page of scores for a given leaderboar. Return type is Pending Result and parameters are google api client string int int int boolean. this interface is deprecated  use leaderboards client instea,neither,sink,neither,sink
2097,Leaderboards_loadTopScores,load top scores from leaderboards asynchronously load the top page of scores for a given leaderboar. Return type is Pending Result and parameters are google api client string int int int boolean. this interface is deprecated  use leaderboards client instea,source,neither,neither,sink
2098,Leaderboards_loadTopScores,load top scores from leaderboards asynchronously load the top page of scores for a given leaderboar. Return type is Pending Result and parameters are google api client string int int int. this interface is deprecated  use leaderboards client instea,source,neither,neither,sink
2099,Leaderboards_submitScore,submit score from leaderboards submit a score to a leaderboard for the currently signed in playe. Return type is  void and parameters are google api client string long. this interface is deprecated  use leaderboards client instea,sink,sink,neither,sink
2100,Leaderboards_submitScore,submit score from leaderboards submit a score to a leaderboard for the currently signed in playe. Return type is  void and parameters are google api client string long string. this interface is deprecated  use leaderboards client instea,sink,sink,neither,sink
2101,Leaderboards_submitScoreImmediate,submit score immediate from leaderboards submit a score to a leaderboard for the currently signed in playe. Return type is Pending Result and parameters are google api client string long string. this interface is deprecated  use leaderboards client instea,sink,sink,neither,sink
2102,Leaderboards_submitScoreImmediate,submit score immediate from leaderboards submit a score to a leaderboard for the currently signed in playe. Return type is Pending Result and parameters are google api client string long. this interface is deprecated  use leaderboards client instea,sink,sink,neither,sink
2103,Leaderboards.LeaderboardMetadataResult_getLeaderboards,get leaderboards from leaderboards leaderboard metadata result . this interface is deprecated  leaderboard buffer is returned directly in the leaderboards client,source,source,source,source
2104,Leaderboards.LoadPlayerScoreResult_getScore,get score from leaderboards load player score result . this interface is deprecated  leaderboard score is returned directly in the leaderboards client,source,source,source,source
2105,Leaderboards.LoadScoresResult_getLeaderboard,get leaderboard from leaderboards load scores result . this interface is deprecated  leaderboards client leaderboard scores is returned directly in the leaderboards client,source,source,source,source
2106,Leaderboards.LoadScoresResult_getScores,get scores from leaderboards load scores result . this interface is deprecated  leaderboards client leaderboard scores is returned directly in the leaderboards client,source,source,source,source
2107,Leaderboards.SubmitScoreResult_getScoreData,get score data from leaderboards submit score result . this interface is deprecated  score submission data is returned directly in the leaderboards client,source,source,source,source
2108,LeaderboardScore_getDisplayRank,get display rank from leaderboard score load the formatted display rank into the given char array buffe. Return type is  void and parameters are char array buffer. data interface representing a single score on a leaderboard,source,source,source,source
2109,LeaderboardScore_getDisplayRank,get display rank from leaderboard score retrieves a formatted string to display for this ran. Return type is String and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2110,LeaderboardScore_getDisplayScore,get display score from leaderboard score retrieves a formatted string to display for this scor. Return type is String and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2111,LeaderboardScore_getDisplayScore,get display score from leaderboard score loads the formatted display score into the given char array buffe. Return type is  void and parameters are char array buffer. data interface representing a single score on a leaderboard,source,source,source,source
2112,LeaderboardScore_getRank,get rank from leaderboard score retrieves the rank returned from the server for this scor. Return type is  long and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2113,LeaderboardScore_getRawScore,get raw score from leaderboard score retrieves the raw score valu. Return type is  long and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2114,LeaderboardScore_getScoreHolder,get score holder from leaderboard score retrieves the player that scored this particular scor. Return type is Player and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2115,LeaderboardScore_getScoreHolderDisplayName,get score holder display name from leaderboard score load the display name of the player who scored this score into the provided char array buffe. Return type is  void and parameters are char array buffer. data interface representing a single score on a leaderboard,source,source,source,source
2116,LeaderboardScore_getScoreHolderDisplayName,get score holder display name from leaderboard score retrieves the name to display for the player who scored this scor. Return type is String and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2117,LeaderboardScore_getScoreHolderHiResImageUri,get score holder hi res image uri from leaderboard score retrieves the uri of the hi-res image to display for the player who scored this scor. Return type is Uri and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2118,LeaderboardScore_getScoreHolderIconImageUri,get score holder icon image uri from leaderboard score retrieves the uri of the icon image to display for the player who scored this scor. Return type is Uri and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2119,LeaderboardScore_getScoreTag,"get score tag from leaderboard score retrieve the optional score tag associated with this score, if an. Return type is String and no argument. data interface representing a single score on a leaderboard",source,source,source,source
2120,LeaderboardScore_getTimestampMillis,get timestamp millis from leaderboard score retrieves the timestam. Return type is  long and no argument. data interface representing a single score on a leaderboard,source,source,source,source
2121,LeaderboardVariant_getCollection,get collection from leaderboard variant retrieves the collection of scores contained by this varian. Return type is  int and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span,source,source,source,source
2122,LeaderboardVariant_getDisplayPlayerRank,"get display player rank from leaderboard variant retrieves the viewing player's formatted rank for this variant, if an. Return type is String and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span",source,source,source,source
2123,LeaderboardVariant_getDisplayPlayerScore,"get display player score from leaderboard variant retrieves the viewing player's score for this variant, if an. Return type is String and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span",source,source,source,source
2124,LeaderboardVariant_getNumScores,get num scores from leaderboard variant retrieves the total number of scores for this varian. Return type is  long and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span,source,source,source,source
2125,LeaderboardVariant_getPlayerRank,"get player rank from leaderboard variant retrieves the viewing player's rank for this variant, if an. Return type is  long and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span",source,source,source,source
2126,LeaderboardVariant_getPlayerScoreTag,"get player score tag from leaderboard variant retrieves the viewing player's score tag for this variant, if an. Return type is String and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span",source,source,source,source
2127,LeaderboardVariant_getRawPlayerScore,"get raw player score from leaderboard variant retrieves the viewing player's score for this variant, if an. Return type is  long and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span",source,source,source,source
2128,LeaderboardVariant_getTimeSpan,get time span from leaderboard variant retrieves the time span that the scores for this variant are drawn fro. Return type is  int and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span,source,source,source,source
2129,LeaderboardVariant_hasPlayerInfo,has player info from leaderboard variant get whether or not this variant contains score information for the viewing player or no. Return type is  boolean and no argument. data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection  and time span,source,source,source,source
2130,ScoreSubmissionData.Result_toString,to string from score submission data result . simple data class containing the result data for a particular time span,sink,sink,neither,sink
2131,Leaderboards.LeaderboardMetadataResult_getLeaderboards,get leaderboards from leaderboards leaderboard metadata result . this interface is deprecated  leaderboard buffer is returned directly in the leaderboards client,source,source,source,source
2132,Leaderboards.LoadPlayerScoreResult_getScore,get score from leaderboards load player score result . this interface is deprecated  leaderboard score is returned directly in the leaderboards client,source,source,source,source
2133,Leaderboards.LoadScoresResult_getLeaderboard,get leaderboard from leaderboards load scores result . this interface is deprecated  leaderboards client leaderboard scores is returned directly in the leaderboards client,source,source,source,source
2134,Leaderboards.LoadScoresResult_getScores,get scores from leaderboards load scores result . this interface is deprecated  leaderboards client leaderboard scores is returned directly in the leaderboards client,source,source,source,source
2135,Leaderboards.SubmitScoreResult_getScoreData,get score data from leaderboards submit score result . this interface is deprecated  score submission data is returned directly in the leaderboards client,source,source,source,source
2136,ChangeEvent_getDriveId,get drive id from change event returns the id of the drive resource that triggered the even. Return type is Drive Id and no argument. sent when a drive resource has had a change to its drive contents or metadata,source,source,source,source
2137,ChangeEvent_hasBeenDeleted,has been deleted from change event returns true if the resource has been delete. Return type is boolean and no argument. sent when a drive resource has had a change to its drive contents or metadata,neither,neither,neither,source
2138,ChangeEvent_hasContentChanged,has content changed from change event returns true if the content has changed for this resourc. Return type is boolean and no argument. sent when a drive resource has had a change to its drive contents or metadata,source,source,source,source
2139,ChangeEvent_hasMetadataChanged,has metadata changed from change event returns true if the metadata has changed for this resourc. Return type is boolean and no argument. sent when a drive resource has had a change to its drive contents or metadata,source,source,source,source
2140,ChangeEvent_toString,to string from change event . sent when a drive resource has had a change to its drive contents or metadata,neither,neither,sink,neither
2141,ChangeEvent_writeToParcel,write to parcel from change event . sent when a drive resource has had a change to its drive contents or metadata,sink,sink,sink,sink
2142,CompletionEvent_dismiss,dismiss from completion event indicates to the drive api that the caller has finished interacting with this event and any related resources should be cleaned u. Return type is void and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,neither,neither,neither,neither
2143,CompletionEvent_getAccountName,"get account name from completion event returns the account name that was used by the google sign in account that requested this notification, or null if the default account was use. Return type is String and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server",source,source,source,source
2144,CompletionEvent_getBaseContentsInputStream,"get base contents input stream from completion event returns an input stream for the initial contents of a file, in the case of a notification with status s t a t u s_ c o n f l i c. Return type is Input Stream and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server",source,source,source,source
2145,CompletionEvent_getDriveId,get drive id from completion event returns the id of the drive resource that triggered the even. Return type is Drive Id and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,source,source,source,source
2146,CompletionEvent_getModifiedContentsInputStream,get modified contents input stream from completion event returns an input stream for the modified contents that generated this even. Return type is Input Stream and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,source,source,source,source
2147,CompletionEvent_getModifiedMetadataChangeSet,get modified metadata change set from completion event returns the metadata change set that was committed during the update that generated this even. Return type is Metadata Change Set and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,source,source,source,source
2148,CompletionEvent_getStatus,get status from completion event returns a status indicating the result of the action that generated this even. Return type is int and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,source,source,source,source
2149,CompletionEvent_getTrackingTags,get tracking tags from completion event returns a list of tracking tags provided through set tracking t. Return type is List and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,source,source,source,source
2150,CompletionEvent_snooze,"snooze from completion event indicates that the client could not process the event at the current time, for example because of connectivity issue. Return type is void and no argument. an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server",neither,neither,neither,neither
2151,CompletionEvent_toString,to string from completion event . an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,neither,neither,neither,neither
2152,CompletionEvent_writeToParcel,write to parcel from completion event . an event delivered after the client requests a completion notification using set notify on completion and that action has either succeeded or failed on the server,sink,sink,sink,sink
2153,DriveEventService_onBind,on bind from drive event service . abstract base class for a bound service that handles all drive event instances,neither,neither,neither,neither
2154,DriveEventService_onChange,on change from drive event service . abstract base class for a bound service that handles all drive event instances,neither,neither,neither,neither
2155,DriveEventService_onCompletion,on completion from drive event service . abstract base class for a bound service that handles all drive event instances,neither,neither,neither,neither
2156,DriveEventService_onDestroy,on destroy from drive event service . abstract base class for a bound service that handles all drive event instances,neither,neither,neither,neither
2157,DriveEventService_onUnbind,on unbind from drive event service . abstract base class for a bound service that handles all drive event instances,neither,neither,neither,neither
2158,OpenFileCallback_onContents,on contents from open file callback called when the file is downloade. Return type is  void and parameters are drive contents. a callback for progress events on an active file contents download,neither,neither,neither,neither
2159,OpenFileCallback_onError,on error from open file callback called when there is an error opening the fil. Return type is  void and parameters are exception. a callback for progress events on an active file contents download,neither,neither,neither,neither
2160,OpenFileCallback_onProgress,on progress from open file callback called while the file is being downloaded to report download progres. Return type is  void and parameters are long long. a callback for progress events on an active file contents download,neither,neither,neither,neither
2161,ChangeListener_onChange,on change from change listener . this interface was deprecated  use on change listener instead,neither,neither,neither,neither
2162,CompletionListener_onCompletion,on completion from completion listener . event listener interface for completion event,neither,neither,neither,neither
2163,OnChangeListener_onChange,on change from on change listener a hook that is called when a new event is available for processin. Return type is  void and parameters are change event. event listener interface that enables handling of change event,neither,neither,neither,neither
2164,ResourceEvent_getDriveId,get drive id from resource event returns the id of the drive resource that triggered the even. Return type is Drive Id and no argument. base interface for drive event types related to a specific resource,source,source,source,source
2165,AbstractDataBuffer<T>_close,"close from abstract data buffer< t> releases the data buffer, for use in try-with-resource. Return type is final void and no argument. default implementation of data buffer",neither,neither,neither,neither
2166,AbstractDataBuffer<T>_get,get from abstract data buffer< t> get the item at the specified positio. Return type is T and parameters are int. default implementation of data buffer,source,source,source,source
2167,AbstractDataBuffer<T>_getCount,get count from abstract data buffer< t> . default implementation of data buffer,source,source,source,source
2168,AbstractDataBuffer<T>_isClosed,is closed from abstract data buffer< t> deprecate. Return type is boolean and no argument. default implementation of data buffer,neither,neither,neither,neither
2169,AbstractDataBuffer<T>_iterator,iterator from abstract data buffer< t> . default implementation of data buffer,neither,neither,neither,neither
2170,AbstractDataBuffer<T>_release,release from abstract data buffer< t> releases resources used by the buffe. Return type is void and no argument. default implementation of data buffer,neither,neither,neither,neither
2171,AbstractDataBuffer<T>_singleRefIterator,single ref iterator from abstract data buffer< t> in order to use this you should correctly override data buffer refset data r. Return type is Iterator and no argument. default implementation of data buffer,neither,neither,neither,neither
2172,DataBufferObserverSet_addObserver,add observer from data buffer observer set register the given observer for receiving change notification. Return type is void and parameters are data buffer observer. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2173,DataBufferObserverSet_clear,clear from data buffer observer set clears the set of observer. Return type is void and no argument. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2174,DataBufferObserverSet_hasObservers,has observers from data buffer observer set returns true if this has any registered observer. Return type is boolean and no argument. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2175,DataBufferObserverSet_onDataChanged,on data changed from data buffer observer set called when the overall data change. Return type is void and no argument. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2176,DataBufferObserverSet_onDataRangeChanged,on data range changed from data buffer observer set called when a range of items change. Return type is void and parameters are int int. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2177,DataBufferObserverSet_onDataRangeInserted,on data range inserted from data buffer observer set called when a range of items is inserte. Return type is void and parameters are int int. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2178,DataBufferObserverSet_onDataRangeMoved,on data range moved from data buffer observer set called when a range of items is move. Return type is void and parameters are int int int. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2179,DataBufferObserverSet_onDataRangeRemoved,on data range removed from data buffer observer set called when a range of items is remove. Return type is void and parameters are int int. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2180,DataBufferObserverSet_removeObserver,remove observer from data buffer observer set unregister the given observer from receiving change notification. Return type is void and parameters are data buffer observer. utility class for managing a set of observers and distributing their notifications,neither,neither,neither,neither
2181,DataBufferUtils_freezeAndClose,freeze and close from data buffer utils utility helper method to freeze a data buffer into a list of concrete entitie. Return type is Array List and parameters are data buffer. utilities for working with data buffer objects,neither,neither,neither,neither
2182,DataBufferUtils_hasData,has data from data buffer utils utility function to determine whether a data buffer has data or no. Return type is  boolean and parameters are data buffer. utilities for working with data buffer objects,source,source,source,source
2183,DataBufferUtils_hasNextPage,"has next page from data buffer utils utility function to get the ""next page"" pagination token from a data buffe. Return type is  boolean and parameters are data buffer. utilities for working with data buffer objects",neither,neither,source,neither
2184,DataBufferUtils_hasPrevPage,"has prev page from data buffer utils utility function to get the ""prev page"" pagination token from a data buffe. Return type is  boolean and parameters are data buffer. utilities for working with data buffer objects",source,source,source,source
2185,FreezableUtils_freeze,freeze from freezable utils utility helper method to freeze an array of freezable entities into a list of concrete entitie. Return type is Array List and parameters are e[]. utilities for working with freezable objects,neither,neither,neither,neither
2186,FreezableUtils_freeze,freeze from freezable utils utility helper method to freeze a list of freezable entities into a list of concrete entitie. Return type is Array List and parameters are array list. utilities for working with freezable objects,neither,neither,neither,sink
2187,FreezableUtils_freezeIterable,freeze iterable from freezable utils utility helper method to freeze an array of freezable entities into a list of concrete entitie. Return type is Array List and parameters are iterable. utilities for working with freezable objects,neither,neither,neither,neither
2188,DataBuffer<T>_close,"close from data buffer< t> releases the data buffer, for use in try-with-resource. Return type is  void and no argument. interface for a buffer of typed data",neither,neither,neither,neither
2189,DataBuffer<T>_get,get from data buffer< t> returns an element on specified positio. Return type is T and parameters are int. interface for a buffer of typed data,source,source,source,source
2190,DataBuffer<T>_getCount,get count from data buffer< t> . interface for a buffer of typed data,source,source,source,neither
2191,DataBuffer<T>_isClosed,is closed from data buffer< t> deprecate. Return type is  boolean and no argument. interface for a buffer of typed data,neither,neither,neither,neither
2192,DataBuffer<T>_iterator,iterator from data buffer< t> . interface for a buffer of typed data,neither,neither,neither,neither
2193,DataBuffer<T>_release,release from data buffer< t> releases resources used by the buffe. Return type is void and no argument. interface for a buffer of typed data,neither,neither,neither,neither
2194,DataBuffer<T>_singleRefIterator,single ref iterator from data buffer< t> in order to use this iterator it should be supported by particular data buffe. Return type is Iterator and no argument. interface for a buffer of typed data,neither,neither,neither,neither
2195,DataBufferObserver_onDataChanged,on data changed from data buffer observer called when the overall data change. Return type is  void and no argument. an interface for notifying an observer about changes to a data buffer,neither,neither,neither,neither
2196,DataBufferObserver_onDataRangeChanged,on data range changed from data buffer observer called when a range of items change. Return type is  void and parameters are int int. an interface for notifying an observer about changes to a data buffer,neither,neither,neither,neither
2197,DataBufferObserver_onDataRangeInserted,on data range inserted from data buffer observer called when a range of items is inserte. Return type is  void and parameters are int int. an interface for notifying an observer about changes to a data buffer,neither,neither,neither,neither
2198,DataBufferObserver_onDataRangeMoved,on data range moved from data buffer observer called when a range of items is move. Return type is  void and parameters are int int int. an interface for notifying an observer about changes to a data buffer,neither,neither,neither,neither
2199,DataBufferObserver_onDataRangeRemoved,on data range removed from data buffer observer called when a range of items is remove. Return type is  void and parameters are int int. an interface for notifying an observer about changes to a data buffer,neither,neither,neither,neither
2200,DataBufferObserver.Observable_addObserver,add observer from data buffer observer observable register the given observer for receiving change notification. Return type is  void and parameters are data buffer observer. interface a data buffer can implement to expose the fact that it supports observation,neither,neither,neither,neither
2201,DataBufferObserver.Observable_removeObserver,remove observer from data buffer observer observable unregister the given observer from receiving change notification. Return type is  void and parameters are data buffer observer. interface a data buffer can implement to expose the fact that it supports observation,neither,neither,neither,neither
2202,Freezable<T>_freeze,freeze from freezable< t> freeze a volatile representation into an immutable representatio. Return type is T and no argument. interface for data objects that support being frozen into immutable representations,neither,neither,neither,neither
2203,Freezable<T>_isDataValid,is data valid from freezable< t> check to see if this object is valid for us. Return type is  boolean and no argument. interface for data objects that support being frozen into immutable representations,neither,neither,neither,source
2204,DataBufferObserver.Observable_addObserver,add observer from data buffer observer observable register the given observer for receiving change notification. Return type is  void and parameters are data buffer observer. interface a data buffer can implement to expose the fact that it supports observation,neither,neither,neither,neither
2205,DataBufferObserver.Observable_removeObserver,remove observer from data buffer observer observable unregister the given observer from receiving change notification. Return type is  void and parameters are data buffer observer. interface a data buffer can implement to expose the fact that it supports observation,neither,neither,neither,neither
2206,InstantAppIntentData_getIntent,get intent from instant app intent data retrieve the activity intent used to start the instant ap. Return type is Intent and no argument. data for resolved instant app intent,source,source,source,source
2207,InstantAppIntentData_getMatchResult,get match result from instant app intent data returns the result for the match attempt of the given ur. Return type is int and no argument. data for resolved instant app intent,source,source,source,source
2208,InstantAppIntentData_getPackageName,get package name from instant app intent data returns the package name of the instant app if one exists for the ur. Return type is String and no argument. data for resolved instant app intent,source,source,source,source
2209,InstantAppIntentData_writeToParcel,write to parcel from instant app intent data . data for resolved instant app intent,sink,sink,sink,sink
2210,InstantApps_getActivityCompat,get activity compat from instant apps returns a helper for activity functionality that can be used to retrieve information about running instant apps or installed app. Return type is Activity Compat and parameters are activity. entry point for instant apps a p is,source,source,source,source
2211,InstantApps_getInstantAppsClient,get instant apps client from instant apps creates a new instance of instant apps client for use in an activit. Return type is Instant Apps Client and parameters are activity. entry point for instant apps a p is,source,source,source,source
2212,InstantApps_getInstantAppsClient,get instant apps client from instant apps creates a new instance of instant apps client for use in a non-activity contex. Return type is Instant Apps Client and parameters are context. entry point for instant apps a p is,source,source,source,source
2213,InstantApps_getLauncher,get launcher from instant apps returns an api for launching instant apps by ur. Return type is Launcher and parameters are context. entry point for instant apps a p is,source,source,source,source
2214,InstantApps_getPackageManagerCompat,get package manager compat from instant apps returns a helper for package manager functionality that can be used to retrieve information about running instant apps or installed app. Return type is Package Manager Compat and parameters are context. entry point for instant apps a p is,source,source,source,source
2215,InstantApps_showInstallPrompt,show install prompt from instant apps shows a dialog that allows the user to install the current instant ap. Return type is  boolean and parameters are activity intent int string. entry point for instant apps a p is,neither,neither,neither,sink
2216,InstantAppsClient_areInstantAppsEnabledForDevice,are instant apps enabled for device from instant apps client checks whether this device satisfied all preconditions to run instant app. Return type is Task and no argument. main entry point to a p is for android instant apps,source,source,source,source
2217,InstantAppsClient_getInstantAppData,get instant app data from instant apps client retrieves a parcel file descriptor to the caller's instant app's dat. Return type is Task and no argument. main entry point to a p is for android instant apps,source,source,source,source
2218,LaunchData_getApplicationIcon,get application icon from launch data returns the application icon for the instant ap. Return type is Bitmap and no argument. data for launching an instant app,source,source,source,source
2219,LaunchData_getApplicationLabel,get application label from launch data returns the label for the instant ap. Return type is String and no argument. data for launching an instant app,source,source,source,source
2220,LaunchData_getIntent,get intent from launch data returns the intent to launch the instant ap. Return type is Intent and no argument. data for launching an instant app,source,source,source,source
2221,LaunchData_getPackageName,get package name from launch data returns the package name of the instant ap. Return type is String and no argument. data for launching an instant app,source,source,source,source
2222,LaunchData_writeToParcel,write to parcel from launch data . data for launching an instant app,sink,sink,sink,sink
2223,ActivityCompat_getCallingActivity,get calling activity from activity compat gets the component name of the activity that launched the intent to start this activit. Return type is Component Name and no argument. a helper for accessing features in activity in a backwards compatible fashion,source,source,source,source
2224,ActivityCompat_getCallingPackage,get calling package from activity compat gets the package name of the app that launched the intent to start this activit. Return type is String and no argument. a helper for accessing features in activity in a backwards compatible fashion,source,source,source,source
2225,Launcher_getInstantAppIntentData,get instant app intent data from launcher checks if the given url can be launched as an instant app on this devic. Return type is Instant App Intent Data and parameters are string intent. a p i for launching instant apps,source,source,source,source
2226,Launcher_getInstantAppLaunchData,get instant app launch data from launcher returns launch data that can be used to start an instant ap. Return type is Task and parameters are string. a p i for launching instant apps,source,source,source,source
2227,Launcher_initializeIntentClient,initialize intent client from launcher initializes the client for getting intents for launching instant app. Return type is  boolean and no argument. a p i for launching instant apps,sink,sink,sink,sink
2228,PackageManagerCompat_getApplicationInfo,get application info from package manager compat retrieve all of the information we know about a particular package/applicatio. Return type is Application Info and parameters are string int. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2229,PackageManagerCompat_getApplicationLabel,get application label from package manager compat return the label to use for this applicatio. Return type is Char Sequence and parameters are application info. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2230,PackageManagerCompat_getInstallerPackageName,get installer package name from package manager compat retrieve the package name of the application that installed a packag. Return type is String and parameters are string. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2231,PackageManagerCompat_getInstantAppCookie,get instant app cookie from package manager compat gets the instant application cookie for this ap. Return type is  byte[] and no argument. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2232,PackageManagerCompat_getInstantAppCookieMaxSize,get instant app cookie max size from package manager compat gets the maximum size in bytes of the cookie data an instant app can store on the devic. Return type is  int and no argument. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2233,PackageManagerCompat_getPackageInfo,get package info from package manager compat retrieve overall information about an application package that is installed on the system or a running instant ap. Return type is Package Info and parameters are string int. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2234,PackageManagerCompat_getPackagesForUid,get packages for uid from package manager compat retrieve the names of all packages that are associated with a particular user i. Return type is String[] and parameters are int. a helper for accessing features in package manager in a backwards compatible fashion,source,source,source,source
2235,PackageManagerCompat_isInstantApp,is instant app from package manager compat returns true if this application is an instant ap. Return type is  boolean and no argument. a helper for accessing features in package manager in a backwards compatible fashion,neither,neither,neither,neither
2236,PackageManagerCompat_isInstantApp,is instant app from package manager compat returns true if the provided package is that of a running instant app that has whitelisted the calling applicatio. Return type is  boolean and parameters are string. a helper for accessing features in package manager in a backwards compatible fashion,neither,neither,neither,neither
2237,PackageManagerCompat_setInstantAppCookie,set instant app cookie from package manager compat sets the instant application cookie for the calling ap. Return type is  boolean and parameters are byte[]. a helper for accessing features in package manager in a backwards compatible fashion,sink,sink,sink,sink
2238,CastButtonFactory_setUpMediaRouteButton,set up media route button from cast button factory sets up the given media route butto. Return type is  void and parameters are context media route button. a factory class to set up a menu item or a media route button to be used as a cast button,sink,sink,sink,sink
2239,CastButtonFactory_setUpMediaRouteButton,set up media route button from cast button factory sets up the media route action provider in men. Return type is Menu Item and parameters are context menu int. a factory class to set up a menu item or a media route button to be used as a cast button,sink,sink,sink,neither
2240,CastContext_addAppVisibilityListener,add app visibility listener from cast context deprecate. Return type is void and parameters are app visibility listener. a singleton class containing global context for the cast sdk,neither,neither,neither,neither
2241,CastContext_addCastStateListener,add cast state listener from cast context adds a cast state listener to monitor changes of the current cast stat. Return type is void and parameters are cast state listener. a singleton class containing global context for the cast sdk,neither,neither,neither,neither
2242,CastContext_getCastOptions,get cast options from cast context returns the cast option. Return type is Cast Options and no argument. a singleton class containing global context for the cast sdk,source,source,source,source
2243,CastContext_getCastReasonCodeForCastStatusCode,get cast reason code for cast status code from cast context returns the cast reason codes for the given cast status code. Return type is int and parameters are int. a singleton class containing global context for the cast sdk,source,source,source,source
2244,CastContext_getCastState,get cast state from cast context returns the current cast stat. Return type is int and no argument. a singleton class containing global context for the cast sdk,source,source,source,neither
2245,CastContext_getMediaNotificationManager,get media notification manager from cast context returns the media notification manage. Return type is Media Notification Manager and no argument. a singleton class containing global context for the cast sdk,source,source,source,source
2246,CastContext_getMergedSelector,get merged selector from cast context returns the merged media route selector used for discovering devices and deciding whether to show the media route butto. Return type is Media Route Selector and no argument. a singleton class containing global context for the cast sdk,source,source,source,source
2247,CastContext_getPrecacheManager,get precache manager from cast context returns the precache manage. Return type is Precache Manager and no argument. a singleton class containing global context for the cast sdk,source,source,source,source
2248,CastContext_getSessionManager,"get session manager from cast context returns the session manager, never returns nul. Return type is Session Manager and no argument. a singleton class containing global context for the cast sdk",source,source,source,source
2249,CastContext_getSharedInstance,get shared instance from cast context returns a shared instance of cast contex. Return type is Cast Context and parameters are context. a singleton class containing global context for the cast sdk,source,source,source,source
2250,CastContext_getSharedInstance,get shared instance from cast context returns the shared instance of cast contex. Return type is Cast Context and no argument. a singleton class containing global context for the cast sdk,source,source,source,source
2251,CastContext_isAppVisible,is app visible from cast context deprecate. Return type is boolean and no argument. a singleton class containing global context for the cast sdk,neither,neither,neither,neither
2252,CastContext_onDispatchVolumeKeyEventBeforeJellyBean,"on dispatch volume key event before jelly bean from cast context if your application supports sdk versions before jelly b e a n, you should call this method to delegate the handling of physical volume key events to the sdk so that users can use the physical volume keys to control device volume of the cast receive. Return type is boolean and parameters are key event. a singleton class containing global context for the cast sdk",neither,neither,neither,neither
2253,CastContext_removeAppVisibilityListener,remove app visibility listener from cast context deprecate. Return type is void and parameters are app visibility listener. a singleton class containing global context for the cast sdk,neither,neither,neither,neither
2254,CastContext_removeCastStateListener,remove cast state listener from cast context removes a cast state listene. Return type is void and parameters are cast state listener. a singleton class containing global context for the cast sdk,neither,neither,neither,neither
2255,CastContext_setLaunchCredentialsData,set launch credentials data from cast context sets the credentials data of the current use. Return type is void and parameters are credentials data. a singleton class containing global context for the cast sdk,sink,sink,sink,sink
2256,CastContext_setReceiverApplicationId,set receiver application id from cast context sets the receiver application i. Return type is void and parameters are string. a singleton class containing global context for the cast sdk,sink,sink,sink,sink
2257,CastOptions_getCastMediaOptions,get cast media options from cast options returns the cast media options that is used to configure a media sessio. Return type is Cast Media Options and no argument. configuration parameters for initializing the cast context,source,source,source,source
2258,CastOptions_getEnableReconnectionService,get enable reconnection service from cast options returns true if reconnection service should be enabled when needed to better handle session recover. Return type is boolean and no argument. configuration parameters for initializing the cast context,source,source,source,source
2259,CastOptions_getLaunchOptions,get launch options from cast options returns the launch option. Return type is Launch Options and no argument. configuration parameters for initializing the cast context,source,source,source,source
2260,CastOptions_getReceiverApplicationId,get receiver application id from cast options returns the cast receiver application i. Return type is String and no argument. configuration parameters for initializing the cast context,source,source,source,source
2261,CastOptions_getResumeSavedSession,get resume saved session from cast options returns true if the saved session should be resumed if it was dropped unexpectedl. Return type is boolean and no argument. configuration parameters for initializing the cast context,source,source,source,source
2262,CastOptions_getStopReceiverApplicationWhenEndingSession,get stop receiver application when ending session from cast options returns true if the receiver application should be stopped when the session is ended by the use. Return type is boolean and no argument. configuration parameters for initializing the cast context,source,source,source,source
2263,CastOptions_getSupportedNamespaces,get supported namespaces from cast options returns the list of supported cast namespace. Return type is List and no argument. configuration parameters for initializing the cast context,source,source,source,source
2264,CastOptions_getVolumeDeltaBeforeIceCreamSandwich,get volume delta before ice cream sandwich from cast options returns the amount of receiver device volume to increase or decrease when the physical volume key is pressed on an android device older than ice cream sandwic. Return type is double and no argument. configuration parameters for initializing the cast context,source,source,source,source
2265,CastOptions.Builder_build,build from cast options builder builds and returns the cast options objec. Return type is Cast Options and no argument. a builder to create an instance of cast options which is used to initialize the cast context,neither,neither,neither,neither
2266,CastOptions.Builder_setCastMediaOptions,set cast media options from cast options builder sets the cast media options that will be used to configure the media sessio. Return type is Cast Options. Builder and parameters are cast media options. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2267,CastOptions.Builder_setEnableReconnectionService,set enable reconnection service from cast options builder sets whether reconnection service should be enabled when needed to better handle session recover. Return type is Cast Options. Builder and parameters are boolean. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2268,CastOptions.Builder_setLaunchOptions,set launch options from cast options builder sets the receiver launch options to use when launching the applicatio. Return type is Cast Options. Builder and parameters are launch options. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2269,CastOptions.Builder_setReceiverApplicationId,set receiver application id from cast options builder sets the receiver application i. Return type is Cast Options. Builder and parameters are string. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2270,CastOptions.Builder_setResumeSavedSession,set resume saved session from cast options builder sets whether the saved session should be resumed if it was dropped unexpectedl. Return type is Cast Options. Builder and parameters are boolean. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2271,CastOptions.Builder_setStopReceiverApplicationWhenEndingSession,"set stop receiver application when ending session from cast options builder specifies whether the receiver application should be terminated when a session is ended by the user via the "" stop casting"" button in the media router dialo. Return type is Cast Options. Builder and parameters are boolean. a builder to create an instance of cast options which is used to initialize the cast context",sink,sink,neither,neither
2272,CastOptions.Builder_setSupportedNamespaces,set supported namespaces from cast options builder sets the list of supported namespace. Return type is Cast Options. Builder and parameters are list. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2273,CastOptions.Builder_setVolumeDeltaBeforeIceCreamSandwich,set volume delta before ice cream sandwich from cast options builder sets the amount of receiver device volume to increase or decrease when the physical volume key is pressed on an android device older than ice cream sandwic. Return type is Cast Options. Builder and parameters are double. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2274,CastSession_addCastListener,"add cast listener from cast session adds the cast listener for cast events, such as change of the application status and change of device volum. Return type is void and parameters are cast listener. an implementation of session for managing connections to a cast receiver device",neither,neither,neither,neither
2275,CastSession_getActiveInputState,get active input state from cast session returns the device's active-input stat. Return type is int and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2276,CastSession_getApplicationConnectionResult,"get application connection result from cast session returns the cast application connection result, the result of launching or joining the receiver application when starting or resuming this sessio. Return type is Cast. Application Connection Result and no argument. an implementation of session for managing connections to a cast receiver device",source,source,source,source
2277,CastSession_getApplicationMetadata,"get application metadata from cast session returns the metadata for the currently running receiver application, or null if the metadata is unavailabl. Return type is Application Metadata and no argument. an implementation of session for managing connections to a cast receiver device",source,source,source,source
2278,CastSession_getApplicationStatus,"get application status from cast session returns the current receiver application status, if an. Return type is String and no argument. an implementation of session for managing connections to a cast receiver device",source,source,source,source
2279,CastSession_getCastDevice,get cast device from cast session returns the cast device this cast session is casting t. Return type is Cast Device and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2280,CastSession_getRemoteMediaClient,get remote media client from cast session returns the remote media client for remote media contro. Return type is Remote Media Client and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2281,CastSession_getSessionRemainingTimeMs,get session remaining time ms from cast session returns the amount of time that this cast session instance should still be considered live by the sd. Return type is long and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2282,CastSession_getStandbyState,get standby state from cast session returns the device's standby stat. Return type is int and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2283,CastSession_getVolume,"get volume from cast session returns the device's volume, in the range [00, 10. Return type is double and no argument. an implementation of session for managing connections to a cast receiver device",source,source,source,source
2284,CastSession_isMute,is mute from cast session returns the device's mute stat. Return type is boolean and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2285,CastSession_removeCastListener,remove cast listener from cast session removes the cast listene. Return type is void and parameters are cast listener. an implementation of session for managing connections to a cast receiver device,neither,neither,neither,neither
2286,CastSession_removeMessageReceivedCallbacks,remove message received callbacks from cast session removes the cast message received callback from this session for a given namespac. Return type is void and parameters are string. an implementation of session for managing connections to a cast receiver device,neither,neither,neither,neither
2287,CastSession_requestStatus,request status from cast session requests the latest status from the devic. Return type is void and no argument. an implementation of session for managing connections to a cast receiver device,source,source,source,source
2288,CastSession_sendMessage,send message from cast session sends a message to the currently connected applicatio. Return type is Pending Result and parameters are string string. an implementation of session for managing connections to a cast receiver device,sink,sink,sink,sink
2289,CastSession_setMessageReceivedCallbacks,set message received callbacks from cast session sets the new cast message received callback listener on this session for a given namespac. Return type is void and parameters are string cast message received callback. an implementation of session for managing connections to a cast receiver device,sink,sink,sink,sink
2290,CastSession_setMute,set mute from cast session mutes or unmutes the device's audi. Return type is void and parameters are boolean. an implementation of session for managing connections to a cast receiver device,sink,sink,sink,sink
2291,CastSession_setVolume,set volume from cast session sets the device volum. Return type is void and parameters are double. an implementation of session for managing connections to a cast receiver device,sink,sink,sink,sink
2292,CastState_toString,to string from cast state . the possible casting states,neither,source,neither,source
2293,IntroductoryOverlay.Builder_build,build from introductory overlay builder . the builder class that creates an instance of introductory overlay,neither,neither,neither,neither
2294,IntroductoryOverlay.Builder_setButtonText,set button text from introductory overlay builder sets the text used in the confirmation button on this overla. Return type is Introductory Overlay. Builder and parameters are string. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2295,IntroductoryOverlay.Builder_setButtonText,set button text from introductory overlay builder sets the text used in the confirmation button on this overla. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2296,IntroductoryOverlay.Builder_setFocusRadius,"set focus radius from introductory overlay builder sets the radius of the ""hole"" around the cast butto. Return type is Introductory Overlay. Builder and parameters are float. the builder class that creates an instance of introductory overlay",sink,sink,sink,sink
2297,IntroductoryOverlay.Builder_setFocusRadiusId,"set focus radius id from introductory overlay builder sets the radius of the ""hole"" around the cast butto. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay",sink,sink,sink,sink
2298,IntroductoryOverlay.Builder_setOnOverlayDismissedListener,set on overlay dismissed listener from introductory overlay builder sets an introductory overlay on overlay dismissed listener listener that will be notified when the overlay is dismissed by pressing on the confirmation butto. Return type is Introductory Overlay. Builder and parameters are introductory overlay on overlay dismissed listener. the builder class that creates an instance of introductory overlay,neither,neither,neither,neither
2299,IntroductoryOverlay.Builder_setOverlayColor,set overlay color from introductory overlay builder sets the background color of the overlay vie. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2300,IntroductoryOverlay.Builder_setSingleTime,set single time from introductory overlay builder sets the maximum number of times that this overlay should be shown to . Return type is Introductory Overlay. Builder and no argument. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2301,IntroductoryOverlay.Builder_setTitleText,set title text from introductory overlay builder sets the text used in the title area on the overla. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2302,IntroductoryOverlay.Builder_setTitleText,set title text from introductory overlay builder sets the text used in the title area on the overla. Return type is Introductory Overlay. Builder and parameters are string. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2303,MediaNotificationManager_updateNotification,update notification from media notification manager updates the current media notification if it is already starte. Return type is void and no argument. a class that manages the media notification,neither,neither,neither,neither
2304,PrecacheManager_precache,precache from precache manager pre-caches the content that users intend to consume in order to reduce the loading time at playbac. Return type is void and parameters are string. the entry point of pre cache a p is,neither,neither,neither,sink
2305,ReconnectionService_onBind,"on bind from reconnection service . a service to run in the background when the playback of a media starts, to help with reconnection if needed",neither,neither,neither,neither
2306,ReconnectionService_onCreate,"on create from reconnection service . a service to run in the background when the playback of a media starts, to help with reconnection if needed",neither,neither,neither,neither
2307,ReconnectionService_onDestroy,"on destroy from reconnection service . a service to run in the background when the playback of a media starts, to help with reconnection if needed",neither,neither,neither,neither
2308,ReconnectionService_onStartCommand,"on start command from reconnection service . a service to run in the background when the playback of a media starts, to help with reconnection if needed",neither,neither,neither,neither
2309,Session_getCategory,get category from session returns the category associated with this sessio. Return type is String and no argument. an abstract base class representing a session with a receiver application,source,source,source,source
2310,Session_getSessionId,get session id from session returns the unique id for this sessio. Return type is String and no argument. an abstract base class representing a session with a receiver application,source,source,source,source
2311,Session_getSessionRemainingTimeMs,get session remaining time ms from session subclass can override this method to provide a hint of how long the current session will liv. Return type is long and no argument. an abstract base class representing a session with a receiver application,source,source,source,source
2312,Session_isConnected,is connected from session returns true if the session is connecte. Return type is boolean and no argument. an abstract base class representing a session with a receiver application,source,source,source,source
2313,Session_isConnecting,is connecting from session returns true if the session is connecting or resumin. Return type is boolean and no argument. an abstract base class representing a session with a receiver application,source,source,source,source
2314,Session_isDisconnected,is disconnected from session returns true if the session is disconnecte. Return type is boolean and no argument. an abstract base class representing a session with a receiver application,source,source,neither,source
2315,Session_isDisconnecting,is disconnecting from session returns true if the session is disconnectin. Return type is boolean and no argument. an abstract base class representing a session with a receiver application,neither,neither,neither,source
2316,Session_isResuming,is resuming from session returns true if the session is resumin. Return type is boolean and no argument. an abstract base class representing a session with a receiver application,neither,neither,neither,source
2317,Session_isSuspended,is suspended from session returns true if the session is suspende. Return type is boolean and no argument. an abstract base class representing a session with a receiver application,neither,neither,neither,source
2318,SessionManager_addSessionManagerListener,add session manager listener from session manager adds a session manager listener to monitor events from any type of session instanc. Return type is void and parameters are session manager listener. a class that manages session instances,neither,neither,neither,source
2319,SessionManager_addSessionManagerListener,add session manager listener from session manager adds a session manager listener to monitor events from a session instance whose class is session clas. Return type is void and parameters are session manager listener class. a class that manages session instances,neither,neither,neither,neither
2320,SessionManager_endCurrentSession,end current session from session manager ends the current sessio. Return type is void and parameters are boolean. a class that manages session instances,neither,neither,neither,source
2321,SessionManager_getCurrentCastSession,"get current cast session from session manager returns the current session if it is an instance of cast session, otherwise returns nul. Return type is Cast Session and no argument. a class that manages session instances",source,source,source,source
2322,SessionManager_getCurrentSession,get current session from session manager returns the currently active sessio. Return type is Session and no argument. a class that manages session instances,source,source,source,source
2323,SessionManager_removeSessionManagerListener,remove session manager listener from session manager removes the session manager listene. Return type is void and parameters are session manager listener. a class that manages session instances,neither,neither,neither,neither
2324,SessionManager_removeSessionManagerListener,remove session manager listener from session manager removes the session manager listene. Return type is void and parameters are session manager listener class. a class that manages session instances,neither,neither,neither,neither
2325,SessionManager_startSession,start session from session manager starts a sessio. Return type is void and parameters are intent. a class that manages session instances,sink,sink,neither,sink
2326,SessionProvider_createSession,create session from session provider constructs a new sessio. Return type is Session and parameters are string. an abstract base class for performing session construction,neither,neither,neither,source
2327,SessionProvider_getCategory,get category from session provider returns the category string for this session provide. Return type is String and no argument. an abstract base class for performing session construction,source,source,source,source
2328,SessionProvider_getContext,get context from session provider returns the application context used to construct this instanc. Return type is Context and no argument. an abstract base class for performing session construction,source,source,source,source
2329,SessionProvider_isSessionRecoverable,is session recoverable from session provider returns true if a previously constructed session can be resume. Return type is  boolean and no argument. an abstract base class for performing session construction,neither,neither,neither,source
2330,AppVisibilityListener_onAppEnteredBackground,"on app entered background from app visibility listener called when the application's ui enters the backgroun. Return type is  void and no argument. this interface is deprecated  don't use the sdk to listen to app visibility changes  use alternative ways for watching activity lifecycle changes such as by overriding activity lifecycle change methods, or by using application activity lifecycle callbacks",neither,neither,neither,neither
2331,AppVisibilityListener_onAppEnteredForeground,"on app entered foreground from app visibility listener called when the application's ui enters the foregroun. Return type is  void and no argument. this interface is deprecated  don't use the sdk to listen to app visibility changes  use alternative ways for watching activity lifecycle changes such as by overriding activity lifecycle change methods, or by using application activity lifecycle callbacks",neither,neither,neither,neither
2332,CastStateListener_onCastStateChanged,on cast state changed from cast state listener called when the current cast state change. Return type is  void and parameters are int. a listener interface for monitoring the current cast state,neither,neither,neither,neither
2333,IntroductoryOverlay_remove,remove from introductory overlay removes the overlay and frees the resources use. Return type is  void and no argument. a simple overlay view that highlights the cast button to the user,neither,neither,neither,neither
2334,IntroductoryOverlay_show,show from introductory overlay shows the overlay if it is not visible alread. Return type is  void and no argument. a simple overlay view that highlights the cast button to the user,neither,neither,neither,neither
2335,IntroductoryOverlay.OnOverlayDismissedListener_onOverlayDismissed,on overlay dismissed from introductory overlay on overlay dismissed listener called when the overlay is dismisse. Return type is  void and no argument. an interface to notify the clients when the overlay is dismissed explicitly when the user taps on the confirmation button,neither,neither,neither,neither
2336,OptionsProvider_getAdditionalSessionProviders,get additional session providers from options provider provides a list of custom session provider instances for non- cast device. Return type is List and parameters are context. developers should implement this interface to provide options needed to create and initialize cast context,source,source,source,source
2337,OptionsProvider_getCastOptions,"get cast options from options provider provides cast options, which affects discovery and session management of a cast devic. Return type is Cast Options and parameters are context. developers should implement this interface to provide options needed to create and initialize cast context",source,source,source,source
2338,SessionManagerListener<T extendsSession>_onSessionEnded,on session ended from session manager listener< t extends session> called when a session has ende. Return type is  void and parameters are t int. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,source
2339,SessionManagerListener<T extendsSession>_onSessionEnding,on session ending from session manager listener< t extends session> called when a session is endin. Return type is  void and parameters are t. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,neither
2340,SessionManagerListener<T extendsSession>_onSessionResumeFailed,on session resume failed from session manager listener< t extends session> called when a previous saved session failed to resum. Return type is  void and parameters are t int. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,neither
2341,SessionManagerListener<T extendsSession>_onSessionResumed,on session resumed from session manager listener< t extends session> called when session has been successfully resume. Return type is  void and parameters are t boolean. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,neither
2342,SessionManagerListener<T extendsSession>_onSessionResuming,on session resuming from session manager listener< t extends session> called when a session is attempting to resum. Return type is  void and parameters are t string. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,neither
2343,SessionManagerListener<T extendsSession>_onSessionStartFailed,on session start failed from session manager listener< t extends session> called when a session failed to star. Return type is  void and parameters are t int. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,source
2344,SessionManagerListener<T extendsSession>_onSessionStarted,on session started from session manager listener< t extends session> called when a session has been successfully starte. Return type is  void and parameters are t string. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,source
2345,SessionManagerListener<T extendsSession>_onSessionStarting,on session starting from session manager listener< t extends session> called when a session is attempting to star. Return type is  void and parameters are t. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,source
2346,SessionManagerListener<T extendsSession>_onSessionSuspended,on session suspended from session manager listener< t extends session> called when a session has been suspende. Return type is  void and parameters are t int. a listener interface for monitoring events of a particular type of session instance,neither,neither,neither,neither
2347,CastOptions.Builder_build,build from cast options builder builds and returns the cast options objec. Return type is Cast Options and no argument. a builder to create an instance of cast options which is used to initialize the cast context,neither,neither,neither,neither
2348,CastOptions.Builder_setCastMediaOptions,set cast media options from cast options builder sets the cast media options that will be used to configure the media sessio. Return type is Cast Options. Builder and parameters are cast media options. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2349,CastOptions.Builder_setEnableReconnectionService,set enable reconnection service from cast options builder sets whether reconnection service should be enabled when needed to better handle session recover. Return type is Cast Options. Builder and parameters are boolean. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2350,CastOptions.Builder_setLaunchOptions,set launch options from cast options builder sets the receiver launch options to use when launching the applicatio. Return type is Cast Options. Builder and parameters are launch options. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2351,CastOptions.Builder_setReceiverApplicationId,set receiver application id from cast options builder sets the receiver application i. Return type is Cast Options. Builder and parameters are string. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2352,CastOptions.Builder_setResumeSavedSession,set resume saved session from cast options builder sets whether the saved session should be resumed if it was dropped unexpectedl. Return type is Cast Options. Builder and parameters are boolean. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2353,CastOptions.Builder_setStopReceiverApplicationWhenEndingSession,"set stop receiver application when ending session from cast options builder specifies whether the receiver application should be terminated when a session is ended by the user via the "" stop casting"" button in the media router dialo. Return type is Cast Options. Builder and parameters are boolean. a builder to create an instance of cast options which is used to initialize the cast context",sink,sink,neither,neither
2354,CastOptions.Builder_setSupportedNamespaces,set supported namespaces from cast options builder sets the list of supported namespace. Return type is Cast Options. Builder and parameters are list. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2355,CastOptions.Builder_setVolumeDeltaBeforeIceCreamSandwich,set volume delta before ice cream sandwich from cast options builder sets the amount of receiver device volume to increase or decrease when the physical volume key is pressed on an android device older than ice cream sandwic. Return type is Cast Options. Builder and parameters are double. a builder to create an instance of cast options which is used to initialize the cast context,sink,sink,sink,sink
2356,IntroductoryOverlay.Builder_build,build from introductory overlay builder . the builder class that creates an instance of introductory overlay,neither,neither,neither,neither
2357,IntroductoryOverlay.Builder_setButtonText,set button text from introductory overlay builder sets the text used in the confirmation button on this overla. Return type is Introductory Overlay. Builder and parameters are string. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2358,IntroductoryOverlay.Builder_setButtonText,set button text from introductory overlay builder sets the text used in the confirmation button on this overla. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2359,IntroductoryOverlay.Builder_setFocusRadius,"set focus radius from introductory overlay builder sets the radius of the ""hole"" around the cast butto. Return type is Introductory Overlay. Builder and parameters are float. the builder class that creates an instance of introductory overlay",sink,sink,sink,sink
2360,IntroductoryOverlay.Builder_setFocusRadiusId,"set focus radius id from introductory overlay builder sets the radius of the ""hole"" around the cast butto. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay",sink,sink,sink,sink
2361,IntroductoryOverlay.Builder_setOnOverlayDismissedListener,set on overlay dismissed listener from introductory overlay builder sets an introductory overlay on overlay dismissed listener listener that will be notified when the overlay is dismissed by pressing on the confirmation butto. Return type is Introductory Overlay. Builder and parameters are introductory overlay on overlay dismissed listener. the builder class that creates an instance of introductory overlay,neither,neither,neither,neither
2362,IntroductoryOverlay.Builder_setOverlayColor,set overlay color from introductory overlay builder sets the background color of the overlay vie. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2363,IntroductoryOverlay.Builder_setSingleTime,set single time from introductory overlay builder sets the maximum number of times that this overlay should be shown to . Return type is Introductory Overlay. Builder and no argument. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2364,IntroductoryOverlay.Builder_setTitleText,set title text from introductory overlay builder sets the text used in the title area on the overla. Return type is Introductory Overlay. Builder and parameters are int. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2365,IntroductoryOverlay.Builder_setTitleText,set title text from introductory overlay builder sets the text used in the title area on the overla. Return type is Introductory Overlay. Builder and parameters are string. the builder class that creates an instance of introductory overlay,sink,sink,sink,sink
2366,IntroductoryOverlay.OnOverlayDismissedListener_onOverlayDismissed,on overlay dismissed from introductory overlay on overlay dismissed listener called when the overlay is dismisse. Return type is  void and no argument. an interface to notify the clients when the overlay is dismissed explicitly when the user taps on the confirmation button,neither,neither,neither,neither
2367,AccountTransfer_getAccountTransferClient,get account transfer client from account transfer creates a new instance of account transfer client for use in a non-activity contex. Return type is Account Transfer Client and parameters are context. main entry point for account transfer a p i's,source,source,source,source
2368,AccountTransfer_getAccountTransferClient,get account transfer client from account transfer creates a new instance of account transfer client for use in an activit. Return type is Account Transfer Client and parameters are activity. main entry point for account transfer a p i's,source,source,source,source
2369,AccountTransferClient_getDeviceMetaData,"get device meta data from account transfer client retrieves device meta data associated with the device, which authenticators can use to figure out if they can challenge on the devic. Return type is Task and parameters are string. contains api's used by authenticators for bootstrapping accounts",source,source,source,source
2370,AccountTransferClient_notifyCompletion,notify completion from account transfer client notifies the completion of the account transfe. Return type is Task and parameters are string int. contains api's used by authenticators for bootstrapping accounts,sink,sink,sink,sink
2371,AccountTransferClient_retrieveData,retrieve data from account transfer client retrieves data that was transferred over from other sid. Return type is Task and parameters are string. contains api's used by authenticators for bootstrapping accounts,source,source,source,source
2372,AccountTransferClient_sendData,send data from account transfer client transfers data that will be transferred over to the other sid. Return type is Task and parameters are string byte[]. contains api's used by authenticators for bootstrapping accounts,sink,sink,sink,sink
2373,AccountTransferClient_showUserChallenge,"show user challenge from account transfer client sends a user facing challenge, specified by pending inten. Return type is Task and parameters are string pending intent. contains api's used by authenticators for bootstrapping accounts",sink,sink,source,neither
2374,AccountTransferStatusCodes_getStatusCodeString,"get status code string from account transfer status codes returns an untranslated debu. Return type is String and parameters are int. account transfer specific status codes, for use in status#get status code",source,source,source,source
2375,DeviceMetaData_getMinAgeOfLockScreen,get min age of lock screen from device meta data returns the duration since the lock screen was setu. Return type is long and no argument. contains meta information like source device auth info and whether an authenticator is allowed to throw challenge,source,source,source,source
2376,DeviceMetaData_isChallengeAllowed,is challenge allowed from device meta data returns if the calling authenticator is allowed to challenge on the device this call is mad. Return type is boolean and no argument. contains meta information like source device auth info and whether an authenticator is allowed to throw challenge,source,source,source,source
2377,DeviceMetaData_isLockScreenSolved,is lock screen solved from device meta data returns whether the lock screen was solved by user prior to starting the account transfer flo. Return type is boolean and no argument. contains meta information like source device auth info and whether an authenticator is allowed to throw challenge,source,source,source,source
2378,BeaconStateResponse_getBeaconState,get beacon state from beacon state response returns the current nearby beacon state. Return type is Beacon State and no argument. result from get beacon state,source,source,source,source
2379,DetectedActivityResponse_getActivityRecognitionResult,get activity recognition result from detected activity response returns the current detected activit. Return type is Activity Recognition Result and no argument. result from get detected activity,source,source,source,source
2380,HeadphoneStateResponse_getHeadphoneState,get headphone state from headphone state response returns the current headphone stat. Return type is Headphone State and no argument. result from get headphone state,source,source,source,source
2381,LocationResponse_getLocation,get location from location response returns the current lat/lng location of the devic. Return type is Location and no argument. result from get location,source,source,source,source
2382,TimeIntervalsResponse_getTimeIntervals,get time intervals from time intervals response returns the attributes corresponding to the current day at the device's current local. Return type is Time Intervals and no argument. result from get time intervals,source,source,source,source
2383,BeaconStateResult_getBeaconState,get beacon state from beacon state result returns the current nearby beacon state. Return type is Beacon State and no argument. result from get beacon state,source,source,source,source
2384,DetectedActivityResult_getActivityRecognitionResult,get activity recognition result from detected activity result returns the current detected activit. Return type is Activity Recognition Result and no argument. result from get detected activity,source,source,source,source
2385,HeadphoneStateResult_getHeadphoneState,get headphone state from headphone state result returns the current headphone stat. Return type is Headphone State and no argument. result from get headphone state,source,source,source,source
2386,LocationResult_getLocation,get location from location result returns the current lat/lng location of the devic. Return type is Location and no argument. result from get location,source,source,source,source
2387,TimeIntervalsResult_getTimeIntervals,get time intervals from time intervals result returns the attributes corresponding to the current day at the device's current local. Return type is Time Intervals and no argument. result from get time intervals,source,source,source,source
2388,AchievementBuffer_get,get from achievement buffer . data structure providing access to a list of achievements,source,source,source,source
2389,AchievementEntity_equals,equals from achievement entity . data object representing a set of achievement data,neither,neither,neither,neither
2390,AchievementEntity_freeze,freeze from achievement entity . data object representing a set of achievement data,neither,neither,neither,sink
2391,AchievementEntity_getAchievementId,get achievement id from achievement entity retrieves the id of this achievemen. Return type is String and no argument. data object representing a set of achievement data,source,source,source,source
2392,AchievementEntity_getCurrentSteps,get current steps from achievement entity retrieves the number of steps this user has gone toward unlocking this achievement; only applicable for t y p e_ i n c r e m e n t a l achievement type. Return type is int and no argument. data object representing a set of achievement data,source,source,source,source
2393,AchievementEntity_getDescription,get description from achievement entity retrieves the description for this achievemen. Return type is String and no argument. data object representing a set of achievement data,source,source,source,source
2394,AchievementEntity_getDescription,get description from achievement entity loads the achievement description into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of achievement data,source,source,source,source
2395,AchievementEntity_getFormattedCurrentSteps,get formatted current steps from achievement entity retrieves the number of steps this user has gone toward unlocking this achievemen. Return type is String and no argument. data object representing a set of achievement data,source,source,source,source
2396,AchievementEntity_getFormattedCurrentSteps,get formatted current steps from achievement entity retrieves the number of steps this user has gone toward unlocking this achievemen. Return type is void and parameters are char array buffer. data object representing a set of achievement data,source,source,source,source
2397,AchievementEntity_getFormattedTotalSteps,get formatted total steps from achievement entity loads the total number of steps necessary to unlock this achievemen. Return type is void and parameters are char array buffer. data object representing a set of achievement data,source,source,source,source
2398,AchievementEntity_getFormattedTotalSteps,"get formatted total steps from achievement entity retrieves the total number of steps necessary to unlock this achievement, formatted for the user's locale; only applicable for t y p e_ i n c r e m e n t a l achievement type. Return type is String and no argument. data object representing a set of achievement data",source,source,source,source
2399,AchievementEntity_getLastUpdatedTimestamp,get last updated timestamp from achievement entity retrieves the timestam. Return type is long and no argument. data object representing a set of achievement data,source,source,source,source
2400,AchievementEntity_getName,get name from achievement entity loads the achievement name into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of achievement data,source,source,source,source
2401,AchievementEntity_getName,get name from achievement entity retrieves the name of this achievemen. Return type is String and no argument. data object representing a set of achievement data,source,source,source,source
2402,AchievementEntity_getPlayer,get player from achievement entity retrieves the player information associated with this achievemen. Return type is Player and no argument. data object representing a set of achievement data,source,source,source,source
2403,AchievementEntity_getRevealedImageUri,get revealed image uri from achievement entity retrieves a uri that can be used to load the achievement's revealed image ico. Return type is Uri and no argument. data object representing a set of achievement data,source,source,source,source
2404,AchievementEntity_getRevealedImageUrl,get revealed image url from achievement entity . data object representing a set of achievement data,source,source,source,source
2405,AchievementEntity_getState,get state from achievement entity returns the achievement achievement state of the achievemen. Return type is int and no argument. data object representing a set of achievement data,source,source,source,source
2406,AchievementEntity_getTotalSteps,get total steps from achievement entity retrieves the total number of steps necessary to unlock this achievement; only applicable for t y p e_ i n c r e m e n t a l achievement type. Return type is int and no argument. data object representing a set of achievement data,source,source,source,source
2407,AchievementEntity_getType,get type from achievement entity returns the achievement achievement type of this achievemen. Return type is int and no argument. data object representing a set of achievement data,source,source,source,source
2408,AchievementEntity_getUnlockedImageUri,get unlocked image uri from achievement entity retrieves a uri that can be used to load the achievement's unlocked image ico. Return type is Uri and no argument. data object representing a set of achievement data,source,source,source,source
2409,AchievementEntity_getUnlockedImageUrl,get unlocked image url from achievement entity . data object representing a set of achievement data,source,source,source,source
2410,AchievementEntity_getXpValue,get xp value from achievement entity retrieves the xp value of this achievemen. Return type is long and no argument. data object representing a set of achievement data,source,source,source,source
2411,AchievementEntity_hashCode,hash code from achievement entity . data object representing a set of achievement data,neither,neither,neither,source
2412,AchievementEntity_isDataValid,is data valid from achievement entity . data object representing a set of achievement data,neither,neither,neither,sink
2413,AchievementEntity_toString,to string from achievement entity . data object representing a set of achievement data,sink,neither,neither,sink
2414,AchievementEntity_writeToParcel,write to parcel from achievement entity . data object representing a set of achievement data,sink,sink,sink,sink
2415,Achievement_getAchievementId,get achievement id from achievement retrieves the id of this achievemen. Return type is String and no argument. data interface for retrieving achievement information,source,source,source,source
2416,Achievement_getCurrentSteps,get current steps from achievement retrieves the number of steps this user has gone toward unlocking this achievement; only applicable for t y p e_ i n c r e m e n t a l achievement type. Return type is  int and no argument. data interface for retrieving achievement information,source,source,source,source
2417,Achievement_getDescription,get description from achievement retrieves the description for this achievemen. Return type is String and no argument. data interface for retrieving achievement information,source,source,source,source
2418,Achievement_getDescription,get description from achievement loads the achievement description into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving achievement information,source,source,source,source
2419,Achievement_getFormattedCurrentSteps,get formatted current steps from achievement retrieves the number of steps this user has gone toward unlocking this achievemen. Return type is  void and parameters are char array buffer. data interface for retrieving achievement information,source,source,source,source
2420,Achievement_getFormattedCurrentSteps,get formatted current steps from achievement retrieves the number of steps this user has gone toward unlocking this achievemen. Return type is String and no argument. data interface for retrieving achievement information,source,source,source,source
2421,Achievement_getFormattedTotalSteps,get formatted total steps from achievement loads the total number of steps necessary to unlock this achievemen. Return type is  void and parameters are char array buffer. data interface for retrieving achievement information,source,source,source,source
2422,Achievement_getFormattedTotalSteps,"get formatted total steps from achievement retrieves the total number of steps necessary to unlock this achievement, formatted for the user's locale; only applicable for t y p e_ i n c r e m e n t a l achievement type. Return type is String and no argument. data interface for retrieving achievement information",source,source,source,source
2423,Achievement_getLastUpdatedTimestamp,get last updated timestamp from achievement retrieves the timestam. Return type is  long and no argument. data interface for retrieving achievement information,source,source,source,source
2424,Achievement_getName,get name from achievement loads the achievement name into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving achievement information,source,source,source,source
2425,Achievement_getName,get name from achievement retrieves the name of this achievemen. Return type is String and no argument. data interface for retrieving achievement information,source,source,source,source
2426,Achievement_getPlayer,get player from achievement retrieves the player information associated with this achievemen. Return type is Player and no argument. data interface for retrieving achievement information,source,source,source,source
2427,Achievement_getRevealedImageUri,get revealed image uri from achievement retrieves a uri that can be used to load the achievement's revealed image ico. Return type is Uri and no argument. data interface for retrieving achievement information,source,source,source,source
2428,Achievement_getState,get state from achievement returns the achievement achievement state of the achievemen. Return type is  int and no argument. data interface for retrieving achievement information,source,source,source,source
2429,Achievement_getTotalSteps,get total steps from achievement retrieves the total number of steps necessary to unlock this achievement; only applicable for t y p e_ i n c r e m e n t a l achievement type. Return type is  int and no argument. data interface for retrieving achievement information,source,source,source,source
2430,Achievement_getType,get type from achievement returns the achievement achievement type of this achievemen. Return type is  int and no argument. data interface for retrieving achievement information,source,source,source,source
2431,Achievement_getUnlockedImageUri,get unlocked image uri from achievement retrieves a uri that can be used to load the achievement's unlocked image ico. Return type is Uri and no argument. data interface for retrieving achievement information,source,source,source,source
2432,Achievement_getXpValue,get xp value from achievement retrieves the xp value of this achievemen. Return type is  long and no argument. data interface for retrieving achievement information,source,source,source,source
2433,Achievements_getAchievementsIntent,get achievements intent from achievements gets an intent to show the list of achievements for a gam. Return type is Intent and parameters are google api client. this interface is deprecated  use achievements client instea,source,source,source,source
2434,Achievements_increment,increment from achievements increments an achievement by the given number of step. Return type is  void and parameters are google api client string int. this interface is deprecated  use achievements client instea,neither,neither,neither,sink
2435,Achievements_incrementImmediate,increment immediate from achievements increments an achievement by the given number of step. Return type is Pending Result and parameters are google api client string int. this interface is deprecated  use achievements client instea,neither,neither,neither,sink
2436,Achievements_load,load from achievements asynchronously load achievement data for the currently signed in playe. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use achievements client instea,neither,neither,source,sink
2437,Achievements_reveal,reveal from achievements reveal a hidden achievement to the currently signed in playe. Return type is  void and parameters are google api client string. this interface is deprecated  use achievements client instea,neither,neither,neither,source
2438,Achievements_revealImmediate,reveal immediate from achievements reveal a hidden achievement to the currently signed in playe. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use achievements client instea,neither,neither,neither,sink
2439,Achievements_setSteps,set steps from achievements set an achievement to have at least the given number of steps complete. Return type is  void and parameters are google api client string int. this interface is deprecated  use achievements client instea,sink,sink,sink,sink
2440,Achievements_setStepsImmediate,set steps immediate from achievements set an achievement to have at least the given number of steps complete. Return type is Pending Result and parameters are google api client string int. this interface is deprecated  use achievements client instea,sink,sink,sink,sink
2441,Achievements_unlock,unlock from achievements unlock an achievement for the currently signed in playe. Return type is  void and parameters are google api client string. this interface is deprecated  use achievements client instea,neither,neither,neither,source
2442,Achievements_unlockImmediate,unlock immediate from achievements unlock an achievement for the currently signed in playe. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use achievements client instea,neither,neither,neither,source
2443,Achievements.LoadAchievementsResult_getAchievements,get achievements from achievements load achievements result . this interface is deprecated  achievement buffer is returned directly in the achievements client,source,source,source,source
2444,Achievements.UpdateAchievementResult_getAchievementId,get achievement id from achievements update achievement result . this interface is deprecated  is not used in the achievements client,source,source,source,source
2445,Achievements.LoadAchievementsResult_getAchievements,get achievements from achievements load achievements result . this interface is deprecated  achievement buffer is returned directly in the achievements client,source,source,source,source
2446,Achievements.UpdateAchievementResult_getAchievementId,get achievement id from achievements update achievement result . this interface is deprecated  is not used in the achievements client,source,source,source,source
2447,DailySummariesConfig_equals,equals from daily summaries config . configuration of per day summary of exposures,neither,neither,neither,neither
2448,DailySummariesConfig_getAttenuationBucketThresholdDb,get attenuation bucket threshold db from daily summaries config thresholds defining the ble attenuation buckets edge. Return type is List and no argument. configuration of per day summary of exposures,source,source,source,neither
2449,DailySummariesConfig_getAttenuationBucketWeights,get attenuation bucket weights from daily summaries config scoring weights to associate with scan instances depending on the attenuation bucket in which their typical attenuation db fall. Return type is List and no argument. configuration of per day summary of exposures,source,source,source,neither
2450,DailySummariesConfig_getDaysSinceExposureThreshold,get days since exposure threshold from daily summaries config day summaries older than this are not returne. Return type is int and no argument. configuration of per day summary of exposures,source,source,source,neither
2451,DailySummariesConfig_getInfectiousnessWeights,get infectiousness weights from daily summaries config scoring weights to associate with exposures with different infectiousnes. Return type is Map and no argument. configuration of per day summary of exposures,source,source,source,neither
2452,DailySummariesConfig_getMinimumWindowScore,get minimum window score from daily summaries config minimum score that exposure windows must reach in order to be included in the daily summary exposure summary dat. Return type is double and no argument. configuration of per day summary of exposures,source,source,source,source
2453,DailySummariesConfig_getReportTypeWeights,get report type weights from daily summaries config scoring weights to associate with exposures with different report type. Return type is Map and no argument. configuration of per day summary of exposures,source,neither,source,neither
2454,DailySummariesConfig_hashCode,hash code from daily summaries config . configuration of per day summary of exposures,neither,neither,neither,neither
2455,DailySummariesConfig_toString,to string from daily summaries config . configuration of per day summary of exposures,sink,sink,sink,sink
2456,DailySummariesConfig_writeToParcel,write to parcel from daily summaries config . configuration of per day summary of exposures,sink,sink,sink,sink
2457,DailySummariesConfig.DailySummariesConfigBuilder_build,build from daily summaries config daily summaries config builder builds an instance of daily summaries confi. Return type is Daily Summaries Config and no argument. a builder for daily summaries config,neither,neither,neither,neither
2458,DailySummariesConfig.DailySummariesConfigBuilder_setAttenuationBuckets,set attenuation buckets from daily summaries config daily summaries config builder see daily summaries configget attenuation bucket threshold. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are list list. a builder for daily summaries config,sink,sink,sink,sink
2459,DailySummariesConfig.DailySummariesConfigBuilder_setDaysSinceExposureThreshold,set days since exposure threshold from daily summaries config daily summaries config builder see daily summaries configget days since exposure thresho. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are int. a builder for daily summaries config,sink,sink,sink,sink
2460,DailySummariesConfig.DailySummariesConfigBuilder_setInfectiousnessWeight,set infectiousness weight from daily summaries config daily summaries config builder see daily summaries configget infectiousness weigh. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are int double. a builder for daily summaries config,sink,sink,sink,sink
2461,DailySummariesConfig.DailySummariesConfigBuilder_setMinimumWindowScore,set minimum window score from daily summaries config daily summaries config builder see daily summaries configget minimum window sco. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are double. a builder for daily summaries config,sink,sink,sink,sink
2462,DailySummariesConfig.DailySummariesConfigBuilder_setReportTypeWeight,set report type weight from daily summaries config daily summaries config builder see daily summaries configget report type weigh. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are int double. a builder for daily summaries config,sink,sink,sink,sink
2463,DailySummary_equals,equals from daily summary . daily exposure summary to pass to client side,neither,neither,neither,neither
2464,DailySummary_getDaysSinceEpoch,get days since epoch from daily summary returns days since epoch of the exposure windows that went into this summar. Return type is int and no argument. daily exposure summary to pass to client side,source,source,source,neither
2465,DailySummary_getSummaryData,get summary data from daily summary summary of all exposures on this da. Return type is Daily Summary. Exposure Summary Data and no argument. daily exposure summary to pass to client side,source,source,source,neither
2466,DailySummary_getSummaryDataForReportType,get summary data for report type from daily summary summary of all exposures on this day of a specific diagnosis report typ. Return type is Daily Summary. Exposure Summary Data and parameters are int. daily exposure summary to pass to client side,source,source,source,neither
2467,DailySummary_hashCode,hash code from daily summary . daily exposure summary to pass to client side,sink,neither,neither,neither
2468,DailySummary_toString,to string from daily summary . daily exposure summary to pass to client side,sink,sink,sink,sink
2469,DailySummary_writeToParcel,write to parcel from daily summary . daily exposure summary to pass to client side,sink,sink,sink,sink
2470,DailySummary.ExposureSummaryData_equals,equals from daily summary exposure summary data . stores different scores for specific report type,neither,neither,neither,sink
2471,DailySummary.ExposureSummaryData_getMaximumScore,get maximum score from daily summary exposure summary data highest score of all exposure windows aggregated into this summar. Return type is double and no argument. stores different scores for specific report type,source,source,source,sink
2472,DailySummary.ExposureSummaryData_getScoreSum,get score sum from daily summary exposure summary data sum of scores for all exposure windows aggregated into this summar. Return type is double and no argument. stores different scores for specific report type,source,source,source,source
2473,DailySummary.ExposureSummaryData_getWeightedDurationSum,get weighted duration sum from daily summary exposure summary data sum of weighted durations for all exposure windows aggregated into this summar. Return type is double and no argument. stores different scores for specific report type,source,source,source,sink
2474,DailySummary.ExposureSummaryData_hashCode,hash code from daily summary exposure summary data . stores different scores for specific report type,sink,sink,neither,sink
2475,DailySummary.ExposureSummaryData_toString,to string from daily summary exposure summary data . stores different scores for specific report type,sink,sink,sink,sink
2476,DailySummary.ExposureSummaryData_writeToParcel,write to parcel from daily summary exposure summary data . stores different scores for specific report type,sink,sink,sink,sink
2477,DiagnosisKeysDataMapping_equals,equals from diagnosis keys data mapping . mappings from diagnosis keys data to concepts returned by the api,neither,neither,neither,neither
2478,DiagnosisKeysDataMapping_getDaysSinceOnsetToInfectiousness,get days since onset to infectiousness from diagnosis keys data mapping mapping from diagnosis keydays since onset of symptoms to infectiousnes. Return type is Map and no argument. mappings from diagnosis keys data to concepts returned by the api,source,source,source,source
2479,DiagnosisKeysDataMapping_getInfectiousnessWhenDaysSinceOnsetMissing,get infectiousness when days since onset missing from diagnosis keys data mapping infectiousness of t e ks for which onset of symptoms is not se. Return type is int and no argument. mappings from diagnosis keys data to concepts returned by the api,source,source,source,source
2480,DiagnosisKeysDataMapping_getReportTypeWhenMissing,get report type when missing from diagnosis keys data mapping report type to default to when a tek has no report type se. Return type is int and no argument. mappings from diagnosis keys data to concepts returned by the api,source,source,source,source
2481,DiagnosisKeysDataMapping_hashCode,hash code from diagnosis keys data mapping . mappings from diagnosis keys data to concepts returned by the api,neither,neither,neither,neither
2482,DiagnosisKeysDataMapping_toString,to string from diagnosis keys data mapping . mappings from diagnosis keys data to concepts returned by the api,neither,neither,neither,neither
2483,DiagnosisKeysDataMapping_writeToParcel,write to parcel from diagnosis keys data mapping . mappings from diagnosis keys data to concepts returned by the api,sink,sink,sink,sink
2484,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_build,build from diagnosis keys data mapping diagnosis keys data mapping builder builds an instance of diagnosis keys data mappin. Return type is Diagnosis Keys Data Mapping and no argument. a builder for diagnosis keys data mapping,neither,neither,neither,neither
2485,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_setDaysSinceOnsetToInfectiousness,set days since onset to infectiousness from diagnosis keys data mapping diagnosis keys data mapping builder sets the days since onset to infectiousnes. Return type is Diagnosis Keys Data Mapping. Diagnosis Keys Data Mapping Builder and parameters are map< integer integer>. a builder for diagnosis keys data mapping,sink,sink,neither,neither
2486,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_setInfectiousnessWhenDaysSinceOnsetMissing,set infectiousness when days since onset missing from diagnosis keys data mapping diagnosis keys data mapping builder sets the infectiousness when days since onset missin. Return type is Diagnosis Keys Data Mapping. Diagnosis Keys Data Mapping Builder and parameters are int. a builder for diagnosis keys data mapping,sink,sink,sink,sink
2487,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_setReportTypeWhenMissing,set report type when missing from diagnosis keys data mapping diagnosis keys data mapping builder sets the report type when missin. Return type is Diagnosis Keys Data Mapping. Diagnosis Keys Data Mapping Builder and parameters are int. a builder for diagnosis keys data mapping,sink,sink,sink,neither
2488,ExposureConfiguration_equals,equals from exposure configuration . this class is deprecated  no longer used with exposure windows api,neither,neither,neither,sink
2489,ExposureConfiguration_getAttenuationScores,get attenuation scores from exposure configuration scores for attenuation bucket. Return type is int[] and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2490,ExposureConfiguration_getAttenuationWeight,get attenuation weight from exposure configuration weight to apply to the attenuation scor. Return type is int and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2491,ExposureConfiguration_getDaysSinceLastExposureScores,get days since last exposure scores from exposure configuration scores for days since last exposure bucket. Return type is int[] and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2492,ExposureConfiguration_getDaysSinceLastExposureWeight,get days since last exposure weight from exposure configuration weight to apply to the days since last exposure scor. Return type is int and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2493,ExposureConfiguration_getDurationAtAttenuationThresholds,get duration at attenuation thresholds from exposure configuration attenuation thresholds to apply when calculating duration at attenuatio. Return type is int[] and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2494,ExposureConfiguration_getDurationScores,get duration scores from exposure configuration scores for duration bucket. Return type is int[] and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2495,ExposureConfiguration_getDurationWeight,get duration weight from exposure configuration weight to apply to the duration scor. Return type is int and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,sink
2496,ExposureConfiguration_getMinimumRiskScore,get minimum risk score from exposure configuration minimum risk scor. Return type is int and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2497,ExposureConfiguration_getTransmissionRiskScores,get transmission risk scores from exposure configuration scores for transmission risk bucket. Return type is int[] and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2498,ExposureConfiguration_getTransmissionRiskWeight,get transmission risk weight from exposure configuration weight to apply to the transmission risk scor. Return type is int and no argument. this class is deprecated  no longer used with exposure windows api,source,source,source,source
2499,ExposureConfiguration_hashCode,hash code from exposure configuration . this class is deprecated  no longer used with exposure windows api,neither,neither,neither,sink
2500,ExposureConfiguration_toString,to string from exposure configuration . this class is deprecated  no longer used with exposure windows api,sink,sink,sink,sink
2501,ExposureConfiguration_writeToParcel,write to parcel from exposure configuration . this class is deprecated  no longer used with exposure windows api,sink,sink,sink,sink
2502,ExposureConfiguration.ExposureConfigurationBuilder_build,build from exposure configuration exposure configuration builder builds an instance of exposure configuratio. Return type is Exposure Configuration and no argument. a builder for exposure configuration,sink,sink,neither,sink
2503,ExposureConfiguration.ExposureConfigurationBuilder_setAttenuationScores,set attenuation scores from exposure configuration exposure configuration builder sets the attenuation score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2504,ExposureConfiguration.ExposureConfigurationBuilder_setAttenuationWeight,set attenuation weight from exposure configuration exposure configuration builder sets the attenuation weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2505,ExposureConfiguration.ExposureConfigurationBuilder_setDaysSinceLastExposureScores,set days since last exposure scores from exposure configuration exposure configuration builder sets the days since last exposure score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2506,ExposureConfiguration.ExposureConfigurationBuilder_setDaysSinceLastExposureWeight,set days since last exposure weight from exposure configuration exposure configuration builder sets the days since last exposure weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2507,ExposureConfiguration.ExposureConfigurationBuilder_setDurationAtAttenuationThresholds,set duration at attenuation thresholds from exposure configuration exposure configuration builder sets the duration at attenuation threshold. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2508,ExposureConfiguration.ExposureConfigurationBuilder_setDurationScores,set duration scores from exposure configuration exposure configuration builder sets the duration score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2509,ExposureConfiguration.ExposureConfigurationBuilder_setDurationWeight,set duration weight from exposure configuration exposure configuration builder sets the duration weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2510,ExposureConfiguration.ExposureConfigurationBuilder_setMinimumRiskScore,set minimum risk score from exposure configuration exposure configuration builder sets the minimum risk scor. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2511,ExposureConfiguration.ExposureConfigurationBuilder_setTransmissionRiskScores,set transmission risk scores from exposure configuration exposure configuration builder sets the transmission risk score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2512,ExposureConfiguration.ExposureConfigurationBuilder_setTransmissionRiskWeight,set transmission risk weight from exposure configuration exposure configuration builder sets the transmission risk weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2513,ExposureInformation_equals,equals from exposure information . this class is deprecated  no longer used with exposure window api,neither,neither,neither,sink
2514,ExposureInformation_getAttenuationDurationsInMinutes,get attenuation durations in minutes from exposure information array of durations in minutes at certain radio signal attenuation. Return type is int[] and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,neither
2515,ExposureInformation_getAttenuationValue,get attenuation value from exposure information the time-weighted signal strength attenuation value which goes into get total risk sco. Return type is int and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,source
2516,ExposureInformation_getDateMillisSinceEpoch,"get date millis since epoch from exposure information day-level resolution that the exposure occurred, in milliseconds since epoc. Return type is long and no argument. this class is deprecated  no longer used with exposure window api",source,source,source,source
2517,ExposureInformation_getDurationMinutes,"get duration minutes from exposure information length of exposure in 5 minute increments, with a 30 minute maximu. Return type is int and no argument. this class is deprecated  no longer used with exposure window api",source,source,source,source
2518,ExposureInformation_getTotalRiskScore,get total risk score from exposure information the total risk calculated for the exposur. Return type is int and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,source
2519,ExposureInformation_getTransmissionRiskLevel,get transmission risk level from exposure information the transmission risk associated with the matched diagnosis ke. Return type is int and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,source
2520,ExposureInformation_hashCode,hash code from exposure information . this class is deprecated  no longer used with exposure window api,source,source,neither,source
2521,ExposureInformation_toString,to string from exposure information . this class is deprecated  no longer used with exposure window api,sink,source,neither,sink
2522,ExposureInformation_writeToParcel,write to parcel from exposure information . this class is deprecated  no longer used with exposure window api,sink,sink,sink,sink
2523,ExposureInformation.ExposureInformationBuilder_build,build from exposure information exposure information builder builds an instance of exposure informatio. Return type is Exposure Information and no argument. a builder for exposure information,neither,neither,neither,neither
2524,ExposureInformation.ExposureInformationBuilder_setAttenuationDurations,set attenuation durations from exposure information exposure information builder sets the attenuation duration. Return type is Exposure Information. Exposure Information Builder and parameters are int[]. a builder for exposure information,sink,sink,sink,sink
2525,ExposureInformation.ExposureInformationBuilder_setAttenuationValue,set attenuation value from exposure information exposure information builder sets the attenuation valu. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2526,ExposureInformation.ExposureInformationBuilder_setDateMillisSinceEpoch,set date millis since epoch from exposure information exposure information builder sets the date in milliseconds since epoc. Return type is Exposure Information. Exposure Information Builder and parameters are long. a builder for exposure information,sink,sink,sink,sink
2527,ExposureInformation.ExposureInformationBuilder_setDurationMinutes,set duration minutes from exposure information exposure information builder sets the duration in minute. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2528,ExposureInformation.ExposureInformationBuilder_setTotalRiskScore,set total risk score from exposure information exposure information builder sets the total risk scor. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2529,ExposureInformation.ExposureInformationBuilder_setTransmissionRiskLevel,set transmission risk level from exposure information exposure information builder sets the transmission risk leve. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2530,ExposureNotificationStatusCodes_getStatusCodeString,get status code string from exposure notification status codes returns an untranslated debu. Return type is String and parameters are int. status codes for nearby contact tracing results,source,source,source,source
2531,ExposureSummary_equals,equals from exposure summary . this class is deprecated  no longer used with exposure window api,neither,neither,neither,sink
2532,ExposureSummary_getAttenuationDurationsInMinutes,get attenuation durations in minutes from exposure summary array of durations in minutes at certain radio signal attenuation. Return type is int[] and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,neither
2533,ExposureSummary_getDaysSinceLastExposure,get days since last exposure from exposure summary days since last match to a diagnosis key from the serve. Return type is int and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,source
2534,ExposureSummary_getMatchedKeyCount,get matched key count from exposure summary number of matched diagnosis key. Return type is int and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,source
2535,ExposureSummary_getMaximumRiskScore,"get maximum risk score from exposure summary the highest risk score of all exposure incidents, it will be a value 0-409. Return type is int and no argument. this class is deprecated  no longer used with exposure window api",source,source,source,source
2536,ExposureSummary_getSummationRiskScore,get summation risk score from exposure summary the summation of risk scores of all exposure incident. Return type is int and no argument. this class is deprecated  no longer used with exposure window api,source,source,source,source
2537,ExposureSummary_hashCode,hash code from exposure summary . this class is deprecated  no longer used with exposure window api,neither,neither,neither,sink
2538,ExposureSummary_toString,to string from exposure summary . this class is deprecated  no longer used with exposure window api,sink,sink,neither,sink
2539,ExposureSummary_writeToParcel,write to parcel from exposure summary . this class is deprecated  no longer used with exposure window api,sink,sink,sink,sink
2540,ExposureSummary.ExposureSummaryBuilder_build,build from exposure summary exposure summary builder builds an instance of exposure summar. Return type is Exposure Summary and no argument. a builder for exposure summary,neither,neither,neither,neither
2541,ExposureSummary.ExposureSummaryBuilder_setAttenuationDurations,set attenuation durations from exposure summary exposure summary builder sets the attenuation duration. Return type is Exposure Summary. Exposure Summary Builder and parameters are int[]. a builder for exposure summary,sink,sink,sink,sink
2542,ExposureSummary.ExposureSummaryBuilder_setDaysSinceLastExposure,set days since last exposure from exposure summary exposure summary builder sets the days since last exposur. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2543,ExposureSummary.ExposureSummaryBuilder_setMatchedKeyCount,set matched key count from exposure summary exposure summary builder sets the matched key coun. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2544,ExposureSummary.ExposureSummaryBuilder_setMaximumRiskScore,set maximum risk score from exposure summary exposure summary builder sets the maximum risk scor. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2545,ExposureSummary.ExposureSummaryBuilder_setSummationRiskScore,set summation risk score from exposure summary exposure summary builder sets the summation risk scor. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2546,ExposureWindow_equals,equals from exposure window . a duration of up to 30 minutes during which beacons from a tek were observed,neither,neither,neither,sink
2547,ExposureWindow_getCalibrationConfidence,get calibration confidence from exposure window confidence of the ble transmit power calibration of the transmitting devic. Return type is int and no argument. a duration of up to 30 minutes during which beacons from a tek were observed,source,source,source,source
2548,ExposureWindow_getDateMillisSinceEpoch,get date millis since epoch from exposure window returns the epoch time in milliseconds the exposure occurre. Return type is long and no argument. a duration of up to 30 minutes during which beacons from a tek were observed,source,source,source,source
2549,ExposureWindow_getInfectiousness,"get infectiousness from exposure window infectiousness of the tek that caused this exposure, computed from the days since onset of symptoms using the days to infectiousness mappin. Return type is int and no argument. a duration of up to 30 minutes during which beacons from a tek were observed",source,source,source,source
2550,ExposureWindow_getReportType,get report type from exposure window report type of the tek that caused this exposure t e ks with no report type set are returned with report type= c o n f i r m e d_ t e s. Return type is int and no argument. a duration of up to 30 minutes during which beacons from a tek were observed,source,source,source,source
2551,ExposureWindow_getScanInstances,"get scan instances from exposure window sightings of this exposure window, time-ordere. Return type is List and no argument. a duration of up to 30 minutes during which beacons from a tek were observed",source,source,source,source
2552,ExposureWindow_hashCode,hash code from exposure window . a duration of up to 30 minutes during which beacons from a tek were observed,neither,neither,neither,neither
2553,ExposureWindow_toString,to string from exposure window . a duration of up to 30 minutes during which beacons from a tek were observed,neither,neither,neither,sink
2554,ExposureWindow_writeToParcel,write to parcel from exposure window . a duration of up to 30 minutes during which beacons from a tek were observed,sink,sink,sink,sink
2555,ExposureWindow.Builder_build,build from exposure window builder builds an instance of exposure windo. Return type is Exposure Window and no argument. builder for exposure window,neither,neither,neither,neither
2556,ExposureWindow.Builder_setCalibrationConfidence,set calibration confidence from exposure window builder sets the calibration confidenc. Return type is Exposure Window. Builder and parameters are int. builder for exposure window,sink,sink,sink,sink
2557,ExposureWindow.Builder_setDateMillisSinceEpoch,set date millis since epoch from exposure window builder sets the date in milliseconds since epoc. Return type is Exposure Window. Builder and parameters are long. builder for exposure window,sink,sink,sink,sink
2558,ExposureWindow.Builder_setDeviceName,set device name from exposure window builder . builder for exposure window,sink,sink,sink,sink
2559,ExposureWindow.Builder_setInfectiousness,set infectiousness from exposure window builder sets the infectiousnes. Return type is Exposure Window. Builder and parameters are int. builder for exposure window,sink,sink,sink,sink
2560,ExposureWindow.Builder_setReportType,set report type from exposure window builder sets the report typ. Return type is Exposure Window. Builder and parameters are int. builder for exposure window,sink,sink,sink,sink
2561,ExposureWindow.Builder_setScanInstances,set scan instances from exposure window builder sets the scan instance. Return type is Exposure Window. Builder and parameters are list. builder for exposure window,sink,sink,sink,sink
2562,PackageConfiguration_equals,equals from package configuration . holds configuration values that can be passed onto the client app after it has finished installing via exposure notification client get package configuration,neither,neither,source,neither
2563,PackageConfiguration_getValues,get values from package configuration returns a bundle containing all configuration option. Return type is Bundle and no argument. holds configuration values that can be passed onto the client app after it has finished installing via exposure notification client get package configuration,source,source,source,source
2564,PackageConfiguration_hashCode,hash code from package configuration . holds configuration values that can be passed onto the client app after it has finished installing via exposure notification client get package configuration,source,source,source,source
2565,PackageConfiguration_toString,to string from package configuration . holds configuration values that can be passed onto the client app after it has finished installing via exposure notification client get package configuration,sink,source,sink,sink
2566,PackageConfiguration_writeToParcel,write to parcel from package configuration . holds configuration values that can be passed onto the client app after it has finished installing via exposure notification client get package configuration,sink,sink,sink,sink
2567,PackageConfiguration.PackageConfigurationBuilder_build,build from package configuration package configuration builder builds a package configuratio. Return type is Package Configuration and no argument. a builder for package configuration,neither,neither,neither,neither
2568,PackageConfiguration.PackageConfigurationBuilder_setValues,set values from package configuration package configuration builder sets a bundle containing configuration option. Return type is Package Configuration. Package Configuration Builder and parameters are bundle. a builder for package configuration,sink,sink,sink,sink
2569,ScanInstance_equals,equals from scan instance . information about the sighting of a tek within a ble scan,neither,neither,neither,neither
2570,ScanInstance_getMinAttenuationDb,"get min attenuation db from scan instance minimum attenuation of all of this t e k's beacons received during the scan, in d. Return type is int and no argument. information about the sighting of a tek within a ble scan",source,source,source,source
2571,ScanInstance_getSecondsSinceLastScan,"get seconds since last scan from scan instance seconds elapsed since the previous scan, typically used as a weigh. Return type is int and no argument. information about the sighting of a tek within a ble scan",source,source,source,neither
2572,ScanInstance_getTypicalAttenuationDb,"get typical attenuation db from scan instance aggregation of the attenuations of all of this t e k's beacons received during the scan, in d. Return type is int and no argument. information about the sighting of a tek within a ble scan",source,source,source,neither
2573,ScanInstance_hashCode,hash code from scan instance . information about the sighting of a tek within a ble scan,source,source,neither,neither
2574,ScanInstance_toString,to string from scan instance . information about the sighting of a tek within a ble scan,sink,neither,neither,sink
2575,ScanInstance_writeToParcel,write to parcel from scan instance . information about the sighting of a tek within a ble scan,sink,sink,sink,sink
2576,ScanInstance.Builder_build,build from scan instance builder builds a new instance of scan instanc. Return type is Scan Instance and no argument. builder for scan instance,neither,neither,neither,neither
2577,ScanInstance.Builder_setMinAttenuationDb,set min attenuation db from scan instance builder sets the minimum attenuation in d. Return type is Scan Instance. Builder and parameters are int. builder for scan instance,sink,sink,sink,sink
2578,ScanInstance.Builder_setSecondsSinceLastScan,set seconds since last scan from scan instance builder sets the seconds since las sca. Return type is Scan Instance. Builder and parameters are int. builder for scan instance,sink,sink,sink,sink
2579,ScanInstance.Builder_setTypicalAttenuationDb,set typical attenuation db from scan instance builder sets the typical attenuation in d. Return type is Scan Instance. Builder and parameters are int. builder for scan instance,sink,sink,sink,sink
2580,TemporaryExposureKey_equals,equals from temporary exposure key . a key generated for advertising over a window of time,neither,neither,neither,neither
2581,TemporaryExposureKey_getDaysSinceOnsetOfSymptoms,get days since onset of symptoms from temporary exposure key number of days elapsed between symptom onset and the key being use. Return type is int and no argument. a key generated for advertising over a window of time,source,source,source,neither
2582,TemporaryExposureKey_getKeyData,get key data from temporary exposure key the randomly generated temporary exposure key informatio. Return type is byte[] and no argument. a key generated for advertising over a window of time,source,source,source,source
2583,TemporaryExposureKey_getReportType,get report type from temporary exposure key type of diagnosis associated with a ke. Return type is int and no argument. a key generated for advertising over a window of time,source,source,source,neither
2584,TemporaryExposureKey_getRollingPeriod,get rolling period from temporary exposure key a number describing how long a key is vali. Return type is int and no argument. a key generated for advertising over a window of time,source,source,source,source
2585,TemporaryExposureKey_getRollingStartIntervalNumber,get rolling start interval number from temporary exposure key a number describing when a key start. Return type is int and no argument. a key generated for advertising over a window of time,source,source,source,source
2586,TemporaryExposureKey_getTransmissionRiskLevel,get transmission risk level from temporary exposure key risk of transmission associated with the person this key came fro. Return type is int and no argument. a key generated for advertising over a window of time,source,source,source,neither
2587,TemporaryExposureKey_hashCode,hash code from temporary exposure key . a key generated for advertising over a window of time,neither,neither,neither,neither
2588,TemporaryExposureKey_toString,to string from temporary exposure key . a key generated for advertising over a window of time,sink,neither,neither,neither
2589,TemporaryExposureKey_writeToParcel,write to parcel from temporary exposure key . a key generated for advertising over a window of time,sink,sink,sink,sink
2590,TemporaryExposureKey.TemporaryExposureKeyBuilder_build,build from temporary exposure key temporary exposure key builder builds an instance of temporary exposure ke. Return type is Temporary Exposure Key and no argument. a builder for temporary exposure key,neither,neither,neither,neither
2591,TemporaryExposureKey.TemporaryExposureKeyBuilder_setDaysSinceOnsetOfSymptoms,set days since onset of symptoms from temporary exposure key temporary exposure key builder sets the number of days since the onset of symptom. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2592,TemporaryExposureKey.TemporaryExposureKeyBuilder_setKeyData,set key data from temporary exposure key temporary exposure key builder sets the temporary exposure key dat. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are byte[]. a builder for temporary exposure key,sink,sink,sink,sink
2593,TemporaryExposureKey.TemporaryExposureKeyBuilder_setReportType,set report type from temporary exposure key temporary exposure key builder sets the key's report typ. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2594,TemporaryExposureKey.TemporaryExposureKeyBuilder_setRollingPeriod,set rolling period from temporary exposure key temporary exposure key builder sets the rolling period which this key is valid fo. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2595,TemporaryExposureKey.TemporaryExposureKeyBuilder_setRollingStartIntervalNumber,set rolling start interval number from temporary exposure key temporary exposure key builder sets the rolling start interval numbe. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2596,TemporaryExposureKey.TemporaryExposureKeyBuilder_setTransmissionRiskLevel,set transmission risk level from temporary exposure key temporary exposure key builder sets the transmission risk leve. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2597,ExposureNotificationClient_deviceSupportsLocationlessScanning,device supports locationless scanning from exposure notification client checks whether the device supports exposure notification ble scanning without requiring location to be enabled firs. Return type is  boolean and no argument. interface for contact tracing a p is,neither,neither,source,neither
2598,ExposureNotificationClient_getCalibrationConfidence,get calibration confidence from exposure notification client gets calibration confidence of the current devic. Return type is Task and no argument. interface for contact tracing a p is,source,source,source,source
2599,ExposureNotificationClient_getDailySummaries,get daily summaries from exposure notification client retrieves the per-day exposure summaries associated with the provided configuratio. Return type is Task> and parameters are daily summaries config. interface for contact tracing a p is,source,source,source,neither
2600,ExposureNotificationClient_getDiagnosisKeysDataMapping,get diagnosis keys data mapping from exposure notification client retrieves the current diagnosis keys data mappin. Return type is Task and no argument. interface for contact tracing a p is,source,source,source,source
2601,ExposureNotificationClient_getExposureInformation,get exposure information from exposure notification client deprecate. Return type is Task> and parameters are string. interface for contact tracing a p is,source,source,source,source
2602,ExposureNotificationClient_getExposureSummary,get exposure summary from exposure notification client deprecate. Return type is Task and parameters are string. interface for contact tracing a p is,source,source,source,source
2603,ExposureNotificationClient_getExposureWindows,get exposure windows from exposure notification client retrieves the list of exposure windows corresponding to the t e ks given to provide diagnosis ke. Return type is Task> and no argument. interface for contact tracing a p is,source,source,source,source
2604,ExposureNotificationClient_getExposureWindows,get exposure windows from exposure notification client deprecate. Return type is Task> and parameters are string. interface for contact tracing a p is,source,source,source,source
2605,ExposureNotificationClient_getPackageConfiguration,get package configuration from exposure notification client retrieves the associated package configuration for the calling packag. Return type is Task and no argument. interface for contact tracing a p is,source,source,source,source
2606,ExposureNotificationClient_getStatus,get status from exposure notification client gets the current exposure notification statu. Return type is Task> and no argument. interface for contact tracing a p is,source,source,source,source
2607,ExposureNotificationClient_getTemporaryExposureKeyHistory,get temporary exposure key history from exposure notification client gets temporary exposure key history to be stored on the serve. Return type is Task> and no argument. interface for contact tracing a p is,source,source,source,source
2608,ExposureNotificationClient_getVersion,get version from exposure notification client gets the current exposure notification versio. Return type is Task and no argument. interface for contact tracing a p is,source,source,source,source
2609,ExposureNotificationClient_isEnabled,is enabled from exposure notification client indicates whether contact tracing is currently running for the requesting ap. Return type is Task and no argument. interface for contact tracing a p is,neither,neither,neither,neither
2610,ExposureNotificationClient_provideDiagnosisKeys,provide diagnosis keys from exposure notification client provides a list of diagnosis key files for exposure checkin. Return type is Task and parameters are list. interface for contact tracing a p is,sink,sink,sink,sink
2611,ExposureNotificationClient_provideDiagnosisKeys,provide diagnosis keys from exposure notification client provides diagnosis key files for exposure checkin. Return type is Task and parameters are diagnosis key file provider. interface for contact tracing a p is,sink,neither,sink,sink
2612,ExposureNotificationClient_provideDiagnosisKeys,provide diagnosis keys from exposure notification client deprecate. Return type is Task and parameters are list exposure configuration string. interface for contact tracing a p is,sink,sink,sink,sink
2613,ExposureNotificationClient_requestPreAuthorizedTemporaryExposureKeyHistory,request pre authorized temporary exposure key history from exposure notification client shows a dialog to the user asking for authorization to get temporary exposure keys in the backgroun. Return type is Task and no argument. interface for contact tracing a p is,source,source,source,source
2614,ExposureNotificationClient_requestPreAuthorizedTemporaryExposureKeyRelease,request pre authorized temporary exposure key release from exposure notification client if consent has previously been requested and granted by the user using request pre authorized temporary exposure key histo. Return type is Task and no argument. interface for contact tracing a p is,neither,neither,neither,source
2615,ExposureNotificationClient_setDiagnosisKeysDataMapping,set diagnosis keys data mapping from exposure notification client sets the diagnosis keys data mapping if it wasn't already changed recentl. Return type is Task and parameters are diagnosis keys data mapping. interface for contact tracing a p is,sink,sink,sink,sink
2616,ExposureNotificationClient_start,start from exposure notification client starts ble broadcasts and scanning based on the defined protoco. Return type is Task and no argument. interface for contact tracing a p is,sink,neither,neither,neither
2617,ExposureNotificationClient_stop,stop from exposure notification client disables advertising and scannin. Return type is Task and no argument. interface for contact tracing a p is,neither,neither,neither,neither
2618,DailySummariesConfig.DailySummariesConfigBuilder_build,build from daily summaries config daily summaries config builder builds an instance of daily summaries confi. Return type is Daily Summaries Config and no argument. a builder for daily summaries config,neither,neither,neither,neither
2619,DailySummariesConfig.DailySummariesConfigBuilder_setAttenuationBuckets,set attenuation buckets from daily summaries config daily summaries config builder see daily summaries configget attenuation bucket threshold. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are list list. a builder for daily summaries config,sink,sink,sink,sink
2620,DailySummariesConfig.DailySummariesConfigBuilder_setDaysSinceExposureThreshold,set days since exposure threshold from daily summaries config daily summaries config builder see daily summaries configget days since exposure thresho. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are int. a builder for daily summaries config,sink,sink,sink,sink
2621,DailySummariesConfig.DailySummariesConfigBuilder_setInfectiousnessWeight,set infectiousness weight from daily summaries config daily summaries config builder see daily summaries configget infectiousness weigh. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are int double. a builder for daily summaries config,sink,sink,sink,sink
2622,DailySummariesConfig.DailySummariesConfigBuilder_setMinimumWindowScore,set minimum window score from daily summaries config daily summaries config builder see daily summaries configget minimum window sco. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are double. a builder for daily summaries config,sink,sink,sink,sink
2623,DailySummariesConfig.DailySummariesConfigBuilder_setReportTypeWeight,set report type weight from daily summaries config daily summaries config builder see daily summaries configget report type weigh. Return type is Daily Summaries Config. Daily Summaries Config Builder and parameters are int double. a builder for daily summaries config,sink,sink,sink,sink
2624,DailySummary.ExposureSummaryData_equals,equals from daily summary exposure summary data . stores different scores for specific report type,neither,neither,neither,sink
2625,DailySummary.ExposureSummaryData_getMaximumScore,get maximum score from daily summary exposure summary data highest score of all exposure windows aggregated into this summar. Return type is double and no argument. stores different scores for specific report type,source,source,source,sink
2626,DailySummary.ExposureSummaryData_getScoreSum,get score sum from daily summary exposure summary data sum of scores for all exposure windows aggregated into this summar. Return type is double and no argument. stores different scores for specific report type,source,source,source,source
2627,DailySummary.ExposureSummaryData_getWeightedDurationSum,get weighted duration sum from daily summary exposure summary data sum of weighted durations for all exposure windows aggregated into this summar. Return type is double and no argument. stores different scores for specific report type,source,source,source,sink
2628,DailySummary.ExposureSummaryData_hashCode,hash code from daily summary exposure summary data . stores different scores for specific report type,sink,sink,neither,sink
2629,DailySummary.ExposureSummaryData_toString,to string from daily summary exposure summary data . stores different scores for specific report type,sink,sink,sink,sink
2630,DailySummary.ExposureSummaryData_writeToParcel,write to parcel from daily summary exposure summary data . stores different scores for specific report type,sink,sink,sink,sink
2631,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_build,build from diagnosis keys data mapping diagnosis keys data mapping builder builds an instance of diagnosis keys data mappin. Return type is Diagnosis Keys Data Mapping and no argument. a builder for diagnosis keys data mapping,neither,neither,neither,neither
2632,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_setDaysSinceOnsetToInfectiousness,set days since onset to infectiousness from diagnosis keys data mapping diagnosis keys data mapping builder sets the days since onset to infectiousnes. Return type is Diagnosis Keys Data Mapping. Diagnosis Keys Data Mapping Builder and parameters are map< integer integer>. a builder for diagnosis keys data mapping,sink,sink,neither,neither
2633,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_setInfectiousnessWhenDaysSinceOnsetMissing,set infectiousness when days since onset missing from diagnosis keys data mapping diagnosis keys data mapping builder sets the infectiousness when days since onset missin. Return type is Diagnosis Keys Data Mapping. Diagnosis Keys Data Mapping Builder and parameters are int. a builder for diagnosis keys data mapping,sink,sink,sink,sink
2634,DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder_setReportTypeWhenMissing,set report type when missing from diagnosis keys data mapping diagnosis keys data mapping builder sets the report type when missin. Return type is Diagnosis Keys Data Mapping. Diagnosis Keys Data Mapping Builder and parameters are int. a builder for diagnosis keys data mapping,sink,sink,sink,neither
2635,ExposureConfiguration.ExposureConfigurationBuilder_build,build from exposure configuration exposure configuration builder builds an instance of exposure configuratio. Return type is Exposure Configuration and no argument. a builder for exposure configuration,sink,sink,neither,sink
2636,ExposureConfiguration.ExposureConfigurationBuilder_setAttenuationScores,set attenuation scores from exposure configuration exposure configuration builder sets the attenuation score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2637,ExposureConfiguration.ExposureConfigurationBuilder_setAttenuationWeight,set attenuation weight from exposure configuration exposure configuration builder sets the attenuation weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2638,ExposureConfiguration.ExposureConfigurationBuilder_setDaysSinceLastExposureScores,set days since last exposure scores from exposure configuration exposure configuration builder sets the days since last exposure score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2639,ExposureConfiguration.ExposureConfigurationBuilder_setDaysSinceLastExposureWeight,set days since last exposure weight from exposure configuration exposure configuration builder sets the days since last exposure weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2640,ExposureConfiguration.ExposureConfigurationBuilder_setDurationAtAttenuationThresholds,set duration at attenuation thresholds from exposure configuration exposure configuration builder sets the duration at attenuation threshold. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2641,ExposureConfiguration.ExposureConfigurationBuilder_setDurationScores,set duration scores from exposure configuration exposure configuration builder sets the duration score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2642,ExposureConfiguration.ExposureConfigurationBuilder_setDurationWeight,set duration weight from exposure configuration exposure configuration builder sets the duration weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2643,ExposureConfiguration.ExposureConfigurationBuilder_setMinimumRiskScore,set minimum risk score from exposure configuration exposure configuration builder sets the minimum risk scor. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2644,ExposureConfiguration.ExposureConfigurationBuilder_setTransmissionRiskScores,set transmission risk scores from exposure configuration exposure configuration builder sets the transmission risk score. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int   . a builder for exposure configuration,sink,sink,sink,sink
2645,ExposureConfiguration.ExposureConfigurationBuilder_setTransmissionRiskWeight,set transmission risk weight from exposure configuration exposure configuration builder sets the transmission risk weigh. Return type is Exposure Configuration. Exposure Configuration Builder and parameters are int. a builder for exposure configuration,sink,sink,sink,sink
2646,ExposureInformation.ExposureInformationBuilder_build,build from exposure information exposure information builder builds an instance of exposure informatio. Return type is Exposure Information and no argument. a builder for exposure information,neither,neither,neither,neither
2647,ExposureInformation.ExposureInformationBuilder_setAttenuationDurations,set attenuation durations from exposure information exposure information builder sets the attenuation duration. Return type is Exposure Information. Exposure Information Builder and parameters are int[]. a builder for exposure information,sink,sink,sink,sink
2648,ExposureInformation.ExposureInformationBuilder_setAttenuationValue,set attenuation value from exposure information exposure information builder sets the attenuation valu. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2649,ExposureInformation.ExposureInformationBuilder_setDateMillisSinceEpoch,set date millis since epoch from exposure information exposure information builder sets the date in milliseconds since epoc. Return type is Exposure Information. Exposure Information Builder and parameters are long. a builder for exposure information,sink,sink,sink,sink
2650,ExposureInformation.ExposureInformationBuilder_setDurationMinutes,set duration minutes from exposure information exposure information builder sets the duration in minute. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2651,ExposureInformation.ExposureInformationBuilder_setTotalRiskScore,set total risk score from exposure information exposure information builder sets the total risk scor. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2652,ExposureInformation.ExposureInformationBuilder_setTransmissionRiskLevel,set transmission risk level from exposure information exposure information builder sets the transmission risk leve. Return type is Exposure Information. Exposure Information Builder and parameters are int. a builder for exposure information,sink,sink,sink,sink
2653,ExposureSummary.ExposureSummaryBuilder_build,build from exposure summary exposure summary builder builds an instance of exposure summar. Return type is Exposure Summary and no argument. a builder for exposure summary,neither,neither,neither,neither
2654,ExposureSummary.ExposureSummaryBuilder_setAttenuationDurations,set attenuation durations from exposure summary exposure summary builder sets the attenuation duration. Return type is Exposure Summary. Exposure Summary Builder and parameters are int[]. a builder for exposure summary,sink,sink,sink,sink
2655,ExposureSummary.ExposureSummaryBuilder_setDaysSinceLastExposure,set days since last exposure from exposure summary exposure summary builder sets the days since last exposur. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2656,ExposureSummary.ExposureSummaryBuilder_setMatchedKeyCount,set matched key count from exposure summary exposure summary builder sets the matched key coun. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2657,ExposureSummary.ExposureSummaryBuilder_setMaximumRiskScore,set maximum risk score from exposure summary exposure summary builder sets the maximum risk scor. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2658,ExposureSummary.ExposureSummaryBuilder_setSummationRiskScore,set summation risk score from exposure summary exposure summary builder sets the summation risk scor. Return type is Exposure Summary. Exposure Summary Builder and parameters are int. a builder for exposure summary,sink,sink,sink,sink
2659,ExposureWindow.Builder_build,build from exposure window builder builds an instance of exposure windo. Return type is Exposure Window and no argument. builder for exposure window,neither,neither,neither,neither
2660,ExposureWindow.Builder_setCalibrationConfidence,set calibration confidence from exposure window builder sets the calibration confidenc. Return type is Exposure Window. Builder and parameters are int. builder for exposure window,sink,sink,sink,sink
2661,ExposureWindow.Builder_setDateMillisSinceEpoch,set date millis since epoch from exposure window builder sets the date in milliseconds since epoc. Return type is Exposure Window. Builder and parameters are long. builder for exposure window,sink,sink,sink,sink
2662,ExposureWindow.Builder_setDeviceName,set device name from exposure window builder . builder for exposure window,sink,sink,sink,sink
2663,ExposureWindow.Builder_setInfectiousness,set infectiousness from exposure window builder sets the infectiousnes. Return type is Exposure Window. Builder and parameters are int. builder for exposure window,sink,sink,sink,sink
2664,ExposureWindow.Builder_setReportType,set report type from exposure window builder sets the report typ. Return type is Exposure Window. Builder and parameters are int. builder for exposure window,sink,sink,sink,sink
2665,ExposureWindow.Builder_setScanInstances,set scan instances from exposure window builder sets the scan instance. Return type is Exposure Window. Builder and parameters are list. builder for exposure window,sink,sink,sink,sink
2666,PackageConfiguration.PackageConfigurationBuilder_build,build from package configuration package configuration builder builds a package configuratio. Return type is Package Configuration and no argument. a builder for package configuration,neither,neither,neither,neither
2667,PackageConfiguration.PackageConfigurationBuilder_setValues,set values from package configuration package configuration builder sets a bundle containing configuration option. Return type is Package Configuration. Package Configuration Builder and parameters are bundle. a builder for package configuration,sink,sink,sink,sink
2668,ScanInstance.Builder_build,build from scan instance builder builds a new instance of scan instanc. Return type is Scan Instance and no argument. builder for scan instance,neither,neither,neither,neither
2669,ScanInstance.Builder_setMinAttenuationDb,set min attenuation db from scan instance builder sets the minimum attenuation in d. Return type is Scan Instance. Builder and parameters are int. builder for scan instance,sink,sink,sink,sink
2670,ScanInstance.Builder_setSecondsSinceLastScan,set seconds since last scan from scan instance builder sets the seconds since las sca. Return type is Scan Instance. Builder and parameters are int. builder for scan instance,sink,sink,sink,sink
2671,ScanInstance.Builder_setTypicalAttenuationDb,set typical attenuation db from scan instance builder sets the typical attenuation in d. Return type is Scan Instance. Builder and parameters are int. builder for scan instance,sink,sink,sink,sink
2672,TemporaryExposureKey.TemporaryExposureKeyBuilder_build,build from temporary exposure key temporary exposure key builder builds an instance of temporary exposure ke. Return type is Temporary Exposure Key and no argument. a builder for temporary exposure key,neither,neither,neither,neither
2673,TemporaryExposureKey.TemporaryExposureKeyBuilder_setDaysSinceOnsetOfSymptoms,set days since onset of symptoms from temporary exposure key temporary exposure key builder sets the number of days since the onset of symptom. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2674,TemporaryExposureKey.TemporaryExposureKeyBuilder_setKeyData,set key data from temporary exposure key temporary exposure key builder sets the temporary exposure key dat. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are byte[]. a builder for temporary exposure key,sink,sink,sink,sink
2675,TemporaryExposureKey.TemporaryExposureKeyBuilder_setReportType,set report type from temporary exposure key temporary exposure key builder sets the key's report typ. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2676,TemporaryExposureKey.TemporaryExposureKeyBuilder_setRollingPeriod,set rolling period from temporary exposure key temporary exposure key builder sets the rolling period which this key is valid fo. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2677,TemporaryExposureKey.TemporaryExposureKeyBuilder_setRollingStartIntervalNumber,set rolling start interval number from temporary exposure key temporary exposure key builder sets the rolling start interval numbe. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2678,TemporaryExposureKey.TemporaryExposureKeyBuilder_setTransmissionRiskLevel,set transmission risk level from temporary exposure key temporary exposure key builder sets the transmission risk leve. Return type is Temporary Exposure Key. Temporary Exposure Key Builder and parameters are int. a builder for temporary exposure key,sink,sink,sink,sink
2679,EddystoneUid_equals,"equals from eddystone uid . an eddystone u i d, broadcast by ble beacons",neither,neither,neither,neither
2680,EddystoneUid_from,"from from eddystone uid converts a message of type message m e s s a g e_ t y p e_ e d d y s t o n e_ u i d to an eddystone ui. Return type is Eddystone Uid and parameters are message. an eddystone u i d, broadcast by ble beacons",neither,neither,neither,neither
2681,EddystoneUid_getHex,"get hex from eddystone uid . an eddystone u i d, broadcast by ble beacons",source,source,source,source
2682,EddystoneUid_getInstance,"get instance from eddystone uid . an eddystone u i d, broadcast by ble beacons",source,source,source,source
2683,EddystoneUid_getNamespace,"get namespace from eddystone uid . an eddystone u i d, broadcast by ble beacons",source,source,source,source
2684,EddystoneUid_hashCode,"hash code from eddystone uid . an eddystone u i d, broadcast by ble beacons",neither,neither,neither,neither
2685,EddystoneUid_toString,"to string from eddystone uid . an eddystone u i d, broadcast by ble beacons",sink,sink,sink,sink
2686,IBeaconId_equals,"equals from i beacon id . an i beacon i d, which can be broadcast by ble beacons and i o s devices",neither,neither,neither,neither
2687,IBeaconId_from,"from from i beacon id converts a message of type message m e s s a g e_ t y p e_ i_ b e a c o n_ i d to an i beacon i. Return type is I Beacon Id and parameters are message. an i beacon i d, which can be broadcast by ble beacons and i o s devices",neither,neither,neither,neither
2688,IBeaconId_getMajor,"get major from i beacon id . an i beacon i d, which can be broadcast by ble beacons and i o s devices",source,source,source,source
2689,IBeaconId_getMinor,"get minor from i beacon id . an i beacon i d, which can be broadcast by ble beacons and i o s devices",source,source,source,source
2690,IBeaconId_getProximityUuid,"get proximity uuid from i beacon id . an i beacon i d, which can be broadcast by ble beacons and i o s devices",source,source,source,neither
2691,IBeaconId_hashCode,"hash code from i beacon id . an i beacon i d, which can be broadcast by ble beacons and i o s devices",source,source,source,neither
2692,IBeaconId_toString,"to string from i beacon id . an i beacon i d, which can be broadcast by ble beacons and i o s devices",sink,sink,neither,sink
2693,Message_equals,"equals from message message objects are equal if the namespace, type, and content are equa. Return type is boolean and parameters are object. a message that will be shared with nearby devices",neither,neither,neither,neither
2694,Message_getContent,get content from message returns the raw bytes content of the messag. Return type is byte[] and no argument. a message that will be shared with nearby devices,source,source,source,source
2695,Message_getNamespace,get namespace from message returns the non-empty string for a public namespace or empty for the private on. Return type is String and no argument. a message that will be shared with nearby devices,source,source,source,source
2696,Message_getType,get type from message returns the type that describes the content of the messag. Return type is String and no argument. a message that will be shared with nearby devices,source,source,source,source
2697,Message_hashCode,hash code from message . a message that will be shared with nearby devices,sink,sink,sink,neither
2698,Message_toString,to string from message . a message that will be shared with nearby devices,sink,sink,sink,sink
2699,Message_writeToParcel,write to parcel from message . a message that will be shared with nearby devices,sink,sink,sink,sink
2700,MessageFilter_equals,equals from message filter . used to specify the set of messages to be received,neither,neither,neither,neither
2701,MessageFilter_hashCode,hash code from message filter . used to specify the set of messages to be received,neither,neither,neither,neither
2702,MessageFilter_toString,to string from message filter . used to specify the set of messages to be received,sink,sink,sink,neither
2703,MessageFilter_writeToParcel,write to parcel from message filter . used to specify the set of messages to be received,sink,sink,sink,sink
2704,MessageFilter.Builder_build,build from message filter builder builds an instance of message filte. Return type is Message Filter and no argument. builder for message filter,neither,neither,neither,neither
2705,MessageFilter.Builder_includeAllMyTypes,include all my types from message filter builder filters for all messages published by this applicatio. Return type is Message Filter. Builder and no argument. builder for message filter,neither,neither,neither,neither
2706,MessageFilter.Builder_includeAudioBytes,include audio bytes from message filter builder includes raw audio byte message. Return type is Message Filter. Builder and parameters are int. builder for message filter,neither,neither,sink,sink
2707,MessageFilter.Builder_includeEddystoneUids,include eddystone uids from message filter builder includes eddystone uid. Return type is Message Filter. Builder and parameters are string string. builder for message filter,neither,neither,sink,neither
2708,MessageFilter.Builder_includeFilter,include filter from message filter builder includes the previously constructed filte. Return type is Message Filter. Builder and parameters are message filter. builder for message filter,neither,neither,neither,neither
2709,MessageFilter.Builder_includeIBeaconIds,include i beacon ids from message filter builder includes i beacon id. Return type is Message Filter. Builder and parameters are uuid short short. builder for message filter,neither,neither,neither,neither
2710,MessageFilter.Builder_includeNamespacedType,include namespaced type from message filter builder filters for all messages in the given namespace with the given typ. Return type is Message Filter. Builder and parameters are string string. builder for message filter,neither,neither,neither,neither
2711,MessageListener_onBleSignalChanged,on ble signal changed from message listener called when the bluetooth low energ. Return type is void and parameters are message ble signal. a listener for receiving subscribed messages,neither,neither,neither,neither
2712,MessageListener_onDistanceChanged,on distance changed from message listener called when nearby's estimate of the distance to a message change. Return type is void and parameters are message distance. a listener for receiving subscribed messages,neither,neither,neither,neither
2713,MessageListener_onFound,on found from message listener called when messages are foun. Return type is void and parameters are message. a listener for receiving subscribed messages,neither,neither,neither,neither
2714,MessageListener_onLost,on lost from message listener called when a message is no longer detectable nearb. Return type is void and parameters are message. a listener for receiving subscribed messages,neither,neither,neither,neither
2715,MessagesOptions.Builder_build,build from messages options builder builds the messages option. Return type is Messages Options and no argument. builder for messages options,neither,neither,neither,neither
2716,MessagesOptions.Builder_setPermissions,set permissions from messages options builder sets which nearby permissions are requested for nearb. Return type is Messages Options. Builder and parameters are int. builder for messages options,sink,sink,sink,sink
2717,NearbyMessagesStatusCodes_getStatusCodeString,"get status code string from nearby messages status codes . nearby messages specific status codes, for use in status get status code",source,source,source,source
2718,PublishCallback_onExpired,on expired from publish callback the published message is expire. Return type is void and no argument. callback for events which affect published messages,neither,neither,neither,neither
2719,PublishOptions_getCallback,get callback from publish options gets the publishing callbac. Return type is Publish Callback and no argument. options for calls to messages publish,source,source,source,neither
2720,PublishOptions_getStrategy,get strategy from publish options gets the publishing strateg. Return type is Strategy and no argument. options for calls to messages publish,source,source,source,source
2721,PublishOptions.Builder_build,build from publish options builder builds an instance of publish option. Return type is Publish Options and no argument. builder for instances of publish options,neither,sink,neither,neither
2722,PublishOptions.Builder_setCallback,set callback from publish options builder sets a callback which will be notified when significant events occur that affect this publis. Return type is Publish Options. Builder and parameters are publish callback. builder for instances of publish options,sink,sink,sink,sink
2723,PublishOptions.Builder_setStrategy,set strategy from publish options builder sets the strategy for publishin. Return type is Publish Options. Builder and parameters are strategy. builder for instances of publish options,sink,sink,sink,sink
2724,StatusCallback_onPermissionChanged,on permission changed from status callback called when permission is granted or revoked for this app to use nearb. Return type is void and parameters are boolean. callbacks for global status changes that affect a client of nearby messages,neither,neither,neither,neither
2725,Strategy_equals,equals from strategy . describes a set of strategies for publishing or subscribing for nearby messages,neither,neither,neither,neither
2726,Strategy_hashCode,hash code from strategy . describes a set of strategies for publishing or subscribing for nearby messages,neither,neither,neither,neither
2727,Strategy_toString,to string from strategy . describes a set of strategies for publishing or subscribing for nearby messages,sink,sink,neither,sink
2728,Strategy_writeToParcel,write to parcel from strategy . describes a set of strategies for publishing or subscribing for nearby messages,sink,sink,sink,sink
2729,Strategy.Builder_build,build from strategy builder builds an instance of strateg. Return type is Strategy and no argument. builder for strategy,neither,neither,neither,neither
2730,Strategy.Builder_setDiscoveryMode,set discovery mode from strategy builder sets the desired discovery mode that determines how devices will detect each othe. Return type is Strategy. Builder and parameters are int. builder for strategy,sink,sink,sink,sink
2731,Strategy.Builder_setDistanceType,"set distance type from strategy builder if used with a publish, the published message will only be delivered to subscribing devices that are at most the specified distance from this devic. Return type is Strategy. Builder and parameters are int. builder for strategy",sink,sink,sink,sink
2732,Strategy.Builder_setTtlSeconds,set ttl seconds from strategy builder sets the time to live in seconds for the publish or subscrib. Return type is Strategy. Builder and parameters are int. builder for strategy,sink,sink,sink,sink
2733,SubscribeCallback_onExpired,on expired from subscribe callback the subscription is expire. Return type is void and no argument. callback for events which affect subscriptions,neither,neither,neither,neither
2734,SubscribeOptions_getCallback,get callback from subscribe options gets the subscription callbac. Return type is Subscribe Callback and no argument. options for calls to messages subscribe,source,source,source,source
2735,SubscribeOptions_getFilter,get filter from subscribe options gets the subscription filte. Return type is Message Filter and no argument. options for calls to messages subscribe,source,source,source,source
2736,SubscribeOptions_getStrategy,get strategy from subscribe options gets the subscription strateg. Return type is Strategy and no argument. options for calls to messages subscribe,source,source,source,source
2737,SubscribeOptions_toString,to string from subscribe options . options for calls to messages subscribe,sink,sink,sink,neither
2738,SubscribeOptions.Builder_build,build from subscribe options builder builds an instance of subscribe option. Return type is Subscribe Options and no argument. builder for instances of subscribe options,neither,neither,neither,neither
2739,SubscribeOptions.Builder_setCallback,set callback from subscribe options builder sets a callback which will be notified when significant events occur that affect this subscriptio. Return type is Subscribe Options. Builder and parameters are subscribe callback. builder for instances of subscribe options,sink,sink,sink,neither
2740,SubscribeOptions.Builder_setFilter,set filter from subscribe options builder sets a filter to specify which messages to receiv. Return type is Subscribe Options. Builder and parameters are message filter. builder for instances of subscribe options,sink,sink,sink,sink
2741,SubscribeOptions.Builder_setStrategy,set strategy from subscribe options builder sets a strategy for subscribin. Return type is Subscribe Options. Builder and parameters are strategy. builder for instances of subscribe options,sink,sink,sink,sink
2742,BleSignal_getRssi,get rssi from ble signal returns the received signal strength indicato. Return type is  int and no argument. represents properties of the ble signal associated with a message,source,source,source,source
2743,BleSignal_getTxPower,"get tx power from ble signal returns the transmission power level at 1 meter, in d b. Return type is  int and no argument. represents properties of the ble signal associated with a message",source,source,source,source
2744,Distance_compareTo,compare to from distance note: this compares only get mete. Return type is  int and parameters are distance. represents the distance to a message,source,source,source,neither
2745,Distance_getAccuracy,get accuracy from distance the accuracy of the distance estimat. Return type is  int and no argument. represents the distance to a message,source,source,source,source
2746,Distance_getMeters,"get meters from distance the distance estimate, in meter. Return type is  double and no argument. represents the distance to a message",source,source,source,source
2747,Messages_getPermissionStatus,get permission status from messages deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  use messages client,source,source,source,source
2748,Messages_handleIntent,"handle intent from messages extracts information from an intent sent as a subscription callback, and calls the corresponding methods on the given message listene. Return type is  void and parameters are intent message listener. this interface is deprecated  use messages client",neither,neither,neither,neither
2749,Messages_publish,"publish from messages publishes a message so that it is visible to nearby devices, using the default options from publish options d e f a u l. Return type is Pending Result and parameters are google api client message. this interface is deprecated  use messages client",sink,sink,sink,sink
2750,Messages_publish,publish from messages publishes a message so that it is visible to nearby device. Return type is Pending Result and parameters are google api client message publish options. this interface is deprecated  use messages client,sink,sink,sink,sink
2751,Messages_registerStatusCallback,"register status callback from messages registers a status callback, which will be notified when significant events occur that affect nearby for your ap. Return type is Pending Result and parameters are google api client status callback. this interface is deprecated  use messages client",neither,neither,neither,neither
2752,Messages_subscribe,"subscribe from messages note: currently, this method only finds messages attached to ble beacon. Return type is Pending Result and parameters are google api client pending intent subscribe options. this interface is deprecated  use messages client",source,neither,neither,source
2753,Messages_subscribe,subscribe from messages subscribes for published messages from nearby device. Return type is Pending Result and parameters are google api client message listener subscribe options. this interface is deprecated  use messages client,neither,neither,sink,neither
2754,Messages_subscribe,"subscribe from messages subscribes for published messages from nearby devices, using the default options in subscribe options d e f a u l. Return type is Pending Result and parameters are google api client message listener. this interface is deprecated  use messages client",neither,neither,neither,neither
2755,Messages_subscribe,"subscribe from messages note: currently, this method only finds messages attached to ble beacon. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use messages client",neither,neither,neither,source
2756,Messages_unpublish,unpublish from messages cancels an existing published messag. Return type is Pending Result and parameters are google api client message. this interface is deprecated  use messages client,neither,neither,neither,neither
2757,Messages_unregisterStatusCallback,unregister status callback from messages unregisters a status callback previously registered with register status callba. Return type is Pending Result and parameters are google api client status callback. this interface is deprecated  use messages client,neither,neither,neither,neither
2758,Messages_unsubscribe,unsubscribe from messages cancels an existing subscriptio. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use messages client,neither,neither,neither,neither
2759,Messages_unsubscribe,unsubscribe from messages cancels an existing subscriptio. Return type is Pending Result and parameters are google api client message listener. this interface is deprecated  use messages client,neither,neither,neither,neither
2760,MessagesClient_handleIntent,"handle intent from messages client extracts information from an intent sent as a subscription callback, and calls the corresponding methods on the given message listene. Return type is  void and parameters are intent message listener. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices",neither,neither,neither,sink
2761,MessagesClient_publish,"publish from messages client publishes a message so that it is visible to nearby devices, using the default options from publish options d e f a u l. Return type is Task and parameters are message. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices",sink,sink,sink,sink
2762,MessagesClient_publish,publish from messages client publishes a message so that it is visible to nearby device. Return type is Task and parameters are message publish options. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices,sink,sink,sink,sink
2763,MessagesClient_registerStatusCallback,"register status callback from messages client registers a status callback, which will be notified when significant events occur that affect nearby for your ap. Return type is Task and parameters are status callback. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices",neither,neither,neither,neither
2764,MessagesClient_subscribe,subscribe from messages client subscribes for published messages from nearby device. Return type is Task and parameters are message listener subscribe options. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices,sink,neither,sink,neither
2765,MessagesClient_subscribe,"subscribe from messages client subscribes for published messages from nearby devices, using the default options in subscribe options d e f a u l. Return type is Task and parameters are message listener. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices",sink,sink,sink,sink
2766,MessagesClient_subscribe,"subscribe from messages client note: currently, this method only finds messages attached to ble beacon. Return type is Task and parameters are pending intent subscribe options. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices",sink,sink,sink,sink
2767,MessagesClient_subscribe,"subscribe from messages client note: currently, this method only finds messages attached to ble beacon. Return type is Task and parameters are pending intent. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices",sink,neither,sink,sink
2768,MessagesClient_unpublish,unpublish from messages client cancels an existing published messag. Return type is Task and parameters are message. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices,neither,neither,neither,neither
2769,MessagesClient_unregisterStatusCallback,unregister status callback from messages client unregisters a status callback previously registered with register status callba. Return type is Task and parameters are status callback. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices,neither,neither,neither,neither
2770,MessagesClient_unsubscribe,unsubscribe from messages client cancels an existing subscriptio. Return type is Task and parameters are message listener. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices,neither,neither,neither,neither
2771,MessagesClient_unsubscribe,unsubscribe from messages client cancels an existing subscriptio. Return type is Task and parameters are pending intent. a p i which allows your app to publish simple messages and subscribe to receive those messages from nearby devices,neither,neither,neither,neither
2772,MessageFilter.Builder_build,build from message filter builder builds an instance of message filte. Return type is Message Filter and no argument. builder for message filter,neither,neither,neither,neither
2773,MessageFilter.Builder_includeAllMyTypes,include all my types from message filter builder filters for all messages published by this applicatio. Return type is Message Filter. Builder and no argument. builder for message filter,neither,neither,neither,neither
2774,MessageFilter.Builder_includeAudioBytes,include audio bytes from message filter builder includes raw audio byte message. Return type is Message Filter. Builder and parameters are int. builder for message filter,neither,neither,sink,sink
2775,MessageFilter.Builder_includeEddystoneUids,include eddystone uids from message filter builder includes eddystone uid. Return type is Message Filter. Builder and parameters are string string. builder for message filter,neither,neither,sink,neither
2776,MessageFilter.Builder_includeFilter,include filter from message filter builder includes the previously constructed filte. Return type is Message Filter. Builder and parameters are message filter. builder for message filter,neither,neither,neither,neither
2777,MessageFilter.Builder_includeIBeaconIds,include i beacon ids from message filter builder includes i beacon id. Return type is Message Filter. Builder and parameters are uuid short short. builder for message filter,neither,neither,neither,neither
2778,MessageFilter.Builder_includeNamespacedType,include namespaced type from message filter builder filters for all messages in the given namespace with the given typ. Return type is Message Filter. Builder and parameters are string string. builder for message filter,neither,neither,neither,neither
2779,MessagesOptions.Builder_build,build from messages options builder builds the messages option. Return type is Messages Options and no argument. builder for messages options,neither,neither,neither,neither
2780,MessagesOptions.Builder_setPermissions,set permissions from messages options builder sets which nearby permissions are requested for nearb. Return type is Messages Options. Builder and parameters are int. builder for messages options,sink,sink,sink,sink
2781,PublishOptions.Builder_build,build from publish options builder builds an instance of publish option. Return type is Publish Options and no argument. builder for instances of publish options,neither,sink,neither,neither
2782,PublishOptions.Builder_setCallback,set callback from publish options builder sets a callback which will be notified when significant events occur that affect this publis. Return type is Publish Options. Builder and parameters are publish callback. builder for instances of publish options,sink,sink,sink,sink
2783,PublishOptions.Builder_setStrategy,set strategy from publish options builder sets the strategy for publishin. Return type is Publish Options. Builder and parameters are strategy. builder for instances of publish options,sink,sink,sink,sink
2784,Strategy.Builder_build,build from strategy builder builds an instance of strateg. Return type is Strategy and no argument. builder for strategy,neither,neither,neither,neither
2785,Strategy.Builder_setDiscoveryMode,set discovery mode from strategy builder sets the desired discovery mode that determines how devices will detect each othe. Return type is Strategy. Builder and parameters are int. builder for strategy,sink,sink,sink,sink
2786,Strategy.Builder_setDistanceType,"set distance type from strategy builder if used with a publish, the published message will only be delivered to subscribing devices that are at most the specified distance from this devic. Return type is Strategy. Builder and parameters are int. builder for strategy",sink,sink,sink,sink
2787,Strategy.Builder_setTtlSeconds,set ttl seconds from strategy builder sets the time to live in seconds for the publish or subscrib. Return type is Strategy. Builder and parameters are int. builder for strategy,sink,sink,sink,sink
2788,SubscribeOptions.Builder_build,build from subscribe options builder builds an instance of subscribe option. Return type is Subscribe Options and no argument. builder for instances of subscribe options,neither,neither,neither,neither
2789,SubscribeOptions.Builder_setCallback,set callback from subscribe options builder sets a callback which will be notified when significant events occur that affect this subscriptio. Return type is Subscribe Options. Builder and parameters are subscribe callback. builder for instances of subscribe options,sink,sink,sink,neither
2790,SubscribeOptions.Builder_setFilter,set filter from subscribe options builder sets a filter to specify which messages to receiv. Return type is Subscribe Options. Builder and parameters are message filter. builder for instances of subscribe options,sink,sink,sink,sink
2791,SubscribeOptions.Builder_setStrategy,set strategy from subscribe options builder sets a strategy for subscribin. Return type is Subscribe Options. Builder and parameters are strategy. builder for instances of subscribe options,sink,sink,sink,sink
2792,BleDevicesResult_equals,equals from ble devices result . this class is deprecated  use bluetooth manager directly,neither,neither,neither,neither
2793,BleDevicesResult_getClaimedBleDevices,get claimed ble devices from ble devices result returns all found claimed ble devices for the given data typ. Return type is List and parameters are data type. this class is deprecated  use bluetooth manager directly,source,source,source,source
2794,BleDevicesResult_getClaimedBleDevices,get claimed ble devices from ble devices result returns all of the found claimed ble device. Return type is List and no argument. this class is deprecated  use bluetooth manager directly,source,source,source,source
2795,BleDevicesResult_getStatus,get status from ble devices result . this class is deprecated  use bluetooth manager directly,source,source,source,source
2796,BleDevicesResult_hashCode,hash code from ble devices result . this class is deprecated  use bluetooth manager directly,neither,neither,neither,neither
2797,BleDevicesResult_toString,to string from ble devices result . this class is deprecated  use bluetooth manager directly,source,sink,neither,source
2798,BleDevicesResult_writeToParcel,write to parcel from ble devices result . this class is deprecated  use bluetooth manager directly,sink,sink,sink,sink
2799,DailyTotalResult_equals,equals from daily total result . result of read daily total,neither,neither,neither,neither
2800,DailyTotalResult_getStatus,get status from daily total result . result of read daily total,source,source,source,neither
2801,DailyTotalResult_getTotal,get total from daily total result returns the resulting data set containing the daily total for the requested data typ. Return type is Data Set and no argument. result of read daily total,source,source,source,source
2802,DailyTotalResult_hashCode,hash code from daily total result . result of read daily total,source,source,source,neither
2803,DailyTotalResult_toString,to string from daily total result . result of read daily total,source,source,source,source
2804,DataReadResponse_getBuckets,get buckets from data read response returns all of the buckets with aggregated dat. Return type is List and no argument. result of read data,source,source,source,source
2805,DataReadResponse_getDataSet,get data set from data read response returns the resulting data set for the given data typ. Return type is Data Set and parameters are data type. result of read data,source,source,source,source
2806,DataReadResponse_getDataSet,get data set from data read response returns the resulting data set for the given data sourc. Return type is Data Set and parameters are data source. result of read data,source,source,source,source
2807,DataReadResponse_getDataSets,get data sets from data read response returns all of the data sets in the resul. Return type is List and no argument. result of read data,source,source,source,source
2808,DataReadResponse_getStatus,get status from data read response . result of read data,source,source,source,source
2809,DataReadResult_equals,equals from data read result . result of read data,source,neither,source,neither
2810,DataReadResult_getBuckets,get buckets from data read result returns all of the buckets with aggregated dat. Return type is List and no argument. result of read data,source,source,source,source
2811,DataReadResult_getDataSet,get data set from data read result returns the resulting data set for the given data typ. Return type is Data Set and parameters are data type. result of read data,source,source,source,source
2812,DataReadResult_getDataSet,get data set from data read result returns the resulting data set for the given data sourc. Return type is Data Set and parameters are data source. result of read data,source,source,source,source
2813,DataReadResult_getDataSets,get data sets from data read result returns all of the data sets in the resul. Return type is List and no argument. result of read data,source,source,source,source
2814,DataReadResult_getStatus,get status from data read result . result of read data,source,source,source,source
2815,DataReadResult_hashCode,hash code from data read result . result of read data,source,source,source,source
2816,DataReadResult_toString,to string from data read result . result of read data,source,source,source,source
2817,DataReadResult_writeToParcel,write to parcel from data read result . result of read data,sink,sink,sink,sink
2818,DataSourcesResult_equals,equals from data sources result . result of find data sources,neither,neither,neither,neither
2819,DataSourcesResult_getDataSources,get data sources from data sources result returns all of the found data source. Return type is List and no argument. result of find data sources,source,source,source,source
2820,DataSourcesResult_getDataSources,get data sources from data sources result returns all of the found data sources for the given data typ. Return type is List and parameters are data type. result of find data sources,source,source,source,source
2821,DataSourcesResult_getStatus,get status from data sources result . result of find data sources,source,source,source,source
2822,DataSourcesResult_hashCode,hash code from data sources result . result of find data sources,source,source,source,source
2823,DataSourcesResult_toString,to string from data sources result . result of find data sources,source,source,source,source
2824,DataSourcesResult_writeToParcel,write to parcel from data sources result . result of find data sources,sink,sink,sink,sink
2825,DataTypeResult_equals,equals from data type result . this class is deprecated  no replacement,neither,neither,neither,neither
2826,DataTypeResult_getDataType,"get data type from data type result returns the new custom data type inserted, or null if the request faile. Return type is Data Type and no argument. this class is deprecated  no replacement",source,source,source,source
2827,DataTypeResult_getStatus,get status from data type result . this class is deprecated  no replacement,source,source,source,source
2828,DataTypeResult_hashCode,hash code from data type result . this class is deprecated  no replacement,neither,neither,neither,source
2829,DataTypeResult_toString,to string from data type result . this class is deprecated  no replacement,neither,source,neither,source
2830,DataTypeResult_writeToParcel,write to parcel from data type result . this class is deprecated  no replacement,sink,sink,sink,sink
2831,GoalsResult_getGoals,get goals from goals result returns all current goals that matched the reques. Return type is List and no argument. this class is deprecated  no replacement,source,source,source,source
2832,GoalsResult_getStatus,get status from goals result . this class is deprecated  no replacement,source,source,source,source
2833,GoalsResult_writeToParcel,write to parcel from goals result . this class is deprecated  no replacement,sink,sink,sink,sink
2834,ListSubscriptionsResult_equals,equals from list subscriptions result . this class is deprecated  no replacement,neither,neither,neither,neither
2835,ListSubscriptionsResult_getStatus,get status from list subscriptions result . this class is deprecated  no replacement,source,source,source,source
2836,ListSubscriptionsResult_getSubscriptions,get subscriptions from list subscriptions result returns all of the found subscriptions for the given data typ. Return type is List and parameters are data type. this class is deprecated  no replacement,source,source,source,source
2837,ListSubscriptionsResult_getSubscriptions,get subscriptions from list subscriptions result returns all of the found subscription. Return type is List and no argument. this class is deprecated  no replacement,source,source,source,source
2838,ListSubscriptionsResult_hashCode,hash code from list subscriptions result . this class is deprecated  no replacement,neither,neither,neither,neither
2839,ListSubscriptionsResult_toString,to string from list subscriptions result . this class is deprecated  no replacement,neither,neither,neither,neither
2840,ListSubscriptionsResult_writeToParcel,write to parcel from list subscriptions result . this class is deprecated  no replacement,sink,sink,sink,sink
2841,SessionReadResponse_getDataSet,get data set from session read response returns the data sets for a given session and data typ. Return type is List and parameters are session data type. result of read session,source,source,source,source
2842,SessionReadResponse_getDataSet,get data set from session read response returns the data sets for all data sources for a given sessio. Return type is List and parameters are session. result of read session,source,source,source,source
2843,SessionReadResponse_getSessions,get sessions from session read response returns all sessions that matched the requested filter. Return type is List and no argument. result of read session,source,source,source,source
2844,SessionReadResponse_getStatus,get status from session read response . result of read session,source,source,source,source
2845,SessionReadResult_equals,equals from session read result . result of read session,source,source,source,source
2846,SessionReadResult_getDataSet,get data set from session read result returns the data sets for a given session and data typ. Return type is List and parameters are session data type. result of read session,source,source,source,source
2847,SessionReadResult_getDataSet,get data set from session read result returns the data sets for all data sources for a given sessio. Return type is List and parameters are session. result of read session,source,source,source,source
2848,SessionReadResult_getSessions,get sessions from session read result returns all sessions that matched the requested filter. Return type is List and no argument. result of read session,source,source,source,source
2849,SessionReadResult_getStatus,get status from session read result . result of read session,source,source,source,source
2850,SessionReadResult_hashCode,hash code from session read result . result of read session,source,source,source,source
2851,SessionReadResult_toString,to string from session read result . result of read session,source,source,source,source
2852,SessionReadResult_writeToParcel,write to parcel from session read result . result of read session,sink,sink,sink,sink
2853,SessionStopResult_equals,equals from session stop result . result of stop session,neither,neither,neither,source
2854,SessionStopResult_getSessions,get sessions from session stop result returns the list of sessions that were stopped by the reques. Return type is List and no argument. result of stop session,source,source,source,source
2855,SessionStopResult_getStatus,get status from session stop result returns the status of the call to google fi. Return type is Status and no argument. result of stop session,source,source,source,source
2856,SessionStopResult_hashCode,hash code from session stop result . result of stop session,neither,neither,neither,source
2857,SessionStopResult_toString,to string from session stop result . result of stop session,source,source,neither,source
2858,SessionStopResult_writeToParcel,write to parcel from session stop result . result of stop session,sink,sink,sink,sink
2859,AudioBytes_from,from from audio bytes converts a message of type message m e s s a g e_ t y p e_ a u d i o_ b y t e s to an audio bytes objec. Return type is Audio Bytes and parameters are message. a message that will be sent directly over near ultrasound audio,sink,sink,neither,neither
2860,AudioBytes_getBytes,get bytes from audio bytes returns the byte array payloa. Return type is byte[] and no argument. a message that will be sent directly over near ultrasound audio,source,source,source,source
2861,AudioBytes_toMessage,to message from audio bytes obtain a message object for use with the messagespubli. Return type is Message and no argument. a message that will be sent directly over near ultrasound audio,sink,sink,sink,neither
2862,AudioBytes_toString,to string from audio bytes . a message that will be sent directly over near ultrasound audio,sink,sink,sink,sink
2863,EventBuffer_get,get from event buffer . data structure providing access to a list of events,source,source,source,source
2864,EventEntity_equals,equals from event entity . data object representing the data for a event,neither,neither,neither,neither
2865,EventEntity_freeze,freeze from event entity . data object representing the data for a event,neither,neither,neither,neither
2866,EventEntity_getDescription,get description from event entity retrieves the description for this even. Return type is String and no argument. data object representing the data for a event,source,source,source,source
2867,EventEntity_getDescription,get description from event entity loads the event description into the given char array buffe. Return type is void and parameters are char array buffer. data object representing the data for a event,source,source,source,source
2868,EventEntity_getEventId,get event id from event entity retrieves the id of this even. Return type is String and no argument. data object representing the data for a event,source,source,source,source
2869,EventEntity_getFormattedValue,get formatted value from event entity retrieves the sum of increments have been made to this even. Return type is void and parameters are char array buffer. data object representing the data for a event,source,source,source,source
2870,EventEntity_getFormattedValue,get formatted value from event entity retrieves the sum of increments have been made to this even. Return type is String and no argument. data object representing the data for a event,source,source,source,source
2871,EventEntity_getIconImageUri,get icon image uri from event entity retrieves a uri that can be used to load the event's image ico. Return type is Uri and no argument. data object representing the data for a event,source,source,source,source
2872,EventEntity_getIconImageUrl,get icon image url from event entity . data object representing the data for a event,source,source,source,source
2873,EventEntity_getName,get name from event entity loads the event name into the given char array buffe. Return type is void and parameters are char array buffer. data object representing the data for a event,source,source,source,source
2874,EventEntity_getName,get name from event entity retrieves the name of this even. Return type is String and no argument. data object representing the data for a event,source,source,source,source
2875,EventEntity_getPlayer,get player from event entity retrieves the player information associated with this even. Return type is Player and no argument. data object representing the data for a event,source,source,source,source
2876,EventEntity_getValue,get value from event entity retrieves the number of increments this user has made to this even. Return type is long and no argument. data object representing the data for a event,source,source,source,source
2877,EventEntity_hashCode,hash code from event entity . data object representing the data for a event,neither,neither,neither,source
2878,EventEntity_isDataValid,is data valid from event entity . data object representing the data for a event,neither,neither,neither,source
2879,EventEntity_isVisible,is visible from event entity retrieves whether the event should be displayed to the user in any event related ui. Return type is boolean and no argument. data object representing the data for a event,source,source,source,source
2880,EventEntity_toString,to string from event entity . data object representing the data for a event,neither,neither,neither,neither
2881,EventEntity_writeToParcel,write to parcel from event entity . data object representing the data for a event,sink,sink,sink,sink
2882,Event_getDescription,get description from event retrieves the description for this even. Return type is String and no argument. data interface for retrieving event information,source,source,source,source
2883,Event_getDescription,get description from event loads the event description into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving event information,source,source,source,source
2884,Event_getEventId,get event id from event retrieves the id of this even. Return type is String and no argument. data interface for retrieving event information,source,source,source,source
2885,Event_getFormattedValue,get formatted value from event retrieves the sum of increments have been made to this even. Return type is String and no argument. data interface for retrieving event information,source,source,source,source
2886,Event_getFormattedValue,get formatted value from event retrieves the sum of increments have been made to this even. Return type is  void and parameters are char array buffer. data interface for retrieving event information,source,source,source,source
2887,Event_getIconImageUri,get icon image uri from event retrieves a uri that can be used to load the event's image ico. Return type is Uri and no argument. data interface for retrieving event information,source,source,source,source
2888,Event_getName,get name from event retrieves the name of this even. Return type is String and no argument. data interface for retrieving event information,source,source,source,source
2889,Event_getName,get name from event loads the event name into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving event information,source,source,source,source
2890,Event_getPlayer,get player from event retrieves the player information associated with this even. Return type is Player and no argument. data interface for retrieving event information,source,source,source,source
2891,Event_getValue,get value from event retrieves the number of increments this user has made to this even. Return type is  long and no argument. data interface for retrieving event information,source,source,source,source
2892,Event_isVisible,is visible from event retrieves whether the event should be displayed to the user in any event related ui. Return type is  boolean and no argument. data interface for retrieving event information,source,source,source,source
2893,Events_increment,increment from events increments an event by the given number of step. Return type is  void and parameters are google api client string int. this interface is deprecated  use events client instea,neither,neither,neither,neither
2894,Events_load,load from events asynchronously load event data for the currently signed in playe. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use events client instea,neither,neither,neither,neither
2895,Events_loadByIds,load by ids from events asynchronously load event data for specified event id. Return type is Pending Result and parameters are google api client boolean string   . this interface is deprecated  use events client instea,neither,neither,neither,source
2896,Events.LoadEventsResult_getEvents,get events from events load events result . this interface is deprecated  event buffer is returned directly in the events client,source,source,source,source
2897,Events.LoadEventsResult_getEvents,get events from events load events result . this interface is deprecated  event buffer is returned directly in the events client,source,source,source,source
2898,AwarenessFence_and,"and from awareness fence create an awareness fence that is the logical and of the specified fence. Return type is Awareness Fence and parameters are awareness fence   . a combination of conditions on two or more types of context, which trigger a callback to the app when satisfied",neither,neither,neither,neither
2899,AwarenessFence_and,"and from awareness fence create an awareness fence that is the logical and of fences in the specified fence collectio. Return type is Awareness Fence and parameters are collection. a combination of conditions on two or more types of context, which trigger a callback to the app when satisfied",neither,neither,neither,neither
2900,AwarenessFence_not,"not from awareness fence create an awareness fence that is the logical not of the specified fenc. Return type is Awareness Fence and parameters are awareness fence. a combination of conditions on two or more types of context, which trigger a callback to the app when satisfied",neither,neither,neither,neither
2901,AwarenessFence_or,"or from awareness fence create an awareness fence that is the logical or of the specified fence. Return type is Awareness Fence and parameters are awareness fence   . a combination of conditions on two or more types of context, which trigger a callback to the app when satisfied",neither,neither,neither,neither
2902,AwarenessFence_or,"or from awareness fence create an awareness fence that is the logical or of the specified fence. Return type is Awareness Fence and parameters are collection. a combination of conditions on two or more types of context, which trigger a callback to the app when satisfied",neither,neither,neither,neither
2903,BeaconFence_found,found from beacon fence this fence is momentarily tru. Return type is Awareness Fence and parameters are collection< beacon state type filter>. use this class to create beacon fences,neither,neither,neither,neither
2904,BeaconFence_found,found from beacon fence this fence is momentarily tru. Return type is Awareness Fence and parameters are type filter   . use this class to create beacon fences,neither,neither,neither,neither
2905,BeaconFence_lost,lost from beacon fence this fence is momentarily tru. Return type is Awareness Fence and parameters are type filter   . use this class to create beacon fences,neither,neither,neither,neither
2906,BeaconFence_lost,lost from beacon fence this fence is momentarily tru. Return type is Awareness Fence and parameters are collection< beacon state type filter>. use this class to create beacon fences,neither,neither,neither,neither
2907,BeaconFence_near,near from beacon fence this fence evaluates to true if any of the specified types is found but not los. Return type is Awareness Fence and parameters are type filter   . use this class to create beacon fences,neither,neither,neither,neither
2908,BeaconFence_near,near from beacon fence this fence evaluates to true if any of the specified types is found but not los. Return type is Awareness Fence and parameters are collection< beacon state type filter>. use this class to create beacon fences,neither,neither,neither,neither
2909,DetectedActivityFence_during,"during from detected activity fence this fence is in the true state when the user is currently engaged in one of the specified activity types, and false otherwis. Return type is Awareness Fence and parameters are int   . use this class to create activity based fences",neither,neither,neither,neither
2910,DetectedActivityFence_starting,starting from detected activity fence this fence is momentaril. Return type is Awareness Fence and parameters are int   . use this class to create activity based fences,neither,neither,neither,neither
2911,DetectedActivityFence_stopping,stopping from detected activity fence this fence is momentaril. Return type is Awareness Fence and parameters are int   . use this class to create activity based fences,neither,neither,neither,neither
2912,FenceQueryRequest_all,all from fence query request query all the fences from the fence api instance corresponding to the calling packag. Return type is Fence Query Request and no argument. defines the interface for querying fences in the fence api,neither,neither,neither,neither
2913,FenceQueryRequest_forFences,for fences from fence query request query the defined fences for the given key. Return type is Fence Query Request and parameters are string   . defines the interface for querying fences in the fence api,neither,neither,neither,neither
2914,FenceQueryRequest_forFences,for fences from fence query request query the awareness manager fences for the given key. Return type is Fence Query Request and parameters are collection. defines the interface for querying fences in the fence api,neither,neither,source,neither
2915,FenceQueryResponse_getFenceStateMap,get fence state map from fence query response provides fence state map that can be used by clients to obtain all the fence keys that are returned in response or the fence state for the given fence ke. Return type is Fence State Map and no argument. result for query fence states ap,source,source,source,source
2916,FenceState_extract,extract from fence state extracts the fence state details from the inten. Return type is Fence State and parameters are intent. encapsulates the state of a fence in awareness fence,neither,neither,source,neither
2917,FenceState_getCurrentState,get current state from fence state returns the current fence stat. Return type is  int and no argument. encapsulates the state of a fence in awareness fence,source,source,source,source
2918,FenceState_getFenceKey,get fence key from fence state returns the fence key that identifies this fence in awareness fenc. Return type is String and no argument. encapsulates the state of a fence in awareness fence,source,source,source,source
2919,FenceState_getLastFenceUpdateTimeMillis,get last fence update time millis from fence state returns the last time the fence state was changed in milliseconds since epoc. Return type is  long and no argument. encapsulates the state of a fence in awareness fence,source,source,source,source
2920,FenceState_getPreviousState,get previous state from fence state returns the previous fence stat. Return type is  int and no argument. encapsulates the state of a fence in awareness fence,source,source,source,source
2921,FenceUpdateRequest.Builder_addFence,add fence from fence update request builder adds a fence identified by the given key to get callbacks to the pending intent when triggere. Return type is Fence Update Request. Builder and parameters are string awareness fence pending intent. builder for a fence update request,neither,neither,neither,neither
2922,FenceUpdateRequest.Builder_build,build from fence update request builder builds the fence update reques. Return type is Fence Update Request and no argument. builder for a fence update request,neither,neither,neither,neither
2923,FenceUpdateRequest.Builder_removeFence,remove fence from fence update request builder removes the fence with the given ke. Return type is Fence Update Request. Builder and parameters are string. builder for a fence update request,neither,neither,neither,neither
2924,FenceUpdateRequest.Builder_removeFence,remove fence from fence update request builder removes all fences associated with the pending inten. Return type is Fence Update Request. Builder and parameters are pending intent. builder for a fence update request,neither,neither,neither,neither
2925,HeadphoneFence_during,during from headphone fence this fence is in the true state when the headphones are in the specified stat. Return type is Awareness Fence and parameters are int. use this class to create headphone state fences,neither,neither,neither,neither
2926,HeadphoneFence_pluggingIn,plugging in from headphone fence this fence is momentaril. Return type is Awareness Fence and no argument. use this class to create headphone state fences,neither,neither,neither,neither
2927,HeadphoneFence_unplugging,unplugging from headphone fence this fence is momentaril. Return type is Awareness Fence and no argument. use this class to create headphone state fences,neither,neither,neither,neither
2928,LocationFence_entering,entering from location fence this fence is momentaril. Return type is Awareness Fence and parameters are double double double. use this class to create location based fences,neither,neither,neither,neither
2929,LocationFence_exiting,exiting from location fence this fence is momentaril. Return type is Awareness Fence and parameters are double double double. use this class to create location based fences,neither,neither,neither,neither
2930,LocationFence_in,"in from location fence this fence is in the true state when the user's location is within the specified circle, and the user has been in the circle for at least the dwell time millis that was specifie. Return type is Awareness Fence and parameters are double double double long. use this class to create location based fences",neither,neither,neither,neither
2931,TimeFence_aroundTimeInstant,around time instant from time fence this is a time fence that is in the true state during a time interval defined with respect to t i m e_ i n s t a n t_ s u n r i s e or t i m e_ i n s t a n t_ s u n s e t instant. Return type is Awareness Fence and parameters are int long long. use this class to create time based fences,neither,neither,neither,neither
2932,TimeFence_inDailyInterval,in daily interval from time fence this fence is in the true state during the interval specified by start time of day millis and stop time of day millis in the given time zon. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2933,TimeFence_inFridayInterval,in friday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2934,TimeFence_inInterval,in interval from time fence this fence is in the true state when the current time is within the absolute times indicated by start time millis and stop time milli. Return type is Awareness Fence and parameters are long long. use this class to create time based fences,neither,neither,neither,neither
2935,TimeFence_inIntervalOfDay,in interval of day from time fence this fence is in the true state on day of week during the interval specified by start time of day millis to stop time of day millis in the given time zon. Return type is Awareness Fence and parameters are int time zone long long. use this class to create time based fences,neither,neither,neither,neither
2936,TimeFence_inMondayInterval,in monday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2937,TimeFence_inSaturdayInterval,in saturday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2938,TimeFence_inSundayInterval,in sunday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2939,TimeFence_inThursdayInterval,in thursday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2940,TimeFence_inTimeInterval,in time interval from time fence this fence is in the true state if the day attributes for the present day/time is one of the attributes specified in the given day attribute. Return type is Awareness Fence and parameters are int. use this class to create time based fences,neither,neither,neither,neither
2941,TimeFence_inTuesdayInterval,in tuesday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2942,TimeFence_inWednesdayInterval,in wednesday interval from time fence d e p r e c a t e. Return type is Awareness Fence and parameters are time zone long long. use this class to create time based fences,neither,neither,neither,neither
2943,FenceQueryResult_getFenceStateMap,get fence state map from fence query result provides fence state map that can be used by clients to obtain all the fence keys that are returned in response or the fence state for the given fence ke. Return type is Fence State Map and no argument. result for query fence states ap,source,source,source,source
2944,FenceStateMap_getFenceKeys,get fence keys from fence state map returns the set of fence keys that are contained in this fence state ma. Return type is Set and no argument. a map of fence states keyed off of the fence keys resulting from a fence query request,source,source,source,source
2945,FenceStateMap_getFenceState,get fence state from fence state map returns a fence state for the given fence ke. Return type is Fence State and parameters are string. a map of fence states keyed off of the fence keys resulting from a fence query request,source,source,source,source
2946,FenceUpdateRequest.Builder_addFence,add fence from fence update request builder adds a fence identified by the given key to get callbacks to the pending intent when triggere. Return type is Fence Update Request. Builder and parameters are string awareness fence pending intent. builder for a fence update request,neither,neither,neither,neither
2947,FenceUpdateRequest.Builder_build,build from fence update request builder builds the fence update reques. Return type is Fence Update Request and no argument. builder for a fence update request,neither,neither,neither,neither
2948,FenceUpdateRequest.Builder_removeFence,remove fence from fence update request builder removes the fence with the given ke. Return type is Fence Update Request. Builder and parameters are string. builder for a fence update request,neither,neither,neither,neither
2949,FenceUpdateRequest.Builder_removeFence,remove fence from fence update request builder removes all fences associated with the pending inten. Return type is Fence Update Request. Builder and parameters are pending intent. builder for a fence update request,neither,neither,neither,neither
2950,Address_requestUserAddress,request user address from address a p i to request an address from a use. Return type is  void and parameters are google api client user address request int. a p is for accessing a user's address,source,source,source,source
2951,UserAddressRequest_newBuilder,new builder from user address request . object that encapsulates a request to request user address,neither,neither,neither,neither
2952,UserAddressRequest_writeToParcel,write to parcel from user address request . object that encapsulates a request to request user address,sink,sink,sink,sink
2953,UserAddressRequest.Builder_addAllowedCountrySpecification,add allowed country specification from user address request builder specifies a country whose addresses can be handled by your ap. Return type is User Address Request. Builder and parameters are country specification. builder for creating a user address request,sink,sink,sink,sink
2954,UserAddressRequest.Builder_addAllowedCountrySpecifications,add allowed country specifications from user address request builder specifies multiple countries whose addresses can be handled by your ap. Return type is User Address Request. Builder and parameters are collection. builder for creating a user address request,sink,sink,sink,sink
2955,UserAddressRequest.Builder_build,build from user address request builder builds an instance of user address request and returns i. Return type is User Address Request and no argument. builder for creating a user address request,neither,neither,neither,neither
2956,UserAddressRequest.Builder_addAllowedCountrySpecification,add allowed country specification from user address request builder specifies a country whose addresses can be handled by your ap. Return type is User Address Request. Builder and parameters are country specification. builder for creating a user address request,sink,sink,sink,sink
2957,UserAddressRequest.Builder_addAllowedCountrySpecifications,add allowed country specifications from user address request builder specifies multiple countries whose addresses can be handled by your ap. Return type is User Address Request. Builder and parameters are collection. builder for creating a user address request,sink,sink,sink,sink
2958,UserAddressRequest.Builder_build,build from user address request builder builds an instance of user address request and returns i. Return type is User Address Request and no argument. builder for creating a user address request,neither,neither,neither,neither
2959,Recaptcha_getClient,get client from recaptcha returns a recaptcha client that is used to access all a p is that are called when the app has a foreground activit. Return type is Recaptcha Client and parameters are activity. the re c a p t c h a api provides access to google cloud services that help you protect your app from spam and other abusive actions,source,source,source,source
2960,Recaptcha_getClient,get client from recaptcha returns a recaptcha client that is used to access all a p is that are called without access to a foreground activit. Return type is Recaptcha Client and parameters are context. the re c a p t c h a api provides access to google cloud services that help you protect your app from spam and other abusive actions,source,source,source,source
2961,RecaptchaAction_getAction,get action from recaptcha action gets recaptcha action typ. Return type is Recaptcha Action Type and no argument. actions  intended to be protected by re c a p t c h a,source,source,source,source
2962,RecaptchaAction_getAdditionalArgs,get additional args from recaptcha action gets the additional arg map specified by this actio. Return type is Bundle and no argument. actions  intended to be protected by re c a p t c h a,source,source,source,source
2963,RecaptchaAction_getCustomAction,get custom action from recaptcha action gets custom action that user input. Return type is String and no argument. actions  intended to be protected by re c a p t c h a,source,source,source,source
2964,RecaptchaAction_getVerificationHistoryToken,get verification history token from recaptcha action gets the verification history token specified by this actio. Return type is String and no argument. actions  intended to be protected by re c a p t c h a,source,source,source,source
2965,RecaptchaAction_toString,to string from recaptcha action gets the string value of recaptcha actio. Return type is String and no argument. actions  intended to be protected by re c a p t c h a,source,source,source,source
2966,RecaptchaAction_writeToParcel,write to parcel from recaptcha action . actions  intended to be protected by re c a p t c h a,sink,sink,sink,sink
2967,RecaptchaActionType_writeToParcel,write to parcel from recaptcha action type . collection of predefined actions used by recaptcha handle,sink,sink,sink,sink
2968,RecaptchaHandle_getAcceptableAdditionalArgs,"get acceptable additional args from recaptcha handle returns a list of strings indicating the additional argument keys that re c a p t c h a server accept. Return type is List and no argument. information pertaining to re c a p t c h a handle, which is used to identify the initialized re c a p t c h a service",source,source,source,source
2969,RecaptchaHandle_getClientPackageName,"get client package name from recaptcha handle returns the package name of the app that calls re c a p t c h a ap. Return type is String and no argument. information pertaining to re c a p t c h a handle, which is used to identify the initialized re c a p t c h a service",source,source,source,source
2970,RecaptchaHandle_getSiteKey,"get site key from recaptcha handle returns the re c a p t c h a site key you registered to help protect your applicatio. Return type is String and no argument. information pertaining to re c a p t c h a handle, which is used to identify the initialized re c a p t c h a service",source,source,source,source
2971,RecaptchaHandle_writeToParcel,"write to parcel from recaptcha handle . information pertaining to re c a p t c h a handle, which is used to identify the initialized re c a p t c h a service",sink,sink,sink,sink
2972,RecaptchaOptionalObject<T>_ofNullable,"of nullable from recaptcha optional object< t> returns a recaptcha optional object wrapping the specified object, which can be nul. Return type is Recaptcha Optional Object and parameters are t. class for wrapping an optional object  to be used in verification result",neither,neither,neither,neither
2973,RecaptchaOptionalObject<T>_orNull,or null from recaptcha optional object< t> returns the wrapped objec. Return type is T and no argument. class for wrapping an optional object  to be used in verification result,neither,neither,neither,neither
2974,RecaptchaResultData_getTokenResult,get token result from recaptcha result data returns a re c a p t c h a toke. Return type is String and no argument. information pertaining to re c a p t c h a result data,source,source,source,source
2975,RecaptchaResultData_writeToParcel,write to parcel from recaptcha result data . information pertaining to re c a p t c h a result data,sink,sink,sink,sink
2976,VerificationHandle_getCodeLength,get code length from verification handle returns the length of the pin cod. Return type is  int and no argument. stores the information required to verify an account,source,source,source,source
2977,VerificationHandle_getOperationAbortedToken,get operation aborted token from verification handle returns a re c a p t c h a token in the case challenge accou. Return type is String and no argument. stores the information required to verify an account,source,source,source,source
2978,VerificationHandle_getSiteKey,get site key from verification handle returns the site public key you registered for using re c a p t c h. Return type is String and no argument. stores the information required to verify an account,source,source,source,source
2979,VerificationHandle_getTimeoutMinutes,get timeout minutes from verification handle returns the validity duration of the object since its creation in minute. Return type is  long and no argument. stores the information required to verify an account,source,source,source,source
2980,VerificationHandle_getVerificationToken,get verification token from verification handle returns an encrypted version of the internal verification token that will be used in verify accou. Return type is String and no argument. stores the information required to verify an account,source,source,source,source
2981,VerificationHandle_isValid,is valid from verification handle returns a boolean indicating if the verification handle is valid for verify accou. Return type is boolean and no argument. stores the information required to verify an account,source,source,source,source
2982,VerificationResult_getVerificationStatus,get verification status from verification result returns a status to provide more info on the result of the verification operatio. Return type is Status and no argument. immmutable object to hold the result of a verification operation,source,source,source,source
2983,VerificationResult_recaptchaToken,recaptcha token from verification result returns an optional containing the re c a p t c h a token if the verification operation was successful or aborte. Return type is Recaptcha Optional Object and no argument. immmutable object to hold the result of a verification operation,source,source,neither,source
2984,VerificationResult_verificationHandle,verification handle from verification result returns an optional containing a verification handle if the verification operation failed and the client is allowed to retr. Return type is Recaptcha Optional Object and no argument. immmutable object to hold the result of a verification operation,neither,neither,neither,source
2985,RecaptchaClient_challengeAccount,challenge account from recaptcha client sends a challenge to an account in order to verify the identity of the use. Return type is Task and parameters are recaptcha handle string. the main entry point for interacting with the re c a p t c h a api,neither,neither,neither,neither
2986,RecaptchaClient_close,close from recaptcha client closes the initialized recaptcha handl. Return type is Task and parameters are recaptcha handle. the main entry point for interacting with the re c a p t c h a api,neither,neither,neither,neither
2987,RecaptchaClient_execute,execute from recaptcha client returns a score indicating how likely the action was triggered by a real use. Return type is Task and parameters are recaptcha handle recaptcha action. the main entry point for interacting with the re c a p t c h a api,neither,neither,neither,neither
2988,RecaptchaClient_init,init from recaptcha client prepares and initializes a recaptcha handl. Return type is Task and parameters are string. the main entry point for interacting with the re c a p t c h a api,neither,neither,neither,neither
2989,RecaptchaClient_verifyAccount,verify account from recaptcha client verifies a pin against a verification handle obtained through a challenge accou. Return type is Task and parameters are string verification handle. the main entry point for interacting with the re c a p t c h a api,neither,neither,neither,neither
2990,Batch_await,await from batch blocks until the task is complete. Return type is R extends Result and no argument. handles a batch of pending result items,neither,neither,neither,neither
2991,Batch_await,await from batch blocks until the task is completed or has timed out waiting for the resul. Return type is R extends Result and parameters are long time unit. handles a batch of pending result items,neither,neither,neither,sink
2992,Batch_cancel,cancel from batch requests that the batch be cancele. Return type is void and no argument. handles a batch of pending result items,neither,neither,neither,neither
2993,Batch_clearResultCallback,clear result callback from batch . handles a batch of pending result items,neither,neither,neither,neither
2994,Batch_createFailedResult,create failed result from batch creates a result of type < r> that represents a failure with the specified statu. Return type is Batch Result and parameters are status. handles a batch of pending result items,neither,neither,neither,neither
2995,Batch_isCanceled,is canceled from batch indicates whether the pending result has been canceled either due to calling google api clientdisconne. Return type is boolean and no argument. handles a batch of pending result items,neither,neither,neither,neither
2996,Batch_setResultCallback,set result callback from batch set the callback here if you want the result to be delivered via a callback when the result is read. Return type is final void and parameters are result callback<?. handles a batch of pending result items,sink,sink,sink,neither
2997,Batch_setResultCallback,set result callback from batch set the callback here if you want the result to be delivered via a callback when the result is ready or has timed out waiting for the resul. Return type is final void and parameters are result callback<? long time unit. handles a batch of pending result items,sink,sink,sink,neither
2998,Batch.Builder_add,add from batch builder adds a pending result to the batc. Return type is Batch Result Token and parameters are pending result. builder for batch objects,neither,neither,neither,neither
2999,Batch.Builder_build,build from batch builder . builder for batch objects,neither,neither,neither,neither
3000,BatchResult_getStatus,get status from batch result returns the status of this resul. Return type is Status and no argument. the result of a batch operation,source,source,source,source
3001,BatchResult_take,take from batch result retrieves a result from the batc. Return type is R and parameters are batch result token. the result of a batch operation,source,source,source,source
3002,BooleanResult_equals,equals from boolean result . a result with a boolean value,neither,neither,neither,neither
3003,BooleanResult_getStatus,get status from boolean result returns the status of this resul. Return type is Status and no argument. a result with a boolean value,source,source,source,source
3004,BooleanResult_getValue,get value from boolean result . a result with a boolean value,source,source,source,source
3005,BooleanResult_hashCode,hash code from boolean result . a result with a boolean value,neither,neither,neither,neither
3006,CommonStatusCodes_getStatusCodeString,get status code string from common status codes . common status codes that are often shared across api surfaces,source,source,source,source
3007,GoogleApiClient_blockingConnect,blocking connect from google api client connects the client to google play service. Return type is Connection Result and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3008,GoogleApiClient_blockingConnect,blocking connect from google api client connects the client to google play service. Return type is Connection Result and parameters are long time unit. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3009,GoogleApiClient_clearDefaultAccountAndReconnect,clear default account and reconnect from google api client clears the account selected by the user and reconnects the client asking the user to pick an account again if google api client builderuse default accou. Return type is Pending Result and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3010,GoogleApiClient_connect,connect from google api client connects the client to google play services using the given sign in mod. Return type is void and parameters are int. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,source
3011,GoogleApiClient_connect,connect from google api client connects the client to google play service. Return type is  void and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,source
3012,GoogleApiClient_disconnect,disconnect from google api client closes the connection to google play service. Return type is  void and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3013,GoogleApiClient_dump,dump from google api client prints the google api client's state into the given strea. Return type is  void and parameters are string file descriptor print writer string[]. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3014,GoogleApiClient_dumpAll,dump all from google api client prints the state of all google api clients in the current process into the given strea. Return type is  void and parameters are string file descriptor print writer string[]. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3015,GoogleApiClient_getConnectionResult,get connection result from google api client returns the connection result for the google api client's connection to the specified ap. Return type is Connection Result and parameters are api. this class is deprecated  use google api based a p is instead  see moving past google api client,source,source,source,source
3016,GoogleApiClient_hasConnectedApi,has connected api from google api client returns whether or not this google api client has the specified api in a connected stat. Return type is  boolean and parameters are api. this class is deprecated  use google api based a p is instead  see moving past google api client,source,source,source,source
3017,GoogleApiClient_isConnected,"is connected from google api client checks if the client is currently connected to the service, so that requests to other methods will succee. Return type is  boolean and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client",source,source,source,source
3018,GoogleApiClient_isConnecting,is connecting from google api client checks if the client is attempting to connect to the servic. Return type is  boolean and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,source,source,source,source
3019,GoogleApiClient_isConnectionCallbacksRegistered,is connection callbacks registered from google api client returns true if the specified listener is currently registered to receive connection event. Return type is  boolean and parameters are google api client connection callbacks. this class is deprecated  use google api based a p is instead  see moving past google api client,source,source,source,source
3020,GoogleApiClient_isConnectionFailedListenerRegistered,is connection failed listener registered from google api client returns true if the specified listener is currently registered to receive connection failed event. Return type is  boolean and parameters are google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,source,source,source,source
3021,GoogleApiClient_reconnect,reconnect from google api client closes the current connection to google play services and creates a new connectio. Return type is  void and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3022,GoogleApiClient_registerConnectionCallbacks,register connection callbacks from google api client registers a listener to receive connection events from this google api clien. Return type is  void and parameters are google api client connection callbacks. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3023,GoogleApiClient_registerConnectionFailedListener,register connection failed listener from google api client registers a listener to receive connection failed events from this google api clien. Return type is  void and parameters are google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3024,GoogleApiClient_stopAutoManage,stop auto manage from google api client disconnects the client and stops automatic lifecycle managemen. Return type is  void and parameters are fragment activity. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3025,GoogleApiClient_unregisterConnectionCallbacks,unregister connection callbacks from google api client removes a connection listener from this google api clien. Return type is  void and parameters are google api client connection callbacks. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3026,GoogleApiClient_unregisterConnectionFailedListener,unregister connection failed listener from google api client removes a connection failed listener from the google api clien. Return type is  void and parameters are google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3027,GoogleApiClient.Builder_addApi,add api from google api client builder specify which apis are requested by your ap. Return type is Google Api Client. Builder and parameters are api o. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3028,GoogleApiClient.Builder_addApi,add api from google api client builder specify which apis are requested by your ap. Return type is Google Api Client. Builder and parameters are api<?. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3029,GoogleApiClient.Builder_addApiIfAvailable,"add api if available from google api client builder specify which apis should attempt to connect, but are not strictly required for your ap. Return type is Google Api Client. Builder and parameters are api o scope   . this class is deprecated  use google api based a p is instead  see moving past google api client",neither,neither,neither,sink
3030,GoogleApiClient.Builder_addApiIfAvailable,"add api if available from google api client builder specify which apis should attempt to connect, but are not strictly required for your ap. Return type is Google Api Client. Builder and parameters are api<? scope   . this class is deprecated  use google api based a p is instead  see moving past google api client",neither,neither,neither,sink
3031,GoogleApiClient.Builder_addConnectionCallbacks,add connection callbacks from google api client builder registers a listener to receive connection events from this google api clien. Return type is Google Api Client. Builder and parameters are google api client connection callbacks. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3032,GoogleApiClient.Builder_addOnConnectionFailedListener,add on connection failed listener from google api client builder adds a listener to register to receive connection failed events from this google api clien. Return type is Google Api Client. Builder and parameters are google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3033,GoogleApiClient.Builder_addScope,add scope from google api client builder specify the o auth 20 scopes requested by your ap. Return type is Google Api Client. Builder and parameters are scope. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3034,GoogleApiClient.Builder_build,build from google api client builder builds a new google api client object for communicating with the google api. Return type is Google Api Client and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3035,GoogleApiClient.Builder_enableAutoManage,enable auto manage from google api client builder enables automatic lifecycle management in a support library fragment activity that connects the client in fragment activityon sta. Return type is Google Api Client. Builder and parameters are fragment activity google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3036,GoogleApiClient.Builder_enableAutoManage,enable auto manage from google api client builder enables automatic lifecycle management in a support library fragment activity that connects the client in fragment activityon sta. Return type is Google Api Client. Builder and parameters are fragment activity int google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3037,GoogleApiClient.Builder_setAccountName,set account name from google api client builder specify an account name on the device that should be use. Return type is Google Api Client. Builder and parameters are string. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3038,GoogleApiClient.Builder_setGravityForPopups,set gravity for popups from google api client builder specifies the part of the screen at which games service popup. Return type is Google Api Client. Builder and parameters are int. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3039,GoogleApiClient.Builder_setHandler,set handler from google api client builder sets a handler to indicate which thread to use when invoking callback. Return type is Google Api Client. Builder and parameters are handler. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3040,GoogleApiClient.Builder_setViewForPopups,set view for popups from google api client builder sets the view to use as a content view for popup. Return type is Google Api Client. Builder and parameters are view. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3041,GoogleApiClient.Builder_useDefaultAccount,use default account from google api client builder specify that the default account should be used when connecting to service. Return type is Google Api Client. Builder and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,source
3042,OptionalPendingResult<R extendsResult>_get,get from optional pending result< r extends result> returns the result immediately if it is availabl. Return type is R and no argument. each optional pending result is a pending result with additional support for non blocking accessors,source,source,source,source
3043,OptionalPendingResult<R extendsResult>_isDone,"is done from optional pending result< r extends result> returns true if the result is available immediately, false otherwis. Return type is  boolean and no argument. each optional pending result is a pending result with additional support for non blocking accessors",neither,neither,neither,neither
3044,PendingResult<R extendsResult>_await,await from pending result< r extends result> blocks until the task is complete. Return type is R and no argument. represents a pending result from calling an api method in google play services,neither,neither,neither,sink
3045,PendingResult<R extendsResult>_await,await from pending result< r extends result> blocks until the task is completed or has timed out waiting for the resul. Return type is R and parameters are long time unit. represents a pending result from calling an api method in google play services,neither,neither,neither,sink
3046,PendingResult<R extendsResult>_cancel,cancel from pending result< r extends result> requests that the pending result be cancele. Return type is  void and no argument. represents a pending result from calling an api method in google play services,neither,neither,neither,neither
3047,PendingResult<R extendsResult>_isCanceled,is canceled from pending result< r extends result> indicates whether the pending result has been canceled either due to calling google api clientdisconne. Return type is  boolean and no argument. represents a pending result from calling an api method in google play services,neither,neither,neither,neither
3048,PendingResult<R extendsResult>_setResultCallback,set result callback from pending result< r extends result> set the callback here if you want the result to be delivered via a callback when the result is read. Return type is  void and parameters are result callback<?. represents a pending result from calling an api method in google play services,sink,sink,sink,sink
3049,PendingResult<R extendsResult>_setResultCallback,set result callback from pending result< r extends result> set the callback here if you want the result to be delivered via a callback when the result is ready or has timed out waiting for the resul. Return type is  void and parameters are result callback<? long time unit. represents a pending result from calling an api method in google play services,sink,sink,sink,sink
3050,PendingResult<R extendsResult>_then,then from pending result< r extends result> transforms the result by making another api cal. Return type is Transformed Result and parameters are result transform<? ?. represents a pending result from calling an api method in google play services,neither,neither,neither,neither
3051,PendingResults_canceledPendingResult,"canceled pending result from pending results returns a pending result that has been cancele. Return type is Pending Result and no argument. provides factory methods for pending result instances, primarily for use in tests",neither,neither,neither,neither
3052,PendingResults_canceledPendingResult,"canceled pending result from pending results returns a pending result that has been cancele. Return type is Pending Result and parameters are r. provides factory methods for pending result instances, primarily for use in tests",neither,neither,neither,neither
3053,PendingResults_immediatePendingResult,"immediate pending result from pending results returns a pending result with the specified resul. Return type is Optional Pending Result and parameters are r. provides factory methods for pending result instances, primarily for use in tests",neither,neither,neither,neither
3054,PendingResults_immediatePendingResult,"immediate pending result from pending results returns a pending result with the specified statu. Return type is Pending Result and parameters are status. provides factory methods for pending result instances, primarily for use in tests",neither,neither,neither,neither
3055,ResolvingResultCallbacks<R extendsResult>_onSuccess,on success from resolving result callbacks< r extends result> called when the result is ready and was successfu. Return type is  void and parameters are r. result callbacks which automatically start resolutions for failures,neither,neither,neither,neither
3056,ResolvingResultCallbacks<R extendsResult>_onUnresolvableFailure,on unresolvable failure from resolving result callbacks< r extends result> called when a non-resolvable failure occurs or starting a resolution fail. Return type is  void and parameters are status. result callbacks which automatically start resolutions for failures,neither,neither,neither,neither
3057,Response<T extendsResult>_setResult,set result from response< t extends result> . represents the successful result of invoking an api method in google play services using a subclass of google api,sink,sink,sink,sink
3058,ResultCallbacks<R extendsResult>_onFailure,on failure from result callbacks< r extends result> called when the result is ready and a failure occurre. Return type is  void and parameters are status. callbacks for receiving a result from a pending result as an asynchronous callback,neither,neither,neither,neither
3059,ResultCallbacks<R extendsResult>_onSuccess,on success from result callbacks< r extends result> called when the result is ready and was successfu. Return type is  void and parameters are r. callbacks for receiving a result from a pending result as an asynchronous callback,neither,neither,neither,neither
3060,"ResultTransform<R extendsResult, S extendsResult>_createFailedResult","create failed result from result transform< r extends result,  s extends result> creates a failed result with the given statu. Return type is Pending Result and parameters are status. transforms a result by making a subsequent api call",neither,neither,neither,neither
3061,"ResultTransform<R extendsResult, S extendsResult>_onFailure","on failure from result transform< r extends result,  s extends result> called when the pending result to be transformed returns a failur. Return type is Status and parameters are status. transforms a result by making a subsequent api call",neither,neither,neither,neither
3062,"ResultTransform<R extendsResult, S extendsResult>_onSuccess","on success from result transform< r extends result,  s extends result> transforms the result of a successful api cal. Return type is Pending Result and parameters are r. transforms a result by making a subsequent api call",neither,neither,neither,neither
3063,Scope_equals,equals from scope . describes an o auth 2 0 scope to request,neither,neither,neither,neither
3064,Scope_hashCode,hash code from scope . describes an o auth 2 0 scope to request,neither,neither,neither,neither
3065,Scope_toString,to string from scope . describes an o auth 2 0 scope to request,sink,source,source,neither
3066,Scope_writeToParcel,write to parcel from scope . describes an o auth 2 0 scope to request,sink,sink,sink,sink
3067,Status_equals,equals from status . represents the results of work,neither,neither,neither,neither
3068,Status_getConnectionResult,"get connection result from status returns a failed connection result, if applicabl. Return type is Connection Result and no argument. represents the results of work",source,source,source,source
3069,Status_getResolution,get resolution from status a pending intent to resolve the failur. Return type is Pending Intent and no argument. represents the results of work,source,source,source,source
3070,Status_getStatus,get status from status returns the status of this resul. Return type is Status and no argument. represents the results of work,source,source,source,source
3071,Status_getStatusCode,get status code from status indicates the status of the operatio. Return type is int and no argument. represents the results of work,source,source,source,source
3072,Status_getStatusMessage,get status message from status . represents the results of work,source,source,source,source
3073,Status_hasResolution,has resolution from status returns true if calling start resolution for resu. Return type is boolean and no argument. represents the results of work,source,source,source,source
3074,Status_hashCode,hash code from status . represents the results of work,neither,neither,neither,neither
3075,Status_isCanceled,is canceled from status returns true if the operation was cancele. Return type is boolean and no argument. represents the results of work,neither,neither,neither,neither
3076,Status_isInterrupted,is interrupted from status returns true if the operation was interrupte. Return type is boolean and no argument. represents the results of work,neither,neither,source,source
3077,Status_isSuccess,is success from status returns true if the operation was successfu. Return type is boolean and no argument. represents the results of work,source,source,source,source
3078,Status_startResolutionForResult,start resolution for result from status resolves an error by starting any intents requiring user interactio. Return type is void and parameters are activity int. represents the results of work,neither,neither,sink,sink
3079,Status_toString,to string from status . represents the results of work,neither,neither,neither,neither
3080,Status_writeToParcel,write to parcel from status . represents the results of work,sink,sink,sink,sink
3081,TransformedResult<R extendsResult>_andFinally,and finally from transformed result< r extends result> requests that the supplied callbacks are called when the result is read. Return type is  void and parameters are result callbacks<?. represents a pending result that has been transformed by one or more subsequent api calls,neither,neither,neither,neither
3082,TransformedResult<R extendsResult>_then,then from transformed result< r extends result> transforms the result by making another api cal. Return type is Transformed Result and parameters are result transform<? ?. represents a pending result that has been transformed by one or more subsequent api calls,neither,neither,neither,neither
3083,Api.ApiOptions.HasAccountOptions_getAccount,get account from api api options has account options . an interface for api api options that include an account,source,source,source,source
3084,Api.ApiOptions.HasGoogleSignInAccountOptions_getGoogleSignInAccount,get google sign in account from api api options has google sign in account options . an interface for api api options that includes a google sign in accoun,source,source,source,source
3085,Releasable_release,"release from releasable . represents a resource, or a holder of resources, which may be released once they are no longer needed",neither,neither,neither,neither
3086,Result_getStatus,get status from result returns the status of this resul. Return type is Status and no argument. represents the final result of invoking an api method in google play services,source,source,source,source
3087,ResultCallback<R extendsResult>_onResult,on result from result callback< r extends result> called when the result is read. Return type is  void and parameters are r. an interface for receiving a result from a pending result as an asynchronous callback,neither,neither,neither,neither
3088,Batch.Builder_add,add from batch builder adds a pending result to the batc. Return type is Batch Result Token and parameters are pending result. builder for batch objects,neither,neither,neither,neither
3089,Batch.Builder_build,build from batch builder . builder for batch objects,neither,neither,neither,neither
3090,GoogleApiClient.Builder_addApi,add api from google api client builder specify which apis are requested by your ap. Return type is Google Api Client. Builder and parameters are api o. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3091,GoogleApiClient.Builder_addApi,add api from google api client builder specify which apis are requested by your ap. Return type is Google Api Client. Builder and parameters are api<?. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3092,GoogleApiClient.Builder_addApiIfAvailable,"add api if available from google api client builder specify which apis should attempt to connect, but are not strictly required for your ap. Return type is Google Api Client. Builder and parameters are api o scope   . this class is deprecated  use google api based a p is instead  see moving past google api client",neither,neither,neither,sink
3093,GoogleApiClient.Builder_addApiIfAvailable,"add api if available from google api client builder specify which apis should attempt to connect, but are not strictly required for your ap. Return type is Google Api Client. Builder and parameters are api<? scope   . this class is deprecated  use google api based a p is instead  see moving past google api client",neither,neither,neither,sink
3094,GoogleApiClient.Builder_addConnectionCallbacks,add connection callbacks from google api client builder registers a listener to receive connection events from this google api clien. Return type is Google Api Client. Builder and parameters are google api client connection callbacks. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3095,GoogleApiClient.Builder_addOnConnectionFailedListener,add on connection failed listener from google api client builder adds a listener to register to receive connection failed events from this google api clien. Return type is Google Api Client. Builder and parameters are google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3096,GoogleApiClient.Builder_addScope,add scope from google api client builder specify the o auth 20 scopes requested by your ap. Return type is Google Api Client. Builder and parameters are scope. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3097,GoogleApiClient.Builder_build,build from google api client builder builds a new google api client object for communicating with the google api. Return type is Google Api Client and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,neither
3098,GoogleApiClient.Builder_enableAutoManage,enable auto manage from google api client builder enables automatic lifecycle management in a support library fragment activity that connects the client in fragment activityon sta. Return type is Google Api Client. Builder and parameters are fragment activity google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3099,GoogleApiClient.Builder_enableAutoManage,enable auto manage from google api client builder enables automatic lifecycle management in a support library fragment activity that connects the client in fragment activityon sta. Return type is Google Api Client. Builder and parameters are fragment activity int google api client on connection failed listener. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,sink
3100,GoogleApiClient.Builder_setAccountName,set account name from google api client builder specify an account name on the device that should be use. Return type is Google Api Client. Builder and parameters are string. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3101,GoogleApiClient.Builder_setGravityForPopups,set gravity for popups from google api client builder specifies the part of the screen at which games service popup. Return type is Google Api Client. Builder and parameters are int. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3102,GoogleApiClient.Builder_setHandler,set handler from google api client builder sets a handler to indicate which thread to use when invoking callback. Return type is Google Api Client. Builder and parameters are handler. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3103,GoogleApiClient.Builder_setViewForPopups,set view for popups from google api client builder sets the view to use as a content view for popup. Return type is Google Api Client. Builder and parameters are view. this class is deprecated  use google api based a p is instead  see moving past google api client,sink,sink,sink,sink
3104,GoogleApiClient.Builder_useDefaultAccount,use default account from google api client builder specify that the default account should be used when connecting to service. Return type is Google Api Client. Builder and no argument. this class is deprecated  use google api based a p is instead  see moving past google api client,neither,neither,neither,source
3105,Api.ApiOptions.HasAccountOptions_getAccount,get account from api api options has account options . an interface for api api options that include an account,source,source,source,source
3106,Api.ApiOptions.HasGoogleSignInAccountOptions_getGoogleSignInAccount,get google sign in account from api api options has google sign in account options . an interface for api api options that includes a google sign in accoun,source,source,source,source
3107,Api.ApiOptions.HasAccountOptions_getAccount,get account from api api options has account options . an interface for api api options that include an account,source,source,source,source
3108,Api.ApiOptions.HasGoogleSignInAccountOptions_getGoogleSignInAccount,get google sign in account from api api options has google sign in account options . an interface for api api options that includes a google sign in accoun,source,source,source,source
3109,BleClient_claimBleDevice,"claim ble device from ble client associates a ble device with the current user, using only the device addres. Return type is Task and parameters are string. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3110,BleClient_claimBleDevice,"claim ble device from ble client associates a ble device with the current use. Return type is Task and parameters are ble device. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3111,BleClient_listClaimedBleDevices,"list claimed ble devices from ble client lists all ble devices that are associated with the current use. Return type is Task> and no argument. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",source,source,source,neither
3112,BleClient_startBleScan,"start ble scan from ble client starts a scan for ble devices compatible with google fi. Return type is Task and parameters are list int ble scan callback. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",sink,sink,neither,sink
3113,BleClient_stopBleScan,"stop ble scan from ble client stops a ble devices sca. Return type is Task and parameters are ble scan callback. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3114,BleClient_unclaimBleDevice,"unclaim ble device from ble client disassociates a ble device with the current user, using the device's addres. Return type is Task and parameters are string. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3115,BleClient_unclaimBleDevice,"unclaim ble device from ble client disassociates a ble device with the current use. Return type is Task and parameters are ble device. this class is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3116,ConfigClient_createCustomDataType,create custom data type from config client deprecate. Return type is Task and parameters are data type create request. client for accessing custom data types and settings in google fit,sink,sink,neither,sink
3117,ConfigClient_disableFit,disable fit from config client disables google fit for an ap. Return type is Task and no argument. client for accessing custom data types and settings in google fit,neither,neither,neither,neither
3118,ConfigClient_readDataType,read data type from config client deprecate. Return type is Task and parameters are string. client for accessing custom data types and settings in google fit,source,source,source,neither
3119,Fitness_getBleClient,get ble client from fitness deprecate. Return type is Ble Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,source,source,source
3120,Fitness_getBleClient,get ble client from fitness deprecate. Return type is Ble Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,source
3121,Fitness_getConfigClient,get config client from fitness create a new instance of config client for use in a non-activity contex. Return type is Config Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,sink
3122,Fitness_getConfigClient,get config client from fitness create a new instance of config client for use in an activit. Return type is Config Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,source,source,neither
3123,Fitness_getEndTime,get end time from fitness retrieves the end time extra from the given inten. Return type is  long and parameters are intent time unit. the main entry point to google fit a p is,source,source,source,source
3124,Fitness_getGoalsClient,get goals client from fitness create a new instance of goals client for use in a non-activity contex. Return type is Goals Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,source
3125,Fitness_getGoalsClient,get goals client from fitness create a new instance of goals client for use in an activit. Return type is Goals Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,source,source,neither
3126,Fitness_getHistoryClient,get history client from fitness create a new instance of history client for use in an activit. Return type is History Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,source,source,neither
3127,Fitness_getHistoryClient,get history client from fitness create a new instance of history client for use in a non-activity contex. Return type is History Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,neither
3128,Fitness_getRecordingClient,get recording client from fitness create a new instance of recording client for use in an activit. Return type is Recording Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,source,source,neither
3129,Fitness_getRecordingClient,get recording client from fitness create a new instance of recording client for use in a non-activity contex. Return type is Recording Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,sink
3130,Fitness_getSensorsClient,get sensors client from fitness create a new instance of sensors client for use in an activit. Return type is Sensors Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,neither,source,neither
3131,Fitness_getSensorsClient,get sensors client from fitness create a new instance of sensors client for use in a non-activity contex. Return type is Sensors Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,neither
3132,Fitness_getSessionsClient,get sessions client from fitness create a new instance of sessions client for use in an activit. Return type is Sessions Client and parameters are activity google sign in account. the main entry point to google fit a p is,source,source,source,source
3133,Fitness_getSessionsClient,get sessions client from fitness create a new instance of sessions client for use in a non-activity contex. Return type is Sessions Client and parameters are context google sign in account. the main entry point to google fit a p is,source,source,source,source
3134,Fitness_getStartTime,get start time from fitness retrieves the start time extra from the given inten. Return type is  long and parameters are intent time unit. the main entry point to google fit a p is,source,source,source,source
3135,FitnessActivities_getMimeType,"get mime type from fitness activities returns the mime type for a particular activit. Return type is String and parameters are string. constants representing different user activities, such as walking, running, and cycling",source,source,source,source
3136,FitnessOptions_builder,builder from fitness options . fitness options for requesting permissions via request permissions,sink,sink,neither,neither
3137,FitnessOptions_equals,equals from fitness options . fitness options for requesting permissions via request permissions,neither,neither,neither,neither
3138,FitnessOptions_getExtensionType,get extension type from fitness options . fitness options for requesting permissions via request permissions,source,source,source,source
3139,FitnessOptions_getImpliedScopes,get implied scopes from fitness options . fitness options for requesting permissions via request permissions,source,source,source,source
3140,FitnessOptions_hashCode,hash code from fitness options . fitness options for requesting permissions via request permissions,sink,source,neither,neither
3141,FitnessOptions_toBundle,to bundle from fitness options . fitness options for requesting permissions via request permissions,sink,sink,sink,sink
3142,FitnessOptions.Builder_accessActivitySessions,access activity sessions from fitness options builder builder to build fitness options for fitness activity sessions with read or write acces. Return type is Fitness Options. Builder and parameters are int. builder to build fitness options,sink,sink,neither,sink
3143,FitnessOptions.Builder_accessSleepSessions,access sleep sessions from fitness options builder builder to build fitness options for sleep sessions with read or write acces. Return type is Fitness Options. Builder and parameters are int. builder to build fitness options,sink,sink,neither,sink
3144,FitnessOptions.Builder_addDataType,add data type from fitness options builder builder to build fitness options for given data type with read or write acces. Return type is Fitness Options. Builder and parameters are data type int. builder to build fitness options,sink,sink,sink,sink
3145,FitnessOptions.Builder_addDataType,add data type from fitness options builder builder to build fitness options for given data type with read acces. Return type is Fitness Options. Builder and parameters are data type. builder to build fitness options,sink,sink,neither,sink
3146,FitnessOptions.Builder_build,build from fitness options builder . builder to build fitness options,neither,neither,neither,neither
3147,GoalsClient_readCurrentGoals,read current goals from goals client reads current goals from the user's google fit stor. Return type is Task> and parameters are goals read request. client for reading fitness goals created by users in google fit,source,source,source,source
3148,HistoryApi.ViewIntentBuilder_build,"build from history api view intent builder returns the built intent, which can be used with start activi. Return type is Intent and no argument. builder of intents to view data stored in google fit",neither,neither,neither,neither
3149,HistoryApi.ViewIntentBuilder_setDataSource,"set data source from history api view intent builder sets the data source to display data for, if a specific data source is desire. Return type is History Api. View Intent Builder and parameters are data source. builder of intents to view data stored in google fit",sink,sink,sink,sink
3150,HistoryApi.ViewIntentBuilder_setPreferredApplication,set preferred application from history api view intent builder sets a preferred application to use for this inten. Return type is History Api. View Intent Builder and parameters are string. builder of intents to view data stored in google fit,sink,sink,sink,sink
3151,HistoryApi.ViewIntentBuilder_setTimeInterval,set time interval from history api view intent builder sets the time interval to display data fo. Return type is History Api. View Intent Builder and parameters are long long time unit. builder of intents to view data stored in google fit,sink,sink,sink,sink
3152,HistoryClient_deleteData,"delete data from history client deletes data from the user's google fit histor. Return type is Task and parameters are data delete request. client for inserting, deleting, and reading data in google fit",neither,neither,neither,neither
3153,HistoryClient_insertData,"insert data from history client inserts data collected from a data source directly into the user's google fit history, on behalf of the current applicatio. Return type is Task and parameters are data set. client for inserting, deleting, and reading data in google fit",sink,sink,sink,sink
3154,HistoryClient_readDailyTotal,"read daily total from history client reads the current daily total for the given data typ. Return type is Task and parameters are data type. client for inserting, deleting, and reading data in google fit",source,source,source,source
3155,HistoryClient_readDailyTotalFromLocalDevice,"read daily total from local device from history client reads the current daily total for the given data type from the local device onl. Return type is Task and parameters are data type. client for inserting, deleting, and reading data in google fit",source,source,source,source
3156,HistoryClient_readData,"read data from history client reads data from the user's google fit histor. Return type is Task and parameters are data read request. client for inserting, deleting, and reading data in google fit",source,source,source,neither
3157,HistoryClient_registerDataUpdateListener,"register data update listener from history client adds a pending intent listener to google fitness stor. Return type is Task and parameters are data update listener registration request. client for inserting, deleting, and reading data in google fit",neither,neither,neither,neither
3158,HistoryClient_unregisterDataUpdateListener,"unregister data update listener from history client removes pending intent, previously registered for receiving data update notifications, from google fitness stor. Return type is Task and parameters are pending intent. client for inserting, deleting, and reading data in google fit",neither,neither,neither,neither
3159,HistoryClient_updateData,"update data from history client updates data collected from a data source directly into the user's google fit history, on behalf of the current applicatio. Return type is Task and parameters are data update request. client for inserting, deleting, and reading data in google fit",sink,sink,sink,sink
3160,RecordingClient_listSubscriptions,"list subscriptions from recording client reads all existing subscriptions for the current applicatio. Return type is Task> and no argument. client which enables low power, always on background collection of sensor data into the google fit store",neither,neither,neither,neither
3161,RecordingClient_listSubscriptions,"list subscriptions from recording client reads all existing subscriptions for the current application to a particular data typ. Return type is Task> and parameters are data type. client which enables low power, always on background collection of sensor data into the google fit store",neither,neither,neither,neither
3162,RecordingClient_subscribe,"subscribe from recording client subscribe to background collection of data from a specific source on behalf of the current applicatio. Return type is Task and parameters are data source. client which enables low power, always on background collection of sensor data into the google fit store",sink,neither,sink,sink
3163,RecordingClient_subscribe,"subscribe from recording client subscribe to background collection of data of a specific type on behalf of the current applicatio. Return type is Task and parameters are data type. client which enables low power, always on background collection of sensor data into the google fit store",sink,neither,sink,sink
3164,RecordingClient_unsubscribe,"unsubscribe from recording client unsubscribes from background data collection for the current applicatio. Return type is Task and parameters are subscription. client which enables low power, always on background collection of sensor data into the google fit store",neither,neither,neither,neither
3165,RecordingClient_unsubscribe,"unsubscribe from recording client unsubscribes from background data collection for the current application for a particular data typ. Return type is Task and parameters are data type. client which enables low power, always on background collection of sensor data into the google fit store",neither,neither,neither,neither
3166,RecordingClient_unsubscribe,"unsubscribe from recording client unsubscribes from background data collection for the current application for a particular data sourc. Return type is Task and parameters are data source. client which enables low power, always on background collection of sensor data into the google fit store",neither,neither,neither,neither
3167,SensorsClient_add,"add from sensors client adds a data point listener to a sensor data sourc. Return type is Task and parameters are sensor request on data point listener. client which exposes different sources of fitness data in local and connected devices, and delivers live events to listeners",neither,neither,neither,neither
3168,SensorsClient_add,"add from sensors client adds a pending intent listener to a sensor data sourc. Return type is Task and parameters are sensor request pending intent. client which exposes different sources of fitness data in local and connected devices, and delivers live events to listeners",neither,neither,neither,sink
3169,SensorsClient_findDataSources,"find data sources from sensors client finds all available data sources, on the device and remotel. Return type is Task> and parameters are data sources request. client which exposes different sources of fitness data in local and connected devices, and delivers live events to listeners",source,source,source,source
3170,SensorsClient_remove,"remove from sensors client removes pending intent listener from a sensor data sourc. Return type is Task and parameters are pending intent. client which exposes different sources of fitness data in local and connected devices, and delivers live events to listeners",neither,neither,neither,neither
3171,SensorsClient_remove,"remove from sensors client removes a listener from a sensor data sourc. Return type is Task and parameters are on data point listener. client which exposes different sources of fitness data in local and connected devices, and delivers live events to listeners",neither,neither,neither,neither
3172,SessionsApi.ViewIntentBuilder_build,"build from sessions api view intent builder returns the built intent, which can be used with start activi. Return type is Intent and no argument. builder of intents to view sessions stored in google fit",sink,sink,sink,sink
3173,SessionsApi.ViewIntentBuilder_setPreferredApplication,set preferred application from sessions api view intent builder sets a preferred application to use for this inten. Return type is Sessions Api. View Intent Builder and parameters are string. builder of intents to view sessions stored in google fit,sink,sink,sink,sink
3174,SessionsApi.ViewIntentBuilder_setSession,set session from sessions api view intent builder sets the session to display data fo. Return type is Sessions Api. View Intent Builder and parameters are session. builder of intents to view sessions stored in google fit,sink,sink,sink,sink
3175,SessionsClient_insertSession,insert session from sessions client inserts specified session and corresponding data into the user's google fit store on behalf of the current applicatio. Return type is Task and parameters are session insert request. client for creating and managing sessions of user activity in google fit,sink,sink,sink,sink
3176,SessionsClient_readSession,read session from sessions client reads data from the user's google fit store of the specific ty. Return type is Task and parameters are session read request. client for creating and managing sessions of user activity in google fit,source,source,source,source
3177,SessionsClient_registerForSessions,register for sessions from sessions client registers for notifications of session start and end events using a pending inten. Return type is Task and parameters are pending intent. client for creating and managing sessions of user activity in google fit,neither,neither,neither,neither
3178,SessionsClient_startSession,start session from sessions client starts a new active session for the current applicatio. Return type is Task and parameters are session. client for creating and managing sessions of user activity in google fit,sink,sink,neither,sink
3179,SessionsClient_stopSession,stop session from sessions client stops active sessions for the current applicatio. Return type is Task> and parameters are string. client for creating and managing sessions of user activity in google fit,neither,neither,neither,neither
3180,SessionsClient_unregisterForSessions,unregister for sessions from sessions client unregisters from session start and end notifications using a pending inten. Return type is Task and parameters are pending intent. client for creating and managing sessions of user activity in google fit,neither,neither,neither,neither
3181,BleApi_claimBleDevice,"claim ble device from ble api associates a ble device with the current user, using only the device addres. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",source,neither,neither,neither
3182,BleApi_claimBleDevice,"claim ble device from ble api associates a ble device with the current use. Return type is Pending Result and parameters are google api client ble device. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3183,BleApi_listClaimedBleDevices,"list claimed ble devices from ble api lists all ble devices that are associated with the current use. Return type is Pending Result and parameters are google api client. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",source,source,neither,neither
3184,BleApi_startBleScan,"start ble scan from ble api deprecate. Return type is Pending Result and parameters are google api client start ble scan request. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,sink
3185,BleApi_stopBleScan,"stop ble scan from ble api stops a ble devices sca. Return type is Pending Result and parameters are google api client ble scan callback. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3186,BleApi_unclaimBleDevice,"unclaim ble device from ble api disassociates a ble device with the current user, using the device's addres. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3187,BleApi_unclaimBleDevice,"unclaim ble device from ble api disassociates a ble device with the current use. Return type is Pending Result and parameters are google api client ble device. this interface is deprecated  use bluetooth manager directly  to get data from a ble device into the fit platform, use insert data to manually insert data obtained from local sensors  this api will be removed in the future, after which it will stop working for existing users",neither,neither,neither,neither
3188,ConfigApi_createCustomDataType,create custom data type from config api deprecate. Return type is Pending Result and parameters are google api client data type create request. this interface is deprecated  use config client,neither,neither,neither,sink
3189,ConfigApi_disableFit,disable fit from config api disables google fit for an ap. Return type is Pending Result and parameters are google api client. this interface is deprecated  use config client,neither,neither,neither,neither
3190,ConfigApi_readDataType,read data type from config api deprecate. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use config client,source,source,source,source
3191,GoalsApi_readCurrentGoals,read current goals from goals api reads current goals from the user's google fit stor. Return type is Pending Result and parameters are google api client goals read request. this interface is deprecated  use goals client,source,source,source,source
3192,HistoryApi_deleteData,delete data from history api deletes data from the user's google fit histor. Return type is Pending Result and parameters are google api client data delete request. this interface is deprecated  use history client,neither,neither,neither,neither
3193,HistoryApi_insertData,"insert data from history api inserts data collected from a data source directly into the user's google fit history, on behalf of the current applicatio. Return type is Pending Result and parameters are google api client data set. this interface is deprecated  use history client",sink,sink,neither,sink
3194,HistoryApi_readDailyTotal,read daily total from history api reads the current daily total for the given data typ. Return type is Pending Result and parameters are google api client data type. this interface is deprecated  use history client,source,source,source,source
3195,HistoryApi_readDailyTotalFromLocalDevice,read daily total from local device from history api reads the current daily total for the given data type from the local device onl. Return type is Pending Result and parameters are google api client data type. this interface is deprecated  use history client,source,source,source,source
3196,HistoryApi_readData,read data from history api reads data from the user's google fit histor. Return type is Pending Result and parameters are google api client data read request. this interface is deprecated  use history client,source,source,source,source
3197,HistoryApi_registerDataUpdateListener,register data update listener from history api adds a pending intent listener to google fitness stor. Return type is Pending Result and parameters are google api client data update listener registration request. this interface is deprecated  use history client,neither,neither,neither,neither
3198,HistoryApi_unregisterDataUpdateListener,"unregister data update listener from history api removes pending intent, previously registered for receiving data update notifications, from google fitness stor. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use history client",neither,neither,neither,neither
3199,HistoryApi_updateData,"update data from history api updates data collected from a data source directly into the user's google fit history, on behalf of the current applicatio. Return type is Pending Result and parameters are google api client data update request. this interface is deprecated  use history client",sink,sink,neither,sink
3200,RecordingApi_listSubscriptions,list subscriptions from recording api reads all existing subscriptions for the current applicatio. Return type is Pending Result and parameters are google api client. this interface is deprecated  use recording client,source,source,source,neither
3201,RecordingApi_listSubscriptions,list subscriptions from recording api reads all existing subscriptions for the current application to a particular data typ. Return type is Pending Result and parameters are google api client data type. this interface is deprecated  use recording client,source,source,source,neither
3202,RecordingApi_subscribe,subscribe from recording api subscribe to background collection of data of a specific type on behalf of the current applicatio. Return type is Pending Result and parameters are google api client data type. this interface is deprecated  use recording client,neither,neither,neither,sink
3203,RecordingApi_subscribe,subscribe from recording api subscribe to background collection of data from a specific source on behalf of the current applicatio. Return type is Pending Result and parameters are google api client data source. this interface is deprecated  use recording client,neither,neither,neither,sink
3204,RecordingApi_unsubscribe,unsubscribe from recording api unsubscribes from background data collection for the current application for a particular data sourc. Return type is Pending Result and parameters are google api client data source. this interface is deprecated  use recording client,neither,neither,neither,neither
3205,RecordingApi_unsubscribe,unsubscribe from recording api unsubscribes from background data collection for the current application for a particular data typ. Return type is Pending Result and parameters are google api client data type. this interface is deprecated  use recording client,neither,neither,neither,neither
3206,RecordingApi_unsubscribe,unsubscribe from recording api unsubscribes from background data collection for the current applicatio. Return type is Pending Result and parameters are google api client subscription. this interface is deprecated  use recording client,neither,neither,neither,neither
3207,SensorsApi_add,add from sensors api adds a data point listener to a sensor data sourc. Return type is Pending Result and parameters are google api client sensor request on data point listener. this interface is deprecated  use sensors client,neither,neither,neither,sink
3208,SensorsApi_add,add from sensors api adds a pending intent listener to a sensor data sourc. Return type is Pending Result and parameters are google api client sensor request pending intent. this interface is deprecated  use sensors client,neither,neither,neither,sink
3209,SensorsApi_findDataSources,"find data sources from sensors api finds all available data sources, on the device and remotel. Return type is Pending Result and parameters are google api client data sources request. this interface is deprecated  use sensors client",source,source,source,source
3210,SensorsApi_remove,remove from sensors api removes a listener from a sensor data sourc. Return type is Pending Result and parameters are google api client on data point listener. this interface is deprecated  use sensors client,neither,neither,neither,neither
3211,SensorsApi_remove,remove from sensors api removes pending intent listener from a sensor data sourc. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use sensors client,neither,neither,neither,neither
3212,SessionsApi_insertSession,insert session from sessions api inserts specified session and corresponding data into the user's google fit store on behalf of the current applicatio. Return type is Pending Result and parameters are google api client session insert request. this interface is deprecated  use sessions client,sink,sink,sink,sink
3213,SessionsApi_readSession,read session from sessions api reads data from the user's google fit store of the specific ty. Return type is Pending Result and parameters are google api client session read request. this interface is deprecated  use sessions client,source,source,source,source
3214,SessionsApi_registerForSessions,register for sessions from sessions api registers for notifications of session start and end events using a pending inten. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use sessions client,neither,neither,neither,source
3215,SessionsApi_startSession,start session from sessions api starts a new active session for the current applicatio. Return type is Pending Result and parameters are google api client session. this interface is deprecated  use sessions client,sink,sink,neither,sink
3216,SessionsApi_stopSession,stop session from sessions api stops active sessions for the current applicatio. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use sessions client,neither,neither,neither,source
3217,SessionsApi_unregisterForSessions,unregister for sessions from sessions api unregisters from session start and end notifications using a pending inten. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use sessions client,neither,neither,neither,source
3218,FitnessOptions.Builder_accessActivitySessions,access activity sessions from fitness options builder builder to build fitness options for fitness activity sessions with read or write acces. Return type is Fitness Options. Builder and parameters are int. builder to build fitness options,sink,sink,neither,sink
3219,FitnessOptions.Builder_accessSleepSessions,access sleep sessions from fitness options builder builder to build fitness options for sleep sessions with read or write acces. Return type is Fitness Options. Builder and parameters are int. builder to build fitness options,sink,sink,neither,sink
3220,FitnessOptions.Builder_addDataType,add data type from fitness options builder builder to build fitness options for given data type with read or write acces. Return type is Fitness Options. Builder and parameters are data type int. builder to build fitness options,sink,sink,sink,sink
3221,FitnessOptions.Builder_addDataType,add data type from fitness options builder builder to build fitness options for given data type with read acces. Return type is Fitness Options. Builder and parameters are data type. builder to build fitness options,sink,sink,neither,sink
3222,FitnessOptions.Builder_build,build from fitness options builder . builder to build fitness options,neither,neither,neither,neither
3223,HistoryApi.ViewIntentBuilder_build,"build from history api view intent builder returns the built intent, which can be used with start activi. Return type is Intent and no argument. builder of intents to view data stored in google fit",neither,neither,neither,neither
3224,HistoryApi.ViewIntentBuilder_setDataSource,"set data source from history api view intent builder sets the data source to display data for, if a specific data source is desire. Return type is History Api. View Intent Builder and parameters are data source. builder of intents to view data stored in google fit",sink,sink,sink,sink
3225,HistoryApi.ViewIntentBuilder_setPreferredApplication,set preferred application from history api view intent builder sets a preferred application to use for this inten. Return type is History Api. View Intent Builder and parameters are string. builder of intents to view data stored in google fit,sink,sink,sink,sink
3226,HistoryApi.ViewIntentBuilder_setTimeInterval,set time interval from history api view intent builder sets the time interval to display data fo. Return type is History Api. View Intent Builder and parameters are long long time unit. builder of intents to view data stored in google fit,sink,sink,sink,sink
3227,SessionsApi.ViewIntentBuilder_build,"build from sessions api view intent builder returns the built intent, which can be used with start activi. Return type is Intent and no argument. builder of intents to view sessions stored in google fit",sink,sink,sink,sink
3228,SessionsApi.ViewIntentBuilder_setPreferredApplication,set preferred application from sessions api view intent builder sets a preferred application to use for this inten. Return type is Sessions Api. View Intent Builder and parameters are string. builder of intents to view sessions stored in google fit,sink,sink,sink,sink
3229,SessionsApi.ViewIntentBuilder_setSession,set session from sessions api view intent builder sets the session to display data fo. Return type is Sessions Api. View Intent Builder and parameters are session. builder of intents to view sessions stored in google fit,sink,sink,sink,sink
3230,U2fApiClient_getRegisterIntent,get register intent from u2f api client creates a task with u2f pending inten. Return type is Task and parameters are register request params. this class is deprecated  please use fido a p is instead,source,source,source,source
3231,U2fApiClient_getSignIntent,get sign intent from u2f api client creates a task with u2f pending inten. Return type is Task and parameters are sign request params. this class is deprecated  please use fido a p is instead,source,source,source,source
3232,U2fPendingIntent_hasPendingIntent,has pending intent from u2f pending intent returns true if an activity can launch the returned pending inten. Return type is  boolean and no argument. this interface is deprecated  please use fido a p is instead,neither,neither,neither,source
3233,U2fPendingIntent_launchPendingIntent,launch pending intent from u2f pending intent launches the pending inten. Return type is  void and parameters are activity int. this interface is deprecated  please use fido a p is instead,sink,sink,sink,sink
3234,FirebaseAnalytics_getAppInstanceId,"get app instance id from firebase analytics retrieves the app instance id from the service, or null if firebase analytics consent type a n a l y t i c s_ s t o r a g e has been set to firebase analytics consent status d e n i e. Return type is Task and no argument. the top level firebase analytics singleton that provides methods for logging events and setting user properties",source,source,source,source
3235,FirebaseAnalytics_getInstance,get instance from firebase analytics returns the singleton firebase analytics interfac. Return type is Firebase Analytics and parameters are context. the top level firebase analytics singleton that provides methods for logging events and setting user properties,source,source,source,neither
3236,FirebaseAnalytics_logEvent,log event from firebase analytics logs an app even. Return type is void and parameters are string bundle. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3237,FirebaseAnalytics_resetAnalyticsData,reset analytics data from firebase analytics clears all analytics data for this app from the device and resets the app instance i. Return type is void and no argument. the top level firebase analytics singleton that provides methods for logging events and setting user properties,neither,neither,neither,neither
3238,FirebaseAnalytics_setAnalyticsCollectionEnabled,set analytics collection enabled from firebase analytics sets whether analytics collection is enabled for this app on this devic. Return type is void and parameters are boolean. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3239,FirebaseAnalytics_setConsent,set consent from firebase analytics sets the applicable end user consent stat. Return type is void and parameters are map< firebase analytics consent type firebase analytics consent status>. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3240,FirebaseAnalytics_setCurrentScreen,set current screen from firebase analytics deprecate. Return type is void and parameters are activity string string. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3241,FirebaseAnalytics_setDefaultEventParameters,"set default event parameters from firebase analytics adds parameters that will be set on every event logged from the s d k, including automatic one. Return type is void and parameters are bundle. the top level firebase analytics singleton that provides methods for logging events and setting user properties",sink,sink,sink,sink
3242,FirebaseAnalytics_setSessionTimeoutDuration,set session timeout duration from firebase analytics sets the duration of inactivity that terminates the current session the default value is 180000. Return type is void and parameters are long. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3243,FirebaseAnalytics_setUserId,set user id from firebase analytics sets the user id propert. Return type is void and parameters are string. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3244,FirebaseAnalytics_setUserProperty,set user property from firebase analytics sets a user property to a given valu. Return type is void and parameters are string string. the top level firebase analytics singleton that provides methods for logging events and setting user properties,sink,sink,sink,sink
3245,CameraSource_getCameraFacing,get camera facing from camera source returns the selected camera; one of c a m e r a_ f a c i n g_ b a c k or c a m e r a_ f a c i n g_ f r o n. Return type is int and no argument. manages the camera in conjunction with an underlying detector,source,source,source,source
3246,CameraSource_getPreviewSize,get preview size from camera source returns the preview size that is currently in use by the underlying camer. Return type is Size and no argument. manages the camera in conjunction with an underlying detector,source,source,source,source
3247,CameraSource_release,release from camera source stops the camera and releases the resources of the camera and underlying detecto. Return type is void and no argument. manages the camera in conjunction with an underlying detector,neither,neither,neither,neither
3248,CameraSource_start,start from camera source opens the camera and starts sending preview frames to the underlying detecto. Return type is Camera Source and parameters are surface holder. manages the camera in conjunction with an underlying detector,neither,neither,neither,sink
3249,CameraSource_start,start from camera source opens the camera and starts sending preview frames to the underlying detecto. Return type is Camera Source and no argument. manages the camera in conjunction with an underlying detector,neither,neither,neither,sink
3250,CameraSource_stop,stop from camera source closes the camera and stops sending frames to the underlying frame detecto. Return type is void and no argument. manages the camera in conjunction with an underlying detector,neither,neither,neither,neither
3251,CameraSource_takePicture,"take picture from camera source initiates taking a picture, which happens asynchronousl. Return type is void and parameters are camera source shutter callback camera source picture callback. manages the camera in conjunction with an underlying detector",neither,sink,neither,sink
3252,CameraSource.Builder_build,build from camera source builder creates an instance of the camera sourc. Return type is Camera Source and no argument. builder for configuring and creating an associated camera source,neither,neither,neither,sink
3253,CameraSource.Builder_setAutoFocusEnabled,set auto focus enabled from camera source builder sets whether to enable camera auto focu. Return type is Camera Source. Builder and parameters are boolean. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3254,CameraSource.Builder_setFacing,set facing from camera source builder sets the camera to us. Return type is Camera Source. Builder and parameters are int. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3255,CameraSource.Builder_setFocusMode,set focus mode from camera source builder sets which focus mode will be used for camera focu. Return type is Camera Source. Builder and parameters are string. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3256,CameraSource.Builder_setRequestedFps,set requested fps from camera source builder sets the requested frame rate in frames per secon. Return type is Camera Source. Builder and parameters are float. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3257,CameraSource.Builder_setRequestedPreviewSize,set requested preview size from camera source builder sets the desired width and height of the camera frames in pixel. Return type is Camera Source. Builder and parameters are int int. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3258,Detector<T>_detect,"detect from detector< t> analyzes the supplied frame to find target item instance. Return type is Sparse Array and parameters are frame. detector is the base class for implementing specific detector instances, such as a barcode detector or face detector",neither,neither,neither,neither
3259,Detector<T>_isOperational,"is operational from detector< t> indicates whether the detector has all of the required dependencies available locally in order to do detectio. Return type is boolean and no argument. detector is the base class for implementing specific detector instances, such as a barcode detector or face detector",neither,neither,neither,neither
3260,Detector<T>_receiveFrame,"receive frame from detector< t> pipeline metho. Return type is void and parameters are frame. detector is the base class for implementing specific detector instances, such as a barcode detector or face detector",neither,neither,neither,neither
3261,Detector<T>_release,"release from detector< t> shuts down the detector, releasing any underlying resource. Return type is void and no argument. detector is the base class for implementing specific detector instances, such as a barcode detector or face detector",neither,neither,neither,neither
3262,Detector<T>_setFocus,"set focus from detector< t> sets the id of the detected item in which to exclusively track in future use of the detecto. Return type is boolean and parameters are int. detector is the base class for implementing specific detector instances, such as a barcode detector or face detector",sink,sink,sink,sink
3263,Detector<T>_setProcessor,"set processor from detector< t> pipeline metho. Return type is void and parameters are processor. detector is the base class for implementing specific detector instances, such as a barcode detector or face detector",sink,sink,sink,neither
3264,Detector.Detections<T>_detectorIsOperational,"detector is operational from detector detections< t> returns true if the detector is operational, false if it is not operationa. Return type is boolean and no argument. detection result object containing both detected items and the associated frame metadata",neither,source,neither,neither
3265,Detector.Detections<T>_getDetectedItems,get detected items from detector detections< t> returns a collection of the detected items that were identified in the fram. Return type is Sparse Array and no argument. detection result object containing both detected items and the associated frame metadata,source,source,source,source
3266,Detector.Detections<T>_getFrameMetadata,get frame metadata from detector detections< t> returns the metadata of the associated frame in which the detection originate. Return type is Frame. Metadata and no argument. detection result object containing both detected items and the associated frame metadata,source,source,source,source
3267,FocusingProcessor<T>_release,"release from focusing processor< t> notifies the associated tracker that tracking has complete. Return type is void and no argument. base class for implementing a processor which filters the set of detection results, consistently delivering a single detected item to an associated tracker",neither,neither,neither,neither
3268,FocusingProcessor<T>_selectFocus,"select focus from focusing processor< t> subclasses implement this method to select the item on which to focu. Return type is  int and parameters are detections. base class for implementing a processor which filters the set of detection results, consistently delivering a single detected item to an associated tracker",neither,neither,neither,neither
3269,Frame_getBitmap,"get bitmap from frame returns the bitmap which was specified in creating this frame, or null if no bitmap was used to create this fram. Return type is Bitmap and no argument. image data with associated metadata",source,source,source,source
3270,Frame_getGrayscaleImageData,"get grayscale image data from frame returns the grayscale version of the frame data, with one byte per pixe. Return type is Byte Buffer and no argument. image data with associated metadata",source,source,source,source
3271,Frame_getMetadata,get metadata from frame returns the metadata associated with the fram. Return type is Frame. Metadata and no argument. image data with associated metadata,source,source,source,source
3272,Frame.Builder_build,build from frame builder creates the frame instanc. Return type is Frame and no argument. builder for creating a frame instance,neither,neither,neither,neither
3273,Frame.Builder_setBitmap,set bitmap from frame builder sets the image data for the frame from a supplied bitma. Return type is Frame. Builder and parameters are bitmap. builder for creating a frame instance,sink,sink,sink,sink
3274,Frame.Builder_setId,set id from frame builder sets the frame i. Return type is Frame. Builder and parameters are int. builder for creating a frame instance,sink,sink,sink,sink
3275,Frame.Builder_setImageData,"set image data from frame builder sets the image data from the supplied byte buffer, size, and forma. Return type is Frame. Builder and parameters are byte buffer int int int. builder for creating a frame instance",sink,sink,sink,sink
3276,Frame.Builder_setRotation,"set rotation from frame builder sets the image rotation, indicating the rotation from the upright orientatio. Return type is Frame. Builder and parameters are int. builder for creating a frame instance",sink,sink,sink,sink
3277,Frame.Builder_setTimestampMillis,"set timestamp millis from frame builder sets the frame timestamp, in millisecond. Return type is Frame. Builder and parameters are long. builder for creating a frame instance",sink,sink,sink,sink
3278,Frame.Metadata_getFormat,"get format from frame metadata returns the format of this image if image data is se. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3279,Frame.Metadata_getHeight,"get height from frame metadata returns the frame heigh. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3280,Frame.Metadata_getId,"get id from frame metadata returns the frame i. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3281,Frame.Metadata_getRotation,"get rotation from frame metadata returns the image rotation, indicating the counter-clockwise rotation from the upright orientatio. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3282,Frame.Metadata_getTimestampMillis,"get timestamp millis from frame metadata returns the timestamp, in millisecond. Return type is long and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3283,Frame.Metadata_getWidth,"get width from frame metadata returns the frame widt. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3284,MultiDetector_detect,"detect from multi detector runs detection on the supplied frame with each underlying detector, returning the combined detection results from all detector. Return type is Sparse Array and parameters are frame. a multi detector is used to combine multiple detectors, so that multiple detectors can be used together on a frame or frames received from a source within a pipeline",neither,neither,neither,neither
3285,MultiDetector_isOperational,"is operational from multi detector indicates whether the detector has all of the required dependencies available locally in order to do detectio. Return type is boolean and no argument. a multi detector is used to combine multiple detectors, so that multiple detectors can be used together on a frame or frames received from a source within a pipeline",neither,neither,neither,neither
3286,MultiDetector_release,"release from multi detector releases the underlying resources associated with the multi-detector and its underlying detector. Return type is void and no argument. a multi detector is used to combine multiple detectors, so that multiple detectors can be used together on a frame or frames received from a source within a pipeline",neither,neither,neither,neither
3287,MultiDetector_setProcessor,"set processor from multi detector this method is not supported on multi detecto. Return type is void and parameters are processor. a multi detector is used to combine multiple detectors, so that multiple detectors can be used together on a frame or frames received from a source within a pipeline",sink,sink,sink,sink
3288,MultiDetector.Builder_add,add from multi detector builder adds an underlying detecto. Return type is Multi Detector. Builder and parameters are detector<?. builder for creating multi detector instances,neither,neither,neither,neither
3289,MultiDetector.Builder_build,build from multi detector builder builds and returns the multi detector instanc. Return type is Multi Detector and no argument. builder for creating multi detector instances,neither,neither,neither,neither
3290,MultiProcessor<T>_release,release from multi processor< t> frees the resources associated with this detection processo. Return type is void and no argument. detection processor which distributes the items of a detection result among individual trackers,neither,neither,neither,neither
3291,MultiProcessor.Builder<T>_build,build from multi processor builder< t> builds the multiprocessor instanc. Return type is Multi Processor and no argument. builder for creating a multiprocessor instance,neither,neither,neither,neither
3292,MultiProcessor.Builder<T>_setMaxGapFrames,set max gap frames from multi processor builder< t> sets the maximum allowable gap for inferring whether a detected item will never be seen again in the series of frames that are being processed by the detecto. Return type is Builder and parameters are int. builder for creating a multiprocessor instance,sink,sink,sink,sink
3293,Tracker<T>_onDone,on done from tracker< t> called to indicate that the item associated with the id previously reported via on new it. Return type is void and no argument. a tracker is used to receive notifications for a detected item over time,neither,neither,neither,neither
3294,Tracker<T>_onMissing,"on missing from tracker< t> called if either the tracked item was not detected at all in a frame, or if the specific item identity associated with the tracker is not present in the current fram. Return type is void and parameters are detections. a tracker is used to receive notifications for a detected item over time",neither,neither,neither,neither
3295,Tracker<T>_onNewItem,on new item from tracker< t> this method is called to initially assert a new item when it is detecte. Return type is void and parameters are int t. a tracker is used to receive notifications for a detected item over time,neither,neither,neither,neither
3296,Tracker<T>_onUpdate,"on update from tracker< t> as an item is detected over time, this method is called to give an update for the item in the context of the overall detectio. Return type is void and parameters are detections t. a tracker is used to receive notifications for a detected item over time",neither,neither,neither,neither
3297,CameraSource.PictureCallback_onPictureTaken,on picture taken from camera source picture callback called when image data is available after a picture is take. Return type is  void and parameters are byte[]. callback interface used to supply image data from a photo capture,neither,neither,neither,neither
3298,CameraSource.ShutterCallback_onShutter,on shutter from camera source shutter callback called as near as possible to the moment when a photo is captured from the senso. Return type is  void and no argument. callback interface used to signal the moment of actual image capture,neither,neither,neither,neither
3299,Detector.Processor<T>_receiveDetections,"receive detections from detector processor< t> called by the detector to deliver detection results to the processo. Return type is  void and parameters are detections. interface for defining a post processing action to be executed for each detection, when using the detector as part of a pipeline",neither,neither,neither,neither
3300,Detector.Processor<T>_release,"release from detector processor< t> shuts down and releases associated processor resource. Return type is  void and no argument. interface for defining a post processing action to be executed for each detection, when using the detector as part of a pipeline",neither,neither,neither,neither
3301,MultiProcessor.Factory<T>_create,create from multi processor factory< t> creates a tracker for receiving notifications for an associated ite. Return type is Tracker and parameters are t. factory for creating new tracker instances,neither,neither,neither,neither
3302,CameraSource.Builder_build,build from camera source builder creates an instance of the camera sourc. Return type is Camera Source and no argument. builder for configuring and creating an associated camera source,neither,neither,neither,sink
3303,CameraSource.Builder_setAutoFocusEnabled,set auto focus enabled from camera source builder sets whether to enable camera auto focu. Return type is Camera Source. Builder and parameters are boolean. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3304,CameraSource.Builder_setFacing,set facing from camera source builder sets the camera to us. Return type is Camera Source. Builder and parameters are int. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3305,CameraSource.Builder_setFocusMode,set focus mode from camera source builder sets which focus mode will be used for camera focu. Return type is Camera Source. Builder and parameters are string. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3306,CameraSource.Builder_setRequestedFps,set requested fps from camera source builder sets the requested frame rate in frames per secon. Return type is Camera Source. Builder and parameters are float. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3307,CameraSource.Builder_setRequestedPreviewSize,set requested preview size from camera source builder sets the desired width and height of the camera frames in pixel. Return type is Camera Source. Builder and parameters are int int. builder for configuring and creating an associated camera source,sink,sink,sink,sink
3308,CameraSource.PictureCallback_onPictureTaken,on picture taken from camera source picture callback called when image data is available after a picture is take. Return type is  void and parameters are byte[]. callback interface used to supply image data from a photo capture,neither,neither,neither,neither
3309,CameraSource.ShutterCallback_onShutter,on shutter from camera source shutter callback called as near as possible to the moment when a photo is captured from the senso. Return type is  void and no argument. callback interface used to signal the moment of actual image capture,neither,neither,neither,neither
3310,Frame.Builder_build,build from frame builder creates the frame instanc. Return type is Frame and no argument. builder for creating a frame instance,neither,neither,neither,neither
3311,Frame.Builder_setBitmap,set bitmap from frame builder sets the image data for the frame from a supplied bitma. Return type is Frame. Builder and parameters are bitmap. builder for creating a frame instance,sink,sink,sink,sink
3312,Frame.Builder_setId,set id from frame builder sets the frame i. Return type is Frame. Builder and parameters are int. builder for creating a frame instance,sink,sink,sink,sink
3313,Frame.Builder_setImageData,"set image data from frame builder sets the image data from the supplied byte buffer, size, and forma. Return type is Frame. Builder and parameters are byte buffer int int int. builder for creating a frame instance",sink,sink,sink,sink
3314,Frame.Builder_setRotation,"set rotation from frame builder sets the image rotation, indicating the rotation from the upright orientatio. Return type is Frame. Builder and parameters are int. builder for creating a frame instance",sink,sink,sink,sink
3315,Frame.Builder_setTimestampMillis,"set timestamp millis from frame builder sets the frame timestamp, in millisecond. Return type is Frame. Builder and parameters are long. builder for creating a frame instance",sink,sink,sink,sink
3316,Frame.Metadata_getFormat,"get format from frame metadata returns the format of this image if image data is se. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3317,Frame.Metadata_getHeight,"get height from frame metadata returns the frame heigh. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3318,Frame.Metadata_getId,"get id from frame metadata returns the frame i. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3319,Frame.Metadata_getRotation,"get rotation from frame metadata returns the image rotation, indicating the counter-clockwise rotation from the upright orientatio. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3320,Frame.Metadata_getTimestampMillis,"get timestamp millis from frame metadata returns the timestamp, in millisecond. Return type is long and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3321,Frame.Metadata_getWidth,"get width from frame metadata returns the frame widt. Return type is int and no argument. frame metadata, describing the image dimensions, rotation, and sequencing information",source,source,source,source
3322,MultiDetector.Builder_add,add from multi detector builder adds an underlying detecto. Return type is Multi Detector. Builder and parameters are detector<?. builder for creating multi detector instances,neither,neither,neither,neither
3323,MultiDetector.Builder_build,build from multi detector builder builds and returns the multi detector instanc. Return type is Multi Detector and no argument. builder for creating multi detector instances,neither,neither,neither,neither
3324,AdvertisingIdClient_getAdvertisingIdInfo,get advertising id info from advertising id client retrieves the user's advertising id and limit ad tracking preferenc. Return type is Advertising Id Client. Info and parameters are context. helper library for retrieval of advertising id and related information such as the limit ad tracking setting,source,source,source,source
3325,AdvertisingIdClient.Info_getId,get id from advertising id client info retrieves the advertising i. Return type is String and no argument. includes both the advertising id as well as the limit ad tracking setting,source,source,source,source
3326,AdvertisingIdClient.Info_isLimitAdTrackingEnabled,is limit ad tracking enabled from advertising id client info retrieves whether the user has limit ad tracking enabled or no. Return type is boolean and no argument. includes both the advertising id as well as the limit ad tracking setting,source,source,source,source
3327,AdvertisingIdClient.Info_toString,to string from advertising id client info . includes both the advertising id as well as the limit ad tracking setting,sink,sink,source,neither
3328,AdvertisingIdClient.Info_getId,get id from advertising id client info retrieves the advertising i. Return type is String and no argument. includes both the advertising id as well as the limit ad tracking setting,source,source,source,source
3329,AdvertisingIdClient.Info_isLimitAdTrackingEnabled,is limit ad tracking enabled from advertising id client info retrieves whether the user has limit ad tracking enabled or no. Return type is boolean and no argument. includes both the advertising id as well as the limit ad tracking setting,source,source,source,source
3330,AdvertisingIdClient.Info_toString,to string from advertising id client info . includes both the advertising id as well as the limit ad tracking setting,sink,sink,source,neither
3331,CancellationToken_isCancellationRequested,is cancellation requested from cancellation token checks if cancellation has been requested from the cancellation token sourc. Return type is  boolean and no argument. propagates notification that operations should be canceled,neither,neither,neither,neither
3332,CancellationToken_onCanceledRequested,on canceled requested from cancellation token adds an on token canceled listener to this cancellation toke. Return type is Cancellation Token and parameters are on token canceled listener. propagates notification that operations should be canceled,neither,neither,neither,neither
3333,CancellationTokenSource_cancel,cancel from cancellation token source cancels the cancellation token if cancellation has not been requested ye. Return type is void and no argument. creates a new cancellation token or cancels one that has already created,neither,neither,neither,neither
3334,CancellationTokenSource_getToken,get token from cancellation token source gets the cancellation token for this cancellation token sourc. Return type is Cancellation Token and no argument. creates a new cancellation token or cancels one that has already created,source,source,source,source
3335,Task<TResult>_addOnCanceledListener,add on canceled listener from task< t result> adds a listener that is called if the task is cancele. Return type is Task and parameters are on canceled listener. represents an asynchronous operation,neither,neither,neither,neither
3336,Task<TResult>_addOnCanceledListener,add on canceled listener from task< t result> adds a listener that is called if the task is cancele. Return type is Task and parameters are executor on canceled listener. represents an asynchronous operation,neither,neither,neither,neither
3337,Task<TResult>_addOnCanceledListener,add on canceled listener from task< t result> adds an activity-scoped listener that is called if the task is cancele. Return type is Task and parameters are activity on canceled listener. represents an asynchronous operation,neither,neither,neither,neither
3338,Task<TResult>_addOnCompleteListener,add on complete listener from task< t result> adds a listener that is called when the task complete. Return type is Task and parameters are on complete listener. represents an asynchronous operation,neither,neither,neither,neither
3339,Task<TResult>_addOnCompleteListener,add on complete listener from task< t result> adds an activity-scoped listener that is called when the task complete. Return type is Task and parameters are activity on complete listener. represents an asynchronous operation,neither,neither,neither,neither
3340,Task<TResult>_addOnCompleteListener,add on complete listener from task< t result> adds a listener that is called when the task complete. Return type is Task and parameters are executor on complete listener. represents an asynchronous operation,neither,neither,neither,neither
3341,Task<TResult>_addOnFailureListener,add on failure listener from task< t result> adds an activity-scoped listener that is called if the task fail. Return type is Task and parameters are activity on failure listener. represents an asynchronous operation,neither,neither,neither,neither
3342,Task<TResult>_addOnFailureListener,add on failure listener from task< t result> adds a listener that is called if the task fail. Return type is Task and parameters are on failure listener. represents an asynchronous operation,neither,neither,neither,neither
3343,Task<TResult>_addOnFailureListener,add on failure listener from task< t result> adds a listener that is called if the task fail. Return type is Task and parameters are executor on failure listener. represents an asynchronous operation,neither,neither,neither,neither
3344,Task<TResult>_addOnSuccessListener,add on success listener from task< t result> adds a listener that is called if the task completes successfull. Return type is Task and parameters are executor on success listener<?. represents an asynchronous operation,neither,neither,neither,neither
3345,Task<TResult>_addOnSuccessListener,add on success listener from task< t result> adds a listener that is called if the task completes successfull. Return type is Task and parameters are on success listener<?. represents an asynchronous operation,neither,neither,neither,neither
3346,Task<TResult>_addOnSuccessListener,add on success listener from task< t result> adds an activity-scoped listener that is called if the task completes successfull. Return type is Task and parameters are activity on success listener<?. represents an asynchronous operation,neither,neither,neither,neither
3347,Task<TResult>_continueWith,continue with from task< t result> returns a new task that will be completed with the result of applying the specified continuation to this tas. Return type is Task and parameters are continuation< t result t continuation result>. represents an asynchronous operation,neither,neither,neither,neither
3348,Task<TResult>_continueWith,continue with from task< t result> returns a new task that will be completed with the result of applying the specified continuation to this tas. Return type is Task and parameters are executor continuation< t result t continuation result>. represents an asynchronous operation,neither,neither,neither,neither
3349,Task<TResult>_continueWithTask,continue with task from task< t result> returns a new task that will be completed with the result of applying the specified continuation to this tas. Return type is Task and parameters are continuation< t result task>. represents an asynchronous operation,neither,neither,neither,neither
3350,Task<TResult>_continueWithTask,continue with task from task< t result> returns a new task that will be completed with the result of applying the specified continuation to this tas. Return type is Task and parameters are executor continuation< t result task>. represents an asynchronous operation,neither,neither,neither,neither
3351,Task<TResult>_getException,get exception from task< t result> returns the exception that caused the task to fai. Return type is Exception and no argument. represents an asynchronous operation,source,source,source,source
3352,Task<TResult>_getResult,"get result from task< t result> gets the result of the task, if it has already complete. Return type is T Result and no argument. represents an asynchronous operation",source,source,source,source
3353,Task<TResult>_getResult,"get result from task< t result> gets the result of the task, if it has already complete. Return type is T Result and parameters are class. represents an asynchronous operation",source,source,source,source
3354,Task<TResult>_isCanceled,is canceled from task< t result> returns true if the task is canceled; false otherwis. Return type is  boolean and no argument. represents an asynchronous operation,neither,neither,neither,neither
3355,Task<TResult>_isComplete,is complete from task< t result> returns true if the task is complete; false otherwis. Return type is  boolean and no argument. represents an asynchronous operation,neither,neither,neither,neither
3356,Task<TResult>_isSuccessful,is successful from task< t result> returns true if the task has completed successfully; false otherwis. Return type is  boolean and no argument. represents an asynchronous operation,source,neither,neither,source
3357,Task<TResult>_onSuccessTask,on success task from task< t result> returns a new task that will be completed with the result of applying the specified success continuation to this task when this task completes successfull. Return type is Task and parameters are executor success continuation< t result t continuation result>. represents an asynchronous operation,neither,neither,neither,neither
3358,Task<TResult>_onSuccessTask,on success task from task< t result> returns a new task that will be completed with the result of applying the specified success continuation to this task when this task completes successfull. Return type is Task and parameters are success continuation< t result t continuation result>. represents an asynchronous operation,neither,neither,neither,neither
3359,TaskCompletionSource<TResult>_getTask,get task from task completion source< t result> returns the tas. Return type is Task and no argument. provides the ability to create task based a p is,source,source,source,source
3360,TaskCompletionSource<TResult>_setException,set exception from task completion source< t result> completes the task with the specified exceptio. Return type is void and parameters are exception. provides the ability to create task based a p is,sink,sink,sink,neither
3361,TaskCompletionSource<TResult>_setResult,set result from task completion source< t result> completes the task with the specified resul. Return type is void and parameters are t result. provides the ability to create task based a p is,sink,sink,sink,sink
3362,TaskCompletionSource<TResult>_trySetException,"try set exception from task completion source< t result> completes the task with the specified exception, unless the task has already complete. Return type is boolean and parameters are exception. provides the ability to create task based a p is",neither,neither,neither,neither
3363,TaskCompletionSource<TResult>_trySetResult,"try set result from task completion source< t result> completes the task with the specified result, unless the task has already complete. Return type is boolean and parameters are t result. provides the ability to create task based a p is",sink,sink,sink,neither
3364,Tasks_await,await from tasks blocks until the specified task is complet. Return type is T Result and parameters are task long time unit. task utility methods,neither,neither,neither,sink
3365,Tasks_await,await from tasks blocks until the specified task is complet. Return type is T Result and parameters are task. task utility methods,neither,neither,neither,sink
3366,Tasks_call,call from tasks deprecate. Return type is Task and parameters are callable. task utility methods,neither,neither,neither,neither
3367,Tasks_call,call from tasks deprecate. Return type is Task and parameters are executor callable. task utility methods,neither,neither,neither,neither
3368,Tasks_forCanceled,for canceled from tasks returns a canceled tas. Return type is Task and no argument. task utility methods,neither,neither,neither,neither
3369,Tasks_forException,for exception from tasks returns a completed task with the specified exceptio. Return type is Task and parameters are exception. task utility methods,neither,neither,neither,neither
3370,Tasks_forResult,for result from tasks returns a completed task with the specified resul. Return type is Task and parameters are t result. task utility methods,neither,neither,source,neither
3371,Tasks_whenAll,when all from tasks returns a task that completes successfully when all of the specified tasks complete successfull. Return type is Task and parameters are collection<?. task utility methods,neither,neither,neither,neither
3372,Tasks_whenAll,when all from tasks returns a task that completes successfully when all of the specified tasks complete successfull. Return type is Task and parameters are task   . task utility methods,neither,neither,neither,neither
3373,Tasks_whenAllComplete,when all complete from tasks returns a task with a list of tasks that completes successfully when all of the specified tasks complet. Return type is Task>> and parameters are task   . task utility methods,neither,neither,neither,neither
3374,Tasks_whenAllComplete,when all complete from tasks returns a task with a list of tasks that completes successfully when all of the specified tasks complet. Return type is Task>> and parameters are collection<?. task utility methods,neither,neither,neither,neither
3375,Tasks_whenAllSuccess,when all success from tasks returns a task with a list of task results that completes successfully when all of the specified tasks complete successfull. Return type is Task> and parameters are task   . task utility methods,neither,neither,neither,neither
3376,Tasks_whenAllSuccess,when all success from tasks returns a task with a list of task results that completes successfully when all of the specified tasks complete successfull. Return type is Task> and parameters are collection<?. task utility methods,neither,neither,neither,neither
3377,Tasks_withTimeout,with timeout from tasks returns a new task which will return a timeout exception if a result is not returned within the specified time perio. Return type is Task and parameters are task long time unit. task utility methods,neither,neither,neither,neither
3378,"Continuation<TResult, TContinuationResult>_then","then from continuation< t result,  t continuation result> returns the result of applying this continuation to tas. Return type is T Continuation Result and parameters are task. a function that is called to continue execution after completion of a task",neither,neither,neither,neither
3379,OnCanceledListener_onCanceled,on canceled from on canceled listener called when the task is canceled successfull. Return type is  void and no argument. listener called when a task is canceled,neither,neither,neither,neither
3380,OnCompleteListener<TResult>_onComplete,on complete from on complete listener< t result> called when the task complete. Return type is  void and parameters are task. listener called when a task completes,neither,neither,neither,neither
3381,OnFailureListener_onFailure,on failure from on failure listener called when the task fails with an exceptio. Return type is  void and parameters are exception. listener called when a task fails with an exception,neither,neither,neither,neither
3382,OnSuccessListener<TResult>_onSuccess,on success from on success listener< t result> called when the task completes successfull. Return type is  void and parameters are t result. listener called when a task completes successfully,neither,neither,neither,neither
3383,OnTokenCanceledListener_onCanceled,on canceled from on token canceled listener called when the cancellation token is canceled successfull. Return type is  void and no argument. listener called when a cancellation token is canceled successfully,neither,neither,neither,neither
3384,"SuccessContinuation<TResult, TContinuationResult>_then","then from success continuation< t result,  t continuation result> returns the result of applying this success continuation to tas. Return type is Task and parameters are t result. a function that is called to continue execution then a task succeeds",neither,neither,neither,neither
3385,CloudMessage_getCollapseKey,get collapse key from cloud message gets the collapse key of the messag. Return type is String and no argument. a cloud messaging message,source,source,source,source
3386,CloudMessage_getData,get data from cloud message gets the message payload dat. Return type is Map and no argument. a cloud messaging message,source,source,source,source
3387,CloudMessage_getFrom,get from from cloud message get the sender of this messag. Return type is String and no argument. a cloud messaging message,source,source,source,source
3388,CloudMessage_getIntent,get intent from cloud message gets the broadcast intent that this message was sent throug. Return type is Intent and no argument. a cloud messaging message,source,source,source,source
3389,CloudMessage_getMessageId,get message id from cloud message gets the message's i. Return type is String and no argument. a cloud messaging message,source,source,source,source
3390,CloudMessage_getMessageType,get message type from cloud message gets the type of messag. Return type is String and no argument. a cloud messaging message,source,source,source,source
3391,CloudMessage_getOriginalPriority,get original priority from cloud message gets the original priority of messag. Return type is int and no argument. a cloud messaging message,source,source,source,source
3392,CloudMessage_getPriority,get priority from cloud message gets the priority of message as delivere. Return type is int and no argument. a cloud messaging message,source,source,source,source
3393,CloudMessage_getRawData,get raw data from cloud message gets the raw dat. Return type is byte[] and no argument. a cloud messaging message,source,source,source,source
3394,CloudMessage_getSenderId,get sender id from cloud message gets the sender id for the sender of this messag. Return type is String and no argument. a cloud messaging message,source,source,source,source
3395,CloudMessage_getSentTime,get sent time from cloud message gets the time in milliseconds from the epoch that the message was sen. Return type is long and no argument. a cloud messaging message,source,source,source,source
3396,CloudMessage_getTo,get to from cloud message gets the message destinatio. Return type is String and no argument. a cloud messaging message,source,source,source,source
3397,CloudMessage_getTtl,get ttl from cloud message gets the message time to liv. Return type is int and no argument. a cloud messaging message,source,source,source,source
3398,CloudMessage_writeToParcel,write to parcel from cloud message . a cloud messaging message,sink,sink,sink,sink
3399,CloudMessagingReceiver_onReceive,on receive from cloud messaging receiver this method is called when the broadcast receiver is receiving an intent broadcas. Return type is final void and parameters are context intent. direct use of play services cloud messaging sdk is not supported,neither,neither,neither,source
3400,Rpc_send,send from rpc send a request to google play service. Return type is Task and parameters are bundle. direct use of play services cloud messaging sdk is not supported,sink,sink,sink,sink
3401,GcmNetworkManager_cancelAllTasks,"cancel all tasks from gcm network manager cancels all tasks previously scheduled against the provided gcm task servic. Return type is void and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3402,GcmNetworkManager_cancelTask,"cancel task from gcm network manager cancel a task, specified by ta. Return type is void and parameters are string class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3403,GcmNetworkManager_getInstance,"get instance from gcm network manager use this function to access the gcm network manager ap. Return type is Gcm Network Manager and parameters are context. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3404,GcmNetworkManager_schedule,"schedule from gcm network manager entry point to schedule a task with the network manage. Return type is synchronized void and parameters are task. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,neither,neither,sink
3405,GcmTaskService_onBind,"on bind from gcm task service receives the command to begin doing work, for which it spawns another threa. Return type is I Binder and parameters are intent. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3406,GcmTaskService_onCreate,"on create from gcm task service . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3407,GcmTaskService_onDestroy,"on destroy from gcm task service . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3408,GcmTaskService_onInitializeTasks,"on initialize tasks from gcm task service when your package is removed or updated, all of its network tasks are cleared by the gcm network manage. Return type is void and no argument. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3409,GcmTaskService_onRunTask,"on run task from gcm task service override this function to provide the logic for your task executio. Return type is  int and parameters are task params. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3410,GcmTaskService_onStartCommand,"on start command from gcm task service receives the command to begin doing work, for which it spawns another threa. Return type is int and parameters are intent int int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3411,OneoffTask_getWindowEnd,"get window end from oneoff task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3412,OneoffTask_getWindowStart,"get window start from oneoff task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3413,OneoffTask_toBundle,"to bundle from oneoff task insert the task object into the provided bundle for ip. Return type is void and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,neither,neither,sink
3414,OneoffTask_toString,"to string from oneoff task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,neither,sink
3415,OneoffTask_writeToParcel,"write to parcel from oneoff task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3416,OneoffTask.Builder_build,"build from oneoff task builder . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3417,OneoffTask.Builder_setExecutionWindow,"set execution window from oneoff task builder mandatory setter for creating a one-off tas. Return type is Oneoff Task. Builder and parameters are long long. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3418,OneoffTask.Builder_setExtras,"set extras from oneoff task builder optional setter for specifying any extra parameters necessary for the tas. Return type is Oneoff Task. Builder and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3419,OneoffTask.Builder_setPersisted,"set persisted from oneoff task builder optional setter to specify whether this task should be persisted across reboot. Return type is Oneoff Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3420,OneoffTask.Builder_setRequiredNetwork,"set required network from oneoff task builder set the network state your task requires to ru. Return type is Oneoff Task. Builder and parameters are int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3421,OneoffTask.Builder_setRequiresCharging,"set requires charging from oneoff task builder set whether your task requires that the device be connected to power in order to execut. Return type is Oneoff Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3422,OneoffTask.Builder_setService,"set service from oneoff task builder set whichever gcm task service you implement to execute the logic for this tas. Return type is Oneoff Task. Builder and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3423,OneoffTask.Builder_setTag,"set tag from oneoff task builder mandatory setter for specifying the tag identifier for this tas. Return type is Oneoff Task. Builder and parameters are string. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3424,OneoffTask.Builder_setUpdateCurrent,"set update current from oneoff task builder optional setter to specify whether this task should override any preexisting tasks with the same ta. Return type is Oneoff Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3425,PeriodicTask_getFlex,"get flex from periodic task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3426,PeriodicTask_getPeriod,"get period from periodic task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3427,PeriodicTask_toBundle,"to bundle from periodic task insert the task object into the provided bundle for ip. Return type is void and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3428,PeriodicTask_toString,"to string from periodic task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,neither,sink
3429,PeriodicTask_writeToParcel,"write to parcel from periodic task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3430,PeriodicTask.Builder_build,"build from periodic task builder . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3431,PeriodicTask.Builder_setExtras,"set extras from periodic task builder optional setter for specifying any extra parameters necessary for the tas. Return type is Periodic Task. Builder and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3432,PeriodicTask.Builder_setFlex,"set flex from periodic task builder optional setter for specifying how close to the end of the period set in set peri. Return type is Periodic Task. Builder and parameters are long. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3433,PeriodicTask.Builder_setPeriod,"set period from periodic task builder mandatory setter for creating a periodic tas. Return type is Periodic Task. Builder and parameters are long. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3434,PeriodicTask.Builder_setPersisted,"set persisted from periodic task builder optional setter to specify whether this task should be persisted across reboot. Return type is Periodic Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3435,PeriodicTask.Builder_setRequiredNetwork,"set required network from periodic task builder set the network state your task requires to ru. Return type is Periodic Task. Builder and parameters are int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3436,PeriodicTask.Builder_setRequiresCharging,"set requires charging from periodic task builder set whether your task requires that the device be connected to power in order to execut. Return type is Periodic Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3437,PeriodicTask.Builder_setService,"set service from periodic task builder set whichever gcm task service you implement to execute the logic for this tas. Return type is Periodic Task. Builder and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3438,PeriodicTask.Builder_setTag,"set tag from periodic task builder mandatory setter for specifying the tag identifier for this tas. Return type is Periodic Task. Builder and parameters are string. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3439,PeriodicTask.Builder_setUpdateCurrent,"set update current from periodic task builder optional setter to specify whether this task should override any preexisting tasks with the same ta. Return type is Periodic Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3440,Task_describeContents,"describe contents from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3441,Task_getExtras,"get extras from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3442,Task_getRequiredNetwork,"get required network from task if the specified network is unavailable, your task will not be run until it i. Return type is int and no argument. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3443,Task_getRequiresCharging,"get requires charging from task if the device is not charging and this is set to true, your task will not be run until it i. Return type is boolean and no argument. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3444,Task_getServiceName,"get service name from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3445,Task_getTag,"get tag from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3446,Task_isPersisted,"is persisted from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3447,Task_isUpdateCurrent,"is update current from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,sink,sink,sink
3448,Task_writeToParcel,"write to parcel from task . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3449,Task.Builder_build,"build from task builder . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3450,Task.Builder_setExtras,"set extras from task builder optional setter for specifying any extra parameters necessary for the tas. Return type is Task. Builder and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3451,Task.Builder_setPersisted,"set persisted from task builder optional setter to specify whether this task should be persisted across reboot. Return type is Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3452,Task.Builder_setRequiredNetwork,"set required network from task builder set the network state your task requires to ru. Return type is Task. Builder and parameters are int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3453,Task.Builder_setRequiresCharging,"set requires charging from task builder set whether your task requires that the device be connected to power in order to execut. Return type is Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3454,Task.Builder_setService,"set service from task builder set whichever gcm task service you implement to execute the logic for this tas. Return type is Task. Builder and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3455,Task.Builder_setTag,"set tag from task builder mandatory setter for specifying the tag identifier for this tas. Return type is Task. Builder and parameters are string. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3456,Task.Builder_setUpdateCurrent,"set update current from task builder optional setter to specify whether this task should override any preexisting tasks with the same ta. Return type is Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3457,TaskParams_getExtras,"get extras from task params . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3458,TaskParams_getTag,"get tag from task params . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",source,source,source,source
3459,OneoffTask.Builder_build,"build from oneoff task builder . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3460,OneoffTask.Builder_setExecutionWindow,"set execution window from oneoff task builder mandatory setter for creating a one-off tas. Return type is Oneoff Task. Builder and parameters are long long. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3461,OneoffTask.Builder_setExtras,"set extras from oneoff task builder optional setter for specifying any extra parameters necessary for the tas. Return type is Oneoff Task. Builder and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3462,OneoffTask.Builder_setPersisted,"set persisted from oneoff task builder optional setter to specify whether this task should be persisted across reboot. Return type is Oneoff Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3463,OneoffTask.Builder_setRequiredNetwork,"set required network from oneoff task builder set the network state your task requires to ru. Return type is Oneoff Task. Builder and parameters are int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3464,OneoffTask.Builder_setRequiresCharging,"set requires charging from oneoff task builder set whether your task requires that the device be connected to power in order to execut. Return type is Oneoff Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3465,OneoffTask.Builder_setService,"set service from oneoff task builder set whichever gcm task service you implement to execute the logic for this tas. Return type is Oneoff Task. Builder and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3466,OneoffTask.Builder_setTag,"set tag from oneoff task builder mandatory setter for specifying the tag identifier for this tas. Return type is Oneoff Task. Builder and parameters are string. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3467,OneoffTask.Builder_setUpdateCurrent,"set update current from oneoff task builder optional setter to specify whether this task should override any preexisting tasks with the same ta. Return type is Oneoff Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3468,PeriodicTask.Builder_build,"build from periodic task builder . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,neither
3469,PeriodicTask.Builder_setExtras,"set extras from periodic task builder optional setter for specifying any extra parameters necessary for the tas. Return type is Periodic Task. Builder and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3470,PeriodicTask.Builder_setFlex,"set flex from periodic task builder optional setter for specifying how close to the end of the period set in set peri. Return type is Periodic Task. Builder and parameters are long. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3471,PeriodicTask.Builder_setPeriod,"set period from periodic task builder mandatory setter for creating a periodic tas. Return type is Periodic Task. Builder and parameters are long. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3472,PeriodicTask.Builder_setPersisted,"set persisted from periodic task builder optional setter to specify whether this task should be persisted across reboot. Return type is Periodic Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3473,PeriodicTask.Builder_setRequiredNetwork,"set required network from periodic task builder set the network state your task requires to ru. Return type is Periodic Task. Builder and parameters are int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3474,PeriodicTask.Builder_setRequiresCharging,"set requires charging from periodic task builder set whether your task requires that the device be connected to power in order to execut. Return type is Periodic Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3475,PeriodicTask.Builder_setService,"set service from periodic task builder set whichever gcm task service you implement to execute the logic for this tas. Return type is Periodic Task. Builder and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3476,PeriodicTask.Builder_setTag,"set tag from periodic task builder mandatory setter for specifying the tag identifier for this tas. Return type is Periodic Task. Builder and parameters are string. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3477,PeriodicTask.Builder_setUpdateCurrent,"set update current from periodic task builder optional setter to specify whether this task should override any preexisting tasks with the same ta. Return type is Periodic Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3478,Task.Builder_build,"build from task builder . this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",neither,neither,neither,sink
3479,Task.Builder_setExtras,"set extras from task builder optional setter for specifying any extra parameters necessary for the tas. Return type is Task. Builder and parameters are bundle. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3480,Task.Builder_setPersisted,"set persisted from task builder optional setter to specify whether this task should be persisted across reboot. Return type is Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3481,Task.Builder_setRequiredNetwork,"set required network from task builder set the network state your task requires to ru. Return type is Task. Builder and parameters are int. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3482,Task.Builder_setRequiresCharging,"set requires charging from task builder set whether your task requires that the device be connected to power in order to execut. Return type is Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3483,Task.Builder_setService,"set service from task builder set whichever gcm task service you implement to execute the logic for this tas. Return type is Task. Builder and parameters are class<?. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3484,Task.Builder_setTag,"set tag from task builder mandatory setter for specifying the tag identifier for this tas. Return type is Task. Builder and parameters are string. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3485,Task.Builder_setUpdateCurrent,"set update current from task builder optional setter to specify whether this task should override any preexisting tasks with the same ta. Return type is Task. Builder and parameters are boolean. this class is deprecated  as of november 1, 2020, g c m network manager client libraries are no longer supported  g c m network manager api calls no longer work on devices running android m and later once your app targets future android versions   migrate to jetpack work manager for your background scheduling needs",sink,sink,sink,sink
3486,BitmapDescriptorFactory_defaultMarker,"default marker from bitmap descriptor factory creates a bitmap descriptor that refers to a colorization of the default marker imag. Return type is Bitmap Descriptor and parameters are float. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,sink
3487,BitmapDescriptorFactory_defaultMarker,"default marker from bitmap descriptor factory creates a bitmap descriptor that refers to the default marker imag. Return type is Bitmap Descriptor and no argument. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,neither
3488,BitmapDescriptorFactory_fromAsset,"from asset from bitmap descriptor factory creates a bitmap descriptor using the name of a bitmap image in the assets director. Return type is Bitmap Descriptor and parameters are string. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,neither
3489,BitmapDescriptorFactory_fromBitmap,"from bitmap from bitmap descriptor factory creates a bitmap descriptor from a given bitmap imag. Return type is Bitmap Descriptor and parameters are bitmap. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,neither
3490,BitmapDescriptorFactory_fromFile,"from file from bitmap descriptor factory creates a bitmap descriptor using the name of a bitmap image file located in the internal storag. Return type is Bitmap Descriptor and parameters are string. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,neither
3491,BitmapDescriptorFactory_fromPath,"from path from bitmap descriptor factory creates a bitmap descriptor from the absolute file path of a bitmap imag. Return type is Bitmap Descriptor and parameters are string. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,neither
3492,BitmapDescriptorFactory_fromResource,"from resource from bitmap descriptor factory creates a bitmap descriptor using the resource id of a bitmap imag. Return type is Bitmap Descriptor and parameters are int. used to create a definition of a bitmap image, used for marker icons and ground overlays",neither,neither,neither,neither
3493,ButtCap_toString,"to string from butt cap . cap that is squared off exactly at the start or end vertex of a polyline with solid stroke pattern, equivalent to having no additional cap beyond the start or end vertex",neither,neither,neither,source
3494,CameraPosition_builder,"builder from camera position creates a builder for a camera position, initialized to a given positio. Return type is Camera Position. Builder and parameters are camera position. an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",neither,neither,neither,sink
3495,CameraPosition_builder,"builder from camera position creates a builder for a camera positio. Return type is Camera Position. Builder and no argument. an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",neither,neither,neither,sink
3496,CameraPosition_createFromAttributes,"create from attributes from camera position creates a camera position from the attribute se. Return type is Camera Position and parameters are context attribute set. an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",neither,neither,neither,sink
3497,CameraPosition_equals,"equals from camera position . an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",neither,neither,neither,neither
3498,CameraPosition_fromLatLngZoom,"from lat lng zoom from camera position constructs a camera position pointed for a particular target and zoom leve. Return type is Camera Position and parameters are lat lng float. an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",neither,neither,neither,sink
3499,CameraPosition_hashCode,"hash code from camera position . an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",neither,neither,neither,source
3500,CameraPosition_toString,"to string from camera position . an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",sink,sink,sink,sink
3501,CameraPosition_writeToParcel,"write to parcel from camera position . an immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing",sink,sink,sink,sink
3502,CameraPosition.Builder_bearing,"bearing from camera position builder sets the direction that the camera is pointing in, in degrees clockwise from nort. Return type is Camera Position. Builder and parameters are float. builds camera position",sink,sink,sink,sink
3503,CameraPosition.Builder_build,build from camera position builder builds a camera positio. Return type is Camera Position and no argument. builds camera position,neither,neither,neither,neither
3504,CameraPosition.Builder_target,target from camera position builder sets the location that the camera is pointing a. Return type is Camera Position. Builder and parameters are lat lng. builds camera position,sink,sink,sink,sink
3505,CameraPosition.Builder_tilt,"tilt from camera position builder sets the angle, in degrees, of the camera from the nadi. Return type is Camera Position. Builder and parameters are float. builds camera position",sink,sink,sink,sink
3506,CameraPosition.Builder_zoom,zoom from camera position builder sets the zoom level of the camer. Return type is Camera Position. Builder and parameters are float. builds camera position,sink,sink,sink,sink
3507,Cap_equals,equals from cap . immutable cap that can be applied at the start or end vertex of a polyline,neither,neither,neither,neither
3508,Cap_hashCode,hash code from cap . immutable cap that can be applied at the start or end vertex of a polyline,neither,neither,neither,neither
3509,Cap_toString,to string from cap . immutable cap that can be applied at the start or end vertex of a polyline,neither,neither,neither,sink
3510,Cap_writeToParcel,write to parcel from cap . immutable cap that can be applied at the start or end vertex of a polyline,sink,sink,sink,sink
3511,Circle_getCenter,get center from circle returns the center as a lat ln. Return type is Lat Lng and no argument. a circle on the earth's surface,source,source,source,source
3512,Circle_getFillColor,get fill color from circle returns the fill color of this circl. Return type is int and no argument. a circle on the earth's surface,source,source,source,source
3513,Circle_getId,get id from circle gets this circle's i. Return type is String and no argument. a circle on the earth's surface,source,source,source,source
3514,Circle_getRadius,"get radius from circle returns the circle's radius, in meter. Return type is double and no argument. a circle on the earth's surface",source,source,source,source
3515,Circle_getStrokeColor,get stroke color from circle returns the stroke colo. Return type is int and no argument. a circle on the earth's surface,source,source,source,source
3516,Circle_getStrokePattern,get stroke pattern from circle returns the stroke pattern of this circle's outlin. Return type is List and no argument. a circle on the earth's surface,source,source,source,source
3517,Circle_getStrokeWidth,get stroke width from circle returns the stroke widt. Return type is float and no argument. a circle on the earth's surface,source,source,source,source
3518,Circle_getTag,get tag from circle gets the tag for the circl. Return type is Object and no argument. a circle on the earth's surface,source,source,source,source
3519,Circle_getZIndex,get z index from circle returns the z inde. Return type is float and no argument. a circle on the earth's surface,source,source,source,source
3520,Circle_isClickable,is clickable from circle gets the clickability of the circl. Return type is boolean and no argument. a circle on the earth's surface,neither,neither,neither,source
3521,Circle_isVisible,is visible from circle checks whether the circle is visibl. Return type is boolean and no argument. a circle on the earth's surface,neither,neither,neither,source
3522,Circle_remove,remove from circle removes this circle from the ma. Return type is void and no argument. a circle on the earth's surface,neither,neither,neither,neither
3523,Circle_setCenter,set center from circle sets the center using a lat ln. Return type is void and parameters are lat lng. a circle on the earth's surface,sink,sink,sink,sink
3524,Circle_setClickable,set clickable from circle sets the clickability of the circl. Return type is void and parameters are boolean. a circle on the earth's surface,sink,sink,neither,source
3525,Circle_setFillColor,set fill color from circle sets the fill colo. Return type is void and parameters are int. a circle on the earth's surface,sink,sink,sink,neither
3526,Circle_setRadius,set radius from circle sets the radius in meter. Return type is void and parameters are double. a circle on the earth's surface,sink,sink,sink,sink
3527,Circle_setStrokeColor,set stroke color from circle sets the stroke colo. Return type is void and parameters are int. a circle on the earth's surface,sink,sink,sink,sink
3528,Circle_setStrokePattern,set stroke pattern from circle sets the stroke pattern of the circle's outlin. Return type is void and parameters are list. a circle on the earth's surface,sink,sink,neither,sink
3529,Circle_setStrokeWidth,set stroke width from circle sets the stroke widt. Return type is void and parameters are float. a circle on the earth's surface,sink,sink,sink,sink
3530,Circle_setTag,set tag from circle sets the tag for the circl. Return type is void and parameters are object. a circle on the earth's surface,sink,sink,sink,sink
3531,Circle_setVisible,set visible from circle sets the visibility of the circl. Return type is void and parameters are boolean. a circle on the earth's surface,sink,sink,sink,sink
3532,Circle_setZIndex,set z index from circle sets the z inde. Return type is void and parameters are float. a circle on the earth's surface,sink,sink,sink,sink
3533,CircleOptions_center,center from circle options sets the center using a lat ln. Return type is Circle Options and parameters are lat lng. defines options for a circle,neither,sink,neither,sink
3534,CircleOptions_clickable,clickable from circle options specifies whether this circle is clickabl. Return type is Circle Options and parameters are boolean. defines options for a circle,neither,neither,neither,neither
3535,CircleOptions_fillColor,fill color from circle options sets the fill colo. Return type is Circle Options and parameters are int. defines options for a circle,sink,sink,sink,neither
3536,CircleOptions_getCenter,get center from circle options returns the center as a lat ln. Return type is Lat Lng and no argument. defines options for a circle,source,source,source,source
3537,CircleOptions_getFillColor,get fill color from circle options returns the fill colo. Return type is int and no argument. defines options for a circle,source,source,source,source
3538,CircleOptions_getRadius,"get radius from circle options returns the circle's radius, in meter. Return type is double and no argument. defines options for a circle",source,source,source,source
3539,CircleOptions_getStrokeColor,get stroke color from circle options returns the stroke colo. Return type is int and no argument. defines options for a circle,source,source,source,source
3540,CircleOptions_getStrokePattern,get stroke pattern from circle options returns the stroke pattern set in this circle options object for the circle's outlin. Return type is List and no argument. defines options for a circle,source,source,source,source
3541,CircleOptions_getStrokeWidth,get stroke width from circle options returns the stroke widt. Return type is float and no argument. defines options for a circle,source,source,source,source
3542,CircleOptions_getZIndex,get z index from circle options returns the z inde. Return type is float and no argument. defines options for a circle,source,source,source,source
3543,CircleOptions_isClickable,is clickable from circle options gets the clickability setting for the circl. Return type is boolean and no argument. defines options for a circle,neither,source,neither,source
3544,CircleOptions_isVisible,is visible from circle options checks whether the circle is visibl. Return type is boolean and no argument. defines options for a circle,neither,neither,neither,neither
3545,CircleOptions_radius,radius from circle options sets the radius in meter. Return type is Circle Options and parameters are double. defines options for a circle,neither,neither,neither,neither
3546,CircleOptions_strokeColor,stroke color from circle options sets the stroke colo. Return type is Circle Options and parameters are int. defines options for a circle,sink,sink,sink,sink
3547,CircleOptions_strokePattern,stroke pattern from circle options sets a stroke pattern for the circle's outlin. Return type is Circle Options and parameters are list. defines options for a circle,neither,neither,sink,neither
3548,CircleOptions_strokeWidth,stroke width from circle options sets the stroke widt. Return type is Circle Options and parameters are float. defines options for a circle,sink,sink,sink,sink
3549,CircleOptions_visible,visible from circle options sets the visibilit. Return type is Circle Options and parameters are boolean. defines options for a circle,neither,neither,neither,neither
3550,CircleOptions_zIndex,z index from circle options sets the z inde. Return type is Circle Options and parameters are float. defines options for a circle,sink,sink,neither,sink
3551,CustomCap_toString,"to string from custom cap . bitmap overlay centered at the start or end vertex of a polyline, orientated according to the direction of the line's first or last edge and scaled with respect to the line's stroke width",neither,neither,neither,neither
3552,Dash_toString,to string from dash . an immutable class representing a dash used in the stroke pattern for a polyline or the outline of a polygon or circle,neither,neither,neither,sink
3553,Dot_toString,to string from dot . an immutable class representing a dot used in the stroke pattern for a polyline or the outline of a polygon or circle,neither,neither,neither,neither
3554,Gap_toString,to string from gap . an immutable class representing a gap used in the stroke pattern for a polyline or the outline of a polygon or circle,neither,neither,neither,sink
3555,GroundOverlay_equals,equals from ground overlay tests if this ground overlay is equal to anothe. Return type is boolean and parameters are object. a ground overlay is an image that is fixed to a map,neither,neither,neither,neither
3556,GroundOverlay_getBearing,get bearing from ground overlay gets the bearing of the ground overlay in degrees clockwise from nort. Return type is float and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3557,GroundOverlay_getBounds,get bounds from ground overlay gets the bounds for the ground overla. Return type is Lat Lng Bounds and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3558,GroundOverlay_getHeight,get height from ground overlay gets the height of the ground overla. Return type is float and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3559,GroundOverlay_getId,get id from ground overlay gets this ground overlay's i. Return type is String and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3560,GroundOverlay_getPosition,get position from ground overlay gets the location of the anchor poin. Return type is Lat Lng and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3561,GroundOverlay_getTag,get tag from ground overlay gets the tag for the circl. Return type is Object and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3562,GroundOverlay_getTransparency,get transparency from ground overlay gets the transparency of this ground overla. Return type is float and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3563,GroundOverlay_getWidth,get width from ground overlay gets the width of the ground overla. Return type is float and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3564,GroundOverlay_getZIndex,get z index from ground overlay gets the z index of this ground overla. Return type is float and no argument. a ground overlay is an image that is fixed to a map,source,source,source,source
3565,GroundOverlay_hashCode,hash code from ground overlay . a ground overlay is an image that is fixed to a map,neither,neither,neither,neither
3566,GroundOverlay_isClickable,is clickable from ground overlay gets the clickability of the ground overla. Return type is boolean and no argument. a ground overlay is an image that is fixed to a map,neither,neither,neither,source
3567,GroundOverlay_isVisible,is visible from ground overlay gets the visibility of this ground overla. Return type is boolean and no argument. a ground overlay is an image that is fixed to a map,neither,source,source,source
3568,GroundOverlay_remove,remove from ground overlay removes this ground overlay from the ma. Return type is void and no argument. a ground overlay is an image that is fixed to a map,neither,neither,neither,neither
3569,GroundOverlay_setBearing,set bearing from ground overlay sets the bearing of the ground overla. Return type is void and parameters are float. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3570,GroundOverlay_setClickable,set clickable from ground overlay sets the clickability of the ground overla. Return type is void and parameters are boolean. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3571,GroundOverlay_setDimensions,set dimensions from ground overlay sets the dimensions of the ground overla. Return type is void and parameters are float float. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3572,GroundOverlay_setDimensions,set dimensions from ground overlay sets the width of the ground overla. Return type is void and parameters are float. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3573,GroundOverlay_setImage,set image from ground overlay sets the image for the ground overla. Return type is void and parameters are bitmap descriptor. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3574,GroundOverlay_setPosition,set position from ground overlay sets the position of the ground overlay by changing the location of the anchor poin. Return type is void and parameters are lat lng. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3575,GroundOverlay_setPositionFromBounds,set position from bounds from ground overlay sets the position of the ground overlay by fitting it to the given lat lng bound. Return type is void and parameters are lat lng bounds. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3576,GroundOverlay_setTag,set tag from ground overlay sets the tag for the ground overla. Return type is void and parameters are object. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3577,GroundOverlay_setTransparency,set transparency from ground overlay sets the transparency of this ground overla. Return type is void and parameters are float. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3578,GroundOverlay_setVisible,set visible from ground overlay sets the visibility of this ground overla. Return type is void and parameters are boolean. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3579,GroundOverlay_setZIndex,set z index from ground overlay sets the z index of this ground overla. Return type is void and parameters are float. a ground overlay is an image that is fixed to a map,sink,sink,sink,sink
3580,GroundOverlayOptions_anchor,anchor from ground overlay options specifies the ancho. Return type is Ground Overlay Options and parameters are float float. defines options for a ground overlay,neither,neither,neither,sink
3581,GroundOverlayOptions_bearing,bearing from ground overlay options specifies the bearing of the ground overlay in degrees clockwise from nort. Return type is Ground Overlay Options and parameters are float. defines options for a ground overlay,neither,neither,neither,sink
3582,GroundOverlayOptions_clickable,clickable from ground overlay options specifies whether the ground overlay is clickabl. Return type is Ground Overlay Options and parameters are boolean. defines options for a ground overlay,neither,neither,neither,neither
3583,GroundOverlayOptions_getAnchorU,get anchor u from ground overlay options horizontal relative anchor; 00 and 10 denote left and right edges respectivel. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3584,GroundOverlayOptions_getAnchorV,get anchor v from ground overlay options vertical relative anchor; 00 and 10 denote top and bottom edges respectivel. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3585,GroundOverlayOptions_getBearing,get bearing from ground overlay options gets the bearing set for this ground overlay options objec. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3586,GroundOverlayOptions_getBounds,get bounds from ground overlay options gets the bounds set for this ground overlay options objec. Return type is Lat Lng Bounds and no argument. defines options for a ground overlay,source,source,source,source
3587,GroundOverlayOptions_getHeight,get height from ground overlay options gets the height set for this ground overlay options objec. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3588,GroundOverlayOptions_getImage,get image from ground overlay options gets the image descriptor set for this ground overlay options objec. Return type is Bitmap Descriptor and no argument. defines options for a ground overlay,source,source,source,source
3589,GroundOverlayOptions_getLocation,get location from ground overlay options gets the location set for this ground overlay options objec. Return type is Lat Lng and no argument. defines options for a ground overlay,source,source,source,source
3590,GroundOverlayOptions_getTransparency,get transparency from ground overlay options gets the transparency set for this ground overlay options objec. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3591,GroundOverlayOptions_getWidth,get width from ground overlay options gets the width set for this ground overlay options objec. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3592,GroundOverlayOptions_getZIndex,get z index from ground overlay options gets the z index set for this ground overlay options objec. Return type is float and no argument. defines options for a ground overlay,source,source,source,source
3593,GroundOverlayOptions_image,image from ground overlay options specifies the image for this ground overla. Return type is Ground Overlay Options and parameters are bitmap descriptor. defines options for a ground overlay,sink,sink,neither,sink
3594,GroundOverlayOptions_isClickable,is clickable from ground overlay options gets the clickability setting for this ground overlay options objec. Return type is boolean and no argument. defines options for a ground overlay,neither,neither,neither,source
3595,GroundOverlayOptions_isVisible,is visible from ground overlay options gets the visibility setting for this ground overlay options objec. Return type is boolean and no argument. defines options for a ground overlay,source,source,neither,source
3596,GroundOverlayOptions_position,position from ground overlay options specifies the position for this ground overlay using an anchor poin. Return type is Ground Overlay Options and parameters are lat lng float. defines options for a ground overlay,neither,sink,sink,sink
3597,GroundOverlayOptions_position,position from ground overlay options specifies the position for this ground overlay using an anchor poin. Return type is Ground Overlay Options and parameters are lat lng float float. defines options for a ground overlay,sink,sink,sink,sink
3598,GroundOverlayOptions_positionFromBounds,position from bounds from ground overlay options specifies the position for this ground overla. Return type is Ground Overlay Options and parameters are lat lng bounds. defines options for a ground overlay,neither,sink,neither,sink
3599,GroundOverlayOptions_transparency,transparency from ground overlay options specifies the transparency of the ground overla. Return type is Ground Overlay Options and parameters are float. defines options for a ground overlay,neither,neither,neither,sink
3600,GroundOverlayOptions_visible,visible from ground overlay options specifies the visibility for the ground overla. Return type is Ground Overlay Options and parameters are boolean. defines options for a ground overlay,neither,neither,neither,sink
3601,GroundOverlayOptions_writeToParcel,write to parcel from ground overlay options . defines options for a ground overlay,sink,sink,sink,sink
3602,GroundOverlayOptions_zIndex,"z index from ground overlay options specifies the ground overlay's z index, ie, the order in which it will be draw. Return type is Ground Overlay Options and parameters are float. defines options for a ground overlay",neither,sink,neither,sink
3603,IndoorBuilding_equals,equals from indoor building tests if this indoor building is equal to anothe. Return type is boolean and parameters are object. represents a building,neither,neither,neither,neither
3604,IndoorBuilding_getActiveLevelIndex,get active level index from indoor building gets the index in the list returned by get leve. Return type is int and no argument. represents a building,source,source,source,neither
3605,IndoorBuilding_getDefaultLevelIndex,get default level index from indoor building gets the index in the list returned by get leve. Return type is int and no argument. represents a building,source,source,source,source
3606,IndoorBuilding_getLevels,get levels from indoor building gets the levels in the buildin. Return type is List and no argument. represents a building,source,source,source,neither
3607,IndoorBuilding_hashCode,hash code from indoor building . represents a building,neither,neither,neither,neither
3608,IndoorBuilding_isUnderground,is underground from indoor building returns true if the building is entirely undergroun. Return type is boolean and no argument. represents a building,neither,neither,neither,neither
3609,IndoorLevel_activate,activate from indoor level sets this level as the visible level in its buildin. Return type is void and no argument. represents a level in a building,neither,neither,neither,neither
3610,IndoorLevel_equals,equals from indoor level tests if this indoor level is equal to anothe. Return type is boolean and parameters are object. represents a level in a building,neither,neither,neither,neither
3611,IndoorLevel_getName,"get name from indoor level localized display name for the level, e. Return type is String and no argument. represents a level in a building",source,source,source,source
3612,IndoorLevel_getShortName,"get short name from indoor level localized short display name for the level, e. Return type is String and no argument. represents a level in a building",source,source,source,source
3613,IndoorLevel_hashCode,hash code from indoor level . represents a level in a building,neither,neither,neither,neither
3614,LatLng_equals,"equals from lat lng tests if this lat lng is equal to anothe. Return type is boolean and parameters are object. an immutable class representing a pair of latitude and longitude coordinates, stored as degrees",neither,neither,neither,neither
3615,LatLng_hashCode,"hash code from lat lng . an immutable class representing a pair of latitude and longitude coordinates, stored as degrees",neither,neither,neither,neither
3616,LatLng_toString,"to string from lat lng . an immutable class representing a pair of latitude and longitude coordinates, stored as degrees",neither,sink,sink,neither
3617,LatLng_writeToParcel,"write to parcel from lat lng . an immutable class representing a pair of latitude and longitude coordinates, stored as degrees",sink,sink,sink,sink
3618,LatLngBounds_builder,builder from lat lng bounds creates a new builde. Return type is Lat Lng Bounds. Builder and no argument. an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3619,LatLngBounds_contains,contains from lat lng bounds returns whether this contains the given lat ln. Return type is boolean and parameters are lat lng. an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3620,LatLngBounds_createFromAttributes,create from attributes from lat lng bounds creates a lat lng bounds from the attribute se. Return type is Lat Lng Bounds and parameters are context attribute set. an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3621,LatLngBounds_equals,equals from lat lng bounds . an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3622,LatLngBounds_getCenter,get center from lat lng bounds returns the center of this lat lng bound. Return type is Lat Lng and no argument. an immutable class representing a latitude/longitude aligned rectangle,source,source,source,neither
3623,LatLngBounds_hashCode,hash code from lat lng bounds . an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3624,LatLngBounds_including,including from lat lng bounds returns a new lat lng bounds that extends this lat lng bounds to include the given lat ln. Return type is Lat Lng Bounds and parameters are lat lng. an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3625,LatLngBounds_toString,to string from lat lng bounds . an immutable class representing a latitude/longitude aligned rectangle,neither,neither,neither,neither
3626,LatLngBounds_writeToParcel,write to parcel from lat lng bounds . an immutable class representing a latitude/longitude aligned rectangle,sink,sink,sink,sink
3627,LatLngBounds.Builder_build,build from lat lng bounds builder creates the lat lng bound. Return type is Lat Lng Bounds and no argument. this is a builder that is able to create a minimum bound based on a set of lat lng points,neither,neither,neither,neither
3628,LatLngBounds.Builder_include,include from lat lng bounds builder includes this point for building of the bound. Return type is Lat Lng Bounds. Builder and parameters are lat lng. this is a builder that is able to create a minimum bound based on a set of lat lng points,neither,neither,neither,neither
3629,MapStyleOptions_loadRawResourceStyle,load raw resource style from map style options creates a new set of map style options based on the a json styling string loaded from a raw resource identifie. Return type is Map Style Options and parameters are context int. defines styling options for a google map,neither,neither,neither,neither
3630,MapStyleOptions_writeToParcel,write to parcel from map style options . defines styling options for a google map,sink,sink,sink,sink
3631,Marker_equals,equals from marker tests if this marker is equal to anothe. Return type is boolean and parameters are object. an icon placed at a particular point on the map's surface,neither,neither,neither,neither
3632,Marker_getAlpha,get alpha from marker gets the alpha of the marke. Return type is float and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3633,Marker_getId,get id from marker gets this marker's i. Return type is String and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3634,Marker_getPosition,get position from marker returns the position of the marke. Return type is Lat Lng and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3635,Marker_getRotation,get rotation from marker gets the rotation of the marke. Return type is float and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3636,Marker_getSnippet,get snippet from marker gets the snippet of the marke. Return type is String and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3637,Marker_getTag,get tag from marker gets the tag for the marke. Return type is Object and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3638,Marker_getTitle,get title from marker gets the title of the marke. Return type is String and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3639,Marker_getZIndex,get z index from marker returns the z index of the marke. Return type is float and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3640,Marker_hashCode,hash code from marker . an icon placed at a particular point on the map's surface,neither,neither,neither,neither
3641,Marker_hideInfoWindow,hide info window from marker hides the info window if it is shown from this marke. Return type is void and no argument. an icon placed at a particular point on the map's surface,neither,neither,neither,neither
3642,Marker_isDraggable,is draggable from marker gets the draggability of the marke. Return type is boolean and no argument. an icon placed at a particular point on the map's surface,neither,neither,neither,source
3643,Marker_isFlat,is flat from marker gets the flat setting of the marke. Return type is boolean and no argument. an icon placed at a particular point on the map's surface,neither,neither,neither,source
3644,Marker_isInfoWindowShown,is info window shown from marker returns whether the info window is currently shown above this marke. Return type is boolean and no argument. an icon placed at a particular point on the map's surface,source,source,source,source
3645,Marker_isVisible,is visible from marker gets the visibility setting of this marke. Return type is boolean and no argument. an icon placed at a particular point on the map's surface,neither,neither,source,source
3646,Marker_remove,remove from marker removes this marker from the ma. Return type is void and no argument. an icon placed at a particular point on the map's surface,neither,neither,neither,neither
3647,Marker_setAlpha,set alpha from marker sets the alph. Return type is void and parameters are float. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3648,Marker_setAnchor,set anchor from marker sets the anchor point for the marke. Return type is void and parameters are float float. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3649,Marker_setDraggable,set draggable from marker sets the draggability of the marke. Return type is void and parameters are boolean. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3650,Marker_setFlat,set flat from marker sets whether this marker should be flat against the map true or a billboard facing the camera fals. Return type is void and parameters are boolean. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3651,Marker_setIcon,set icon from marker sets the icon for the marke. Return type is void and parameters are bitmap descriptor. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3652,Marker_setInfoWindowAnchor,set info window anchor from marker specifies the point in the marker image at which to anchor the info window when it is displaye. Return type is void and parameters are float float. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3653,Marker_setPosition,set position from marker sets the location of the marke. Return type is void and parameters are lat lng. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3654,Marker_setRotation,set rotation from marker sets the rotation of the marker in degrees clockwise about the marker's anchor poin. Return type is void and parameters are float. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3655,Marker_setSnippet,set snippet from marker sets the snippet of the marke. Return type is void and parameters are string. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3656,Marker_setTag,set tag from marker sets the tag for the marke. Return type is void and parameters are object. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3657,Marker_setTitle,set title from marker sets the title of the marke. Return type is void and parameters are string. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3658,Marker_setVisible,set visible from marker sets the visibility of this marke. Return type is void and parameters are boolean. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3659,Marker_setZIndex,set z index from marker sets the z index of the marke. Return type is void and parameters are float. an icon placed at a particular point on the map's surface,sink,sink,sink,sink
3660,Marker_showInfoWindow,"show info window from marker shows the info window of this marker on the map, if this marker is visib. Return type is void and no argument. an icon placed at a particular point on the map's surface",neither,neither,neither,neither
3661,MarkerOptions_alpha,alpha from marker options sets the alph. Return type is Marker Options and parameters are float. defines marker options for a marker,sink,sink,sink,sink
3662,MarkerOptions_anchor,anchor from marker options specifies the anchor to be at a particular point in the marker imag. Return type is Marker Options and parameters are float float. defines marker options for a marker,neither,neither,neither,sink
3663,MarkerOptions_draggable,draggable from marker options sets the draggability for the marke. Return type is Marker Options and parameters are boolean. defines marker options for a marker,neither,neither,sink,source
3664,MarkerOptions_flat,flat from marker options sets whether this marker should be flat against the map true or a billboard facing the camera fals. Return type is Marker Options and parameters are boolean. defines marker options for a marker,sink,sink,sink,sink
3665,MarkerOptions_getAlpha,get alpha from marker options gets the alpha set for this marker options objec. Return type is float and no argument. defines marker options for a marker,source,source,source,source
3666,MarkerOptions_getAnchorU,"get anchor u from marker options horizontal distance, normalized to [0, 1], of the anchor from the left edg. Return type is float and no argument. defines marker options for a marker",source,source,source,source
3667,MarkerOptions_getAnchorV,"get anchor v from marker options vertical distance, normalized to [0, 1], of the anchor from the top edg. Return type is float and no argument. defines marker options for a marker",source,source,source,source
3668,MarkerOptions_getIcon,get icon from marker options gets the custom icon descriptor set for this marker options objec. Return type is Bitmap Descriptor and no argument. defines marker options for a marker,source,source,source,source
3669,MarkerOptions_getInfoWindowAnchorU,"get info window anchor u from marker options horizontal distance, normalized to [0, 1], of the info window anchor from the left edg. Return type is float and no argument. defines marker options for a marker",source,source,source,source
3670,MarkerOptions_getInfoWindowAnchorV,"get info window anchor v from marker options vertical distance, normalized to [0, 1], of the info window anchor from the top edg. Return type is float and no argument. defines marker options for a marker",source,source,source,source
3671,MarkerOptions_getPosition,get position from marker options returns the position set for this marker options objec. Return type is Lat Lng and no argument. defines marker options for a marker,source,source,source,source
3672,MarkerOptions_getRotation,get rotation from marker options gets the rotation set for this marker options objec. Return type is float and no argument. defines marker options for a marker,source,source,source,source
3673,MarkerOptions_getSnippet,get snippet from marker options gets the snippet set for this marker options objec. Return type is String and no argument. defines marker options for a marker,source,source,source,source
3674,MarkerOptions_getTitle,get title from marker options gets the title set for this marker options objec. Return type is String and no argument. defines marker options for a marker,source,source,source,source
3675,MarkerOptions_getZIndex,get z index from marker options gets the z index set for this marker options objec. Return type is float and no argument. defines marker options for a marker,source,source,source,source
3676,MarkerOptions_icon,icon from marker options sets the icon for the marke. Return type is Marker Options and parameters are bitmap descriptor. defines marker options for a marker,sink,sink,sink,sink
3677,MarkerOptions_infoWindowAnchor,info window anchor from marker options specifies the anchor point of the info window on the marker imag. Return type is Marker Options and parameters are float float. defines marker options for a marker,neither,neither,sink,sink
3678,MarkerOptions_isDraggable,is draggable from marker options gets the draggability setting for this marker options objec. Return type is boolean and no argument. defines marker options for a marker,neither,neither,neither,source
3679,MarkerOptions_isFlat,is flat from marker options gets the flat setting for this marker options objec. Return type is boolean and no argument. defines marker options for a marker,neither,neither,source,source
3680,MarkerOptions_isVisible,is visible from marker options gets the visibility setting for this marker options objec. Return type is boolean and no argument. defines marker options for a marker,neither,neither,neither,source
3681,MarkerOptions_position,position from marker options sets the location for the marke. Return type is Marker Options and parameters are lat lng. defines marker options for a marker,sink,sink,sink,sink
3682,MarkerOptions_rotation,rotation from marker options sets the rotation of the marker in degrees clockwise about the marker's anchor poin. Return type is Marker Options and parameters are float. defines marker options for a marker,sink,sink,neither,sink
3683,MarkerOptions_snippet,snippet from marker options sets the snippet for the marke. Return type is Marker Options and parameters are string. defines marker options for a marker,sink,sink,sink,sink
3684,MarkerOptions_title,title from marker options sets the title for the marke. Return type is Marker Options and parameters are string. defines marker options for a marker,sink,neither,neither,sink
3685,MarkerOptions_visible,visible from marker options sets the visibility for the marke. Return type is Marker Options and parameters are boolean. defines marker options for a marker,neither,neither,neither,sink
3686,MarkerOptions_writeToParcel,write to parcel from marker options . defines marker options for a marker,sink,sink,sink,sink
3687,MarkerOptions_zIndex,z index from marker options sets the z index for the marke. Return type is Marker Options and parameters are float. defines marker options for a marker,sink,sink,sink,sink
3688,PatternItem_equals,equals from pattern item . immutable item used in the stroke pattern for a polyline or the outline of a polygon or circle,neither,neither,neither,neither
3689,PatternItem_hashCode,hash code from pattern item . immutable item used in the stroke pattern for a polyline or the outline of a polygon or circle,neither,neither,neither,neither
3690,PatternItem_toString,to string from pattern item . immutable item used in the stroke pattern for a polyline or the outline of a polygon or circle,neither,neither,neither,neither
3691,PatternItem_writeToParcel,write to parcel from pattern item . immutable item used in the stroke pattern for a polyline or the outline of a polygon or circle,sink,sink,sink,sink
3692,PointOfInterest_writeToParcel,write to parcel from point of interest . contains information about a point of interest that was clicked on,sink,sink,sink,sink
3693,Polygon_equals,equals from polygon tests if this polygon is equal to anothe. Return type is boolean and parameters are object. a polygon on the earth's surface,neither,neither,neither,neither
3694,Polygon_getFillColor,get fill color from polygon gets the fill color of this polygo. Return type is int and no argument. a polygon on the earth's surface,source,source,source,source
3695,Polygon_getHoles,get holes from polygon returns a snapshot of the holes of this polygon at this time. Return type is List> and no argument. a polygon on the earth's surface,source,source,source,source
3696,Polygon_getId,get id from polygon gets this polygon's i. Return type is String and no argument. a polygon on the earth's surface,source,source,source,source
3697,Polygon_getPoints,get points from polygon returns a snapshot of the vertices of this polygon at this time. Return type is List and no argument. a polygon on the earth's surface,source,source,source,source
3698,Polygon_getStrokeColor,get stroke color from polygon gets the stroke color of this polygo. Return type is int and no argument. a polygon on the earth's surface,source,source,source,source
3699,Polygon_getStrokeJointType,get stroke joint type from polygon gets the stroke joint type used at all vertices of the polygon's outlin. Return type is int and no argument. a polygon on the earth's surface,source,source,source,source
3700,Polygon_getStrokePattern,get stroke pattern from polygon gets the stroke pattern of this polygon's outlin. Return type is List and no argument. a polygon on the earth's surface,source,source,source,source
3701,Polygon_getStrokeWidth,get stroke width from polygon gets the stroke width of this polygo. Return type is float and no argument. a polygon on the earth's surface,source,source,source,source
3702,Polygon_getTag,get tag from polygon gets the tag for the polygo. Return type is Object and no argument. a polygon on the earth's surface,source,source,source,source
3703,Polygon_getZIndex,get z index from polygon gets the z index of this polygo. Return type is float and no argument. a polygon on the earth's surface,source,source,source,source
3704,Polygon_hashCode,hash code from polygon . a polygon on the earth's surface,neither,neither,neither,neither
3705,Polygon_isClickable,is clickable from polygon gets the clickability of the polygo. Return type is boolean and no argument. a polygon on the earth's surface,neither,neither,neither,source
3706,Polygon_isGeodesic,is geodesic from polygon gets whether each segment of the line is drawn as a geodesic or no. Return type is boolean and no argument. a polygon on the earth's surface,neither,source,source,source
3707,Polygon_isVisible,is visible from polygon gets the visibility of this polygo. Return type is boolean and no argument. a polygon on the earth's surface,neither,source,neither,source
3708,Polygon_remove,remove from polygon removes the polygon from the ma. Return type is void and no argument. a polygon on the earth's surface,neither,neither,neither,neither
3709,Polygon_setClickable,set clickable from polygon sets the clickability of the polygo. Return type is void and parameters are boolean. a polygon on the earth's surface,sink,sink,sink,sink
3710,Polygon_setFillColor,set fill color from polygon sets the fill color of this polygo. Return type is void and parameters are int. a polygon on the earth's surface,sink,sink,sink,sink
3711,Polygon_setGeodesic,set geodesic from polygon sets whether to draw each segment of the line as a geodesic or no. Return type is void and parameters are boolean. a polygon on the earth's surface,sink,sink,sink,neither
3712,Polygon_setHoles,set holes from polygon sets the holes of this polygo. Return type is void and parameters are list<?. a polygon on the earth's surface,sink,sink,sink,sink
3713,Polygon_setPoints,set points from polygon sets the points of this polygo. Return type is void and parameters are list. a polygon on the earth's surface,sink,sink,sink,sink
3714,Polygon_setStrokeColor,set stroke color from polygon sets the stroke color of this polygo. Return type is void and parameters are int. a polygon on the earth's surface,sink,sink,sink,sink
3715,Polygon_setStrokeJointType,set stroke joint type from polygon sets the joint type for all vertices of the polygon's outlin. Return type is void and parameters are int. a polygon on the earth's surface,sink,sink,neither,sink
3716,Polygon_setStrokePattern,set stroke pattern from polygon sets the stroke pattern of the polygon's outlin. Return type is void and parameters are list. a polygon on the earth's surface,sink,sink,sink,sink
3717,Polygon_setStrokeWidth,set stroke width from polygon sets the stroke width of this polygo. Return type is void and parameters are float. a polygon on the earth's surface,sink,sink,sink,sink
3718,Polygon_setTag,set tag from polygon sets the tag for the polygo. Return type is void and parameters are object. a polygon on the earth's surface,sink,sink,sink,sink
3719,Polygon_setVisible,set visible from polygon sets the visibility of this polygo. Return type is void and parameters are boolean. a polygon on the earth's surface,sink,sink,sink,sink
3720,Polygon_setZIndex,set z index from polygon sets the z index of this polygo. Return type is void and parameters are float. a polygon on the earth's surface,sink,sink,sink,sink
3721,PolygonOptions_add,add from polygon options adds vertices to the outline of the polygon being buil. Return type is Polygon Options and parameters are lat lng   . defines options for a polygon,neither,neither,neither,neither
3722,PolygonOptions_add,add from polygon options adds a vertex to the outline of the polygon being buil. Return type is Polygon Options and parameters are lat lng. defines options for a polygon,neither,neither,neither,neither
3723,PolygonOptions_addAll,add all from polygon options adds vertices to the outline of the polygon being buil. Return type is Polygon Options and parameters are iterable. defines options for a polygon,neither,neither,neither,neither
3724,PolygonOptions_addHole,add hole from polygon options adds a hole to the polygon being buil. Return type is Polygon Options and parameters are iterable. defines options for a polygon,neither,neither,neither,neither
3725,PolygonOptions_clickable,clickable from polygon options specifies whether this polygon is clickabl. Return type is Polygon Options and parameters are boolean. defines options for a polygon,neither,neither,neither,neither
3726,PolygonOptions_fillColor,"fill color from polygon options specifies the polygon's fill color, as 32-bit arg. Return type is Polygon Options and parameters are int. defines options for a polygon",neither,neither,sink,sink
3727,PolygonOptions_geodesic,geodesic from polygon options specifies whether to draw each segment of this polygon as a geodesi. Return type is Polygon Options and parameters are boolean. defines options for a polygon,neither,neither,neither,neither
3728,PolygonOptions_getFillColor,get fill color from polygon options gets the fill color set for this polygon options objec. Return type is int and no argument. defines options for a polygon,source,source,source,source
3729,PolygonOptions_getHoles,get holes from polygon options gets the holes set for this polygon options objec. Return type is List> and no argument. defines options for a polygon,source,source,source,source
3730,PolygonOptions_getPoints,get points from polygon options gets the outline set for this polygon options objec. Return type is List and no argument. defines options for a polygon,source,source,source,source
3731,PolygonOptions_getStrokeColor,get stroke color from polygon options gets the stroke color set for this polygon options objec. Return type is int and no argument. defines options for a polygon,source,source,source,source
3732,PolygonOptions_getStrokeJointType,get stroke joint type from polygon options gets the stroke joint type set in this polygon options object for all vertices of the polygon's outlin. Return type is int and no argument. defines options for a polygon,source,source,source,source
3733,PolygonOptions_getStrokePattern,get stroke pattern from polygon options gets the stroke pattern set in this polygon options object for the polygon's outlin. Return type is List and no argument. defines options for a polygon,source,source,source,source
3734,PolygonOptions_getStrokeWidth,get stroke width from polygon options gets the stroke width set for this polygon options objec. Return type is float and no argument. defines options for a polygon,source,source,source,source
3735,PolygonOptions_getZIndex,get z index from polygon options gets the z index set for this polygon options objec. Return type is float and no argument. defines options for a polygon,source,source,source,source
3736,PolygonOptions_isClickable,is clickable from polygon options gets the clickability setting for this polygon options objec. Return type is boolean and no argument. defines options for a polygon,neither,source,neither,source
3737,PolygonOptions_isGeodesic,is geodesic from polygon options gets the geodesic setting for this polygon options objec. Return type is boolean and no argument. defines options for a polygon,source,source,source,source
3738,PolygonOptions_isVisible,is visible from polygon options gets the visibility setting for this polygon options objec. Return type is boolean and no argument. defines options for a polygon,source,source,source,source
3739,PolygonOptions_strokeColor,"stroke color from polygon options specifies the polygon's stroke color, as 32-bit arg. Return type is Polygon Options and parameters are int. defines options for a polygon",neither,neither,neither,sink
3740,PolygonOptions_strokeJointType,stroke joint type from polygon options specifies the joint type for all vertices of the polygon's outlin. Return type is Polygon Options and parameters are int. defines options for a polygon,neither,neither,neither,sink
3741,PolygonOptions_strokePattern,stroke pattern from polygon options specifies a stroke pattern for the polygon's outlin. Return type is Polygon Options and parameters are list. defines options for a polygon,neither,neither,neither,sink
3742,PolygonOptions_strokeWidth,"stroke width from polygon options specifies the polygon's stroke width, in display pixel. Return type is Polygon Options and parameters are float. defines options for a polygon",neither,neither,neither,sink
3743,PolygonOptions_visible,visible from polygon options specifies the visibility for the polygo. Return type is Polygon Options and parameters are boolean. defines options for a polygon,neither,neither,neither,neither
3744,PolygonOptions_writeToParcel,write to parcel from polygon options . defines options for a polygon,sink,sink,sink,sink
3745,PolygonOptions_zIndex,"z index from polygon options specifies the polygon's z index, ie, the order in which it will be draw. Return type is Polygon Options and parameters are float. defines options for a polygon",neither,neither,neither,sink
3746,Polyline_equals,"equals from polyline tests if this polyline is equal to anothe. Return type is boolean and parameters are object. a polyline is a list of points, where line segments are drawn between consecutive points",neither,neither,neither,neither
3747,Polyline_getColor,"get color from polyline gets the color of this polylin. Return type is int and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,source
3748,Polyline_getEndCap,"get end cap from polyline gets the cap at the end vertex of this polylin. Return type is Cap and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,source
3749,Polyline_getId,"get id from polyline gets this polyline's i. Return type is String and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,source
3750,Polyline_getJointType,"get joint type from polyline gets the joint type used at all vertices of the polyline except the start and end vertice. Return type is int and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,neither
3751,Polyline_getPattern,"get pattern from polyline gets the stroke pattern of this polylin. Return type is List and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,neither
3752,Polyline_getPoints,"get points from polyline returns a snapshot of the vertices of this polyline at this time. Return type is List and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,neither
3753,Polyline_getStartCap,"get start cap from polyline gets the cap at the start vertex of this polylin. Return type is Cap and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,source
3754,Polyline_getTag,"get tag from polyline gets the tag for the polylin. Return type is Object and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,source
3755,Polyline_getWidth,"get width from polyline gets the width of this polylin. Return type is float and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,neither
3756,Polyline_getZIndex,"get z index from polyline gets the z index of this polylin. Return type is float and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",source,source,source,source
3757,Polyline_hashCode,"hash code from polyline . a polyline is a list of points, where line segments are drawn between consecutive points",neither,neither,neither,neither
3758,Polyline_isClickable,"is clickable from polyline gets the clickability of the polylin. Return type is boolean and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",neither,neither,neither,neither
3759,Polyline_isGeodesic,"is geodesic from polyline gets whether each segment of the line is drawn as a geodesic or no. Return type is boolean and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",neither,neither,neither,neither
3760,Polyline_isVisible,"is visible from polyline gets the visibility of this polylin. Return type is boolean and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",neither,neither,neither,neither
3761,Polyline_remove,"remove from polyline removes this polyline from the ma. Return type is void and no argument. a polyline is a list of points, where line segments are drawn between consecutive points",neither,neither,neither,neither
3762,Polyline_setClickable,"set clickable from polyline sets the clickability of the polylin. Return type is void and parameters are boolean. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3763,Polyline_setColor,"set color from polyline sets the color of this polylin. Return type is void and parameters are int. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3764,Polyline_setEndCap,"set end cap from polyline sets the cap at the end vertex of this polylin. Return type is void and parameters are cap. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3765,Polyline_setGeodesic,"set geodesic from polyline sets whether to draw each segment of the line as a geodesic or no. Return type is void and parameters are boolean. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,neither
3766,Polyline_setJointType,"set joint type from polyline sets the joint type for all vertices of the polyline except the start and end vertice. Return type is void and parameters are int. a polyline is a list of points, where line segments are drawn between consecutive points",neither,sink,neither,sink
3767,Polyline_setPattern,"set pattern from polyline sets the stroke pattern of the polylin. Return type is void and parameters are list. a polyline is a list of points, where line segments are drawn between consecutive points",neither,sink,neither,sink
3768,Polyline_setPoints,"set points from polyline sets the points of this polylin. Return type is void and parameters are list. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3769,Polyline_setStartCap,"set start cap from polyline sets the cap at the start vertex of this polylin. Return type is void and parameters are cap. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3770,Polyline_setTag,"set tag from polyline sets the tag for the polylin. Return type is void and parameters are object. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3771,Polyline_setVisible,"set visible from polyline sets the visibility of this polylin. Return type is void and parameters are boolean. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3772,Polyline_setWidth,"set width from polyline sets the width of this polylin. Return type is void and parameters are float. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3773,Polyline_setZIndex,"set z index from polyline sets the z index of this polylin. Return type is void and parameters are float. a polyline is a list of points, where line segments are drawn between consecutive points",sink,sink,sink,sink
3774,PolylineOptions_add,add from polyline options adds vertices to the end of the polyline being buil. Return type is Polyline Options and parameters are lat lng   . defines options for a polyline,neither,neither,neither,neither
3775,PolylineOptions_add,add from polyline options adds a vertex to the end of the polyline being buil. Return type is Polyline Options and parameters are lat lng. defines options for a polyline,neither,neither,neither,neither
3776,PolylineOptions_addAll,add all from polyline options adds vertices to the end of the polyline being buil. Return type is Polyline Options and parameters are iterable. defines options for a polyline,neither,neither,neither,neither
3777,PolylineOptions_clickable,clickable from polyline options specifies whether this polyline is clickabl. Return type is Polyline Options and parameters are boolean. defines options for a polyline,neither,neither,neither,neither
3778,PolylineOptions_color,color from polyline options sets the color of the polyline as a 32-bit argb colo. Return type is Polyline Options and parameters are int. defines options for a polyline,sink,sink,sink,sink
3779,PolylineOptions_endCap,end cap from polyline options sets the cap at the end vertex of the polylin. Return type is Polyline Options and parameters are cap. defines options for a polyline,neither,neither,neither,sink
3780,PolylineOptions_geodesic,geodesic from polyline options specifies whether to draw each segment of this polyline as a geodesi. Return type is Polyline Options and parameters are boolean. defines options for a polyline,neither,neither,neither,neither
3781,PolylineOptions_getColor,get color from polyline options gets the color set for this polyline options objec. Return type is int and no argument. defines options for a polyline,source,source,source,source
3782,PolylineOptions_getEndCap,get end cap from polyline options gets the cap set for the end vertex in this polyline options objec. Return type is Cap and no argument. defines options for a polyline,source,source,source,source
3783,PolylineOptions_getJointType,get joint type from polyline options gets the joint type set in this polyline options object for all vertices except the start and end vertice. Return type is int and no argument. defines options for a polyline,source,source,source,source
3784,PolylineOptions_getPattern,get pattern from polyline options gets the stroke pattern set in this polyline options object for the polylin. Return type is List and no argument. defines options for a polyline,source,source,source,source
3785,PolylineOptions_getPoints,get points from polyline options gets the points set for this polyline options objec. Return type is List and no argument. defines options for a polyline,source,source,source,source
3786,PolylineOptions_getStartCap,get start cap from polyline options gets the cap set for the start vertex in this polyline options objec. Return type is Cap and no argument. defines options for a polyline,source,source,source,source
3787,PolylineOptions_getWidth,get width from polyline options gets the width set for this polyline options objec. Return type is float and no argument. defines options for a polyline,source,source,source,source
3788,PolylineOptions_getZIndex,get z index from polyline options gets the z index set for this polyline options objec. Return type is float and no argument. defines options for a polyline,source,source,source,source
3789,PolylineOptions_isClickable,is clickable from polyline options gets the clickability setting for this polyline options objec. Return type is boolean and no argument. defines options for a polyline,neither,source,neither,source
3790,PolylineOptions_isGeodesic,is geodesic from polyline options gets the geodesic setting for this polyline options objec. Return type is boolean and no argument. defines options for a polyline,source,source,neither,source
3791,PolylineOptions_isVisible,is visible from polyline options gets the visibility setting for this polyline options objec. Return type is boolean and no argument. defines options for a polyline,neither,source,source,source
3792,PolylineOptions_jointType,joint type from polyline options sets the joint type for all vertices of the polyline except the start and end vertice. Return type is Polyline Options and parameters are int. defines options for a polyline,neither,neither,neither,sink
3793,PolylineOptions_pattern,pattern from polyline options sets the stroke pattern for the polylin. Return type is Polyline Options and parameters are list. defines options for a polyline,neither,sink,neither,sink
3794,PolylineOptions_startCap,start cap from polyline options sets the cap at the start vertex of the polylin. Return type is Polyline Options and parameters are cap. defines options for a polyline,neither,sink,sink,sink
3795,PolylineOptions_visible,visible from polyline options specifies the visibility for the polylin. Return type is Polyline Options and parameters are boolean. defines options for a polyline,neither,neither,neither,neither
3796,PolylineOptions_width,width from polyline options sets the width of the polyline in screen pixel. Return type is Polyline Options and parameters are float. defines options for a polyline,sink,sink,sink,sink
3797,PolylineOptions_writeToParcel,write to parcel from polyline options . defines options for a polyline,sink,sink,sink,sink
3798,PolylineOptions_zIndex,"z index from polyline options specifies the polyline's z index, ie, the order in which it will be draw. Return type is Polyline Options and parameters are float. defines options for a polyline",neither,neither,neither,sink
3799,RoundCap_toString,"to string from round cap . cap that is a semicircle with radius equal to half the stroke width, centered at the start or end vertex of a polyline with solid stroke pattern",neither,neither,neither,sink
3800,SquareCap_toString,to string from square cap . cap that is squared off after extending half the stroke width beyond the start or end vertex of a polyline with solid stroke pattern,neither,neither,neither,neither
3801,StreetViewPanoramaCamera_builder,builder from street view panorama camera creates a builder for a street view panorama camer. Return type is Street View Panorama Camera. Builder and no argument. an immutable class that aggregates all camera position parameters,neither,neither,neither,sink
3802,StreetViewPanoramaCamera_builder,builder from street view panorama camera creates a builder for a street view panorama camer. Return type is Street View Panorama Camera. Builder and parameters are street view panorama camera. an immutable class that aggregates all camera position parameters,neither,neither,neither,sink
3803,StreetViewPanoramaCamera_equals,equals from street view panorama camera . an immutable class that aggregates all camera position parameters,neither,neither,neither,neither
3804,StreetViewPanoramaCamera_getOrientation,get orientation from street view panorama camera returns the particular camera's tilt and bearing as an orientatio. Return type is Street View Panorama Orientation and no argument. an immutable class that aggregates all camera position parameters,source,source,source,source
3805,StreetViewPanoramaCamera_hashCode,hash code from street view panorama camera . an immutable class that aggregates all camera position parameters,neither,neither,neither,source
3806,StreetViewPanoramaCamera_toString,to string from street view panorama camera . an immutable class that aggregates all camera position parameters,neither,neither,neither,sink
3807,StreetViewPanoramaCamera_writeToParcel,write to parcel from street view panorama camera . an immutable class that aggregates all camera position parameters,sink,sink,sink,sink
3808,StreetViewPanoramaCamera.Builder_bearing,"bearing from street view panorama camera builder sets the direction that the camera is pointing in, in degrees clockwise from nort. Return type is Street View Panorama Camera. Builder and parameters are float. builds panorama cameras",sink,sink,sink,sink
3809,StreetViewPanoramaCamera.Builder_build,build from street view panorama camera builder builds a street view panorama camer. Return type is Street View Panorama Camera and no argument. builds panorama cameras,neither,neither,neither,sink
3810,StreetViewPanoramaCamera.Builder_orientation,orientation from street view panorama camera builder sets the camera tilt and bearing based upon the given orientation's tilt and bearin. Return type is Street View Panorama Camera. Builder and parameters are street view panorama orientation. builds panorama cameras,sink,sink,neither,sink
3811,StreetViewPanoramaCamera.Builder_tilt,"tilt from street view panorama camera builder sets the angle, in degrees, of the camera from the horizon of the panoram. Return type is Street View Panorama Camera. Builder and parameters are float. builds panorama cameras",sink,sink,sink,sink
3812,StreetViewPanoramaCamera.Builder_zoom,zoom from street view panorama camera builder sets the zoom level of the camer. Return type is Street View Panorama Camera. Builder and parameters are float. builds panorama cameras,sink,sink,sink,sink
3813,StreetViewPanoramaLink_equals,equals from street view panorama link . an immutable class that represents a link to another street view panorama,neither,neither,neither,neither
3814,StreetViewPanoramaLink_hashCode,hash code from street view panorama link . an immutable class that represents a link to another street view panorama,neither,neither,neither,source
3815,StreetViewPanoramaLink_toString,to string from street view panorama link . an immutable class that represents a link to another street view panorama,neither,neither,neither,source
3816,StreetViewPanoramaLink_writeToParcel,write to parcel from street view panorama link . an immutable class that represents a link to another street view panorama,sink,sink,sink,sink
3817,StreetViewPanoramaLocation_equals,equals from street view panorama location . an immutable class that contains details of the user's current street view panoram,neither,neither,neither,neither
3818,StreetViewPanoramaLocation_hashCode,hash code from street view panorama location . an immutable class that contains details of the user's current street view panoram,neither,neither,neither,source
3819,StreetViewPanoramaLocation_toString,to string from street view panorama location . an immutable class that contains details of the user's current street view panoram,sink,neither,neither,sink
3820,StreetViewPanoramaLocation_writeToParcel,write to parcel from street view panorama location . an immutable class that contains details of the user's current street view panoram,sink,sink,sink,sink
3821,StreetViewPanoramaOrientation_builder,builder from street view panorama orientation creates a builder for a street view panorama orientatio. Return type is Street View Panorama Orientation. Builder and no argument. an immutable class that aggregates all user point of view parameters,neither,neither,neither,neither
3822,StreetViewPanoramaOrientation_builder,builder from street view panorama orientation creates a builder for a street view panorama orientatio. Return type is Street View Panorama Orientation. Builder and parameters are street view panorama orientation. an immutable class that aggregates all user point of view parameters,neither,neither,neither,neither
3823,StreetViewPanoramaOrientation_equals,equals from street view panorama orientation . an immutable class that aggregates all user point of view parameters,neither,neither,neither,neither
3824,StreetViewPanoramaOrientation_hashCode,hash code from street view panorama orientation . an immutable class that aggregates all user point of view parameters,neither,neither,neither,source
3825,StreetViewPanoramaOrientation_toString,to string from street view panorama orientation . an immutable class that aggregates all user point of view parameters,neither,neither,neither,source
3826,StreetViewPanoramaOrientation_writeToParcel,write to parcel from street view panorama orientation . an immutable class that aggregates all user point of view parameters,sink,sink,sink,sink
3827,StreetViewPanoramaOrientation.Builder_bearing,"bearing from street view panorama orientation builder sets the direction of the orientation, in degrees clockwise from nort. Return type is Street View Panorama Orientation. Builder and parameters are float. builds street view panorama orientations",sink,sink,neither,sink
3828,StreetViewPanoramaOrientation.Builder_build,build from street view panorama orientation builder builds a street view panorama orientatio. Return type is Street View Panorama Orientation and no argument. builds street view panorama orientations,neither,neither,neither,neither
3829,StreetViewPanoramaOrientation.Builder_tilt,"tilt from street view panorama orientation builder sets the angle, in degrees, of the orientation this value is restricted to being between -9. Return type is Street View Panorama Orientation. Builder and parameters are float. builds street view panorama orientations",sink,sink,sink,sink
3830,StreetViewSource_equals,equals from street view source . identifiers to limit street view searches to selected sources,neither,neither,neither,neither
3831,StreetViewSource_hashCode,hash code from street view source . identifiers to limit street view searches to selected sources,neither,neither,neither,neither
3832,StreetViewSource_toString,to string from street view source . identifiers to limit street view searches to selected sources,neither,neither,neither,neither
3833,StreetViewSource_writeToParcel,write to parcel from street view source . identifiers to limit street view searches to selected sources,sink,sink,sink,sink
3834,Tile_writeToParcel,write to parcel from tile . contains information about a tile that is returned by a tile provider,sink,sink,sink,sink
3835,TileOverlay_clearTileCache,clear tile cache from tile overlay clears the tile cache so that all tiles will be requested again from the tile provide. Return type is void and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,neither,neither,neither,neither
3836,TileOverlay_equals,equals from tile overlay tests if this tile overlay is equal to anothe. Return type is boolean and parameters are object. a tile overlay is a set of images which are displayed on top of the base map tiles,neither,neither,neither,neither
3837,TileOverlay_getFadeIn,get fade in from tile overlay gets whether the overlay tiles should fade i. Return type is boolean and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,source,source,source,source
3838,TileOverlay_getId,get id from tile overlay gets this tile overlay's i. Return type is String and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,source,source,source,source
3839,TileOverlay_getTransparency,get transparency from tile overlay gets the transparency of this tile overla. Return type is float and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,source,source,source,source
3840,TileOverlay_getZIndex,get z index from tile overlay gets the z index of this tile overla. Return type is float and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,source,source,source,source
3841,TileOverlay_hashCode,hash code from tile overlay . a tile overlay is a set of images which are displayed on top of the base map tiles,neither,neither,neither,source
3842,TileOverlay_isVisible,is visible from tile overlay gets the visibility of this tile overla. Return type is boolean and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,neither,neither,source,source
3843,TileOverlay_remove,remove from tile overlay removes this tile overlay from the ma. Return type is void and no argument. a tile overlay is a set of images which are displayed on top of the base map tiles,neither,neither,neither,neither
3844,TileOverlay_setFadeIn,set fade in from tile overlay sets whether the overlay tiles should fade i. Return type is void and parameters are boolean. a tile overlay is a set of images which are displayed on top of the base map tiles,sink,sink,sink,sink
3845,TileOverlay_setTransparency,set transparency from tile overlay sets the transparency of this tile overla. Return type is void and parameters are float. a tile overlay is a set of images which are displayed on top of the base map tiles,sink,sink,sink,sink
3846,TileOverlay_setVisible,set visible from tile overlay sets the visibility of this tile overla. Return type is void and parameters are boolean. a tile overlay is a set of images which are displayed on top of the base map tiles,sink,sink,sink,sink
3847,TileOverlay_setZIndex,set z index from tile overlay sets the z index of this tile overla. Return type is void and parameters are float. a tile overlay is a set of images which are displayed on top of the base map tiles,sink,sink,sink,sink
3848,TileOverlayOptions_fadeIn,fade in from tile overlay options specifies whether the tiles should fade i. Return type is Tile Overlay Options and parameters are boolean. defines options for a tile overlay,neither,neither,neither,neither
3849,TileOverlayOptions_getFadeIn,get fade in from tile overlay options gets whether the tiles should fade i. Return type is boolean and no argument. defines options for a tile overlay,source,source,source,source
3850,TileOverlayOptions_getTileProvider,get tile provider from tile overlay options gets the tile provider set for this tile overlay options objec. Return type is Tile Provider and no argument. defines options for a tile overlay,source,source,source,source
3851,TileOverlayOptions_getTransparency,get transparency from tile overlay options gets the transparency set for this tile overlay options objec. Return type is float and no argument. defines options for a tile overlay,source,source,source,source
3852,TileOverlayOptions_getZIndex,get z index from tile overlay options gets the z index set for this tile overlay options objec. Return type is float and no argument. defines options for a tile overlay,source,source,source,source
3853,TileOverlayOptions_isVisible,is visible from tile overlay options gets the visibility setting for this tile overlay options objec. Return type is boolean and no argument. defines options for a tile overlay,neither,source,source,source
3854,TileOverlayOptions_tileProvider,tile provider from tile overlay options specifies the tile provider to use for this tile overla. Return type is Tile Overlay Options and parameters are tile provider. defines options for a tile overlay,neither,neither,neither,source
3855,TileOverlayOptions_transparency,transparency from tile overlay options specifies the transparency of the tile overla. Return type is Tile Overlay Options and parameters are float. defines options for a tile overlay,neither,neither,neither,source
3856,TileOverlayOptions_visible,visible from tile overlay options specifies the visibility for the tile overla. Return type is Tile Overlay Options and parameters are boolean. defines options for a tile overlay,neither,neither,neither,source
3857,TileOverlayOptions_writeToParcel,write to parcel from tile overlay options . defines options for a tile overlay,sink,sink,sink,sink
3858,TileOverlayOptions_zIndex,"z index from tile overlay options specifies the tile overlay's z index, ie, the order in which it will be drawn where overlays with larger values are drawn above those with lower value. Return type is Tile Overlay Options and parameters are float. defines options for a tile overlay",neither,neither,neither,source
3859,UrlTileProvider_getTile,get tile from url tile provider returns the tile to be used for this tile coordinat. Return type is Tile and parameters are int int int. a partial implementation of tile provider that only requires a url that points to an image to be provided,source,source,source,source
3860,UrlTileProvider_getTileUrl,get tile url from url tile provider returns a url that points to the image to be used for this til. Return type is URL and parameters are int int int. a partial implementation of tile provider that only requires a url that points to an image to be provided,source,source,source,source
3861,VisibleRegion_equals,equals from visible region compares this visible region to another objec. Return type is boolean and parameters are object. contains the four points defining the four sided polygon that is visible in a map's camera,neither,neither,neither,neither
3862,VisibleRegion_hashCode,hash code from visible region . contains the four points defining the four sided polygon that is visible in a map's camera,neither,source,neither,neither
3863,VisibleRegion_toString,to string from visible region . contains the four points defining the four sided polygon that is visible in a map's camera,neither,neither,neither,source
3864,VisibleRegion_writeToParcel,write to parcel from visible region . contains the four points defining the four sided polygon that is visible in a map's camera,sink,sink,sink,sink
3865,TileProvider_getTile,get tile from tile provider returns the tile to be used for this tile coordinat. Return type is Tile and parameters are int int int. an interface for a class that provides the tile images for a tile overlay,source,source,source,source
3866,CameraPosition.Builder_bearing,"bearing from camera position builder sets the direction that the camera is pointing in, in degrees clockwise from nort. Return type is Camera Position. Builder and parameters are float. builds camera position",sink,sink,sink,sink
3867,CameraPosition.Builder_build,build from camera position builder builds a camera positio. Return type is Camera Position and no argument. builds camera position,neither,neither,neither,neither
3868,CameraPosition.Builder_target,target from camera position builder sets the location that the camera is pointing a. Return type is Camera Position. Builder and parameters are lat lng. builds camera position,sink,sink,sink,sink
3869,CameraPosition.Builder_tilt,"tilt from camera position builder sets the angle, in degrees, of the camera from the nadi. Return type is Camera Position. Builder and parameters are float. builds camera position",sink,sink,sink,sink
3870,CameraPosition.Builder_zoom,zoom from camera position builder sets the zoom level of the camer. Return type is Camera Position. Builder and parameters are float. builds camera position,sink,sink,sink,sink
3871,LatLngBounds.Builder_build,build from lat lng bounds builder creates the lat lng bound. Return type is Lat Lng Bounds and no argument. this is a builder that is able to create a minimum bound based on a set of lat lng points,neither,neither,neither,neither
3872,LatLngBounds.Builder_include,include from lat lng bounds builder includes this point for building of the bound. Return type is Lat Lng Bounds. Builder and parameters are lat lng. this is a builder that is able to create a minimum bound based on a set of lat lng points,neither,neither,neither,neither
3873,StreetViewPanoramaCamera.Builder_bearing,"bearing from street view panorama camera builder sets the direction that the camera is pointing in, in degrees clockwise from nort. Return type is Street View Panorama Camera. Builder and parameters are float. builds panorama cameras",sink,sink,sink,sink
3874,StreetViewPanoramaCamera.Builder_build,build from street view panorama camera builder builds a street view panorama camer. Return type is Street View Panorama Camera and no argument. builds panorama cameras,neither,neither,neither,sink
3875,StreetViewPanoramaCamera.Builder_orientation,orientation from street view panorama camera builder sets the camera tilt and bearing based upon the given orientation's tilt and bearin. Return type is Street View Panorama Camera. Builder and parameters are street view panorama orientation. builds panorama cameras,sink,sink,neither,sink
3876,StreetViewPanoramaCamera.Builder_tilt,"tilt from street view panorama camera builder sets the angle, in degrees, of the camera from the horizon of the panoram. Return type is Street View Panorama Camera. Builder and parameters are float. builds panorama cameras",sink,sink,sink,sink
3877,StreetViewPanoramaCamera.Builder_zoom,zoom from street view panorama camera builder sets the zoom level of the camer. Return type is Street View Panorama Camera. Builder and parameters are float. builds panorama cameras,sink,sink,sink,sink
3878,StreetViewPanoramaOrientation.Builder_bearing,"bearing from street view panorama orientation builder sets the direction of the orientation, in degrees clockwise from nort. Return type is Street View Panorama Orientation. Builder and parameters are float. builds street view panorama orientations",sink,sink,neither,sink
3879,StreetViewPanoramaOrientation.Builder_build,build from street view panorama orientation builder builds a street view panorama orientatio. Return type is Street View Panorama Orientation and no argument. builds street view panorama orientations,neither,neither,neither,neither
3880,StreetViewPanoramaOrientation.Builder_tilt,"tilt from street view panorama orientation builder sets the angle, in degrees, of the orientation this value is restricted to being between -9. Return type is Street View Panorama Orientation. Builder and parameters are float. builds street view panorama orientations",sink,sink,sink,sink
3881,Contour_getPositions,"get positions from contour returns a set of th. Return type is Point F[] and no argument. a set of points that outlines a facial landmark or region such as eye, face, or lips",source,source,source,source
3882,Contour_getType,"get type from contour returns the type of contou. Return type is int and no argument. a set of points that outlines a facial landmark or region such as eye, face, or lips",source,source,source,source
3883,Face_getContours,get contours from face returns a list of contour. Return type is List and no argument. a human face detected in an image or video,source,source,source,source
3884,Face_getEulerY,get euler y from face returns the rotation of the face about the vertical axis of the imag. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3885,Face_getEulerZ,get euler z from face returns the rotation of the face about the axis pointing out of the imag. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3886,Face_getHeight,get height from face returns the height of the face region in pixel. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3887,Face_getId,get id from face returns the face i. Return type is int and no argument. a human face detected in an image or video,source,source,source,source
3888,Face_getIsLeftEyeOpenProbability,get is left eye open probability from face returns a value between 00 and 10 giving a probability that the face's left eye is ope. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3889,Face_getIsRightEyeOpenProbability,get is right eye open probability from face returns a value between 00 and 10 giving a probability that the face's right eye is ope. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3890,Face_getIsSmilingProbability,get is smiling probability from face returns a value between 00 and 10 giving a probability that the face is smilin. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3891,Face_getLandmarks,get landmarks from face returns a list of landmark. Return type is List and no argument. a human face detected in an image or video,source,source,source,source
3892,Face_getPosition,get position from face returns the top left position of the face within the imag. Return type is Point F and no argument. a human face detected in an image or video,source,source,source,source
3893,Face_getWidth,get width from face returns the width of the face region in pixel. Return type is float and no argument. a human face detected in an image or video,source,source,source,source
3894,FaceDetector_detect,"detect from face detector analyzes the supplied frame to find faces, returning faces with associated tracking id mapping. Return type is Sparse Array and parameters are frame. detector for finding faces in a supplied image",source,source,source,neither
3895,FaceDetector_isOperational,is operational from face detector . detector for finding faces in a supplied image,neither,source,neither,neither
3896,FaceDetector_release,release from face detector releases the resources associated with this detecto. Return type is void and no argument. detector for finding faces in a supplied image,neither,neither,neither,neither
3897,FaceDetector_setFocus,set focus from face detector sets the id of the face to exclusively track in future use of the detecto. Return type is boolean and parameters are int. detector for finding faces in a supplied image,sink,sink,sink,sink
3898,FaceDetector.Builder_build,build from face detector builder builds a face detector instanc. Return type is Face Detector and no argument. builder for creating face detector instances,neither,neither,neither,neither
3899,FaceDetector.Builder_setClassificationType,"set classification type from face detector builder indicates whether to run additional classifiers for characterizing attributes such as ""smiling"" and ""eyes open. Return type is Face Detector. Builder and parameters are int. builder for creating face detector instances",neither,neither,neither,neither
3900,FaceDetector.Builder_setLandmarkType,"set landmark type from face detector builder sets whether to detect no landmarks, all landmarks, or contour landmark. Return type is Face Detector. Builder and parameters are int. builder for creating face detector instances",sink,sink,sink,sink
3901,FaceDetector.Builder_setMinFaceSize,"set min face size from face detector builder sets the smallest desired face size, expressed as a proportion of the width of the head to the image widt. Return type is Face Detector. Builder and parameters are float. builder for creating face detector instances",sink,sink,sink,sink
3902,FaceDetector.Builder_setMode,set mode from face detector builder extended option for controlling additional accuracy / speed trade-offs in performing face detectio. Return type is Face Detector. Builder and parameters are int. builder for creating face detector instances,sink,sink,sink,sink
3903,FaceDetector.Builder_setProminentFaceOnly,"set prominent face only from face detector builder indicates whether to detect all faces, or to only detect the most prominent fac. Return type is Face Detector. Builder and parameters are boolean. builder for creating face detector instances",sink,sink,sink,sink
3904,FaceDetector.Builder_setTrackingEnabled,"set tracking enabled from face detector builder enables or disables face tracking, which will maintain a consistent id for each face when processing consecutive frame. Return type is Face Detector. Builder and parameters are boolean. builder for creating face detector instances",sink,sink,sink,sink
3905,Landmark_getPosition,"get position from landmark returns th. Return type is Point F and no argument. a point on a detected face, such as an eye, nose, or mouth",source,source,source,source
3906,Landmark_getType,"get type from landmark returns the type of landmar. Return type is int and no argument. a point on a detected face, such as an eye, nose, or mouth",source,source,source,source
3907,LargestFaceFocusingProcessor.Builder_build,build from largest face focusing processor builder builds the largest face focusing processor instanc. Return type is Largest Face Focusing Processor and no argument. builder for creating a largest face focusing processor,neither,neither,neither,neither
3908,LargestFaceFocusingProcessor.Builder_setMaxGapFrames,set max gap frames from largest face focusing processor builder sets the maximum allowable gap for inferring whether a face will never be seen again in the series of frames that are being processed by the detecto. Return type is Largest Face Focusing Processor. Builder and parameters are int. builder for creating a largest face focusing processor,sink,sink,sink,sink
3909,FaceDetector.Builder_build,build from face detector builder builds a face detector instanc. Return type is Face Detector and no argument. builder for creating face detector instances,neither,neither,neither,neither
3910,FaceDetector.Builder_setClassificationType,"set classification type from face detector builder indicates whether to run additional classifiers for characterizing attributes such as ""smiling"" and ""eyes open. Return type is Face Detector. Builder and parameters are int. builder for creating face detector instances",neither,neither,neither,neither
3911,FaceDetector.Builder_setLandmarkType,"set landmark type from face detector builder sets whether to detect no landmarks, all landmarks, or contour landmark. Return type is Face Detector. Builder and parameters are int. builder for creating face detector instances",sink,sink,sink,sink
3912,FaceDetector.Builder_setMinFaceSize,"set min face size from face detector builder sets the smallest desired face size, expressed as a proportion of the width of the head to the image widt. Return type is Face Detector. Builder and parameters are float. builder for creating face detector instances",sink,sink,sink,sink
3913,FaceDetector.Builder_setMode,set mode from face detector builder extended option for controlling additional accuracy / speed trade-offs in performing face detectio. Return type is Face Detector. Builder and parameters are int. builder for creating face detector instances,sink,sink,sink,sink
3914,FaceDetector.Builder_setProminentFaceOnly,"set prominent face only from face detector builder indicates whether to detect all faces, or to only detect the most prominent fac. Return type is Face Detector. Builder and parameters are boolean. builder for creating face detector instances",sink,sink,sink,sink
3915,FaceDetector.Builder_setTrackingEnabled,"set tracking enabled from face detector builder enables or disables face tracking, which will maintain a consistent id for each face when processing consecutive frame. Return type is Face Detector. Builder and parameters are boolean. builder for creating face detector instances",sink,sink,sink,sink
3916,LargestFaceFocusingProcessor.Builder_build,build from largest face focusing processor builder builds the largest face focusing processor instanc. Return type is Largest Face Focusing Processor and no argument. builder for creating a largest face focusing processor,neither,neither,neither,neither
3917,LargestFaceFocusingProcessor.Builder_setMaxGapFrames,set max gap frames from largest face focusing processor builder sets the maximum allowable gap for inferring whether a face will never be seen again in the series of frames that are being processed by the detecto. Return type is Largest Face Focusing Processor. Builder and parameters are int. builder for creating a largest face focusing processor,sink,sink,sink,sink
3918,Credential_equals,"equals from credential . a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",neither,neither,neither,neither
3919,Credential_getAccountType,"get account type from credential returns the type of federated identity account used to sign in the use. Return type is String and no argument. a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3920,Credential_getFamilyName,"get family name from credential . a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3921,Credential_getGivenName,"get given name from credential . a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3922,Credential_getId,"get id from credential returns the credential identifie. Return type is String and no argument. a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3923,Credential_getIdTokens,"get id tokens from credential returns the id tokens that assert the identity of the user, if availabl. Return type is List and no argument. a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3924,Credential_getName,"get name from credential returns the display name of the credential, if availabl. Return type is String and no argument. a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3925,Credential_getPassword,"get password from credential returns the password used to sign in the use. Return type is String and no argument. a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3926,Credential_getProfilePictureUri,"get profile picture uri from credential returns the url to an image of the user, if availabl. Return type is Uri and no argument. a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",source,source,source,source
3927,Credential_hashCode,"hash code from credential . a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",neither,neither,neither,source
3928,Credential_writeToParcel,"write to parcel from credential . a credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials",sink,sink,sink,sink
3929,Credential.Builder_build,build from credential builder .,neither,neither,neither,neither
3930,Credential.Builder_setAccountType,set account type from credential builder specifies the account type for a federated credentia. Return type is Credential. Builder and parameters are string.,sink,sink,sink,sink
3931,Credential.Builder_setName,"set name from credential builder sets the display name for the credential, which should be easy for the user to recognize as associated to the credential, and distinguishable from other credentials they may hav. Return type is Credential. Builder and parameters are string.",sink,sink,sink,sink
3932,Credential.Builder_setPassword,set password from credential builder sets the password for the credentia. Return type is Credential. Builder and parameters are string.,sink,sink,sink,sink
3933,Credential.Builder_setProfilePictureUri,"set profile picture uri from credential builder sets a profile picture associated with the credential, typically a picture the user has selected to represent the accoun. Return type is Credential. Builder and parameters are uri.",sink,sink,sink,sink
3934,CredentialPickerConfig_isForNewAccount,is for new account from credential picker config deprecate. Return type is boolean and no argument. configuration for credential picker,neither,neither,neither,neither
3935,CredentialPickerConfig_shouldShowAddAccountButton,should show add account button from credential picker config . configuration for credential picker,neither,neither,neither,neither
3936,CredentialPickerConfig_shouldShowCancelButton,should show cancel button from credential picker config . configuration for credential picker,neither,neither,neither,neither
3937,CredentialPickerConfig_writeToParcel,write to parcel from credential picker config . configuration for credential picker,sink,sink,sink,sink
3938,CredentialPickerConfig.Builder_build,build from credential picker config builder . builder for credential picker config,neither,neither,neither,neither
3939,CredentialPickerConfig.Builder_setForNewAccount,set for new account from credential picker config builder deprecate. Return type is Credential Picker Config. Builder and parameters are boolean. builder for credential picker config,sink,sink,sink,sink
3940,CredentialPickerConfig.Builder_setPrompt,set prompt from credential picker config builder sets the text prompt for the hint picker dialog titl. Return type is Credential Picker Config. Builder and parameters are int. builder for credential picker config,sink,sink,sink,sink
3941,CredentialPickerConfig.Builder_setShowAddAccountButton,set show add account button from credential picker config builder sets whether the add account button should be shown in credential picker dialo. Return type is Credential Picker Config. Builder and parameters are boolean. builder for credential picker config,sink,sink,sink,sink
3942,CredentialPickerConfig.Builder_setShowCancelButton,set show cancel button from credential picker config builder sets whether the cancel button should be shown in credential picker dialo. Return type is Credential Picker Config. Builder and parameters are boolean. builder for credential picker config,sink,sink,sink,neither
3943,CredentialRequest_getAccountTypes,"get account types from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3944,CredentialRequest_getAccountTypesSet,"get account types set from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3945,CredentialRequest_getCredentialHintPickerConfig,"get credential hint picker config from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3946,CredentialRequest_getCredentialPickerConfig,"get credential picker config from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3947,CredentialRequest_getIdTokenNonce,"get id token nonce from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3948,CredentialRequest_getServerClientId,"get server client id from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3949,CredentialRequest_getSupportsPasswordLogin,"get supports password login from credential request deprecate. Return type is boolean and no argument. parameters for requesting a credential, via credentials api request",source,source,source,source
3950,CredentialRequest_isIdTokenRequested,"is id token requested from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3951,CredentialRequest_isPasswordLoginSupported,"is password login supported from credential request . parameters for requesting a credential, via credentials api request",source,source,source,source
3952,CredentialRequest_writeToParcel,"write to parcel from credential request . parameters for requesting a credential, via credentials api request",sink,sink,sink,sink
3953,CredentialRequest.Builder_build,build from credential request builder builds a credential reques. Return type is Credential Request and no argument.,neither,neither,neither,neither
3954,CredentialRequest.Builder_setAccountTypes,set account types from credential request builder sets the account type. Return type is Credential Request. Builder and parameters are string   .,sink,sink,sink,sink
3955,CredentialRequest.Builder_setCredentialHintPickerConfig,set credential hint picker config from credential request builder sets the configuration for credential hint picke. Return type is Credential Request. Builder and parameters are credential picker config.,sink,sink,sink,sink
3956,CredentialRequest.Builder_setCredentialPickerConfig,set credential picker config from credential request builder sets the configuration for credential picke. Return type is Credential Request. Builder and parameters are credential picker config.,sink,sink,sink,sink
3957,CredentialRequest.Builder_setIdTokenNonce,set id token nonce from credential request builder specify a nonce value that should be included in any generated id token for this reques. Return type is Credential Request. Builder and parameters are string.,sink,sink,sink,sink
3958,CredentialRequest.Builder_setIdTokenRequested,"set id token requested from credential request builder specify whether an id token should be acquired for retrieved credentials or hints, if available for the credential identifie. Return type is Credential Request. Builder and parameters are boolean.",sink,sink,sink,sink
3959,CredentialRequest.Builder_setPasswordLoginSupported,"set password login supported from credential request builder enables returning credentials with a password, that is verified by the applicatio. Return type is Credential Request. Builder and parameters are boolean.",sink,sink,sink,sink
3960,CredentialRequest.Builder_setServerClientId,set server client id from credential request builder specify the server client id for the backend associated with this ap. Return type is Credential Request. Builder and parameters are string.,sink,sink,sink,sink
3961,CredentialRequest.Builder_setSupportsPasswordLogin,set supports password login from credential request builder deprecate. Return type is Credential Request. Builder and parameters are boolean.,sink,sink,sink,sink
3962,CredentialRequestResponse_getCredential,get credential from credential request response gets a credential that can be used to authenticate the use. Return type is Credential and no argument. result returned from a request for a credential,source,source,source,source
3963,Credentials_getClient,get client from credentials create a new instance of credentials client for use in a non-activity contex. Return type is Credentials Client and parameters are context credentials options. entry point for the credentials api,source,source,source,source
3964,Credentials_getClient,get client from credentials create a new instance of credentials client for use in an activit. Return type is Credentials Client and parameters are activity. entry point for the credentials api,source,source,source,source
3965,Credentials_getClient,get client from credentials create a new instance of credentials client for use in a non-activity contex. Return type is Credentials Client and parameters are context. entry point for the credentials api,source,source,source,source
3966,Credentials_getClient,get client from credentials create a new instance of credentials client for use in an activit. Return type is Credentials Client and parameters are activity credentials options. entry point for the credentials api,source,source,source,source
3967,CredentialsClient_delete,delete from credentials client deletes a credential that is no longer valid for signing into the ap. Return type is Task and parameters are credential. entry point for requesting a credential and indicating whether sign in was successful using the credential,neither,neither,neither,source
3968,CredentialsClient_disableAutoSignIn,"disable auto sign in from credentials client disables auto sign-in for the calling app on the current device only, until a successful call to sa. Return type is Task and no argument. entry point for requesting a credential and indicating whether sign in was successful using the credential",neither,neither,neither,neither
3969,CredentialsClient_getHintPickerIntent,"get hint picker intent from credentials client provides an intent to directly display the hint picker to the user, to aid in new account creatio. Return type is Pending Intent and parameters are hint request. entry point for requesting a credential and indicating whether sign in was successful using the credential",source,source,source,source
3970,CredentialsClient_request,request from credentials client tries to suggest a zero-click sign-in accoun. Return type is Task and parameters are credential request. entry point for requesting a credential and indicating whether sign in was successful using the credential,neither,neither,source,source
3971,CredentialsClient_save,save from credentials client saves a credential that was used to sign in to the ap. Return type is Task and parameters are credential. entry point for requesting a credential and indicating whether sign in was successful using the credential,sink,sink,sink,sink
3972,CredentialsOptions.Builder_build,build from credentials options builder returns a new credentials option. Return type is Credentials Options and no argument. builder for credentials options,neither,neither,neither,neither
3973,CredentialsOptions.Builder_forceEnableSaveDialog,force enable save dialog from credentials options builder specifies that the save confirmation dialog should always be shown when require. Return type is Credentials Options. Builder and no argument. builder for credentials options,sink,sink,sink,sink
3974,HintRequest_getAccountTypes,"get account types from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",source,source,source,source
3975,HintRequest_getHintPickerConfig,"get hint picker config from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",source,source,source,source
3976,HintRequest_getIdTokenNonce,"get id token nonce from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",source,source,source,source
3977,HintRequest_getServerClientId,"get server client id from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",source,source,source,source
3978,HintRequest_isEmailAddressIdentifierSupported,"is email address identifier supported from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",source,neither,source,source
3979,HintRequest_isIdTokenRequested,"is id token requested from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",source,source,source,source
3980,HintRequest_writeToParcel,"write to parcel from hint request . parameters for requesting the display of the hint picker, via get hint picker intent",sink,sink,sink,sink
3981,HintRequest.Builder_build,build from hint request builder builds a hint reques. Return type is Hint Request and no argument.,neither,neither,neither,neither
3982,HintRequest.Builder_setAccountTypes,set account types from hint request builder sets the account type. Return type is Hint Request. Builder and parameters are string   .,sink,sink,sink,sink
3983,HintRequest.Builder_setEmailAddressIdentifierSupported,"set email address identifier supported from hint request builder enables returning credential hints where the identifier is an email address, intended for use with a password chosen by the use. Return type is Hint Request. Builder and parameters are boolean.",sink,sink,sink,sink
3984,HintRequest.Builder_setHintPickerConfig,set hint picker config from hint request builder sets the configuration for the hint picker dialo. Return type is Hint Request. Builder and parameters are credential picker config.,sink,sink,sink,sink
3985,HintRequest.Builder_setIdTokenNonce,set id token nonce from hint request builder specify a nonce value that should be included in any generated id token for this reques. Return type is Hint Request. Builder and parameters are string.,sink,sink,sink,sink
3986,HintRequest.Builder_setIdTokenRequested,"set id token requested from hint request builder specify whether an id token should be acquired for hints, if available for the selected credential identifie. Return type is Hint Request. Builder and parameters are boolean.",sink,sink,sink,sink
3987,HintRequest.Builder_setPhoneNumberIdentifierSupported,"set phone number identifier supported from hint request builder enables returning credential hints where the identifier is a phone number, intended for use with a password chosen by the user or sms verificatio. Return type is Hint Request. Builder and parameters are boolean.",sink,sink,sink,sink
3988,HintRequest.Builder_setServerClientId,set server client id from hint request builder specify the server client id for the backend associated with this ap. Return type is Hint Request. Builder and parameters are string.,sink,sink,sink,sink
3989,IdentityProviders_getIdentityProviderForAccount,get identity provider for account from identity providers attempts to translate the account type in the provided account into the string that should be used in the credentials ap. Return type is String and parameters are account. identity provider constants for use with credential request builder set account types,source,source,source,source
3990,IdToken_equals,equals from id token . a token that is signed by an authenticator to confirm that the account specified in the id token is a valid account of account type,neither,neither,neither,neither
3991,IdToken_getAccountType,get account type from id token returns account manager account type for the toke. Return type is String and no argument. a token that is signed by an authenticator to confirm that the account specified in the id token is a valid account of account type,source,source,source,source
3992,IdToken_getIdToken,"get id token from id token returns the id token, formatted according to the rules defined by the account typ. Return type is String and no argument. a token that is signed by an authenticator to confirm that the account specified in the id token is a valid account of account type",source,source,source,source
3993,IdToken_writeToParcel,write to parcel from id token . a token that is signed by an authenticator to confirm that the account specified in the id token is a valid account of account type,sink,sink,sink,sink
3994,CredentialRequestResult_getCredential,get credential from credential request result gets a credential that can be used to authenticate the use. Return type is Credential and no argument. result returned from a request for a credential,source,source,source,source
3995,CredentialsApi_delete,delete from credentials api deletes a credential that is no longer valid for signing into the ap. Return type is Pending Result and parameters are google api client credential. entry point for requesting a credential and indicating whether sign in was successful using the credential,neither,neither,neither,source
3996,CredentialsApi_disableAutoSignIn,"disable auto sign in from credentials api disables auto sign-in for the calling app on the current device only, until a successful call to save is subsequently mad. Return type is Pending Result and parameters are google api client. entry point for requesting a credential and indicating whether sign in was successful using the credential",neither,neither,neither,neither
3997,CredentialsApi_getHintPickerIntent,"get hint picker intent from credentials api provides an intent to directly display the hint picker to the user, to aid in new account creatio. Return type is Pending Intent and parameters are google api client hint request. entry point for requesting a credential and indicating whether sign in was successful using the credential",source,source,source,source
3998,CredentialsApi_request,request from credentials api tries to suggest a zero-click sign-in accoun. Return type is Pending Result and parameters are google api client credential request. entry point for requesting a credential and indicating whether sign in was successful using the credential,source,neither,source,source
3999,CredentialsApi_save,save from credentials api saves a credential that was used to sign in to the ap. Return type is Pending Result and parameters are google api client credential. entry point for requesting a credential and indicating whether sign in was successful using the credential,sink,sink,sink,sink
4000,Credential.Builder_build,build from credential builder .,neither,neither,neither,neither
4001,Credential.Builder_setAccountType,set account type from credential builder specifies the account type for a federated credentia. Return type is Credential. Builder and parameters are string.,sink,sink,sink,sink
4002,Credential.Builder_setName,"set name from credential builder sets the display name for the credential, which should be easy for the user to recognize as associated to the credential, and distinguishable from other credentials they may hav. Return type is Credential. Builder and parameters are string.",sink,sink,sink,sink
4003,Credential.Builder_setPassword,set password from credential builder sets the password for the credentia. Return type is Credential. Builder and parameters are string.,sink,sink,sink,sink
4004,Credential.Builder_setProfilePictureUri,"set profile picture uri from credential builder sets a profile picture associated with the credential, typically a picture the user has selected to represent the accoun. Return type is Credential. Builder and parameters are uri.",sink,sink,sink,sink
4005,CredentialPickerConfig.Builder_build,build from credential picker config builder . builder for credential picker config,neither,neither,neither,neither
4006,CredentialPickerConfig.Builder_setForNewAccount,set for new account from credential picker config builder deprecate. Return type is Credential Picker Config. Builder and parameters are boolean. builder for credential picker config,sink,sink,sink,sink
4007,CredentialPickerConfig.Builder_setPrompt,set prompt from credential picker config builder sets the text prompt for the hint picker dialog titl. Return type is Credential Picker Config. Builder and parameters are int. builder for credential picker config,sink,sink,sink,sink
4008,CredentialPickerConfig.Builder_setShowAddAccountButton,set show add account button from credential picker config builder sets whether the add account button should be shown in credential picker dialo. Return type is Credential Picker Config. Builder and parameters are boolean. builder for credential picker config,sink,sink,sink,sink
4009,CredentialPickerConfig.Builder_setShowCancelButton,set show cancel button from credential picker config builder sets whether the cancel button should be shown in credential picker dialo. Return type is Credential Picker Config. Builder and parameters are boolean. builder for credential picker config,sink,sink,sink,neither
4010,CredentialRequest.Builder_build,build from credential request builder builds a credential reques. Return type is Credential Request and no argument.,neither,neither,neither,neither
4011,CredentialRequest.Builder_setAccountTypes,set account types from credential request builder sets the account type. Return type is Credential Request. Builder and parameters are string   .,sink,sink,sink,sink
4012,CredentialRequest.Builder_setCredentialHintPickerConfig,set credential hint picker config from credential request builder sets the configuration for credential hint picke. Return type is Credential Request. Builder and parameters are credential picker config.,sink,sink,sink,sink
4013,CredentialRequest.Builder_setCredentialPickerConfig,set credential picker config from credential request builder sets the configuration for credential picke. Return type is Credential Request. Builder and parameters are credential picker config.,sink,sink,sink,sink
4014,CredentialRequest.Builder_setIdTokenNonce,set id token nonce from credential request builder specify a nonce value that should be included in any generated id token for this reques. Return type is Credential Request. Builder and parameters are string.,sink,sink,sink,sink
4015,CredentialRequest.Builder_setIdTokenRequested,"set id token requested from credential request builder specify whether an id token should be acquired for retrieved credentials or hints, if available for the credential identifie. Return type is Credential Request. Builder and parameters are boolean.",sink,sink,sink,sink
4016,CredentialRequest.Builder_setPasswordLoginSupported,"set password login supported from credential request builder enables returning credentials with a password, that is verified by the applicatio. Return type is Credential Request. Builder and parameters are boolean.",sink,sink,sink,sink
4017,CredentialRequest.Builder_setServerClientId,set server client id from credential request builder specify the server client id for the backend associated with this ap. Return type is Credential Request. Builder and parameters are string.,sink,sink,sink,sink
4018,CredentialRequest.Builder_setSupportsPasswordLogin,set supports password login from credential request builder deprecate. Return type is Credential Request. Builder and parameters are boolean.,sink,sink,sink,sink
4019,CredentialsOptions.Builder_build,build from credentials options builder returns a new credentials option. Return type is Credentials Options and no argument. builder for credentials options,neither,neither,neither,neither
4020,CredentialsOptions.Builder_forceEnableSaveDialog,force enable save dialog from credentials options builder specifies that the save confirmation dialog should always be shown when require. Return type is Credentials Options. Builder and no argument. builder for credentials options,sink,sink,sink,sink
4021,HintRequest.Builder_build,build from hint request builder builds a hint reques. Return type is Hint Request and no argument.,neither,neither,neither,neither
4022,HintRequest.Builder_setAccountTypes,set account types from hint request builder sets the account type. Return type is Hint Request. Builder and parameters are string   .,sink,sink,sink,sink
4023,HintRequest.Builder_setEmailAddressIdentifierSupported,"set email address identifier supported from hint request builder enables returning credential hints where the identifier is an email address, intended for use with a password chosen by the use. Return type is Hint Request. Builder and parameters are boolean.",sink,sink,sink,sink
4024,HintRequest.Builder_setHintPickerConfig,set hint picker config from hint request builder sets the configuration for the hint picker dialo. Return type is Hint Request. Builder and parameters are credential picker config.,sink,sink,sink,sink
4025,HintRequest.Builder_setIdTokenNonce,set id token nonce from hint request builder specify a nonce value that should be included in any generated id token for this reques. Return type is Hint Request. Builder and parameters are string.,sink,sink,sink,sink
4026,HintRequest.Builder_setIdTokenRequested,"set id token requested from hint request builder specify whether an id token should be acquired for hints, if available for the selected credential identifie. Return type is Hint Request. Builder and parameters are boolean.",sink,sink,sink,sink
4027,HintRequest.Builder_setPhoneNumberIdentifierSupported,"set phone number identifier supported from hint request builder enables returning credential hints where the identifier is a phone number, intended for use with a password chosen by the user or sms verificatio. Return type is Hint Request. Builder and parameters are boolean.",sink,sink,sink,sink
4028,HintRequest.Builder_setServerClientId,set server client id from hint request builder specify the server client id for the backend associated with this ap. Return type is Hint Request. Builder and parameters are string.,sink,sink,sink,sink
4029,Action_newAction,new action from action creates a new actio. Return type is Action and parameters are string string uri uri. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,sink
4030,Action_newAction,new action from action creates a new actio. Return type is Action and parameters are string string uri. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,sink
4031,Action.Builder_build,build from action builder build the action objec. Return type is Action and no argument. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4032,Action.Builder_put,put from action builder sets a property of the actio. Return type is Action. Builder and parameters are string thing. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4033,Action.Builder_put,put from action builder sets properties of the actio. Return type is Action. Builder and parameters are string thing[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4034,Action.Builder_put,put from action builder sets a property of the actio. Return type is Action. Builder and parameters are string string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4035,Action.Builder_put,put from action builder sets properties of the actio. Return type is Action. Builder and parameters are string string[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4036,Action.Builder_put,put from action builder sets a property of the actio. Return type is Action. Builder and parameters are string boolean. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4037,Action.Builder_setActionStatus,set action status from action builder specify the status of the actio. Return type is Action. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4038,Action.Builder_setName,set name from action builder sets the name of the actio. Return type is Action. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4039,Action.Builder_setObject,set object from action builder sets the object of the actio. Return type is Action. Builder and parameters are thing. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4040,Action.Builder_setUrl,set url from action builder sets the app uri of the actio. Return type is Action. Builder and parameters are uri. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4041,AndroidAppUri_equals,equals from android app uri . this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4042,AndroidAppUri_getDeepLinkUri,get deep link uri from android app uri . this class is deprecated  please migrate to the firebase app indexing ap,source,source,source,source
4043,AndroidAppUri_getPackageName,get package name from android app uri . this class is deprecated  please migrate to the firebase app indexing ap,source,source,source,source
4044,AndroidAppUri_hashCode,hash code from android app uri . this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4045,AndroidAppUri_newAndroidAppUri,new android app uri from android app uri deprecate. Return type is Android App Uri and parameters are string uri. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,sink
4046,AndroidAppUri_newAndroidAppUri,new android app uri from android app uri deprecate. Return type is Android App Uri and parameters are uri. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,sink
4047,AndroidAppUri_toString,to string from android app uri . this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,neither,sink
4048,AndroidAppUri_toUri,to uri from android app uri . this class is deprecated  please migrate to the firebase app indexing ap,neither,sink,neither,sink
4049,Thing.Builder_build,build from thing builder build the thing objec. Return type is Thing and no argument. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4050,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string thing. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4051,Thing.Builder_put,put from thing builder sets properties of the conten. Return type is Thing. Builder and parameters are string thing[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4052,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4053,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string string[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4054,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string boolean. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4055,Thing.Builder_setDescription,set description from thing builder sets the optional description of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4056,Thing.Builder_setId,set id from thing builder sets the optional web url of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4057,Thing.Builder_setName,set name from thing builder sets the name of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4058,Thing.Builder_setType,set type from thing builder sets the schemaorg type of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4059,Thing.Builder_setUrl,set url from thing builder sets the url of the content in the ap. Return type is Thing. Builder and parameters are uri. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4060,AppIndexApi_action,action from app index api deprecate. Return type is App Index Api. Action Result and parameters are google api client action. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,sink
4061,AppIndexApi_end,end from app index api indicates that the user has ended a specific action in your ap. Return type is Pending Result and parameters are google api client action. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4062,AppIndexApi_start,start from app index api indicates that the user has started a specific action in your ap. Return type is Pending Result and parameters are google api client action. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,sink,sink
4063,AppIndexApi_view,view from app index api deprecate. Return type is Pending Result and parameters are google api client activity intent string uri list< app index api app indexing link>. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4064,AppIndexApi_view,view from app index api deprecate. Return type is Pending Result and parameters are google api client activity uri string uri list< app index api app indexing link>. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4065,AppIndexApi_viewEnd,view end from app index api deprecate. Return type is Pending Result and parameters are google api client activity intent. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4066,AppIndexApi_viewEnd,view end from app index api deprecate. Return type is Pending Result and parameters are google api client activity uri. this interface is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4067,AppIndexApi.ActionResult_end,end from app index api action result indicates that a user completed an actio. Return type is Pending Result and parameters are google api client. this interface is deprecated  use app index api start and app index api end,neither,neither,neither,neither
4068,AppIndexApi.ActionResult_getPendingResult,get pending result from app index api action result represents the result of a call to the app index apiacti. Return type is Pending Result and no argument. this interface is deprecated  use app index api start and app index api end,source,source,source,source
4069,Action.Builder_build,build from action builder build the action objec. Return type is Action and no argument. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4070,Action.Builder_put,put from action builder sets a property of the actio. Return type is Action. Builder and parameters are string thing. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4071,Action.Builder_put,put from action builder sets properties of the actio. Return type is Action. Builder and parameters are string thing[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4072,Action.Builder_put,put from action builder sets a property of the actio. Return type is Action. Builder and parameters are string string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4073,Action.Builder_put,put from action builder sets properties of the actio. Return type is Action. Builder and parameters are string string[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4074,Action.Builder_put,put from action builder sets a property of the actio. Return type is Action. Builder and parameters are string boolean. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4075,Action.Builder_setActionStatus,set action status from action builder specify the status of the actio. Return type is Action. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4076,Action.Builder_setName,set name from action builder sets the name of the actio. Return type is Action. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4077,Action.Builder_setObject,set object from action builder sets the object of the actio. Return type is Action. Builder and parameters are thing. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4078,Action.Builder_setUrl,set url from action builder sets the app uri of the actio. Return type is Action. Builder and parameters are uri. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4079,Thing.Builder_build,build from thing builder build the thing objec. Return type is Thing and no argument. this class is deprecated  please migrate to the firebase app indexing ap,neither,neither,neither,neither
4080,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string thing. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4081,Thing.Builder_put,put from thing builder sets properties of the conten. Return type is Thing. Builder and parameters are string thing[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4082,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4083,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string string[]. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4084,Thing.Builder_put,put from thing builder sets a property of the conten. Return type is Thing. Builder and parameters are string boolean. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4085,Thing.Builder_setDescription,set description from thing builder sets the optional description of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4086,Thing.Builder_setId,set id from thing builder sets the optional web url of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4087,Thing.Builder_setName,set name from thing builder sets the name of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4088,Thing.Builder_setType,set type from thing builder sets the schemaorg type of the conten. Return type is Thing. Builder and parameters are string. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4089,Thing.Builder_setUrl,set url from thing builder sets the url of the content in the ap. Return type is Thing. Builder and parameters are uri. this class is deprecated  please migrate to the firebase app indexing ap,sink,sink,sink,sink
4090,AppIndexApi.ActionResult_end,end from app index api action result indicates that a user completed an actio. Return type is Pending Result and parameters are google api client. this interface is deprecated  use app index api start and app index api end,neither,neither,neither,neither
4091,AppIndexApi.ActionResult_getPendingResult,get pending result from app index api action result represents the result of a call to the app index apiacti. Return type is Pending Result and no argument. this interface is deprecated  use app index api start and app index api end,source,source,source,source
4092,AddPlaceRequest_getAddress,"get address from add place request returns the human-readable street address of the plac. Return type is String and no argument. this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",source,source,source,source
4093,AddPlaceRequest_getLatLng,"get lat lng from add place request returns the geographic location of the plac. Return type is Lat Lng and no argument. this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",source,source,source,source
4094,AddPlaceRequest_getName,"get name from add place request returns the name of the plac. Return type is String and no argument. this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",source,source,source,source
4095,AddPlaceRequest_getPhoneNumber,"get phone number from add place request returns the phone number for the plac. Return type is String and no argument. this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",source,source,source,source
4096,AddPlaceRequest_getPlaceTypes,"get place types from add place request returns the list of place types which characterize the plac. Return type is List and no argument. this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",source,source,source,neither
4097,AddPlaceRequest_getWebsiteUri,"get website uri from add place request returns the uri of the authoritative website for the plac. Return type is Uri and no argument. this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",source,source,source,source
4098,AddPlaceRequest_toString,"to string from add place request . this class is deprecated  the add place method is deprecated as of june 30, 2017  this feature will be turned down on june 30, 2018, and will no longer be available after that date",sink,sink,neither,sink
4099,AutocompleteFilter_getTypeFilter,get type filter from autocomplete filter a filter used to restrict the type of the results returne. Return type is int and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4100,AutocompleteFilter.Builder_build,build from autocomplete filter builder returns an autocomplete filter that can be passed to get autocomplete predictio. Return type is Autocomplete Filter and no argument. builder for an autocomplete filter,neither,neither,neither,neither
4101,AutocompleteFilter.Builder_setCountry,set country from autocomplete filter builder the country to restrict results t. Return type is Autocomplete Filter. Builder and parameters are string. builder for an autocomplete filter,sink,sink,sink,sink
4102,AutocompleteFilter.Builder_setTypeFilter,set type filter from autocomplete filter builder allows you to restrict the result set of a place autocomplete reques. Return type is Autocomplete Filter. Builder and parameters are int. builder for an autocomplete filter,neither,neither,neither,sink
4103,AutocompletePredictionBuffer_get,get from autocomplete prediction buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4104,AutocompletePredictionBuffer_getStatus,get status from autocomplete prediction buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4105,GeoDataClient_addPlace,add place from geo data client deprecate. Return type is Task and parameters are add place request. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,sink
4106,GeoDataClient_getAutocompletePredictions,get autocomplete predictions from geo data client returns autocomplete predictions for a query based on the names and addresses of place. Return type is Task and parameters are string lat lng bounds autocomplete filter. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4107,GeoDataClient_getAutocompletePredictions,get autocomplete predictions from geo data client returns autocomplete predictions for a query based on the names and addresses of place. Return type is Task and parameters are string lat lng bounds int autocomplete filter. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4108,GeoDataClient_getPhoto,get photo from geo data client retrieves the image data for this photo at its maximum siz. Return type is Task and parameters are place photo metadata. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4109,GeoDataClient_getPlaceById,get place by id from geo data client returns place objects for each of the given place id. Return type is Task and parameters are string   . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4110,GeoDataClient_getPlacePhotos,get place photos from geo data client returns the metadata for up to 10 photos associated with a plac. Return type is Task and parameters are string. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4111,GeoDataClient_getScaledPhoto,"get scaled photo from geo data client retrieves the image data for this photo, scaled to fit the given dimension. Return type is Task and parameters are place photo metadata int int. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information",source,source,source,source
4112,PlaceBuffer_get,get from place buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4113,PlaceBuffer_getAttributions,get attributions from place buffer returns the attributions to be shown to the use. Return type is Char Sequence and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4114,PlaceBuffer_getStatus,get status from place buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4115,PlaceBufferResponse_getAttributions,get attributions from place buffer response returns the attributions to be shown to the use. Return type is Char Sequence and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4116,PlaceDetectionClient_getCurrentPlace,get current place from place detection client returns an estimate of the place where the device is currently known to be locate. Return type is Task and parameters are place filter. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4117,PlaceDetectionClient_reportDeviceAtPlace,report device at place from place detection client reports that the device is currently at a particular plac. Return type is Task and parameters are place report. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,sink,neither,neither,sink
4118,PlaceFilter_getPlaceIds,get place ids from place filter returns the set of place i ds that this filter will allo. Return type is Set and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4119,PlaceFilter_isRestrictedToPlacesOpenNow,is restricted to places open now from place filter checks whether or not this filter will allow only places that are currently ope. Return type is boolean and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,neither
4120,PlaceFilter_matches,matches from place filter checks whether the given place matches the constraints specified in this filte. Return type is boolean and parameters are place. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,neither
4121,PlaceLikelihoodBuffer_get,get from place likelihood buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4122,PlaceLikelihoodBuffer_getAttributions,get attributions from place likelihood buffer returns the attributions to be shown to the use. Return type is Char Sequence and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4123,PlaceLikelihoodBuffer_getStatus,get status from place likelihood buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4124,PlaceLikelihoodBufferResponse_getAttributions,get attributions from place likelihood buffer response returns the attributions to be shown to the use. Return type is Char Sequence and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4125,PlacePhotoMetadataBuffer_get,get from place photo metadata buffer . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4126,PlacePhotoMetadataResponse_getPhotoMetadata,get photo metadata from place photo metadata response returns the photo metadata retrieved by the reques. Return type is Place Photo Metadata Buffer and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4127,PlacePhotoMetadataResult_getPhotoMetadata,get photo metadata from place photo metadata result returns the photo metadata retrieved by the reques. Return type is Place Photo Metadata Buffer and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4128,PlacePhotoMetadataResult_getStatus,get status from place photo metadata result . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4129,PlacePhotoResponse_getBitmap,get bitmap from place photo response returns the requested image dat. Return type is Bitmap and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4130,PlacePhotoResult_getBitmap,get bitmap from place photo result returns the requested image dat. Return type is Bitmap and no argument. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4131,PlacePhotoResult_getStatus,get status from place photo result . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4132,Places_getGeoDataClient,get geo data client from places deprecate. Return type is Geo Data Client and parameters are activity. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4133,Places_getGeoDataClient,get geo data client from places deprecate. Return type is Geo Data Client and parameters are activity places options. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4134,Places_getGeoDataClient,get geo data client from places deprecate. Return type is Geo Data Client and parameters are context places options. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4135,Places_getGeoDataClient,get geo data client from places deprecate. Return type is Geo Data Client and parameters are context. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4136,Places_getPlaceDetectionClient,get place detection client from places deprecate. Return type is Place Detection Client and parameters are context places options. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4137,Places_getPlaceDetectionClient,get place detection client from places deprecate. Return type is Place Detection Client and parameters are activity. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4138,Places_getPlaceDetectionClient,get place detection client from places deprecate. Return type is Place Detection Client and parameters are activity places options. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4139,Places_getPlaceDetectionClient,get place detection client from places deprecate. Return type is Place Detection Client and parameters are context. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4140,PlacesOptions_equals,equals from places options . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,neither
4141,PlacesOptions_hashCode,hash code from places options . this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,sink
4142,PlacesOptions.Builder_build,build from places options builder . builder used to create places options,sink,neither,neither,neither
4143,PlacesStatusCodes_getStatusCodeString,get status code string from places status codes returns a string containing the name of the given status cod. Return type is String and parameters are int. this class is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4144,AutocompletePrediction_getFullText,get full text from autocomplete prediction the full text of a plac. Return type is Char Sequence and parameters are character style. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4145,AutocompletePrediction_getPlaceId,get place id from autocomplete prediction returns the place id of the place being referred to by this predictio. Return type is String and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4146,AutocompletePrediction_getPlaceTypes,get place types from autocomplete prediction returns the list of place types associated with the place referred to by get place. Return type is List and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4147,AutocompletePrediction_getPrimaryText,get primary text from autocomplete prediction the primary text of a plac. Return type is Char Sequence and parameters are character style. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4148,AutocompletePrediction_getSecondaryText,get secondary text from autocomplete prediction the secondary text of a plac. Return type is Char Sequence and parameters are character style. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4149,GeoDataApi_addPlace,add place from geo data api deprecate. Return type is Pending Result and parameters are google api client add place request. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,sink
4150,GeoDataApi_getAutocompletePredictions,get autocomplete predictions from geo data api returns autocomplete predictions for a query based on the names and addresses of place. Return type is Pending Result and parameters are google api client string lat lng bounds autocomplete filter. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4151,GeoDataApi_getPlaceById,get place by id from geo data api returns place objects for each of the given place id. Return type is Pending Result and parameters are google api client string   . this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4152,GeoDataApi_getPlacePhotos,get place photos from geo data api returns the metadata for up to 10 photos associated with a plac. Return type is Pending Result and parameters are google api client string. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4153,Place_getAddress,get address from place returns a human readable address for this plac. Return type is Char Sequence and no argument. represents a particular physical place,source,source,source,source
4154,Place_getAttributions,get attributions from place returns the attributions to be shown to the user if data from the place is use. Return type is Char Sequence and no argument. represents a particular physical place,source,source,source,source
4155,Place_getId,get id from place returns the unique id of this plac. Return type is String and no argument. represents a particular physical place,source,source,source,source
4156,Place_getLatLng,get lat lng from place returns the location of this plac. Return type is Lat Lng and no argument. represents a particular physical place,source,source,source,source
4157,Place_getLocale,get locale from place returns the locale in which the names and addresses were localize. Return type is Locale and no argument. represents a particular physical place,source,source,source,source
4158,Place_getName,get name from place returns the name of this plac. Return type is Char Sequence and no argument. represents a particular physical place,source,source,source,source
4159,Place_getPhoneNumber,get phone number from place returns the place's phone number in international forma. Return type is Char Sequence and no argument. represents a particular physical place,source,source,source,source
4160,Place_getPlaceTypes,get place types from place returns a list of place types for this plac. Return type is List and no argument. represents a particular physical place,source,source,source,source
4161,Place_getPriceLevel,get price level from place returns the price level for this place on a scale from . Return type is  int and no argument. represents a particular physical place,source,source,source,source
4162,Place_getRating,"get rating from place returns the place's rating, from 10 to 50, based on aggregated user review. Return type is  float and no argument. represents a particular physical place",source,source,source,neither
4163,Place_getViewport,get viewport from place returns a viewport for displaying this plac. Return type is Lat Lng Bounds and no argument. represents a particular physical place,source,source,source,source
4164,Place_getWebsiteUri,get website uri from place returns the uri of the website of this plac. Return type is Uri and no argument. represents a particular physical place,source,source,source,source
4165,PlaceDetectionApi_getCurrentPlace,get current place from place detection api returns an estimate of the place where the device is currently known to be locate. Return type is Pending Result and parameters are google api client place filter. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4166,PlaceDetectionApi_reportDeviceAtPlace,report device at place from place detection api reports that the device is currently at a particular plac. Return type is Pending Result and parameters are google api client place report. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,neither,neither,neither,neither
4167,PlaceLikelihood_getLikelihood,get likelihood from place likelihood returns a value indicating the degree of confidence that the device is at the corresponding plac. Return type is  float and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4168,PlaceLikelihood_getPlace,get place from place likelihood returns the place associated with this place likelihoo. Return type is Place and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4169,PlacePhotoMetadata_getAttributions,get attributions from place photo metadata returns the attributions that must be shown to the user if this photo is displaye. Return type is Char Sequence and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4170,PlacePhotoMetadata_getMaxHeight,get max height from place photo metadata returns the maximum height in which this photo is availabl. Return type is  int and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4171,PlacePhotoMetadata_getMaxWidth,get max width from place photo metadata returns the maximum width in which this photo is availabl. Return type is  int and no argument. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4172,PlacePhotoMetadata_getPhoto,get photo from place photo metadata retrieves the image data for this photo at its maximum siz. Return type is Pending Result and parameters are google api client. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information,source,source,source,source
4173,PlacePhotoMetadata_getScaledPhoto,"get scaled photo from place photo metadata retrieves the image data for this photo, scaled to fit the given dimension. Return type is Pending Result and parameters are google api client int int. this interface is deprecated  the google play services places sdk is deprecated  a new sdk is available  see the client migration guide for more information",source,source,source,source
4174,AutocompleteFilter.Builder_build,build from autocomplete filter builder returns an autocomplete filter that can be passed to get autocomplete predictio. Return type is Autocomplete Filter and no argument. builder for an autocomplete filter,neither,neither,neither,neither
4175,AutocompleteFilter.Builder_setCountry,set country from autocomplete filter builder the country to restrict results t. Return type is Autocomplete Filter. Builder and parameters are string. builder for an autocomplete filter,sink,sink,sink,sink
4176,AutocompleteFilter.Builder_setTypeFilter,set type filter from autocomplete filter builder allows you to restrict the result set of a place autocomplete reques. Return type is Autocomplete Filter. Builder and parameters are int. builder for an autocomplete filter,neither,neither,neither,sink
4177,PlacesOptions.Builder_build,build from places options builder . builder used to create places options,sink,neither,neither,neither
4178,AutoResolvableVoidResult_putIntoIntent,put into intent from auto resolvable void result saves the intent as an extra into the given inten. Return type is void and parameters are intent. a void result that is an auto resolvable result,sink,sink,sink,sink
4179,AutoResolveHelper_getStatusFromIntent,get status from intent from auto resolve helper returns the status from the intent received in on activity resu. Return type is Status and parameters are intent. helper to auto resolve tasks that may throw resolvable api exception to request ui being shown before returning the result,source,source,source,source
4180,AutoResolveHelper_putStatusIntoIntent,put status into intent from auto resolve helper saves the given status as an extra in the given inten. Return type is  void and parameters are intent status. helper to auto resolve tasks that may throw resolvable api exception to request ui being shown before returning the result,sink,sink,sink,sink
4181,AutoResolveHelper_resolveTask,resolve task from auto resolve helper resolves the given task result showing ui if necessary and pipes back the final result back to the given activity's on activity resu. Return type is void and parameters are task activity int. helper to auto resolve tasks that may throw resolvable api exception to request ui being shown before returning the result,neither,neither,neither,neither
4182,CardInfo_getBillingAddress,get billing address from card info gets the billing address associated with buyer's payment car. Return type is User Address and no argument. parcelable representing more detailed information about a payment card,source,source,source,source
4183,CardInfo_getCardClass,"get card class from card info gets the card class which can be either credit, debit or prepai. Return type is int and no argument. parcelable representing more detailed information about a payment card",source,source,source,source
4184,CardInfo_getCardDescription,get card description from card info gets a user-facing message to describe the card selected for funding this payment transactio. Return type is String and no argument. parcelable representing more detailed information about a payment card,source,source,source,source
4185,CardInfo_getCardDetails,get card details from card info gets the last four digits of the selected car. Return type is String and no argument. parcelable representing more detailed information about a payment card,source,source,source,source
4186,CardInfo_getCardNetwork,get card network from card info gets the card network of the selected car. Return type is String and no argument. parcelable representing more detailed information about a payment card,source,source,source,source
4187,CardInfo_writeToParcel,write to parcel from card info . parcelable representing more detailed information about a payment card,sink,sink,sink,sink
4188,CardRequirements_allowPrepaidCards,allow prepaid cards from card requirements . card requirements for the returned payment card,neither,neither,neither,source
4189,CardRequirements_getAllowedCardNetworks,get allowed card networks from card requirements . card requirements for the returned payment card,source,source,source,source
4190,CardRequirements_getBillingAddressFormat,get billing address format from card requirements . card requirements for the returned payment card,source,source,source,source
4191,CardRequirements_isBillingAddressRequired,is billing address required from card requirements . card requirements for the returned payment card,neither,neither,neither,source
4192,CardRequirements_newBuilder,new builder from card requirements . card requirements for the returned payment card,neither,neither,neither,neither
4193,CardRequirements_writeToParcel,write to parcel from card requirements . card requirements for the returned payment card,sink,sink,sink,sink
4194,CardRequirements.Builder_addAllowedCardNetwork,add allowed card network from card requirements builder adds a card network supported for this purchas. Return type is Card Requirements. Builder and parameters are int. builder to create a card requirements,neither,neither,neither,sink
4195,CardRequirements.Builder_addAllowedCardNetworks,add allowed card networks from card requirements builder adds a set of card networks supported for this purchas. Return type is Card Requirements. Builder and parameters are collection. builder to create a card requirements,sink,sink,neither,sink
4196,CardRequirements.Builder_build,build from card requirements builder . builder to create a card requirements,neither,neither,neither,neither
4197,CardRequirements.Builder_setAllowPrepaidCards,set allow prepaid cards from card requirements builder sets whether a prepaid card may be used for this transactio. Return type is Card Requirements. Builder and parameters are boolean. builder to create a card requirements,sink,sink,sink,sink
4198,CardRequirements.Builder_setBillingAddressFormat,set billing address format from card requirements builder sets billing address forma. Return type is Card Requirements. Builder and parameters are int. builder to create a card requirements,sink,sink,sink,sink
4199,CardRequirements.Builder_setBillingAddressRequired,set billing address required from card requirements builder sets whether a billing address is required from the buye. Return type is Card Requirements. Builder and parameters are boolean. builder to create a card requirements,sink,sink,sink,sink
4200,CreateWalletObjectsRequest_getCreateMode,get create mode from create wallet objects request . parcelable representing request to create wallet objects,source,source,source,neither
4201,CreateWalletObjectsRequest_getGiftCardWalletObject,get gift card wallet object from create wallet objects request . parcelable representing request to create wallet objects,source,source,source,neither
4202,CreateWalletObjectsRequest_getLoyaltyWalletObject,get loyalty wallet object from create wallet objects request . parcelable representing request to create wallet objects,source,source,source,neither
4203,CreateWalletObjectsRequest_getOfferWalletObject,get offer wallet object from create wallet objects request . parcelable representing request to create wallet objects,source,source,source,neither
4204,CreateWalletObjectsRequest_newBuilder,new builder from create wallet objects request create a create wallet objects request builder for building a create wallet objects reques. Return type is Create Wallet Objects Request. Builder and no argument. parcelable representing request to create wallet objects,neither,neither,neither,neither
4205,CreateWalletObjectsRequest_writeToParcel,write to parcel from create wallet objects request . parcelable representing request to create wallet objects,sink,sink,sink,sink
4206,CreateWalletObjectsRequest.Builder_build,build from create wallet objects request builder . builder to create a create wallet objects request,neither,neither,neither,neither
4207,CreateWalletObjectsRequest.Builder_setCreateMode,set create mode from create wallet objects request builder sets the creation mode to us. Return type is Create Wallet Objects Request. Builder and parameters are int. builder to create a create wallet objects request,sink,sink,sink,sink
4208,CreateWalletObjectsRequest.Builder_setGiftCardWalletObject,set gift card wallet object from create wallet objects request builder sets the gift card wallet object to be create. Return type is Create Wallet Objects Request. Builder and parameters are gift card wallet object. builder to create a create wallet objects request,sink,sink,sink,sink
4209,CreateWalletObjectsRequest.Builder_setLoyaltyWalletObject,set loyalty wallet object from create wallet objects request builder sets the loyalty wallet object to be create. Return type is Create Wallet Objects Request. Builder and parameters are loyalty wallet object. builder to create a create wallet objects request,sink,sink,sink,sink
4210,CreateWalletObjectsRequest.Builder_setOfferWalletObject,set offer wallet object from create wallet objects request builder sets the offer wallet object to be create. Return type is Create Wallet Objects Request. Builder and parameters are offer wallet object. builder to create a create wallet objects request,sink,sink,sink,sink
4211,GiftCardWalletObject_getBalanceCurrencyCode,get balance currency code from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4212,GiftCardWalletObject_getBalanceMicros,get balance micros from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4213,GiftCardWalletObject_getBalanceUpdateTime,get balance update time from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4214,GiftCardWalletObject_getBarcodeAlternateText,get barcode alternate text from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4215,GiftCardWalletObject_getBarcodeLabel,get barcode label from gift card wallet object deprecate. Return type is String and no argument. parcelable representing a gift card wallet object,source,source,source,source
4216,GiftCardWalletObject_getBarcodeType,get barcode type from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4217,GiftCardWalletObject_getBarcodeValue,get barcode value from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4218,GiftCardWalletObject_getCardIdentifier,get card identifier from gift card wallet object deprecate. Return type is String and no argument. parcelable representing a gift card wallet object,source,source,source,source
4219,GiftCardWalletObject_getCardNumber,get card number from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4220,GiftCardWalletObject_getClassId,get class id from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4221,GiftCardWalletObject_getEventNumber,get event number from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4222,GiftCardWalletObject_getId,get id from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4223,GiftCardWalletObject_getImageModuleDataMainImageUris,get image module data main image uris from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4224,GiftCardWalletObject_getInfoModuleDataHexBackgroundColor,get info module data hex background color from gift card wallet object deprecate. Return type is String and no argument. parcelable representing a gift card wallet object,source,source,source,source
4225,GiftCardWalletObject_getInfoModuleDataHexFontColor,get info module data hex font color from gift card wallet object deprecate. Return type is String and no argument. parcelable representing a gift card wallet object,source,source,source,source
4226,GiftCardWalletObject_getInfoModuleDataLabelValueRows,get info module data label value rows from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4227,GiftCardWalletObject_getInfoModuleDataShowLastUpdateTime,get info module data show last update time from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4228,GiftCardWalletObject_getIssuerName,get issuer name from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4229,GiftCardWalletObject_getLinksModuleDataUris,get links module data uris from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4230,GiftCardWalletObject_getLocations,get locations from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4231,GiftCardWalletObject_getMessages,get messages from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4232,GiftCardWalletObject_getPin,get pin from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4233,GiftCardWalletObject_getState,get state from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4234,GiftCardWalletObject_getTextModulesData,get text modules data from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4235,GiftCardWalletObject_getTitle,get title from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4236,GiftCardWalletObject_getValidTimeInterval,get valid time interval from gift card wallet object . parcelable representing a gift card wallet object,source,source,source,source
4237,GiftCardWalletObject_newBuilder,new builder from gift card wallet object creates a helper instance whose implementation follows the builder pattern to create new objects of gift card wallet objec. Return type is Gift Card Wallet Object. Builder and no argument. parcelable representing a gift card wallet object,neither,neither,neither,neither
4238,GiftCardWalletObject_writeToParcel,write to parcel from gift card wallet object . parcelable representing a gift card wallet object,sink,sink,sink,sink
4239,GiftCardWalletObject.Builder_addImageModuleDataMainImageUri,add image module data main image uri from gift card wallet object builder adds an image module data image ur. Return type is Gift Card Wallet Object. Builder and parameters are uri data. builder for gift card wallet object,sink,sink,neither,neither
4240,GiftCardWalletObject.Builder_addImageModuleDataMainImageUris,add image module data main image uris from gift card wallet object builder adds a collection of image module data image uri. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,sink,neither,neither
4241,GiftCardWalletObject.Builder_addInfoModuleDataLabelValueRow,add info module data label value row from gift card wallet object builder adds an info module data label value ro. Return type is Gift Card Wallet Object. Builder and parameters are label value row. builder for gift card wallet object,neither,neither,neither,neither
4242,GiftCardWalletObject.Builder_addInfoModuleDataLabelValueRows,add info module data label value rows from gift card wallet object builder adds a collection of info module data label value row. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,neither,neither,neither
4243,GiftCardWalletObject.Builder_addLinksModuleDataUri,add links module data uri from gift card wallet object builder add a links module dat. Return type is Gift Card Wallet Object. Builder and parameters are uri data. builder for gift card wallet object,neither,neither,neither,neither
4244,GiftCardWalletObject.Builder_addLinksModuleDataUris,add links module data uris from gift card wallet object builder adds a collection of links module dat. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,neither,neither,neither
4245,GiftCardWalletObject.Builder_addLocation,add location from gift card wallet object builder adds the location where the wallet object can be use. Return type is Gift Card Wallet Object. Builder and parameters are lat lng. builder for gift card wallet object,sink,sink,neither,neither
4246,GiftCardWalletObject.Builder_addLocations,add locations from gift card wallet object builder adds the collection of locations where the wallet object can be use. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,neither,neither,neither
4247,GiftCardWalletObject.Builder_addMessage,add message from gift card wallet object builder adds a message to be associated with this objec. Return type is Gift Card Wallet Object. Builder and parameters are wallet object message. builder for gift card wallet object,sink,sink,neither,neither
4248,GiftCardWalletObject.Builder_addMessages,add messages from gift card wallet object builder adds a collection of messages to be associated with this objec. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,sink,neither,sink,neither
4249,GiftCardWalletObject.Builder_addTextModuleData,add text module data from gift card wallet object builder adds a text module dat. Return type is Gift Card Wallet Object. Builder and parameters are text module data. builder for gift card wallet object,sink,sink,sink,neither
4250,GiftCardWalletObject.Builder_addTextModulesData,add text modules data from gift card wallet object builder adds a collection of text modules dat. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,sink,sink,sink,neither
4251,GiftCardWalletObject.Builder_build,build from gift card wallet object builder . builder for gift card wallet object,neither,neither,neither,neither
4252,GiftCardWalletObject.Builder_setBalanceCurrencyCode,set balance currency code from gift card wallet object builder set the currency code for the current value of the gift car. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4253,GiftCardWalletObject.Builder_setBalanceMicros,"set balance micros from gift card wallet object builder sets the amount in the card balance, value represents micro. Return type is Gift Card Wallet Object. Builder and parameters are long. builder for gift card wallet object",sink,sink,sink,sink
4254,GiftCardWalletObject.Builder_setBalanceUpdateTime,"set balance update time from gift card wallet object builder sets a value indicating when was this card last updated, value represents milliseconds in unix epoc. Return type is Gift Card Wallet Object. Builder and parameters are long. builder for gift card wallet object",sink,sink,sink,sink
4255,GiftCardWalletObject.Builder_setBarcodeAlternateText,set barcode alternate text from gift card wallet object builder . builder for gift card wallet object,sink,sink,sink,sink
4256,GiftCardWalletObject.Builder_setBarcodeLabel,set barcode label from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4257,GiftCardWalletObject.Builder_setBarcodeType,set barcode type from gift card wallet object builder sets the type of the barcod. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4258,GiftCardWalletObject.Builder_setBarcodeValue,set barcode value from gift card wallet object builder sets the value encoded in the barcod. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4259,GiftCardWalletObject.Builder_setCardIdentifier,set card identifier from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4260,GiftCardWalletObject.Builder_setCardNumber,set card number from gift card wallet object builder sets the number identifying this car. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4261,GiftCardWalletObject.Builder_setClassId,set class id from gift card wallet object builder sets the id of the class associated with this objec. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4262,GiftCardWalletObject.Builder_setEventNumber,"set event number from gift card wallet object builder the card's event number, an optional field used by some gift card. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object",sink,sink,sink,sink
4263,GiftCardWalletObject.Builder_setId,set id from gift card wallet object builder . builder for gift card wallet object,sink,sink,sink,neither
4264,GiftCardWalletObject.Builder_setInfoModuleDataHexBackgroundColor,set info module data hex background color from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4265,GiftCardWalletObject.Builder_setInfoModuleDataHexFontColor,set info module data hex font color from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4266,GiftCardWalletObject.Builder_setInfoModuleDataShowLastUpdateTime,set info module data show last update time from gift card wallet object builder sets the flag which determines whether to display the last update time of the wallet objec. Return type is Gift Card Wallet Object. Builder and parameters are boolean. builder for gift card wallet object,sink,sink,sink,sink
4267,GiftCardWalletObject.Builder_setIssuerName,set issuer name from gift card wallet object builder sets the issuer name of this gift card objec. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4268,GiftCardWalletObject.Builder_setPin,set pin from gift card wallet object builder sets the card pi. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4269,GiftCardWalletObject.Builder_setState,set state from gift card wallet object builder sets gift card object stat. Return type is Gift Card Wallet Object. Builder and parameters are int. builder for gift card wallet object,sink,sink,sink,sink
4270,GiftCardWalletObject.Builder_setTitle,set title from gift card wallet object builder sets the gift card titl. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4271,GiftCardWalletObject.Builder_setValidTimeInterval,set valid time interval from gift card wallet object builder sets the time period this object will be active and can be use. Return type is Gift Card Wallet Object. Builder and parameters are time interval. builder for gift card wallet object,sink,sink,sink,sink
4272,InstrumentInfo_getCardClass,"get card class from instrument info class of a card that is either credit, debit or prepai. Return type is int and no argument. parcelable representing more detailed information about a payment instrument",source,source,source,source
4273,InstrumentInfo_getInstrumentDetails,get instrument details from instrument info details of an instrument that has a finite set of format. Return type is String and no argument. parcelable representing more detailed information about a payment instrument,source,source,source,source
4274,InstrumentInfo_getInstrumentType,get instrument type from instrument info type of an instrument that has a finite set of value. Return type is String and no argument. parcelable representing more detailed information about a payment instrument,source,source,source,source
4275,InstrumentInfo_writeToParcel,write to parcel from instrument info . parcelable representing more detailed information about a payment instrument,sink,sink,sink,sink
4276,IsReadyToPayRequest_fromJson,from json from is ready to pay request constructs is ready to pay request from a json object serialized as a strin. Return type is Is Ready To Pay Request and parameters are string. a parcelable request that can optionally be passed to is ready to pay to specify additional filtering criteria for determining if a user is considered ready to pay,neither,neither,neither,neither
4277,IsReadyToPayRequest_getAllowedCardNetworks,get allowed card networks from is ready to pay request deprecate. Return type is Array List and no argument. a parcelable request that can optionally be passed to is ready to pay to specify additional filtering criteria for determining if a user is considered ready to pay,source,source,source,source
4278,IsReadyToPayRequest_getAllowedPaymentMethods,get allowed payment methods from is ready to pay request deprecate. Return type is Array List and no argument. a parcelable request that can optionally be passed to is ready to pay to specify additional filtering criteria for determining if a user is considered ready to pay,source,source,source,source
4279,IsReadyToPayRequest_isExistingPaymentMethodRequired,is existing payment method required from is ready to pay request deprecate. Return type is boolean and no argument. a parcelable request that can optionally be passed to is ready to pay to specify additional filtering criteria for determining if a user is considered ready to pay,neither,neither,neither,source
4280,IsReadyToPayRequest_newBuilder,new builder from is ready to pay request deprecate. Return type is Is Ready To Pay Request. Builder and no argument. a parcelable request that can optionally be passed to is ready to pay to specify additional filtering criteria for determining if a user is considered ready to pay,neither,neither,neither,sink
4281,IsReadyToPayRequest_toJson,to json from is ready to pay request returns is ready to pay request in json forma. Return type is String and no argument. a parcelable request that can optionally be passed to is ready to pay to specify additional filtering criteria for determining if a user is considered ready to pay,neither,neither,neither,neither
4282,IsReadyToPayRequest.Builder_addAllowedCardNetwork,"add allowed card network from is ready to pay request builder adds a card network for cards allowed in the purchas. Return type is Is Ready To Pay Request. Builder and parameters are int. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4283,IsReadyToPayRequest.Builder_addAllowedCardNetworks,"add allowed card networks from is ready to pay request builder adds a collection of card networks for cards allowed in the purchas. Return type is Is Ready To Pay Request. Builder and parameters are collection. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4284,IsReadyToPayRequest.Builder_addAllowedPaymentMethod,"add allowed payment method from is ready to pay request builder adds an allowed payment metho. Return type is Is Ready To Pay Request. Builder and parameters are int. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4285,IsReadyToPayRequest.Builder_addAllowedPaymentMethods,"add allowed payment methods from is ready to pay request builder adds a collection of allowed payment method. Return type is Is Ready To Pay Request. Builder and parameters are collection. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4286,IsReadyToPayRequest.Builder_build,"build from is ready to pay request builder . this class is deprecated  use the json request format instead, see from json",neither,neither,neither,neither
4287,IsReadyToPayRequest.Builder_setExistingPaymentMethodRequired,"set existing payment method required from is ready to pay request builder if set to true, then is ready to pay will only return true if the user has an existing payment method that matches the other criteria specified in the is ready to pay reques. Return type is Is Ready To Pay Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4288,LoyaltyWalletObject_getAccountId,get account id from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4289,LoyaltyWalletObject_getAccountName,get account name from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4290,LoyaltyWalletObject_getBarcodeAlternateText,get barcode alternate text from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4291,LoyaltyWalletObject_getBarcodeLabel,get barcode label from loyalty wallet object deprecate. Return type is String and no argument. parcelable representing a loyalty wallet object,source,source,source,source
4292,LoyaltyWalletObject_getBarcodeType,get barcode type from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4293,LoyaltyWalletObject_getBarcodeValue,get barcode value from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4294,LoyaltyWalletObject_getClassId,get class id from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4295,LoyaltyWalletObject_getId,get id from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4296,LoyaltyWalletObject_getImageModuleDataMainImageUris,get image module data main image uris from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4297,LoyaltyWalletObject_getInfoModuleDataHexBackgroundColor,get info module data hex background color from loyalty wallet object deprecate. Return type is String and no argument. parcelable representing a loyalty wallet object,source,source,source,source
4298,LoyaltyWalletObject_getInfoModuleDataHexFontColor,get info module data hex font color from loyalty wallet object deprecate. Return type is String and no argument. parcelable representing a loyalty wallet object,source,source,source,source
4299,LoyaltyWalletObject_getInfoModuleDataLabelValueRows,get info module data label value rows from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4300,LoyaltyWalletObject_getInfoModuleDataShowLastUpdateTime,get info module data show last update time from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4301,LoyaltyWalletObject_getIssuerName,get issuer name from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4302,LoyaltyWalletObject_getLinksModuleDataUris,get links module data uris from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4303,LoyaltyWalletObject_getLocations,get locations from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,neither
4304,LoyaltyWalletObject_getLoyaltyPoints,get loyalty points from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4305,LoyaltyWalletObject_getMessages,get messages from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4306,LoyaltyWalletObject_getProgramName,get program name from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4307,LoyaltyWalletObject_getState,get state from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,neither
4308,LoyaltyWalletObject_getTextModulesData,get text modules data from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4309,LoyaltyWalletObject_getValidTimeInterval,get valid time interval from loyalty wallet object . parcelable representing a loyalty wallet object,source,source,source,source
4310,LoyaltyWalletObject_newBuilder,new builder from loyalty wallet object . parcelable representing a loyalty wallet object,neither,neither,neither,neither
4311,LoyaltyWalletObject_writeToParcel,write to parcel from loyalty wallet object . parcelable representing a loyalty wallet object,sink,sink,sink,sink
4312,LoyaltyWalletObject.Builder_addImageModuleDataMainImageUri,add image module data main image uri from loyalty wallet object builder adds an image module data image ur. Return type is Loyalty Wallet Object. Builder and parameters are uri data. builder to create a loyalty wallet object,sink,neither,neither,neither
4313,LoyaltyWalletObject.Builder_addImageModuleDataMainImageUris,add image module data main image uris from loyalty wallet object builder adds a collection of image module data image uri. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4314,LoyaltyWalletObject.Builder_addInfoModuleDataLabeValueRow,add info module data labe value row from loyalty wallet object builder adds an info module data label value ro. Return type is Loyalty Wallet Object. Builder and parameters are label value row. builder to create a loyalty wallet object,neither,neither,neither,neither
4315,LoyaltyWalletObject.Builder_addInfoModuleDataLabelValueRows,add info module data label value rows from loyalty wallet object builder adds a collection of info module data label value row. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4316,LoyaltyWalletObject.Builder_addLinksModuleDataUri,add links module data uri from loyalty wallet object builder add a links module dat. Return type is Loyalty Wallet Object. Builder and parameters are uri data. builder to create a loyalty wallet object,neither,neither,neither,neither
4317,LoyaltyWalletObject.Builder_addLinksModuleDataUris,add links module data uris from loyalty wallet object builder adds a collection of links module dat. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4318,LoyaltyWalletObject.Builder_addLocation,add location from loyalty wallet object builder adds the location where the wallet object can be use. Return type is Loyalty Wallet Object. Builder and parameters are lat lng. builder to create a loyalty wallet object,sink,sink,neither,neither
4319,LoyaltyWalletObject.Builder_addLocations,add locations from loyalty wallet object builder adds the collection of locations where the wallet object can be use. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4320,LoyaltyWalletObject.Builder_addMessage,add message from loyalty wallet object builder adds a message to be associated with this objec. Return type is Loyalty Wallet Object. Builder and parameters are wallet object message. builder to create a loyalty wallet object,sink,neither,neither,neither
4321,LoyaltyWalletObject.Builder_addMessages,add messages from loyalty wallet object builder adds a collection of messages to be associated with this objec. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4322,LoyaltyWalletObject.Builder_addTextModuleData,add text module data from loyalty wallet object builder adds a text module dat. Return type is Loyalty Wallet Object. Builder and parameters are text module data. builder to create a loyalty wallet object,sink,sink,neither,neither
4323,LoyaltyWalletObject.Builder_addTextModulesData,add text modules data from loyalty wallet object builder adds a collection of text modules dat. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,sink,sink,sink,neither
4324,LoyaltyWalletObject.Builder_build,build from loyalty wallet object builder . builder to create a loyalty wallet object,neither,neither,neither,neither
4325,LoyaltyWalletObject.Builder_setAccountId,set account id from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4326,LoyaltyWalletObject.Builder_setAccountName,set account name from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4327,LoyaltyWalletObject.Builder_setBarcodeAlternateText,set barcode alternate text from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4328,LoyaltyWalletObject.Builder_setBarcodeLabel,set barcode label from loyalty wallet object builder deprecate. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4329,LoyaltyWalletObject.Builder_setBarcodeType,set barcode type from loyalty wallet object builder sets the type of the barcod. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,neither
4330,LoyaltyWalletObject.Builder_setBarcodeValue,set barcode value from loyalty wallet object builder sets the value encoded in the barcod. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4331,LoyaltyWalletObject.Builder_setClassId,set class id from loyalty wallet object builder sets the id of the class associated with this objec. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,neither
4332,LoyaltyWalletObject.Builder_setId,set id from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4333,LoyaltyWalletObject.Builder_setInfoModuleDataHexBackgroundColor,set info module data hex background color from loyalty wallet object builder deprecate. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4334,LoyaltyWalletObject.Builder_setInfoModuleDataHexFontColor,set info module data hex font color from loyalty wallet object builder deprecate. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4335,LoyaltyWalletObject.Builder_setInfoModuleDataShowLastUpdateTime,set info module data show last update time from loyalty wallet object builder sets the flag which determines whether to display the last update time of the wallet objec. Return type is Loyalty Wallet Object. Builder and parameters are boolean. builder to create a loyalty wallet object,sink,sink,sink,sink
4336,LoyaltyWalletObject.Builder_setIssuerName,set issuer name from loyalty wallet object builder sets the issuer name of this loyalty progra. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4337,LoyaltyWalletObject.Builder_setLoyaltyPoints,set loyalty points from loyalty wallet object builder sets the loyalty reward point. Return type is Loyalty Wallet Object. Builder and parameters are loyalty points. builder to create a loyalty wallet object,sink,sink,sink,sink
4338,LoyaltyWalletObject.Builder_setProgramName,set program name from loyalty wallet object builder sets the loyalty program nam. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4339,LoyaltyWalletObject.Builder_setState,set state from loyalty wallet object builder sets loyalty wallet object stat. Return type is Loyalty Wallet Object. Builder and parameters are int. builder to create a loyalty wallet object,sink,sink,sink,sink
4340,LoyaltyWalletObject.Builder_setValidTimeInterval,set valid time interval from loyalty wallet object builder sets the time period this object will be active and can be use. Return type is Loyalty Wallet Object. Builder and parameters are time interval. builder to create a loyalty wallet object,sink,sink,sink,sink
4341,OfferWalletObject_getBarcodeAlternateText,get barcode alternate text from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4342,OfferWalletObject_getBarcodeLabel,get barcode label from offer wallet object deprecate. Return type is String and no argument. parcelable representing an offer wallet object,source,source,source,source
4343,OfferWalletObject_getBarcodeType,get barcode type from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4344,OfferWalletObject_getBarcodeValue,get barcode value from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4345,OfferWalletObject_getClassId,get class id from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4346,OfferWalletObject_getId,get id from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4347,OfferWalletObject_getImageModuleDataMainImageUris,get image module data main image uris from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4348,OfferWalletObject_getInfoModuleDataHexBackgroundColor,get info module data hex background color from offer wallet object deprecate. Return type is String and no argument. parcelable representing an offer wallet object,source,source,source,source
4349,OfferWalletObject_getInfoModuleDataHexFontColor,get info module data hex font color from offer wallet object deprecate. Return type is String and no argument. parcelable representing an offer wallet object,source,source,source,source
4350,OfferWalletObject_getInfoModuleDataLabelValueRows,get info module data label value rows from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4351,OfferWalletObject_getInfoModuleDataShowLastUpdateTime,get info module data show last update time from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4352,OfferWalletObject_getIssuerName,get issuer name from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4353,OfferWalletObject_getLinksModuleDataUris,get links module data uris from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4354,OfferWalletObject_getLocations,get locations from offer wallet object . parcelable representing an offer wallet object,source,source,source,neither
4355,OfferWalletObject_getMessages,get messages from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4356,OfferWalletObject_getRedemptionCode,get redemption code from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4357,OfferWalletObject_getState,get state from offer wallet object . parcelable representing an offer wallet object,source,source,source,neither
4358,OfferWalletObject_getTextModulesData,get text modules data from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4359,OfferWalletObject_getTitle,get title from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4360,OfferWalletObject_getValidTimeInterval,get valid time interval from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4361,OfferWalletObject_getVersionCode,get version code from offer wallet object . parcelable representing an offer wallet object,source,source,source,source
4362,OfferWalletObject_newBuilder,new builder from offer wallet object . parcelable representing an offer wallet object,neither,neither,neither,neither
4363,OfferWalletObject_writeToParcel,write to parcel from offer wallet object . parcelable representing an offer wallet object,sink,sink,sink,sink
4364,OfferWalletObject.Builder_addImageModuleDataMainImageUri,add image module data main image uri from offer wallet object builder adds an image module data image ur. Return type is Offer Wallet Object. Builder and parameters are uri data. builder to create a offer wallet object,sink,sink,neither,sink
4365,OfferWalletObject.Builder_addImageModuleDataMainImageUris,add image module data main image uris from offer wallet object builder adds a collection of image module data image uri. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,sink,sink,neither,neither
4366,OfferWalletObject.Builder_addInfoModuleDataLabelValueRow,add info module data label value row from offer wallet object builder adds an info module data label value ro. Return type is Offer Wallet Object. Builder and parameters are label value row. builder to create a offer wallet object,neither,neither,neither,neither
4367,OfferWalletObject.Builder_addInfoModuleDataLabelValueRows,add info module data label value rows from offer wallet object builder adds a collection of info module data label value row. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,neither,neither,neither,neither
4368,OfferWalletObject.Builder_addLinksModuleDataUri,add links module data uri from offer wallet object builder add a links module dat. Return type is Offer Wallet Object. Builder and parameters are uri data. builder to create a offer wallet object,neither,neither,neither,neither
4369,OfferWalletObject.Builder_addLinksModuleDataUris,add links module data uris from offer wallet object builder adds a collection of links module dat. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,neither,neither,neither,neither
4370,OfferWalletObject.Builder_addLocation,add location from offer wallet object builder adds the location where the wallet object can be use. Return type is Offer Wallet Object. Builder and parameters are lat lng. builder to create a offer wallet object,sink,sink,neither,neither
4371,OfferWalletObject.Builder_addLocations,add locations from offer wallet object builder adds the collection of locations where the wallet object can be use. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,neither,neither,neither,neither
4372,OfferWalletObject.Builder_addMessage,add message from offer wallet object builder adds a message to be associated with this objec. Return type is Offer Wallet Object. Builder and parameters are wallet object message. builder to create a offer wallet object,sink,neither,neither,neither
4373,OfferWalletObject.Builder_addMessages,add messages from offer wallet object builder adds a collection of messages to be associated with this objec. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,sink,neither,sink,neither
4374,OfferWalletObject.Builder_addTextModuleData,add text module data from offer wallet object builder adds a text module dat. Return type is Offer Wallet Object. Builder and parameters are text module data. builder to create a offer wallet object,sink,sink,sink,neither
4375,OfferWalletObject.Builder_addTextModulesData,add text modules data from offer wallet object builder adds a collection of text modules dat. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,sink,sink,sink,neither
4376,OfferWalletObject.Builder_build,build from offer wallet object builder . builder to create a offer wallet object,neither,neither,neither,neither
4377,OfferWalletObject.Builder_setBarcodeAlternateText,set barcode alternate text from offer wallet object builder . builder to create a offer wallet object,sink,sink,sink,sink
4378,OfferWalletObject.Builder_setBarcodeLabel,set barcode label from offer wallet object builder deprecate. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4379,OfferWalletObject.Builder_setBarcodeType,set barcode type from offer wallet object builder sets the type of the barcod. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4380,OfferWalletObject.Builder_setBarcodeValue,set barcode value from offer wallet object builder sets the value encoded in the barcod. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4381,OfferWalletObject.Builder_setClassId,set class id from offer wallet object builder sets the id of the class associated with this objec. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4382,OfferWalletObject.Builder_setId,set id from offer wallet object builder . builder to create a offer wallet object,sink,sink,sink,neither
4383,OfferWalletObject.Builder_setInfoModuleDataHexBackgroundColor,set info module data hex background color from offer wallet object builder deprecate. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4384,OfferWalletObject.Builder_setInfoModuleDataHexFontColor,set info module data hex font color from offer wallet object builder deprecate. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4385,OfferWalletObject.Builder_setInfoModuleDataShowLastUpdateTime,set info module data show last update time from offer wallet object builder sets the flag which determines whether to display the last update time of the wallet objec. Return type is Offer Wallet Object. Builder and parameters are boolean. builder to create a offer wallet object,sink,sink,sink,sink
4386,OfferWalletObject.Builder_setIssuerName,set issuer name from offer wallet object builder sets the issuer name of this offer objec. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4387,OfferWalletObject.Builder_setRedemptionCode,set redemption code from offer wallet object builder sets the redemption code of the offer wallet objec. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,neither
4388,OfferWalletObject.Builder_setState,set state from offer wallet object builder sets offer object stat. Return type is Offer Wallet Object. Builder and parameters are int. builder to create a offer wallet object,sink,sink,sink,sink
4389,OfferWalletObject.Builder_setTitle,set title from offer wallet object builder sets the offer titl. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4390,OfferWalletObject.Builder_setValidTimeInterval,set valid time interval from offer wallet object builder sets the time period this object will be active and can be use. Return type is Offer Wallet Object. Builder and parameters are time interval. builder to create a offer wallet object,sink,sink,sink,sink
4391,PaymentData_fromJson,"from json from payment data constructs payment data from a json object serialized as a strin. Return type is Payment Data and parameters are string. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",neither,neither,neither,neither
4392,PaymentData_getCardInfo,"get card info from payment data deprecate. Return type is Card Info and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4393,PaymentData_getEmail,"get email from payment data deprecate. Return type is String and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4394,PaymentData_getExtraData,"get extra data from payment data deprecate. Return type is Bundle and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4395,PaymentData_getFromIntent,"get from intent from payment data gets the payment data stored in the given intent extr. Return type is Payment Data and parameters are intent. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4396,PaymentData_getGoogleTransactionId,"get google transaction id from payment data deprecate. Return type is String and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4397,PaymentData_getPaymentMethodToken,"get payment method token from payment data deprecate. Return type is Payment Method Token and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4398,PaymentData_getShippingAddress,"get shipping address from payment data deprecate. Return type is User Address and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,source
4399,PaymentData_putIntoIntent,"put into intent from payment data saves the current payment data instance as an extra in the given inten. Return type is void and parameters are intent. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",sink,sink,sink,sink
4400,PaymentData_toJson,"to json from payment data returns payment data in json forma. Return type is String and no argument. parcelable representing a payment data response, which contains the necessary payment result to complete the payment",source,source,source,neither
4401,PaymentData_writeToParcel,"write to parcel from payment data . parcelable representing a payment data response, which contains the necessary payment result to complete the payment",sink,sink,sink,sink
4402,PaymentDataRequest_fromJson,"from json from payment data request constructs payment data request from a json object serialized as a strin. Return type is Payment Data Request and parameters are string. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,neither,neither
4403,PaymentDataRequest_getAllowedPaymentMethods,"get allowed payment methods from payment data request deprecate. Return type is Array List and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",source,source,source,source
4404,PaymentDataRequest_getCardRequirements,"get card requirements from payment data request deprecate. Return type is Card Requirements and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",source,source,source,source
4405,PaymentDataRequest_getPaymentMethodTokenizationParameters,"get payment method tokenization parameters from payment data request deprecate. Return type is Payment Method Tokenization Parameters and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",source,source,source,source
4406,PaymentDataRequest_getShippingAddressRequirements,"get shipping address requirements from payment data request deprecate. Return type is Shipping Address Requirements and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",source,source,source,source
4407,PaymentDataRequest_getTransactionInfo,"get transaction info from payment data request deprecate. Return type is Transaction Info and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",source,source,source,source
4408,PaymentDataRequest_isEmailRequired,"is email required from payment data request deprecate. Return type is boolean and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,neither,source
4409,PaymentDataRequest_isPhoneNumberRequired,"is phone number required from payment data request deprecate. Return type is boolean and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,neither,source
4410,PaymentDataRequest_isShippingAddressRequired,"is shipping address required from payment data request deprecate. Return type is boolean and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,neither,source
4411,PaymentDataRequest_isUiRequired,"is ui required from payment data request deprecate. Return type is boolean and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,neither,source
4412,PaymentDataRequest_newBuilder,"new builder from payment data request deprecate. Return type is Payment Data Request. Builder and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,neither,neither
4413,PaymentDataRequest_toJson,"to json from payment data request returns payment data request in json forma. Return type is String and no argument. parcelable representing a payment data request, which provides necessary information to support a payment",neither,neither,source,neither
4414,PaymentDataRequest_writeToParcel,"write to parcel from payment data request . parcelable representing a payment data request, which provides necessary information to support a payment",sink,sink,sink,sink
4415,PaymentDataRequest.Builder_addAllowedPaymentMethod,"add allowed payment method from payment data request builder adds an allowed payment metho. Return type is Payment Data Request. Builder and parameters are int. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4416,PaymentDataRequest.Builder_addAllowedPaymentMethods,"add allowed payment methods from payment data request builder adds a collection of allowed payment method. Return type is Payment Data Request. Builder and parameters are collection. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4417,PaymentDataRequest.Builder_build,"build from payment data request builder . this class is deprecated  use the json request format instead, see from json",neither,neither,neither,neither
4418,PaymentDataRequest.Builder_setCardRequirements,"set card requirements from payment data request builder sets the card requirement. Return type is Payment Data Request. Builder and parameters are card requirements. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4419,PaymentDataRequest.Builder_setEmailRequired,"set email required from payment data request builder sets whether buyer's email is require. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4420,PaymentDataRequest.Builder_setPaymentMethodTokenizationParameters,"set payment method tokenization parameters from payment data request builder sets payment method tokenization parameters which will be used to tokenize the payment method returned within get payment method tok. Return type is Payment Data Request. Builder and parameters are payment method tokenization parameters. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4421,PaymentDataRequest.Builder_setPhoneNumberRequired,"set phone number required from payment data request builder sets whether a phone number is additionally required from the buyer in both shipping and billing addresse. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4422,PaymentDataRequest.Builder_setShippingAddressRequired,"set shipping address required from payment data request builder sets whether a shipping address is required from the buye. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4423,PaymentDataRequest.Builder_setShippingAddressRequirements,"set shipping address requirements from payment data request builder sets the shipping address requirement. Return type is Payment Data Request. Builder and parameters are shipping address requirements. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4424,PaymentDataRequest.Builder_setTransactionInfo,"set transaction info from payment data request builder sets detailed transaction inf. Return type is Payment Data Request. Builder and parameters are transaction info. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4425,PaymentDataRequest.Builder_setUiRequired,"set ui required from payment data request builder sets whether the ui to show the payment method or shipping address selection is required to be shown in the purchase flo. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4426,PaymentInstrumentType_getAll,get all from payment instrument type . payment instrument types that a merchant can support,source,source,source,source
4427,PaymentMethodToken_getPaymentMethodTokenizationType,get payment method tokenization type from payment method token . parcelable representing payment method token,source,source,source,source
4428,PaymentMethodToken_getToken,get token from payment method token . parcelable representing payment method token,source,source,source,source
4429,PaymentMethodToken_writeToParcel,write to parcel from payment method token . parcelable representing payment method token,sink,sink,sink,sink
4430,PaymentMethodTokenizationParameters_getParameters,get parameters from payment method tokenization parameters payment method tokenization parameter. Return type is Bundle and no argument. tokenization parameters passed by the integrator used to tokenize the credit card selected by the user,source,source,source,source
4431,PaymentMethodTokenizationParameters_getPaymentMethodTokenizationType,get payment method tokenization type from payment method tokenization parameters payment method tokenization typ. Return type is int and no argument. tokenization parameters passed by the integrator used to tokenize the credit card selected by the user,source,source,source,source
4432,PaymentMethodTokenizationParameters_newBuilder,new builder from payment method tokenization parameters . tokenization parameters passed by the integrator used to tokenize the credit card selected by the user,neither,neither,neither,sink
4433,PaymentMethodTokenizationParameters_writeToParcel,write to parcel from payment method tokenization parameters . tokenization parameters passed by the integrator used to tokenize the credit card selected by the user,sink,sink,sink,sink
4434,PaymentMethodTokenizationParameters.Builder_addParameter,add parameter from payment method tokenization parameters builder adds tokenization specific parameter. Return type is Payment Method Tokenization Parameters. Builder and parameters are string string. builder to create a payment method tokenization parameters,neither,sink,sink,neither
4435,PaymentMethodTokenizationParameters.Builder_build,build from payment method tokenization parameters builder . builder to create a payment method tokenization parameters,neither,neither,neither,neither
4436,PaymentMethodTokenizationParameters.Builder_setPaymentMethodTokenizationType,set payment method tokenization type from payment method tokenization parameters builder sets payment method tokenization typ. Return type is Payment Method Tokenization Parameters. Builder and parameters are int. builder to create a payment method tokenization parameters,sink,sink,sink,sink
4437,PaymentsClient_isReadyToPay,is ready to pay from payments client determines if the user can make payments using the google pay ap. Return type is Task and parameters are is ready to pay request. client for interacting with the google pay api,neither,neither,neither,source
4438,PaymentsClient_loadPaymentData,"load payment data from payments client requests payment data, which contains the necessary information to complete a paymen. Return type is Task and parameters are payment data request. client for interacting with the google pay api",neither,neither,neither,sink
4439,ShippingAddressRequirements_getAllowedCountryCodes,get allowed country codes from shipping address requirements . optional shipping address requirements for the returned shipping address,source,source,source,source
4440,ShippingAddressRequirements_newBuilder,new builder from shipping address requirements . optional shipping address requirements for the returned shipping address,neither,neither,neither,neither
4441,ShippingAddressRequirements_writeToParcel,write to parcel from shipping address requirements . optional shipping address requirements for the returned shipping address,sink,sink,sink,sink
4442,ShippingAddressRequirements.Builder_addAllowedCountryCode,add allowed country code from shipping address requirements builder adds a country code of the country to which shipping is allowed in this transactio. Return type is Shipping Address Requirements. Builder and parameters are string. builder to create a shipping address requirements,sink,sink,sink,sink
4443,ShippingAddressRequirements.Builder_addAllowedCountryCodes,add allowed country codes from shipping address requirements builder adds a collection of country codes of the countries to which shipping is allowed in this transactio. Return type is Shipping Address Requirements. Builder and parameters are collection. builder to create a shipping address requirements,sink,sink,sink,sink
4444,ShippingAddressRequirements.Builder_build,build from shipping address requirements builder . builder to create a shipping address requirements,neither,neither,neither,neither
4445,TransactionInfo_getCurrencyCode,get currency code from transaction info . parcelable representing the detailed info about the transaction,source,source,source,source
4446,TransactionInfo_getTotalPrice,get total price from transaction info . parcelable representing the detailed info about the transaction,source,source,source,source
4447,TransactionInfo_getTotalPriceStatus,get total price status from transaction info . parcelable representing the detailed info about the transaction,source,source,source,source
4448,TransactionInfo_newBuilder,new builder from transaction info builder to create a transaction inf. Return type is Transaction Info. Builder and no argument. parcelable representing the detailed info about the transaction,neither,neither,neither,sink
4449,TransactionInfo_writeToParcel,write to parcel from transaction info . parcelable representing the detailed info about the transaction,sink,sink,sink,sink
4450,TransactionInfo.Builder_build,build from transaction info builder . builder to create a transaction info,neither,neither,sink,neither
4451,TransactionInfo.Builder_setCurrencyCode,set currency code from transaction info builder sets the iso 4217 alphabetic currency code of the transactio. Return type is Transaction Info. Builder and parameters are string. builder to create a transaction info,sink,sink,sink,sink
4452,TransactionInfo.Builder_setTotalPrice,set total price from transaction info builder sets the total price of this transactio. Return type is Transaction Info. Builder and parameters are string. builder to create a transaction info,sink,sink,sink,sink
4453,TransactionInfo.Builder_setTotalPriceStatus,set total price status from transaction info builder sets the status of this transaction's total pric. Return type is Transaction Info. Builder and parameters are int. builder to create a transaction info,sink,sink,sink,sink
4454,Wallet_getPaymentsClient,get payments client from wallet create a new instance of payments client for use in an activit. Return type is Payments Client and parameters are activity wallet wallet options. the main entry point for wallet library integration,source,source,source,source
4455,Wallet_getPaymentsClient,get payments client from wallet create a new instance of payments client for use in a non- activity contex. Return type is Payments Client and parameters are context wallet wallet options. the main entry point for wallet library integration,source,source,source,source
4456,Wallet_getWalletObjectsClient,get wallet objects client from wallet create a new instance of wallet objects client for use in an activit. Return type is Wallet Objects Client and parameters are activity wallet wallet options. the main entry point for wallet library integration,source,source,source,source
4457,Wallet.WalletOptions_equals,equals from wallet wallet options . options for using the wallet api,neither,neither,source,neither
4458,Wallet.WalletOptions_getAccount,get account from wallet wallet options . options for using the wallet api,source,source,source,source
4459,Wallet.WalletOptions_hashCode,hash code from wallet wallet options . options for using the wallet api,source,source,source,source
4460,Wallet.WalletOptions.Builder_build,build from wallet wallet options builder . wallet builder,sink,sink,neither,neither
4461,Wallet.WalletOptions.Builder_setEnvironment,set environment from wallet wallet options builder . wallet builder,sink,sink,sink,sink
4462,Wallet.WalletOptions.Builder_setTheme,set theme from wallet wallet options builder . wallet builder,sink,sink,sink,sink
4463,Wallet.WalletOptions.Builder_useGoogleWallet,use google wallet from wallet wallet options builder deprecate. Return type is Wallet. Wallet Options. Builder and no argument. wallet builder,source,neither,source,source
4464,WalletObjectsClient_createWalletObjects,create wallet objects from wallet objects client launches a ui allowing the user to save a wallet objec. Return type is Task and parameters are create wallet objects request. entry point for wallet objects functionality,sink,neither,neither,neither
4465,AutoResolvableResult_putIntoIntent,put into intent from auto resolvable result saves the intent as an extra into the given inten. Return type is  void and parameters are intent. marks task results which may involve showing ui to be resolved through resolvable api exception and that support automatic resolution through the use of auto resolve helper,sink,sink,sink,sink
4466,CardRequirements.Builder_addAllowedCardNetwork,add allowed card network from card requirements builder adds a card network supported for this purchas. Return type is Card Requirements. Builder and parameters are int. builder to create a card requirements,neither,neither,neither,sink
4467,CardRequirements.Builder_addAllowedCardNetworks,add allowed card networks from card requirements builder adds a set of card networks supported for this purchas. Return type is Card Requirements. Builder and parameters are collection. builder to create a card requirements,sink,sink,neither,sink
4468,CardRequirements.Builder_build,build from card requirements builder . builder to create a card requirements,neither,neither,neither,neither
4469,CardRequirements.Builder_setAllowPrepaidCards,set allow prepaid cards from card requirements builder sets whether a prepaid card may be used for this transactio. Return type is Card Requirements. Builder and parameters are boolean. builder to create a card requirements,sink,sink,sink,sink
4470,CardRequirements.Builder_setBillingAddressFormat,set billing address format from card requirements builder sets billing address forma. Return type is Card Requirements. Builder and parameters are int. builder to create a card requirements,sink,sink,sink,sink
4471,CardRequirements.Builder_setBillingAddressRequired,set billing address required from card requirements builder sets whether a billing address is required from the buye. Return type is Card Requirements. Builder and parameters are boolean. builder to create a card requirements,sink,sink,sink,sink
4472,CreateWalletObjectsRequest.Builder_build,build from create wallet objects request builder . builder to create a create wallet objects request,neither,neither,neither,neither
4473,CreateWalletObjectsRequest.Builder_setCreateMode,set create mode from create wallet objects request builder sets the creation mode to us. Return type is Create Wallet Objects Request. Builder and parameters are int. builder to create a create wallet objects request,sink,sink,sink,sink
4474,CreateWalletObjectsRequest.Builder_setGiftCardWalletObject,set gift card wallet object from create wallet objects request builder sets the gift card wallet object to be create. Return type is Create Wallet Objects Request. Builder and parameters are gift card wallet object. builder to create a create wallet objects request,sink,sink,sink,sink
4475,CreateWalletObjectsRequest.Builder_setLoyaltyWalletObject,set loyalty wallet object from create wallet objects request builder sets the loyalty wallet object to be create. Return type is Create Wallet Objects Request. Builder and parameters are loyalty wallet object. builder to create a create wallet objects request,sink,sink,sink,sink
4476,CreateWalletObjectsRequest.Builder_setOfferWalletObject,set offer wallet object from create wallet objects request builder sets the offer wallet object to be create. Return type is Create Wallet Objects Request. Builder and parameters are offer wallet object. builder to create a create wallet objects request,sink,sink,sink,sink
4477,GiftCardWalletObject.Builder_addImageModuleDataMainImageUri,add image module data main image uri from gift card wallet object builder adds an image module data image ur. Return type is Gift Card Wallet Object. Builder and parameters are uri data. builder for gift card wallet object,sink,sink,neither,neither
4478,GiftCardWalletObject.Builder_addImageModuleDataMainImageUris,add image module data main image uris from gift card wallet object builder adds a collection of image module data image uri. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,sink,neither,neither
4479,GiftCardWalletObject.Builder_addInfoModuleDataLabelValueRow,add info module data label value row from gift card wallet object builder adds an info module data label value ro. Return type is Gift Card Wallet Object. Builder and parameters are label value row. builder for gift card wallet object,neither,neither,neither,neither
4480,GiftCardWalletObject.Builder_addInfoModuleDataLabelValueRows,add info module data label value rows from gift card wallet object builder adds a collection of info module data label value row. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,neither,neither,neither
4481,GiftCardWalletObject.Builder_addLinksModuleDataUri,add links module data uri from gift card wallet object builder add a links module dat. Return type is Gift Card Wallet Object. Builder and parameters are uri data. builder for gift card wallet object,neither,neither,neither,neither
4482,GiftCardWalletObject.Builder_addLinksModuleDataUris,add links module data uris from gift card wallet object builder adds a collection of links module dat. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,neither,neither,neither
4483,GiftCardWalletObject.Builder_addLocation,add location from gift card wallet object builder adds the location where the wallet object can be use. Return type is Gift Card Wallet Object. Builder and parameters are lat lng. builder for gift card wallet object,sink,sink,neither,neither
4484,GiftCardWalletObject.Builder_addLocations,add locations from gift card wallet object builder adds the collection of locations where the wallet object can be use. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,neither,neither,neither,neither
4485,GiftCardWalletObject.Builder_addMessage,add message from gift card wallet object builder adds a message to be associated with this objec. Return type is Gift Card Wallet Object. Builder and parameters are wallet object message. builder for gift card wallet object,sink,sink,neither,neither
4486,GiftCardWalletObject.Builder_addMessages,add messages from gift card wallet object builder adds a collection of messages to be associated with this objec. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,sink,neither,sink,neither
4487,GiftCardWalletObject.Builder_addTextModuleData,add text module data from gift card wallet object builder adds a text module dat. Return type is Gift Card Wallet Object. Builder and parameters are text module data. builder for gift card wallet object,sink,sink,sink,neither
4488,GiftCardWalletObject.Builder_addTextModulesData,add text modules data from gift card wallet object builder adds a collection of text modules dat. Return type is Gift Card Wallet Object. Builder and parameters are collection. builder for gift card wallet object,sink,sink,sink,neither
4489,GiftCardWalletObject.Builder_build,build from gift card wallet object builder . builder for gift card wallet object,neither,neither,neither,neither
4490,GiftCardWalletObject.Builder_setBalanceCurrencyCode,set balance currency code from gift card wallet object builder set the currency code for the current value of the gift car. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4491,GiftCardWalletObject.Builder_setBalanceMicros,"set balance micros from gift card wallet object builder sets the amount in the card balance, value represents micro. Return type is Gift Card Wallet Object. Builder and parameters are long. builder for gift card wallet object",sink,sink,sink,sink
4492,GiftCardWalletObject.Builder_setBalanceUpdateTime,"set balance update time from gift card wallet object builder sets a value indicating when was this card last updated, value represents milliseconds in unix epoc. Return type is Gift Card Wallet Object. Builder and parameters are long. builder for gift card wallet object",sink,sink,sink,sink
4493,GiftCardWalletObject.Builder_setBarcodeAlternateText,set barcode alternate text from gift card wallet object builder . builder for gift card wallet object,sink,sink,sink,sink
4494,GiftCardWalletObject.Builder_setBarcodeLabel,set barcode label from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4495,GiftCardWalletObject.Builder_setBarcodeType,set barcode type from gift card wallet object builder sets the type of the barcod. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4496,GiftCardWalletObject.Builder_setBarcodeValue,set barcode value from gift card wallet object builder sets the value encoded in the barcod. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4497,GiftCardWalletObject.Builder_setCardIdentifier,set card identifier from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4498,GiftCardWalletObject.Builder_setCardNumber,set card number from gift card wallet object builder sets the number identifying this car. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4499,GiftCardWalletObject.Builder_setClassId,set class id from gift card wallet object builder sets the id of the class associated with this objec. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4500,GiftCardWalletObject.Builder_setEventNumber,"set event number from gift card wallet object builder the card's event number, an optional field used by some gift card. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object",sink,sink,sink,sink
4501,GiftCardWalletObject.Builder_setId,set id from gift card wallet object builder . builder for gift card wallet object,sink,sink,sink,neither
4502,GiftCardWalletObject.Builder_setInfoModuleDataHexBackgroundColor,set info module data hex background color from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4503,GiftCardWalletObject.Builder_setInfoModuleDataHexFontColor,set info module data hex font color from gift card wallet object builder deprecate. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4504,GiftCardWalletObject.Builder_setInfoModuleDataShowLastUpdateTime,set info module data show last update time from gift card wallet object builder sets the flag which determines whether to display the last update time of the wallet objec. Return type is Gift Card Wallet Object. Builder and parameters are boolean. builder for gift card wallet object,sink,sink,sink,sink
4505,GiftCardWalletObject.Builder_setIssuerName,set issuer name from gift card wallet object builder sets the issuer name of this gift card objec. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4506,GiftCardWalletObject.Builder_setPin,set pin from gift card wallet object builder sets the card pi. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4507,GiftCardWalletObject.Builder_setState,set state from gift card wallet object builder sets gift card object stat. Return type is Gift Card Wallet Object. Builder and parameters are int. builder for gift card wallet object,sink,sink,sink,sink
4508,GiftCardWalletObject.Builder_setTitle,set title from gift card wallet object builder sets the gift card titl. Return type is Gift Card Wallet Object. Builder and parameters are string. builder for gift card wallet object,sink,sink,sink,sink
4509,GiftCardWalletObject.Builder_setValidTimeInterval,set valid time interval from gift card wallet object builder sets the time period this object will be active and can be use. Return type is Gift Card Wallet Object. Builder and parameters are time interval. builder for gift card wallet object,sink,sink,sink,sink
4510,IsReadyToPayRequest.Builder_addAllowedCardNetwork,"add allowed card network from is ready to pay request builder adds a card network for cards allowed in the purchas. Return type is Is Ready To Pay Request. Builder and parameters are int. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4511,IsReadyToPayRequest.Builder_addAllowedCardNetworks,"add allowed card networks from is ready to pay request builder adds a collection of card networks for cards allowed in the purchas. Return type is Is Ready To Pay Request. Builder and parameters are collection. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4512,IsReadyToPayRequest.Builder_addAllowedPaymentMethod,"add allowed payment method from is ready to pay request builder adds an allowed payment metho. Return type is Is Ready To Pay Request. Builder and parameters are int. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4513,IsReadyToPayRequest.Builder_addAllowedPaymentMethods,"add allowed payment methods from is ready to pay request builder adds a collection of allowed payment method. Return type is Is Ready To Pay Request. Builder and parameters are collection. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4514,IsReadyToPayRequest.Builder_build,"build from is ready to pay request builder . this class is deprecated  use the json request format instead, see from json",neither,neither,neither,neither
4515,IsReadyToPayRequest.Builder_setExistingPaymentMethodRequired,"set existing payment method required from is ready to pay request builder if set to true, then is ready to pay will only return true if the user has an existing payment method that matches the other criteria specified in the is ready to pay reques. Return type is Is Ready To Pay Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4516,LoyaltyWalletObject.Builder_addImageModuleDataMainImageUri,add image module data main image uri from loyalty wallet object builder adds an image module data image ur. Return type is Loyalty Wallet Object. Builder and parameters are uri data. builder to create a loyalty wallet object,sink,neither,neither,neither
4517,LoyaltyWalletObject.Builder_addImageModuleDataMainImageUris,add image module data main image uris from loyalty wallet object builder adds a collection of image module data image uri. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4518,LoyaltyWalletObject.Builder_addInfoModuleDataLabeValueRow,add info module data labe value row from loyalty wallet object builder adds an info module data label value ro. Return type is Loyalty Wallet Object. Builder and parameters are label value row. builder to create a loyalty wallet object,neither,neither,neither,neither
4519,LoyaltyWalletObject.Builder_addInfoModuleDataLabelValueRows,add info module data label value rows from loyalty wallet object builder adds a collection of info module data label value row. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4520,LoyaltyWalletObject.Builder_addLinksModuleDataUri,add links module data uri from loyalty wallet object builder add a links module dat. Return type is Loyalty Wallet Object. Builder and parameters are uri data. builder to create a loyalty wallet object,neither,neither,neither,neither
4521,LoyaltyWalletObject.Builder_addLinksModuleDataUris,add links module data uris from loyalty wallet object builder adds a collection of links module dat. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4522,LoyaltyWalletObject.Builder_addLocation,add location from loyalty wallet object builder adds the location where the wallet object can be use. Return type is Loyalty Wallet Object. Builder and parameters are lat lng. builder to create a loyalty wallet object,sink,sink,neither,neither
4523,LoyaltyWalletObject.Builder_addLocations,add locations from loyalty wallet object builder adds the collection of locations where the wallet object can be use. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4524,LoyaltyWalletObject.Builder_addMessage,add message from loyalty wallet object builder adds a message to be associated with this objec. Return type is Loyalty Wallet Object. Builder and parameters are wallet object message. builder to create a loyalty wallet object,sink,neither,neither,neither
4525,LoyaltyWalletObject.Builder_addMessages,add messages from loyalty wallet object builder adds a collection of messages to be associated with this objec. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,neither,neither,neither,neither
4526,LoyaltyWalletObject.Builder_addTextModuleData,add text module data from loyalty wallet object builder adds a text module dat. Return type is Loyalty Wallet Object. Builder and parameters are text module data. builder to create a loyalty wallet object,sink,sink,neither,neither
4527,LoyaltyWalletObject.Builder_addTextModulesData,add text modules data from loyalty wallet object builder adds a collection of text modules dat. Return type is Loyalty Wallet Object. Builder and parameters are collection. builder to create a loyalty wallet object,sink,sink,sink,neither
4528,LoyaltyWalletObject.Builder_build,build from loyalty wallet object builder . builder to create a loyalty wallet object,neither,neither,neither,neither
4529,LoyaltyWalletObject.Builder_setAccountId,set account id from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4530,LoyaltyWalletObject.Builder_setAccountName,set account name from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4531,LoyaltyWalletObject.Builder_setBarcodeAlternateText,set barcode alternate text from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4532,LoyaltyWalletObject.Builder_setBarcodeLabel,set barcode label from loyalty wallet object builder deprecate. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4533,LoyaltyWalletObject.Builder_setBarcodeType,set barcode type from loyalty wallet object builder sets the type of the barcod. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,neither
4534,LoyaltyWalletObject.Builder_setBarcodeValue,set barcode value from loyalty wallet object builder sets the value encoded in the barcod. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4535,LoyaltyWalletObject.Builder_setClassId,set class id from loyalty wallet object builder sets the id of the class associated with this objec. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,neither
4536,LoyaltyWalletObject.Builder_setId,set id from loyalty wallet object builder . builder to create a loyalty wallet object,sink,sink,sink,neither
4537,LoyaltyWalletObject.Builder_setInfoModuleDataHexBackgroundColor,set info module data hex background color from loyalty wallet object builder deprecate. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4538,LoyaltyWalletObject.Builder_setInfoModuleDataHexFontColor,set info module data hex font color from loyalty wallet object builder deprecate. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4539,LoyaltyWalletObject.Builder_setInfoModuleDataShowLastUpdateTime,set info module data show last update time from loyalty wallet object builder sets the flag which determines whether to display the last update time of the wallet objec. Return type is Loyalty Wallet Object. Builder and parameters are boolean. builder to create a loyalty wallet object,sink,sink,sink,sink
4540,LoyaltyWalletObject.Builder_setIssuerName,set issuer name from loyalty wallet object builder sets the issuer name of this loyalty progra. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4541,LoyaltyWalletObject.Builder_setLoyaltyPoints,set loyalty points from loyalty wallet object builder sets the loyalty reward point. Return type is Loyalty Wallet Object. Builder and parameters are loyalty points. builder to create a loyalty wallet object,sink,sink,sink,sink
4542,LoyaltyWalletObject.Builder_setProgramName,set program name from loyalty wallet object builder sets the loyalty program nam. Return type is Loyalty Wallet Object. Builder and parameters are string. builder to create a loyalty wallet object,sink,sink,sink,sink
4543,LoyaltyWalletObject.Builder_setState,set state from loyalty wallet object builder sets loyalty wallet object stat. Return type is Loyalty Wallet Object. Builder and parameters are int. builder to create a loyalty wallet object,sink,sink,sink,sink
4544,LoyaltyWalletObject.Builder_setValidTimeInterval,set valid time interval from loyalty wallet object builder sets the time period this object will be active and can be use. Return type is Loyalty Wallet Object. Builder and parameters are time interval. builder to create a loyalty wallet object,sink,sink,sink,sink
4545,OfferWalletObject.Builder_addImageModuleDataMainImageUri,add image module data main image uri from offer wallet object builder adds an image module data image ur. Return type is Offer Wallet Object. Builder and parameters are uri data. builder to create a offer wallet object,sink,sink,neither,sink
4546,OfferWalletObject.Builder_addImageModuleDataMainImageUris,add image module data main image uris from offer wallet object builder adds a collection of image module data image uri. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,sink,sink,neither,neither
4547,OfferWalletObject.Builder_addInfoModuleDataLabelValueRow,add info module data label value row from offer wallet object builder adds an info module data label value ro. Return type is Offer Wallet Object. Builder and parameters are label value row. builder to create a offer wallet object,neither,neither,neither,neither
4548,OfferWalletObject.Builder_addInfoModuleDataLabelValueRows,add info module data label value rows from offer wallet object builder adds a collection of info module data label value row. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,neither,neither,neither,neither
4549,OfferWalletObject.Builder_addLinksModuleDataUri,add links module data uri from offer wallet object builder add a links module dat. Return type is Offer Wallet Object. Builder and parameters are uri data. builder to create a offer wallet object,neither,neither,neither,neither
4550,OfferWalletObject.Builder_addLinksModuleDataUris,add links module data uris from offer wallet object builder adds a collection of links module dat. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,neither,neither,neither,neither
4551,OfferWalletObject.Builder_addLocation,add location from offer wallet object builder adds the location where the wallet object can be use. Return type is Offer Wallet Object. Builder and parameters are lat lng. builder to create a offer wallet object,sink,sink,neither,neither
4552,OfferWalletObject.Builder_addLocations,add locations from offer wallet object builder adds the collection of locations where the wallet object can be use. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,neither,neither,neither,neither
4553,OfferWalletObject.Builder_addMessage,add message from offer wallet object builder adds a message to be associated with this objec. Return type is Offer Wallet Object. Builder and parameters are wallet object message. builder to create a offer wallet object,sink,neither,neither,neither
4554,OfferWalletObject.Builder_addMessages,add messages from offer wallet object builder adds a collection of messages to be associated with this objec. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,sink,neither,sink,neither
4555,OfferWalletObject.Builder_addTextModuleData,add text module data from offer wallet object builder adds a text module dat. Return type is Offer Wallet Object. Builder and parameters are text module data. builder to create a offer wallet object,sink,sink,sink,neither
4556,OfferWalletObject.Builder_addTextModulesData,add text modules data from offer wallet object builder adds a collection of text modules dat. Return type is Offer Wallet Object. Builder and parameters are collection. builder to create a offer wallet object,sink,sink,sink,neither
4557,OfferWalletObject.Builder_build,build from offer wallet object builder . builder to create a offer wallet object,neither,neither,neither,neither
4558,OfferWalletObject.Builder_setBarcodeAlternateText,set barcode alternate text from offer wallet object builder . builder to create a offer wallet object,sink,sink,sink,sink
4559,OfferWalletObject.Builder_setBarcodeLabel,set barcode label from offer wallet object builder deprecate. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4560,OfferWalletObject.Builder_setBarcodeType,set barcode type from offer wallet object builder sets the type of the barcod. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4561,OfferWalletObject.Builder_setBarcodeValue,set barcode value from offer wallet object builder sets the value encoded in the barcod. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4562,OfferWalletObject.Builder_setClassId,set class id from offer wallet object builder sets the id of the class associated with this objec. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4563,OfferWalletObject.Builder_setId,set id from offer wallet object builder . builder to create a offer wallet object,sink,sink,sink,neither
4564,OfferWalletObject.Builder_setInfoModuleDataHexBackgroundColor,set info module data hex background color from offer wallet object builder deprecate. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4565,OfferWalletObject.Builder_setInfoModuleDataHexFontColor,set info module data hex font color from offer wallet object builder deprecate. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4566,OfferWalletObject.Builder_setInfoModuleDataShowLastUpdateTime,set info module data show last update time from offer wallet object builder sets the flag which determines whether to display the last update time of the wallet objec. Return type is Offer Wallet Object. Builder and parameters are boolean. builder to create a offer wallet object,sink,sink,sink,sink
4567,OfferWalletObject.Builder_setIssuerName,set issuer name from offer wallet object builder sets the issuer name of this offer objec. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4568,OfferWalletObject.Builder_setRedemptionCode,set redemption code from offer wallet object builder sets the redemption code of the offer wallet objec. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,neither
4569,OfferWalletObject.Builder_setState,set state from offer wallet object builder sets offer object stat. Return type is Offer Wallet Object. Builder and parameters are int. builder to create a offer wallet object,sink,sink,sink,sink
4570,OfferWalletObject.Builder_setTitle,set title from offer wallet object builder sets the offer titl. Return type is Offer Wallet Object. Builder and parameters are string. builder to create a offer wallet object,sink,sink,sink,sink
4571,OfferWalletObject.Builder_setValidTimeInterval,set valid time interval from offer wallet object builder sets the time period this object will be active and can be use. Return type is Offer Wallet Object. Builder and parameters are time interval. builder to create a offer wallet object,sink,sink,sink,sink
4572,PaymentDataRequest.Builder_addAllowedPaymentMethod,"add allowed payment method from payment data request builder adds an allowed payment metho. Return type is Payment Data Request. Builder and parameters are int. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4573,PaymentDataRequest.Builder_addAllowedPaymentMethods,"add allowed payment methods from payment data request builder adds a collection of allowed payment method. Return type is Payment Data Request. Builder and parameters are collection. this class is deprecated  use the json request format instead, see from json",neither,neither,neither,sink
4574,PaymentDataRequest.Builder_build,"build from payment data request builder . this class is deprecated  use the json request format instead, see from json",neither,neither,neither,neither
4575,PaymentDataRequest.Builder_setCardRequirements,"set card requirements from payment data request builder sets the card requirement. Return type is Payment Data Request. Builder and parameters are card requirements. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4576,PaymentDataRequest.Builder_setEmailRequired,"set email required from payment data request builder sets whether buyer's email is require. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4577,PaymentDataRequest.Builder_setPaymentMethodTokenizationParameters,"set payment method tokenization parameters from payment data request builder sets payment method tokenization parameters which will be used to tokenize the payment method returned within get payment method tok. Return type is Payment Data Request. Builder and parameters are payment method tokenization parameters. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4578,PaymentDataRequest.Builder_setPhoneNumberRequired,"set phone number required from payment data request builder sets whether a phone number is additionally required from the buyer in both shipping and billing addresse. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4579,PaymentDataRequest.Builder_setShippingAddressRequired,"set shipping address required from payment data request builder sets whether a shipping address is required from the buye. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4580,PaymentDataRequest.Builder_setShippingAddressRequirements,"set shipping address requirements from payment data request builder sets the shipping address requirement. Return type is Payment Data Request. Builder and parameters are shipping address requirements. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4581,PaymentDataRequest.Builder_setTransactionInfo,"set transaction info from payment data request builder sets detailed transaction inf. Return type is Payment Data Request. Builder and parameters are transaction info. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4582,PaymentDataRequest.Builder_setUiRequired,"set ui required from payment data request builder sets whether the ui to show the payment method or shipping address selection is required to be shown in the purchase flo. Return type is Payment Data Request. Builder and parameters are boolean. this class is deprecated  use the json request format instead, see from json",sink,sink,sink,sink
4583,PaymentMethodTokenizationParameters.Builder_addParameter,add parameter from payment method tokenization parameters builder adds tokenization specific parameter. Return type is Payment Method Tokenization Parameters. Builder and parameters are string string. builder to create a payment method tokenization parameters,neither,sink,sink,neither
4584,PaymentMethodTokenizationParameters.Builder_build,build from payment method tokenization parameters builder . builder to create a payment method tokenization parameters,neither,neither,neither,neither
4585,PaymentMethodTokenizationParameters.Builder_setPaymentMethodTokenizationType,set payment method tokenization type from payment method tokenization parameters builder sets payment method tokenization typ. Return type is Payment Method Tokenization Parameters. Builder and parameters are int. builder to create a payment method tokenization parameters,sink,sink,sink,sink
4586,ShippingAddressRequirements.Builder_addAllowedCountryCode,add allowed country code from shipping address requirements builder adds a country code of the country to which shipping is allowed in this transactio. Return type is Shipping Address Requirements. Builder and parameters are string. builder to create a shipping address requirements,sink,sink,sink,sink
4587,ShippingAddressRequirements.Builder_addAllowedCountryCodes,add allowed country codes from shipping address requirements builder adds a collection of country codes of the countries to which shipping is allowed in this transactio. Return type is Shipping Address Requirements. Builder and parameters are collection. builder to create a shipping address requirements,sink,sink,sink,sink
4588,ShippingAddressRequirements.Builder_build,build from shipping address requirements builder . builder to create a shipping address requirements,neither,neither,neither,neither
4589,TransactionInfo.Builder_build,build from transaction info builder . builder to create a transaction info,neither,neither,sink,neither
4590,TransactionInfo.Builder_setCurrencyCode,set currency code from transaction info builder sets the iso 4217 alphabetic currency code of the transactio. Return type is Transaction Info. Builder and parameters are string. builder to create a transaction info,sink,sink,sink,sink
4591,TransactionInfo.Builder_setTotalPrice,set total price from transaction info builder sets the total price of this transactio. Return type is Transaction Info. Builder and parameters are string. builder to create a transaction info,sink,sink,sink,sink
4592,TransactionInfo.Builder_setTotalPriceStatus,set total price status from transaction info builder sets the status of this transaction's total pric. Return type is Transaction Info. Builder and parameters are int. builder to create a transaction info,sink,sink,sink,sink
4593,Wallet.WalletOptions_equals,equals from wallet wallet options . options for using the wallet api,neither,neither,source,neither
4594,Wallet.WalletOptions_getAccount,get account from wallet wallet options . options for using the wallet api,source,source,source,source
4595,Wallet.WalletOptions_hashCode,hash code from wallet wallet options . options for using the wallet api,source,source,source,source
4596,Wallet.WalletOptions.Builder_build,build from wallet wallet options builder . wallet builder,sink,sink,neither,neither
4597,Wallet.WalletOptions.Builder_setEnvironment,set environment from wallet wallet options builder . wallet builder,sink,sink,sink,sink
4598,Wallet.WalletOptions.Builder_setTheme,set theme from wallet wallet options builder . wallet builder,sink,sink,sink,sink
4599,Wallet.WalletOptions.Builder_useGoogleWallet,use google wallet from wallet wallet options builder deprecate. Return type is Wallet. Wallet Options. Builder and no argument. wallet builder,source,neither,source,source
4600,Wallet.WalletOptions.Builder_build,build from wallet wallet options builder . wallet builder,sink,sink,neither,neither
4601,Wallet.WalletOptions.Builder_setEnvironment,set environment from wallet wallet options builder . wallet builder,sink,sink,sink,sink
4602,Wallet.WalletOptions.Builder_setTheme,set theme from wallet wallet options builder . wallet builder,sink,sink,sink,sink
4603,Wallet.WalletOptions.Builder_useGoogleWallet,use google wallet from wallet wallet options builder deprecate. Return type is Wallet. Wallet Options. Builder and no argument. wallet builder,source,neither,source,source
4604,SourceDirectTransferResult_getStatus,get status from source direct transfer result gets the status from the returned source direct transfer resul. Return type is Status and no argument. result returned from the ui activity in activity on activity result after the direct transfer finishes,source,source,source,source
4605,SourceDirectTransferResult_writeToParcel,write to parcel from source direct transfer result . result returned from the ui activity in activity on activity result after the direct transfer finishes,sink,sink,sink,sink
4606,SourceStartDirectTransferOptions_writeToParcel,write to parcel from source start direct transfer options . customized options to start direct transfer,sink,sink,sink,sink
4607,SourceDirectTransferClient_getSourceDirectTransferResultFromIntent,get source direct transfer result from intent from source direct transfer client retrieves source direct transfer result from the intent received by activityon activity resu. Return type is Source Direct Transfer Result and parameters are intent. the entry point for interacting with the fido source direct transfer a p is,source,source,source,source
4608,SourceDirectTransferClient_startDirectTransfer,"start direct transfer from source direct transfer client creates a task with pending intent, which when started, will start direct transfe. Return type is Task and parameters are source start direct transfer options parcel file descriptor parcel file descriptor. the entry point for interacting with the fido source direct transfer a p is",sink,sink,sink,sink
4609,CaptureState_getCaptureMode,get capture mode from capture state . data class used to return the capture state to the client,source,source,source,source
4610,CaptureState_getCaptureQuality,get capture quality from capture state . data class used to return the capture state to the client,source,source,source,source
4611,CaptureState_isCapturing,is capturing from capture state . data class used to return the capture state to the client,neither,neither,neither,neither
4612,CaptureState_isOverlayVisible,is overlay visible from capture state . data class used to return the capture state to the client,neither,neither,neither,neither
4613,CaptureState_isPaused,is paused from capture state . data class used to return the capture state to the client,neither,neither,neither,neither
4614,CaptureState_toString,to string from capture state . data class used to return the capture state to the client,source,source,source,neither
4615,VideoCapabilities_equals,equals from video capabilities . contains information on what capabilities the current device has for video recording,neither,neither,neither,neither
4616,VideoCapabilities_getSupportedCaptureModes,get supported capture modes from video capabilities returns a collection of all supported capture mode. Return type is boolean[] and no argument. contains information on what capabilities the current device has for video recording,source,source,source,source
4617,VideoCapabilities_getSupportedQualityLevels,get supported quality levels from video capabilities returns a collection of all supported capture qualitie. Return type is boolean[] and no argument. contains information on what capabilities the current device has for video recording,source,source,source,source
4618,VideoCapabilities_hashCode,hash code from video capabilities . contains information on what capabilities the current device has for video recording,source,source,neither,neither
4619,VideoCapabilities_isCameraSupported,is camera supported from video capabilities returns whether the device has a front-facing camera and we can use i. Return type is boolean and no argument. contains information on what capabilities the current device has for video recording,source,source,source,source
4620,VideoCapabilities_isFullySupported,"is fully supported from video capabilities checks if the capture mode and quality level are support, and camera, mic, and storage writ. Return type is boolean and parameters are int int. contains information on what capabilities the current device has for video recording",source,source,source,source
4621,VideoCapabilities_isMicSupported,is mic supported from video capabilities returns whether the device has a microphone and we can use i. Return type is boolean and no argument. contains information on what capabilities the current device has for video recording,source,source,source,source
4622,VideoCapabilities_isWriteStorageSupported,is write storage supported from video capabilities returns whether the device has an external storage device and we can use i. Return type is boolean and no argument. contains information on what capabilities the current device has for video recording,source,source,source,source
4623,VideoCapabilities_supportsCaptureMode,supports capture mode from video capabilities returns whether the device supports the given capture mod. Return type is boolean and parameters are int. contains information on what capabilities the current device has for video recording,source,source,source,source
4624,VideoCapabilities_supportsQualityLevel,supports quality level from video capabilities returns whether the device supports the given quality leve. Return type is boolean and parameters are int. contains information on what capabilities the current device has for video recording,source,source,source,source
4625,VideoCapabilities_toString,to string from video capabilities . contains information on what capabilities the current device has for video recording,source,source,sink,sink
4626,VideoCapabilities_writeToParcel,write to parcel from video capabilities . contains information on what capabilities the current device has for video recording,sink,sink,sink,sink
4627,VideoConfiguration_getCameraEnabled,get camera enabled from video configuration . data class used to pass the video configuration from the client to the service,source,source,source,source
4628,VideoConfiguration_getCaptureMode,get capture mode from video configuration . data class used to pass the video configuration from the client to the service,source,source,source,source
4629,VideoConfiguration_getMicEnabled,get mic enabled from video configuration . data class used to pass the video configuration from the client to the service,source,source,source,source
4630,VideoConfiguration_getQualityLevel,get quality level from video configuration . data class used to pass the video configuration from the client to the service,source,source,source,source
4631,VideoConfiguration_isValidCaptureMode,is valid capture mode from video configuration . data class used to pass the video configuration from the client to the service,sink,neither,neither,sink
4632,VideoConfiguration_isValidQualityLevel,is valid quality level from video configuration . data class used to pass the video configuration from the client to the service,neither,neither,neither,neither
4633,VideoConfiguration_writeToParcel,write to parcel from video configuration . data class used to pass the video configuration from the client to the service,sink,sink,sink,sink
4634,VideoConfiguration.Builder_build,build from video configuration builder . builder class for video configuration,neither,neither,neither,neither
4635,VideoConfiguration.Builder_setCameraEnabled,set camera enabled from video configuration builder sets whether or not the front camera should record the use. Return type is Video Configuration. Builder and parameters are boolean. builder class for video configuration,sink,sink,sink,sink
4636,VideoConfiguration.Builder_setCaptureMode,set capture mode from video configuration builder . builder class for video configuration,sink,sink,sink,sink
4637,VideoConfiguration.Builder_setMicEnabled,set mic enabled from video configuration builder sets whether or not audio recording should be enable. Return type is Video Configuration. Builder and parameters are boolean. builder class for video configuration,sink,sink,sink,sink
4638,VideoConfiguration.Builder_setQualityLevel,set quality level from video configuration builder . builder class for video configuration,sink,sink,sink,sink
4639,Videos_getCaptureCapabilities,"get capture capabilities from videos fetch the video capabilities of the service, whether the mic or front-facing camera are supported, if the service can write to external storage, and what capture modes and quality levels are availabl. Return type is Pending Result and parameters are google api client. this interface is deprecated  use videos client instea",source,source,source,source
4640,Videos_getCaptureOverlayIntent,get capture overlay intent from videos return an intent to launch the capture overla. Return type is Intent and parameters are google api client. this interface is deprecated  use videos client instea,source,source,source,source
4641,Videos_getCaptureState,get capture state from videos fetch the current state of the capture servic. Return type is Pending Result and parameters are google api client. this interface is deprecated  use videos client instea,source,source,source,source
4642,Videos_isCaptureAvailable,is capture available from videos fetch if the capture service is already in use or no. Return type is Pending Result and parameters are google api client int. this interface is deprecated  use videos client instea,source,neither,neither,sink
4643,Videos_isCaptureSupported,is capture supported from videos synchronous simple check to determine if the device supports captur. Return type is  boolean and parameters are google api client. this interface is deprecated  use videos client instea,neither,neither,neither,sink
4644,Videos_registerCaptureOverlayStateChangedListener,register capture overlay state changed listener from videos register a listener to listen for changes to the overlay state launched by get capture overlay inte. Return type is  void and parameters are google api client videos capture overlay state listener. this interface is deprecated  use videos client instea,neither,neither,neither,neither
4645,Videos_unregisterCaptureOverlayStateChangedListener,"unregister capture overlay state changed listener from videos unregisters this client's overlay state update listener, if an. Return type is  void and parameters are google api client. this interface is deprecated  use videos client instea",neither,neither,neither,neither
4646,Videos.CaptureAvailableResult_isAvailable,is available from videos capture available result returns if the capture service is available or no. Return type is  boolean and no argument. this interface is deprecated  is available is returned directly in the videos client,source,source,source,source
4647,Videos.CaptureCapabilitiesResult_getCapabilities,get capabilities from videos capture capabilities result returns the video capabilities supported by the service or null if we failed to received data from the servic. Return type is Video Capabilities and no argument. this interface is deprecated  video capabilities is returned directly in the videos client,source,source,source,source
4648,Videos.CaptureOverlayStateListener_onCaptureOverlayStateChanged,on capture overlay state changed from videos capture overlay state listener called when the capture overlay state change. Return type is  void and parameters are int. this interface is deprecated  use videos client on capture overlay state listener instad,neither,neither,neither,neither
4649,Videos.CaptureStateResult_getCaptureState,get capture state from videos capture state result returns the current state of the capture servic. Return type is Capture State and no argument. this interface is deprecated  capture state is returned directly in the videos client,source,source,source,source
4650,VideoConfiguration.Builder_build,build from video configuration builder . builder class for video configuration,neither,neither,neither,neither
4651,VideoConfiguration.Builder_setCameraEnabled,set camera enabled from video configuration builder sets whether or not the front camera should record the use. Return type is Video Configuration. Builder and parameters are boolean. builder class for video configuration,sink,sink,sink,sink
4652,VideoConfiguration.Builder_setCaptureMode,set capture mode from video configuration builder . builder class for video configuration,sink,sink,sink,sink
4653,VideoConfiguration.Builder_setMicEnabled,set mic enabled from video configuration builder sets whether or not audio recording should be enable. Return type is Video Configuration. Builder and parameters are boolean. builder class for video configuration,sink,sink,sink,sink
4654,VideoConfiguration.Builder_setQualityLevel,set quality level from video configuration builder . builder class for video configuration,sink,sink,sink,sink
4655,Videos.CaptureAvailableResult_isAvailable,is available from videos capture available result returns if the capture service is available or no. Return type is  boolean and no argument. this interface is deprecated  is available is returned directly in the videos client,source,source,source,source
4656,Videos.CaptureCapabilitiesResult_getCapabilities,get capabilities from videos capture capabilities result returns the video capabilities supported by the service or null if we failed to received data from the servic. Return type is Video Capabilities and no argument. this interface is deprecated  video capabilities is returned directly in the videos client,source,source,source,source
4657,Videos.CaptureOverlayStateListener_onCaptureOverlayStateChanged,on capture overlay state changed from videos capture overlay state listener called when the capture overlay state change. Return type is  void and parameters are int. this interface is deprecated  use videos client on capture overlay state listener instad,neither,neither,neither,neither
4658,Videos.CaptureStateResult_getCaptureState,get capture state from videos capture state result returns the current state of the capture servic. Return type is Capture State and no argument. this interface is deprecated  capture state is returned directly in the videos client,source,source,source,source
4659,UIController_onMediaStatusUpdated,on media status updated from u i controller called when there is an updated media status on the remote media clien. Return type is void and no argument. base class for implementing a ui controller that receives media status updates from the cast receiver,neither,neither,neither,neither
4660,UIController_onSendingRemoteMediaRequest,on sending remote media request from u i controller called when there is a outgoing remote media request on the remote media clien. Return type is void and no argument. base class for implementing a ui controller that receives media status updates from the cast receiver,sink,sink,neither,neither
4661,UIController_onSessionConnected,on session connected from u i controller called when a cast session is connecte. Return type is void and parameters are cast session. base class for implementing a ui controller that receives media status updates from the cast receiver,neither,neither,neither,neither
4662,UIController_onSessionEnded,on session ended from u i controller called when a cast session is ende. Return type is void and no argument. base class for implementing a ui controller that receives media status updates from the cast receiver,neither,neither,neither,neither
4663,UIMediaController_bindImageViewToImageOfCurrentItem,bind image view to image of current item from u i media controller deprecate. Return type is void and parameters are image view int int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4664,UIMediaController_bindImageViewToImageOfCurrentItem,bind image view to image of current item from u i media controller deprecate. Return type is void and parameters are image view int view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4665,UIMediaController_bindImageViewToImageOfCurrentItem,bind image view to image of current item from u i media controller binds an image view to the first image of the current ite. Return type is void and parameters are image view image hints int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4666,UIMediaController_bindImageViewToImageOfCurrentItem,bind image view to image of current item from u i media controller binds an image view to an image of the current ite. Return type is void and parameters are image view image hints view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4667,UIMediaController_bindImageViewToImageOfPreloadedItem,bind image view to image of preloaded item from u i media controller deprecate. Return type is void and parameters are image view int int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,sink,neither
4668,UIMediaController_bindImageViewToImageOfPreloadedItem,bind image view to image of preloaded item from u i media controller binds an image view to the first image of the preloaded ite. Return type is void and parameters are image view image hints int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,sink,neither
4669,UIMediaController_bindImageViewToMuteToggle,bind image view to mute toggle from u i media controller binds an image view to mute and unmute the cast receiver device volum. Return type is void and parameters are image view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4670,UIMediaController_bindImageViewToPlayPauseToggle,bind image view to play pause toggle from u i media controller binds an image view to toggle play / pause of the current ite. Return type is void and parameters are image view drawable drawable drawable view boolean. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4671,UIMediaController_bindProgressBar,bind progress bar from u i media controller binds a progress bar to the playback progress of the current ite. Return type is void and parameters are progress bar. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4672,UIMediaController_bindProgressBar,bind progress bar from u i media controller binds a progress bar to the playback progress of the current ite. Return type is void and parameters are progress bar long. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4673,UIMediaController_bindSeekBar,bind seek bar from u i media controller binds a cast seek bar to control the playback position of the current ite. Return type is void and parameters are cast seek bar. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4674,UIMediaController_bindSeekBar,bind seek bar from u i media controller binds a seek bar to control the playback position of the current ite. Return type is void and parameters are seek bar long. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4675,UIMediaController_bindSeekBar,bind seek bar from u i media controller binds a cast seek bar to control the playback position of the current ite. Return type is void and parameters are cast seek bar long. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,neither,neither,neither
4676,UIMediaController_bindSeekBar,bind seek bar from u i media controller binds a seek bar to control the playback position of the current ite. Return type is void and parameters are seek bar. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4677,UIMediaController_bindTextViewToMetadataOfCurrentItem,"bind text view to metadata of current item from u i media controller binds a text view to the metadata of the current item, keyed by ke. Return type is void and parameters are text view string. a u i media controller lets you bind the state of android ui components to the state of a remote cast session",sink,neither,sink,neither
4678,UIMediaController_bindTextViewToMetadataOfCurrentItem,"bind text view to metadata of current item from u i media controller binds a text view to the metadata of the current item, keyed by a list of keys in the order of preference. Return type is void and parameters are text view list. a u i media controller lets you bind the state of android ui components to the state of a remote cast session",sink,neither,sink,neither
4679,UIMediaController_bindTextViewToMetadataOfPreloadedItem,"bind text view to metadata of preloaded item from u i media controller binds an text view to the metadata of the preloaded item, keyed by a list of keys in the order of preference. Return type is void and parameters are text view list. a u i media controller lets you bind the state of android ui components to the state of a remote cast session",sink,neither,sink,neither
4680,UIMediaController_bindTextViewToMetadataOfPreloadedItem,"bind text view to metadata of preloaded item from u i media controller binds an text view to the metadata of the preloaded item, keyed by ke. Return type is void and parameters are text view string. a u i media controller lets you bind the state of android ui components to the state of a remote cast session",sink,neither,sink,neither
4681,UIMediaController_bindTextViewToSmartSubtitle,bind text view to smart subtitle from u i media controller binds a text view to the most appropriate item in media metadata for subtitl. Return type is void and parameters are text view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,neither,sink,neither
4682,UIMediaController_bindTextViewToStreamDuration,bind text view to stream duration from u i media controller binds a text view to the playback duration of the current ite. Return type is void and parameters are text view view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,sink,neither
4683,UIMediaController_bindTextViewToStreamDuration,bind text view to stream duration from u i media controller binds a text view to the playback duration of the current ite. Return type is void and parameters are text view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,neither,neither
4684,UIMediaController_bindTextViewToStreamPosition,bind text view to stream position from u i media controller binds a text view to the playback position of the current ite. Return type is void and parameters are text view boolean. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,sink,neither
4685,UIMediaController_bindTextViewToStreamPosition,bind text view to stream position from u i media controller binds a text view to the playback position of the current ite. Return type is void and parameters are text view boolean long. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,sink,neither
4686,UIMediaController_bindViewToClosedCaption,bind view to closed caption from u i media controller binds a view to launching the tracks chooser dialog fragment when clicke. Return type is void and parameters are view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,sink,neither
4687,UIMediaController_bindViewToForward,bind view to forward from u i media controller binds a view to skip forward playback of the current item skip step ms millisecond. Return type is void and parameters are view long. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4688,UIMediaController_bindViewToLaunchExpandedController,bind view to launch expanded controller from u i media controller binds a view to launching the expanded controller activity specified by the name in cast media optionsget expanded controller activity class na. Return type is void and parameters are view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,neither,neither
4689,UIMediaController_bindViewToLoadingIndicator,"bind view to loading indicator from u i media controller binds a view's visibility state to view v i s i b l e only when the remote receiver is either buffering, or loading the next ite. Return type is void and parameters are view. a u i media controller lets you bind the state of android ui components to the state of a remote cast session",neither,neither,neither,neither
4690,UIMediaController_bindViewToRewind,bind view to rewind from u i media controller binds a view to rewind playback of the current item skip step ms millisecond. Return type is void and parameters are view long. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4691,UIMediaController_bindViewToSkipNext,bind view to skip next from u i media controller binds a view to skip to the next item in the queu. Return type is void and parameters are view int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4692,UIMediaController_bindViewToSkipPrev,bind view to skip prev from u i media controller binds a view to skip to the previous item in the queu. Return type is void and parameters are view int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4693,UIMediaController_bindViewToUIController,bind view to u i controller from u i media controller binds a view to a u i controlle. Return type is void and parameters are view u i controller. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4694,UIMediaController_bindViewVisibilityToMediaSession,bind view visibility to media session from u i media controller binds a view's visibility state to the availability of a cast media sessio. Return type is void and parameters are view int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4695,UIMediaController_bindViewVisibilityToPreloadingEvent,bind view visibility to preloading event from u i media controller binds a view's visibility state to the availability of a preloaded ite. Return type is void and parameters are view int. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4696,UIMediaController_dispose,dispose from u i media controller disposes this instanc. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4697,UIMediaController_getRemoteMediaClient,get remote media client from u i media controller returns the managed remote media client of the current active cast sessio. Return type is Remote Media Client and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,source,source,source,source
4698,UIMediaController_isActive,is active from u i media controller returns true if there is an active connected cast sessio. Return type is boolean and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,source,source,source,neither
4699,UIMediaController_onAdBreakStatusUpdated,on ad break status updated from u i media controller called when updated ad break status information is receive. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4700,UIMediaController_onMetadataUpdated,on metadata updated from u i media controller called when updated media metadata is receive. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4701,UIMediaController_onPreloadStatusUpdated,"on preload status updated from u i media controller called when updated player queue preload status information is received, for example, the next item to play has been preloade. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session",neither,neither,neither,neither
4702,UIMediaController_onQueueStatusUpdated,on queue status updated from u i media controller called when updated player queue status information is receive. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4703,UIMediaController_onSendingRemoteMediaRequest,on sending remote media request from u i media controller called when there is an outgoing request to the receive. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,sink,neither
4704,UIMediaController_onSessionEnded,on session ended from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4705,UIMediaController_onSessionEnding,on session ending from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4706,UIMediaController_onSessionResumeFailed,on session resume failed from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4707,UIMediaController_onSessionResumed,on session resumed from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4708,UIMediaController_onSessionResuming,on session resuming from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4709,UIMediaController_onSessionStartFailed,on session start failed from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4710,UIMediaController_onSessionStarted,on session started from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4711,UIMediaController_onSessionStarting,on session starting from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4712,UIMediaController_onSessionSuspended,on session suspended from u i media controller . a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4713,UIMediaController_onStatusUpdated,on status updated from u i media controller called when updated player status information is receive. Return type is void and no argument. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,neither,neither,neither,neither
4714,UIMediaController_setPostRemoteMediaClientListener,set post remote media client listener from u i media controller sets a remote media client listener that will be called after all the other registered listeners in the u i media controller instance are invoke. Return type is void and parameters are remote media client listener. a u i media controller lets you bind the state of android ui components to the state of a remote cast session,sink,sink,sink,sink
4715,CronetProviderInstaller_installProvider,install provider from cronet provider installer installs cronet provider if it is not already installe. Return type is Task and parameters are context. a utility class to install the cronet google play services provider,neither,neither,neither,sink
4716,CronetProviderInstaller_isInstalled,is installed from cronet provider installer checks whether the cronet provider is already installe. Return type is  boolean and no argument. a utility class to install the cronet google play services provider,neither,neither,neither,source
4717,AdBreakClipInfo_equals,equals from ad break clip info . a class that aggregates information about an ad break clip,neither,neither,neither,neither
4718,AdBreakClipInfo_getClickThroughUrl,get click through url from ad break clip info returns this clip's click through ur. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4719,AdBreakClipInfo_getContentId,get content id from ad break clip info returns this clip's content i. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4720,AdBreakClipInfo_getContentUrl,get content url from ad break clip info returns this clip's content ur. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4721,AdBreakClipInfo_getCustomData,get custom data from ad break clip info returns this clip's custom dat. Return type is J S O N Object and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4722,AdBreakClipInfo_getDurationInMs,get duration in ms from ad break clip info returns this clip's duration in millisecond. Return type is long and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4723,AdBreakClipInfo_getHlsSegmentFormat,"get hls segment format from ad break clip info returns hls segment format of the ad break clip, or empty string if not se. Return type is String and no argument. a class that aggregates information about an ad break clip",source,source,source,source
4724,AdBreakClipInfo_getId,get id from ad break clip info returns this clip's i. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4725,AdBreakClipInfo_getImageUrl,get image url from ad break clip info returns this clip's image ur. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4726,AdBreakClipInfo_getMimeType,get mime type from ad break clip info returns this clip's mime typ. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4727,AdBreakClipInfo_getTitle,get title from ad break clip info returns this clip's titl. Return type is String and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4728,AdBreakClipInfo_getVastAdsRequest,get vast ads request from ad break clip info returns the vast ads request representing the vast ad request configuratio. Return type is Vast Ads Request and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4729,AdBreakClipInfo_getWhenSkippableInMs,get when skippable in ms from ad break clip info returns the time in milliseconds when this break clip becomes skippabl. Return type is long and no argument. a class that aggregates information about an ad break clip,source,source,source,source
4730,AdBreakClipInfo_hashCode,hash code from ad break clip info . a class that aggregates information about an ad break clip,neither,neither,neither,neither
4731,AdBreakClipInfo_writeToParcel,write to parcel from ad break clip info . a class that aggregates information about an ad break clip,sink,sink,sink,sink
4732,AdBreakClipInfo.Builder_build,build from ad break clip info builder . a builder for ad break clip info,neither,neither,neither,neither
4733,AdBreakClipInfo.Builder_setClickThroughUrl,set click through url from ad break clip info builder sets this clip's click through ur. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4734,AdBreakClipInfo.Builder_setContentId,set content id from ad break clip info builder sets this clip's content i. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4735,AdBreakClipInfo.Builder_setContentUrl,set content url from ad break clip info builder sets this clip's content ur. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4736,AdBreakClipInfo.Builder_setCustomDataJsonString,set custom data json string from ad break clip info builder sets this clip's custom data as a strin. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4737,AdBreakClipInfo.Builder_setDurationInMs,set duration in ms from ad break clip info builder sets this clip's duration in millisecond. Return type is Ad Break Clip Info. Builder and parameters are long. a builder for ad break clip info,sink,sink,sink,sink
4738,AdBreakClipInfo.Builder_setHlsSegmentFormat,"set hls segment format from ad break clip info builder sets hls segment format of the ad break clip, or empty string if not se. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info",sink,sink,sink,sink
4739,AdBreakClipInfo.Builder_setImageUrl,set image url from ad break clip info builder sets this clip's image ur. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4740,AdBreakClipInfo.Builder_setMimeType,set mime type from ad break clip info builder sets this clip's mime typ. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4741,AdBreakClipInfo.Builder_setTitle,set title from ad break clip info builder sets this clip's titl. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
4742,AdBreakClipInfo.Builder_setVastAdsRequest,"set vast ads request from ad break clip info builder sets the vast ads request of a vast ad break clip, representing the vast ad request configuratio. Return type is Ad Break Clip Info. Builder and parameters are vast ads request. a builder for ad break clip info",sink,sink,sink,sink
4743,AdBreakClipInfo.Builder_setWhenSkippableInMs,set when skippable in ms from ad break clip info builder sets the time in milliseconds when this break clip becomes skippabl. Return type is Ad Break Clip Info. Builder and parameters are long. a builder for ad break clip info,sink,sink,sink,sink
4744,AdBreakInfo_equals,equals from ad break info . a class that aggregates information about an ad that is playing or will be played on the receiver,neither,neither,neither,neither
4745,AdBreakInfo_getBreakClipIds,get break clip ids from ad break info returns an unmodifiable list of ad break clip i ds in this brea. Return type is String[] and no argument. a class that aggregates information about an ad that is playing or will be played on the receiver,source,source,source,source
4746,AdBreakInfo_getDurationInMs,get duration in ms from ad break info returns this break content’s duration in millisecond. Return type is long and no argument. a class that aggregates information about an ad that is playing or will be played on the receiver,source,source,source,source
4747,AdBreakInfo_getId,get id from ad break info returns this break's i. Return type is String and no argument. a class that aggregates information about an ad that is playing or will be played on the receiver,source,source,source,source
4748,AdBreakInfo_getPlaybackPositionInMs,get playback position in ms from ad break info returns this break content’s playback position in milliseconds at which the ad will begin playing relative to the start of the vide. Return type is long and no argument. a class that aggregates information about an ad that is playing or will be played on the receiver,source,source,source,source
4749,AdBreakInfo_hashCode,hash code from ad break info . a class that aggregates information about an ad that is playing or will be played on the receiver,neither,neither,neither,neither
4750,AdBreakInfo_isEmbedded,is embedded from ad break info returns true if this break doesn't have a url and is part of the conten. Return type is boolean and no argument. a class that aggregates information about an ad that is playing or will be played on the receiver,neither,neither,neither,neither
4751,AdBreakInfo_isWatched,is watched from ad break info returns true if this break has been watche. Return type is boolean and no argument. a class that aggregates information about an ad that is playing or will be played on the receiver,neither,neither,neither,neither
4752,AdBreakInfo_writeToParcel,write to parcel from ad break info . a class that aggregates information about an ad that is playing or will be played on the receiver,sink,sink,sink,sink
4753,AdBreakInfo.Builder_build,build from ad break info builder builds an ad break info instanc. Return type is Ad Break Info and no argument. a builder for ad break info,neither,neither,neither,neither
4754,AdBreakInfo.Builder_setBreakClipIds,set break clip ids from ad break info builder set an unmodifiable list of ad break clip i ds in this brea. Return type is Ad Break Info. Builder and parameters are string[]. a builder for ad break info,sink,sink,sink,sink
4755,AdBreakInfo.Builder_setDurationInMs,set duration in ms from ad break info builder sets this break content’s duration in millisecond. Return type is Ad Break Info. Builder and parameters are long. a builder for ad break info,sink,sink,sink,sink
4756,AdBreakInfo.Builder_setId,set id from ad break info builder sets the ad break's i. Return type is Ad Break Info. Builder and parameters are string. a builder for ad break info,sink,sink,sink,sink
4757,AdBreakInfo.Builder_setIsEmbedded,set is embedded from ad break info builder set to true if this break doesn't have a url and is part of the conten. Return type is Ad Break Info. Builder and parameters are boolean. a builder for ad break info,sink,sink,sink,sink
4758,AdBreakInfo.Builder_setIsWatched,set is watched from ad break info builder set to true if this break has been watche. Return type is Ad Break Info. Builder and parameters are boolean. a builder for ad break info,sink,sink,sink,sink
4759,AdBreakStatus_equals,equals from ad break status . a class that holds status information about an ad break,neither,neither,neither,neither
4760,AdBreakStatus_getBreakClipId,get break clip id from ad break status returns the id of the current ad break cli. Return type is String and no argument. a class that holds status information about an ad break,source,source,source,source
4761,AdBreakStatus_getBreakId,get break id from ad break status returns the id of the current ad brea. Return type is String and no argument. a class that holds status information about an ad break,source,source,source,source
4762,AdBreakStatus_getCurrentBreakClipTimeInMs,"get current break clip time in ms from ad break status returns the current position of the ad break clip, in milliseconds, from the start of the ad break cli. Return type is long and no argument. a class that holds status information about an ad break",source,source,source,source
4763,AdBreakStatus_getCurrentBreakTimeInMs,"get current break time in ms from ad break status returns the current position of the ad break, in milliseconds, from the start of the ad brea. Return type is long and no argument. a class that holds status information about an ad break",source,source,source,source
4764,AdBreakStatus_getWhenSkippableInMs,get when skippable in ms from ad break status returns the number of milliseconds after the ad break clip starts when the user can skip the ad break cli. Return type is long and no argument. a class that holds status information about an ad break,source,source,source,source
4765,AdBreakStatus_hashCode,hash code from ad break status . a class that holds status information about an ad break,neither,neither,neither,neither
4766,AdBreakStatus_writeToParcel,write to parcel from ad break status . a class that holds status information about an ad break,sink,sink,sink,sink
4767,AdBreakStatus.Builder_build,build from ad break status builder builds an ad break statu. Return type is Ad Break Status and no argument. builder class for ad break status,neither,neither,neither,neither
4768,AdBreakStatus.Builder_setBreakClipId,set break clip id from ad break status builder sets the id of the current ad break cli. Return type is Ad Break Status. Builder and parameters are string. builder class for ad break status,sink,sink,sink,sink
4769,AdBreakStatus.Builder_setBreakId,set break id from ad break status builder sets the id of the current ad brea. Return type is Ad Break Status. Builder and parameters are string. builder class for ad break status,sink,sink,sink,sink
4770,AdBreakStatus.Builder_setCurrentBreakClipTimeInMs,"set current break clip time in ms from ad break status builder sets the current position of the ad break clip, in milliseconds, from the start of the ad break cli. Return type is Ad Break Status. Builder and parameters are long. builder class for ad break status",sink,sink,sink,sink
4771,AdBreakStatus.Builder_setCurrentBreakTimeInMs,"set current break time in ms from ad break status builder sets the current position of the ad break, in milliseconds, from the start of the ad brea. Return type is Ad Break Status. Builder and parameters are long. builder class for ad break status",sink,sink,sink,sink
4772,AdBreakStatus.Builder_setWhenSkippableInMs,set when skippable in ms from ad break status builder sets the number of milliseconds after the ad break clip starts when the user can skip the ad break cli. Return type is Ad Break Status. Builder and parameters are long. builder class for ad break status,sink,sink,sink,sink
4773,ApplicationMetadata_areNamespacesSupported,are namespaces supported from application metadata tests if the application supports all of the given namespace. Return type is boolean and parameters are list. cast application metadata,neither,neither,neither,neither
4774,ApplicationMetadata_equals,equals from application metadata . cast application metadata,neither,neither,neither,neither
4775,ApplicationMetadata_getApplicationId,get application id from application metadata returns the application's i. Return type is String and no argument. cast application metadata,source,source,source,source
4776,ApplicationMetadata_getImages,get images from application metadata returns the list of image metadata associated with the receiver applicatio. Return type is List and no argument. cast application metadata,source,source,source,source
4777,ApplicationMetadata_getName,get name from application metadata returns the application's human-readable nam. Return type is String and no argument. cast application metadata,source,source,source,source
4778,ApplicationMetadata_getSenderAppIdentifier,"get sender app identifier from application metadata if there is an android sender application that is the counterpart to the receiver application, this method returns the unique identifier of that sender application in the google play stor. Return type is String and no argument. cast application metadata",source,source,source,source
4779,ApplicationMetadata_getSupportedNamespaces,get supported namespaces from application metadata returns an unmodifiable list of namespaces supported by the applicatio. Return type is List and no argument. cast application metadata,source,source,source,source
4780,ApplicationMetadata_hashCode,hash code from application metadata . cast application metadata,source,source,neither,neither
4781,ApplicationMetadata_isNamespaceSupported,is namespace supported from application metadata tests if the application supports the given namespac. Return type is boolean and parameters are string. cast application metadata,neither,neither,neither,neither
4782,ApplicationMetadata_toString,to string from application metadata . cast application metadata,sink,sink,sink,neither
4783,ApplicationMetadata_writeToParcel,write to parcel from application metadata . cast application metadata,sink,sink,sink,sink
4784,Cast.CastOptions_builder,builder from cast cast options deprecate. Return type is Cast. Cast Options. Builder and parameters are cast device cast listener. a p i configuration parameters for cast,neither,neither,neither,neither
4785,Cast.CastOptions_equals,equals from cast cast options . a p i configuration parameters for cast,neither,neither,neither,neither
4786,Cast.CastOptions_hashCode,hash code from cast cast options . a p i configuration parameters for cast,neither,neither,neither,neither
4787,Cast.CastOptions.Builder_build,build from cast cast options builder builds a cast options with the arguments supplied to this builde. Return type is Cast. Cast Options and no argument. a builder to create an instance of cast cast options to set api configuration parameters for cast,sink,sink,sink,neither
4788,Cast.CastOptions.Builder_setVerboseLoggingEnabled,set verbose logging enabled from cast cast options builder enables or disables verbose logging for this cast sessio. Return type is Cast. Cast Options. Builder and parameters are boolean. a builder to create an instance of cast cast options to set api configuration parameters for cast,sink,sink,sink,sink
4789,Cast.Listener_onActiveInputStateChanged,on active input state changed from cast listener called when the active-input state of the device has change. Return type is void and parameters are int. the list of cast callbacks,neither,neither,neither,neither
4790,Cast.Listener_onApplicationDisconnected,"on application disconnected from cast listener called when the connection to the receiver application has been lost, such as when another client has launched a new applicatio. Return type is void and parameters are int. the list of cast callbacks",neither,neither,neither,neither
4791,Cast.Listener_onApplicationMetadataChanged,on application metadata changed from cast listener called when the application metadata of the currently running receiver application has change. Return type is void and parameters are application metadata. the list of cast callbacks,neither,neither,neither,neither
4792,Cast.Listener_onApplicationStatusChanged,on application status changed from cast listener called when the status of the connected application has change. Return type is void and no argument. the list of cast callbacks,neither,neither,neither,neither
4793,Cast.Listener_onStandbyStateChanged,on standby state changed from cast listener called when the standby state of the device has change. Return type is void and parameters are int. the list of cast callbacks,neither,neither,neither,neither
4794,Cast.Listener_onVolumeChanged,on volume changed from cast listener called when the device's volume or mute state has change. Return type is void and no argument. the list of cast callbacks,neither,neither,neither,neither
4795,CastDevice_equals,equals from cast device . an object representing a cast receiver device,neither,neither,neither,neither
4796,CastDevice_getDeviceId,get device id from cast device gets the unique id for the devic. Return type is String and no argument. an object representing a cast receiver device,source,source,source,source
4797,CastDevice_getDeviceVersion,get device version from cast device gets the device's versio. Return type is String and no argument. an object representing a cast receiver device,source,source,source,source
4798,CastDevice_getFriendlyName,get friendly name from cast device gets the friendly name for the devic. Return type is String and no argument. an object representing a cast receiver device,source,source,source,source
4799,CastDevice_getFromBundle,"get from bundle from cast device returns the cast device from extras, otherwise nul. Return type is Cast Device and parameters are bundle. an object representing a cast receiver device",source,source,source,source
4800,CastDevice_getIcon,get icon from cast device returns a best-fit icon for the requested icon siz. Return type is Web Image and parameters are int int. an object representing a cast receiver device,source,source,source,source
4801,CastDevice_getIcons,get icons from cast device returns a list of all of the device's icon. Return type is List and no argument. an object representing a cast receiver device,source,source,source,source
4802,CastDevice_getInetAddress,get inet address from cast device gets the inet address of the devic. Return type is Inet Address and no argument. an object representing a cast receiver device,source,source,source,source
4803,CastDevice_getIpAddress,get ip address from cast device deprecate. Return type is Inet4 Address and no argument. an object representing a cast receiver device,source,source,source,source
4804,CastDevice_getModelName,get model name from cast device gets the model name for the devic. Return type is String and no argument. an object representing a cast receiver device,source,source,source,source
4805,CastDevice_getServicePort,get service port from cast device gets the device's service por. Return type is int and no argument. an object representing a cast receiver device,source,source,source,source
4806,CastDevice_hasCapabilities,has capabilities from cast device tests if the device supports a given set of capabilitie. Return type is boolean and parameters are int[]. an object representing a cast receiver device,neither,neither,neither,neither
4807,CastDevice_hasCapability,has capability from cast device tests if the device supports a given capabilit. Return type is boolean and parameters are int. an object representing a cast receiver device,neither,neither,neither,neither
4808,CastDevice_hasIPv4Address,has i pv4 address from cast device returns true if the cast device has an inet4 address i pv4 addres. Return type is boolean and no argument. an object representing a cast receiver device,source,source,source,neither
4809,CastDevice_hasIPv6Address,has i pv6 address from cast device returns true if the cast device has an inet6 address i pv6 addres. Return type is boolean and no argument. an object representing a cast receiver device,source,source,source,neither
4810,CastDevice_hasIcons,has icons from cast device checks if the device has any icon. Return type is boolean and no argument. an object representing a cast receiver device,neither,neither,neither,neither
4811,CastDevice_hashCode,hash code from cast device overridden to return a hashcode of the device i. Return type is int and no argument. an object representing a cast receiver device,neither,neither,neither,neither
4812,CastDevice_isOnLocalNetwork,is on local network from cast device returns true if this cast device is on the local networ. Return type is boolean and no argument. an object representing a cast receiver device,source,source,source,neither
4813,CastDevice_isSameDevice,is same device from cast device tests if this device refers to the same physical cast device as cast devic. Return type is boolean and parameters are cast device. an object representing a cast receiver device,neither,neither,neither,neither
4814,CastDevice_putInBundle,put in bundle from cast device writes the cast device to bundl. Return type is void and parameters are bundle. an object representing a cast receiver device,sink,sink,sink,neither
4815,CastDevice_toString,to string from cast device returns a string representation of the devic. Return type is String and no argument. an object representing a cast receiver device,source,source,source,source
4816,CastDevice_writeToParcel,write to parcel from cast device . an object representing a cast receiver device,sink,sink,sink,sink
4817,CastMediaControlIntent_categoryForCast,category for cast from cast media control intent returns a custom control category for discovering cast devices currently running an application which supports the specified namespace. Return type is String and parameters are collection. intent constants for use with the cast media route provider,neither,neither,neither,neither
4818,CastMediaControlIntent_categoryForCast,category for cast from cast media control intent returns a custom control category for discovering cast devices meeting both application id and namespace restriction. Return type is String and parameters are string collection. intent constants for use with the cast media route provider,sink,neither,sink,neither
4819,CastMediaControlIntent_categoryForCast,"category for cast from cast media control intent returns a custom control category for discovering cast devices that support running the specified app, independent of whether the app is running or no. Return type is String and parameters are string. intent constants for use with the cast media route provider",sink,sink,sink,neither
4820,CastMediaControlIntent_categoryForRemotePlayback,category for remote playback from cast media control intent returns a custom control category for discovering cast devices which support the default android remote playback actions using the specified cast playe. Return type is String and parameters are string. intent constants for use with the cast media route provider,neither,neither,neither,neither
4821,CastMediaControlIntent_categoryForRemotePlayback,category for remote playback from cast media control intent returns a custom control category for discovering cast devices which support the default media receive. Return type is String and no argument. intent constants for use with the cast media route provider,neither,neither,neither,neither
4822,CastMediaControlIntent_languageTagForLocale,language tag for locale from cast media control intent returns an r f c-5646 language tag string fo the given local. Return type is String and parameters are locale. intent constants for use with the cast media route provider,sink,sink,neither,sink
4823,CastRemoteDisplay_getClient,get client from cast remote display the entry point for interacting with the cast remote display api from a non- activity contex. Return type is Cast Remote Display Client and parameters are context. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,source,source,source,source
4824,CastRemoteDisplay_isRemoteDisplaySdkSupported,is remote display sdk supported from cast remote display returns true if the remote display sdk is supported on this devic. Return type is  boolean and parameters are context. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,source,neither,source
4825,CastRemoteDisplay.CastRemoteDisplayOptions.Builder_build,build from cast remote display cast remote display options builder builds a cast options with the arguments supplied to this builde. Return type is Cast Remote Display. Cast Remote Display Options and no argument. this class is deprecated  use the cast remote display client via cast remote display get client instead,neither,neither,sink,neither
4826,CastRemoteDisplay.CastRemoteDisplayOptions.Builder_setConfigPreset,set config preset from cast remote display cast remote display options builder set the remote display configuration prese. Return type is Cast Remote Display. Cast Remote Display Options. Builder and parameters are int. this class is deprecated  use the cast remote display client via cast remote display get client instead,sink,sink,sink,sink
4827,CastRemoteDisplayClient_startRemoteDisplay,start remote display from cast remote display client the low level api for starting a cast remote display sessio. Return type is Task and parameters are cast device string int pending intent. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,sink,sink,sink,neither
4828,CastRemoteDisplayClient_stopRemoteDisplay,stop remote display from cast remote display client the low level api for stopping a cast remote display sessio. Return type is Task and no argument. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4829,CastRemoteDisplayLocalService_getInstance,get instance from cast remote display local service the singleton instance of the cast remote display local servic. Return type is Cast Remote Display Local Service and no argument. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,source,source,source,source
4830,CastRemoteDisplayLocalService_onBind,on bind from cast remote display local service . this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4831,CastRemoteDisplayLocalService_onCreate,on create from cast remote display local service . this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4832,CastRemoteDisplayLocalService_onCreatePresentation,on create presentation from cast remote display local service the api that will be called when the cast remote display has been create. Return type is  void and parameters are display. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4833,CastRemoteDisplayLocalService_onDismissPresentation,on dismiss presentation from cast remote display local service the api that will be called when the cast remote display should be dismissed because the cast remote display session is endin. Return type is  void and no argument. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4834,CastRemoteDisplayLocalService_onStartCommand,on start command from cast remote display local service . this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4835,CastRemoteDisplayLocalService_startService,start service from cast remote display local service starts the cast remote display local service instance and initiates the remote display sessio. Return type is  void and parameters are context class<? string cast device cast remote display local service notification settings cast remote display local service callbacks. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,sink,sink,sink,neither
4836,CastRemoteDisplayLocalService_startServiceWithOptions,start service with options from cast remote display local service starts the cast remote display local service instance and initiates the remote display sessio. Return type is  void and parameters are context class<? string cast device cast remote display local service options cast remote display local service notification settings cast remote display local service callbacks. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,sink,sink,sink,neither
4837,CastRemoteDisplayLocalService_stopService,stop service from cast remote display local service stops the cast remote display local service instance and terminates the remote display sessio. Return type is  void and no argument. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
4838,CastRemoteDisplayLocalService_updateNotificationSettings,update notification settings from cast remote display local service modifies the current notification setting. Return type is void and parameters are cast remote display local service notification settings. this class is deprecated  the remote display feature is deprecated and will be removed in a future release,sink,sink,sink,neither
4839,CastRemoteDisplayLocalService.NotificationSettings.Builder_build,build from cast remote display local service notification settings builder builds and returns the cast remote display local service notification settings objec. Return type is Cast Remote Display Local Service. Notification Settings and no argument. builder class for the cast remote display local service notification settings object,neither,neither,sink,neither
4840,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotification,set notification from cast remote display local service notification settings builder sets a custom notificatio. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are notification. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
4841,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationPendingIntent,set notification pending intent from cast remote display local service notification settings builder sets a pending intent that will be executed when the default notification is clicke. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are pending intent. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
4842,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationText,set notification text from cast remote display local service notification settings builder the default notification tex. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are string. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
4843,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationTitle,set notification title from cast remote display local service notification settings builder the default notification titl. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are string. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
4844,CastRemoteDisplayLocalService.Options_getConfigPreset,get config preset from cast remote display local service options get the remote display configuration prese. Return type is int and no argument. options for a remote display session,source,source,source,source
4845,CastRemoteDisplayLocalService.Options_setConfigPreset,set config preset from cast remote display local service options set the remote display configuration prese. Return type is void and parameters are int. options for a remote display session,sink,sink,sink,sink
4846,CastStatusCodes_getStatusCodeString,get status code string from cast status codes returns an untranslated debu. Return type is String and parameters are int. status codes for the cast a p is,source,source,source,source
4847,CredentialsData_equals,equals from credentials data . credentials data used to identify the credentials of the sender,neither,neither,source,neither
4848,CredentialsData_getCredentials,get credentials from credentials data returns the application-specific blob which identifies and possibly authenticates the user that's requesting to launch or join an receiver ap. Return type is String and no argument. credentials data used to identify the credentials of the sender,source,source,source,source
4849,CredentialsData_getCredentialsType,get credentials type from credentials data returns the type of the credential. Return type is String and no argument. credentials data used to identify the credentials of the sender,source,source,source,source
4850,CredentialsData_hashCode,hash code from credentials data . credentials data used to identify the credentials of the sender,source,source,source,source
4851,CredentialsData_writeToParcel,write to parcel from credentials data . credentials data used to identify the credentials of the sender,sink,sink,sink,sink
4852,CredentialsData.Builder_build,build from credentials data builder builds a credentials dat. Return type is Credentials Data and no argument. builder for credentials data,neither,neither,neither,neither
4853,CredentialsData.Builder_setCredentials,set credentials from credentials data builder sets the credential. Return type is Credentials Data. Builder and parameters are string. builder for credentials data,sink,sink,sink,sink
4854,CredentialsData.Builder_setCredentialsType,set credentials type from credentials data builder sets the credentials typ. Return type is Credentials Data. Builder and parameters are string. builder for credentials data,sink,sink,sink,sink
4855,LaunchOptions_equals,equals from launch options . an object that holds options that affect how a receiver application is launched,neither,neither,sink,neither
4856,LaunchOptions_getAndroidReceiverCompatible,get android receiver compatible from launch options returns true if the sender app supports casting to an android tv ap. Return type is boolean and no argument. an object that holds options that affect how a receiver application is launched,source,source,source,source
4857,LaunchOptions_getCredentialsData,get credentials data from launch options returns the credentials dat. Return type is Credentials Data and no argument. an object that holds options that affect how a receiver application is launched,source,source,source,source
4858,LaunchOptions_getLanguage,"get language from launch options returns the language, or null if none was specifie. Return type is String and no argument. an object that holds options that affect how a receiver application is launched",source,source,source,source
4859,LaunchOptions_getRelaunchIfRunning,"get relaunch if running from launch options returns the ""relaunch if running"" fla. Return type is boolean and no argument. an object that holds options that affect how a receiver application is launched",source,source,source,source
4860,LaunchOptions_hashCode,hash code from launch options overridden to return a hashcode of the device i. Return type is int and no argument. an object that holds options that affect how a receiver application is launched,neither,neither,neither,neither
4861,LaunchOptions_setLanguage,set language from launch options sets the language to be used by the receiver applicatio. Return type is void and parameters are string. an object that holds options that affect how a receiver application is launched,sink,sink,sink,sink
4862,LaunchOptions_setRelaunchIfRunning,"set relaunch if running from launch options sets the ""relaunch if running"" fla. Return type is void and parameters are boolean. an object that holds options that affect how a receiver application is launched",sink,sink,sink,sink
4863,LaunchOptions_toString,to string from launch options returns a string representation of this objec. Return type is String and no argument. an object that holds options that affect how a receiver application is launched,source,source,source,source
4864,LaunchOptions_writeToParcel,write to parcel from launch options . an object that holds options that affect how a receiver application is launched,sink,sink,sink,sink
4865,LaunchOptions.Builder_build,build from launch options builder builds and returns the launch options objec. Return type is Launch Options and no argument. a builder for launch options objects,neither,neither,neither,neither
4866,LaunchOptions.Builder_setAndroidReceiverCompatible,set android receiver compatible from launch options builder sets true if the sender app supports casting to an android tv ap. Return type is Launch Options. Builder and parameters are boolean. a builder for launch options objects,sink,sink,sink,sink
4867,LaunchOptions.Builder_setCredentialsData,set credentials data from launch options builder sets the credentials dat. Return type is Launch Options. Builder and parameters are credentials data. a builder for launch options objects,sink,sink,sink,sink
4868,LaunchOptions.Builder_setLocale,set locale from launch options builder sets the desired application local. Return type is Launch Options. Builder and parameters are locale. a builder for launch options objects,sink,sink,sink,sink
4869,LaunchOptions.Builder_setRelaunchIfRunning,"set relaunch if running from launch options builder sets the ""relaunch if running"" fla. Return type is Launch Options. Builder and parameters are boolean. a builder for launch options objects",sink,sink,sink,sink
4870,MediaError_getCustomData,get custom data from media error returns the customized object for storing the media erro. Return type is J S O N Object and no argument. class for media errors,source,source,source,source
4871,MediaError_getDetailedErrorCode,"get detailed error code from media error returns the a p i-specific detailed error code, or null if not specifie. Return type is Integer and no argument. class for media errors",source,source,source,source
4872,MediaError_getReason,get reason from media error returns the a p i-specific error reaso. Return type is String and no argument. class for media errors,source,source,source,source
4873,MediaError_getType,get type from media error returns the type of the media erro. Return type is String and no argument. class for media errors,source,source,source,source
4874,MediaError_writeToParcel,write to parcel from media error . class for media errors,sink,sink,sink,sink
4875,MediaError.Builder_build,build from media error builder build a media erro. Return type is Media Error and no argument. builder for media error,neither,neither,neither,neither
4876,MediaError.Builder_setCustomData,set custom data from media error builder sets the custom dat. Return type is Media Error. Builder and parameters are j s o n object. builder for media error,sink,sink,sink,sink
4877,MediaError.Builder_setDetailedErrorCode,set detailed error code from media error builder sets the detailed error cod. Return type is Media Error. Builder and parameters are integer. builder for media error,sink,sink,sink,sink
4878,MediaError.Builder_setReason,set reason from media error builder sets the error reaso. Return type is Media Error. Builder and parameters are string. builder for media error,sink,sink,sink,sink
4879,MediaError.Builder_setType,set type from media error builder sets the type of the media erro. Return type is Media Error. Builder and parameters are string. builder for media error,sink,sink,sink,sink
4880,MediaInfo_equals,equals from media info . a class that aggregates information about a media item,neither,neither,neither,neither
4881,MediaInfo_getAdBreakClips,"get ad break clips from media info returns an unmodifiable list of ad break clip infos, or null if none have been specifie. Return type is List and no argument. a class that aggregates information about a media item",source,source,source,source
4882,MediaInfo_getAdBreaks,"get ad breaks from media info returns an unmodifiable list of ad break infos, or null if none have been specifie. Return type is List and no argument. a class that aggregates information about a media item",source,source,source,source
4883,MediaInfo_getContentId,get content id from media info returns the content i. Return type is String and no argument. a class that aggregates information about a media item,source,source,source,source
4884,MediaInfo_getContentType,get content type from media info returns the conten. Return type is String and no argument. a class that aggregates information about a media item,source,source,source,source
4885,MediaInfo_getContentUrl,get content url from media info returns the url of the content to be playe. Return type is String and no argument. a class that aggregates information about a media item,source,source,source,source
4886,MediaInfo_getCustomData,"get custom data from media info returns the custom data, if an. Return type is J S O N Object and no argument. a class that aggregates information about a media item",source,source,source,source
4887,MediaInfo_getEntity,get entity from media info returns the entity: a uri that identifies content in an application-specific wa. Return type is String and no argument. a class that aggregates information about a media item,source,source,source,source
4888,MediaInfo_getHlsSegmentFormat,"get hls segment format from media info returns the hls segment format, or null if none have been specifie. Return type is String and no argument. a class that aggregates information about a media item",source,source,source,source
4889,MediaInfo_getHlsVideoSegmentFormat,"get hls video segment format from media info returns the hls video segment format, or null if none have been specifie. Return type is String and no argument. a class that aggregates information about a media item",source,source,source,source
4890,MediaInfo_getMediaTracks,"get media tracks from media info returns the list of media tracks, or null if none have been specifie. Return type is List and no argument. a class that aggregates information about a media item",source,source,source,source
4891,MediaInfo_getMetadata,get metadata from media info returns the media item metadat. Return type is Media Metadata and no argument. a class that aggregates information about a media item,source,source,source,source
4892,MediaInfo_getStartAbsoluteTime,"get start absolute time from media info returns the start absolute time in milliseconds in epoch time, or u n k n o w n_ s t a r t_ a b s o l u t e_ t i m e if it is not availabl. Return type is long and no argument. a class that aggregates information about a media item",source,source,source,source
4893,MediaInfo_getStreamDuration,"get stream duration from media info returns the stream duration, in millisecond. Return type is long and no argument. a class that aggregates information about a media item",source,source,source,source
4894,MediaInfo_getStreamType,get stream type from media info returns the stream type; one of the s t r e a m_ t y p e_ constant. Return type is int and no argument. a class that aggregates information about a media item,source,source,source,source
4895,MediaInfo_getTextTrackStyle,"get text track style from media info returns the text track style, or null if none has been specifie. Return type is Text Track Style and no argument. a class that aggregates information about a media item",source,source,source,source
4896,MediaInfo_getVmapAdsRequest,"get vmap ads request from media info gets the vmap ad request configuration, which is a collection of vast ad. Return type is Vast Ads Request and no argument. a class that aggregates information about a media item",source,source,source,source
4897,MediaInfo_hashCode,hash code from media info . a class that aggregates information about a media item,neither,neither,neither,neither
4898,MediaInfo_setTextTrackStyle,set text track style from media info sets the text track styl. Return type is void and parameters are text track style. a class that aggregates information about a media item,sink,sink,sink,sink
4899,MediaInfo_writeToParcel,write to parcel from media info . a class that aggregates information about a media item,sink,sink,sink,sink
4900,MediaInfo.Builder_build,build from media info builder builds and returns the media info objec. Return type is Media Info and no argument. a builder for media info objects,neither,neither,neither,neither
4901,MediaInfo.Builder_setAdBreakClips,"set ad break clips from media info builder sets the list of ad break clip infos, each containing the content of a specific a. Return type is Media Info. Builder and parameters are list. a builder for media info objects",sink,sink,sink,sink
4902,MediaInfo.Builder_setAdBreaks,"set ad breaks from media info builder sets the list of ad break info, which describes where each ad break is located and what ad break clip infos each break include. Return type is Media Info. Builder and parameters are list. a builder for media info objects",sink,sink,sink,sink
4903,MediaInfo.Builder_setAtvEntity,set atv entity from media info builder sets the alternate entity to be used for loading the item on android t. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
4904,MediaInfo.Builder_setContentType,set content type from media info builder sets the conten. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
4905,MediaInfo.Builder_setContentUrl,set content url from media info builder sets the url of the content to be playe. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
4906,MediaInfo.Builder_setCustomData,set custom data from media info builder sets the custom application-specific dat. Return type is Media Info. Builder and parameters are j s o n object. a builder for media info objects,sink,sink,sink,sink
4907,MediaInfo.Builder_setEntity,"set entity from media info builder sets the entity, an application-specific deep link for loading the medi. Return type is Media Info. Builder and parameters are string. a builder for media info objects",sink,sink,sink,sink
4908,MediaInfo.Builder_setHlsSegmentFormat,set hls segment format from media info builder sets the hls segment forma. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
4909,MediaInfo.Builder_setHlsVideoSegmentFormat,set hls video segment format from media info builder sets the hls video segment forma. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
4910,MediaInfo.Builder_setMediaTracks,set media tracks from media info builder sets the media track. Return type is Media Info. Builder and parameters are list. a builder for media info objects,sink,sink,sink,sink
4911,MediaInfo.Builder_setMetadata,set metadata from media info builder sets the media item metadat. Return type is Media Info. Builder and parameters are media metadata. a builder for media info objects,sink,sink,sink,sink
4912,MediaInfo.Builder_setStreamDuration,"set stream duration from media info builder sets the stream duration, in millisecond. Return type is Media Info. Builder and parameters are long. a builder for media info objects",sink,sink,sink,sink
4913,MediaInfo.Builder_setStreamType,set stream type from media info builder sets the stream type; one of the s t r e a m_ t y p e_ constant. Return type is Media Info. Builder and parameters are int. a builder for media info objects,sink,sink,sink,sink
4914,MediaInfo.Builder_setTextTrackStyle,set text track style from media info builder sets the text track styl. Return type is Media Info. Builder and parameters are text track style. a builder for media info objects,sink,sink,sink,sink
4915,MediaInfo.Builder_setVmapAdsRequest,set vmap ads request from media info builder v m a p is a collection of vast ad. Return type is Media Info. Builder and parameters are vast ads request. a builder for media info objects,sink,sink,sink,sink
4916,MediaLiveSeekableRange_equals,equals from media live seekable range . a class that aggregates information about the seekable range of a media stream,neither,neither,neither,neither
4917,MediaLiveSeekableRange_getEndTime,"get end time from media live seekable range returns the end time, in milliseconds, of the seekable rang. Return type is long and no argument. a class that aggregates information about the seekable range of a media stream",source,source,source,source
4918,MediaLiveSeekableRange_getStartTime,"get start time from media live seekable range returns the start time, in milliseconds, of the seekable rang. Return type is long and no argument. a class that aggregates information about the seekable range of a media stream",source,source,source,source
4919,MediaLiveSeekableRange_hashCode,hash code from media live seekable range . a class that aggregates information about the seekable range of a media stream,neither,neither,neither,neither
4920,MediaLiveSeekableRange_isLiveDone,is live done from media live seekable range returns the flag indicating whether the current live stream is don. Return type is boolean and no argument. a class that aggregates information about the seekable range of a media stream,neither,neither,neither,neither
4921,MediaLiveSeekableRange_isMovingWindow,is moving window from media live seekable range returns true if the current seekable range is a fixed-length moving window or false if it is an expanding rang. Return type is boolean and no argument. a class that aggregates information about the seekable range of a media stream,neither,neither,neither,neither
4922,MediaLiveSeekableRange_writeToParcel,write to parcel from media live seekable range . a class that aggregates information about the seekable range of a media stream,sink,sink,sink,sink
4923,MediaLiveSeekableRange.Builder_build,build from media live seekable range builder builds a media live seekable rang. Return type is Media Live Seekable Range and no argument. builder for media live seekable range,neither,neither,neither,neither
4924,MediaLiveSeekableRange.Builder_setEndTime,set end time from media live seekable range builder sets the end time in millisecond. Return type is Media Live Seekable Range. Builder and parameters are long. builder for media live seekable range,sink,sink,sink,sink
4925,MediaLiveSeekableRange.Builder_setIsLiveDone,set is live done from media live seekable range builder sets whether the live stream is don. Return type is Media Live Seekable Range. Builder and parameters are boolean. builder for media live seekable range,sink,sink,sink,sink
4926,MediaLiveSeekableRange.Builder_setIsMovingWindow,set is moving window from media live seekable range builder sets whether the seekable range is a moving windo. Return type is Media Live Seekable Range. Builder and parameters are boolean. builder for media live seekable range,sink,sink,sink,sink
4927,MediaLiveSeekableRange.Builder_setStartTime,set start time from media live seekable range builder sets the start time in millisecond. Return type is Media Live Seekable Range. Builder and parameters are long. builder for media live seekable range,sink,sink,sink,sink
4928,MediaLoadOptions_getActiveTrackIds,get active track ids from media load options returns the array of the active track. Return type is long[] and no argument. an object that holds options that affect how a receiver application should load a media item,source,source,source,source
4929,MediaLoadOptions_getAutoplay,get autoplay from media load options returns the value of whether playback should start immediatel. Return type is boolean and no argument. an object that holds options that affect how a receiver application should load a media item,source,source,source,source
4930,MediaLoadOptions_getCredentials,"get credentials from media load options returns the credentials string, as passed in with media load options builderset credentia. Return type is String and no argument. an object that holds options that affect how a receiver application should load a media item",source,source,source,source
4931,MediaLoadOptions_getCredentialsType,"get credentials type from media load options returns the credentials type string, as passed in with media load options builderset credentials ty. Return type is String and no argument. an object that holds options that affect how a receiver application should load a media item",source,source,source,source
4932,MediaLoadOptions_getCustomData,get custom data from media load options returns the custom application-specific data to pass along with the load reques. Return type is J S O N Object and no argument. an object that holds options that affect how a receiver application should load a media item,source,source,source,source
4933,MediaLoadOptions_getPlayPosition,"get play position from media load options returns the initial playback position, in milliseconds from the beginning of the strea. Return type is long and no argument. an object that holds options that affect how a receiver application should load a media item",source,source,source,source
4934,MediaLoadOptions_getPlaybackRate,"get playback rate from media load options returns the playback rate, as the multiplier of the normal playback rat. Return type is double and no argument. an object that holds options that affect how a receiver application should load a media item",source,source,source,source
4935,MediaLoadOptions.Builder_build,build from media load options builder builds a media load options objec. Return type is Media Load Options and no argument. builder class for media load options,neither,neither,neither,neither
4936,MediaLoadOptions.Builder_setActiveTrackIds,set active track ids from media load options builder sets the array of the active track. Return type is Media Load Options. Builder and parameters are long[]. builder class for media load options,sink,sink,sink,sink
4937,MediaLoadOptions.Builder_setAutoplay,set autoplay from media load options builder sets the value of whether playback should start immediatel. Return type is Media Load Options. Builder and parameters are boolean. builder class for media load options,sink,sink,sink,sink
4938,MediaLoadOptions.Builder_setCredentials,set credentials from media load options builder sets the user credentials to pass along with the load request to the receive. Return type is Media Load Options. Builder and parameters are string. builder class for media load options,sink,sink,sink,sink
4939,MediaLoadOptions.Builder_setCredentialsType,set credentials type from media load options builder sets the user credentials type to pass along with the load request to the receive. Return type is Media Load Options. Builder and parameters are string. builder class for media load options,sink,sink,sink,sink
4940,MediaLoadOptions.Builder_setCustomData,set custom data from media load options builder sets the custom application-specific data to pass along with the load reques. Return type is Media Load Options. Builder and parameters are j s o n object. builder class for media load options,sink,sink,sink,sink
4941,MediaLoadOptions.Builder_setPlayPosition,"set play position from media load options builder sets the initial playback position, in milliseconds from the beginning of the strea. Return type is Media Load Options. Builder and parameters are long. builder class for media load options",sink,sink,sink,sink
4942,MediaLoadOptions.Builder_setPlaybackRate,"set playback rate from media load options builder sets the playback rate, as the multiplier of the normal playback rat. Return type is Media Load Options. Builder and parameters are double. builder class for media load options",sink,sink,sink,sink
4943,MediaLoadRequestData_equals,equals from media load request data . the class used in load commands for specifying how a receiver application should load media,neither,neither,neither,neither
4944,MediaLoadRequestData_getActiveTrackIds,get active track ids from media load request data returns the array of the active track. Return type is long[] and no argument. the class used in load commands for specifying how a receiver application should load media,source,source,source,source
4945,MediaLoadRequestData_getAutoplay,get autoplay from media load request data returns the value of whether playback should start immediatel. Return type is Boolean and no argument. the class used in load commands for specifying how a receiver application should load media,source,source,source,source
4946,MediaLoadRequestData_getCredentials,"get credentials from media load request data returns the credentials string, as passed in with media load options builderset credentia. Return type is String and no argument. the class used in load commands for specifying how a receiver application should load media",source,source,source,source
4947,MediaLoadRequestData_getCredentialsType,"get credentials type from media load request data returns the credentials type string, as passed in with media load options builderset credentials ty. Return type is String and no argument. the class used in load commands for specifying how a receiver application should load media",source,source,source,source
4948,MediaLoadRequestData_getCurrentTime,"get current time from media load request data returns the initial playback position, in milliseconds from the beginning of the strea. Return type is long and no argument. the class used in load commands for specifying how a receiver application should load media",source,source,source,source
4949,MediaLoadRequestData_getCustomData,get custom data from media load request data returns the custom application-specific data to pass along with the load reques. Return type is J S O N Object and no argument. the class used in load commands for specifying how a receiver application should load media,source,source,source,source
4950,MediaLoadRequestData_getMediaInfo,get media info from media load request data returns the media info of the load reques. Return type is Media Info and no argument. the class used in load commands for specifying how a receiver application should load media,source,source,source,source
4951,MediaLoadRequestData_getPlaybackRate,"get playback rate from media load request data returns the playback rate, as the multiplier of the normal playback rat. Return type is double and no argument. the class used in load commands for specifying how a receiver application should load media",source,source,source,source
4952,MediaLoadRequestData_getQueueData,get queue data from media load request data returns the media queue data of the load reques. Return type is Media Queue Data and no argument. the class used in load commands for specifying how a receiver application should load media,source,source,source,source
4953,MediaLoadRequestData_hashCode,hash code from media load request data . the class used in load commands for specifying how a receiver application should load media,neither,neither,neither,neither
4954,MediaLoadRequestData_writeToParcel,write to parcel from media load request data . the class used in load commands for specifying how a receiver application should load media,sink,sink,sink,sink
4955,MediaLoadRequestData.Builder_build,build from media load request data builder builds a media load request data objec. Return type is Media Load Request Data and no argument. builder class for media load request data,neither,neither,neither,neither
4956,MediaLoadRequestData.Builder_setActiveTrackIds,set active track ids from media load request data builder sets the array of the active track. Return type is Media Load Request Data. Builder and parameters are long[]. builder class for media load request data,sink,sink,sink,sink
4957,MediaLoadRequestData.Builder_setAtvCredentials,set atv credentials from media load request data builder sets the alternate android tv credentials in the load reques. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
4958,MediaLoadRequestData.Builder_setAtvCredentialsType,set atv credentials type from media load request data builder sets the alternate android tv credentials type in the load reques. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
4959,MediaLoadRequestData.Builder_setAutoplay,set autoplay from media load request data builder sets the value of whether playback should start immediatel. Return type is Media Load Request Data. Builder and parameters are boolean. builder class for media load request data,sink,sink,sink,sink
4960,MediaLoadRequestData.Builder_setCredentials,set credentials from media load request data builder sets the user credentials to pass along with the load request to the receive. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
4961,MediaLoadRequestData.Builder_setCredentialsType,set credentials type from media load request data builder sets the user credentials type to pass along with the load request to the receive. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
4962,MediaLoadRequestData.Builder_setCurrentTime,"set current time from media load request data builder sets the initial playback position, in milliseconds from the beginning of the strea. Return type is Media Load Request Data. Builder and parameters are long. builder class for media load request data",sink,sink,sink,sink
4963,MediaLoadRequestData.Builder_setCustomData,set custom data from media load request data builder sets the custom application-specific data to pass along with the load reques. Return type is Media Load Request Data. Builder and parameters are j s o n object. builder class for media load request data,sink,sink,sink,sink
4964,MediaLoadRequestData.Builder_setMediaInfo,set media info from media load request data builder sets the media info of the load reques. Return type is Media Load Request Data. Builder and parameters are media info. builder class for media load request data,sink,sink,sink,sink
4965,MediaLoadRequestData.Builder_setPlaybackRate,"set playback rate from media load request data builder sets the playback rate, as the multiplier of the normal playback rat. Return type is Media Load Request Data. Builder and parameters are double. builder class for media load request data",sink,sink,sink,sink
4966,MediaLoadRequestData.Builder_setQueueData,set queue data from media load request data builder sets the media queue data of the load reques. Return type is Media Load Request Data. Builder and parameters are media queue data. builder class for media load request data,sink,sink,sink,sink
4967,MediaMetadata_addImage,add image from media metadata adds an image to the list of image. Return type is void and parameters are web image. container class for media metadata,neither,neither,neither,sink
4968,MediaMetadata_clear,clear from media metadata clears this objec. Return type is void and no argument. container class for media metadata,neither,neither,neither,neither
4969,MediaMetadata_clearImages,clear images from media metadata clears the list of image. Return type is void and no argument. container class for media metadata,neither,neither,neither,neither
4970,MediaMetadata_containsKey,contains key from media metadata tests if the object contains a field with the given ke. Return type is boolean and parameters are string. container class for media metadata,source,source,source,neither
4971,MediaMetadata_equals,equals from media metadata . container class for media metadata,neither,neither,neither,neither
4972,MediaMetadata_getDate,get date from media metadata reads the value of a date fiel. Return type is Calendar and parameters are string. container class for media metadata,source,source,source,source
4973,MediaMetadata_getDateAsString,"get date as string from media metadata reads the value of a date field, as a strin. Return type is String and parameters are string. container class for media metadata",source,source,source,source
4974,MediaMetadata_getDouble,get double from media metadata reads the value of a double fiel. Return type is double and parameters are string. container class for media metadata,source,source,source,source
4975,MediaMetadata_getImages,get images from media metadata returns the list of image. Return type is List and no argument. container class for media metadata,source,source,source,source
4976,MediaMetadata_getInt,get int from media metadata reads the value of an int fiel. Return type is int and parameters are string. container class for media metadata,source,source,source,source
4977,MediaMetadata_getMediaType,get media type from media metadata gets the media typ. Return type is int and no argument. container class for media metadata,source,source,source,source
4978,MediaMetadata_getString,get string from media metadata reads the value of a string fiel. Return type is String and parameters are string. container class for media metadata,source,source,source,source
4979,MediaMetadata_getTimeMillis,"get time millis from media metadata reads the value of a time field, as a long in millisecond. Return type is long and parameters are string. container class for media metadata",source,source,source,source
4980,MediaMetadata_hasImages,has images from media metadata checks if the metadata includes any image. Return type is boolean and no argument. container class for media metadata,source,source,source,neither
4981,MediaMetadata_hashCode,hash code from media metadata . container class for media metadata,neither,neither,neither,neither
4982,MediaMetadata_keySet,key set from media metadata returns a set of keys for all fields that are present in the objec. Return type is Set and no argument. container class for media metadata,source,source,source,source
4983,MediaMetadata_putDate,put date from media metadata stores a value in a date fiel. Return type is void and parameters are string calendar. container class for media metadata,sink,sink,sink,sink
4984,MediaMetadata_putDouble,put double from media metadata stores a value in a double fiel. Return type is void and parameters are string double. container class for media metadata,sink,sink,sink,sink
4985,MediaMetadata_putInt,put int from media metadata stores a value in an int fiel. Return type is void and parameters are string int. container class for media metadata,sink,sink,sink,sink
4986,MediaMetadata_putString,put string from media metadata stores a value in a string fiel. Return type is void and parameters are string string. container class for media metadata,sink,sink,sink,sink
4987,MediaMetadata_putTimeMillis,put time millis from media metadata stores a value in a time fiel. Return type is void and parameters are string long. container class for media metadata,sink,sink,sink,sink
4988,MediaMetadata_writeToParcel,write to parcel from media metadata . container class for media metadata,sink,sink,sink,sink
4989,MediaQueueContainerMetadata_equals,equals from media queue container metadata . additional metadata for the media queue container,neither,neither,neither,neither
4990,MediaQueueContainerMetadata_getContainerDuration,get container duration from media queue container metadata returns the total playback time for the containe. Return type is double and no argument. additional metadata for the media queue container,source,source,source,source
4991,MediaQueueContainerMetadata_getContainerImages,get container images from media queue container metadata returns the images associated with the queu. Return type is List and no argument. additional metadata for the media queue container,source,source,source,source
4992,MediaQueueContainerMetadata_getContainerType,get container type from media queue container metadata returns the container typ. Return type is int and no argument. additional metadata for the media queue container,source,source,source,source
4993,MediaQueueContainerMetadata_getSections,"get sections from media queue container metadata returns the information about the sections of the media stream, if an. Return type is List and no argument. additional metadata for the media queue container",source,source,source,source
4994,MediaQueueContainerMetadata_getTitle,get title from media queue container metadata returns the container titl. Return type is String and no argument. additional metadata for the media queue container,source,source,source,source
4995,MediaQueueContainerMetadata_hashCode,hash code from media queue container metadata . additional metadata for the media queue container,neither,neither,neither,neither
4996,MediaQueueContainerMetadata_writeToParcel,write to parcel from media queue container metadata . additional metadata for the media queue container,sink,sink,sink,sink
4997,MediaQueueContainerMetadata.Builder_build,build from media queue container metadata builder builds a media queue container metadata from the builde. Return type is Media Queue Container Metadata and no argument. builder class for constructing a media queue container metadata,neither,neither,neither,neither
4998,MediaQueueContainerMetadata.Builder_setContainerDuration,set container duration from media queue container metadata builder sets the total playback time for the containe. Return type is Media Queue Container Metadata. Builder and parameters are double. builder class for constructing a media queue container metadata,sink,sink,sink,sink
4999,MediaQueueContainerMetadata.Builder_setContainerImages,set container images from media queue container metadata builder sets the images associated with the queu. Return type is Media Queue Container Metadata. Builder and parameters are list. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5000,MediaQueueContainerMetadata.Builder_setContainerType,set container type from media queue container metadata builder sets the container typ. Return type is Media Queue Container Metadata. Builder and parameters are int. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5001,MediaQueueContainerMetadata.Builder_setSections,set sections from media queue container metadata builder sets the sections of the media strea. Return type is Media Queue Container Metadata. Builder and parameters are list. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5002,MediaQueueContainerMetadata.Builder_setTitle,set title from media queue container metadata builder sets the container titl. Return type is Media Queue Container Metadata. Builder and parameters are string. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5003,MediaQueueData_equals,equals from media queue data . a class that holds the information of the playing queue or media container,neither,neither,neither,neither
5004,MediaQueueData_getContainerMetadata,get container metadata from media queue data returns the additional description for the queu. Return type is Media Queue Container Metadata and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5005,MediaQueueData_getEntity,get entity from media queue data returns the queue deep lin. Return type is String and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5006,MediaQueueData_getItems,get items from media queue data returns the list of queue item. Return type is List and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5007,MediaQueueData_getName,get name from media queue data returns the display name for the queu. Return type is String and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5008,MediaQueueData_getQueueId,get queue id from media queue data returns the queue i. Return type is String and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5009,MediaQueueData_getQueueType,get queue type from media queue data returns the type of the queu. Return type is int and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5010,MediaQueueData_getRepeatMode,get repeat mode from media queue data returns the repeat mode of the queu. Return type is int and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5011,MediaQueueData_getStartIndex,get start index from media queue data returns the index of the item that should play firs. Return type is int and no argument. a class that holds the information of the playing queue or media container,source,source,source,source
5012,MediaQueueData_getStartTime,"get start time from media queue data returns the playback start time, in millisecond. Return type is long and no argument. a class that holds the information of the playing queue or media container",source,source,source,source
5013,MediaQueueData_hashCode,hash code from media queue data . a class that holds the information of the playing queue or media container,neither,source,neither,neither
5014,MediaQueueData_writeToParcel,write to parcel from media queue data . a class that holds the information of the playing queue or media container,sink,sink,sink,sink
5015,MediaQueueData.Builder_build,build from media queue data builder builds a media queue data from the builde. Return type is Media Queue Data and no argument. builder class for constructing a media queue data,neither,neither,neither,neither
5016,MediaQueueData.Builder_setContainerMetadata,"set container metadata from media queue data builder sets the additional description for the queue, including an optional list of media sections metadata, images, et. Return type is Media Queue Data. Builder and parameters are media queue container metadata. builder class for constructing a media queue data",sink,sink,sink,sink
5017,MediaQueueData.Builder_setEntity,set entity from media queue data builder sets the queue deep lin. Return type is Media Queue Data. Builder and parameters are string. builder class for constructing a media queue data,sink,sink,sink,sink
5018,MediaQueueData.Builder_setItems,set items from media queue data builder sets the list of queue item. Return type is Media Queue Data. Builder and parameters are list. builder class for constructing a media queue data,sink,sink,sink,sink
5019,MediaQueueData.Builder_setName,set name from media queue data builder sets the display name for the queu. Return type is Media Queue Data. Builder and parameters are string. builder class for constructing a media queue data,sink,sink,sink,sink
5020,MediaQueueData.Builder_setQueueId,set queue id from media queue data builder sets the queue i. Return type is Media Queue Data. Builder and parameters are string. builder class for constructing a media queue data,sink,sink,sink,sink
5021,MediaQueueData.Builder_setQueueType,set queue type from media queue data builder sets the type of the queu. Return type is Media Queue Data. Builder and parameters are int. builder class for constructing a media queue data,sink,sink,sink,neither
5022,MediaQueueData.Builder_setRepeatMode,set repeat mode from media queue data builder sets the repeat mod. Return type is Media Queue Data. Builder and parameters are int. builder class for constructing a media queue data,sink,sink,sink,sink
5023,MediaQueueData.Builder_setStartIndex,set start index from media queue data builder sets the index of the item that should play firs. Return type is Media Queue Data. Builder and parameters are int. builder class for constructing a media queue data,sink,sink,sink,sink
5024,MediaQueueData.Builder_setStartTime,"set start time from media queue data builder sets the playback start time, in millisecond. Return type is Media Queue Data. Builder and parameters are long. builder class for constructing a media queue data",sink,sink,sink,sink
5025,MediaQueueItem_equals,equals from media queue item . a class that aggregates information about an item in a media queue,neither,neither,neither,neither
5026,MediaQueueItem_getActiveTrackIds,"get active track ids from media queue item returns the list of active media tracks, or null if none have been specifie. Return type is long[] and no argument. a class that aggregates information about an item in a media queue",source,source,source,source
5027,MediaQueueItem_getAutoplay,get autoplay from media queue item returns the autoplay stat. Return type is boolean and no argument. a class that aggregates information about an item in a media queue,source,source,source,source
5028,MediaQueueItem_getCustomData,"get custom data from media queue item returns the custom data, if an. Return type is J S O N Object and no argument. a class that aggregates information about an item in a media queue",source,source,source,source
5029,MediaQueueItem_getItemId,"get item id from media queue item returns the item i d, or i n v a l i d_ i t e m_ i d if not assigne. Return type is int and no argument. a class that aggregates information about an item in a media queue",source,source,source,source
5030,MediaQueueItem_getMedia,get media from media queue item returns the media info information associated with this queue ite. Return type is Media Info and no argument. a class that aggregates information about an item in a media queue,source,source,source,source
5031,MediaQueueItem_getPlaybackDuration,get playback duration from media queue item returns the playback duration in second. Return type is double and no argument. a class that aggregates information about an item in a media queue,source,source,source,source
5032,MediaQueueItem_getPreloadTime,get preload time from media queue item returns the preload time in second. Return type is double and no argument. a class that aggregates information about an item in a media queue,source,source,source,source
5033,MediaQueueItem_getStartTime,get start time from media queue item returns the start time of the item in second. Return type is double and no argument. a class that aggregates information about an item in a media queue,source,source,source,source
5034,MediaQueueItem_hashCode,hash code from media queue item . a class that aggregates information about an item in a media queue,neither,neither,neither,neither
5035,MediaQueueItem_writeToParcel,write to parcel from media queue item . a class that aggregates information about an item in a media queue,sink,sink,sink,sink
5036,MediaQueueItem.Builder_build,build from media queue item builder builds and returns the media queue item objec. Return type is Media Queue Item and no argument. a builder for media queue item objects,neither,neither,neither,neither
5037,MediaQueueItem.Builder_clearItemId,clear item id from media queue item builder optiona. Return type is Media Queue Item. Builder and no argument. a builder for media queue item objects,neither,neither,neither,neither
5038,MediaQueueItem.Builder_setActiveTrackIds,set active track ids from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are long[]. a builder for media queue item objects,sink,sink,sink,sink
5039,MediaQueueItem.Builder_setAutoplay,set autoplay from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are boolean. a builder for media queue item objects,sink,sink,sink,sink
5040,MediaQueueItem.Builder_setCustomData,set custom data from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are j s o n object. a builder for media queue item objects,sink,sink,sink,sink
5041,MediaQueueItem.Builder_setItemId,set item id from media queue item builder sets the item i. Return type is Media Queue Item. Builder and parameters are int. a builder for media queue item objects,sink,sink,sink,sink
5042,MediaQueueItem.Builder_setPlaybackDuration,set playback duration from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are double. a builder for media queue item objects,sink,sink,sink,sink
5043,MediaQueueItem.Builder_setPreloadTime,set preload time from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are double. a builder for media queue item objects,sink,sink,sink,sink
5044,MediaQueueItem.Builder_setStartTime,set start time from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are double. a builder for media queue item objects,sink,sink,sink,sink
5045,MediaSeekOptions_equals,equals from media seek options . the class for specifying options for seek requests,neither,neither,neither,neither
5046,MediaSeekOptions_getCustomData,get custom data from media seek options returns the custom application-specific data to pass along with the seek reques. Return type is J S O N Object and no argument. the class for specifying options for seek requests,source,source,source,source
5047,MediaSeekOptions_getPosition,"get position from media seek options returns the position to seek to, in millisecond. Return type is long and no argument. the class for specifying options for seek requests",source,source,source,source
5048,MediaSeekOptions_getResumeState,get resume state from media seek options returns the action to take after the seek operation has finishe. Return type is int and no argument. the class for specifying options for seek requests,source,source,source,source
5049,MediaSeekOptions_hashCode,hash code from media seek options . the class for specifying options for seek requests,source,neither,source,neither
5050,MediaSeekOptions_isSeekToInfinite,is seek to infinite from media seek options returns whether to seek to the end of stream or live positio. Return type is boolean and no argument. the class for specifying options for seek requests,source,neither,neither,neither
5051,MediaSeekOptions.Builder_build,build from media seek options builder builds a media seek options objec. Return type is Media Seek Options and no argument. builder for media seek options,neither,neither,neither,neither
5052,MediaSeekOptions.Builder_setCustomData,set custom data from media seek options builder sets the custom application-specific data to pass along with the seek reques. Return type is Media Seek Options. Builder and parameters are j s o n object. builder for media seek options,sink,sink,sink,sink
5053,MediaSeekOptions.Builder_setIsSeekToInfinite,set is seek to infinite from media seek options builder sets whether to seek to the end of stream or live positio. Return type is Media Seek Options. Builder and parameters are boolean. builder for media seek options,sink,sink,sink,sink
5054,MediaSeekOptions.Builder_setPosition,"set position from media seek options builder sets the position to seek to, in millisecond. Return type is Media Seek Options. Builder and parameters are long. builder for media seek options",sink,sink,sink,sink
5055,MediaSeekOptions.Builder_setResumeState,set resume state from media seek options builder sets the action to take after the seek operation has finishe. Return type is Media Seek Options. Builder and parameters are int. builder for media seek options,sink,sink,sink,sink
5056,MediaStatus_equals,equals from media status . a class that holds status information about some media or media queue,neither,neither,neither,neither
5057,MediaStatus_getActiveTrackIds,"get active track ids from media status returns the list of active track i ds set by the cast receiver, if any, otherwise nul. Return type is long[] and no argument. a class that holds status information about some media or media queue",source,source,source,source
5058,MediaStatus_getAdBreakStatus,get ad break status from media status returns the received ad break statu. Return type is Ad Break Status and no argument. a class that holds status information about some media or media queue,source,source,source,source
5059,MediaStatus_getCurrentAdBreak,get current ad break from media status returns the ad break info of the currently playing ad break on the cast receive. Return type is Ad Break Info and no argument. a class that holds status information about some media or media queue,source,source,source,source
5060,MediaStatus_getCurrentAdBreakClip,get current ad break clip from media status returns the ad break clip info of the currently playing ad break clip on the cast receive. Return type is Ad Break Clip Info and no argument. a class that holds status information about some media or media queue,source,source,source,source
5061,MediaStatus_getCurrentItemId,get current item id from media status returns the item id of the item that that was active in the queu. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5062,MediaStatus_getCustomData,get custom data from media status returns any custom data that is associated with the media ite. Return type is J S O N Object and no argument. a class that holds status information about some media or media queue,source,source,source,source
5063,MediaStatus_getIdleReason,get idle reason from media status gets the player state idle reaso. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5064,MediaStatus_getIndexById,"get index by id from media status returns the index of the media queue item with the given item id in the playback queue, or null if there is no such item in the queu. Return type is Integer and parameters are int. a class that holds status information about some media or media queue",source,source,source,source
5065,MediaStatus_getItemById,get item by id from media status returns the media queue item of the give item i. Return type is Media Queue Item and parameters are int. a class that holds status information about some media or media queue,source,source,source,source
5066,MediaStatus_getItemByIndex,"get item by index from media status returns the media queue item at index, or null if index is out of bound. Return type is Media Queue Item and parameters are int. a class that holds status information about some media or media queue",source,source,source,source
5067,MediaStatus_getLiveSeekableRange,get live seekable range from media status returns the seekable range of a live strea. Return type is Media Live Seekable Range and no argument. a class that holds status information about some media or media queue,source,source,source,source
5068,MediaStatus_getLoadingItemId,get loading item id from media status returns the item id of the item that is currently loadin. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5069,MediaStatus_getMediaInfo,get media info from media status returns the media info for this ite. Return type is Media Info and no argument. a class that holds status information about some media or media queue,source,source,source,source
5070,MediaStatus_getPlaybackRate,get playback rate from media status gets the current stream playback rat. Return type is double and no argument. a class that holds status information about some media or media queue,source,source,source,source
5071,MediaStatus_getPlayerState,get player state from media status gets the current media player stat. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5072,MediaStatus_getPreloadedItemId,get preloaded item id from media status if the next item has been preloaded this returns the preloaded item i. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5073,MediaStatus_getQueueData,get queue data from media status returns the last received media queue dat. Return type is Media Queue Data and no argument. a class that holds status information about some media or media queue,source,source,source,source
5074,MediaStatus_getQueueItem,"get queue item from media status returns the media queue item at index, or null if index out of bound. Return type is Media Queue Item and parameters are int. a class that holds status information about some media or media queue",source,source,source,source
5075,MediaStatus_getQueueItemById,get queue item by id from media status returns the media queue item of the give item i. Return type is Media Queue Item and parameters are int. a class that holds status information about some media or media queue,source,source,source,source
5076,MediaStatus_getQueueItemCount,get queue item count from media status returns the number of items in the media queu. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5077,MediaStatus_getQueueItems,get queue items from media status returns the list of media queue item as an unmodifiable lis. Return type is List and no argument. a class that holds status information about some media or media queue,source,source,source,source
5078,MediaStatus_getQueueRepeatMode,get queue repeat mode from media status returns the repeat mode of the media queu. Return type is int and no argument. a class that holds status information about some media or media queue,source,source,source,source
5079,MediaStatus_getStreamPosition,"get stream position from media status returns the current stream position, in millisecond. Return type is long and no argument. a class that holds status information about some media or media queue",source,source,source,source
5080,MediaStatus_getStreamVolume,get stream volume from media status returns the stream's volum. Return type is double and no argument. a class that holds status information about some media or media queue,source,source,source,source
5081,MediaStatus_getVideoInfo,get video info from media status returns the last received video inf. Return type is Video Info and no argument. a class that holds status information about some media or media queue,source,source,source,source
5082,MediaStatus_hashCode,hash code from media status . a class that holds status information about some media or media queue,source,source,neither,neither
5083,MediaStatus_isMediaCommandSupported,is media command supported from media status tests if the stream supports a given control comman. Return type is boolean and parameters are long. a class that holds status information about some media or media queue,source,source,source,neither
5084,MediaStatus_isMute,is mute from media status returns the stream's mute stat. Return type is boolean and no argument. a class that holds status information about some media or media queue,source,source,source,source
5085,MediaStatus_isPlayingAd,is playing ad from media status returns true is the receiver is playing an a. Return type is boolean and no argument. a class that holds status information about some media or media queue,source,source,source,source
5086,MediaStatus_writeToParcel,write to parcel from media status . a class that holds status information about some media or media queue,sink,sink,sink,sink
5087,MediaTrack_equals,"equals from media track . a class that represents a media track, such as a language track or closed caption text track in a video",neither,neither,neither,neither
5088,MediaTrack_getContentId,"get content id from media track returns the content id of the media trac. Return type is String and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5089,MediaTrack_getContentType,"get content type from media track returns the content typ. Return type is String and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5090,MediaTrack_getCustomData,"get custom data from media track returns the custom data object for this media track, or null if none was specifie. Return type is J S O N Object and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5091,MediaTrack_getId,"get id from media track returns the unique id of the media trac. Return type is long and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5092,MediaTrack_getLanguage,"get language from media track returns the language of this media track in r f c-5464 format, or null if none was specifie. Return type is String and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5093,MediaTrack_getLanguageLocale,"get language locale from media track returns the locale representing the track language defined by the language fiel. Return type is Locale and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5094,MediaTrack_getName,"get name from media track returns the name of the media track, or null if none was specifie. Return type is String and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5095,MediaTrack_getRoles,"get roles from media track returns the roles of this media trac. Return type is List and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5096,MediaTrack_getSubtype,"get subtype from media track returns the subtype of this media track; one of the s u b t y p e_ constant. Return type is int and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5097,MediaTrack_getType,"get type from media track returns the type of the track; one of the t y p e_ constant. Return type is int and no argument. a class that represents a media track, such as a language track or closed caption text track in a video",source,source,source,source
5098,MediaTrack_hashCode,"hash code from media track . a class that represents a media track, such as a language track or closed caption text track in a video",neither,neither,neither,neither
5099,MediaTrack_setContentId,"set content id from media track sets the content id for the media trac. Return type is void and parameters are string. a class that represents a media track, such as a language track or closed caption text track in a video",sink,sink,sink,sink
5100,MediaTrack_setContentType,"set content type from media track sets the content typ. Return type is void and parameters are string. a class that represents a media track, such as a language track or closed caption text track in a video",sink,sink,sink,sink
5101,MediaTrack_writeToParcel,"write to parcel from media track . a class that represents a media track, such as a language track or closed caption text track in a video",sink,sink,sink,sink
5102,MediaTrack.Builder_build,build from media track builder builds and returns the media track objec. Return type is Media Track and no argument. a builder for media track objects,neither,neither,neither,neither
5103,MediaTrack.Builder_setContentId,set content id from media track builder sets the track content i. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5104,MediaTrack.Builder_setContentType,set content type from media track builder sets the track content typ. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5105,MediaTrack.Builder_setCustomData,set custom data from media track builder sets the track's custom data objec. Return type is Media Track. Builder and parameters are j s o n object. a builder for media track objects,sink,sink,sink,sink
5106,MediaTrack.Builder_setLanguage,set language from media track builder sets the r f c-5464 formatted track languag. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5107,MediaTrack.Builder_setLanguage,set language from media track builder sets the track language from a locale in r f c-5464 forma. Return type is Media Track. Builder and parameters are locale. a builder for media track objects,sink,sink,sink,sink
5108,MediaTrack.Builder_setName,set name from media track builder sets the track nam. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5109,MediaTrack.Builder_setRoles,set roles from media track builder sets the roles for this trac. Return type is Media Track. Builder and parameters are list. a builder for media track objects,sink,sink,sink,sink
5110,MediaTrack.Builder_setSubtype,set subtype from media track builder sets the track subtype with one of the s u b t y p e_ constant. Return type is Media Track. Builder and parameters are int. a builder for media track objects,sink,sink,sink,sink
5111,RemoteMediaPlayer_getApproximateStreamPosition,get approximate stream position from remote media player returns the approximate stream position as calculated from the last received stream information and the elapsed wall-time since that updat. Return type is long and no argument. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5112,RemoteMediaPlayer_getMediaInfo,"get media info from remote media player returns the current media information, if an. Return type is Media Info and no argument. this class is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5113,RemoteMediaPlayer_getMediaStatus,"get media status from remote media player returns the current media status, if an. Return type is Media Status and no argument. this class is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5114,RemoteMediaPlayer_getNamespace,get namespace from remote media player returns the media control namespac. Return type is String and no argument. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5115,RemoteMediaPlayer_getStreamDuration,get stream duration from remote media player convenience method for getting the stream duratio. Return type is long and no argument. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5116,RemoteMediaPlayer_load,load from remote media player loads and optionally starts playback of a new media ite. Return type is Pending Result and parameters are google api client media info boolean long j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5117,RemoteMediaPlayer_load,load from remote media player loads and optionally starts playback of a new media ite. Return type is Pending Result and parameters are google api client media info boolean long. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5118,RemoteMediaPlayer_load,load from remote media player loads and automatically starts playback of a new media ite. Return type is Pending Result and parameters are google api client media info. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5119,RemoteMediaPlayer_load,load from remote media player loads and optionally starts playback of a new media ite. Return type is Pending Result and parameters are google api client media info boolean. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5120,RemoteMediaPlayer_load,load from remote media player loads and optionally starts playback of a new media ite. Return type is Pending Result and parameters are google api client media info boolean long long[] j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5121,RemoteMediaPlayer_onMessageReceived,on message received from remote media player called when a message is received from a given cast devic. Return type is void and parameters are cast device string string. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5122,RemoteMediaPlayer_pause,pause from remote media player pauses playback of the current media ite. Return type is Pending Result and parameters are google api client. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5123,RemoteMediaPlayer_pause,pause from remote media player pauses playback of the current media ite. Return type is Pending Result and parameters are google api client j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5124,RemoteMediaPlayer_play,play from remote media player begin. Return type is Pending Result and parameters are google api client j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5125,RemoteMediaPlayer_play,play from remote media player begin. Return type is Pending Result and parameters are google api client. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,sink
5126,RemoteMediaPlayer_queueAppendItem,queue append item from remote media player appends a new media item to the end of the queu. Return type is Pending Result and parameters are google api client media queue item j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,sink,neither
5127,RemoteMediaPlayer_queueInsertAndPlayItem,queue insert and play item from remote media player a convenience method that inserts a single item into the queue and starts playing it at the specified positio. Return type is Pending Result and parameters are google api client media queue item int long j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,sink
5128,RemoteMediaPlayer_queueInsertAndPlayItem,queue insert and play item from remote media player a convenience method that inserts a single item into the queue and starts playing i. Return type is Pending Result and parameters are google api client media queue item int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,sink
5129,RemoteMediaPlayer_queueInsertItems,queue insert items from remote media player inserts a list of new media items into the queu. Return type is Pending Result and parameters are google api client media queue item[] int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,neither,sink,sink
5130,RemoteMediaPlayer_queueJumpToItem,queue jump to item from remote media player plays the item with item id in the queu. Return type is Pending Result and parameters are google api client int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5131,RemoteMediaPlayer_queueJumpToItem,queue jump to item from remote media player plays the item with item id in the queu. Return type is Pending Result and parameters are google api client int long j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5132,RemoteMediaPlayer_queueLoad,queue load from remote media player loads and optionally starts playback of a new queue of media item. Return type is Pending Result and parameters are google api client media queue item[] int int long j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5133,RemoteMediaPlayer_queueLoad,queue load from remote media player loads and optionally starts playback of a new queue of media item. Return type is Pending Result and parameters are google api client media queue item[] int int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5134,RemoteMediaPlayer_queueMoveItemToNewIndex,queue move item to new index from remote media player moves the item with item id to a new position in the queu. Return type is Pending Result and parameters are google api client int int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,sink,neither
5135,RemoteMediaPlayer_queueNext,queue next from remote media player jumps to the next item in the queu. Return type is Pending Result and parameters are google api client j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5136,RemoteMediaPlayer_queuePrev,queue prev from remote media player jumps to the previous item in the queu. Return type is Pending Result and parameters are google api client j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5137,RemoteMediaPlayer_queueRemoveItem,queue remove item from remote media player removes the item with item id from the queu. Return type is Pending Result and parameters are google api client int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5138,RemoteMediaPlayer_queueRemoveItems,queue remove items from remote media player removes a list of items from the queu. Return type is Pending Result and parameters are google api client int[] j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5139,RemoteMediaPlayer_queueReorderItems,queue reorder items from remote media player reorder a list of media items in the queu. Return type is Pending Result and parameters are google api client int[] int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5140,RemoteMediaPlayer_queueSetRepeatMode,queue set repeat mode from remote media player sets the repeat mode of the queu. Return type is Pending Result and parameters are google api client int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5141,RemoteMediaPlayer_queueUpdateItems,queue update items from remote media player updates properties of a subset of the existing items in the media queu. Return type is Pending Result and parameters are google api client media queue item[] j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,neither
5142,RemoteMediaPlayer_requestStatus,request status from remote media player requests updated media status information from the receive. Return type is Pending Result and parameters are google api client. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5143,RemoteMediaPlayer_seek,seek from remote media player seeks to a new position within the current media ite. Return type is Pending Result and parameters are google api client long. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,neither
5144,RemoteMediaPlayer_seek,seek from remote media player seeks to a new position within the current media ite. Return type is Pending Result and parameters are google api client long int j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,neither
5145,RemoteMediaPlayer_seek,seek from remote media player seeks to a new position within the current media ite. Return type is Pending Result and parameters are google api client long int. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,neither
5146,RemoteMediaPlayer_setActiveMediaTracks,set active media tracks from remote media player sets the active media track. Return type is Pending Result and parameters are google api client long[]. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5147,RemoteMediaPlayer_setOnMetadataUpdatedListener,set on metadata updated listener from remote media player sets the remote media player on metadata updated listener to get metadata update. Return type is void and parameters are remote media player on metadata updated listener. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5148,RemoteMediaPlayer_setOnPreloadStatusUpdatedListener,set on preload status updated listener from remote media player sets the remote media player on preload status updated listener to get status update. Return type is void and parameters are remote media player on preload status updated listener. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5149,RemoteMediaPlayer_setOnQueueStatusUpdatedListener,set on queue status updated listener from remote media player sets the remote media player on queue status updated listener to get status update. Return type is void and parameters are remote media player on queue status updated listener. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5150,RemoteMediaPlayer_setOnStatusUpdatedListener,set on status updated listener from remote media player sets the remote media player on status updated listener to get status update. Return type is void and parameters are remote media player on status updated listener. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5151,RemoteMediaPlayer_setStreamMute,set stream mute from remote media player toggles the stream mutin. Return type is Pending Result and parameters are google api client boolean j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5152,RemoteMediaPlayer_setStreamMute,set stream mute from remote media player toggles the stream mutin. Return type is Pending Result and parameters are google api client boolean. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5153,RemoteMediaPlayer_setStreamVolume,set stream volume from remote media player sets the stream volum. Return type is Pending Result and parameters are google api client double j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5154,RemoteMediaPlayer_setStreamVolume,set stream volume from remote media player sets the stream volume of the current media ite. Return type is Pending Result and parameters are google api client double. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5155,RemoteMediaPlayer_setTextTrackStyle,set text track style from remote media player sets the text track styl. Return type is Pending Result and parameters are google api client text track style. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5156,RemoteMediaPlayer_stop,stop from remote media player stops playback of the current media ite. Return type is Pending Result and parameters are google api client j s o n object. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5157,RemoteMediaPlayer_stop,stop from remote media player stops playback of the current media ite. Return type is Pending Result and parameters are google api client. this class is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5158,SessionState_equals,equals from session state . the data structure for a resume session request,neither,neither,neither,neither
5159,SessionState_getCustomData,get custom data from session state returns the customizable object for storing the stat. Return type is J S O N Object and no argument. the data structure for a resume session request,source,source,source,source
5160,SessionState_getLoadRequestData,get load request data from session state returns the load request dat. Return type is Media Load Request Data and no argument. the data structure for a resume session request,source,source,source,source
5161,SessionState_hashCode,hash code from session state . the data structure for a resume session request,source,source,neither,source
5162,SessionState_writeToParcel,write to parcel from session state . the data structure for a resume session request,sink,sink,sink,sink
5163,SessionState.Builder_build,build from session state builder builds a session stat. Return type is Session State and no argument. builder for session state,neither,neither,neither,neither
5164,SessionState.Builder_setCustomData,set custom data from session state builder sets the custom dat. Return type is Session State. Builder and parameters are j s o n object. builder for session state,sink,sink,sink,sink
5165,SessionState.Builder_setLoadRequestData,set load request data from session state builder sets the load request dat. Return type is Session State. Builder and parameters are media load request data. builder for session state,sink,sink,sink,sink
5166,TextTrackStyle_equals,equals from text track style . a class that specifies how a text track's text will be displayed on screen,neither,neither,neither,neither
5167,TextTrackStyle_fromSystemSettings,from system settings from text track style constructs a new text track style based on the system's current closed caption style setting. Return type is Text Track Style and parameters are context. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5168,TextTrackStyle_getBackgroundColor,get background color from text track style gets the text's background colo. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5169,TextTrackStyle_getCustomData,get custom data from text track style gets the custom data objec. Return type is J S O N Object and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5170,TextTrackStyle_getEdgeColor,get edge color from text track style gets the window's edge colo. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5171,TextTrackStyle_getEdgeType,get edge type from text track style gets the caption window's edge typ. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5172,TextTrackStyle_getFontFamily,get font family from text track style gets the text's font famil. Return type is String and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5173,TextTrackStyle_getFontGenericFamily,get font generic family from text track style gets the text's generic font famil. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5174,TextTrackStyle_getFontScale,get font scale from text track style gets the font scale facto. Return type is float and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5175,TextTrackStyle_getFontStyle,get font style from text track style gets the text font styl. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5176,TextTrackStyle_getForegroundColor,get foreground color from text track style gets the text's foreground colo. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5177,TextTrackStyle_getWindowColor,get window color from text track style gets the window's colo. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5178,TextTrackStyle_getWindowCornerRadius,get window corner radius from text track style gets the window corner radiu. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5179,TextTrackStyle_getWindowType,get window type from text track style gets the caption window typ. Return type is int and no argument. a class that specifies how a text track's text will be displayed on screen,source,source,source,source
5180,TextTrackStyle_hashCode,hash code from text track style . a class that specifies how a text track's text will be displayed on screen,sink,neither,sink,neither
5181,TextTrackStyle_setBackgroundColor,set background color from text track style sets the text's background colo. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5182,TextTrackStyle_setCustomData,set custom data from text track style sets the custom data objec. Return type is void and parameters are j s o n object. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5183,TextTrackStyle_setEdgeColor,set edge color from text track style sets the window's edge colo. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5184,TextTrackStyle_setEdgeType,set edge type from text track style sets the caption window's edge typ. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5185,TextTrackStyle_setFontFamily,set font family from text track style sets the text's font famil. Return type is void and parameters are string. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5186,TextTrackStyle_setFontGenericFamily,set font generic family from text track style sets the text's generic font famil. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5187,TextTrackStyle_setFontScale,set font scale from text track style sets the font scale facto. Return type is void and parameters are float. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5188,TextTrackStyle_setFontStyle,set font style from text track style sets the text font styl. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5189,TextTrackStyle_setForegroundColor,set foreground color from text track style sets the text's foreground colo. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5190,TextTrackStyle_setWindowColor,set window color from text track style sets the window's colo. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5191,TextTrackStyle_setWindowCornerRadius,"set window corner radius from text track style if the window type is w i n d o w_ t y p e_ r o u n d e d, sets the radius for the window's corner. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen",sink,sink,sink,sink
5192,TextTrackStyle_setWindowType,set window type from text track style sets the window typ. Return type is void and parameters are int. a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5193,TextTrackStyle_writeToParcel,write to parcel from text track style . a class that specifies how a text track's text will be displayed on screen,sink,sink,sink,sink
5194,VastAdsRequest_equals,equals from vast ads request . a class that represents configuration of a vast ad request,neither,neither,neither,neither
5195,VastAdsRequest_fromJson,from json from vast ads request parses a json object sent by the receive. Return type is Vast Ads Request and parameters are j s o n object. a class that represents configuration of a vast ad request,neither,neither,neither,neither
5196,VastAdsRequest_getAdTagUrl,"get ad tag url from vast ads request returns the url for the vast file, used to retrieve and identify the a. Return type is String and no argument. a class that represents configuration of a vast ad request",source,source,source,source
5197,VastAdsRequest_getAdsResponse,get ads response from vast ads request returns the vast xml document that can be used as the ads response instead of making a request via an ad tag ur. Return type is String and no argument. a class that represents configuration of a vast ad request,source,source,source,source
5198,VastAdsRequest_hashCode,hash code from vast ads request . a class that represents configuration of a vast ad request,neither,neither,neither,neither
5199,VastAdsRequest_writeToParcel,write to parcel from vast ads request . a class that represents configuration of a vast ad request,sink,sink,sink,sink
5200,VastAdsRequest.Builder_build,build from vast ads request builder . a builder for vast ads reques,neither,neither,neither,neither
5201,VastAdsRequest.Builder_setAdTagUrl,"set ad tag url from vast ads request builder sets the url for the vast file, used to retrieve and identify the a. Return type is Vast Ads Request. Builder and parameters are string. a builder for vast ads reques",sink,sink,sink,sink
5202,VastAdsRequest.Builder_setAdsResponse,set ads response from vast ads request builder sets the vast xml document that can be used as the ads response instead of making a request via an ad tag ur. Return type is Vast Ads Request. Builder and parameters are string. a builder for vast ads reques,sink,sink,sink,sink
5203,VideoInfo_equals,equals from video info . a class that holds video properties of the current media session,neither,neither,neither,neither
5204,VideoInfo_getHdrType,get hdr type from video info returns the hdr type of the current media sessio. Return type is int and no argument. a class that holds video properties of the current media session,source,source,source,source
5205,VideoInfo_getHeight,get height from video info returns the width of the height in pixel. Return type is int and no argument. a class that holds video properties of the current media session,source,source,source,source
5206,VideoInfo_getWidth,get width from video info returns the width of the video in pixel. Return type is int and no argument. a class that holds video properties of the current media session,source,source,source,source
5207,VideoInfo_hashCode,hash code from video info . a class that holds video properties of the current media session,source,source,neither,neither
5208,VideoInfo_writeToParcel,write to parcel from video info . a class that holds video properties of the current media session,sink,sink,sink,sink
5209,VideoInfo.Builder_build,build from video info builder builds a video inf. Return type is Video Info and no argument. builder for video info,neither,neither,neither,neither
5210,VideoInfo.Builder_setHdrType,set hdr type from video info builder sets the hdr type of the current media sessio. Return type is Video Info. Builder and parameters are int. builder for video info,sink,sink,sink,sink
5211,VideoInfo.Builder_setHeight,set height from video info builder sets the height of the video in pixel. Return type is Video Info. Builder and parameters are int. builder for video info,sink,sink,sink,sink
5212,VideoInfo.Builder_setWidth,set width from video info builder sets the width of the video in pixel. Return type is Video Info. Builder and parameters are int. builder for video info,sink,sink,sink,sink
5213,Cast.ApplicationConnectionResult_getApplicationMetadata,get application metadata from cast application connection result returns the current application's metadat. Return type is Application Metadata and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5214,Cast.ApplicationConnectionResult_getApplicationStatus,get application status from cast application connection result returns the current application's human-readable statu. Return type is String and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5215,Cast.ApplicationConnectionResult_getSessionId,get session id from cast application connection result returns the current application's unique session id as an opaque strin. Return type is String and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5216,Cast.ApplicationConnectionResult_getWasLaunched,get was launched from cast application connection result returns whether the application was launched as the result of this call of cast cast apilaunch applicati. Return type is  boolean and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5217,Cast.CastApi_getActiveInputState,get active input state from cast cast api returns the device's active-input stat. Return type is  int and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5218,Cast.CastApi_getApplicationMetadata,"get application metadata from cast cast api returns the metadata for the currently running receiver application, if an. Return type is Application Metadata and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5219,Cast.CastApi_getApplicationStatus,"get application status from cast cast api returns the current receiver application status, if an. Return type is String and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5220,Cast.CastApi_getStandbyState,get standby state from cast cast api returns the device's standby stat. Return type is  int and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5221,Cast.CastApi_getVolume,"get volume from cast cast api returns the device's volume, in the range [00, 10. Return type is  double and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5222,Cast.CastApi_isMute,is mute from cast cast api returns the device's mute stat. Return type is  boolean and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5223,Cast.CastApi_joinApplication,join application from cast cast api join. Return type is Pending Result and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,neither,sink
5224,Cast.CastApi_joinApplication,join application from cast cast api join. Return type is Pending Result and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,neither,sink
5225,Cast.CastApi_joinApplication,join application from cast cast api join. Return type is Pending Result and parameters are google api client string string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,neither,sink
5226,Cast.CastApi_launchApplication,launch application from cast cast api deprecate. Return type is Pending Result and parameters are google api client string boolean. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5227,Cast.CastApi_launchApplication,launch application from cast cast api launches an application on the receive. Return type is Pending Result and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5228,Cast.CastApi_launchApplication,launch application from cast cast api launches an application on the receive. Return type is Pending Result and parameters are google api client string launch options. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5229,Cast.CastApi_leaveApplication,leave application from cast cast api leave. Return type is Pending Result and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5230,Cast.CastApi_removeMessageReceivedCallbacks,remove message received callbacks from cast cast api removes a cast message received callback from this controller for a given namespac. Return type is  void and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5231,Cast.CastApi_requestStatus,request status from cast cast api requests the receiver's current statu. Return type is  void and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5232,Cast.CastApi_sendMessage,send message from cast cast api sends a message to the currently connected applicatio. Return type is Pending Result and parameters are google api client string string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5233,Cast.CastApi_setMessageReceivedCallbacks,set message received callbacks from cast cast api sets a new cast message received callback listener on this controller for a given namespac. Return type is  void and parameters are google api client string message received callback. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5234,Cast.CastApi_setMute,set mute from cast cast api mutes or unmutes the device's audi. Return type is  void and parameters are google api client boolean. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5235,Cast.CastApi_setVolume,set volume from cast cast api sets the device volum. Return type is  void and parameters are google api client double. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5236,Cast.CastApi_stopApplication,"stop application from cast cast api stops the currently running receiver application, optionally doing so only if its session id matches the supplied on. Return type is Pending Result and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",neither,neither,neither,neither
5237,Cast.CastApi_stopApplication,stop application from cast cast api stops any running receiver applicati. Return type is Pending Result and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5238,MessageReceivedCallback_onMessageReceived,on message received from message received callback called when a message is received from a given cast devic. Return type is  void and parameters are cast device string string. the interface to process received messages from a cast device,neither,neither,neither,neither
5239,CastRemoteDisplay.CastRemoteDisplaySessionCallbacks_onRemoteDisplayEnded,on remote display ended from cast remote display cast remote display session callbacks called when the remote display session end. Return type is  void and parameters are status. this interface is deprecated  pass a pending intent in cast remote display client start remote display to get notified when the remote display session is ended,neither,neither,neither,neither
5240,CastRemoteDisplay.CastRemoteDisplaySessionResult_getPresentationDisplay,get presentation display from cast remote display cast remote display session result returns the virtual display of the current remote display sessio. Return type is Display and no argument. this interface is deprecated  use the cast remote display client via cast remote display get client instead,source,source,source,source
5241,CastRemoteDisplayApi_startRemoteDisplay,start remote display from cast remote display api the low level api for starting a cast remote display sessio. Return type is Pending Result and parameters are google api client string. this interface is deprecated  the remote display feature is deprecated and will be removed in a future release,sink,sink,sink,neither
5242,CastRemoteDisplayApi_stopRemoteDisplay,stop remote display from cast remote display api the low level api for stopping a cast remote display sessio. Return type is Pending Result and parameters are google api client. this interface is deprecated  the remote display feature is deprecated and will be removed in a future release,neither,neither,neither,neither
5243,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplayMuteStateChanged,on remote display mute state changed from cast remote display local service callbacks called when the cast remote display session's audio mute state is change. Return type is  void and parameters are boolean. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5244,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplaySessionEnded,on remote display session ended from cast remote display local service callbacks called when the cast remote display session has been ende. Return type is  void and parameters are cast remote display local service. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5245,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplaySessionError,on remote display session error from cast remote display local service callbacks called when the cast remote display session could not be successfully create. Return type is  void and parameters are status. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5246,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplaySessionStarted,on remote display session started from cast remote display local service callbacks called when the cast remote display session has been successfully create. Return type is  void and parameters are cast remote display local service. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5247,CastRemoteDisplayLocalService.Callbacks_onServiceCreated,on service created from cast remote display local service callbacks called when the local service has been create. Return type is  void and parameters are cast remote display local service. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5248,RemoteMediaPlayer.MediaChannelResult_getCustomData,"get custom data from remote media player media channel result custom data received from the receiver application, when a media command fail. Return type is J S O N Object and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5249,RemoteMediaPlayer.OnMetadataUpdatedListener_onMetadataUpdated,on metadata updated from remote media player on metadata updated listener called when updated media metadata is receive. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5250,RemoteMediaPlayer.OnPreloadStatusUpdatedListener_onPreloadStatusUpdated,"on preload status updated from remote media player on preload status updated listener called when updated player queue preload status information is received, e. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",neither,neither,neither,neither
5251,RemoteMediaPlayer.OnQueueStatusUpdatedListener_onQueueStatusUpdated,on queue status updated from remote media player on queue status updated listener called when updated player queue status information is receive. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5252,RemoteMediaPlayer.OnStatusUpdatedListener_onStatusUpdated,on status updated from remote media player on status updated listener called when updated player status information is receive. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5253,RequestData_getCustomData,get custom data from request data returns the custom dat. Return type is J S O N Object and no argument. data structure for media command requests,source,source,source,source
5254,AdBreakClipInfo.Builder_build,build from ad break clip info builder . a builder for ad break clip info,neither,neither,neither,neither
5255,AdBreakClipInfo.Builder_setClickThroughUrl,set click through url from ad break clip info builder sets this clip's click through ur. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5256,AdBreakClipInfo.Builder_setContentId,set content id from ad break clip info builder sets this clip's content i. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5257,AdBreakClipInfo.Builder_setContentUrl,set content url from ad break clip info builder sets this clip's content ur. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5258,AdBreakClipInfo.Builder_setCustomDataJsonString,set custom data json string from ad break clip info builder sets this clip's custom data as a strin. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5259,AdBreakClipInfo.Builder_setDurationInMs,set duration in ms from ad break clip info builder sets this clip's duration in millisecond. Return type is Ad Break Clip Info. Builder and parameters are long. a builder for ad break clip info,sink,sink,sink,sink
5260,AdBreakClipInfo.Builder_setHlsSegmentFormat,"set hls segment format from ad break clip info builder sets hls segment format of the ad break clip, or empty string if not se. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info",sink,sink,sink,sink
5261,AdBreakClipInfo.Builder_setImageUrl,set image url from ad break clip info builder sets this clip's image ur. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5262,AdBreakClipInfo.Builder_setMimeType,set mime type from ad break clip info builder sets this clip's mime typ. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5263,AdBreakClipInfo.Builder_setTitle,set title from ad break clip info builder sets this clip's titl. Return type is Ad Break Clip Info. Builder and parameters are string. a builder for ad break clip info,sink,sink,sink,sink
5264,AdBreakClipInfo.Builder_setVastAdsRequest,"set vast ads request from ad break clip info builder sets the vast ads request of a vast ad break clip, representing the vast ad request configuratio. Return type is Ad Break Clip Info. Builder and parameters are vast ads request. a builder for ad break clip info",sink,sink,sink,sink
5265,AdBreakClipInfo.Builder_setWhenSkippableInMs,set when skippable in ms from ad break clip info builder sets the time in milliseconds when this break clip becomes skippabl. Return type is Ad Break Clip Info. Builder and parameters are long. a builder for ad break clip info,sink,sink,sink,sink
5266,AdBreakInfo.Builder_build,build from ad break info builder builds an ad break info instanc. Return type is Ad Break Info and no argument. a builder for ad break info,neither,neither,neither,neither
5267,AdBreakInfo.Builder_setBreakClipIds,set break clip ids from ad break info builder set an unmodifiable list of ad break clip i ds in this brea. Return type is Ad Break Info. Builder and parameters are string[]. a builder for ad break info,sink,sink,sink,sink
5268,AdBreakInfo.Builder_setDurationInMs,set duration in ms from ad break info builder sets this break content’s duration in millisecond. Return type is Ad Break Info. Builder and parameters are long. a builder for ad break info,sink,sink,sink,sink
5269,AdBreakInfo.Builder_setId,set id from ad break info builder sets the ad break's i. Return type is Ad Break Info. Builder and parameters are string. a builder for ad break info,sink,sink,sink,sink
5270,AdBreakInfo.Builder_setIsEmbedded,set is embedded from ad break info builder set to true if this break doesn't have a url and is part of the conten. Return type is Ad Break Info. Builder and parameters are boolean. a builder for ad break info,sink,sink,sink,sink
5271,AdBreakInfo.Builder_setIsWatched,set is watched from ad break info builder set to true if this break has been watche. Return type is Ad Break Info. Builder and parameters are boolean. a builder for ad break info,sink,sink,sink,sink
5272,AdBreakStatus.Builder_build,build from ad break status builder builds an ad break statu. Return type is Ad Break Status and no argument. builder class for ad break status,neither,neither,neither,neither
5273,AdBreakStatus.Builder_setBreakClipId,set break clip id from ad break status builder sets the id of the current ad break cli. Return type is Ad Break Status. Builder and parameters are string. builder class for ad break status,sink,sink,sink,sink
5274,AdBreakStatus.Builder_setBreakId,set break id from ad break status builder sets the id of the current ad brea. Return type is Ad Break Status. Builder and parameters are string. builder class for ad break status,sink,sink,sink,sink
5275,AdBreakStatus.Builder_setCurrentBreakClipTimeInMs,"set current break clip time in ms from ad break status builder sets the current position of the ad break clip, in milliseconds, from the start of the ad break cli. Return type is Ad Break Status. Builder and parameters are long. builder class for ad break status",sink,sink,sink,sink
5276,AdBreakStatus.Builder_setCurrentBreakTimeInMs,"set current break time in ms from ad break status builder sets the current position of the ad break, in milliseconds, from the start of the ad brea. Return type is Ad Break Status. Builder and parameters are long. builder class for ad break status",sink,sink,sink,sink
5277,AdBreakStatus.Builder_setWhenSkippableInMs,set when skippable in ms from ad break status builder sets the number of milliseconds after the ad break clip starts when the user can skip the ad break cli. Return type is Ad Break Status. Builder and parameters are long. builder class for ad break status,sink,sink,sink,sink
5278,Cast.ApplicationConnectionResult_getApplicationMetadata,get application metadata from cast application connection result returns the current application's metadat. Return type is Application Metadata and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5279,Cast.ApplicationConnectionResult_getApplicationStatus,get application status from cast application connection result returns the current application's human-readable statu. Return type is String and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5280,Cast.ApplicationConnectionResult_getSessionId,get session id from cast application connection result returns the current application's unique session id as an opaque strin. Return type is String and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5281,Cast.ApplicationConnectionResult_getWasLaunched,get was launched from cast application connection result returns whether the application was launched as the result of this call of cast cast apilaunch applicati. Return type is  boolean and no argument. the result of a call to one of the cast cast api launch application or cast cast api join application methods,source,source,source,source
5282,Cast.CastApi_getActiveInputState,get active input state from cast cast api returns the device's active-input stat. Return type is  int and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5283,Cast.CastApi_getApplicationMetadata,"get application metadata from cast cast api returns the metadata for the currently running receiver application, if an. Return type is Application Metadata and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5284,Cast.CastApi_getApplicationStatus,"get application status from cast cast api returns the current receiver application status, if an. Return type is String and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5285,Cast.CastApi_getStandbyState,get standby state from cast cast api returns the device's standby stat. Return type is  int and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5286,Cast.CastApi_getVolume,"get volume from cast cast api returns the device's volume, in the range [00, 10. Return type is  double and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5287,Cast.CastApi_isMute,is mute from cast cast api returns the device's mute stat. Return type is  boolean and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5288,Cast.CastApi_joinApplication,join application from cast cast api join. Return type is Pending Result and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,neither,sink
5289,Cast.CastApi_joinApplication,join application from cast cast api join. Return type is Pending Result and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,neither,sink
5290,Cast.CastApi_joinApplication,join application from cast cast api join. Return type is Pending Result and parameters are google api client string string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,neither,sink
5291,Cast.CastApi_launchApplication,launch application from cast cast api deprecate. Return type is Pending Result and parameters are google api client string boolean. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5292,Cast.CastApi_launchApplication,launch application from cast cast api launches an application on the receive. Return type is Pending Result and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5293,Cast.CastApi_launchApplication,launch application from cast cast api launches an application on the receive. Return type is Pending Result and parameters are google api client string launch options. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5294,Cast.CastApi_leaveApplication,leave application from cast cast api leave. Return type is Pending Result and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5295,Cast.CastApi_removeMessageReceivedCallbacks,remove message received callbacks from cast cast api removes a cast message received callback from this controller for a given namespac. Return type is  void and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5296,Cast.CastApi_requestStatus,request status from cast cast api requests the receiver's current statu. Return type is  void and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,source,source,source,source
5297,Cast.CastApi_sendMessage,send message from cast cast api sends a message to the currently connected applicatio. Return type is Pending Result and parameters are google api client string string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5298,Cast.CastApi_setMessageReceivedCallbacks,set message received callbacks from cast cast api sets a new cast message received callback listener on this controller for a given namespac. Return type is  void and parameters are google api client string message received callback. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5299,Cast.CastApi_setMute,set mute from cast cast api mutes or unmutes the device's audi. Return type is  void and parameters are google api client boolean. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5300,Cast.CastApi_setVolume,set volume from cast cast api sets the device volum. Return type is  void and parameters are google api client double. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,sink,sink,sink,sink
5301,Cast.CastApi_stopApplication,"stop application from cast cast api stops the currently running receiver application, optionally doing so only if its session id matches the supplied on. Return type is Pending Result and parameters are google api client string. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",neither,neither,neither,neither
5302,Cast.CastApi_stopApplication,stop application from cast cast api stops any running receiver applicati. Return type is Pending Result and parameters are google api client. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5303,Cast.CastOptions_builder,builder from cast cast options deprecate. Return type is Cast. Cast Options. Builder and parameters are cast device cast listener. a p i configuration parameters for cast,neither,neither,neither,neither
5304,Cast.CastOptions_equals,equals from cast cast options . a p i configuration parameters for cast,neither,neither,neither,neither
5305,Cast.CastOptions_hashCode,hash code from cast cast options . a p i configuration parameters for cast,neither,neither,neither,neither
5306,Cast.Listener_onActiveInputStateChanged,on active input state changed from cast listener called when the active-input state of the device has change. Return type is void and parameters are int. the list of cast callbacks,neither,neither,neither,neither
5307,Cast.Listener_onApplicationDisconnected,"on application disconnected from cast listener called when the connection to the receiver application has been lost, such as when another client has launched a new applicatio. Return type is void and parameters are int. the list of cast callbacks",neither,neither,neither,neither
5308,Cast.Listener_onApplicationMetadataChanged,on application metadata changed from cast listener called when the application metadata of the currently running receiver application has change. Return type is void and parameters are application metadata. the list of cast callbacks,neither,neither,neither,neither
5309,Cast.Listener_onApplicationStatusChanged,on application status changed from cast listener called when the status of the connected application has change. Return type is void and no argument. the list of cast callbacks,neither,neither,neither,neither
5310,Cast.Listener_onStandbyStateChanged,on standby state changed from cast listener called when the standby state of the device has change. Return type is void and parameters are int. the list of cast callbacks,neither,neither,neither,neither
5311,Cast.Listener_onVolumeChanged,on volume changed from cast listener called when the device's volume or mute state has change. Return type is void and no argument. the list of cast callbacks,neither,neither,neither,neither
5312,Cast.CastOptions.Builder_build,build from cast cast options builder builds a cast options with the arguments supplied to this builde. Return type is Cast. Cast Options and no argument. a builder to create an instance of cast cast options to set api configuration parameters for cast,sink,sink,sink,neither
5313,Cast.CastOptions.Builder_setVerboseLoggingEnabled,set verbose logging enabled from cast cast options builder enables or disables verbose logging for this cast sessio. Return type is Cast. Cast Options. Builder and parameters are boolean. a builder to create an instance of cast cast options to set api configuration parameters for cast,sink,sink,sink,sink
5314,CastRemoteDisplay.CastRemoteDisplaySessionCallbacks_onRemoteDisplayEnded,on remote display ended from cast remote display cast remote display session callbacks called when the remote display session end. Return type is  void and parameters are status. this interface is deprecated  pass a pending intent in cast remote display client start remote display to get notified when the remote display session is ended,neither,neither,neither,neither
5315,CastRemoteDisplay.CastRemoteDisplaySessionResult_getPresentationDisplay,get presentation display from cast remote display cast remote display session result returns the virtual display of the current remote display sessio. Return type is Display and no argument. this interface is deprecated  use the cast remote display client via cast remote display get client instead,source,source,source,source
5316,CastRemoteDisplay.CastRemoteDisplayOptions.Builder_build,build from cast remote display cast remote display options builder builds a cast options with the arguments supplied to this builde. Return type is Cast Remote Display. Cast Remote Display Options and no argument. this class is deprecated  use the cast remote display client via cast remote display get client instead,neither,neither,sink,neither
5317,CastRemoteDisplay.CastRemoteDisplayOptions.Builder_setConfigPreset,set config preset from cast remote display cast remote display options builder set the remote display configuration prese. Return type is Cast Remote Display. Cast Remote Display Options. Builder and parameters are int. this class is deprecated  use the cast remote display client via cast remote display get client instead,sink,sink,sink,sink
5318,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplayMuteStateChanged,on remote display mute state changed from cast remote display local service callbacks called when the cast remote display session's audio mute state is change. Return type is  void and parameters are boolean. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5319,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplaySessionEnded,on remote display session ended from cast remote display local service callbacks called when the cast remote display session has been ende. Return type is  void and parameters are cast remote display local service. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5320,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplaySessionError,on remote display session error from cast remote display local service callbacks called when the cast remote display session could not be successfully create. Return type is  void and parameters are status. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5321,CastRemoteDisplayLocalService.Callbacks_onRemoteDisplaySessionStarted,on remote display session started from cast remote display local service callbacks called when the cast remote display session has been successfully create. Return type is  void and parameters are cast remote display local service. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5322,CastRemoteDisplayLocalService.Callbacks_onServiceCreated,on service created from cast remote display local service callbacks called when the local service has been create. Return type is  void and parameters are cast remote display local service. callbacks for the cast remote display session initiated using cast remote display local service,neither,neither,neither,neither
5323,CastRemoteDisplayLocalService.Options_getConfigPreset,get config preset from cast remote display local service options get the remote display configuration prese. Return type is int and no argument. options for a remote display session,source,source,source,source
5324,CastRemoteDisplayLocalService.Options_setConfigPreset,set config preset from cast remote display local service options set the remote display configuration prese. Return type is void and parameters are int. options for a remote display session,sink,sink,sink,sink
5325,CastRemoteDisplayLocalService.NotificationSettings.Builder_build,build from cast remote display local service notification settings builder builds and returns the cast remote display local service notification settings objec. Return type is Cast Remote Display Local Service. Notification Settings and no argument. builder class for the cast remote display local service notification settings object,neither,neither,sink,neither
5326,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotification,set notification from cast remote display local service notification settings builder sets a custom notificatio. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are notification. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5327,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationPendingIntent,set notification pending intent from cast remote display local service notification settings builder sets a pending intent that will be executed when the default notification is clicke. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are pending intent. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5328,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationText,set notification text from cast remote display local service notification settings builder the default notification tex. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are string. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5329,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationTitle,set notification title from cast remote display local service notification settings builder the default notification titl. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are string. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5330,CredentialsData.Builder_build,build from credentials data builder builds a credentials dat. Return type is Credentials Data and no argument. builder for credentials data,neither,neither,neither,neither
5331,CredentialsData.Builder_setCredentials,set credentials from credentials data builder sets the credential. Return type is Credentials Data. Builder and parameters are string. builder for credentials data,sink,sink,sink,sink
5332,CredentialsData.Builder_setCredentialsType,set credentials type from credentials data builder sets the credentials typ. Return type is Credentials Data. Builder and parameters are string. builder for credentials data,sink,sink,sink,sink
5333,LaunchOptions.Builder_build,build from launch options builder builds and returns the launch options objec. Return type is Launch Options and no argument. a builder for launch options objects,neither,neither,neither,neither
5334,LaunchOptions.Builder_setAndroidReceiverCompatible,set android receiver compatible from launch options builder sets true if the sender app supports casting to an android tv ap. Return type is Launch Options. Builder and parameters are boolean. a builder for launch options objects,sink,sink,sink,sink
5335,LaunchOptions.Builder_setCredentialsData,set credentials data from launch options builder sets the credentials dat. Return type is Launch Options. Builder and parameters are credentials data. a builder for launch options objects,sink,sink,sink,sink
5336,LaunchOptions.Builder_setLocale,set locale from launch options builder sets the desired application local. Return type is Launch Options. Builder and parameters are locale. a builder for launch options objects,sink,sink,sink,sink
5337,LaunchOptions.Builder_setRelaunchIfRunning,"set relaunch if running from launch options builder sets the ""relaunch if running"" fla. Return type is Launch Options. Builder and parameters are boolean. a builder for launch options objects",sink,sink,sink,sink
5338,MediaError.Builder_build,build from media error builder build a media erro. Return type is Media Error and no argument. builder for media error,neither,neither,neither,neither
5339,MediaError.Builder_setCustomData,set custom data from media error builder sets the custom dat. Return type is Media Error. Builder and parameters are j s o n object. builder for media error,sink,sink,sink,sink
5340,MediaError.Builder_setDetailedErrorCode,set detailed error code from media error builder sets the detailed error cod. Return type is Media Error. Builder and parameters are integer. builder for media error,sink,sink,sink,sink
5341,MediaError.Builder_setReason,set reason from media error builder sets the error reaso. Return type is Media Error. Builder and parameters are string. builder for media error,sink,sink,sink,sink
5342,MediaError.Builder_setType,set type from media error builder sets the type of the media erro. Return type is Media Error. Builder and parameters are string. builder for media error,sink,sink,sink,sink
5343,MediaInfo.Builder_build,build from media info builder builds and returns the media info objec. Return type is Media Info and no argument. a builder for media info objects,neither,neither,neither,neither
5344,MediaInfo.Builder_setAdBreakClips,"set ad break clips from media info builder sets the list of ad break clip infos, each containing the content of a specific a. Return type is Media Info. Builder and parameters are list. a builder for media info objects",sink,sink,sink,sink
5345,MediaInfo.Builder_setAdBreaks,"set ad breaks from media info builder sets the list of ad break info, which describes where each ad break is located and what ad break clip infos each break include. Return type is Media Info. Builder and parameters are list. a builder for media info objects",sink,sink,sink,sink
5346,MediaInfo.Builder_setAtvEntity,set atv entity from media info builder sets the alternate entity to be used for loading the item on android t. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
5347,MediaInfo.Builder_setContentType,set content type from media info builder sets the conten. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
5348,MediaInfo.Builder_setContentUrl,set content url from media info builder sets the url of the content to be playe. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
5349,MediaInfo.Builder_setCustomData,set custom data from media info builder sets the custom application-specific dat. Return type is Media Info. Builder and parameters are j s o n object. a builder for media info objects,sink,sink,sink,sink
5350,MediaInfo.Builder_setEntity,"set entity from media info builder sets the entity, an application-specific deep link for loading the medi. Return type is Media Info. Builder and parameters are string. a builder for media info objects",sink,sink,sink,sink
5351,MediaInfo.Builder_setHlsSegmentFormat,set hls segment format from media info builder sets the hls segment forma. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
5352,MediaInfo.Builder_setHlsVideoSegmentFormat,set hls video segment format from media info builder sets the hls video segment forma. Return type is Media Info. Builder and parameters are string. a builder for media info objects,sink,sink,sink,sink
5353,MediaInfo.Builder_setMediaTracks,set media tracks from media info builder sets the media track. Return type is Media Info. Builder and parameters are list. a builder for media info objects,sink,sink,sink,sink
5354,MediaInfo.Builder_setMetadata,set metadata from media info builder sets the media item metadat. Return type is Media Info. Builder and parameters are media metadata. a builder for media info objects,sink,sink,sink,sink
5355,MediaInfo.Builder_setStreamDuration,"set stream duration from media info builder sets the stream duration, in millisecond. Return type is Media Info. Builder and parameters are long. a builder for media info objects",sink,sink,sink,sink
5356,MediaInfo.Builder_setStreamType,set stream type from media info builder sets the stream type; one of the s t r e a m_ t y p e_ constant. Return type is Media Info. Builder and parameters are int. a builder for media info objects,sink,sink,sink,sink
5357,MediaInfo.Builder_setTextTrackStyle,set text track style from media info builder sets the text track styl. Return type is Media Info. Builder and parameters are text track style. a builder for media info objects,sink,sink,sink,sink
5358,MediaInfo.Builder_setVmapAdsRequest,set vmap ads request from media info builder v m a p is a collection of vast ad. Return type is Media Info. Builder and parameters are vast ads request. a builder for media info objects,sink,sink,sink,sink
5359,MediaLiveSeekableRange.Builder_build,build from media live seekable range builder builds a media live seekable rang. Return type is Media Live Seekable Range and no argument. builder for media live seekable range,neither,neither,neither,neither
5360,MediaLiveSeekableRange.Builder_setEndTime,set end time from media live seekable range builder sets the end time in millisecond. Return type is Media Live Seekable Range. Builder and parameters are long. builder for media live seekable range,sink,sink,sink,sink
5361,MediaLiveSeekableRange.Builder_setIsLiveDone,set is live done from media live seekable range builder sets whether the live stream is don. Return type is Media Live Seekable Range. Builder and parameters are boolean. builder for media live seekable range,sink,sink,sink,sink
5362,MediaLiveSeekableRange.Builder_setIsMovingWindow,set is moving window from media live seekable range builder sets whether the seekable range is a moving windo. Return type is Media Live Seekable Range. Builder and parameters are boolean. builder for media live seekable range,sink,sink,sink,sink
5363,MediaLiveSeekableRange.Builder_setStartTime,set start time from media live seekable range builder sets the start time in millisecond. Return type is Media Live Seekable Range. Builder and parameters are long. builder for media live seekable range,sink,sink,sink,sink
5364,MediaLoadOptions.Builder_build,build from media load options builder builds a media load options objec. Return type is Media Load Options and no argument. builder class for media load options,neither,neither,neither,neither
5365,MediaLoadOptions.Builder_setActiveTrackIds,set active track ids from media load options builder sets the array of the active track. Return type is Media Load Options. Builder and parameters are long[]. builder class for media load options,sink,sink,sink,sink
5366,MediaLoadOptions.Builder_setAutoplay,set autoplay from media load options builder sets the value of whether playback should start immediatel. Return type is Media Load Options. Builder and parameters are boolean. builder class for media load options,sink,sink,sink,sink
5367,MediaLoadOptions.Builder_setCredentials,set credentials from media load options builder sets the user credentials to pass along with the load request to the receive. Return type is Media Load Options. Builder and parameters are string. builder class for media load options,sink,sink,sink,sink
5368,MediaLoadOptions.Builder_setCredentialsType,set credentials type from media load options builder sets the user credentials type to pass along with the load request to the receive. Return type is Media Load Options. Builder and parameters are string. builder class for media load options,sink,sink,sink,sink
5369,MediaLoadOptions.Builder_setCustomData,set custom data from media load options builder sets the custom application-specific data to pass along with the load reques. Return type is Media Load Options. Builder and parameters are j s o n object. builder class for media load options,sink,sink,sink,sink
5370,MediaLoadOptions.Builder_setPlayPosition,"set play position from media load options builder sets the initial playback position, in milliseconds from the beginning of the strea. Return type is Media Load Options. Builder and parameters are long. builder class for media load options",sink,sink,sink,sink
5371,MediaLoadOptions.Builder_setPlaybackRate,"set playback rate from media load options builder sets the playback rate, as the multiplier of the normal playback rat. Return type is Media Load Options. Builder and parameters are double. builder class for media load options",sink,sink,sink,sink
5372,MediaLoadRequestData.Builder_build,build from media load request data builder builds a media load request data objec. Return type is Media Load Request Data and no argument. builder class for media load request data,neither,neither,neither,neither
5373,MediaLoadRequestData.Builder_setActiveTrackIds,set active track ids from media load request data builder sets the array of the active track. Return type is Media Load Request Data. Builder and parameters are long[]. builder class for media load request data,sink,sink,sink,sink
5374,MediaLoadRequestData.Builder_setAtvCredentials,set atv credentials from media load request data builder sets the alternate android tv credentials in the load reques. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
5375,MediaLoadRequestData.Builder_setAtvCredentialsType,set atv credentials type from media load request data builder sets the alternate android tv credentials type in the load reques. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
5376,MediaLoadRequestData.Builder_setAutoplay,set autoplay from media load request data builder sets the value of whether playback should start immediatel. Return type is Media Load Request Data. Builder and parameters are boolean. builder class for media load request data,sink,sink,sink,sink
5377,MediaLoadRequestData.Builder_setCredentials,set credentials from media load request data builder sets the user credentials to pass along with the load request to the receive. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
5378,MediaLoadRequestData.Builder_setCredentialsType,set credentials type from media load request data builder sets the user credentials type to pass along with the load request to the receive. Return type is Media Load Request Data. Builder and parameters are string. builder class for media load request data,sink,sink,sink,sink
5379,MediaLoadRequestData.Builder_setCurrentTime,"set current time from media load request data builder sets the initial playback position, in milliseconds from the beginning of the strea. Return type is Media Load Request Data. Builder and parameters are long. builder class for media load request data",sink,sink,sink,sink
5380,MediaLoadRequestData.Builder_setCustomData,set custom data from media load request data builder sets the custom application-specific data to pass along with the load reques. Return type is Media Load Request Data. Builder and parameters are j s o n object. builder class for media load request data,sink,sink,sink,sink
5381,MediaLoadRequestData.Builder_setMediaInfo,set media info from media load request data builder sets the media info of the load reques. Return type is Media Load Request Data. Builder and parameters are media info. builder class for media load request data,sink,sink,sink,sink
5382,MediaLoadRequestData.Builder_setPlaybackRate,"set playback rate from media load request data builder sets the playback rate, as the multiplier of the normal playback rat. Return type is Media Load Request Data. Builder and parameters are double. builder class for media load request data",sink,sink,sink,sink
5383,MediaLoadRequestData.Builder_setQueueData,set queue data from media load request data builder sets the media queue data of the load reques. Return type is Media Load Request Data. Builder and parameters are media queue data. builder class for media load request data,sink,sink,sink,sink
5384,MediaQueueContainerMetadata.Builder_build,build from media queue container metadata builder builds a media queue container metadata from the builde. Return type is Media Queue Container Metadata and no argument. builder class for constructing a media queue container metadata,neither,neither,neither,neither
5385,MediaQueueContainerMetadata.Builder_setContainerDuration,set container duration from media queue container metadata builder sets the total playback time for the containe. Return type is Media Queue Container Metadata. Builder and parameters are double. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5386,MediaQueueContainerMetadata.Builder_setContainerImages,set container images from media queue container metadata builder sets the images associated with the queu. Return type is Media Queue Container Metadata. Builder and parameters are list. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5387,MediaQueueContainerMetadata.Builder_setContainerType,set container type from media queue container metadata builder sets the container typ. Return type is Media Queue Container Metadata. Builder and parameters are int. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5388,MediaQueueContainerMetadata.Builder_setSections,set sections from media queue container metadata builder sets the sections of the media strea. Return type is Media Queue Container Metadata. Builder and parameters are list. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5389,MediaQueueContainerMetadata.Builder_setTitle,set title from media queue container metadata builder sets the container titl. Return type is Media Queue Container Metadata. Builder and parameters are string. builder class for constructing a media queue container metadata,sink,sink,sink,sink
5390,MediaQueueData.Builder_build,build from media queue data builder builds a media queue data from the builde. Return type is Media Queue Data and no argument. builder class for constructing a media queue data,neither,neither,neither,neither
5391,MediaQueueData.Builder_setContainerMetadata,"set container metadata from media queue data builder sets the additional description for the queue, including an optional list of media sections metadata, images, et. Return type is Media Queue Data. Builder and parameters are media queue container metadata. builder class for constructing a media queue data",sink,sink,sink,sink
5392,MediaQueueData.Builder_setEntity,set entity from media queue data builder sets the queue deep lin. Return type is Media Queue Data. Builder and parameters are string. builder class for constructing a media queue data,sink,sink,sink,sink
5393,MediaQueueData.Builder_setItems,set items from media queue data builder sets the list of queue item. Return type is Media Queue Data. Builder and parameters are list. builder class for constructing a media queue data,sink,sink,sink,sink
5394,MediaQueueData.Builder_setName,set name from media queue data builder sets the display name for the queu. Return type is Media Queue Data. Builder and parameters are string. builder class for constructing a media queue data,sink,sink,sink,sink
5395,MediaQueueData.Builder_setQueueId,set queue id from media queue data builder sets the queue i. Return type is Media Queue Data. Builder and parameters are string. builder class for constructing a media queue data,sink,sink,sink,sink
5396,MediaQueueData.Builder_setQueueType,set queue type from media queue data builder sets the type of the queu. Return type is Media Queue Data. Builder and parameters are int. builder class for constructing a media queue data,sink,sink,sink,neither
5397,MediaQueueData.Builder_setRepeatMode,set repeat mode from media queue data builder sets the repeat mod. Return type is Media Queue Data. Builder and parameters are int. builder class for constructing a media queue data,sink,sink,sink,sink
5398,MediaQueueData.Builder_setStartIndex,set start index from media queue data builder sets the index of the item that should play firs. Return type is Media Queue Data. Builder and parameters are int. builder class for constructing a media queue data,sink,sink,sink,sink
5399,MediaQueueData.Builder_setStartTime,"set start time from media queue data builder sets the playback start time, in millisecond. Return type is Media Queue Data. Builder and parameters are long. builder class for constructing a media queue data",sink,sink,sink,sink
5400,MediaQueueItem.Builder_build,build from media queue item builder builds and returns the media queue item objec. Return type is Media Queue Item and no argument. a builder for media queue item objects,neither,neither,neither,neither
5401,MediaQueueItem.Builder_clearItemId,clear item id from media queue item builder optiona. Return type is Media Queue Item. Builder and no argument. a builder for media queue item objects,neither,neither,neither,neither
5402,MediaQueueItem.Builder_setActiveTrackIds,set active track ids from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are long[]. a builder for media queue item objects,sink,sink,sink,sink
5403,MediaQueueItem.Builder_setAutoplay,set autoplay from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are boolean. a builder for media queue item objects,sink,sink,sink,sink
5404,MediaQueueItem.Builder_setCustomData,set custom data from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are j s o n object. a builder for media queue item objects,sink,sink,sink,sink
5405,MediaQueueItem.Builder_setItemId,set item id from media queue item builder sets the item i. Return type is Media Queue Item. Builder and parameters are int. a builder for media queue item objects,sink,sink,sink,sink
5406,MediaQueueItem.Builder_setPlaybackDuration,set playback duration from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are double. a builder for media queue item objects,sink,sink,sink,sink
5407,MediaQueueItem.Builder_setPreloadTime,set preload time from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are double. a builder for media queue item objects,sink,sink,sink,sink
5408,MediaQueueItem.Builder_setStartTime,set start time from media queue item builder optiona. Return type is Media Queue Item. Builder and parameters are double. a builder for media queue item objects,sink,sink,sink,sink
5409,MediaSeekOptions.Builder_build,build from media seek options builder builds a media seek options objec. Return type is Media Seek Options and no argument. builder for media seek options,neither,neither,neither,neither
5410,MediaSeekOptions.Builder_setCustomData,set custom data from media seek options builder sets the custom application-specific data to pass along with the seek reques. Return type is Media Seek Options. Builder and parameters are j s o n object. builder for media seek options,sink,sink,sink,sink
5411,MediaSeekOptions.Builder_setIsSeekToInfinite,set is seek to infinite from media seek options builder sets whether to seek to the end of stream or live positio. Return type is Media Seek Options. Builder and parameters are boolean. builder for media seek options,sink,sink,sink,sink
5412,MediaSeekOptions.Builder_setPosition,"set position from media seek options builder sets the position to seek to, in millisecond. Return type is Media Seek Options. Builder and parameters are long. builder for media seek options",sink,sink,sink,sink
5413,MediaSeekOptions.Builder_setResumeState,set resume state from media seek options builder sets the action to take after the seek operation has finishe. Return type is Media Seek Options. Builder and parameters are int. builder for media seek options,sink,sink,sink,sink
5414,MediaTrack.Builder_build,build from media track builder builds and returns the media track objec. Return type is Media Track and no argument. a builder for media track objects,neither,neither,neither,neither
5415,MediaTrack.Builder_setContentId,set content id from media track builder sets the track content i. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5416,MediaTrack.Builder_setContentType,set content type from media track builder sets the track content typ. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5417,MediaTrack.Builder_setCustomData,set custom data from media track builder sets the track's custom data objec. Return type is Media Track. Builder and parameters are j s o n object. a builder for media track objects,sink,sink,sink,sink
5418,MediaTrack.Builder_setLanguage,set language from media track builder sets the r f c-5464 formatted track languag. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5419,MediaTrack.Builder_setLanguage,set language from media track builder sets the track language from a locale in r f c-5464 forma. Return type is Media Track. Builder and parameters are locale. a builder for media track objects,sink,sink,sink,sink
5420,MediaTrack.Builder_setName,set name from media track builder sets the track nam. Return type is Media Track. Builder and parameters are string. a builder for media track objects,sink,sink,sink,sink
5421,MediaTrack.Builder_setRoles,set roles from media track builder sets the roles for this trac. Return type is Media Track. Builder and parameters are list. a builder for media track objects,sink,sink,sink,sink
5422,MediaTrack.Builder_setSubtype,set subtype from media track builder sets the track subtype with one of the s u b t y p e_ constant. Return type is Media Track. Builder and parameters are int. a builder for media track objects,sink,sink,sink,sink
5423,RemoteMediaPlayer.MediaChannelResult_getCustomData,"get custom data from remote media player media channel result custom data received from the receiver application, when a media command fail. Return type is J S O N Object and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",source,source,source,source
5424,RemoteMediaPlayer.OnMetadataUpdatedListener_onMetadataUpdated,on metadata updated from remote media player on metadata updated listener called when updated media metadata is receive. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5425,RemoteMediaPlayer.OnPreloadStatusUpdatedListener_onPreloadStatusUpdated,"on preload status updated from remote media player on preload status updated listener called when updated player queue preload status information is received, e. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3",neither,neither,neither,neither
5426,RemoteMediaPlayer.OnQueueStatusUpdatedListener_onQueueStatusUpdated,on queue status updated from remote media player on queue status updated listener called when updated player queue status information is receive. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5427,RemoteMediaPlayer.OnStatusUpdatedListener_onStatusUpdated,on status updated from remote media player on status updated listener called when updated player status information is receive. Return type is  void and no argument. this interface is deprecated  see migrate android sender app from cast sdk v2 to v3,neither,neither,neither,neither
5428,SessionState.Builder_build,build from session state builder builds a session stat. Return type is Session State and no argument. builder for session state,neither,neither,neither,neither
5429,SessionState.Builder_setCustomData,set custom data from session state builder sets the custom dat. Return type is Session State. Builder and parameters are j s o n object. builder for session state,sink,sink,sink,sink
5430,SessionState.Builder_setLoadRequestData,set load request data from session state builder sets the load request dat. Return type is Session State. Builder and parameters are media load request data. builder for session state,sink,sink,sink,sink
5431,VastAdsRequest.Builder_build,build from vast ads request builder . a builder for vast ads reques,neither,neither,neither,neither
5432,VastAdsRequest.Builder_setAdTagUrl,"set ad tag url from vast ads request builder sets the url for the vast file, used to retrieve and identify the a. Return type is Vast Ads Request. Builder and parameters are string. a builder for vast ads reques",sink,sink,sink,sink
5433,VastAdsRequest.Builder_setAdsResponse,set ads response from vast ads request builder sets the vast xml document that can be used as the ads response instead of making a request via an ad tag ur. Return type is Vast Ads Request. Builder and parameters are string. a builder for vast ads reques,sink,sink,sink,sink
5434,VideoInfo.Builder_build,build from video info builder builds a video inf. Return type is Video Info and no argument. builder for video info,neither,neither,neither,neither
5435,VideoInfo.Builder_setHdrType,set hdr type from video info builder sets the hdr type of the current media sessio. Return type is Video Info. Builder and parameters are int. builder for video info,sink,sink,sink,sink
5436,VideoInfo.Builder_setHeight,set height from video info builder sets the height of the video in pixel. Return type is Video Info. Builder and parameters are int. builder for video info,sink,sink,sink,sink
5437,VideoInfo.Builder_setWidth,set width from video info builder sets the width of the video in pixel. Return type is Video Info. Builder and parameters are int. builder for video info,sink,sink,sink,sink
5438,Cast.CastOptions.Builder_build,build from cast cast options builder builds a cast options with the arguments supplied to this builde. Return type is Cast. Cast Options and no argument. a builder to create an instance of cast cast options to set api configuration parameters for cast,sink,sink,sink,neither
5439,Cast.CastOptions.Builder_setVerboseLoggingEnabled,set verbose logging enabled from cast cast options builder enables or disables verbose logging for this cast sessio. Return type is Cast. Cast Options. Builder and parameters are boolean. a builder to create an instance of cast cast options to set api configuration parameters for cast,sink,sink,sink,sink
5440,CastRemoteDisplay.CastRemoteDisplayOptions.Builder_build,build from cast remote display cast remote display options builder builds a cast options with the arguments supplied to this builde. Return type is Cast Remote Display. Cast Remote Display Options and no argument. this class is deprecated  use the cast remote display client via cast remote display get client instead,neither,neither,sink,neither
5441,CastRemoteDisplay.CastRemoteDisplayOptions.Builder_setConfigPreset,set config preset from cast remote display cast remote display options builder set the remote display configuration prese. Return type is Cast Remote Display. Cast Remote Display Options. Builder and parameters are int. this class is deprecated  use the cast remote display client via cast remote display get client instead,sink,sink,sink,sink
5442,CastRemoteDisplayLocalService.NotificationSettings.Builder_build,build from cast remote display local service notification settings builder builds and returns the cast remote display local service notification settings objec. Return type is Cast Remote Display Local Service. Notification Settings and no argument. builder class for the cast remote display local service notification settings object,neither,neither,sink,neither
5443,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotification,set notification from cast remote display local service notification settings builder sets a custom notificatio. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are notification. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5444,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationPendingIntent,set notification pending intent from cast remote display local service notification settings builder sets a pending intent that will be executed when the default notification is clicke. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are pending intent. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5445,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationText,set notification text from cast remote display local service notification settings builder the default notification tex. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are string. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5446,CastRemoteDisplayLocalService.NotificationSettings.Builder_setNotificationTitle,set notification title from cast remote display local service notification settings builder the default notification titl. Return type is Cast Remote Display Local Service. Notification Settings. Builder and parameters are string. builder class for the cast remote display local service notification settings object,sink,sink,sink,sink
5447,RewardedAd_getAdMetadata,get ad metadata from rewarded ad gets all available ad metadata for this rewarded a. Return type is Bundle and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5448,RewardedAd_getAdUnitId,get ad unit id from rewarded ad returns the ad unit i. Return type is String and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5449,RewardedAd_getFullScreenContentCallback,get full screen content callback from rewarded ad gets the full screen content callback for this rewarded a. Return type is Full Screen Content Callback and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5450,RewardedAd_getOnAdMetadataChangedListener,get on ad metadata changed listener from rewarded ad gets the on ad metadata changed listener for this rewarded a. Return type is On Ad Metadata Changed Listener and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5451,RewardedAd_getOnPaidEventListener,get on paid event listener from rewarded ad gets the on paid event listener for this rewarded a. Return type is On Paid Event Listener and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5452,RewardedAd_getResponseInfo,get response info from rewarded ad returns the response info object for the loaded a. Return type is Response Info and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5453,RewardedAd_getRewardItem,get reward item from rewarded ad gets reward item for the loaded rewarded a. Return type is Reward Item and no argument. this class is used to request and display a rewarded ad,source,source,source,source
5454,RewardedAd_load,load from rewarded ad loads a rewarded a. Return type is  void and parameters are context string ad request rewarded ad load callback. this class is used to request and display a rewarded ad,neither,neither,neither,neither
5455,RewardedAd_load,load from rewarded ad loads a rewarded a. Return type is  void and parameters are context string ad manager ad request rewarded ad load callback. this class is used to request and display a rewarded ad,neither,neither,neither,neither
5456,RewardedAd_setFullScreenContentCallback,set full screen content callback from rewarded ad registers a callback to be invoked when ads show and dismiss full screen conten. Return type is  void and parameters are full screen content callback. this class is used to request and display a rewarded ad,sink,sink,sink,sink
5457,RewardedAd_setImmersiveMode,set immersive mode from rewarded ad sets a flag that controls if this rewarded ad object will be displayed in immersive mod. Return type is  void and parameters are boolean. this class is used to request and display a rewarded ad,sink,sink,sink,sink
5458,RewardedAd_setOnAdMetadataChangedListener,set on ad metadata changed listener from rewarded ad sets the on ad metadata changed listener for this rewarded a. Return type is  void and parameters are on ad metadata changed listener. this class is used to request and display a rewarded ad,sink,sink,sink,neither
5459,RewardedAd_setOnPaidEventListener,set on paid event listener from rewarded ad registers a callback to be invoked when this ad is estimated to have earned mone. Return type is  void and parameters are on paid event listener. this class is used to request and display a rewarded ad,sink,neither,neither,neither
5460,RewardedAd_setServerSideVerificationOptions,set server side verification options from rewarded ad sets server side verification options for this rewarded a. Return type is  void and parameters are server side verification options. this class is used to request and display a rewarded ad,sink,sink,sink,sink
5461,RewardedAd_show,show from rewarded ad shows the rewarded a. Return type is  void and parameters are activity on user earned reward listener. this class is used to request and display a rewarded ad,neither,neither,source,neither
5462,ServerSideVerificationOptions_getCustomData,get custom data from server side verification options returns the custom data set by server side verification options builderset custom da. Return type is String and no argument. options for rewarded ad server side verification callbacks,source,source,source,neither
5463,ServerSideVerificationOptions_getUserId,get user id from server side verification options returns the user id set by server side verification options builderset user. Return type is String and no argument. options for rewarded ad server side verification callbacks,source,source,source,source
5464,ServerSideVerificationOptions.Builder_build,build from server side verification options builder . builder for server side verification options,neither,neither,neither,neither
5465,ServerSideVerificationOptions.Builder_setCustomData,set custom data from server side verification options builder sets custom dat. Return type is Server Side Verification Options. Builder and parameters are string. builder for server side verification options,sink,sink,sink,sink
5466,ServerSideVerificationOptions.Builder_setUserId,set user id from server side verification options builder sets the user id of the current use. Return type is Server Side Verification Options. Builder and parameters are string. builder for server side verification options,sink,sink,sink,sink
5467,OnAdMetadataChangedListener_onAdMetadataChanged,on ad metadata changed from on ad metadata changed listener called when an ad's metadata is loaded for the first time or when the ad's metadata change. Return type is  void and no argument. a listener interface for ad metadata changed event,neither,neither,neither,neither
5468,RewardItem_getAmount,get amount from reward item returns the reward amoun. Return type is  int and no argument. this class describes a reward credited to a user for interacting with a rewarded ad,source,source,source,source
5469,RewardItem_getType,get type from reward item returns the type of the rewar. Return type is String and no argument. this class describes a reward credited to a user for interacting with a rewarded ad,source,source,source,source
5470,ServerSideVerificationOptions.Builder_build,build from server side verification options builder . builder for server side verification options,neither,neither,neither,neither
5471,ServerSideVerificationOptions.Builder_setCustomData,set custom data from server side verification options builder sets custom dat. Return type is Server Side Verification Options. Builder and parameters are string. builder for server side verification options,sink,sink,sink,sink
5472,ServerSideVerificationOptions.Builder_setUserId,set user id from server side verification options builder sets the user id of the current use. Return type is Server Side Verification Options. Builder and parameters are string. builder for server side verification options,sink,sink,sink,sink
5473,AppSet_getClient,get client from app set creates a new instance of app set id clien. Return type is App Set Id Client and parameters are context. entry point of the app set a p is,source,source,source,source
5474,AppSetIdInfo_getId,get id from app set id info gets the app set i. Return type is String and no argument. contains information about app set id,source,source,source,source
5475,AppSetIdInfo_getScope,get scope from app set id info returns the app set id info scope of the app set i. Return type is int and no argument. contains information about app set id,source,source,source,source
5476,AppSetIdClient_getAppSetIdInfo,get app set id info from app set id client gets the app set id info asynchronousl. Return type is Task and no argument. a client for interacting with the app set id info api,source,source,source,source
5477,BleScanCallback_onDeviceFound,on device found from ble scan callback called once for each device foun. Return type is  void and parameters are ble device. this class is deprecated  use bluetooth manager directly,neither,neither,neither,neither
5478,BleScanCallback_onScanStopped,on scan stopped from ble scan callback called when the scan is stoppe. Return type is  void and no argument. this class is deprecated  use bluetooth manager directly,neither,neither,neither,neither
5479,DataDeleteRequest_deleteAllData,delete all data from data delete request returns true if all data types are marked for deletio. Return type is boolean and no argument. a request to delete data and sessions added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5480,DataDeleteRequest_deleteAllSessions,delete all sessions from data delete request returns true if all sessions are marked for deletio. Return type is boolean and no argument. a request to delete data and sessions added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5481,DataDeleteRequest_equals,equals from data delete request . a request to delete data and sessions added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5482,DataDeleteRequest_getDataSources,get data sources from data delete request returns the list of data sources specified for data deletio. Return type is List and no argument. a request to delete data and sessions added by the app from the google fit store in the time interval specified,source,source,source,source
5483,DataDeleteRequest_getDataTypes,get data types from data delete request returns the list of data types specified for data deletio. Return type is List and no argument. a request to delete data and sessions added by the app from the google fit store in the time interval specified,source,source,source,source
5484,DataDeleteRequest_getEndTime,"get end time from data delete request returns the end time of the query, in the given unit since epoc. Return type is long and parameters are time unit. a request to delete data and sessions added by the app from the google fit store in the time interval specified",source,source,source,source
5485,DataDeleteRequest_getSessions,get sessions from data delete request returns the list of sessions specified for deletio. Return type is List and no argument. a request to delete data and sessions added by the app from the google fit store in the time interval specified,source,source,source,source
5486,DataDeleteRequest_getStartTime,"get start time from data delete request returns the start time of the query, in the given unit since epoc. Return type is long and parameters are time unit. a request to delete data and sessions added by the app from the google fit store in the time interval specified",source,source,source,source
5487,DataDeleteRequest_hashCode,hash code from data delete request . a request to delete data and sessions added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5488,DataDeleteRequest_toString,to string from data delete request . a request to delete data and sessions added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5489,DataDeleteRequest_writeToParcel,write to parcel from data delete request . a request to delete data and sessions added by the app from the google fit store in the time interval specified,sink,sink,sink,sink
5490,DataDeleteRequest.Builder_addDataSource,add data source from data delete request builder adds a specific data source to delete data from the google fit stor. Return type is Data Delete Request. Builder and parameters are data source. builder used to create new data delete requests,neither,neither,neither,neither
5491,DataDeleteRequest.Builder_addDataType,add data type from data delete request builder adds a specific data type to delete data from the google fit stor. Return type is Data Delete Request. Builder and parameters are data type. builder used to create new data delete requests,neither,neither,neither,neither
5492,DataDeleteRequest.Builder_addSession,add session from data delete request builder adds a specific session to delete from the google fit stor. Return type is Data Delete Request. Builder and parameters are session. builder used to create new data delete requests,neither,neither,neither,sink
5493,DataDeleteRequest.Builder_build,build from data delete request builder finishes building and returns the reques. Return type is Data Delete Request and no argument. builder used to create new data delete requests,neither,neither,neither,neither
5494,DataDeleteRequest.Builder_deleteAllData,delete all data from data delete request builder adds option to delete data for all data type. Return type is Data Delete Request. Builder and no argument. builder used to create new data delete requests,neither,neither,neither,neither
5495,DataDeleteRequest.Builder_deleteAllSessions,delete all sessions from data delete request builder . builder used to create new data delete requests,neither,neither,neither,neither
5496,DataDeleteRequest.Builder_setTimeInterval,set time interval from data delete request builder sets the time interval for the data delete quer. Return type is Data Delete Request. Builder and parameters are long long time unit. builder used to create new data delete requests,sink,sink,sink,sink
5497,DataReadRequest_equals,equals from data read request . request for reading data from google fit,source,source,source,neither
5498,DataReadRequest_getActivityDataSource,get activity data source from data read request returns the data source used to get activity segments for creating buckets for data aggregation in this reques. Return type is Data Source and no argument. request for reading data from google fit,source,source,source,source
5499,DataReadRequest_getAggregatedDataSources,get aggregated data sources from data read request returns all of the data sources that will be read then aggregated as part of this reques. Return type is List and no argument. request for reading data from google fit,source,source,source,source
5500,DataReadRequest_getAggregatedDataTypes,get aggregated data types from data read request returns all of the data types that will be read then aggregated as part of this reques. Return type is List and no argument. request for reading data from google fit,source,source,source,source
5501,DataReadRequest_getBucketDuration,get bucket duration from data read request returns the bucket duration for this request in the given time uni. Return type is long and parameters are time unit. request for reading data from google fit,source,source,source,source
5502,DataReadRequest_getBucketType,get bucket type from data read request returns the bucket type for data aggregation for this reques. Return type is int and no argument. request for reading data from google fit,source,source,source,source
5503,DataReadRequest_getDataSources,get data sources from data read request returns the data sources that should be read in this reques. Return type is List and no argument. request for reading data from google fit,source,source,source,source
5504,DataReadRequest_getDataTypes,get data types from data read request returns the data types for which default data sources should be read in this reques. Return type is List and no argument. request for reading data from google fit,source,source,source,source
5505,DataReadRequest_getEndTime,"get end time from data read request returns the end time for our query, in the specified time uni. Return type is long and parameters are time unit. request for reading data from google fit",source,source,source,source
5506,DataReadRequest_getLimit,get limit from data read request returns the max number of data points to return in the resul. Return type is int and no argument. request for reading data from google fit,source,source,source,source
5507,DataReadRequest_getStartTime,"get start time from data read request returns the start time for our query, in the specified time uni. Return type is long and parameters are time unit. request for reading data from google fit",source,source,source,source
5508,DataReadRequest_hashCode,hash code from data read request . request for reading data from google fit,source,source,source,source
5509,DataReadRequest_toString,to string from data read request . request for reading data from google fit,source,source,source,source
5510,DataReadRequest_writeToParcel,write to parcel from data read request . request for reading data from google fit,sink,sink,sink,sink
5511,DataReadRequest.Builder_aggregate,aggregate from data read request builder adds a specific data source we want aggregate data from for this reques. Return type is Data Read Request. Builder and parameters are data source. builder used to create new data read requests,neither,neither,neither,sink
5512,DataReadRequest.Builder_aggregate,aggregate from data read request builder adds the default data source for the given aggregate data type to this reques. Return type is Data Read Request. Builder and parameters are data type. builder used to create new data read requests,neither,neither,neither,sink
5513,DataReadRequest.Builder_aggregate,aggregate from data read request builder deprecate. Return type is Data Read Request. Builder and parameters are data source data type. builder used to create new data read requests,neither,neither,neither,sink
5514,DataReadRequest.Builder_aggregate,aggregate from data read request builder deprecate. Return type is Data Read Request. Builder and parameters are data type data type. builder used to create new data read requests,neither,neither,neither,sink
5515,DataReadRequest.Builder_bucketByActivitySegment,"bucket by activity segment from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ s e g m e n t, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for the bucke. Return type is Data Read Request. Builder and parameters are int time unit data source. builder used to create new data read requests",neither,neither,neither,source
5516,DataReadRequest.Builder_bucketByActivitySegment,"bucket by activity segment from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ s e g m e n t, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for the bucke. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests",neither,neither,neither,source
5517,DataReadRequest.Builder_bucketByActivityType,"bucket by activity type from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ t y p e, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for computing the buckets and sets the activity data source to be used to read activity segments fro. Return type is Data Read Request. Builder and parameters are int time unit data source. builder used to create new data read requests",source,neither,source,source
5518,DataReadRequest.Builder_bucketByActivityType,"bucket by activity type from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ t y p e, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for computing the bucket. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests",neither,neither,source,source
5519,DataReadRequest.Builder_bucketBySession,bucket by session from data read request builder specifies bucket type as t y p e_ s e s s i o n and sets the minimum duration of each session for the bucke. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests,source,neither,source,source
5520,DataReadRequest.Builder_bucketByTime,bucket by time from data read request builder specifies bucket type as t y p e_ t i m e and sets the duration of each bucke. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests,neither,neither,neither,source
5521,DataReadRequest.Builder_build,build from data read request builder finishes building and returns the reques. Return type is Data Read Request and no argument. builder used to create new data read requests,neither,neither,neither,neither
5522,DataReadRequest.Builder_enableServerQueries,"enable server queries from data read request builder enable querying the google fit server to fetch query results, in case the local store doesn't have data for the full requested time rang. Return type is Data Read Request. Builder and no argument. builder used to create new data read requests",neither,neither,source,source
5523,DataReadRequest.Builder_read,read from data read request builder adds a specific data source we want to read data from to this reques. Return type is Data Read Request. Builder and parameters are data source. builder used to create new data read requests,source,source,source,source
5524,DataReadRequest.Builder_read,read from data read request builder adds the default data source to read for the given data type to this reques. Return type is Data Read Request. Builder and parameters are data type. builder used to create new data read requests,source,source,source,source
5525,DataReadRequest.Builder_setLimit,set limit from data read request builder limits results to the latest limit data point. Return type is Data Read Request. Builder and parameters are int. builder used to create new data read requests,sink,sink,sink,sink
5526,DataReadRequest.Builder_setTimeRange,set time range from data read request builder sets the time range for our quer. Return type is Data Read Request. Builder and parameters are long long time unit. builder used to create new data read requests,sink,sink,sink,sink
5527,DataSourcesRequest_getDataTypes,get data types from data sources request returns all of the data types requeste. Return type is List and no argument. request for finding data sources in google fit,source,source,source,source
5528,DataSourcesRequest_toString,to string from data sources request . request for finding data sources in google fit,source,sink,source,sink
5529,DataSourcesRequest_writeToParcel,write to parcel from data sources request . request for finding data sources in google fit,sink,sink,sink,sink
5530,DataSourcesRequest.Builder_build,build from data sources request builder finishes building and returns the reques. Return type is Data Sources Request and no argument. builder used to create new data source requests,neither,neither,neither,neither
5531,DataSourcesRequest.Builder_setDataSourceTypes,set data source types from data sources request builder sets the data source types that should be searched for in the data sources reques. Return type is Data Sources Request. Builder and parameters are int   . builder used to create new data source requests,sink,sink,sink,sink
5532,DataSourcesRequest.Builder_setDataTypes,set data types from data sources request builder sets the desired data types to search for on the data sources reques. Return type is Data Sources Request. Builder and parameters are data type   . builder used to create new data source requests,sink,sink,sink,sink
5533,DataTypeCreateRequest_equals,equals from data type create request . this class is deprecated  support for custom data types will be removed in a future version of google fit  use one of the pre defined data types listed in data type,neither,neither,neither,neither
5534,DataTypeCreateRequest_getFields,get fields from data type create request returns the specified fields for the created data typ. Return type is List and no argument. this class is deprecated  support for custom data types will be removed in a future version of google fit  use one of the pre defined data types listed in data type,source,source,source,neither
5535,DataTypeCreateRequest_getName,get name from data type create request returns the specified name for the crated data typ. Return type is String and no argument. this class is deprecated  support for custom data types will be removed in a future version of google fit  use one of the pre defined data types listed in data type,source,source,source,neither
5536,DataTypeCreateRequest_hashCode,hash code from data type create request . this class is deprecated  support for custom data types will be removed in a future version of google fit  use one of the pre defined data types listed in data type,neither,neither,neither,neither
5537,DataTypeCreateRequest_toString,to string from data type create request . this class is deprecated  support for custom data types will be removed in a future version of google fit  use one of the pre defined data types listed in data type,sink,sink,neither,sink
5538,DataTypeCreateRequest_writeToParcel,write to parcel from data type create request . this class is deprecated  support for custom data types will be removed in a future version of google fit  use one of the pre defined data types listed in data type,sink,sink,sink,sink
5539,DataTypeCreateRequest.Builder_addField,add field from data type create request builder adds a new field with the specified name and format to the new data typ. Return type is Data Type Create Request. Builder and parameters are string int. builder used to create new data type insert requests,sink,sink,neither,sink
5540,DataTypeCreateRequest.Builder_addField,add field from data type create request builder adds the specified field to the new data typ. Return type is Data Type Create Request. Builder and parameters are field. builder used to create new data type insert requests,sink,sink,neither,sink
5541,DataTypeCreateRequest.Builder_build,build from data type create request builder finishes building and returns the reques. Return type is Data Type Create Request and no argument. builder used to create new data type insert requests,neither,neither,neither,neither
5542,DataTypeCreateRequest.Builder_setName,set name from data type create request builder set the name for the new data typ. Return type is Data Type Create Request. Builder and parameters are string. builder used to create new data type insert requests,sink,sink,sink,sink
5543,DataUpdateListenerRegistrationRequest_equals,"equals from data update listener registration request . registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",neither,neither,neither,neither
5544,DataUpdateListenerRegistrationRequest_getDataSource,"get data source from data update listener registration request returns the data source for this reques. Return type is Data Source and no argument. registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",source,source,source,source
5545,DataUpdateListenerRegistrationRequest_getDataType,"get data type from data update listener registration request returns the data type for this reques. Return type is Data Type and no argument. registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",source,source,source,source
5546,DataUpdateListenerRegistrationRequest_getIntent,"get intent from data update listener registration request returns the pending intent for this reques. Return type is Pending Intent and no argument. registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",source,source,source,source
5547,DataUpdateListenerRegistrationRequest_hashCode,"hash code from data update listener registration request . registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",neither,neither,neither,neither
5548,DataUpdateListenerRegistrationRequest_toString,"to string from data update listener registration request . registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",sink,neither,neither,neither
5549,DataUpdateListenerRegistrationRequest_writeToParcel,"write to parcel from data update listener registration request . registration request to register a listener for data updates, including data source and data type as well as pending intent associated with the registration",sink,sink,sink,sink
5550,DataUpdateListenerRegistrationRequest.Builder_build,build from data update listener registration request builder builds the data update listener registration request object from the builde. Return type is Data Update Listener Registration Request and no argument. builder for creating data update listener registration request,neither,neither,neither,neither
5551,DataUpdateListenerRegistrationRequest.Builder_setDataSource,set data source from data update listener registration request builder sets the data source for which we want to listen for data update. Return type is Data Update Listener Registration Request. Builder and parameters are data source. builder for creating data update listener registration request,sink,sink,sink,sink
5552,DataUpdateListenerRegistrationRequest.Builder_setDataType,set data type from data update listener registration request builder sets the data type for which we want to listen for data update. Return type is Data Update Listener Registration Request. Builder and parameters are data type. builder for creating data update listener registration request,sink,sink,sink,neither
5553,DataUpdateListenerRegistrationRequest.Builder_setPendingIntent,set pending intent from data update listener registration request builder sets the pending intent which will receive data update notification for update. Return type is Data Update Listener Registration Request. Builder and parameters are pending intent. builder for creating data update listener registration request,sink,sink,sink,sink
5554,DataUpdateRequest_equals,equals from data update request . a request to update data added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5555,DataUpdateRequest_getDataSet,get data set from data update request returns the data set that you're insertin. Return type is Data Set and no argument. a request to update data added by the app from the google fit store in the time interval specified,source,source,source,neither
5556,DataUpdateRequest_getEndTime,"get end time from data update request returns the end time of the query, in the given unit since epoc. Return type is long and parameters are time unit. a request to update data added by the app from the google fit store in the time interval specified",source,source,source,source
5557,DataUpdateRequest_getStartTime,"get start time from data update request returns the start time of the query, in the given unit since epoc. Return type is long and parameters are time unit. a request to update data added by the app from the google fit store in the time interval specified",source,source,source,source
5558,DataUpdateRequest_hashCode,hash code from data update request . a request to update data added by the app from the google fit store in the time interval specified,neither,neither,neither,neither
5559,DataUpdateRequest_toString,to string from data update request . a request to update data added by the app from the google fit store in the time interval specified,sink,sink,sink,sink
5560,DataUpdateRequest_writeToParcel,write to parcel from data update request . a request to update data added by the app from the google fit store in the time interval specified,sink,sink,sink,sink
5561,DataUpdateRequest.Builder_build,build from data update request builder finishes building and returns the reques. Return type is Data Update Request and no argument. builder used to create new data update requests,neither,neither,neither,neither
5562,DataUpdateRequest.Builder_setDataSet,set data set from data update request builder sets the data set for the data update quer. Return type is Data Update Request. Builder and parameters are data set. builder used to create new data update requests,sink,sink,sink,sink
5563,DataUpdateRequest.Builder_setTimeInterval,set time interval from data update request builder sets the time interval for the data update quer. Return type is Data Update Request. Builder and parameters are long long time unit. builder used to create new data update requests,sink,sink,sink,sink
5564,GoalsReadRequest_equals,equals from goals read request . request for reading current goals from google fit,source,neither,source,neither
5565,GoalsReadRequest_getActivityNames,get activity names from goals read request returns the names of the activities specified in the reques. Return type is List and no argument. request for reading current goals from google fit,source,source,source,source
5566,GoalsReadRequest_getDataTypes,get data types from goals read request returns the data types specified in the reques. Return type is List and no argument. request for reading current goals from google fit,source,source,source,source
5567,GoalsReadRequest_getObjectiveTypes,get objective types from goals read request returns the objective types specified in the reques. Return type is List and no argument. request for reading current goals from google fit,source,source,source,source
5568,GoalsReadRequest_hashCode,hash code from goals read request . request for reading current goals from google fit,source,source,source,neither
5569,GoalsReadRequest_toString,to string from goals read request . request for reading current goals from google fit,source,source,source,source
5570,GoalsReadRequest_writeToParcel,write to parcel from goals read request . request for reading current goals from google fit,sink,sink,sink,sink
5571,GoalsReadRequest.Builder_addActivity,add activity from goals read request builder adds a specific activity to this reques. Return type is Goals Read Request. Builder and parameters are string. builder used to create new goals read request,neither,neither,neither,sink
5572,GoalsReadRequest.Builder_addDataType,add data type from goals read request builder adds a specific data type to this reques. Return type is Goals Read Request. Builder and parameters are data type. builder used to create new goals read request,neither,neither,neither,neither
5573,GoalsReadRequest.Builder_addObjectiveType,add objective type from goals read request builder adds a objective type to this reques. Return type is Goals Read Request. Builder and parameters are int. builder used to create new goals read request,neither,neither,neither,neither
5574,GoalsReadRequest.Builder_build,build from goals read request builder finishes building and returns the reques. Return type is Goals Read Request and no argument. builder used to create new goals read request,neither,neither,neither,neither
5575,SensorRequest_equals,equals from sensor request . request for registering for live updates from a data source,neither,neither,neither,neither
5576,SensorRequest_getAccuracyMode,get accuracy mode from sensor request returns the accuracy mode for this reques. Return type is int and no argument. request for registering for live updates from a data source,source,source,source,source
5577,SensorRequest_getDataSource,get data source from sensor request returns the specified data source for this reques. Return type is Data Source and no argument. request for registering for live updates from a data source,source,source,source,source
5578,SensorRequest_getDataType,get data type from sensor request returns the specified data type for this reques. Return type is Data Type and no argument. request for registering for live updates from a data source,source,source,source,source
5579,SensorRequest_getFastestRate,"get fastest rate from sensor request returns the fastest rate for this request, in the given time uni. Return type is long and parameters are time unit. request for registering for live updates from a data source",source,source,source,source
5580,SensorRequest_getMaxDeliveryLatency,"get max delivery latency from sensor request returns the max delivery latency for this request, in the given time uni. Return type is long and parameters are time unit. request for registering for live updates from a data source",source,source,source,source
5581,SensorRequest_getSamplingRate,"get sampling rate from sensor request returns the sampling rate for this request, in the given time uni. Return type is long and parameters are time unit. request for registering for live updates from a data source",source,source,source,source
5582,SensorRequest_hashCode,hash code from sensor request . request for registering for live updates from a data source,neither,neither,neither,neither
5583,SensorRequest_toString,to string from sensor request . request for registering for live updates from a data source,sink,sink,neither,sink
5584,SensorRequest.Builder_build,build from sensor request builder finishes building and returns the reques. Return type is Sensor Request and no argument. builder used to create new sensor requests,neither,neither,neither,neither
5585,SensorRequest.Builder_setAccuracyMode,set accuracy mode from sensor request builder sets the accuracy polic. Return type is Sensor Request. Builder and parameters are int. builder used to create new sensor requests,sink,sink,sink,sink
5586,SensorRequest.Builder_setDataSource,set data source from sensor request builder sets the specific data source for this registratio. Return type is Sensor Request. Builder and parameters are data source. builder used to create new sensor requests,sink,sink,sink,sink
5587,SensorRequest.Builder_setDataType,set data type from sensor request builder sets the data type for the reques. Return type is Sensor Request. Builder and parameters are data type. builder used to create new sensor requests,sink,sink,sink,sink
5588,SensorRequest.Builder_setFastestRate,"set fastest rate from sensor request builder sets the fastest interval between two consecutive data points, in the given uni. Return type is Sensor Request. Builder and parameters are int time unit. builder used to create new sensor requests",sink,sink,sink,sink
5589,SensorRequest.Builder_setMaxDeliveryLatency,set max delivery latency from sensor request builder sets the maximum latency between a data point being detected and reported to the applicatio. Return type is Sensor Request. Builder and parameters are int time unit. builder used to create new sensor requests,sink,sink,sink,sink
5590,SensorRequest.Builder_setSamplingRate,"set sampling rate from sensor request builder sets the desired interval between two consecutive data points, in the given uni. Return type is Sensor Request. Builder and parameters are long time unit. builder used to create new sensor requests",sink,sink,sink,sink
5591,SensorRequest.Builder_setTimeout,set timeout from sensor request builder sets the timeout for the registration for the sensor request to expir. Return type is Sensor Request. Builder and parameters are long time unit. builder used to create new sensor requests,sink,sink,sink,sink
5592,SessionInsertRequest_equals,equals from session insert request . a request for inserting a session and associated data set and/or aggregated data point into the google fit store,neither,neither,neither,neither
5593,SessionInsertRequest_getAggregateDataPoints,get aggregate data points from session insert request returns the aggregate data points we are insertin. Return type is List and no argument. a request for inserting a session and associated data set and/or aggregated data point into the google fit store,source,source,source,source
5594,SessionInsertRequest_getDataSets,get data sets from session insert request returns the data sets we are insertin. Return type is List and no argument. a request for inserting a session and associated data set and/or aggregated data point into the google fit store,source,source,source,source
5595,SessionInsertRequest_getSession,get session from session insert request returns the session we are insertin. Return type is Session and no argument. a request for inserting a session and associated data set and/or aggregated data point into the google fit store,source,source,source,source
5596,SessionInsertRequest_hashCode,hash code from session insert request . a request for inserting a session and associated data set and/or aggregated data point into the google fit store,sink,neither,neither,sink
5597,SessionInsertRequest_toString,to string from session insert request . a request for inserting a session and associated data set and/or aggregated data point into the google fit store,sink,sink,sink,sink
5598,SessionInsertRequest_writeToParcel,write to parcel from session insert request . a request for inserting a session and associated data set and/or aggregated data point into the google fit store,sink,sink,sink,sink
5599,SessionInsertRequest.Builder_addAggregateDataPoint,add aggregate data point from session insert request builder adds the specified aggregate data point to this reques. Return type is Session Insert Request. Builder and parameters are data point. builder used to create new session insert request,sink,sink,sink,sink
5600,SessionInsertRequest.Builder_addDataSet,add data set from session insert request builder adds the specified data set to this reques. Return type is Session Insert Request. Builder and parameters are data set. builder used to create new session insert request,sink,sink,sink,sink
5601,SessionInsertRequest.Builder_build,build from session insert request builder finishes building and returns the reques. Return type is Session Insert Request and no argument. builder used to create new session insert request,neither,neither,neither,neither
5602,SessionInsertRequest.Builder_setSession,set session from session insert request builder sets the session for this reques. Return type is Session Insert Request. Builder and parameters are session. builder used to create new session insert request,sink,sink,sink,sink
5603,SessionReadRequest_equals,equals from session read request . request for reading session data from google fit,source,source,source,neither
5604,SessionReadRequest_getDataSources,get data sources from session read request returns the data sources to be read in this reques. Return type is List and no argument. request for reading session data from google fit,source,source,source,source
5605,SessionReadRequest_getDataTypes,get data types from session read request returns the data types for which default data sources should be read in this reques. Return type is List and no argument. request for reading session data from google fit,source,source,source,source
5606,SessionReadRequest_getEndTime,"get end time from session read request returns the end time for our query, in the given time uni. Return type is long and parameters are time unit. request for reading session data from google fit",source,source,source,source
5607,SessionReadRequest_getExcludedPackages,get excluded packages from session read request returns any app package names that were excluded from the reques. Return type is List and no argument. request for reading session data from google fit,source,source,source,source
5608,SessionReadRequest_getSessionId,get session id from session read request returns the session id we are requesting data fo. Return type is String and no argument. request for reading session data from google fit,source,source,source,source
5609,SessionReadRequest_getSessionName,get session name from session read request returns the session name we are requesting data fo. Return type is String and no argument. request for reading session data from google fit,source,source,source,source
5610,SessionReadRequest_getStartTime,"get start time from session read request returns the start time for our query, in the given time uni. Return type is long and parameters are time unit. request for reading session data from google fit",source,source,source,source
5611,SessionReadRequest_hashCode,hash code from session read request . request for reading session data from google fit,source,source,source,source
5612,SessionReadRequest_includeSessionsFromAllApps,include sessions from all apps from session read request returns true if the read data should include sessions from other app. Return type is boolean and no argument. request for reading session data from google fit,source,source,source,source
5613,SessionReadRequest_toString,to string from session read request . request for reading session data from google fit,source,source,source,source
5614,SessionReadRequest_writeToParcel,write to parcel from session read request . request for reading session data from google fit,sink,sink,sink,sink
5615,SessionReadRequest.Builder_build,build from session read request builder finishes building and returns the reques. Return type is Session Read Request and no argument. builder used to create a new session read request,neither,neither,neither,neither
5616,SessionReadRequest.Builder_enableServerQueries,"enable server queries from session read request builder enable querying the google fit server to fetch query results, in case the local store doesn't have data for the full requested time rang. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request",source,neither,source,source
5617,SessionReadRequest.Builder_excludePackage,exclude package from session read request builder exclude sessions from a particular package name from the read resul. Return type is Session Read Request. Builder and parameters are string. builder used to create a new session read request,neither,neither,neither,source
5618,SessionReadRequest.Builder_includeActivitySessions,include activity sessions from session read request builder requests to include activity session. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request,neither,neither,source,sink
5619,SessionReadRequest.Builder_includeSleepSessions,include sleep sessions from session read request builder requests to include sleep session. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request,neither,neither,neither,neither
5620,SessionReadRequest.Builder_read,read from session read request builder reads data from a given data source for each session selected by this reques. Return type is Session Read Request. Builder and parameters are data source. builder used to create a new session read request,source,source,source,source
5621,SessionReadRequest.Builder_read,read from session read request builder reads data from the default data source of the given data type for each session selected by this reques. Return type is Session Read Request. Builder and parameters are data type. builder used to create a new session read request,source,source,source,source
5622,SessionReadRequest.Builder_readSessionsFromAllApps,read sessions from all apps from session read request builder enables reading sessions inserted by any ap. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request,source,source,source,source
5623,SessionReadRequest.Builder_setSessionId,set session id from session read request builder adds an optional session identifier to this reques. Return type is Session Read Request. Builder and parameters are string. builder used to create a new session read request,sink,sink,sink,sink
5624,SessionReadRequest.Builder_setSessionName,set session name from session read request builder adds an optional session name to this reques. Return type is Session Read Request. Builder and parameters are string. builder used to create a new session read request,sink,sink,sink,sink
5625,SessionReadRequest.Builder_setTimeInterval,"set time interval from session read request builder sets the time range for the sessions we want to select in our query, in a specific time uni. Return type is Session Read Request. Builder and parameters are long long time unit. builder used to create a new session read request",sink,sink,sink,sink
5626,StartBleScanRequest_getDataTypes,get data types from start ble scan request returns the list of data types that constrain the list of scanned device. Return type is List and no argument. this class is deprecated  use bluetooth manager directly,source,source,source,source
5627,StartBleScanRequest_getTimeoutSecs,"get timeout secs from start ble scan request returns the timeout for the scan, in second. Return type is int and no argument. this class is deprecated  use bluetooth manager directly",source,source,source,source
5628,StartBleScanRequest_toString,to string from start ble scan request . this class is deprecated  use bluetooth manager directly,sink,sink,sink,neither
5629,StartBleScanRequest_writeToParcel,write to parcel from start ble scan request . this class is deprecated  use bluetooth manager directly,sink,sink,sink,sink
5630,StartBleScanRequest.Builder_build,build from start ble scan request builder finishes building and returns the reques. Return type is Start Ble Scan Request and no argument. builder used to create new data source requests,neither,neither,neither,neither
5631,StartBleScanRequest.Builder_setBleScanCallback,set ble scan callback from start ble scan request builder sets the callback to be used when devices are foun. Return type is Start Ble Scan Request. Builder and parameters are ble scan callback. builder used to create new data source requests,sink,sink,sink,sink
5632,StartBleScanRequest.Builder_setDataTypes,set data types from start ble scan request builder sets the desired data types to search for on the ble sca. Return type is Start Ble Scan Request. Builder and parameters are data type   . builder used to create new data source requests,sink,sink,sink,sink
5633,StartBleScanRequest.Builder_setTimeoutSecs,"set timeout secs from start ble scan request builder sets how long to wait before automatically stopping the scan, in second. Return type is Start Ble Scan Request. Builder and parameters are int. builder used to create new data source requests",sink,sink,sink,sink
5634,OnDataPointListener_onDataPoint,on data point from on data point listener handle a new data point from the data sourc. Return type is  void and parameters are data point. listener used to register to live data updates from a data source,neither,neither,neither,neither
5635,DataDeleteRequest.Builder_addDataSource,add data source from data delete request builder adds a specific data source to delete data from the google fit stor. Return type is Data Delete Request. Builder and parameters are data source. builder used to create new data delete requests,neither,neither,neither,neither
5636,DataDeleteRequest.Builder_addDataType,add data type from data delete request builder adds a specific data type to delete data from the google fit stor. Return type is Data Delete Request. Builder and parameters are data type. builder used to create new data delete requests,neither,neither,neither,neither
5637,DataDeleteRequest.Builder_addSession,add session from data delete request builder adds a specific session to delete from the google fit stor. Return type is Data Delete Request. Builder and parameters are session. builder used to create new data delete requests,neither,neither,neither,sink
5638,DataDeleteRequest.Builder_build,build from data delete request builder finishes building and returns the reques. Return type is Data Delete Request and no argument. builder used to create new data delete requests,neither,neither,neither,neither
5639,DataDeleteRequest.Builder_deleteAllData,delete all data from data delete request builder adds option to delete data for all data type. Return type is Data Delete Request. Builder and no argument. builder used to create new data delete requests,neither,neither,neither,neither
5640,DataDeleteRequest.Builder_deleteAllSessions,delete all sessions from data delete request builder . builder used to create new data delete requests,neither,neither,neither,neither
5641,DataDeleteRequest.Builder_setTimeInterval,set time interval from data delete request builder sets the time interval for the data delete quer. Return type is Data Delete Request. Builder and parameters are long long time unit. builder used to create new data delete requests,sink,sink,sink,sink
5642,DataReadRequest.Builder_aggregate,aggregate from data read request builder adds a specific data source we want aggregate data from for this reques. Return type is Data Read Request. Builder and parameters are data source. builder used to create new data read requests,neither,neither,neither,sink
5643,DataReadRequest.Builder_aggregate,aggregate from data read request builder adds the default data source for the given aggregate data type to this reques. Return type is Data Read Request. Builder and parameters are data type. builder used to create new data read requests,neither,neither,neither,sink
5644,DataReadRequest.Builder_aggregate,aggregate from data read request builder deprecate. Return type is Data Read Request. Builder and parameters are data source data type. builder used to create new data read requests,neither,neither,neither,sink
5645,DataReadRequest.Builder_aggregate,aggregate from data read request builder deprecate. Return type is Data Read Request. Builder and parameters are data type data type. builder used to create new data read requests,neither,neither,neither,sink
5646,DataReadRequest.Builder_bucketByActivitySegment,"bucket by activity segment from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ s e g m e n t, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for the bucke. Return type is Data Read Request. Builder and parameters are int time unit data source. builder used to create new data read requests",neither,neither,neither,source
5647,DataReadRequest.Builder_bucketByActivitySegment,"bucket by activity segment from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ s e g m e n t, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for the bucke. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests",neither,neither,neither,source
5648,DataReadRequest.Builder_bucketByActivityType,"bucket by activity type from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ t y p e, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for computing the buckets and sets the activity data source to be used to read activity segments fro. Return type is Data Read Request. Builder and parameters are int time unit data source. builder used to create new data read requests",source,neither,source,source
5649,DataReadRequest.Builder_bucketByActivityType,"bucket by activity type from data read request builder specifies bucket type as t y p e_ a c t i v i t y_ t y p e, sets the minimum duration of each t y p e_ a c t i v i t y_ s e g m e n t for computing the bucket. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests",neither,neither,source,source
5650,DataReadRequest.Builder_bucketBySession,bucket by session from data read request builder specifies bucket type as t y p e_ s e s s i o n and sets the minimum duration of each session for the bucke. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests,source,neither,source,source
5651,DataReadRequest.Builder_bucketByTime,bucket by time from data read request builder specifies bucket type as t y p e_ t i m e and sets the duration of each bucke. Return type is Data Read Request. Builder and parameters are int time unit. builder used to create new data read requests,neither,neither,neither,source
5652,DataReadRequest.Builder_build,build from data read request builder finishes building and returns the reques. Return type is Data Read Request and no argument. builder used to create new data read requests,neither,neither,neither,neither
5653,DataReadRequest.Builder_enableServerQueries,"enable server queries from data read request builder enable querying the google fit server to fetch query results, in case the local store doesn't have data for the full requested time rang. Return type is Data Read Request. Builder and no argument. builder used to create new data read requests",neither,neither,source,source
5654,DataReadRequest.Builder_read,read from data read request builder adds a specific data source we want to read data from to this reques. Return type is Data Read Request. Builder and parameters are data source. builder used to create new data read requests,source,source,source,source
5655,DataReadRequest.Builder_read,read from data read request builder adds the default data source to read for the given data type to this reques. Return type is Data Read Request. Builder and parameters are data type. builder used to create new data read requests,source,source,source,source
5656,DataReadRequest.Builder_setLimit,set limit from data read request builder limits results to the latest limit data point. Return type is Data Read Request. Builder and parameters are int. builder used to create new data read requests,sink,sink,sink,sink
5657,DataReadRequest.Builder_setTimeRange,set time range from data read request builder sets the time range for our quer. Return type is Data Read Request. Builder and parameters are long long time unit. builder used to create new data read requests,sink,sink,sink,sink
5658,DataSourcesRequest.Builder_build,build from data sources request builder finishes building and returns the reques. Return type is Data Sources Request and no argument. builder used to create new data source requests,neither,neither,neither,neither
5659,DataSourcesRequest.Builder_setDataSourceTypes,set data source types from data sources request builder sets the data source types that should be searched for in the data sources reques. Return type is Data Sources Request. Builder and parameters are int   . builder used to create new data source requests,sink,sink,sink,sink
5660,DataSourcesRequest.Builder_setDataTypes,set data types from data sources request builder sets the desired data types to search for on the data sources reques. Return type is Data Sources Request. Builder and parameters are data type   . builder used to create new data source requests,sink,sink,sink,sink
5661,DataTypeCreateRequest.Builder_addField,add field from data type create request builder adds a new field with the specified name and format to the new data typ. Return type is Data Type Create Request. Builder and parameters are string int. builder used to create new data type insert requests,sink,sink,neither,sink
5662,DataTypeCreateRequest.Builder_addField,add field from data type create request builder adds the specified field to the new data typ. Return type is Data Type Create Request. Builder and parameters are field. builder used to create new data type insert requests,sink,sink,neither,sink
5663,DataTypeCreateRequest.Builder_build,build from data type create request builder finishes building and returns the reques. Return type is Data Type Create Request and no argument. builder used to create new data type insert requests,neither,neither,neither,neither
5664,DataTypeCreateRequest.Builder_setName,set name from data type create request builder set the name for the new data typ. Return type is Data Type Create Request. Builder and parameters are string. builder used to create new data type insert requests,sink,sink,sink,sink
5665,DataUpdateListenerRegistrationRequest.Builder_build,build from data update listener registration request builder builds the data update listener registration request object from the builde. Return type is Data Update Listener Registration Request and no argument. builder for creating data update listener registration request,neither,neither,neither,neither
5666,DataUpdateListenerRegistrationRequest.Builder_setDataSource,set data source from data update listener registration request builder sets the data source for which we want to listen for data update. Return type is Data Update Listener Registration Request. Builder and parameters are data source. builder for creating data update listener registration request,sink,sink,sink,sink
5667,DataUpdateListenerRegistrationRequest.Builder_setDataType,set data type from data update listener registration request builder sets the data type for which we want to listen for data update. Return type is Data Update Listener Registration Request. Builder and parameters are data type. builder for creating data update listener registration request,sink,sink,sink,neither
5668,DataUpdateListenerRegistrationRequest.Builder_setPendingIntent,set pending intent from data update listener registration request builder sets the pending intent which will receive data update notification for update. Return type is Data Update Listener Registration Request. Builder and parameters are pending intent. builder for creating data update listener registration request,sink,sink,sink,sink
5669,DataUpdateRequest.Builder_build,build from data update request builder finishes building and returns the reques. Return type is Data Update Request and no argument. builder used to create new data update requests,neither,neither,neither,neither
5670,DataUpdateRequest.Builder_setDataSet,set data set from data update request builder sets the data set for the data update quer. Return type is Data Update Request. Builder and parameters are data set. builder used to create new data update requests,sink,sink,sink,sink
5671,DataUpdateRequest.Builder_setTimeInterval,set time interval from data update request builder sets the time interval for the data update quer. Return type is Data Update Request. Builder and parameters are long long time unit. builder used to create new data update requests,sink,sink,sink,sink
5672,GoalsReadRequest.Builder_addActivity,add activity from goals read request builder adds a specific activity to this reques. Return type is Goals Read Request. Builder and parameters are string. builder used to create new goals read request,neither,neither,neither,sink
5673,GoalsReadRequest.Builder_addDataType,add data type from goals read request builder adds a specific data type to this reques. Return type is Goals Read Request. Builder and parameters are data type. builder used to create new goals read request,neither,neither,neither,neither
5674,GoalsReadRequest.Builder_addObjectiveType,add objective type from goals read request builder adds a objective type to this reques. Return type is Goals Read Request. Builder and parameters are int. builder used to create new goals read request,neither,neither,neither,neither
5675,GoalsReadRequest.Builder_build,build from goals read request builder finishes building and returns the reques. Return type is Goals Read Request and no argument. builder used to create new goals read request,neither,neither,neither,neither
5676,SensorRequest.Builder_build,build from sensor request builder finishes building and returns the reques. Return type is Sensor Request and no argument. builder used to create new sensor requests,neither,neither,neither,neither
5677,SensorRequest.Builder_setAccuracyMode,set accuracy mode from sensor request builder sets the accuracy polic. Return type is Sensor Request. Builder and parameters are int. builder used to create new sensor requests,sink,sink,sink,sink
5678,SensorRequest.Builder_setDataSource,set data source from sensor request builder sets the specific data source for this registratio. Return type is Sensor Request. Builder and parameters are data source. builder used to create new sensor requests,sink,sink,sink,sink
5679,SensorRequest.Builder_setDataType,set data type from sensor request builder sets the data type for the reques. Return type is Sensor Request. Builder and parameters are data type. builder used to create new sensor requests,sink,sink,sink,sink
5680,SensorRequest.Builder_setFastestRate,"set fastest rate from sensor request builder sets the fastest interval between two consecutive data points, in the given uni. Return type is Sensor Request. Builder and parameters are int time unit. builder used to create new sensor requests",sink,sink,sink,sink
5681,SensorRequest.Builder_setMaxDeliveryLatency,set max delivery latency from sensor request builder sets the maximum latency between a data point being detected and reported to the applicatio. Return type is Sensor Request. Builder and parameters are int time unit. builder used to create new sensor requests,sink,sink,sink,sink
5682,SensorRequest.Builder_setSamplingRate,"set sampling rate from sensor request builder sets the desired interval between two consecutive data points, in the given uni. Return type is Sensor Request. Builder and parameters are long time unit. builder used to create new sensor requests",sink,sink,sink,sink
5683,SensorRequest.Builder_setTimeout,set timeout from sensor request builder sets the timeout for the registration for the sensor request to expir. Return type is Sensor Request. Builder and parameters are long time unit. builder used to create new sensor requests,sink,sink,sink,sink
5684,SessionInsertRequest.Builder_addAggregateDataPoint,add aggregate data point from session insert request builder adds the specified aggregate data point to this reques. Return type is Session Insert Request. Builder and parameters are data point. builder used to create new session insert request,sink,sink,sink,sink
5685,SessionInsertRequest.Builder_addDataSet,add data set from session insert request builder adds the specified data set to this reques. Return type is Session Insert Request. Builder and parameters are data set. builder used to create new session insert request,sink,sink,sink,sink
5686,SessionInsertRequest.Builder_build,build from session insert request builder finishes building and returns the reques. Return type is Session Insert Request and no argument. builder used to create new session insert request,neither,neither,neither,neither
5687,SessionInsertRequest.Builder_setSession,set session from session insert request builder sets the session for this reques. Return type is Session Insert Request. Builder and parameters are session. builder used to create new session insert request,sink,sink,sink,sink
5688,SessionReadRequest.Builder_build,build from session read request builder finishes building and returns the reques. Return type is Session Read Request and no argument. builder used to create a new session read request,neither,neither,neither,neither
5689,SessionReadRequest.Builder_enableServerQueries,"enable server queries from session read request builder enable querying the google fit server to fetch query results, in case the local store doesn't have data for the full requested time rang. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request",source,neither,source,source
5690,SessionReadRequest.Builder_excludePackage,exclude package from session read request builder exclude sessions from a particular package name from the read resul. Return type is Session Read Request. Builder and parameters are string. builder used to create a new session read request,neither,neither,neither,source
5691,SessionReadRequest.Builder_includeActivitySessions,include activity sessions from session read request builder requests to include activity session. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request,neither,neither,source,sink
5692,SessionReadRequest.Builder_includeSleepSessions,include sleep sessions from session read request builder requests to include sleep session. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request,neither,neither,neither,neither
5693,SessionReadRequest.Builder_read,read from session read request builder reads data from a given data source for each session selected by this reques. Return type is Session Read Request. Builder and parameters are data source. builder used to create a new session read request,source,source,source,source
5694,SessionReadRequest.Builder_read,read from session read request builder reads data from the default data source of the given data type for each session selected by this reques. Return type is Session Read Request. Builder and parameters are data type. builder used to create a new session read request,source,source,source,source
5695,SessionReadRequest.Builder_readSessionsFromAllApps,read sessions from all apps from session read request builder enables reading sessions inserted by any ap. Return type is Session Read Request. Builder and no argument. builder used to create a new session read request,source,source,source,source
5696,SessionReadRequest.Builder_setSessionId,set session id from session read request builder adds an optional session identifier to this reques. Return type is Session Read Request. Builder and parameters are string. builder used to create a new session read request,sink,sink,sink,sink
5697,SessionReadRequest.Builder_setSessionName,set session name from session read request builder adds an optional session name to this reques. Return type is Session Read Request. Builder and parameters are string. builder used to create a new session read request,sink,sink,sink,sink
5698,SessionReadRequest.Builder_setTimeInterval,"set time interval from session read request builder sets the time range for the sessions we want to select in our query, in a specific time uni. Return type is Session Read Request. Builder and parameters are long long time unit. builder used to create a new session read request",sink,sink,sink,sink
5699,StartBleScanRequest.Builder_build,build from start ble scan request builder finishes building and returns the reques. Return type is Start Ble Scan Request and no argument. builder used to create new data source requests,neither,neither,neither,neither
5700,StartBleScanRequest.Builder_setBleScanCallback,set ble scan callback from start ble scan request builder sets the callback to be used when devices are foun. Return type is Start Ble Scan Request. Builder and parameters are ble scan callback. builder used to create new data source requests,sink,sink,sink,sink
5701,StartBleScanRequest.Builder_setDataTypes,set data types from start ble scan request builder sets the desired data types to search for on the ble sca. Return type is Start Ble Scan Request. Builder and parameters are data type   . builder used to create new data source requests,sink,sink,sink,sink
5702,StartBleScanRequest.Builder_setTimeoutSecs,"set timeout secs from start ble scan request builder sets how long to wait before automatically stopping the scan, in second. Return type is Start Ble Scan Request. Builder and parameters are int. builder used to create new data source requests",sink,sink,sink,sink
5703,DataBufferAdapter<T>_append,append from data buffer adapter< t> appends the specified buffer to the end of the adapte. Return type is void and parameters are data buffer. a concrete base adapter that is backed by concatenated data buffers,neither,neither,neither,neither
5704,DataBufferAdapter<T>_clear,"clear from data buffer adapter< t> closes and removes all buffers, and so all elements, from the adapte. Return type is void and no argument. a concrete base adapter that is backed by concatenated data buffers",neither,neither,neither,neither
5705,DataBufferAdapter<T>_getContext,get context from data buffer adapter< t> . a concrete base adapter that is backed by concatenated data buffers,source,source,source,source
5706,DataBufferAdapter<T>_getCount,get count from data buffer adapter< t> . a concrete base adapter that is backed by concatenated data buffers,source,source,source,source
5707,DataBufferAdapter<T>_getDropDownView,get drop down view from data buffer adapter< t> . a concrete base adapter that is backed by concatenated data buffers,source,source,source,neither
5708,DataBufferAdapter<T>_getItem,get item from data buffer adapter< t> . a concrete base adapter that is backed by concatenated data buffers,source,source,source,source
5709,DataBufferAdapter<T>_getItemId,get item id from data buffer adapter< t> . a concrete base adapter that is backed by concatenated data buffers,source,source,source,source
5710,DataBufferAdapter<T>_getView,get view from data buffer adapter< t> . a concrete base adapter that is backed by concatenated data buffers,source,source,source,source
5711,DataBufferAdapter<T>_notifyDataSetChanged,notify data set changed from data buffer adapter< t> this will also re-enable automatic notification. Return type is void and no argument. a concrete base adapter that is backed by concatenated data buffers,sink,sink,sink,sink
5712,DataBufferAdapter<T>_setDropDownViewResource,set drop down view resource from data buffer adapter< t> sets the layout resource to create the drop down view. Return type is void and parameters are int. a concrete base adapter that is backed by concatenated data buffers,sink,sink,sink,sink
5713,DataBufferAdapter<T>_setNotifyOnChange,set notify on change from data buffer adapter< t> control whether methods that change the lis. Return type is void and parameters are boolean. a concrete base adapter that is backed by concatenated data buffers,sink,sink,sink,sink
5714,PlayerStats_getAverageSessionLength,get average session length from player stats the average session length of the player in minute. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5715,PlayerStats_getChurnProbability,get churn probability from player stats deprecate. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5716,PlayerStats_getDaysSinceLastPlayed,get days since last played from player stats the approximate number of days since the player last playe. Return type is  int and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5717,PlayerStats_getHighSpenderProbability,get high spender probability from player stats deprecate. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5718,PlayerStats_getNumberOfPurchases,get number of purchases from player stats the approximate number of in-app purchases for the playe. Return type is  int and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5719,PlayerStats_getNumberOfSessions,get number of sessions from player stats the approximate number of sessions of the playe. Return type is  int and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5720,PlayerStats_getSessionPercentile,get session percentile from player stats the approximation of sessions percentile for the playe. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5721,PlayerStats_getSpendPercentile,get spend percentile from player stats the approximate spend percentile of the playe. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5722,PlayerStats_getSpendProbability,get spend probability from player stats deprecate. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5723,PlayerStats_getTotalSpendNext28Days,get total spend next28 days from player stats deprecate. Return type is  float and no argument. the player stats api allows you to retrieve information about the player's activity in your application,source,source,source,source
5724,Stats_loadPlayerStats,load player stats from stats asynchronously load the player stats data for the currently signed-in player and game into a single resul. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use player stats client instea,source,neither,neither,sink
5725,Stats.LoadPlayerStatsResult_getPlayerStats,get player stats from stats load player stats result retrieves the player stat. Return type is Player Stats and no argument. this interface is deprecated  player stats is returned directly in the player stats client,source,source,source,source
5726,Stats.LoadPlayerStatsResult_getPlayerStats,get player stats from stats load player stats result retrieves the player stat. Return type is Player Stats and no argument. this interface is deprecated  player stats is returned directly in the player stats client,source,source,source,source
5727,Container_getBoolean,get boolean from container returns a boolean representing the configuration value for the given ke. Return type is boolean and parameters are string. an object that provides access to container values,source,source,source,source
5728,Container_getContainerId,get container id from container returns the container i. Return type is String and no argument. an object that provides access to container values,source,source,source,source
5729,Container_getDouble,get double from container returns a double representing the configuration value for the given ke. Return type is double and parameters are string. an object that provides access to container values,source,source,source,source
5730,Container_getLastRefreshTime,get last refresh time from container returns the last tim. Return type is long and no argument. an object that provides access to container values,source,source,source,source
5731,Container_getLong,get long from container returns a long representing the configuration value for the given ke. Return type is long and parameters are string. an object that provides access to container values,source,source,source,source
5732,Container_getString,get string from container returns a string representing the configuration value for the given ke. Return type is String and parameters are string. an object that provides access to container values,source,source,source,source
5733,Container_isDefault,"is default from container returns whether this is a default container, or one refreshed from the serve. Return type is boolean and no argument. an object that provides access to container values",neither,neither,neither,neither
5734,Container_registerFunctionCallMacroCallback,register function call macro callback from container registers the given macro callback to handle a given function call macr. Return type is void and parameters are string container function call macro callback. an object that provides access to container values,neither,neither,neither,neither
5735,Container_registerFunctionCallTagCallback,register function call tag callback from container registers the tag callback to handle a given function call ta. Return type is void and parameters are string container function call tag callback. an object that provides access to container values,neither,neither,neither,neither
5736,Container_unregisterFunctionCallMacroCallback,unregister function call macro callback from container unregisters any macro callback for the given macr. Return type is void and parameters are string. an object that provides access to container values,neither,neither,neither,neither
5737,Container_unregisterFunctionCallTagCallback,unregister function call tag callback from container unregisters any tag callback for the given ta. Return type is void and parameters are string. an object that provides access to container values,neither,neither,neither,neither
5738,DataLayer_get,get from data layer returns the object in the model associated with the given ke. Return type is Object and parameters are string. the data layer is a map holding generic information about the application,source,source,source,source
5739,DataLayer_listOf,list of from data layer utility method that creates a lis. Return type is List and parameters are object   . the data layer is a map holding generic information about the application,neither,neither,neither,neither
5740,DataLayer_mapOf,map of from data layer utility method that creates a ma. Return type is Map and parameters are object   . the data layer is a map holding generic information about the application,neither,neither,neither,neither
5741,DataLayer_push,"push from data layer merges the given update object into the existing data model, calling any listeners with the updat. Return type is void and parameters are map< string object>. the data layer is a map holding generic information about the application",neither,neither,neither,neither
5742,DataLayer_push,push from data layer pushes a key/value pair of data to the data laye. Return type is void and parameters are string object. the data layer is a map holding generic information about the application,sink,sink,neither,neither
5743,DataLayer_pushEvent,"push event from data layer pushes an event, along with an update map, to the data laye. Return type is void and parameters are string map< string object>. the data layer is a map holding generic information about the application",neither,neither,neither,neither
5744,DataLayer_toString,to string from data layer returns a human readable string representing the data layer objec. Return type is String and no argument. the data layer is a map holding generic information about the application,source,source,source,source
5745,PreviewActivity_onCreate,on create from preview activity prepares for previewing a non-published container and then launches the launch activity for this packag. Return type is void and parameters are bundle. an activity to preview the app with previewed container version,neither,neither,neither,neither
5746,TagManager_dispatch,dispatch from tag manager manually dispatches queued event. Return type is void and no argument. this is the mobile implementation of google tag manager,neither,neither,neither,neither
5747,TagManager_getDataLayer,get data layer from tag manager returns the data layer object that is used by the tag manage. Return type is Data Layer and no argument. this is the mobile implementation of google tag manager,source,source,source,source
5748,TagManager_getInstance,"get instance from tag manager get the singleton instance of the tag manager class, creating it if necessar. Return type is Tag Manager and parameters are context. this is the mobile implementation of google tag manager",source,source,source,source
5749,TagManager_loadContainerDefaultOnly,"load container default only from tag manager the container holder will be available from the returned pending result as soon as either of the following happens: the default container is loaded, or no default container is foun. Return type is Pending Result and parameters are string int. this is the mobile implementation of google tag manager",neither,neither,neither,source
5750,TagManager_loadContainerDefaultOnly,"load container default only from tag manager the container holder will be available from the returned pending result as soon as either of the following happens: the default container is loaded, or no default container is foun. Return type is Pending Result and parameters are string int handler. this is the mobile implementation of google tag manager",neither,neither,neither,neither
5751,TagManager_loadContainerPreferFresh,"load container prefer fresh from tag manager the container holder will be available from the returned pending result as soon as one of the following happens: a saved container which has been recently refreshed is loaded, a network container is loaded or a network error occurs, or a timeout occur. Return type is Pending Result and parameters are string int. this is the mobile implementation of google tag manager",neither,neither,neither,neither
5752,TagManager_loadContainerPreferFresh,"load container prefer fresh from tag manager the container holder will be available from the returned pending result as soon as one of the following happens: a saved container which has been recently refreshed is loaded, a network container is loaded or a network error occurs, or a timeout occur. Return type is Pending Result and parameters are string int handler. this is the mobile implementation of google tag manager",neither,neither,neither,neither
5753,TagManager_loadContainerPreferNonDefault,"load container prefer non default from tag manager the container holder will be available from the returned pending result as soon as one of the following happens: a saved container is loaded, or if there is no saved container, a network container is loaded or a network error occurs, or a timeout occur. Return type is Pending Result and parameters are string int. this is the mobile implementation of google tag manager",neither,neither,neither,sink
5754,TagManager_loadContainerPreferNonDefault,"load container prefer non default from tag manager the container holder will be available from the returned pending result as soon as one of the following happens: a saved container is loaded, if there is no saved container, a network container is loaded or a network error occurs, or a timeout occur. Return type is Pending Result and parameters are string int handler. this is the mobile implementation of google tag manager",neither,neither,neither,sink
5755,TagManager_setVerboseLoggingEnabled,set verbose logging enabled from tag manager sets whether or not verbose logging is enable. Return type is void and parameters are boolean. this is the mobile implementation of google tag manager,sink,sink,sink,sink
5756,TagManagerPreviewActivity_onCreate,on create from tag manager preview activity prepares for previewing a non-published container and then launches the launch activity for this packag. Return type is void and parameters are bundle. an activity to preview or stop previewing a google tag manager container,neither,neither,neither,neither
5757,TagManagerService_onBind,on bind from tag manager service . a service used by tag manager to process and send tags,neither,neither,neither,neither
5758,Container.FunctionCallMacroCallback_getValue,get value from container function call macro callback callback is given the function name of the macro and a map of named parameter. Return type is Object and parameters are string map< string object>. callback that is provided by the application to calculate the value of a custom macro,source,source,source,source
5759,Container.FunctionCallTagCallback_execute,execute from container function call tag callback callback is given the function name of the macro and a map of named parameter. Return type is  void and parameters are string map< string object>. callback that is provided by the application to execute a custom tag,sink,sink,sink,sink
5760,ContainerHolder_getContainer,get container from container holder returns the last loaded containe. Return type is Container and no argument. holder for an active container,source,source,source,source
5761,ContainerHolder_refresh,refresh from container holder requests a refresh from the networ. Return type is  void and no argument. holder for an active container,neither,neither,neither,neither
5762,ContainerHolder_setContainerAvailableListener,set container available listener from container holder sets a listener that will be called when a new container becomes availabl. Return type is  void and parameters are container holder container available listener. holder for an active container,sink,sink,sink,sink
5763,ContainerHolder.ContainerAvailableListener_onContainerAvailable,on container available from container holder container available listener called to signify that a new container is available in the container holde. Return type is  void and parameters are container holder string. listener object that is called when a new container is available,neither,neither,neither,neither
5764,CustomTagProvider_execute,"execute from custom tag provider execu. Return type is 




                void and parameters are map< string object>. callback that is provided by the application to execute a custom tag",sink,sink,sink,sink
5765,CustomVariableProvider_getValue,get value from custom variable provider get val. Return type is String and parameters are map< string object>. callback that is provided by the application to provide a custom variable,source,source,source,source
5766,Container.FunctionCallMacroCallback_getValue,get value from container function call macro callback callback is given the function name of the macro and a map of named parameter. Return type is Object and parameters are string map< string object>. callback that is provided by the application to calculate the value of a custom macro,source,source,source,source
5767,Container.FunctionCallTagCallback_execute,execute from container function call tag callback callback is given the function name of the macro and a map of named parameter. Return type is  void and parameters are string map< string object>. callback that is provided by the application to execute a custom tag,sink,sink,sink,sink
5768,ContainerHolder.ContainerAvailableListener_onContainerAvailable,on container available from container holder container available listener called to signify that a new container is available in the container holde. Return type is  void and parameters are container holder string. listener object that is called when a new container is available,neither,neither,neither,neither
5769,InterstitialAd_getAdUnitId,"get ad unit id from interstitial ad returns the ad unit i. Return type is String and no argument. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",source,source,source,neither
5770,InterstitialAd_getFullScreenContentCallback,"get full screen content callback from interstitial ad gets the full screen content callback for this interstitial a. Return type is Full Screen Content Callback and no argument. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",source,source,source,source
5771,InterstitialAd_getOnPaidEventListener,"get on paid event listener from interstitial ad gets the on paid event listener for this interstitial a. Return type is On Paid Event Listener and no argument. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",source,source,source,neither
5772,InterstitialAd_getResponseInfo,"get response info from interstitial ad returns the response info object for the loaded a. Return type is Response Info and no argument. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",source,source,source,source
5773,InterstitialAd_load,"load from interstitial ad loads an interstitial a. Return type is  void and parameters are context string ad request interstitial ad load callback. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",neither,neither,neither,neither
5774,InterstitialAd_setFullScreenContentCallback,"set full screen content callback from interstitial ad registers a callback to be invoked when ads show and dismiss full screen conten. Return type is  void and parameters are full screen content callback. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",sink,sink,sink,neither
5775,InterstitialAd_setImmersiveMode,"set immersive mode from interstitial ad sets a flag that controls if this interstitial object will be displayed in immersive mod. Return type is  void and parameters are boolean. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",sink,sink,sink,neither
5776,InterstitialAd_setOnPaidEventListener,"set on paid event listener from interstitial ad registers a callback to be invoked when this ad is estimated to have earned mone. Return type is  void and parameters are on paid event listener. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",neither,neither,neither,neither
5777,InterstitialAd_show,"show from interstitial ad shows the interstitial a. Return type is  void and parameters are activity. a full page ad experience at natural transition points such as a page change, an app launch, or a game level load",neither,neither,neither,neither
5778,Barcode_getBoundingBox,get bounding box from barcode returns the barcode's axis-aligned bounding bo. Return type is Rect and no argument. barcode represents a single recognized barcode and its value,source,source,source,source
5779,BarcodeDetector_detect,detect from barcode detector recognizes barcodes in the supplied fram. Return type is Sparse Array and parameters are frame. recognizes barcodes  in a supplied frame,source,neither,source,neither
5780,BarcodeDetector_isOperational,is operational from barcode detector . recognizes barcodes  in a supplied frame,neither,neither,neither,neither
5781,BarcodeDetector_release,release from barcode detector . recognizes barcodes  in a supplied frame,neither,neither,neither,neither
5782,BarcodeDetector.Builder_build,build from barcode detector builder builds a barcode detector instance using the provided setting. Return type is Barcode Detector and no argument. barcode detector builder,neither,neither,neither,neither
5783,BarcodeDetector.Builder_setBarcodeFormats,set barcode formats from barcode detector builder bit mas. Return type is Barcode Detector. Builder and parameters are int. barcode detector builder,sink,sink,sink,sink
5784,BarcodeDetector.Builder_build,build from barcode detector builder builds a barcode detector instance using the provided setting. Return type is Barcode Detector and no argument. barcode detector builder,neither,neither,neither,neither
5785,BarcodeDetector.Builder_setBarcodeFormats,set barcode formats from barcode detector builder bit mas. Return type is Barcode Detector. Builder and parameters are int. barcode detector builder,sink,sink,sink,sink
5786,AccountPicker_newChooseAccountIntent,new choose account intent from account picker returns an intent to an activity that prompts the user to choose from a list of account. Return type is Intent and parameters are account picker account chooser options. common account picker similar to the standard framework account picker introduced in i c s: new choose account intent,neither,neither,neither,neither
5787,AccountPicker_newChooseAccountIntent,new choose account intent from account picker deprecate. Return type is Intent and parameters are account array list string[] boolean string string string[] bundle. common account picker similar to the standard framework account picker introduced in i c s: new choose account intent,neither,neither,neither,neither
5788,AccountPicker.AccountChooserOptions.Builder_build,build from account picker account chooser options builder builds an instance of account picker account chooser option. Return type is Account Picker. Account Chooser Options and no argument. the builder for creating an instance of the account picker account chooser options,neither,neither,neither,neither
5789,AccountPicker.AccountChooserOptions.Builder_setAllowableAccounts,set allowable accounts from account picker account chooser options builder a list of accounts that limit the accounts that are shown in the account picker to those in this lis. Return type is Account Picker. Account Chooser Options. Builder and parameters are list. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5790,AccountPicker.AccountChooserOptions.Builder_setAllowableAccountsTypes,set allowable accounts types from account picker account chooser options builder sets the type of allowed types of account. Return type is Account Picker. Account Chooser Options. Builder and parameters are list. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5791,AccountPicker.AccountChooserOptions.Builder_setAlwaysShowAccountPicker,set always show account picker from account picker account chooser options builder if true then shows the account picker even if there is just one account to choose fro. Return type is Account Picker. Account Chooser Options. Builder and parameters are boolean. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,neither
5792,AccountPicker.AccountChooserOptions.Builder_setOptionsForAddingAccount,set options for adding account from account picker account chooser options builder sets the options to be passed as the add account options parameter in account manager#add accou. Return type is Account Picker. Account Chooser Options. Builder and parameters are bundle. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5793,AccountPicker.AccountChooserOptions.Builder_setSelectedAccount,"set selected account from account picker account chooser options builder sets the specified account to ""selected"" in the account picker if this account is shown ther. Return type is Account Picker. Account Chooser Options. Builder and parameters are account. the builder for creating an instance of the account picker account chooser options",sink,sink,sink,sink
5794,AccountPicker.AccountChooserOptions.Builder_setTitleOverrideText,set title override text from account picker account chooser options builder overrides the default title of the account picke. Return type is Account Picker. Account Chooser Options. Builder and parameters are string. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,neither
5795,ConnectionResult_equals,equals from connection result . contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5796,ConnectionResult_getErrorCode,get error code from connection result indicates the type of error that interrupted connectio. Return type is int and no argument. contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5797,ConnectionResult_getErrorMessage,get error message from connection result returns an error message for connection resul. Return type is String and no argument. contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5798,ConnectionResult_getResolution,get resolution from connection result a pending intent to resolve the connection failur. Return type is Pending Intent and no argument. contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5799,ConnectionResult_hasResolution,has resolution from connection result returns true if calling start resolution for resu. Return type is boolean and no argument. contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5800,ConnectionResult_hashCode,hash code from connection result . contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5801,ConnectionResult_isSuccess,is success from connection result returns true if the connection was successfu. Return type is boolean and no argument. contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5802,ConnectionResult_startResolutionForResult,start resolution for result from connection result resolves an error by starting any intents requiring user interactio. Return type is void and parameters are activity int. contains all possible error codes for when a client fails to connect to google play services,neither,neither,neither,sink
5803,ConnectionResult_toString,to string from connection result . contains all possible error codes for when a client fails to connect to google play services,source,source,source,source
5804,ConnectionResult_writeToParcel,write to parcel from connection result . contains all possible error codes for when a client fails to connect to google play services,sink,sink,sink,sink
5805,ErrorDialogFragment_newInstance,new instance from error dialog fragment create a dialog fragment for displaying the google api availabilityget error dial. Return type is Error Dialog Fragment and parameters are dialog dialog interface on cancel listener. wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5806,ErrorDialogFragment_newInstance,new instance from error dialog fragment create a dialog fragment for displaying the google api availabilityget error dial. Return type is Error Dialog Fragment and parameters are dialog. wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,sink
5807,ErrorDialogFragment_onCancel,on cancel from error dialog fragment . wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5808,ErrorDialogFragment_onCreateDialog,on create dialog from error dialog fragment returns a dialog created by google api availabilityget error dial. Return type is Dialog and parameters are bundle. wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5809,ErrorDialogFragment_show,show from error dialog fragment . wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,sink
5810,GoogleApiAvailability_checkApiAvailability,check api availability from google api availability checks the availability of the specified api. Return type is Task and parameters are has api key has api key   . helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5811,GoogleApiAvailability_checkApiAvailability,check api availability from google api availability checks the availability of the specified api. Return type is Task and parameters are google api google api   . helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5812,GoogleApiAvailability_getErrorDialog,get error dialog from google api availability returns a dialog to address the provided error cod. Return type is Dialog and parameters are activity int int. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5813,GoogleApiAvailability_getErrorDialog,get error dialog from google api availability returns a dialog to address the provided error cod. Return type is Dialog and parameters are fragment int int dialog interface on cancel listener. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5814,GoogleApiAvailability_getErrorDialog,get error dialog from google api availability returns a dialog to address the provided error cod. Return type is Dialog and parameters are activity int int dialog interface on cancel listener. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5815,GoogleApiAvailability_getErrorDialog,get error dialog from google api availability returns a dialog to address the provided error cod. Return type is Dialog and parameters are fragment int int. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5816,GoogleApiAvailability_getErrorResolutionPendingIntent,get error resolution pending intent from google api availability returns a pending intent to address the provided connection failur. Return type is Pending Intent and parameters are context connection result. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5817,GoogleApiAvailability_getErrorResolutionPendingIntent,get error resolution pending intent from google api availability returns a pending intent to address the provided error cod. Return type is Pending Intent and parameters are context int int. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5818,GoogleApiAvailability_getErrorString,get error string from google api availability returns a human-readable string of the error code returned from is google play services availab. Return type is String and parameters are int. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5819,GoogleApiAvailability_getInstance,get instance from google api availability returns the singleton instance of google api availabilit. Return type is Google Api Availability and no argument. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5820,GoogleApiAvailability_isGooglePlayServicesAvailable,"is google play services available from google api availability verifies that google play services is installed and enabled on this device, and that the version installed on this device is no older than the one required by this clien. Return type is int and parameters are context. helper class for verifying that the google play services apk is available and up to date on this device",source,source,source,source
5821,GoogleApiAvailability_isGooglePlayServicesAvailable,"is google play services available from google api availability verifies that google play services is installed and enabled on this device, and that the version installed on this device is no older than the one required by this client or the version is not older than the one specified in min apk versio. Return type is int and parameters are context int. helper class for verifying that the google play services apk is available and up to date on this device",source,source,source,source
5822,GoogleApiAvailability_isUserResolvableError,is user resolvable error from google api availability determines whether an error can be resolved via user actio. Return type is final boolean and parameters are int. helper class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5823,GoogleApiAvailability_makeGooglePlayServicesAvailable,make google play services available from google api availability attempts to make google play services available on this devic. Return type is Task and parameters are activity. helper class for verifying that the google play services apk is available and up to date on this device,sink,sink,neither,sink
5824,GoogleApiAvailability_setDefaultNotificationChannelId,set default notification channel id from google api availability overrides the default notification channel for google play services availability notification. Return type is void and parameters are context string. helper class for verifying that the google play services apk is available and up to date on this device,sink,sink,sink,sink
5825,GoogleApiAvailability_showErrorDialogFragment,show error dialog fragment from google api availability displays a dialog fragment for an error code returned by is google play services availab. Return type is boolean and parameters are activity int int. helper class for verifying that the google play services apk is available and up to date on this device,source,neither,source,source
5826,GoogleApiAvailability_showErrorDialogFragment,show error dialog fragment from google api availability displays a dialog fragment for an error code returned by is google play services availab. Return type is boolean and parameters are activity int int dialog interface on cancel listener. helper class for verifying that the google play services apk is available and up to date on this device,neither,neither,neither,source
5827,GoogleApiAvailability_showErrorNotification,show error notification from google api availability displays a notification for an error code returned from is google play services availab. Return type is void and parameters are context int. helper class for verifying that the google play services apk is available and up to date on this device,source,neither,neither,source
5828,GoogleApiAvailability_showErrorNotification,"show error notification from google api availability displays a notification for a connection failure, if it is resolvable by the use. Return type is void and parameters are context connection result. helper class for verifying that the google play services apk is available and up to date on this device",neither,neither,neither,source
5829,GooglePlayServicesUtil_getErrorDialog,get error dialog from google play services util deprecate. Return type is Dialog and parameters are int activity int. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5830,GooglePlayServicesUtil_getErrorDialog,get error dialog from google play services util deprecate. Return type is Dialog and parameters are int activity int dialog interface on cancel listener. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5831,GooglePlayServicesUtil_getErrorPendingIntent,get error pending intent from google play services util deprecate. Return type is Pending Intent and parameters are int context int. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5832,GooglePlayServicesUtil_getErrorString,get error string from google play services util deprecate. Return type is String and parameters are int. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5833,GooglePlayServicesUtil_getOpenSourceSoftwareLicenseInfo,get open source software license info from google play services util deprecate. Return type is String and parameters are context. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5834,GooglePlayServicesUtil_getRemoteContext,get remote context from google play services util this gets the context object of the buddy ap. Return type is Context and parameters are context. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5835,GooglePlayServicesUtil_getRemoteResource,get remote resource from google play services util this gets the resources object of the buddy ap. Return type is Resources and parameters are context. utility class for verifying that the google play services apk is available and up to date on this device,source,source,source,source
5836,GooglePlayServicesUtil_isGooglePlayServicesAvailable,is google play services available from google play services util deprecate. Return type is  int and parameters are context. utility class for verifying that the google play services apk is available and up to date on this device,source,source,neither,source
5837,GooglePlayServicesUtil_isGooglePlayServicesAvailable,is google play services available from google play services util deprecate. Return type is  int and parameters are context int. utility class for verifying that the google play services apk is available and up to date on this device,source,source,neither,source
5838,GooglePlayServicesUtil_isUserRecoverableError,is user recoverable error from google play services util deprecate. Return type is  boolean and parameters are int. utility class for verifying that the google play services apk is available and up to date on this device,neither,neither,neither,source
5839,GooglePlayServicesUtil_showErrorDialogFragment,show error dialog fragment from google play services util deprecate. Return type is  boolean and parameters are int activity int dialog interface on cancel listener. utility class for verifying that the google play services apk is available and up to date on this device,neither,neither,neither,neither
5840,GooglePlayServicesUtil_showErrorDialogFragment,show error dialog fragment from google play services util . utility class for verifying that the google play services apk is available and up to date on this device,neither,neither,neither,source
5841,GooglePlayServicesUtil_showErrorDialogFragment,show error dialog fragment from google play services util deprecate. Return type is  boolean and parameters are int activity int. utility class for verifying that the google play services apk is available and up to date on this device,neither,neither,neither,source
5842,GooglePlayServicesUtil_showErrorNotification,show error notification from google play services util deprecate. Return type is  void and parameters are int context. utility class for verifying that the google play services apk is available and up to date on this device,neither,neither,neither,source
5843,SignInButton_onClick,on click from sign in button . the google sign in button to authenticate the user,neither,neither,neither,neither
5844,SignInButton_setColorScheme,set color scheme from sign in button set the color scheme of the button to us. Return type is void and parameters are int. the google sign in button to authenticate the user,sink,sink,neither,sink
5845,SignInButton_setEnabled,set enabled from sign in button . the google sign in button to authenticate the user,sink,sink,sink,sink
5846,SignInButton_setOnClickListener,set on click listener from sign in button . the google sign in button to authenticate the user,sink,sink,neither,neither
5847,SignInButton_setScopes,set scopes from sign in button deprecate. Return type is void and parameters are scope[]. the google sign in button to authenticate the user,sink,sink,neither,sink
5848,SignInButton_setSize,set size from sign in button set the size of the button to us. Return type is void and parameters are int. the google sign in button to authenticate the user,sink,sink,sink,sink
5849,SignInButton_setStyle,set style from sign in button deprecate. Return type is void and parameters are int int scope[]. the google sign in button to authenticate the user,sink,sink,sink,sink
5850,SignInButton_setStyle,set style from sign in button set the desired style of button to us. Return type is void and parameters are int int. the google sign in button to authenticate the user,sink,sink,neither,sink
5851,SupportErrorDialogFragment_newInstance,new instance from support error dialog fragment create a dialog fragment for displaying the google api availabilityget error dial. Return type is Support Error Dialog Fragment and parameters are dialog dialog interface on cancel listener. wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5852,SupportErrorDialogFragment_newInstance,new instance from support error dialog fragment create a dialog fragment for displaying the google api availabilityget error dial. Return type is Support Error Dialog Fragment and parameters are dialog. wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,sink
5853,SupportErrorDialogFragment_onCancel,on cancel from support error dialog fragment . wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5854,SupportErrorDialogFragment_onCreateDialog,on create dialog from support error dialog fragment returns a dialog created by google api availabilityget error dial. Return type is Dialog and parameters are bundle. wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5855,SupportErrorDialogFragment_show,show from support error dialog fragment . wraps the dialog returned by google api availability get error dialog by using dialog fragment so that it can be properly managed by the activity,neither,neither,neither,neither
5856,AccountPicker.AccountChooserOptions.Builder_build,build from account picker account chooser options builder builds an instance of account picker account chooser option. Return type is Account Picker. Account Chooser Options and no argument. the builder for creating an instance of the account picker account chooser options,neither,neither,neither,neither
5857,AccountPicker.AccountChooserOptions.Builder_setAllowableAccounts,set allowable accounts from account picker account chooser options builder a list of accounts that limit the accounts that are shown in the account picker to those in this lis. Return type is Account Picker. Account Chooser Options. Builder and parameters are list. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5858,AccountPicker.AccountChooserOptions.Builder_setAllowableAccountsTypes,set allowable accounts types from account picker account chooser options builder sets the type of allowed types of account. Return type is Account Picker. Account Chooser Options. Builder and parameters are list. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5859,AccountPicker.AccountChooserOptions.Builder_setAlwaysShowAccountPicker,set always show account picker from account picker account chooser options builder if true then shows the account picker even if there is just one account to choose fro. Return type is Account Picker. Account Chooser Options. Builder and parameters are boolean. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,neither
5860,AccountPicker.AccountChooserOptions.Builder_setOptionsForAddingAccount,set options for adding account from account picker account chooser options builder sets the options to be passed as the add account options parameter in account manager#add accou. Return type is Account Picker. Account Chooser Options. Builder and parameters are bundle. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5861,AccountPicker.AccountChooserOptions.Builder_setSelectedAccount,"set selected account from account picker account chooser options builder sets the specified account to ""selected"" in the account picker if this account is shown ther. Return type is Account Picker. Account Chooser Options. Builder and parameters are account. the builder for creating an instance of the account picker account chooser options",sink,sink,sink,sink
5862,AccountPicker.AccountChooserOptions.Builder_setTitleOverrideText,set title override text from account picker account chooser options builder overrides the default title of the account picke. Return type is Account Picker. Account Chooser Options. Builder and parameters are string. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,neither
5863,AccountPicker.AccountChooserOptions.Builder_build,build from account picker account chooser options builder builds an instance of account picker account chooser option. Return type is Account Picker. Account Chooser Options and no argument. the builder for creating an instance of the account picker account chooser options,neither,neither,neither,neither
5864,AccountPicker.AccountChooserOptions.Builder_setAllowableAccounts,set allowable accounts from account picker account chooser options builder a list of accounts that limit the accounts that are shown in the account picker to those in this lis. Return type is Account Picker. Account Chooser Options. Builder and parameters are list. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5865,AccountPicker.AccountChooserOptions.Builder_setAllowableAccountsTypes,set allowable accounts types from account picker account chooser options builder sets the type of allowed types of account. Return type is Account Picker. Account Chooser Options. Builder and parameters are list. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5866,AccountPicker.AccountChooserOptions.Builder_setAlwaysShowAccountPicker,set always show account picker from account picker account chooser options builder if true then shows the account picker even if there is just one account to choose fro. Return type is Account Picker. Account Chooser Options. Builder and parameters are boolean. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,neither
5867,AccountPicker.AccountChooserOptions.Builder_setOptionsForAddingAccount,set options for adding account from account picker account chooser options builder sets the options to be passed as the add account options parameter in account manager#add accou. Return type is Account Picker. Account Chooser Options. Builder and parameters are bundle. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,sink
5868,AccountPicker.AccountChooserOptions.Builder_setSelectedAccount,"set selected account from account picker account chooser options builder sets the specified account to ""selected"" in the account picker if this account is shown ther. Return type is Account Picker. Account Chooser Options. Builder and parameters are account. the builder for creating an instance of the account picker account chooser options",sink,sink,sink,sink
5869,AccountPicker.AccountChooserOptions.Builder_setTitleOverrideText,set title override text from account picker account chooser options builder overrides the default title of the account picke. Return type is Account Picker. Account Chooser Options. Builder and parameters are string. the builder for creating an instance of the account picker account chooser options,sink,sink,sink,neither
5870,AdapterResponseInfo_getAdError,get ad error from adapter response info gets the error that occurred while rendering the a. Return type is Ad Error and no argument. response information for an individual ad network in an ad response,source,source,source,source
5871,AdapterResponseInfo_getAdapterClassName,get adapter class name from adapter response info gets a class name that identifies the ad network adapte. Return type is String and no argument. response information for an individual ad network in an ad response,source,source,source,source
5872,AdapterResponseInfo_getCredentials,get credentials from adapter response info gets a bundle containing adapter credentials specified in the ad mob or ad manager u. Return type is Bundle and no argument. response information for an individual ad network in an ad response,source,source,source,source
5873,AdapterResponseInfo_getLatencyMillis,get latency millis from adapter response info gets the amount of time the ad network adapter spent loading an a. Return type is long and no argument. response information for an individual ad network in an ad response,source,source,source,source
5874,AdapterResponseInfo_toString,to string from adapter response info returns a log friendly string version of this objec. Return type is String and no argument. response information for an individual ad network in an ad response,source,source,source,neither
5875,AdError_getCause,get cause from ad error gets the cause of this error or null if the cause is nonexistent or unknow. Return type is Ad Error and no argument. error information about why an ad operation failed,source,source,source,source
5876,AdError_getCode,get code from ad error gets the error's cod. Return type is int and no argument. error information about why an ad operation failed,source,source,source,source
5877,AdError_getDomain,get domain from ad error gets the domain of the erro. Return type is String and no argument. error information about why an ad operation failed,source,source,source,source
5878,AdError_getMessage,get message from ad error gets the message describing the erro. Return type is String and no argument. error information about why an ad operation failed,source,source,source,source
5879,AdError_toString,to string from ad error returns a log friendly string version of this objec. Return type is String and no argument. error information about why an ad operation failed,source,source,source,neither
5880,AdInspectorError_getCode,get code from ad inspector error gets the error's cod. Return type is int and no argument. error information about why the ad inspector failed,source,source,source,neither
5881,AdListener_onAdClicked,on ad clicked from ad listener called when a click is recorded for an a. Return type is void and no argument. a listener for receiving notifications during the lifecycle of an ad,neither,neither,neither,neither
5882,AdListener_onAdClosed,on ad closed from ad listener called when the user is about to return to the application after clicking on an a. Return type is void and no argument. a listener for receiving notifications during the lifecycle of an ad,neither,neither,neither,neither
5883,AdListener_onAdFailedToLoad,on ad failed to load from ad listener called when an ad request faile. Return type is void and parameters are load ad error. a listener for receiving notifications during the lifecycle of an ad,neither,neither,neither,neither
5884,AdListener_onAdImpression,on ad impression from ad listener called when an impression is recorded for an a. Return type is void and no argument. a listener for receiving notifications during the lifecycle of an ad,neither,neither,neither,neither
5885,AdListener_onAdLoaded,on ad loaded from ad listener called when an ad is receive. Return type is void and no argument. a listener for receiving notifications during the lifecycle of an ad,neither,neither,neither,neither
5886,AdListener_onAdOpened,on ad opened from ad listener called when an ad opens an overlay that covers the scree. Return type is void and no argument. a listener for receiving notifications during the lifecycle of an ad,neither,neither,neither,neither
5887,AdLoadCallback<AdT>_onAdFailedToLoad,on ad failed to load from ad load callback< ad t> called when an ad fails to loa. Return type is void and parameters are load ad error. callback to be invoked when an ad finishes loading,neither,neither,neither,neither
5888,AdLoadCallback<AdT>_onAdLoaded,on ad loaded from ad load callback< ad t> called when an ad successfully load. Return type is void and parameters are ad t. callback to be invoked when an ad finishes loading,neither,neither,neither,neither
5889,AdLoader_isLoading,is loading from ad loader returns true if the ad is loadin. Return type is boolean and no argument. an object for requesting ads,source,neither,neither,neither
5890,AdLoader_loadAd,load ad from ad loader loads an a. Return type is void and parameters are ad request. an object for requesting ads,neither,neither,neither,neither
5891,AdLoader_loadAd,load ad from ad loader loads an a. Return type is void and parameters are ad manager ad request. an object for requesting ads,neither,neither,neither,neither
5892,AdLoader_loadAds,load ads from ad loader sends a request for max number of ads ad. Return type is void and parameters are ad request int. an object for requesting ads,sink,neither,sink,neither
5893,AdLoader.Builder_build,build from ad loader builder returns an ad loader or empty if there was an error was encountere. Return type is Ad Loader and no argument. builder for a ad loader,neither,neither,neither,neither
5894,AdLoader.Builder_forAdManagerAdView,for ad manager ad view from ad loader builder registers a listener to handle loading a google ad manager banner a. Return type is Ad Loader. Builder and parameters are on ad manager ad view loaded listener ad size   . builder for a ad loader,neither,neither,neither,neither
5895,AdLoader.Builder_forCustomFormatAd,for custom format ad from ad loader builder enables the ad loader to load custom format ad. Return type is Ad Loader. Builder and parameters are string native custom format ad on custom format ad loaded listener native custom format ad on custom click listener. builder for a ad loader,neither,neither,neither,neither
5896,AdLoader.Builder_forCustomTemplateAd,for custom template ad from ad loader builder deprecate. Return type is Ad Loader. Builder and parameters are string native custom template ad on custom template ad loaded listener native custom template ad on custom click listener. builder for a ad loader,neither,neither,neither,neither
5897,AdLoader.Builder_forNativeAd,for native ad from ad loader builder registers a listener to handle loading a native a. Return type is Ad Loader. Builder and parameters are native ad on native ad loaded listener. builder for a ad loader,neither,neither,neither,neither
5898,AdLoader.Builder_forUnifiedNativeAd,for unified native ad from ad loader builder deprecate. Return type is Ad Loader. Builder and parameters are unified native ad on unified native ad loaded listener. builder for a ad loader,neither,neither,neither,neither
5899,AdLoader.Builder_withAdListener,with ad listener from ad loader builder . builder for a ad loader,neither,neither,neither,neither
5900,AdLoader.Builder_withAdManagerAdViewOptions,with ad manager ad view options from ad loader builder sets options to use for loading a google ad manager ad vie. Return type is Ad Loader. Builder and parameters are ad manager ad view options. builder for a ad loader,sink,sink,sink,sink
5901,AdLoader.Builder_withNativeAdOptions,with native ad options from ad loader builder sets the native ad options to the ad loader builde. Return type is Ad Loader. Builder and parameters are native ad options. builder for a ad loader,sink,sink,sink,sink
5902,AdLoader.Builder_withNativeAdOptions,with native ad options from ad loader builder deprecate. Return type is Ad Loader. Builder and parameters are native ad options. builder for a ad loader,neither,neither,neither,neither
5903,AdRequest_getContentUrl,get content url from ad request returns the content url targeting informatio. Return type is String and no argument. an ad request contains targeting information used to fetch an ad,source,source,source,source
5904,AdRequest_getCustomEventExtrasBundle,get custom event extras bundle from ad request returns extra parameters to pass to a specific custom event adapte. Return type is Bundle and parameters are class. an ad request contains targeting information used to fetch an ad,source,source,source,source
5905,AdRequest_getKeywords,get keywords from ad request returns targeting information keyword. Return type is Set and no argument. an ad request contains targeting information used to fetch an ad,source,source,source,source
5906,AdRequest_getLocation,get location from ad request returns the user's location targeting informatio. Return type is Location and no argument. an ad request contains targeting information used to fetch an ad,source,source,source,source
5907,AdRequest_getNeighboringContentUrls,get neighboring content urls from ad request returns the list of neighboring content u r ls or an empty list if no u r ls were se. Return type is List and no argument. an ad request contains targeting information used to fetch an ad,source,source,source,neither
5908,AdRequest_getNetworkExtrasBundle,get network extras bundle from ad request returns extra parameters to pass to a specific ad network adapte. Return type is Bundle and parameters are class. an ad request contains targeting information used to fetch an ad,source,source,source,source
5909,AdRequest_isTestDevice,is test device from ad request returns true if this device will receive test ad. Return type is boolean and parameters are context. an ad request contains targeting information used to fetch an ad,source,source,source,neither
5910,AdRequest.Builder_addCustomEventExtrasBundle,add custom event extras bundle from ad request builder adds extra parameters to pass to a specific custom event adapte. Return type is Ad Request. Builder and parameters are class<? bundle. builds an ad request,neither,neither,neither,neither
5911,AdRequest.Builder_addKeyword,add keyword from ad request builder adds a keyword for targeting purpose. Return type is Ad Request. Builder and parameters are string. builds an ad request,neither,sink,neither,neither
5912,AdRequest.Builder_addNetworkExtras,add network extras from ad request builder deprecate. Return type is Ad Request. Builder and parameters are network extras. builds an ad request,neither,neither,neither,sink
5913,AdRequest.Builder_addNetworkExtrasBundle,add network extras bundle from ad request builder adds extra parameters to pass to a specific ad network adapte. Return type is Ad Request. Builder and parameters are class<? bundle. builds an ad request,sink,sink,neither,sink
5914,AdRequest.Builder_build,build from ad request builder constructs an ad request with the specified attribute. Return type is Ad Request and no argument. builds an ad request,neither,neither,neither,neither
5915,AdRequest.Builder_setContentUrl,set content url from ad request builder sets the content url for a web site whose content matches the app's primary conten. Return type is Ad Request. Builder and parameters are string. builds an ad request,sink,sink,sink,sink
5916,AdRequest.Builder_setHttpTimeoutMillis,set http timeout millis from ad request builder sets a custom timeout for https calls made by the google mobile ads sdk during an ad reques. Return type is Ad Request. Builder and parameters are int. builds an ad request,sink,sink,sink,sink
5917,AdRequest.Builder_setLocation,set location from ad request builder sets the user's location for mediation targeting purpose. Return type is Ad Request. Builder and parameters are location. builds an ad request,sink,sink,sink,sink
5918,AdRequest.Builder_setNeighboringContentUrls,set neighboring content urls from ad request builder sets u r ls representing web content near an a. Return type is Ad Request. Builder and parameters are list. builds an ad request,sink,sink,sink,sink
5919,AdRequest.Builder_setRequestAgent,set request agent from ad request builder sets the request agent string to identify the ad request's origi. Return type is Ad Request. Builder and parameters are string. builds an ad request,sink,sink,sink,sink
5920,AdSize_equals,equals from ad size compares this ad size with the specified object and indicates if they are equa. Return type is boolean and parameters are object. the size of a banner ad,neither,neither,neither,neither
5921,AdSize_getCurrentOrientationAnchoredAdaptiveBannerAdSize,get current orientation anchored adaptive banner ad size from ad size returns an ad size with the given width and a google-optimized height to create a banner a. Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5922,AdSize_getCurrentOrientationInlineAdaptiveBannerAdSize,get current orientation inline adaptive banner ad size from ad size returns an ad size with the given width and a height that is always . Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5923,AdSize_getCurrentOrientationInterscrollerAdSize,get current orientation interscroller ad size from ad size returns an interscroller ad size with the given width and a height that is always . Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5924,AdSize_getHeight,get height from ad size returns the height of this ad size in density-independent pixel. Return type is int and no argument. the size of a banner ad,source,source,source,source
5925,AdSize_getHeightInPixels,get height in pixels from ad size returns the height of this ad size in physical pixel. Return type is int and parameters are context. the size of a banner ad,source,source,source,source
5926,AdSize_getInlineAdaptiveBannerAdSize,get inline adaptive banner ad size from ad size returns an ad size with the given width and a height that is always . Return type is Ad Size and parameters are int int. the size of a banner ad,source,source,source,source
5927,AdSize_getLandscapeAnchoredAdaptiveBannerAdSize,get landscape anchored adaptive banner ad size from ad size returns an ad size with the given width and a google-optimized height to create a banner a. Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5928,AdSize_getLandscapeInlineAdaptiveBannerAdSize,get landscape inline adaptive banner ad size from ad size returns an ad size with the given width and a height that is always . Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5929,AdSize_getLandscapeInterscrollerAdSize,get landscape interscroller ad size from ad size returns an interscroller ad size with the given width and a height that is always . Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5930,AdSize_getPortraitAnchoredAdaptiveBannerAdSize,get portrait anchored adaptive banner ad size from ad size returns an ad size with the given width and a google-optimized height to create a banner a. Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5931,AdSize_getPortraitInlineAdaptiveBannerAdSize,get portrait inline adaptive banner ad size from ad size returns an ad size with the given width and a height that is always . Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5932,AdSize_getPortraitInterscrollerAdSize,get portrait interscroller ad size from ad size returns an interscroller ad size with the given width and a height that is always . Return type is Ad Size and parameters are context int. the size of a banner ad,source,source,source,source
5933,AdSize_getWidth,get width from ad size returns the width of this ad size in density-independent pixel. Return type is int and no argument. the size of a banner ad,source,source,source,source
5934,AdSize_getWidthInPixels,get width in pixels from ad size returns the width of this ad size in physical pixel. Return type is int and parameters are context. the size of a banner ad,source,source,source,source
5935,AdSize_hashCode,hash code from ad size . the size of a banner ad,source,neither,neither,neither
5936,AdSize_isAutoHeight,is auto height from ad size returns whether this ad size is auto-heigh. Return type is boolean and no argument. the size of a banner ad,source,source,source,neither
5937,AdSize_isFluid,is fluid from ad size returns whether this ad size is of fluid size or no. Return type is boolean and no argument. the size of a banner ad,source,source,source,neither
5938,AdSize_isFullWidth,is full width from ad size returns whether this ad size is full-widt. Return type is boolean and no argument. the size of a banner ad,source,source,source,neither
5939,AdSize_toString,to string from ad size . the size of a banner ad,neither,neither,neither,sink
5940,AdValue_getCurrencyCode,get currency code from ad value the value's iso 4217 currency cod. Return type is String and no argument. the monetary value earned from an ad,source,source,source,source
5941,AdValue_getPrecisionType,get precision type from ad value the precision type of the reported ad valu. Return type is int and no argument. the monetary value earned from an ad,source,source,source,neither
5942,AdValue_getValueMicros,"get value micros from ad value the ad's value in micro-units, where 1,000,000 micro-units equal one unit of the currenc. Return type is long and no argument. the monetary value earned from an ad",source,source,source,neither
5943,BaseAdView_destroy,destroy from base ad view destroys the ad vie. Return type is void and no argument. the base ad view for displaying banner ads,neither,neither,neither,neither
5944,BaseAdView_getAdListener,get ad listener from base ad view returns the ad listener for this ad vie. Return type is Ad Listener and no argument. the base ad view for displaying banner ads,source,source,source,neither
5945,BaseAdView_getAdSize,get ad size from base ad view returns the size of the a. Return type is Ad Size and no argument. the base ad view for displaying banner ads,source,source,source,source
5946,BaseAdView_getAdUnitId,get ad unit id from base ad view returns the ad unit i. Return type is String and no argument. the base ad view for displaying banner ads,source,source,source,neither
5947,BaseAdView_getOnPaidEventListener,get on paid event listener from base ad view gets the on paid event listener for this ad vie. Return type is On Paid Event Listener and no argument. the base ad view for displaying banner ads,source,source,source,source
5948,BaseAdView_getResponseInfo,get response info from base ad view returns the response info object for the loaded a. Return type is Response Info and no argument. the base ad view for displaying banner ads,source,source,source,source
5949,BaseAdView_isLoading,is loading from base ad view returns true if the ad is loadin. Return type is boolean and no argument. the base ad view for displaying banner ads,neither,neither,neither,neither
5950,BaseAdView_loadAd,load ad from base ad view loads an a. Return type is void and parameters are ad request. the base ad view for displaying banner ads,neither,neither,neither,neither
5951,BaseAdView_pause,pause from base ad view pauses any extra processing associated with this ad vie. Return type is void and no argument. the base ad view for displaying banner ads,neither,neither,neither,neither
5952,BaseAdView_resume,resume from base ad view resumes an ad view after a previous call to pau. Return type is void and no argument. the base ad view for displaying banner ads,neither,neither,neither,neither
5953,BaseAdView_setAdListener,set ad listener from base ad view sets an ad listener for this ad vie. Return type is void and parameters are ad listener. the base ad view for displaying banner ads,sink,sink,sink,sink
5954,BaseAdView_setAdSize,set ad size from base ad view sets the size of the a. Return type is void and parameters are ad size. the base ad view for displaying banner ads,sink,sink,sink,sink
5955,BaseAdView_setAdUnitId,set ad unit id from base ad view sets the ad unit i. Return type is void and parameters are string. the base ad view for displaying banner ads,sink,sink,sink,sink
5956,BaseAdView_setOnPaidEventListener,set on paid event listener from base ad view registers a callback to be invoked when this ad is estimated to have earned mone. Return type is void and parameters are on paid event listener. the base ad view for displaying banner ads,neither,neither,neither,neither
5957,FullScreenContentCallback_onAdClicked,"on ad clicked from full screen content callback called when a click is recorded for an a. Return type is void and no argument. callback to be invoked when ads show and dismiss full screen content, such as a fullscreen ad experience or an in app browser",neither,neither,neither,neither
5958,FullScreenContentCallback_onAdDismissedFullScreenContent,"on ad dismissed full screen content from full screen content callback called when the ad dismissed full screen conten. Return type is void and no argument. callback to be invoked when ads show and dismiss full screen content, such as a fullscreen ad experience or an in app browser",neither,neither,neither,neither
5959,FullScreenContentCallback_onAdFailedToShowFullScreenContent,"on ad failed to show full screen content from full screen content callback called when the ad failed to show full screen conten. Return type is void and parameters are ad error. callback to be invoked when ads show and dismiss full screen content, such as a fullscreen ad experience or an in app browser",neither,neither,neither,neither
5960,FullScreenContentCallback_onAdImpression,"on ad impression from full screen content callback called when an impression is recorded for an a. Return type is void and no argument. callback to be invoked when ads show and dismiss full screen content, such as a fullscreen ad experience or an in app browser",neither,neither,neither,neither
5961,FullScreenContentCallback_onAdShowedFullScreenContent,"on ad showed full screen content from full screen content callback called when the ad showed the full screen conten. Return type is void and no argument. callback to be invoked when ads show and dismiss full screen content, such as a fullscreen ad experience or an in app browser",neither,neither,neither,neither
5962,LoadAdError_getResponseInfo,get response info from load ad error gets the response info of the erro. Return type is Response Info and no argument. error information about why an ad load operation failed,source,source,source,source
5963,LoadAdError_toString,to string from load ad error returns a log friendly string version of this objec. Return type is String and no argument. error information about why an ad load operation failed,source,source,source,neither
5964,MediationUtils_findClosestSize,find closest size from mediation utils finds the closest supported ad size from the list of potentials to the provided siz. Return type is Ad Size and parameters are context ad size list. utility methods for mediation adapters,source,source,source,neither
5965,MobileAds_disableMediationAdapterInitialization,disable mediation adapter initialization from mobile ads call before initiali. Return type is  void and parameters are context. class contains logic that applies to the google mobile ads sdk as a whole,neither,neither,neither,neither
5966,MobileAds_getInitializationStatus,get initialization status from mobile ads gets the sdk initialization statu. Return type is Initialization Status and no argument. class contains logic that applies to the google mobile ads sdk as a whole,source,source,source,source
5967,MobileAds_getRequestConfiguration,get request configuration from mobile ads gets the global request configuratio. Return type is Request Configuration and no argument. class contains logic that applies to the google mobile ads sdk as a whole,source,source,source,source
5968,MobileAds_getVersionString,get version string from mobile ads gets the version string of google mobile ads sd. Return type is String and no argument. class contains logic that applies to the google mobile ads sdk as a whole,source,source,source,source
5969,MobileAds_initialize,initialize from mobile ads initializes the google mobile ads sd. Return type is  void and parameters are context. class contains logic that applies to the google mobile ads sdk as a whole,neither,neither,neither,neither
5970,MobileAds_initialize,initialize from mobile ads initializes the google mobile ads sd. Return type is  void and parameters are context on initialization complete listener. class contains logic that applies to the google mobile ads sdk as a whole,neither,neither,neither,neither
5971,MobileAds_openAdInspector,open ad inspector from mobile ads opens the ad inspector u. Return type is  void and parameters are context on ad inspector closed listener. class contains logic that applies to the google mobile ads sdk as a whole,neither,neither,neither,neither
5972,MobileAds_openDebugMenu,open debug menu from mobile ads opens the debug men. Return type is  void and parameters are context string. class contains logic that applies to the google mobile ads sdk as a whole,neither,sink,neither,neither
5973,MobileAds_setAppMuted,set app muted from mobile ads sets the current app mute stat. Return type is  void and parameters are boolean. class contains logic that applies to the google mobile ads sdk as a whole,sink,sink,sink,sink
5974,MobileAds_setAppVolume,set app volume from mobile ads sets the current app volum. Return type is  void and parameters are float. class contains logic that applies to the google mobile ads sdk as a whole,sink,sink,sink,sink
5975,MobileAds_setRequestConfiguration,set request configuration from mobile ads sets the global request configuration that will be used for every ad request during the app's sessio. Return type is  void and parameters are request configuration. class contains logic that applies to the google mobile ads sdk as a whole,sink,sink,sink,sink
5976,RequestConfiguration_getMaxAdContentRating,get max ad content rating from request configuration returns the value set by the corresponding request configuration builderset max ad content rati. Return type is String and no argument. global configuration that will be used for every ad request,source,source,source,source
5977,RequestConfiguration_getTagForChildDirectedTreatment,get tag for child directed treatment from request configuration returns the value set by the corresponding request configuration builderset tag for child directed treatme. Return type is int and no argument. global configuration that will be used for every ad request,source,source,source,source
5978,RequestConfiguration_getTagForUnderAgeOfConsent,get tag for under age of consent from request configuration returns the value set by the corresponding request configuration builderset tag for under age of conse. Return type is int and no argument. global configuration that will be used for every ad request,source,source,source,source
5979,RequestConfiguration_getTestDeviceIds,get test device ids from request configuration returns the test device i ds corresponding to test device which will always request test ad. Return type is List and no argument. global configuration that will be used for every ad request,source,source,source,source
5980,RequestConfiguration_toBuilder,to builder from request configuration returns a request configuration builder with values from this request configuratio. Return type is Request Configuration. Builder and no argument. global configuration that will be used for every ad request,neither,neither,neither,neither
5981,RequestConfiguration.Builder_build,build from request configuration builder builds the request configuratio. Return type is Request Configuration and no argument. builder for request configuration,neither,neither,neither,neither
5982,RequestConfiguration.Builder_setMaxAdContentRating,set max ad content rating from request configuration builder sets a maximum ad content ratin. Return type is Request Configuration. Builder and parameters are string. builder for request configuration,sink,sink,sink,sink
5983,RequestConfiguration.Builder_setTagForChildDirectedTreatment,set tag for child directed treatment from request configuration builder this method allows you to specify whether you would like your app to be treated as child-directed for purposes of the children’s online privacy protection ac. Return type is Request Configuration. Builder and parameters are int. builder for request configuration,sink,sink,sink,sink
5984,RequestConfiguration.Builder_setTagForUnderAgeOfConsent,set tag for under age of consent from request configuration builder this method allows you to mark your app to receive treatment for users in the european economic are. Return type is Request Configuration. Builder and parameters are int. builder for request configuration,sink,sink,sink,sink
5985,RequestConfiguration.Builder_setTestDeviceIds,set test device ids from request configuration builder sets a list of test device i ds corresponding to test devices which will always request test ad. Return type is Request Configuration. Builder and parameters are list. builder for request configuration,sink,sink,sink,sink
5986,ResponseInfo_getAdapterResponses,get adapter responses from response info returns the list of adapter response info containing metadata for each adapter included in the ad respons. Return type is List and no argument. information about an ad response,source,source,source,source
5987,ResponseInfo_getMediationAdapterClassName,get mediation adapter class name from response info returns the mediation adapter class name of the ad network that loaded the a. Return type is String and no argument. information about an ad response,source,source,source,source
5988,ResponseInfo_getResponseId,get response id from response info returns the response id for the loaded a. Return type is String and no argument. information about an ad response,source,source,source,source
5989,ResponseInfo_toString,to string from response info returns a log friendly string version of this objec. Return type is String and no argument. information about an ad response,source,source,source,neither
5990,VideoController_getVideoLifecycleCallbacks,get video lifecycle callbacks from video controller returns the previously provided video controller video lifecycle callbacks or null if no instance was provide. Return type is Video Controller. Video Lifecycle Callbacks and no argument. an object that provides playback control for video ads,source,source,source,source
5991,VideoController_hasVideoContent,has video content from video controller returns true if the current ad has video conten. Return type is boolean and no argument. an object that provides playback control for video ads,source,source,neither,neither
5992,VideoController_isClickToExpandEnabled,is click to expand enabled from video controller returns true if the video ad is using click to expand behavio. Return type is boolean and no argument. an object that provides playback control for video ads,neither,neither,neither,neither
5993,VideoController_isCustomControlsEnabled,is custom controls enabled from video controller returns true if the video ad is using custom player control. Return type is boolean and no argument. an object that provides playback control for video ads,neither,source,source,neither
5994,VideoController_isMuted,"is muted from video controller returns true if the video is currently muted, false otherwis. Return type is boolean and no argument. an object that provides playback control for video ads",source,source,neither,neither
5995,VideoController_mute,mute from video controller sets the video mute stat. Return type is void and parameters are boolean. an object that provides playback control for video ads,neither,neither,sink,neither
5996,VideoController_pause,pause from video controller pauses the video ad if applicabl. Return type is void and no argument. an object that provides playback control for video ads,neither,neither,neither,neither
5997,VideoController_play,play from video controller play the video ad if applicabl. Return type is void and no argument. an object that provides playback control for video ads,neither,neither,neither,neither
5998,VideoController_setVideoLifecycleCallbacks,set video lifecycle callbacks from video controller sets a listener that will receive callbacks for video event. Return type is void and parameters are video controller video lifecycle callbacks. an object that provides playback control for video ads,sink,sink,sink,neither
5999,VideoController_stop,stop from video controller stops video playbac. Return type is void and no argument. an object that provides playback control for video ads,neither,neither,neither,neither
6000,VideoController.VideoLifecycleCallbacks_onVideoEnd,on video end from video controller video lifecycle callbacks called when video playback finishe. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6001,VideoController.VideoLifecycleCallbacks_onVideoMute,on video mute from video controller video lifecycle callbacks called when the video changes mute stat. Return type is void and parameters are boolean. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6002,VideoController.VideoLifecycleCallbacks_onVideoPause,on video pause from video controller video lifecycle callbacks called when video playback is pause. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6003,VideoController.VideoLifecycleCallbacks_onVideoPlay,on video play from video controller video lifecycle callbacks called when video playback is playin. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6004,VideoController.VideoLifecycleCallbacks_onVideoStart,on video start from video controller video lifecycle callbacks called when video playback first begin. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6005,VideoOptions_getClickToExpandRequested,get click to expand requested from video options returns true if click to expand behavior is requeste. Return type is boolean and no argument. options for controlling video playback in supported ad format,source,source,source,source
6006,VideoOptions_getCustomControlsRequested,get custom controls requested from video options returns true if custom video controls are requeste. Return type is boolean and no argument. options for controlling video playback in supported ad format,source,source,source,source
6007,VideoOptions_getStartMuted,get start muted from video options returns the initial mute state of the vide. Return type is boolean and no argument. options for controlling video playback in supported ad format,source,source,source,source
6008,VideoOptions.Builder_build,build from video options builder constructs a video options object with the specified attribute. Return type is Video Options and no argument. builder for video options,neither,neither,neither,neither
6009,VideoOptions.Builder_setClickToExpandRequested,set click to expand requested from video options builder sets whether the ad loader should request ads with the click to expand behavior enable. Return type is Video Options. Builder and parameters are boolean. builder for video options,sink,sink,sink,sink
6010,VideoOptions.Builder_setCustomControlsRequested,set custom controls requested from video options builder requests custom video controls for video ad. Return type is Video Options. Builder and parameters are boolean. builder for video options,sink,sink,sink,sink
6011,VideoOptions.Builder_setStartMuted,set start muted from video options builder sets the initial mute state of the vide. Return type is Video Options. Builder and parameters are boolean. builder for video options,sink,sink,sink,sink
6012,MediaContent_getAspectRatio,get aspect ratio from media content returns the aspect ratio of the media conten. Return type is  float and no argument. provides media content information,source,source,source,source
6013,MediaContent_getCurrentTime,get current time from media content gets the current time of the video in second. Return type is  float and no argument. provides media content information,source,source,source,source
6014,MediaContent_getDuration,get duration from media content returns the duration of the video in second. Return type is  float and no argument. provides media content information,source,source,source,source
6015,MediaContent_getMainImage,get main image from media content returns the main image to be displayed if the media content doesn't contain vide. Return type is Drawable and no argument. provides media content information,source,source,source,source
6016,MediaContent_getVideoController,get video controller from media content returns the media content's video controlle. Return type is Video Controller and no argument. provides media content information,source,source,source,source
6017,MediaContent_hasVideoContent,has video content from media content indicates whether the media content has video conten. Return type is  boolean and no argument. provides media content information,source,source,source,neither
6018,MediaContent_setMainImage,set main image from media content sets the optional main image to be displayed if the media content doesn't contain vide. Return type is  void and parameters are drawable. provides media content information,sink,sink,sink,sink
6019,MuteThisAdListener_onAdMuted,on ad muted from mute this ad listener . a listener that can be used to receive events when an ad is muted,neither,neither,neither,neither
6020,MuteThisAdReason_getDescription,get description from mute this ad reason returns the text representing the mute reaso. Return type is String and no argument. an object used to represent the mute this ad reason,source,source,source,source
6021,OnAdInspectorClosedListener_onAdInspectorClosed,on ad inspector closed from on ad inspector closed listener called when the ad inspector ui has been close. Return type is  void and parameters are ad inspector error. interface definition for a callback to be invoked when the ad inspector ui closes,neither,neither,neither,neither
6022,OnPaidEventListener_onPaidEvent,on paid event from on paid event listener called when an ad is estimated to have earned mone. Return type is  void and parameters are ad value. interface definition for a callback to be invoked when an ad is estimated to have earned money,neither,neither,neither,neither
6023,OnUserEarnedRewardListener_onUserEarnedReward,on user earned reward from on user earned reward listener called when the user earned a rewar. Return type is  void and parameters are reward item. interface definition for a callback to be invoked when the user earned a reward,neither,neither,neither,neither
6024,AdLoader.Builder_build,build from ad loader builder returns an ad loader or empty if there was an error was encountere. Return type is Ad Loader and no argument. builder for a ad loader,neither,neither,neither,neither
6025,AdLoader.Builder_forAdManagerAdView,for ad manager ad view from ad loader builder registers a listener to handle loading a google ad manager banner a. Return type is Ad Loader. Builder and parameters are on ad manager ad view loaded listener ad size   . builder for a ad loader,neither,neither,neither,neither
6026,AdLoader.Builder_forCustomFormatAd,for custom format ad from ad loader builder enables the ad loader to load custom format ad. Return type is Ad Loader. Builder and parameters are string native custom format ad on custom format ad loaded listener native custom format ad on custom click listener. builder for a ad loader,neither,neither,neither,neither
6027,AdLoader.Builder_forCustomTemplateAd,for custom template ad from ad loader builder deprecate. Return type is Ad Loader. Builder and parameters are string native custom template ad on custom template ad loaded listener native custom template ad on custom click listener. builder for a ad loader,neither,neither,neither,neither
6028,AdLoader.Builder_forNativeAd,for native ad from ad loader builder registers a listener to handle loading a native a. Return type is Ad Loader. Builder and parameters are native ad on native ad loaded listener. builder for a ad loader,neither,neither,neither,neither
6029,AdLoader.Builder_forUnifiedNativeAd,for unified native ad from ad loader builder deprecate. Return type is Ad Loader. Builder and parameters are unified native ad on unified native ad loaded listener. builder for a ad loader,neither,neither,neither,neither
6030,AdLoader.Builder_withAdListener,with ad listener from ad loader builder . builder for a ad loader,neither,neither,neither,neither
6031,AdLoader.Builder_withAdManagerAdViewOptions,with ad manager ad view options from ad loader builder sets options to use for loading a google ad manager ad vie. Return type is Ad Loader. Builder and parameters are ad manager ad view options. builder for a ad loader,sink,sink,sink,sink
6032,AdLoader.Builder_withNativeAdOptions,with native ad options from ad loader builder sets the native ad options to the ad loader builde. Return type is Ad Loader. Builder and parameters are native ad options. builder for a ad loader,sink,sink,sink,sink
6033,AdLoader.Builder_withNativeAdOptions,with native ad options from ad loader builder deprecate. Return type is Ad Loader. Builder and parameters are native ad options. builder for a ad loader,neither,neither,neither,neither
6034,AdRequest.Builder_addCustomEventExtrasBundle,add custom event extras bundle from ad request builder adds extra parameters to pass to a specific custom event adapte. Return type is Ad Request. Builder and parameters are class<? bundle. builds an ad request,neither,neither,neither,neither
6035,AdRequest.Builder_addKeyword,add keyword from ad request builder adds a keyword for targeting purpose. Return type is Ad Request. Builder and parameters are string. builds an ad request,neither,sink,neither,neither
6036,AdRequest.Builder_addNetworkExtras,add network extras from ad request builder deprecate. Return type is Ad Request. Builder and parameters are network extras. builds an ad request,neither,neither,neither,sink
6037,AdRequest.Builder_addNetworkExtrasBundle,add network extras bundle from ad request builder adds extra parameters to pass to a specific ad network adapte. Return type is Ad Request. Builder and parameters are class<? bundle. builds an ad request,sink,sink,neither,sink
6038,AdRequest.Builder_build,build from ad request builder constructs an ad request with the specified attribute. Return type is Ad Request and no argument. builds an ad request,neither,neither,neither,neither
6039,AdRequest.Builder_setContentUrl,set content url from ad request builder sets the content url for a web site whose content matches the app's primary conten. Return type is Ad Request. Builder and parameters are string. builds an ad request,sink,sink,sink,sink
6040,AdRequest.Builder_setHttpTimeoutMillis,set http timeout millis from ad request builder sets a custom timeout for https calls made by the google mobile ads sdk during an ad reques. Return type is Ad Request. Builder and parameters are int. builds an ad request,sink,sink,sink,sink
6041,AdRequest.Builder_setLocation,set location from ad request builder sets the user's location for mediation targeting purpose. Return type is Ad Request. Builder and parameters are location. builds an ad request,sink,sink,sink,sink
6042,AdRequest.Builder_setNeighboringContentUrls,set neighboring content urls from ad request builder sets u r ls representing web content near an a. Return type is Ad Request. Builder and parameters are list. builds an ad request,sink,sink,sink,sink
6043,AdRequest.Builder_setRequestAgent,set request agent from ad request builder sets the request agent string to identify the ad request's origi. Return type is Ad Request. Builder and parameters are string. builds an ad request,sink,sink,sink,sink
6044,RequestConfiguration.Builder_build,build from request configuration builder builds the request configuratio. Return type is Request Configuration and no argument. builder for request configuration,neither,neither,neither,neither
6045,RequestConfiguration.Builder_setMaxAdContentRating,set max ad content rating from request configuration builder sets a maximum ad content ratin. Return type is Request Configuration. Builder and parameters are string. builder for request configuration,sink,sink,sink,sink
6046,RequestConfiguration.Builder_setTagForChildDirectedTreatment,set tag for child directed treatment from request configuration builder this method allows you to specify whether you would like your app to be treated as child-directed for purposes of the children’s online privacy protection ac. Return type is Request Configuration. Builder and parameters are int. builder for request configuration,sink,sink,sink,sink
6047,RequestConfiguration.Builder_setTagForUnderAgeOfConsent,set tag for under age of consent from request configuration builder this method allows you to mark your app to receive treatment for users in the european economic are. Return type is Request Configuration. Builder and parameters are int. builder for request configuration,sink,sink,sink,sink
6048,RequestConfiguration.Builder_setTestDeviceIds,set test device ids from request configuration builder sets a list of test device i ds corresponding to test devices which will always request test ad. Return type is Request Configuration. Builder and parameters are list. builder for request configuration,sink,sink,sink,sink
6049,VideoController.VideoLifecycleCallbacks_onVideoEnd,on video end from video controller video lifecycle callbacks called when video playback finishe. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6050,VideoController.VideoLifecycleCallbacks_onVideoMute,on video mute from video controller video lifecycle callbacks called when the video changes mute stat. Return type is void and parameters are boolean. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6051,VideoController.VideoLifecycleCallbacks_onVideoPause,on video pause from video controller video lifecycle callbacks called when video playback is pause. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6052,VideoController.VideoLifecycleCallbacks_onVideoPlay,on video play from video controller video lifecycle callbacks called when video playback is playin. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6053,VideoController.VideoLifecycleCallbacks_onVideoStart,on video start from video controller video lifecycle callbacks called when video playback first begin. Return type is void and no argument. callback for receiving updates on video ad lifecycle events,neither,neither,neither,neither
6054,VideoOptions.Builder_build,build from video options builder constructs a video options object with the specified attribute. Return type is Video Options and no argument. builder for video options,neither,neither,neither,neither
6055,VideoOptions.Builder_setClickToExpandRequested,set click to expand requested from video options builder sets whether the ad loader should request ads with the click to expand behavior enable. Return type is Video Options. Builder and parameters are boolean. builder for video options,sink,sink,sink,sink
6056,VideoOptions.Builder_setCustomControlsRequested,set custom controls requested from video options builder requests custom video controls for video ad. Return type is Video Options. Builder and parameters are boolean. builder for video options,sink,sink,sink,sink
6057,VideoOptions.Builder_setStartMuted,set start muted from video options builder sets the initial mute state of the vide. Return type is Video Options. Builder and parameters are boolean. builder for video options,sink,sink,sink,sink
6058,WorkAccount_getClient,get client from work account creates a new instance of work account client for use in an activit. Return type is Work Account Client and parameters are activity. work account provides a p is to manage work accounts,source,source,source,source
6059,WorkAccount_getClient,get client from work account creates a new instance of work account client for use in a contex. Return type is Work Account Client and parameters are context. work account provides a p is to manage work accounts,source,source,source,source
6060,WorkAccountClient_addWorkAccount,add work account from work account client adds a work account to account manage. Return type is Task and parameters are string. client to manage android for work accounts,neither,neither,neither,neither
6061,WorkAccountClient_removeWorkAccount,remove work account from work account client removes a work account from account manage. Return type is Task and parameters are account. client to manage android for work accounts,neither,neither,neither,neither
6062,WorkAccountClient_setWorkAuthenticatorEnabled,set work authenticator enabled from work account client changes the availability of work accounts in account manage. Return type is Task and parameters are boolean. client to manage android for work accounts,sink,sink,sink,sink
6063,WorkAccountApi_addWorkAccount,add work account from work account api deprecate. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use work account client via work account get client instead,neither,neither,neither,source
6064,WorkAccountApi_removeWorkAccount,remove work account from work account api deprecate. Return type is Pending Result and parameters are google api client account. this interface is deprecated  use work account client via work account get client instead,neither,neither,neither,source
6065,WorkAccountApi_setWorkAuthenticatorEnabled,set work authenticator enabled from work account api deprecate. Return type is  void and parameters are google api client boolean. this interface is deprecated  use work account client via work account get client instead,sink,sink,sink,source
6066,WorkAccountApi_setWorkAuthenticatorEnabledWithResult,set work authenticator enabled with result from work account api deprecate. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use work account client via work account get client instead,sink,sink,sink,source
6067,WorkAccountApi.AddAccountResult_getAccount,get account from work account api add account result returns a account that has been adde. Return type is Account and no argument. this interface is deprecated  use work account client via work account get client instead,source,source,source,source
6068,WorkAccountApi.AddAccountResult_getAccount,get account from work account api add account result returns a account that has been adde. Return type is Account and no argument. this interface is deprecated  use work account client via work account get client instead,source,source,source,source
6069,CameraUpdateFactory_newCameraPosition,new camera position from camera update factory returns a camera update that moves the camera to a specified camera positio. Return type is Camera Update and parameters are camera position. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6070,CameraUpdateFactory_newLatLng,new lat lng from camera update factory returns a camera update that moves the center of the screen to a latitude and longitude specified by a lat lng objec. Return type is Camera Update and parameters are lat lng. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6071,CameraUpdateFactory_newLatLngBounds,new lat lng bounds from camera update factory returns a camera update that transforms the camera such that the specified latitude/longitude bounds are centered on screen at the greatest possible zoom leve. Return type is Camera Update and parameters are lat lng bounds int. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6072,CameraUpdateFactory_newLatLngBounds,new lat lng bounds from camera update factory returns a camera update that transforms the camera such that the specified latitude/longitude bounds are centered on screen within a bounding box of specified dimensions at the greatest possible zoom leve. Return type is Camera Update and parameters are lat lng bounds int int int. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6073,CameraUpdateFactory_newLatLngZoom,"new lat lng zoom from camera update factory returns a camera update that moves the center of the screen to a latitude and longitude specified by a lat lng object, and moves to the given zoom leve. Return type is Camera Update and parameters are lat lng float. a class containing methods for creating camera update objects that change a map's camera",neither,neither,neither,neither
6074,CameraUpdateFactory_scrollBy,"scroll by from camera update factory returns a camera update that scrolls the camera over the map, shifting the center of view by the specified number of pixels in the x and y direction. Return type is Camera Update and parameters are float float. a class containing methods for creating camera update objects that change a map's camera",neither,neither,sink,neither
6075,CameraUpdateFactory_zoomBy,zoom by from camera update factory returns a camera update that shifts the zoom level of the current camera viewpoin. Return type is Camera Update and parameters are float point. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6076,CameraUpdateFactory_zoomBy,zoom by from camera update factory returns a camera update that shifts the zoom level of the current camera viewpoin. Return type is Camera Update and parameters are float. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6077,CameraUpdateFactory_zoomIn,zoom in from camera update factory returns a camera update that zooms in on the map by moving the viewpoint's height closer to the earth's surfac. Return type is Camera Update and no argument. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6078,CameraUpdateFactory_zoomOut,zoom out from camera update factory returns a camera update that zooms out on the map by moving the viewpoint's height farther away from the earth's surfac. Return type is Camera Update and no argument. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6079,CameraUpdateFactory_zoomTo,zoom to from camera update factory returns a camera update that moves the camera viewpoint to a particular zoom leve. Return type is Camera Update and parameters are float. a class containing methods for creating camera update objects that change a map's camera,neither,neither,neither,neither
6080,GoogleMap_addCircle,add circle from google map add a circle to this ma. Return type is Circle and parameters are circle options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6081,GoogleMap_addGroundOverlay,add ground overlay from google map adds an image to this ma. Return type is Ground Overlay and parameters are ground overlay options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,sink,neither,sink
6082,GoogleMap_addMarker,add marker from google map adds a marker to this ma. Return type is Marker and parameters are marker options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,sink
6083,GoogleMap_addPolygon,add polygon from google map adds a polygon to this ma. Return type is Polygon and parameters are polygon options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6084,GoogleMap_addPolyline,add polyline from google map adds a polyline to this ma. Return type is Polyline and parameters are polyline options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6085,GoogleMap_addTileOverlay,add tile overlay from google map adds a tile overlay to this ma. Return type is Tile Overlay and parameters are tile overlay options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6086,GoogleMap_animateCamera,animate camera from google map animates the movement of the camera from the current position to the position defined in the update and calls an optional callback on completio. Return type is final void and parameters are camera update google map cancelable callback. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6087,GoogleMap_animateCamera,animate camera from google map animates the movement of the camera from the current position to the position defined in the updat. Return type is final void and parameters are camera update. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6088,GoogleMap_animateCamera,"animate camera from google map moves the map according to the update with an animation over a specified duration, and calls an optional callback on completio. Return type is final void and parameters are camera update int google map cancelable callback. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map",neither,neither,neither,neither
6089,GoogleMap_clear,"clear from google map removes all markers, polylines, polygons, overlays, etc from the ma. Return type is final void and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map",neither,neither,neither,neither
6090,GoogleMap_getCameraPosition,get camera position from google map gets the current position of the camer. Return type is Camera Position and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6091,GoogleMap_getFocusedBuilding,get focused building from google map gets the currently focused buildin. Return type is Indoor Building and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6092,GoogleMap_getMapType,get map type from google map gets the type of map that's currently displaye. Return type is final int and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6093,GoogleMap_getMaxZoomLevel,get max zoom level from google map returns the maximum zoom level for the current camera positio. Return type is final float and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6094,GoogleMap_getMinZoomLevel,get min zoom level from google map returns the minimum zoom leve. Return type is final float and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6095,GoogleMap_getMyLocation,get my location from google map deprecate. Return type is Location and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6096,GoogleMap_getProjection,get projection from google map returns a projection object that you can use to convert between screen coordinates and latitude/longitude coordinate. Return type is Projection and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6097,GoogleMap_getUiSettings,get ui settings from google map gets the user interface settings for the ma. Return type is Ui Settings and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6098,GoogleMap_isBuildingsEnabled,is buildings enabled from google map returns whether 3 d buildings layer is enable. Return type is final boolean and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6099,GoogleMap_isIndoorEnabled,is indoor enabled from google map gets whether indoor maps are currently enable. Return type is final boolean and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6100,GoogleMap_isMyLocationEnabled,is my location enabled from google map gets the status of the my-location laye. Return type is final boolean and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6101,GoogleMap_isTrafficEnabled,is traffic enabled from google map checks whether the map is drawing traffic dat. Return type is final boolean and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,source,source,source,source
6102,GoogleMap_moveCamera,move camera from google map repositions the camera according to the instructions defined in the updat. Return type is final void and parameters are camera update. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,sink,neither,neither
6103,GoogleMap_resetMinMaxZoomPreference,reset min max zoom preference from google map removes any previously specified upper and lower zoom bound. Return type is void and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,sink
6104,GoogleMap_setBuildingsEnabled,set buildings enabled from google map turns the 3 d buildings layer on or of. Return type is final void and parameters are boolean. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6105,GoogleMap_setContentDescription,set content description from google map sets a content description for the ma. Return type is final void and parameters are string. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6106,GoogleMap_setIndoorEnabled,set indoor enabled from google map sets whether indoor maps should be enable. Return type is final boolean and parameters are boolean. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6107,GoogleMap_setInfoWindowAdapter,set info window adapter from google map sets a custom renderer for the contents of info window. Return type is final void and parameters are google map info window adapter. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6108,GoogleMap_setLatLngBoundsForCameraTarget,"set lat lng bounds for camera target from google map specifies a lat lng bounds to constrain the camera target, so that when users scroll and pan the map, the camera target does not move outside these bound. Return type is void and parameters are lat lng bounds. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map",sink,sink,sink,sink
6109,GoogleMap_setLocationSource,set location source from google map replaces the location source of the my-location laye. Return type is final void and parameters are location source. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6110,GoogleMap_setMapStyle,set map style from google map sets the styling of the base ma. Return type is boolean and parameters are map style options. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6111,GoogleMap_setMapType,set map type from google map sets the type of map tiles that should be displaye. Return type is final void and parameters are int. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6112,GoogleMap_setMaxZoomPreference,set max zoom preference from google map sets a preferred upper bound for the camera zoo. Return type is void and parameters are float. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6113,GoogleMap_setMinZoomPreference,set min zoom preference from google map sets a preferred lower bound for the camera zoo. Return type is void and parameters are float. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6114,GoogleMap_setMyLocationEnabled,set my location enabled from google map enables or disables the my-location laye. Return type is final void and parameters are boolean. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6115,GoogleMap_setOnCameraChangeListener,set on camera change listener from google map deprecate. Return type is final void and parameters are google map on camera change listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6116,GoogleMap_setOnCameraIdleListener,set on camera idle listener from google map sets a callback that is invoked when camera movement has ende. Return type is final void and parameters are google map on camera idle listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6117,GoogleMap_setOnCameraMoveCanceledListener,set on camera move canceled listener from google map sets a callback that is invoked when camera motion is stopped or interrupted by a new type of animatio. Return type is final void and parameters are google map on camera move canceled listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6118,GoogleMap_setOnCameraMoveListener,set on camera move listener from google map sets a callback that is invoked repeatedly while the camera is in motio. Return type is final void and parameters are google map on camera move listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6119,GoogleMap_setOnCameraMoveStartedListener,set on camera move started listener from google map sets a callback that's invoked when the camera starts moving or the reason for camera motion has change. Return type is final void and parameters are google map on camera move started listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6120,GoogleMap_setOnCircleClickListener,set on circle click listener from google map sets a callback that's invoked when a circle is clicke. Return type is final void and parameters are google map on circle click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,neither,neither
6121,GoogleMap_setOnGroundOverlayClickListener,set on ground overlay click listener from google map sets a callback that's invoked when a ground overlay is clicke. Return type is final void and parameters are google map on ground overlay click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6122,GoogleMap_setOnIndoorStateChangeListener,set on indoor state change listener from google map sets or clears the listener for indoor event. Return type is final void and parameters are google map on indoor state change listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6123,GoogleMap_setOnInfoWindowClickListener,set on info window click listener from google map sets a callback that's invoked when a marker info window is clicke. Return type is final void and parameters are google map on info window click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6124,GoogleMap_setOnInfoWindowCloseListener,set on info window close listener from google map sets a callback that's invoked when a marker's info window is close. Return type is final void and parameters are google map on info window close listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6125,GoogleMap_setOnInfoWindowLongClickListener,set on info window long click listener from google map sets a callback that's invoked when a marker's info window is long presse. Return type is final void and parameters are google map on info window long click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6126,GoogleMap_setOnMapClickListener,set on map click listener from google map sets a callback that's invoked when the map is tappe. Return type is final void and parameters are google map on map click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6127,GoogleMap_setOnMapLoadedCallback,set on map loaded callback from google map sets a callback that's invoked when this map has finished renderin. Return type is void and parameters are google map on map loaded callback. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6128,GoogleMap_setOnMapLongClickListener,set on map long click listener from google map sets a callback that's invoked when the map is long presse. Return type is final void and parameters are google map on map long click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6129,GoogleMap_setOnMarkerClickListener,set on marker click listener from google map sets a callback that's invoked when a marker is clicke. Return type is final void and parameters are google map on marker click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6130,GoogleMap_setOnMarkerDragListener,set on marker drag listener from google map sets a callback that's invoked when a marker is dragge. Return type is final void and parameters are google map on marker drag listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6131,GoogleMap_setOnMyLocationButtonClickListener,set on my location button click listener from google map sets a callback that's invoked when the my location button is clicke. Return type is final void and parameters are google map on my location button click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6132,GoogleMap_setOnMyLocationChangeListener,set on my location change listener from google map deprecate. Return type is final void and parameters are google map on my location change listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6133,GoogleMap_setOnMyLocationClickListener,set on my location click listener from google map sets a callback that's invoked when the my location do. Return type is final void and parameters are google map on my location click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6134,GoogleMap_setOnPoiClickListener,set on poi click listener from google map sets a listener which will be triggered when a poi is clicked or tappe. Return type is final void and parameters are google map on poi click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6135,GoogleMap_setOnPolygonClickListener,set on polygon click listener from google map sets a callback that's invoked when a polygon is clicke. Return type is final void and parameters are google map on polygon click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,neither,neither
6136,GoogleMap_setOnPolylineClickListener,set on polyline click listener from google map sets a callback that's invoked when a polyline is clicke. Return type is final void and parameters are google map on polyline click listener. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,neither
6137,GoogleMap_setPadding,set padding from google map sets padding on the ma. Return type is final void and parameters are int int int int. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6138,GoogleMap_setTrafficEnabled,set traffic enabled from google map turns the traffic layer on or of. Return type is final void and parameters are boolean. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,sink,sink,sink,sink
6139,GoogleMap_snapshot,snapshot from google map takes a snapshot of the ma. Return type is final void and parameters are google map snapshot ready callback bitmap. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,sink
6140,GoogleMap_snapshot,snapshot from google map takes a snapshot of the ma. Return type is final void and parameters are google map snapshot ready callback. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,sink
6141,GoogleMap_stopAnimation,stop animation from google map stops the camera animation if there is one in progres. Return type is final void and no argument. this is the main class of the google maps sdk for android and is the entry point for all methods related to the map,neither,neither,neither,neither
6142,GoogleMapOptions_ambientEnabled,ambient enabled from google map options specifies whether ambient-mode styling should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,sink,neither,sink
6143,GoogleMapOptions_backgroundColor,background color from google map options sets the map background colo. Return type is Google Map Options and parameters are integer. defines configuration google map options for a google map,sink,sink,sink,sink
6144,GoogleMapOptions_camera,camera from google map options specifies the initial camera position for the ma. Return type is Google Map Options and parameters are camera position. defines configuration google map options for a google map,sink,neither,source,sink
6145,GoogleMapOptions_compassEnabled,compass enabled from google map options specifies whether the compass should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,sink,neither,sink
6146,GoogleMapOptions_createFromAttributes,create from attributes from google map options creates a google maps options from the attribute se. Return type is Google Map Options and parameters are context attribute set. defines configuration google map options for a google map,sink,sink,neither,neither
6147,GoogleMapOptions_getAmbientEnabled,get ambient enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6148,GoogleMapOptions_getBackgroundColor,"get background color from google map options returns the current background color for the map, or null if unspecifie. Return type is Integer and no argument. defines configuration google map options for a google map",source,source,source,source
6149,GoogleMapOptions_getCamera,get camera from google map options . defines configuration google map options for a google map,source,source,source,source
6150,GoogleMapOptions_getCompassEnabled,get compass enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6151,GoogleMapOptions_getLatLngBoundsForCameraTarget,get lat lng bounds for camera target from google map options . defines configuration google map options for a google map,source,source,source,source
6152,GoogleMapOptions_getLiteMode,get lite mode from google map options . defines configuration google map options for a google map,source,source,source,source
6153,GoogleMapOptions_getMapId,get map id from google map options . defines configuration google map options for a google map,source,source,source,source
6154,GoogleMapOptions_getMapToolbarEnabled,get map toolbar enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6155,GoogleMapOptions_getMapType,get map type from google map options . defines configuration google map options for a google map,source,source,source,source
6156,GoogleMapOptions_getMaxZoomPreference,get max zoom preference from google map options . defines configuration google map options for a google map,source,source,source,source
6157,GoogleMapOptions_getMinZoomPreference,get min zoom preference from google map options . defines configuration google map options for a google map,source,source,source,source
6158,GoogleMapOptions_getRotateGesturesEnabled,get rotate gestures enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6159,GoogleMapOptions_getScrollGesturesEnabled,get scroll gestures enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6160,GoogleMapOptions_getScrollGesturesEnabledDuringRotateOrZoom,get scroll gestures enabled during rotate or zoom from google map options . defines configuration google map options for a google map,source,source,source,source
6161,GoogleMapOptions_getTiltGesturesEnabled,get tilt gestures enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6162,GoogleMapOptions_getUseViewLifecycleInFragment,get use view lifecycle in fragment from google map options . defines configuration google map options for a google map,source,neither,source,neither
6163,GoogleMapOptions_getZOrderOnTop,get z order on top from google map options . defines configuration google map options for a google map,source,source,source,source
6164,GoogleMapOptions_getZoomControlsEnabled,get zoom controls enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6165,GoogleMapOptions_getZoomGesturesEnabled,get zoom gestures enabled from google map options . defines configuration google map options for a google map,source,source,source,source
6166,GoogleMapOptions_latLngBoundsForCameraTarget,"lat lng bounds for camera target from google map options specifies a lat lng bounds to constrain the camera target, so that when users scroll and pan the map, the camera target does not move outside these bound. Return type is Google Map Options and parameters are lat lng bounds. defines configuration google map options for a google map",sink,sink,neither,sink
6167,GoogleMapOptions_liteMode,lite mode from google map options specifies whether the map should be created in lite mod. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,neither,neither,neither
6168,GoogleMapOptions_mapId,map id from google map options specifies the map's i. Return type is Google Map Options and parameters are string. defines configuration google map options for a google map,source,neither,source,neither
6169,GoogleMapOptions_mapToolbarEnabled,map toolbar enabled from google map options specifies whether the map toolbar should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,neither,neither,neither
6170,GoogleMapOptions_mapType,map type from google map options specifies a change to the initial map typ. Return type is Google Map Options and parameters are int. defines configuration google map options for a google map,neither,neither,neither,neither
6171,GoogleMapOptions_maxZoomPreference,max zoom preference from google map options specifies a preferred upper bound for camera zoo. Return type is Google Map Options and parameters are float. defines configuration google map options for a google map,sink,sink,neither,sink
6172,GoogleMapOptions_minZoomPreference,min zoom preference from google map options specifies a preferred lower bound for camera zoo. Return type is Google Map Options and parameters are float. defines configuration google map options for a google map,sink,sink,sink,sink
6173,GoogleMapOptions_rotateGesturesEnabled,rotate gestures enabled from google map options specifies whether rotate gestures should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,neither,neither,source
6174,GoogleMapOptions_scrollGesturesEnabled,scroll gestures enabled from google map options specifies whether scroll gestures should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,sink,neither,source
6175,GoogleMapOptions_scrollGesturesEnabledDuringRotateOrZoom,scroll gestures enabled during rotate or zoom from google map options specifies whether scroll gestures should be enabled during rotate and zoom gesture. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,neither,neither,source
6176,GoogleMapOptions_tiltGesturesEnabled,tilt gestures enabled from google map options specifies whether tilt gestures should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,sink,neither,sink,source
6177,GoogleMapOptions_toString,to string from google map options . defines configuration google map options for a google map,sink,sink,sink,sink
6178,GoogleMapOptions_useViewLifecycleInFragment,"use view lifecycle in fragment from google map options when using a map fragment, this flag specifies whether the lifecycle of the map should be tied to the fragment's view or the fragment itsel. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map",neither,neither,neither,neither
6179,GoogleMapOptions_writeToParcel,write to parcel from google map options . defines configuration google map options for a google map,sink,sink,sink,sink
6180,GoogleMapOptions_zOrderOnTop,z order on top from google map options control whether the map view's surface is placed on top of its windo. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,sink,sink,sink,sink
6181,GoogleMapOptions_zoomControlsEnabled,zoom controls enabled from google map options specifies whether the zoom controls should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,neither,sink,neither,sink
6182,GoogleMapOptions_zoomGesturesEnabled,zoom gestures enabled from google map options specifies whether zoom gestures should be enable. Return type is Google Map Options and parameters are boolean. defines configuration google map options for a google map,sink,sink,sink,source
6183,MapFragment_getMapAsync,get map async from map fragment sets a callback object which will be triggered when the google map instance is ready to be use. Return type is void and parameters are on map ready callback. a map component in an app,source,source,source,source
6184,MapFragment_newInstance,new instance from map fragment creates a map fragment with the given option. Return type is Map Fragment and parameters are google map options. a map component in an app,neither,neither,neither,neither
6185,MapFragment_newInstance,"new instance from map fragment creates a map fragment, using default option. Return type is Map Fragment and no argument. a map component in an app",neither,neither,neither,neither
6186,MapFragment_onActivityCreated,on activity created from map fragment . a map component in an app,neither,neither,neither,neither
6187,MapFragment_onAttach,on attach from map fragment . a map component in an app,neither,neither,neither,neither
6188,MapFragment_onCreate,on create from map fragment . a map component in an app,neither,neither,neither,neither
6189,MapFragment_onCreateView,on create view from map fragment . a map component in an app,neither,neither,neither,neither
6190,MapFragment_onDestroy,on destroy from map fragment . a map component in an app,neither,neither,neither,neither
6191,MapFragment_onDestroyView,on destroy view from map fragment . a map component in an app,neither,neither,neither,neither
6192,MapFragment_onEnterAmbient,on enter ambient from map fragment you must call this method from the parent wearable activity's corresponding metho. Return type is final void and parameters are bundle. a map component in an app,neither,neither,neither,neither
6193,MapFragment_onExitAmbient,on exit ambient from map fragment you must call this method from the parent wearable activity's corresponding metho. Return type is final void and no argument. a map component in an app,neither,neither,neither,neither
6194,MapFragment_onInflate,on inflate from map fragment parse attributes during inflation from a view hierarchy into the arguments we handl. Return type is void and parameters are activity attribute set bundle. a map component in an app,neither,neither,neither,neither
6195,MapFragment_onLowMemory,on low memory from map fragment . a map component in an app,neither,neither,neither,neither
6196,MapFragment_onPause,on pause from map fragment . a map component in an app,neither,neither,neither,neither
6197,MapFragment_onResume,on resume from map fragment . a map component in an app,neither,neither,neither,neither
6198,MapFragment_onSaveInstanceState,on save instance state from map fragment provides a bundle to store the state of the fragment before it gets destroye. Return type is void and parameters are bundle. a map component in an app,neither,neither,neither,neither
6199,MapFragment_onStart,on start from map fragment . a map component in an app,neither,neither,neither,neither
6200,MapFragment_onStop,on stop from map fragment . a map component in an app,neither,neither,neither,neither
6201,MapFragment_setArguments,set arguments from map fragment . a map component in an app,sink,sink,sink,sink
6202,MapsInitializer_initialize,"initialize from maps initializer specifies which maps initializer renderer type you prefer to use to initialize the google maps sdk for android, and provides a callback to receive the actual maps initializer renderer typ. Return type is synchronized  int and parameters are context maps initializer renderer on maps sdk initialized callback. use this class to initialize the google maps sdk for android if features need to be used before obtaining a map",neither,neither,neither,sink
6203,MapsInitializer_initialize,initialize from maps initializer initializes the google maps sdk for android so that its classes are ready for us. Return type is synchronized  int and parameters are context. use this class to initialize the google maps sdk for android if features need to be used before obtaining a map,neither,neither,neither,neither
6204,MapView_getMapAsync,"get map async from map view returns a instance of the google map through the callback, ready to be use. Return type is void and parameters are on map ready callback. a view which displays a map",source,source,source,source
6205,MapView_onCreate,on create from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and parameters are bundle. a view which displays a map,neither,neither,neither,neither
6206,MapView_onDestroy,on destroy from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6207,MapView_onEnterAmbient,on enter ambient from map view you must call this method from the parent wearable activity's corresponding metho. Return type is void and parameters are bundle. a view which displays a map,neither,neither,neither,neither
6208,MapView_onExitAmbient,on exit ambient from map view you must call this method from the parent wearable activity's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6209,MapView_onLowMemory,on low memory from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6210,MapView_onPause,on pause from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6211,MapView_onResume,on resume from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6212,MapView_onSaveInstanceState,on save instance state from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and parameters are bundle. a view which displays a map,sink,sink,neither,sink
6213,MapView_onStart,on start from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6214,MapView_onStop,on stop from map view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a map,neither,neither,neither,neither
6215,Projection_fromScreenLocation,from screen location from projection returns the geographic location that corresponds to a screen locatio. Return type is Lat Lng and parameters are point. a projection is used to translate between on screen location and geographic coordinates on the surface of the earth,source,source,source,source
6216,Projection_getVisibleRegion,get visible region from projection gets a projection of the viewing frustum for converting between screen coordinates and geo-latitude/longitude coordinate. Return type is Visible Region and no argument. a projection is used to translate between on screen location and geographic coordinates on the surface of the earth,source,source,source,source
6217,Projection_toScreenLocation,to screen location from projection returns a screen location that corresponds to a geographical coordinat. Return type is Point and parameters are lat lng. a projection is used to translate between on screen location and geographic coordinates on the surface of the earth,neither,source,neither,neither
6218,StreetViewPanorama_animateTo,"animate to from street view panorama changes the current camera position, orientation and zoom, to a given position over a specified duratio. Return type is void and parameters are street view panorama camera long. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas",neither,neither,neither,neither
6219,StreetViewPanorama_getLocation,get location from street view panorama returns the current location of the user and information regarding the current panorama's adjacent panorama. Return type is Street View Panorama Location and no argument. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6220,StreetViewPanorama_getPanoramaCamera,get panorama camera from street view panorama returns the current orientation and zoo. Return type is Street View Panorama Camera and no argument. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6221,StreetViewPanorama_isPanningGesturesEnabled,is panning gestures enabled from street view panorama returns whether or not the panning gestures are enabled for the use. Return type is boolean and no argument. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6222,StreetViewPanorama_isStreetNamesEnabled,is street names enabled from street view panorama returns whether or not the street names appear on the panoram. Return type is boolean and no argument. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6223,StreetViewPanorama_isUserNavigationEnabled,is user navigation enabled from street view panorama returns whether or not the navigation is enabled for the use. Return type is boolean and no argument. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6224,StreetViewPanorama_isZoomGesturesEnabled,is zoom gestures enabled from street view panorama returns whether or not the zoom gestures are enabled for the use. Return type is boolean and no argument. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6225,StreetViewPanorama_orientationToPoint,orientation to point from street view panorama returns a screen location that corresponds to an orientatio. Return type is Point and parameters are street view panorama orientation. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6226,StreetViewPanorama_pointToOrientation,point to orientation from street view panorama returns the orientation that corresponds to a screen locatio. Return type is Street View Panorama Orientation and parameters are point. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,source,source,source,source
6227,StreetViewPanorama_setOnStreetViewPanoramaCameraChangeListener,set on street view panorama camera change listener from street view panorama sets a callback that's invoked when the camera change. Return type is final void and parameters are street view panorama on street view panorama camera change listener. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6228,StreetViewPanorama_setOnStreetViewPanoramaChangeListener,set on street view panorama change listener from street view panorama sets a callback that's invoked when the panorama change. Return type is final void and parameters are street view panorama on street view panorama change listener. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6229,StreetViewPanorama_setOnStreetViewPanoramaClickListener,set on street view panorama click listener from street view panorama sets a callback that's invoked when the panorama is tappe. Return type is final void and parameters are street view panorama on street view panorama click listener. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6230,StreetViewPanorama_setOnStreetViewPanoramaLongClickListener,set on street view panorama long click listener from street view panorama sets a callback that's invoked when the panorama is long-presse. Return type is final void and parameters are street view panorama on street view panorama long click listener. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,neither
6231,StreetViewPanorama_setPanningGesturesEnabled,set panning gestures enabled from street view panorama sets whether the user is able to use panning gesture. Return type is void and parameters are boolean. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6232,StreetViewPanorama_setPosition,set position from street view panorama sets the street view panorama to a given locatio. Return type is void and parameters are lat lng street view source. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6233,StreetViewPanorama_setPosition,set position from street view panorama sets the street view panorama to a given locatio. Return type is void and parameters are lat lng. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6234,StreetViewPanorama_setPosition,set position from street view panorama sets the street view panorama to a given locatio. Return type is void and parameters are lat lng int. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6235,StreetViewPanorama_setPosition,set position from street view panorama sets the street view panorama to a given locatio. Return type is void and parameters are lat lng int street view source. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6236,StreetViewPanorama_setPosition,set position from street view panorama sets the street view panorama to a given locatio. Return type is void and parameters are string. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6237,StreetViewPanorama_setStreetNamesEnabled,set street names enabled from street view panorama sets whether the user is able to see street names on panorama. Return type is void and parameters are boolean. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6238,StreetViewPanorama_setUserNavigationEnabled,set user navigation enabled from street view panorama sets whether the user is able to move to another panoram. Return type is void and parameters are boolean. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6239,StreetViewPanorama_setZoomGesturesEnabled,set zoom gestures enabled from street view panorama sets whether the user is able to use zoom gesture. Return type is void and parameters are boolean. this is the main class of the street view feature in the google maps sdk for android and is the entry point for all methods related to street view panoramas,sink,sink,sink,sink
6240,StreetViewPanoramaFragment_getStreetViewPanoramaAsync,get street view panorama async from street view panorama fragment sets a callback object which will be triggered when the street view panorama instance is ready to be use. Return type is void and parameters are on street view panorama ready callback. a street view panorama component in an app,source,source,source,source
6241,StreetViewPanoramaFragment_newInstance,"new instance from street view panorama fragment creates a streetview panorama fragment, using default option. Return type is Street View Panorama Fragment and no argument. a street view panorama component in an app",neither,neither,neither,sink
6242,StreetViewPanoramaFragment_newInstance,new instance from street view panorama fragment creates a streetview panorama fragment with the given option. Return type is Street View Panorama Fragment and parameters are street view panorama options. a street view panorama component in an app,neither,neither,neither,sink
6243,StreetViewPanoramaFragment_onActivityCreated,on activity created from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6244,StreetViewPanoramaFragment_onAttach,on attach from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6245,StreetViewPanoramaFragment_onCreate,on create from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6246,StreetViewPanoramaFragment_onCreateView,on create view from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6247,StreetViewPanoramaFragment_onDestroy,on destroy from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6248,StreetViewPanoramaFragment_onDestroyView,on destroy view from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6249,StreetViewPanoramaFragment_onInflate,on inflate from street view panorama fragment parse attributes during inflation from a view hierarchy into the arguments we handl. Return type is void and parameters are activity attribute set bundle. a street view panorama component in an app,neither,neither,neither,sink
6250,StreetViewPanoramaFragment_onLowMemory,on low memory from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6251,StreetViewPanoramaFragment_onPause,on pause from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6252,StreetViewPanoramaFragment_onResume,on resume from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6253,StreetViewPanoramaFragment_onSaveInstanceState,on save instance state from street view panorama fragment . a street view panorama component in an app,sink,sink,neither,sink
6254,StreetViewPanoramaFragment_onStart,on start from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6255,StreetViewPanoramaFragment_onStop,on stop from street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6256,StreetViewPanoramaFragment_setArguments,set arguments from street view panorama fragment . a street view panorama component in an app,sink,sink,sink,sink
6257,StreetViewPanoramaOptions_getPanningGesturesEnabled,get panning gestures enabled from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6258,StreetViewPanoramaOptions_getPanoramaId,get panorama id from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6259,StreetViewPanoramaOptions_getPosition,get position from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6260,StreetViewPanoramaOptions_getRadius,get radius from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6261,StreetViewPanoramaOptions_getSource,get source from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6262,StreetViewPanoramaOptions_getStreetNamesEnabled,get street names enabled from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6263,StreetViewPanoramaOptions_getStreetViewPanoramaCamera,get street view panorama camera from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6264,StreetViewPanoramaOptions_getUseViewLifecycleInFragment,get use view lifecycle in fragment from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6265,StreetViewPanoramaOptions_getUserNavigationEnabled,get user navigation enabled from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6266,StreetViewPanoramaOptions_getZoomGesturesEnabled,get zoom gestures enabled from street view panorama options . defines configuration panorama options for a street view panorama,source,source,source,source
6267,StreetViewPanoramaOptions_panningGesturesEnabled,panning gestures enabled from street view panorama options toggles the ability for users to use pan around on panoramas using gesture. Return type is Street View Panorama Options and parameters are boolean. defines configuration panorama options for a street view panorama,sink,sink,sink,sink
6268,StreetViewPanoramaOptions_panoramaCamera,panorama camera from street view panorama options specifies the initial camera for the street view panoram. Return type is Street View Panorama Options and parameters are street view panorama camera. defines configuration panorama options for a street view panorama,neither,neither,neither,sink
6269,StreetViewPanoramaOptions_panoramaId,panorama id from street view panorama options specifies the initial position for the street view panorama based on a panorama i. Return type is Street View Panorama Options and parameters are string. defines configuration panorama options for a street view panorama,neither,neither,source,source
6270,StreetViewPanoramaOptions_position,position from street view panorama options specifies the initial position for the street view panorama based upon locatio. Return type is Street View Panorama Options and parameters are lat lng. defines configuration panorama options for a street view panorama,neither,neither,sink,sink
6271,StreetViewPanoramaOptions_position,"position from street view panorama options specifies the initial position for the street view panorama based upon location, radius and sourc. Return type is Street View Panorama Options and parameters are lat lng integer street view source. defines configuration panorama options for a street view panorama",sink,sink,sink,sink
6272,StreetViewPanoramaOptions_position,position from street view panorama options specifies the initial position for the street view panorama based upon location and radiu. Return type is Street View Panorama Options and parameters are lat lng integer. defines configuration panorama options for a street view panorama,sink,sink,sink,sink
6273,StreetViewPanoramaOptions_position,position from street view panorama options specifies the initial position for the street view panorama based upon location and sourc. Return type is Street View Panorama Options and parameters are lat lng street view source. defines configuration panorama options for a street view panorama,sink,sink,sink,sink
6274,StreetViewPanoramaOptions_streetNamesEnabled,street names enabled from street view panorama options toggles the ability for users to see street names on panorama. Return type is Street View Panorama Options and parameters are boolean. defines configuration panorama options for a street view panorama,neither,neither,sink,sink
6275,StreetViewPanoramaOptions_toString,to string from street view panorama options . defines configuration panorama options for a street view panorama,sink,sink,sink,sink
6276,StreetViewPanoramaOptions_useViewLifecycleInFragment,"use view lifecycle in fragment from street view panorama options when using a street view panorama fragment, this flag specifies whether the lifecycle of the street view panorama should be tied to the fragment's view or the fragment itsel. Return type is Street View Panorama Options and parameters are boolean. defines configuration panorama options for a street view panorama",neither,neither,neither,sink
6277,StreetViewPanoramaOptions_userNavigationEnabled,user navigation enabled from street view panorama options toggles the ability for users to move between panorama. Return type is Street View Panorama Options and parameters are boolean. defines configuration panorama options for a street view panorama,neither,neither,sink,neither
6278,StreetViewPanoramaOptions_writeToParcel,write to parcel from street view panorama options . defines configuration panorama options for a street view panorama,sink,sink,sink,sink
6279,StreetViewPanoramaOptions_zoomGesturesEnabled,zoom gestures enabled from street view panorama options toggles the ability for users to zoom on panoramas using gesture. Return type is Street View Panorama Options and parameters are boolean. defines configuration panorama options for a street view panorama,sink,sink,neither,sink
6280,StreetViewPanoramaView_getStreetViewPanoramaAsync,get street view panorama async from street view panorama view sets a callback object which will be triggered when the street view panorama instance is ready to be use. Return type is void and parameters are on street view panorama ready callback. a view which displays a street view panorama,source,source,source,source
6281,StreetViewPanoramaView_onCreate,on create from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is final void and parameters are bundle. a view which displays a street view panorama,neither,neither,neither,sink
6282,StreetViewPanoramaView_onDestroy,on destroy from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a street view panorama,neither,neither,neither,neither
6283,StreetViewPanoramaView_onLowMemory,on low memory from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is final void and no argument. a view which displays a street view panorama,neither,neither,sink,sink
6284,StreetViewPanoramaView_onPause,on pause from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is final void and no argument. a view which displays a street view panorama,neither,neither,neither,neither
6285,StreetViewPanoramaView_onResume,on resume from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a street view panorama,neither,neither,neither,sink
6286,StreetViewPanoramaView_onSaveInstanceState,on save instance state from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is final void and parameters are bundle. a view which displays a street view panorama,sink,sink,sink,sink
6287,StreetViewPanoramaView_onStart,on start from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a street view panorama,neither,neither,neither,sink
6288,StreetViewPanoramaView_onStop,on stop from street view panorama view you must call this method from the parent activity/ fragment's corresponding metho. Return type is void and no argument. a view which displays a street view panorama,neither,neither,neither,neither
6289,SupportMapFragment_getMapAsync,get map async from support map fragment sets a callback object which will be triggered when the google map instance is ready to be use. Return type is void and parameters are on map ready callback. a map component in an app,source,source,source,source
6290,SupportMapFragment_newInstance,new instance from support map fragment creates a map fragment with the given option. Return type is Support Map Fragment and parameters are google map options. a map component in an app,neither,neither,neither,neither
6291,SupportMapFragment_newInstance,"new instance from support map fragment creates a map fragment, using default option. Return type is Support Map Fragment and no argument. a map component in an app",neither,neither,neither,neither
6292,SupportMapFragment_onActivityCreated,on activity created from support map fragment . a map component in an app,neither,neither,neither,neither
6293,SupportMapFragment_onAttach,on attach from support map fragment . a map component in an app,neither,neither,neither,neither
6294,SupportMapFragment_onCreate,on create from support map fragment . a map component in an app,neither,neither,neither,neither
6295,SupportMapFragment_onCreateView,on create view from support map fragment . a map component in an app,neither,neither,neither,neither
6296,SupportMapFragment_onDestroy,on destroy from support map fragment . a map component in an app,neither,neither,neither,neither
6297,SupportMapFragment_onDestroyView,on destroy view from support map fragment . a map component in an app,neither,neither,neither,neither
6298,SupportMapFragment_onEnterAmbient,on enter ambient from support map fragment you must call this method from the parent wearable activity's corresponding metho. Return type is final void and parameters are bundle. a map component in an app,neither,neither,neither,neither
6299,SupportMapFragment_onExitAmbient,on exit ambient from support map fragment you must call this method from the parent wearable activity's corresponding metho. Return type is final void and no argument. a map component in an app,neither,neither,neither,neither
6300,SupportMapFragment_onInflate,on inflate from support map fragment parse attributes during inflation from a view hierarchy into the arguments we handl. Return type is void and parameters are activity attribute set bundle. a map component in an app,neither,neither,neither,neither
6301,SupportMapFragment_onLowMemory,on low memory from support map fragment . a map component in an app,neither,neither,neither,neither
6302,SupportMapFragment_onPause,on pause from support map fragment . a map component in an app,neither,neither,neither,neither
6303,SupportMapFragment_onResume,on resume from support map fragment . a map component in an app,neither,neither,neither,neither
6304,SupportMapFragment_onSaveInstanceState,on save instance state from support map fragment provides a bundle to store the state of the fragment before it gets destroye. Return type is void and parameters are bundle. a map component in an app,sink,neither,neither,neither
6305,SupportMapFragment_onStart,on start from support map fragment . a map component in an app,neither,neither,neither,neither
6306,SupportMapFragment_onStop,on stop from support map fragment . a map component in an app,neither,neither,neither,neither
6307,SupportMapFragment_setArguments,set arguments from support map fragment . a map component in an app,sink,sink,sink,sink
6308,SupportStreetViewPanoramaFragment_getStreetViewPanoramaAsync,get street view panorama async from support street view panorama fragment sets a callback object which will be triggered when the street view panorama instance is ready to be use. Return type is void and parameters are on street view panorama ready callback. a street view panorama component in an app,source,source,source,source
6309,SupportStreetViewPanoramaFragment_newInstance,"new instance from support street view panorama fragment creates a streetview panorama fragment, using default option. Return type is Support Street View Panorama Fragment and no argument. a street view panorama component in an app",neither,neither,neither,sink
6310,SupportStreetViewPanoramaFragment_newInstance,new instance from support street view panorama fragment creates a streetview panorama fragment with the given option. Return type is Support Street View Panorama Fragment and parameters are street view panorama options. a street view panorama component in an app,neither,neither,neither,sink
6311,SupportStreetViewPanoramaFragment_onActivityCreated,on activity created from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6312,SupportStreetViewPanoramaFragment_onAttach,on attach from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6313,SupportStreetViewPanoramaFragment_onCreate,on create from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6314,SupportStreetViewPanoramaFragment_onCreateView,on create view from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6315,SupportStreetViewPanoramaFragment_onDestroy,on destroy from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6316,SupportStreetViewPanoramaFragment_onDestroyView,on destroy view from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6317,SupportStreetViewPanoramaFragment_onInflate,on inflate from support street view panorama fragment parse attributes during inflation from a view hierarchy into the arguments we handl. Return type is void and parameters are activity attribute set bundle. a street view panorama component in an app,neither,neither,neither,sink
6318,SupportStreetViewPanoramaFragment_onLowMemory,on low memory from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6319,SupportStreetViewPanoramaFragment_onPause,on pause from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,neither
6320,SupportStreetViewPanoramaFragment_onResume,on resume from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6321,SupportStreetViewPanoramaFragment_onSaveInstanceState,on save instance state from support street view panorama fragment . a street view panorama component in an app,sink,sink,neither,sink
6322,SupportStreetViewPanoramaFragment_onStart,on start from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6323,SupportStreetViewPanoramaFragment_onStop,on stop from support street view panorama fragment . a street view panorama component in an app,neither,neither,neither,sink
6324,SupportStreetViewPanoramaFragment_setArguments,set arguments from support street view panorama fragment . a street view panorama component in an app,sink,sink,sink,sink
6325,UiSettings_isCompassEnabled,is compass enabled from ui settings gets whether the compass is enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6326,UiSettings_isIndoorLevelPickerEnabled,is indoor level picker enabled from ui settings gets whether the indoor level picker is enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6327,UiSettings_isMapToolbarEnabled,is map toolbar enabled from ui settings gets whether the map toolbar is enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6328,UiSettings_isMyLocationButtonEnabled,is my location button enabled from ui settings gets whether the my-location button is enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,neither
6329,UiSettings_isRotateGesturesEnabled,is rotate gestures enabled from ui settings gets whether rotate gestures are enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6330,UiSettings_isScrollGesturesEnabled,is scroll gestures enabled from ui settings gets whether scroll gestures are enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6331,UiSettings_isScrollGesturesEnabledDuringRotateOrZoom,is scroll gestures enabled during rotate or zoom from ui settings gets whether scroll gestures are enabled/disabled during rotation and zoom gesture. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6332,UiSettings_isTiltGesturesEnabled,is tilt gestures enabled from ui settings gets whether tilt gestures are enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6333,UiSettings_isZoomControlsEnabled,is zoom controls enabled from ui settings gets whether the zoom controls are enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6334,UiSettings_isZoomGesturesEnabled,is zoom gestures enabled from ui settings gets whether zoom gestures are enabled/disable. Return type is boolean and no argument. settings for the user interface of a google map,source,source,source,source
6335,UiSettings_setAllGesturesEnabled,set all gestures enabled from ui settings sets the preference for whether all gestures should be enabled or disable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6336,UiSettings_setCompassEnabled,set compass enabled from ui settings enables or disables the compas. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6337,UiSettings_setIndoorLevelPickerEnabled,set indoor level picker enabled from ui settings sets whether the indoor level picker is enabled when indoor mode is enable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6338,UiSettings_setMapToolbarEnabled,set map toolbar enabled from ui settings sets the preference for whether the map toolbar should be enabled or disable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6339,UiSettings_setMyLocationButtonEnabled,set my location button enabled from ui settings enables or disables the my-location butto. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6340,UiSettings_setRotateGesturesEnabled,set rotate gestures enabled from ui settings sets the preference for whether rotate gestures should be enabled or disable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6341,UiSettings_setScrollGesturesEnabled,set scroll gestures enabled from ui settings sets the preference for whether scroll gestures should be enabled or disable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6342,UiSettings_setScrollGesturesEnabledDuringRotateOrZoom,set scroll gestures enabled during rotate or zoom from ui settings sets the preference for whether scroll gestures can take place at the same time as a zoom or rotate gestur. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6343,UiSettings_setTiltGesturesEnabled,set tilt gestures enabled from ui settings sets the preference for whether tilt gestures should be enabled or disable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6344,UiSettings_setZoomControlsEnabled,set zoom controls enabled from ui settings enables or disables the zoom control. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6345,UiSettings_setZoomGesturesEnabled,set zoom gestures enabled from ui settings sets the preference for whether zoom gestures should be enabled or disable. Return type is void and parameters are boolean. settings for the user interface of a google map,sink,sink,sink,sink
6346,GoogleMap.CancelableCallback_onCancel,on cancel from google map cancelable callback invoked when a task is cancele. Return type is  void and no argument. a callback interface for reporting when a task is complete or canceled,neither,neither,neither,neither
6347,GoogleMap.CancelableCallback_onFinish,on finish from google map cancelable callback invoked when a task is complet. Return type is  void and no argument. a callback interface for reporting when a task is complete or canceled,neither,neither,neither,neither
6348,GoogleMap.InfoWindowAdapter_getInfoContents,get info contents from google map info window adapter provides custom contents for the default info window frame of a marke. Return type is View and parameters are marker. provides views for customized rendering of info windows,source,source,source,source
6349,GoogleMap.InfoWindowAdapter_getInfoWindow,get info window from google map info window adapter provides a custom info window for a marke. Return type is View and parameters are marker. provides views for customized rendering of info windows,source,source,source,source
6350,GoogleMap.OnCameraChangeListener_onCameraChange,"on camera change from google map on camera change listener called after the camera position has change. Return type is  void and parameters are camera position. this interface is deprecated  replaced by google map on camera move started listener, google map on camera move listener and google map on camera idle listener  the order in which the deprecated on camera change method will be called in relation to the methods in the new camera change listeners is undefined",neither,neither,neither,neither
6351,GoogleMap.OnCameraIdleListener_onCameraIdle,"on camera idle from google map on camera idle listener called when camera movement has ended, there are no pending animations and the user has stopped interacting with the ma. Return type is  void and no argument. callback interface for when camera movement has ended",neither,neither,neither,neither
6352,GoogleMap.OnCameraMoveCanceledListener_onCameraMoveCanceled,on camera move canceled from google map on camera move canceled listener called when the developer explicitly calls the google mapstop animati. Return type is  void and no argument. callback interface for when the camera's motion has been stopped or when the camera starts moving for a new reason,neither,neither,neither,neither
6353,GoogleMap.OnCameraMoveListener_onCameraMove,on camera move from google map on camera move listener called repeatedly as the camera continues to move after an on camera move started cal. Return type is  void and no argument. callback interface for when the camera changes position,neither,neither,neither,neither
6354,GoogleMap.OnCameraMoveStartedListener_onCameraMoveStarted,on camera move started from google map on camera move started listener called when the camera starts moving after it has been idle or when the reason for camera motion has change. Return type is  void and parameters are int. callback interface for when the camera motion starts,neither,neither,neither,neither
6355,GoogleMap.OnCircleClickListener_onCircleClick,on circle click from google map on circle click listener called when a circle is clicke. Return type is  void and parameters are circle. callback interface for when a circle is clicked,neither,neither,neither,neither
6356,GoogleMap.OnGroundOverlayClickListener_onGroundOverlayClick,on ground overlay click from google map on ground overlay click listener called when a ground overlay is clicke. Return type is  void and parameters are ground overlay. callback interface for when a ground overlay is clicked,neither,neither,neither,neither
6357,GoogleMap.OnIndoorStateChangeListener_onIndoorBuildingFocused,"on indoor building focused from google map on indoor state change listener the map maintains a notion of focused building, which is the building currently centered in the viewport or otherwise selected by the user through the ui or the location provide. Return type is  void and no argument. a listener for when the indoor state changes",neither,neither,neither,neither
6358,GoogleMap.OnIndoorStateChangeListener_onIndoorLevelActivated,on indoor level activated from google map on indoor state change listener the map keeps track of the active level for each building which has been visited or otherwise had a level selecte. Return type is  void and parameters are indoor building. a listener for when the indoor state changes,neither,neither,neither,neither
6359,GoogleMap.OnInfoWindowClickListener_onInfoWindowClick,on info window click from google map on info window click listener called when the marker's info window is clicke. Return type is  void and parameters are marker. callback interface for click/tap events on a marker's info window,neither,neither,neither,neither
6360,GoogleMap.OnInfoWindowCloseListener_onInfoWindowClose,on info window close from google map on info window close listener called when the marker's info window is close. Return type is  void and parameters are marker. callback interface for close events on a marker's info window,neither,neither,neither,neither
6361,GoogleMap.OnInfoWindowLongClickListener_onInfoWindowLongClick,on info window long click from google map on info window long click listener called when the user makes a long-press gesture on the marker's info windo. Return type is  void and parameters are marker. callback interface for when the user long presses on a marker's info window,neither,neither,neither,neither
6362,GoogleMap.OnMapClickListener_onMapClick,"on map click from google map on map click listener called when the user makes a tap gesture on the map, but only if none of the overlays of the map handled the gestur. Return type is  void and parameters are lat lng. callback interface for when the user taps on the map",neither,neither,neither,neither
6363,GoogleMap.OnMapLoadedCallback_onMapLoaded,on map loaded from google map on map loaded callback called when the map has finished renderin. Return type is  void and no argument. callback interface for when the map has finished rendering,neither,neither,neither,neither
6364,GoogleMap.OnMapLongClickListener_onMapLongClick,"on map long click from google map on map long click listener called when the user makes a long-press gesture on the map, but only if none of the overlays of the map handled the gestur. Return type is  void and parameters are lat lng. callback interface for when the user long presses on the map",neither,neither,neither,neither
6365,GoogleMap.OnMarkerClickListener_onMarkerClick,on marker click from google map on marker click listener called when a marker has been clicked or tappe. Return type is  boolean and parameters are marker. defines signatures for methods that are called when a marker is clicked or tapped,neither,neither,neither,neither
6366,GoogleMap.OnMarkerDragListener_onMarkerDrag,on marker drag from google map on marker drag listener called repeatedly while a marker is being dragge. Return type is  void and parameters are marker. callback interface for drag events on markers,neither,neither,neither,neither
6367,GoogleMap.OnMarkerDragListener_onMarkerDragEnd,on marker drag end from google map on marker drag listener called when a marker has finished being dragge. Return type is  void and parameters are marker. callback interface for drag events on markers,neither,neither,neither,neither
6368,GoogleMap.OnMarkerDragListener_onMarkerDragStart,on marker drag start from google map on marker drag listener called when a marker starts being dragge. Return type is  void and parameters are marker. callback interface for drag events on markers,neither,neither,neither,neither
6369,GoogleMap.OnMyLocationButtonClickListener_onMyLocationButtonClick,on my location button click from google map on my location button click listener called when the my location button is clicke. Return type is  boolean and no argument. callback interface for when the my location button is clicked,neither,neither,neither,neither
6370,GoogleMap.OnMyLocationChangeListener_onMyLocationChange,"on my location change from google map on my location change listener called when the location of the my location dot has change. Return type is  void and parameters are location. this interface is deprecated  use com google android gms location fused location provider api instead  fused location provider api provides improved location finding and power usage and is used by the "" my location"" blue dot  see the select current place tutorial, which uses the fused location provider api, or the location developer guide",neither,neither,neither,neither
6371,GoogleMap.OnMyLocationClickListener_onMyLocationClick,on my location click from google map on my location click listener called when the my location dot is clicke. Return type is  void and parameters are location. callback interface for when the my location dot  is clicked,neither,neither,neither,neither
6372,GoogleMap.OnPoiClickListener_onPoiClick,on poi click from google map on poi click listener called when a poi is clicked or tappe. Return type is  void and parameters are point of interest. a listener for poi taps,neither,neither,neither,neither
6373,GoogleMap.OnPolygonClickListener_onPolygonClick,on polygon click from google map on polygon click listener called when a polygon is clicke. Return type is  void and parameters are polygon. callback interface for when a polygon is clicked,neither,neither,neither,neither
6374,GoogleMap.OnPolylineClickListener_onPolylineClick,on polyline click from google map on polyline click listener called when a polyline is clicke. Return type is  void and parameters are polyline. callback interface for when a polyline is clicked,neither,neither,neither,neither
6375,GoogleMap.SnapshotReadyCallback_onSnapshotReady,on snapshot ready from google map snapshot ready callback invoked when the snapshot has been take. Return type is  void and parameters are bitmap. callback interface to notify when the snapshot has been taken,neither,neither,neither,neither
6376,LocationSource_activate,"activate from location source activates this provide. Return type is  void and parameters are location source on location changed listener. defines an interface for providing location data, typically to a google map object",neither,neither,neither,neither
6377,LocationSource_deactivate,"deactivate from location source deactivates this provide. Return type is  void and no argument. defines an interface for providing location data, typically to a google map object",neither,neither,neither,neither
6378,LocationSource.OnLocationChangedListener_onLocationChanged,on location changed from location source on location changed listener called when a new user location is know. Return type is  void and parameters are location. handles a location update,neither,neither,neither,neither
6379,OnMapReadyCallback_onMapReady,on map ready from on map ready callback called when the map is ready to be use. Return type is  void and parameters are google map. callback interface for when the map is ready to be used,neither,neither,neither,neither
6380,OnMapsSdkInitializedCallback_onMapsSdkInitialized,on maps sdk initialized from on maps sdk initialized callback the maps sdk calls this method to inform you which maps maps initializer renderer has been loaded for your applicatio. Return type is  void and parameters are maps initializer renderer. callback interface used by the maps sdk to inform you which maps maps initializer renderer type has been loaded for your application,neither,neither,neither,neither
6381,OnStreetViewPanoramaReadyCallback_onStreetViewPanoramaReady,on street view panorama ready from on street view panorama ready callback called when the street view panorama is ready to be use. Return type is  void and parameters are street view panorama. callback interface for when the street view panorama is ready to be used,neither,neither,neither,neither
6382,StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener_onStreetViewPanoramaCameraChange,on street view panorama camera change from street view panorama on street view panorama camera change listener called when the user makes changes to the camera on the panorama or if the camera is changed programmaticall. Return type is  void and parameters are street view panorama camera. a listener for when the street view panorama camera change,neither,neither,neither,neither
6383,StreetViewPanorama.OnStreetViewPanoramaChangeListener_onStreetViewPanoramaChange,on street view panorama change from street view panorama on street view panorama change listener the street view panorama performs an animated transition from one location to another when the user performs a manual navigation actio. Return type is  void and parameters are street view panorama location. a listener for when the street view panorama loads a new panoram,neither,neither,neither,neither
6384,StreetViewPanorama.OnStreetViewPanoramaClickListener_onStreetViewPanoramaClick,"on street view panorama click from street view panorama on street view panorama click listener called when the user makes a tap gesture on the panorama, but only if none of the overlays of the panorama handled the gestur. Return type is  void and parameters are street view panorama orientation. callback interface for when the user taps on the panorama",neither,neither,neither,neither
6385,StreetViewPanorama.OnStreetViewPanoramaLongClickListener_onStreetViewPanoramaLongClick,"on street view panorama long click from street view panorama on street view panorama long click listener called when the user makes a long-press gesture on the panorama, but only if none of the overlays of the panorama handled the gestur. Return type is  void and parameters are street view panorama orientation. callback interface for when the user long presses on the panorama",neither,neither,neither,neither
6386,GoogleMap.CancelableCallback_onCancel,on cancel from google map cancelable callback invoked when a task is cancele. Return type is  void and no argument. a callback interface for reporting when a task is complete or canceled,neither,neither,neither,neither
6387,GoogleMap.CancelableCallback_onFinish,on finish from google map cancelable callback invoked when a task is complet. Return type is  void and no argument. a callback interface for reporting when a task is complete or canceled,neither,neither,neither,neither
6388,GoogleMap.InfoWindowAdapter_getInfoContents,get info contents from google map info window adapter provides custom contents for the default info window frame of a marke. Return type is View and parameters are marker. provides views for customized rendering of info windows,source,source,source,source
6389,GoogleMap.InfoWindowAdapter_getInfoWindow,get info window from google map info window adapter provides a custom info window for a marke. Return type is View and parameters are marker. provides views for customized rendering of info windows,source,source,source,source
6390,GoogleMap.OnCameraChangeListener_onCameraChange,"on camera change from google map on camera change listener called after the camera position has change. Return type is  void and parameters are camera position. this interface is deprecated  replaced by google map on camera move started listener, google map on camera move listener and google map on camera idle listener  the order in which the deprecated on camera change method will be called in relation to the methods in the new camera change listeners is undefined",neither,neither,neither,neither
6391,GoogleMap.OnCameraIdleListener_onCameraIdle,"on camera idle from google map on camera idle listener called when camera movement has ended, there are no pending animations and the user has stopped interacting with the ma. Return type is  void and no argument. callback interface for when camera movement has ended",neither,neither,neither,neither
6392,GoogleMap.OnCameraMoveCanceledListener_onCameraMoveCanceled,on camera move canceled from google map on camera move canceled listener called when the developer explicitly calls the google mapstop animati. Return type is  void and no argument. callback interface for when the camera's motion has been stopped or when the camera starts moving for a new reason,neither,neither,neither,neither
6393,GoogleMap.OnCameraMoveListener_onCameraMove,on camera move from google map on camera move listener called repeatedly as the camera continues to move after an on camera move started cal. Return type is  void and no argument. callback interface for when the camera changes position,neither,neither,neither,neither
6394,GoogleMap.OnCameraMoveStartedListener_onCameraMoveStarted,on camera move started from google map on camera move started listener called when the camera starts moving after it has been idle or when the reason for camera motion has change. Return type is  void and parameters are int. callback interface for when the camera motion starts,neither,neither,neither,neither
6395,GoogleMap.OnCircleClickListener_onCircleClick,on circle click from google map on circle click listener called when a circle is clicke. Return type is  void and parameters are circle. callback interface for when a circle is clicked,neither,neither,neither,neither
6396,GoogleMap.OnGroundOverlayClickListener_onGroundOverlayClick,on ground overlay click from google map on ground overlay click listener called when a ground overlay is clicke. Return type is  void and parameters are ground overlay. callback interface for when a ground overlay is clicked,neither,neither,neither,neither
6397,GoogleMap.OnIndoorStateChangeListener_onIndoorBuildingFocused,"on indoor building focused from google map on indoor state change listener the map maintains a notion of focused building, which is the building currently centered in the viewport or otherwise selected by the user through the ui or the location provide. Return type is  void and no argument. a listener for when the indoor state changes",neither,neither,neither,neither
6398,GoogleMap.OnIndoorStateChangeListener_onIndoorLevelActivated,on indoor level activated from google map on indoor state change listener the map keeps track of the active level for each building which has been visited or otherwise had a level selecte. Return type is  void and parameters are indoor building. a listener for when the indoor state changes,neither,neither,neither,neither
6399,GoogleMap.OnInfoWindowClickListener_onInfoWindowClick,on info window click from google map on info window click listener called when the marker's info window is clicke. Return type is  void and parameters are marker. callback interface for click/tap events on a marker's info window,neither,neither,neither,neither
6400,GoogleMap.OnInfoWindowCloseListener_onInfoWindowClose,on info window close from google map on info window close listener called when the marker's info window is close. Return type is  void and parameters are marker. callback interface for close events on a marker's info window,neither,neither,neither,neither
6401,GoogleMap.OnInfoWindowLongClickListener_onInfoWindowLongClick,on info window long click from google map on info window long click listener called when the user makes a long-press gesture on the marker's info windo. Return type is  void and parameters are marker. callback interface for when the user long presses on a marker's info window,neither,neither,neither,neither
6402,GoogleMap.OnMapClickListener_onMapClick,"on map click from google map on map click listener called when the user makes a tap gesture on the map, but only if none of the overlays of the map handled the gestur. Return type is  void and parameters are lat lng. callback interface for when the user taps on the map",neither,neither,neither,neither
6403,GoogleMap.OnMapLoadedCallback_onMapLoaded,on map loaded from google map on map loaded callback called when the map has finished renderin. Return type is  void and no argument. callback interface for when the map has finished rendering,neither,neither,neither,neither
6404,GoogleMap.OnMapLongClickListener_onMapLongClick,"on map long click from google map on map long click listener called when the user makes a long-press gesture on the map, but only if none of the overlays of the map handled the gestur. Return type is  void and parameters are lat lng. callback interface for when the user long presses on the map",neither,neither,neither,neither
6405,GoogleMap.OnMarkerClickListener_onMarkerClick,on marker click from google map on marker click listener called when a marker has been clicked or tappe. Return type is  boolean and parameters are marker. defines signatures for methods that are called when a marker is clicked or tapped,neither,neither,neither,neither
6406,GoogleMap.OnMarkerDragListener_onMarkerDrag,on marker drag from google map on marker drag listener called repeatedly while a marker is being dragge. Return type is  void and parameters are marker. callback interface for drag events on markers,neither,neither,neither,neither
6407,GoogleMap.OnMarkerDragListener_onMarkerDragEnd,on marker drag end from google map on marker drag listener called when a marker has finished being dragge. Return type is  void and parameters are marker. callback interface for drag events on markers,neither,neither,neither,neither
6408,GoogleMap.OnMarkerDragListener_onMarkerDragStart,on marker drag start from google map on marker drag listener called when a marker starts being dragge. Return type is  void and parameters are marker. callback interface for drag events on markers,neither,neither,neither,neither
6409,GoogleMap.OnMyLocationButtonClickListener_onMyLocationButtonClick,on my location button click from google map on my location button click listener called when the my location button is clicke. Return type is  boolean and no argument. callback interface for when the my location button is clicked,neither,neither,neither,neither
6410,GoogleMap.OnMyLocationChangeListener_onMyLocationChange,"on my location change from google map on my location change listener called when the location of the my location dot has change. Return type is  void and parameters are location. this interface is deprecated  use com google android gms location fused location provider api instead  fused location provider api provides improved location finding and power usage and is used by the "" my location"" blue dot  see the select current place tutorial, which uses the fused location provider api, or the location developer guide",neither,neither,neither,neither
6411,GoogleMap.OnMyLocationClickListener_onMyLocationClick,on my location click from google map on my location click listener called when the my location dot is clicke. Return type is  void and parameters are location. callback interface for when the my location dot  is clicked,neither,neither,neither,neither
6412,GoogleMap.OnPoiClickListener_onPoiClick,on poi click from google map on poi click listener called when a poi is clicked or tappe. Return type is  void and parameters are point of interest. a listener for poi taps,neither,neither,neither,neither
6413,GoogleMap.OnPolygonClickListener_onPolygonClick,on polygon click from google map on polygon click listener called when a polygon is clicke. Return type is  void and parameters are polygon. callback interface for when a polygon is clicked,neither,neither,neither,neither
6414,GoogleMap.OnPolylineClickListener_onPolylineClick,on polyline click from google map on polyline click listener called when a polyline is clicke. Return type is  void and parameters are polyline. callback interface for when a polyline is clicked,neither,neither,neither,neither
6415,GoogleMap.SnapshotReadyCallback_onSnapshotReady,on snapshot ready from google map snapshot ready callback invoked when the snapshot has been take. Return type is  void and parameters are bitmap. callback interface to notify when the snapshot has been taken,neither,neither,neither,neither
6416,StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener_onStreetViewPanoramaCameraChange,on street view panorama camera change from street view panorama on street view panorama camera change listener called when the user makes changes to the camera on the panorama or if the camera is changed programmaticall. Return type is  void and parameters are street view panorama camera. a listener for when the street view panorama camera change,neither,neither,neither,neither
6417,StreetViewPanorama.OnStreetViewPanoramaChangeListener_onStreetViewPanoramaChange,on street view panorama change from street view panorama on street view panorama change listener the street view panorama performs an animated transition from one location to another when the user performs a manual navigation actio. Return type is  void and parameters are street view panorama location. a listener for when the street view panorama loads a new panoram,neither,neither,neither,neither
6418,StreetViewPanorama.OnStreetViewPanoramaClickListener_onStreetViewPanoramaClick,"on street view panorama click from street view panorama on street view panorama click listener called when the user makes a tap gesture on the panorama, but only if none of the overlays of the panorama handled the gestur. Return type is  void and parameters are street view panorama orientation. callback interface for when the user taps on the panorama",neither,neither,neither,neither
6419,StreetViewPanorama.OnStreetViewPanoramaLongClickListener_onStreetViewPanoramaLongClick,"on street view panorama long click from street view panorama on street view panorama long click listener called when the user makes a long-press gesture on the panorama, but only if none of the overlays of the panorama handled the gestur. Return type is  void and parameters are street view panorama orientation. callback interface for when the user long presses on the panorama",neither,neither,neither,neither
6420,LocationSource.OnLocationChangedListener_onLocationChanged,on location changed from location source on location changed listener called when a new user location is know. Return type is  void and parameters are location. handles a location update,neither,neither,neither,neither
6421,Filters_and,and from filters returns a filter that matches items which are matched by every element of filter. Return type is Filter and parameters are iterable. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6422,Filters_and,and from filters returns a logical expression which combines filters with the ' a n d' operato. Return type is Filter and parameters are filter filter   . a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6423,Filters_contains,contains from filters returns a filter which checks whether value is a substring of fiel. Return type is Filter and parameters are searchable metadata field string. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6424,Filters_eq,eq from filters returns a filter which checks whether a custom property with the specified key exists and its value equals valu. Return type is Filter and parameters are custom property key string. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6425,Filters_eq,eq from filters returns a filter which checks if the value of field equals valu. Return type is Filter and parameters are searchable metadata field t. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6426,Filters_greaterThan,greater than from filters returns a filter which checks if the value of field is greater than valu. Return type is Filter and parameters are searchable ordered metadata field t. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6427,Filters_greaterThanEquals,greater than equals from filters returns a filter which checks if the value of field is greater than or equal to valu. Return type is Filter and parameters are searchable ordered metadata field t. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6428,Filters_in,in from filters returns a filter which checks whether value is an element of fiel. Return type is Filter and parameters are searchable collection metadata field t. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6429,Filters_lessThan,less than from filters returns a filter which checks if the value of field is less than valu. Return type is Filter and parameters are searchable ordered metadata field t. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6430,Filters_lessThanEquals,less than equals from filters returns a filter which checks if the value of field is less than or equal to valu. Return type is Filter and parameters are searchable ordered metadata field t. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6431,Filters_not,not from filters returns the negation of an filte. Return type is Filter and parameters are filter. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6432,Filters_openedByMe,opened by me from filters returns a filter that matches only items that the current user has opened in the pas. Return type is Filter and no argument. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6433,Filters_or,or from filters returns a filter that matches items which are matched by any element of filter. Return type is Filter and parameters are iterable. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6434,Filters_or,or from filters returns a filter that matches items which are matched by any of the provided filter parameter. Return type is Filter and parameters are filter filter   . a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6435,Filters_ownedByMe,owned by me from filters returns a filter that matches only items that the current user own. Return type is Filter and no argument. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6436,Filters_sharedWithMe,shared with me from filters returns a filter that matches only items that are shared with the current use. Return type is Filter and no argument. a factory for creating filters that are used to construct a query,neither,neither,neither,neither
6437,Query_getFilter,"get filter from query get the filters that will restrict the query result. Return type is Filter and no argument. the query object specifies constraints on a query result, including filters and sort order",source,source,source,source
6438,Query_getPageToken,"get page token from query deprecate. Return type is String and no argument. the query object specifies constraints on a query result, including filters and sort order",source,source,source,source
6439,Query_getSortOrder,"get sort order from query returns sort order containing information about sorting order of the quer. Return type is Sort Order and no argument. the query object specifies constraints on a query result, including filters and sort order",source,source,source,source
6440,Query_toString,"to string from query . the query object specifies constraints on a query result, including filters and sort order",neither,neither,sink,neither
6441,Query_writeToParcel,"write to parcel from query . the query object specifies constraints on a query result, including filters and sort order",sink,sink,sink,sink
6442,Query.Builder_addFilter,add filter from query builder adds a search filter to the quer. Return type is Query. Builder and parameters are filter. a builder for creating queries,neither,neither,neither,neither
6443,Query.Builder_build,build from query builder . a builder for creating queries,neither,neither,neither,neither
6444,Query.Builder_setPageToken,set page token from query builder this method was deprecated paging is not supporte. Return type is Query. Builder and parameters are string. a builder for creating queries,sink,sink,sink,sink
6445,Query.Builder_setSortOrder,set sort order from query builder sets the sort order to be used to sort the query result. Return type is Query. Builder and parameters are sort order. a builder for creating queries,sink,sink,sink,sink
6446,SortOrder_toString,to string from sort order . sort order is used to specify the results order in the query object using the set sort order method,sink,sink,neither,sink
6447,SortOrder_writeToParcel,write to parcel from sort order . sort order is used to specify the results order in the query object using the set sort order method,sink,sink,sink,sink
6448,SortOrder.Builder_addSortAscending,add sort ascending from sort order builder adds the sortable metadata field to be used to sort the query results in ascending order of the values of the sort fiel. Return type is Sort Order. Builder and parameters are sortable metadata field.,neither,neither,neither,neither
6449,SortOrder.Builder_addSortDescending,add sort descending from sort order builder adds the sortable metadata field to be used to sort the query results in descending order of the values of the sort fiel. Return type is Sort Order. Builder and parameters are sortable metadata field.,neither,neither,neither,neither
6450,SortOrder.Builder_build,build from sort order builder .,neither,neither,neither,neither
6451,Query.Builder_addFilter,add filter from query builder adds a search filter to the quer. Return type is Query. Builder and parameters are filter. a builder for creating queries,neither,neither,neither,neither
6452,Query.Builder_build,build from query builder . a builder for creating queries,neither,neither,neither,neither
6453,Query.Builder_setPageToken,set page token from query builder this method was deprecated paging is not supporte. Return type is Query. Builder and parameters are string. a builder for creating queries,sink,sink,sink,sink
6454,Query.Builder_setSortOrder,set sort order from query builder sets the sort order to be used to sort the query result. Return type is Query. Builder and parameters are sort order. a builder for creating queries,sink,sink,sink,sink
6455,SortOrder.Builder_addSortAscending,add sort ascending from sort order builder adds the sortable metadata field to be used to sort the query results in ascending order of the values of the sort fiel. Return type is Sort Order. Builder and parameters are sortable metadata field.,neither,neither,neither,neither
6456,SortOrder.Builder_addSortDescending,add sort descending from sort order builder adds the sortable metadata field to be used to sort the query results in descending order of the values of the sort fiel. Return type is Sort Order. Builder and parameters are sortable metadata field.,neither,neither,neither,neither
6457,SortOrder.Builder_build,build from sort order builder .,neither,neither,neither,neither
6458,ClockType_getClockType,get clock type from clock type extracts clock typ. Return type is int and no argument. clock type informs stream protect what is the clock of the packet receiving time  in frame info from client app,source,source,source,source
6459,ClockType_toString,to string from clock type . clock type informs stream protect what is the clock of the packet receiving time  in frame info from client app,source,source,source,source
6460,ClockType_writeToParcel,write to parcel from clock type . clock type informs stream protect what is the clock of the packet receiving time  in frame info from client app,sink,sink,sink,sink
6461,FrameInfo_getFrameId,"get frame id from frame info the id of the frame, or frame numbe. Return type is int and no argument. a frame info instance is a parcelable that contains data about a video frame of a streaming session",source,source,source,source
6462,FrameInfo_getFrameReceiveEndTimeUs,get frame receive end time us from frame info the arrival time of the last packet for this frame in microsecond. Return type is long and no argument. a frame info instance is a parcelable that contains data about a video frame of a streaming session,source,source,source,source
6463,FrameInfo_getFrameReceiveStartTimeUs,get frame receive start time us from frame info the arrival time of the first packet for this frame in microsecond. Return type is long and no argument. a frame info instance is a parcelable that contains data about a video frame of a streaming session,source,source,source,source
6464,FrameInfo_getFrameSizeBytes,get frame size bytes from frame info the size of the frame in byte. Return type is int and no argument. a frame info instance is a parcelable that contains data about a video frame of a streaming session,source,source,source,source
6465,FrameInfo_toString,to string from frame info . a frame info instance is a parcelable that contains data about a video frame of a streaming session,source,source,sink,sink
6466,FrameInfo_writeToParcel,write to parcel from frame info . a frame info instance is a parcelable that contains data about a video frame of a streaming session,sink,sink,sink,sink
6467,StreamProtect_getClient,get client from stream protect returns a stream protect client that is used to access all api. Return type is Stream Protect Client and parameters are activity. helpers for getting a stream protect client for accessing the stream protect api,source,source,source,source
6468,StreamProtect_getClient,get client from stream protect returns a stream protect client that is used to access all api. Return type is Stream Protect Client and parameters are context. helpers for getting a stream protect client for accessing the stream protect api,source,source,source,source
6469,StreamProtectEvent_getEventCode,get event code from stream protect event extracts the status of stream protec. Return type is int and no argument. a stream protect event instance is a parcelable that indicates the status of stream protect,source,source,source,source
6470,StreamProtectEvent_toString,to string from stream protect event . a stream protect event instance is a parcelable that indicates the status of stream protect,neither,neither,neither,neither
6471,StreamProtectEvent_writeToParcel,write to parcel from stream protect event . a stream protect event instance is a parcelable that indicates the status of stream protect,sink,sink,sink,sink
6472,StreamProtectOptions_getClockType,get clock type from stream protect options returns clock typ. Return type is Clock Type and no argument. stream protect options configure stream protect,source,source,source,source
6473,StreamProtectOptions_getExpectedFps,get expected fps from stream protect options returns the expected video frames per second for a sessio. Return type is int and no argument. stream protect options configure stream protect,source,source,source,source
6474,StreamProtectOptions_toString,to string from stream protect options . stream protect options configure stream protect,sink,sink,sink,neither
6475,StreamProtectOptions_writeToParcel,write to parcel from stream protect options . stream protect options configure stream protect,sink,sink,sink,sink
6476,StreamProtectOptions.Builder_build,build from stream protect options builder create a mutable stream protect option. Return type is Stream Protect Options and no argument. builder to create a stream protect options,neither,neither,neither,neither
6477,StreamProtectOptions.Builder_setClockType,set clock type from stream protect options builder setter for clock typ. Return type is Stream Protect Options. Builder and parameters are clock type. builder to create a stream protect options,sink,sink,sink,sink
6478,StreamProtectOptions.Builder_setExpectedFps,set expected fps from stream protect options builder setter for expected fp. Return type is Stream Protect Options. Builder and parameters are int. builder to create a stream protect options,sink,sink,sink,sink
6479,OnStreamProtectEventListener_onEvent,on event from on stream protect event listener callback to handle stream protect event reported from stream protect core algorith. Return type is  void and parameters are stream protect event. listener for stream protect event,neither,neither,neither,neither
6480,StreamProtectClient_disable,disable from stream protect client disables/stops stream protect when the current session end. Return type is Task and no argument. stream protect client that handles api calls,neither,neither,neither,neither
6481,StreamProtectClient_enable,enable from stream protect client enables stream protect for a streaming sessio. Return type is Task and parameters are stream protect options on stream protect event listener. stream protect client that handles api calls,neither,neither,sink,neither
6482,StreamProtectClient_isFeatureSupported,is feature supported from stream protect client returns whether the current device supports stream protec. Return type is Task and no argument. stream protect client that handles api calls,neither,neither,neither,neither
6483,StreamProtectClient_submitFrameInfo,submit frame info from stream protect client informs stream protect a newly arrived frame using frame inf. Return type is Task and parameters are frame info. stream protect client that handles api calls,sink,sink,sink,sink
6484,StreamProtectOptions.Builder_build,build from stream protect options builder create a mutable stream protect option. Return type is Stream Protect Options and no argument. builder to create a stream protect options,neither,neither,neither,neither
6485,StreamProtectOptions.Builder_setClockType,set clock type from stream protect options builder setter for clock typ. Return type is Stream Protect Options. Builder and parameters are clock type. builder to create a stream protect options,sink,sink,sink,sink
6486,StreamProtectOptions.Builder_setExpectedFps,set expected fps from stream protect options builder setter for expected fp. Return type is Stream Protect Options. Builder and parameters are int. builder to create a stream protect options,sink,sink,sink,sink
6487,IListHarmfulAppsCallback.Stub_asInterface,as interface from i list harmful apps callback stub .,neither,neither,neither,neither
6488,IListHarmfulAppsCallback.Stub.Proxy_onListHarmfulAppsResult,on list harmful apps result from i list harmful apps callback stub proxy this will be called with the results of the list harmful apps ap. Return type is void and parameters are boolean byte[].,neither,neither,neither,neither
6489,IPackageVerificationApiService.Stub_asInterface,as interface from i package verification api service stub .,neither,neither,neither,neither
6490,IPackageVerificationApiService.Stub.Proxy_getVerifyAppsData,get verify apps data from i package verification api service stub proxy this method can be used to get a variety of verify apps related dat. Return type is void and parameters are i verify apps data callback long.,source,source,source,source
6491,IPackageVerificationApiService.Stub.Proxy_getVerifyAppsDataV2,get verify apps data v2 from i package verification api service stub proxy .,source,source,source,source
6492,IPackageVerificationApiService.Stub.Proxy_listHarmfulApps,list harmful apps from i package verification api service stub proxy get a list of the harmful apps that are currently installed on the devic. Return type is void and parameters are i list harmful apps callback.,source,source,source,source
6493,IVerifyAppsDataCallback.Stub_asInterface,as interface from i verify apps data callback stub .,neither,neither,neither,neither
6494,IVerifyAppsDataCallback.Stub.Proxy_onGetVerifyAppsDataResult,on get verify apps data result from i verify apps data callback stub proxy this will be called with the results of the get verify apps data ap. Return type is void and parameters are boolean bundle.,source,source,source,source
6495,IListHarmfulAppsCallback_onListHarmfulAppsResult,on list harmful apps result from i list harmful apps callback this will be called with the results of the list harmful apps ap. Return type is  void and parameters are boolean byte[]. this is a callback object to return the results from the list harmful apps api in i package verification api service,neither,neither,neither,neither
6496,IPackageVerificationApiService_getVerifyAppsData,get verify apps data from i package verification api service this method can be used to get a variety of verify apps related dat. Return type is  void and parameters are i verify apps data callback long. this is the main binder interface for the package verification api servic,source,source,source,source
6497,IPackageVerificationApiService_getVerifyAppsDataV2,get verify apps data v2 from i package verification api service . this is the main binder interface for the package verification api servic,source,source,source,source
6498,IPackageVerificationApiService_listHarmfulApps,list harmful apps from i package verification api service get a list of the harmful apps that are currently installed on the devic. Return type is  void and parameters are i list harmful apps callback. this is the main binder interface for the package verification api servic,source,source,source,source
6499,IVerifyAppsDataCallback_onGetVerifyAppsDataResult,on get verify apps data result from i verify apps data callback this will be called with the results of the get verify apps data ap. Return type is  void and parameters are boolean bundle. this is a callback object to return the results from the get verify apps data api in i package verification api service,source,source,source,source
6500,IListHarmfulAppsCallback.Stub.Proxy_onListHarmfulAppsResult,on list harmful apps result from i list harmful apps callback stub proxy this will be called with the results of the list harmful apps ap. Return type is void and parameters are boolean byte[].,neither,neither,neither,neither
6501,IPackageVerificationApiService.Stub.Proxy_getVerifyAppsData,get verify apps data from i package verification api service stub proxy this method can be used to get a variety of verify apps related dat. Return type is void and parameters are i verify apps data callback long.,source,source,source,source
6502,IPackageVerificationApiService.Stub.Proxy_getVerifyAppsDataV2,get verify apps data v2 from i package verification api service stub proxy .,source,source,source,source
6503,IPackageVerificationApiService.Stub.Proxy_listHarmfulApps,list harmful apps from i package verification api service stub proxy get a list of the harmful apps that are currently installed on the devic. Return type is void and parameters are i list harmful apps callback.,source,source,source,source
6504,IVerifyAppsDataCallback.Stub.Proxy_onGetVerifyAppsDataResult,on get verify apps data result from i verify apps data callback stub proxy this will be called with the results of the get verify apps data ap. Return type is void and parameters are boolean bundle.,source,source,source,source
6505,IListHarmfulAppsCallback.Stub_asInterface,as interface from i list harmful apps callback stub .,neither,neither,neither,neither
6506,IPackageVerificationApiService.Stub_asInterface,as interface from i package verification api service stub .,neither,neither,neither,neither
6507,IVerifyAppsDataCallback.Stub_asInterface,as interface from i verify apps data callback stub .,neither,neither,neither,neither
6508,IListHarmfulAppsCallback.Stub.Proxy_onListHarmfulAppsResult,on list harmful apps result from i list harmful apps callback stub proxy this will be called with the results of the list harmful apps ap. Return type is void and parameters are boolean byte[].,neither,neither,neither,neither
6509,IPackageVerificationApiService.Stub.Proxy_getVerifyAppsData,get verify apps data from i package verification api service stub proxy this method can be used to get a variety of verify apps related dat. Return type is void and parameters are i verify apps data callback long.,source,source,source,source
6510,IPackageVerificationApiService.Stub.Proxy_getVerifyAppsDataV2,get verify apps data v2 from i package verification api service stub proxy .,source,source,source,source
6511,IPackageVerificationApiService.Stub.Proxy_listHarmfulApps,list harmful apps from i package verification api service stub proxy get a list of the harmful apps that are currently installed on the devic. Return type is void and parameters are i list harmful apps callback.,source,source,source,source
6512,IVerifyAppsDataCallback.Stub.Proxy_onGetVerifyAppsDataResult,on get verify apps data result from i verify apps data callback stub proxy this will be called with the results of the get verify apps data ap. Return type is void and parameters are boolean bundle.,source,source,source,source
6513,Element_getBoundingBox,"get bounding box from element axis-aligned bounding box containing the tex. Return type is Rect and no argument. roughly equivalent to a space separated ""word"" in most latin languages, or a character in others",source,source,source,source
6514,Element_getComponents,"get components from element this class is the bottom of the tree, so this function always returns an empty list as it has no component. Return type is List and no argument. roughly equivalent to a space separated ""word"" in most latin languages, or a character in others",source,source,source,source
6515,Element_getCornerPoints,"get corner points from element four corner points in clockwise direction starting with top-lef. Return type is Point[] and no argument. roughly equivalent to a space separated ""word"" in most latin languages, or a character in others",source,source,source,source
6516,Element_getLanguage,"get language from element prevailing language in the text, if an. Return type is String and no argument. roughly equivalent to a space separated ""word"" in most latin languages, or a character in others",source,source,source,source
6517,Element_getValue,"get value from element retrieve the recognized text as a strin. Return type is String and no argument. roughly equivalent to a space separated ""word"" in most latin languages, or a character in others",source,source,source,source
6518,Line_getAngle,get angle from line angle of rotatio. Return type is float and no argument. a line of text,source,source,source,source
6519,Line_getBoundingBox,get bounding box from line axis-aligned bounding box containing the tex. Return type is Rect and no argument. a line of text,source,source,source,source
6520,Line_getComponents,"get components from line smaller components that comprise this entity, if an. Return type is List and no argument. a line of text",source,source,source,source
6521,Line_getCornerPoints,get corner points from line four corner points in clockwise direction starting with top-lef. Return type is Point[] and no argument. a line of text,source,source,source,source
6522,Line_getLanguage,"get language from line prevailing language in the text, if an. Return type is String and no argument. a line of text",source,source,source,source
6523,Line_getValue,get value from line retrieve the recognized text as a strin. Return type is String and no argument. a line of text,source,source,source,source
6524,Line_isVertical,is vertical from line whether or not the text layout is vertica. Return type is boolean and no argument. a line of text,neither,neither,neither,neither
6525,TextBlock_getBoundingBox,get bounding box from text block returns the text block's axis-aligned bounding bo. Return type is Rect and no argument. a block of text  as deemed by the ocr engine,source,source,source,source
6526,TextBlock_getComponents,"get components from text block smaller components that comprise this entity, if an. Return type is List and no argument. a block of text  as deemed by the ocr engine",source,source,source,source
6527,TextBlock_getCornerPoints,get corner points from text block 4 corner points in clockwise direction starting with top-lef. Return type is Point[] and no argument. a block of text  as deemed by the ocr engine,source,source,source,source
6528,TextBlock_getLanguage,get language from text block prevailing language in the text bloc. Return type is String and no argument. a block of text  as deemed by the ocr engine,source,source,source,source
6529,TextBlock_getValue,get value from text block retrieve the recognized text as a strin. Return type is String and no argument. a block of text  as deemed by the ocr engine,source,source,source,source
6530,TextRecognizer_detect,detect from text recognizer detects and recognizes text in a imag. Return type is Sparse Array and parameters are frame. finds and recognizes text in a supplied frame,source,source,source,source
6531,TextRecognizer_isOperational,is operational from text recognizer . finds and recognizes text in a supplied frame,source,source,source,source
6532,TextRecognizer_release,release from text recognizer . finds and recognizes text in a supplied frame,neither,neither,neither,source
6533,TextRecognizer.Builder_build,build from text recognizer builder creates a text recognizer instanc. Return type is Text Recognizer and no argument. text recognizer builder,neither,neither,neither,neither
6534,Text_getBoundingBox,get bounding box from text axis-aligned bounding box containing the tex. Return type is Rect and no argument. common interface for every entity across the hierarchy of recognized text,source,source,source,source
6535,Text_getComponents,"get components from text smaller components that comprise this entity, if an. Return type is List and no argument. common interface for every entity across the hierarchy of recognized text",source,source,source,source
6536,Text_getCornerPoints,get corner points from text four corner points in clockwise direction starting with top-lef. Return type is Point[] and no argument. common interface for every entity across the hierarchy of recognized text,source,source,source,source
6537,Text_getLanguage,"get language from text prevailing language in the text, if an. Return type is String and no argument. common interface for every entity across the hierarchy of recognized text",source,source,source,source
6538,Text_getValue,get value from text retrieve the recognized text as a strin. Return type is String and no argument. common interface for every entity across the hierarchy of recognized text,source,source,source,source
6539,TextRecognizer.Builder_build,build from text recognizer builder creates a text recognizer instanc. Return type is Text Recognizer and no argument. text recognizer builder,neither,neither,neither,neither
6540,FitnessSensorService_onBind,"on bind from fitness sensor service . a service which allows an installed application to expose sensors to google fit, so that they can be used by other applications through the standard sensors client",neither,neither,neither,neither
6541,FitnessSensorService_onCreate,"on create from fitness sensor service . a service which allows an installed application to expose sensors to google fit, so that they can be used by other applications through the standard sensors client",neither,neither,neither,neither
6542,FitnessSensorService_onFindDataSources,"on find data sources from fitness sensor service find application data sources which match the given data type. Return type is List and parameters are list. a service which allows an installed application to expose sensors to google fit, so that they can be used by other applications through the standard sensors client",source,neither,source,neither
6543,FitnessSensorService_onRegister,"on register from fitness sensor service registers for events from a particular data source at a given rat. Return type is  boolean and parameters are fitness sensor service request. a service which allows an installed application to expose sensors to google fit, so that they can be used by other applications through the standard sensors client",neither,neither,neither,neither
6544,FitnessSensorService_onUnregister,"on unregister from fitness sensor service unregisters for events from a particular data sourc. Return type is  boolean and parameters are data source. a service which allows an installed application to expose sensors to google fit, so that they can be used by other applications through the standard sensors client",neither,neither,neither,neither
6545,FitnessSensorServiceRequest_equals,equals from fitness sensor service request . request for registering for sensor events from an application exposed sensor data source,neither,neither,neither,neither
6546,FitnessSensorServiceRequest_getBatchInterval,get batch interval from fitness sensor service request sets the maximum delay between a data point being detected and reporte. Return type is long and parameters are time unit. request for registering for sensor events from an application exposed sensor data source,source,source,source,source
6547,FitnessSensorServiceRequest_getDataSource,get data source from fitness sensor service request returns the data source the client is registering t. Return type is Data Source and no argument. request for registering for sensor events from an application exposed sensor data source,source,source,source,source
6548,FitnessSensorServiceRequest_getDispatcher,get dispatcher from fitness sensor service request returns a dispatcher that can be used to send events back to the fitness platform for this particular registratio. Return type is Sensor Event Dispatcher and no argument. request for registering for sensor events from an application exposed sensor data source,source,source,source,neither
6549,FitnessSensorServiceRequest_getSamplingRate,"get sampling rate from fitness sensor service request returns the desired delay between two consecutive collected data points, in the given time uni. Return type is long and parameters are time unit. request for registering for sensor events from an application exposed sensor data source",source,source,source,source
6550,FitnessSensorServiceRequest_hashCode,hash code from fitness sensor service request . request for registering for sensor events from an application exposed sensor data source,neither,neither,neither,neither
6551,FitnessSensorServiceRequest_toString,to string from fitness sensor service request . request for registering for sensor events from an application exposed sensor data source,sink,sink,sink,sink
6552,FitnessSensorServiceRequest_writeToParcel,write to parcel from fitness sensor service request . request for registering for sensor events from an application exposed sensor data source,sink,sink,sink,sink
6553,SensorEventDispatcher_publish,publish from sensor event dispatcher publishes a new data point to the fitness platfor. Return type is  void and parameters are data point. dispatcher that can be used by fitness sensor service implementations to push events to the fitness platform,sink,sink,neither,sink
6554,SensorEventDispatcher_publish,publish from sensor event dispatcher publishes a batch of data points to the fitness platfor. Return type is  void and parameters are list. dispatcher that can be used by fitness sensor service implementations to push events to the fitness platform,sink,sink,sink,sink
6555,AccountChangeEvent_equals,equals from account change event . account change event instances are parcelables that contain data about an event for an account,neither,neither,neither,neither
6556,AccountChangeEvent_getAccountName,get account name from account change event . account change event instances are parcelables that contain data about an event for an account,source,source,source,source
6557,AccountChangeEvent_getChangeData,"get change data from account change event extra data about the change, if an. Return type is String and no argument. account change event instances are parcelables that contain data about an event for an account",source,source,source,source
6558,AccountChangeEvent_getChangeType,get change type from account change event the change type of this even. Return type is int and no argument. account change event instances are parcelables that contain data about an event for an account,source,source,source,source
6559,AccountChangeEvent_getEventIndex,get event index from account change event the index of the even. Return type is int and no argument. account change event instances are parcelables that contain data about an event for an account,source,source,source,source
6560,AccountChangeEvent_hashCode,hash code from account change event . account change event instances are parcelables that contain data about an event for an account,neither,source,source,neither
6561,AccountChangeEvent_toString,to string from account change event . account change event instances are parcelables that contain data about an event for an account,neither,neither,source,neither
6562,AccountChangeEvent_writeToParcel,write to parcel from account change event . account change event instances are parcelables that contain data about an event for an account,sink,sink,sink,sink
6563,AccountChangeEventsRequest_getAccount,get account from account change events request . requests for account change events,source,source,source,source
6564,AccountChangeEventsRequest_getAccountName,get account name from account change events request deprecate. Return type is String and no argument. requests for account change events,source,source,source,source
6565,AccountChangeEventsRequest_getEventIndex,get event index from account change events request . requests for account change events,source,source,source,source
6566,AccountChangeEventsRequest_setAccount,set account from account change events request sets the account to fetch events fo. Return type is Account Change Events Request and parameters are account. requests for account change events,sink,sink,sink,sink
6567,AccountChangeEventsRequest_setAccountName,set account name from account change events request deprecate. Return type is Account Change Events Request and parameters are string. requests for account change events,sink,sink,sink,sink
6568,AccountChangeEventsRequest_setEventIndex,set event index from account change events request sets the event index to restrict the results b. Return type is Account Change Events Request and parameters are int. requests for account change events,sink,sink,sink,sink
6569,AccountChangeEventsRequest_writeToParcel,write to parcel from account change events request . requests for account change events,sink,sink,sink,sink
6570,AccountChangeEventsResponse_getEvents,get events from account change events response . response to a account change events request,source,source,source,source
6571,AccountChangeEventsResponse_writeToParcel,write to parcel from account change events response . response to a account change events request,sink,sink,sink,sink
6572,CookieUtil_getCookieUrl,get cookie url from cookie util . helper class to build the cookie string from the given fields,source,source,source,source
6573,CookieUtil_getCookieValue,get cookie value from cookie util . helper class to build the cookie string from the given fields,source,source,source,source
6574,GoogleAuthUtil_clearToken,clear token from google auth util clear the specified token in local cache with respect to the contex. Return type is  void and parameters are context string. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,neither,neither,neither,neither
6575,GoogleAuthUtil_getAccountChangeEvents,get account change events from google auth util gets a list of events for the given accoun. Return type is List and parameters are context int string. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6576,GoogleAuthUtil_getAccountId,get account id from google auth util gets a stable account id for the given account nam. Return type is String and parameters are context string. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6577,GoogleAuthUtil_getToken,get token from google auth util gets an access token directl. Return type is String and parameters are context account string bundle. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6578,GoogleAuthUtil_getToken,get token from google auth util . google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6579,GoogleAuthUtil_getToken,get token from google auth util deprecate. Return type is String and parameters are context string string bundle. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6580,GoogleAuthUtil_getToken,get token from google auth util deprecate. Return type is String and parameters are context string string. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6581,GoogleAuthUtil_getTokenWithNotification,get token with notification from google auth util deprecate. Return type is String and parameters are context string string bundle string bundle. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6582,GoogleAuthUtil_getTokenWithNotification,"get token with notification from google auth util authenticates the user and returns a google authentication token, or throws an exception if there was an error while getting the toke. Return type is String and parameters are context account string bundle. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens",source,source,source,source
6583,GoogleAuthUtil_getTokenWithNotification,get token with notification from google auth util deprecate. Return type is String and parameters are context string string bundle intent. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6584,GoogleAuthUtil_getTokenWithNotification,"get token with notification from google auth util authenticates the user and returns a google authentication token, or throws an exception if there was an error while getting the toke. Return type is String and parameters are context account string bundle string bundle. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens",source,source,source,source
6585,GoogleAuthUtil_getTokenWithNotification,get token with notification from google auth util deprecate. Return type is String and parameters are context string string bundle. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6586,GoogleAuthUtil_getTokenWithNotification,"get token with notification from google auth util authenticates the user and returns a google authentication token, or throws an exception if there was an error while getting the toke. Return type is String and parameters are context account string bundle intent. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens",source,source,source,source
6587,GoogleAuthUtil_invalidateToken,invalidate token from google auth util deprecate. Return type is  void and parameters are context string. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,neither,neither,neither,source
6588,GoogleAuthUtil_removeAccount,remove account from google auth util removes an account from the account manage. Return type is Bundle and parameters are context account. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,neither,neither,neither,neither
6589,GoogleAuthUtil_requestGoogleAccountsAccess,request google accounts access from google auth util whitelists caller in account manager to see accounts of g o o g l e_ a c c o u n t_ t y p. Return type is Boolean and parameters are context. google auth util provides static utility methods to acquire o auth2 tokens for google accounts; and also to invalidate o auth2 tokens,source,source,source,source
6590,ChannelIdValue_equals,equals from channel id value . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6591,ChannelIdValue_getObjectValue,get object value from channel id value . this class is deprecated  please use fido a p is instead,source,source,source,source
6592,ChannelIdValue_getObjectValueAsString,get object value as string from channel id value . this class is deprecated  please use fido a p is instead,source,source,source,source
6593,ChannelIdValue_getStringValue,get string value from channel id value . this class is deprecated  please use fido a p is instead,source,source,source,source
6594,ChannelIdValue_getType,get type from channel id value . this class is deprecated  please use fido a p is instead,source,source,source,source
6595,ChannelIdValue_getTypeAsInt,get type as int from channel id value . this class is deprecated  please use fido a p is instead,source,source,source,source
6596,ChannelIdValue_hashCode,hash code from channel id value . this class is deprecated  please use fido a p is instead,source,source,neither,source
6597,ChannelIdValue_toChannelIdValueType,to channel id value type from channel id value . this class is deprecated  please use fido a p is instead,neither,source,neither,neither
6598,ChannelIdValue_writeToParcel,write to parcel from channel id value . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6599,ClientData_equals,equals from client data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6600,ClientData_hashCode,hash code from client data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6601,ClientData_toJsonString,to json string from client data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6602,ClientData.Builder_build,build from client data builder . builder for client data,neither,neither,neither,neither
6603,ClientData.Builder_clone,clone from client data builder clones this builder instanc. Return type is Client Data. Builder and no argument. builder for client data,neither,neither,neither,neither
6604,ClientData.Builder_newInstance,new instance from client data builder . builder for client data,neither,neither,neither,neither
6605,ClientData.Builder_setChallenge,set challenge from client data builder set the client data challenge valu. Return type is Client Data. Builder and parameters are string. builder for client data,sink,sink,sink,sink
6606,ClientData.Builder_setChannelId,set channel id from client data builder set the client data channel id valu. Return type is Client Data. Builder and parameters are channel id value. builder for client data,sink,sink,sink,sink
6607,ClientData.Builder_setOrigin,set origin from client data builder set the origin for the client dat. Return type is Client Data. Builder and parameters are string. builder for client data,sink,sink,sink,sink
6608,ClientData.Builder_setType,set type from client data builder set the type of the client dat. Return type is Client Data. Builder and parameters are string. builder for client data,sink,sink,sink,sink
6609,Error_getErrorCode,get error code from error . this class is deprecated  please use fido a p is instead,source,source,source,source
6610,Error_getErrorMessage,get error message from error . this class is deprecated  please use fido a p is instead,source,source,source,source
6611,Error_toJsonObject,to json object from error . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6612,Error_toString,to string from error . this class is deprecated  please use fido a p is instead,neither,neither,neither,source
6613,ErrorResponseData_equals,equals from error response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6614,ErrorResponseData_getErrorCode,get error code from error response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6615,ErrorResponseData_getErrorCodeAsInt,get error code as int from error response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6616,ErrorResponseData_getErrorMessage,get error message from error response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6617,ErrorResponseData_hashCode,hash code from error response data . this class is deprecated  please use fido a p is instead,source,source,neither,neither
6618,ErrorResponseData_toString,to string from error response data . this class is deprecated  please use fido a p is instead,source,source,source,neither
6619,ErrorResponseData_writeToParcel,write to parcel from error response data . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6620,KeyHandle_equals,equals from key handle . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6621,KeyHandle_getBytes,get bytes from key handle . this class is deprecated  please use fido a p is instead,source,source,source,source
6622,KeyHandle_getProtocolVersion,get protocol version from key handle . this class is deprecated  please use fido a p is instead,source,source,source,source
6623,KeyHandle_getTransports,get transports from key handle . this class is deprecated  please use fido a p is instead,source,source,source,source
6624,KeyHandle_getVersionCode,get version code from key handle . this class is deprecated  please use fido a p is instead,source,source,source,source
6625,KeyHandle_hashCode,hash code from key handle . this class is deprecated  please use fido a p is instead,neither,neither,neither,source
6626,KeyHandle_parseFromJson,"parse from json from key handle parses a json object, which is assumed to be of a u2 f sign request or registered key type, as a key handl. Return type is Key Handle and parameters are j s o n object. this class is deprecated  please use fido a p is instead",neither,neither,neither,neither
6627,KeyHandle_toJson,to json from key handle create json representation of a key handl. Return type is J S O N Object and no argument. this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6628,KeyHandle_toString,to string from key handle . this class is deprecated  please use fido a p is instead,neither,neither,neither,source
6629,KeyHandle_writeToParcel,write to parcel from key handle . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6630,RegisteredKey_equals,equals from registered key generated by eclips. Return type is boolean and parameters are object. this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6631,RegisteredKey_getAppId,get app id from registered key . this class is deprecated  please use fido a p is instead,source,source,source,source
6632,RegisteredKey_getChallengeValue,get challenge value from registered key . this class is deprecated  please use fido a p is instead,source,source,source,source
6633,RegisteredKey_getKeyHandle,get key handle from registered key . this class is deprecated  please use fido a p is instead,source,source,source,source
6634,RegisteredKey_hashCode,hash code from registered key generated by eclips. Return type is int and no argument. this class is deprecated  please use fido a p is instead,source,source,neither,source
6635,RegisteredKey_parseFromJson,parse from json from registered key parses a u2 f sign request json object as a registered ke. Return type is Registered Key and parameters are j s o n object. this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6636,RegisteredKey_toJson,to json from registered key . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6637,RegisteredKey_toString,to string from registered key . this class is deprecated  please use fido a p is instead,neither,source,neither,source
6638,RegisteredKey_writeToParcel,write to parcel from registered key . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6639,RegisterRequest_equals,equals from register request generated by eclips. Return type is boolean and parameters are object. this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6640,RegisterRequest_getAppId,get app id from register request . this class is deprecated  please use fido a p is instead,source,source,source,source
6641,RegisterRequest_getChallengeValue,get challenge value from register request . this class is deprecated  please use fido a p is instead,source,source,source,source
6642,RegisterRequest_getProtocolVersion,get protocol version from register request . this class is deprecated  please use fido a p is instead,source,source,source,source
6643,RegisterRequest_getVersionCode,get version code from register request . this class is deprecated  please use fido a p is instead,source,source,source,source
6644,RegisterRequest_hashCode,hash code from register request generated by eclips. Return type is int and no argument. this class is deprecated  please use fido a p is instead,neither,neither,neither,source
6645,RegisterRequest_parseFromJson,parse from json from register request parses a u2 f register request json object as a register reques. Return type is Register Request and parameters are j s o n object. this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6646,RegisterRequest_toJson,to json from register request create json representation of a register reques. Return type is J S O N Object and no argument. this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6647,RegisterRequest_writeToParcel,write to parcel from register request . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6648,RegisterRequestParams_equals,equals from register request params . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6649,RegisterRequestParams_getAllAppIds,get all app ids from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6650,RegisterRequestParams_getAppId,get app id from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6651,RegisterRequestParams_getChannelIdValue,get channel id value from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6652,RegisterRequestParams_getDisplayHint,get display hint from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6653,RegisterRequestParams_getRegisterRequests,get register requests from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6654,RegisterRequestParams_getRegisteredKeys,get registered keys from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6655,RegisterRequestParams_getRequestId,get request id from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6656,RegisterRequestParams_getTimeoutSeconds,get timeout seconds from register request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6657,RegisterRequestParams_hashCode,hash code from register request params . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6658,RegisterRequestParams_writeToParcel,write to parcel from register request params . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6659,RegisterRequestParams.Builder_build,build from register request params builder builds a sign request param. Return type is Register Request Params and no argument. builds register request params,neither,neither,neither,neither
6660,RegisterRequestParams.Builder_setAppId,set app id from register request params builder sets register request app i. Return type is Register Request Params. Builder and parameters are uri. builds register request params,sink,sink,sink,sink
6661,RegisterRequestParams.Builder_setChannelIdValue,set channel id value from register request params builder sets channel id value for the register reques. Return type is Register Request Params. Builder and parameters are channel id value. builds register request params,sink,sink,sink,sink
6662,RegisterRequestParams.Builder_setDisplayHint,set display hint from register request params builder sets the display hint that is shown to the use. Return type is Register Request Params. Builder and parameters are string. builds register request params,sink,sink,sink,sink
6663,RegisterRequestParams.Builder_setRegisterRequests,set register requests from register request params builder sets register requests in this register request param. Return type is Register Request Params. Builder and parameters are list. builds register request params,sink,sink,sink,sink
6664,RegisterRequestParams.Builder_setRegisteredKeys,set registered keys from register request params builder sets registered keys for the register reques. Return type is Register Request Params. Builder and parameters are list. builds register request params,sink,sink,sink,sink
6665,RegisterRequestParams.Builder_setRequestId,set request id from register request params builder sets the request id in order to link together events into a single sessio. Return type is Register Request Params. Builder and parameters are integer. builds register request params,sink,sink,sink,sink
6666,RegisterRequestParams.Builder_setTimeoutSeconds,"set timeout seconds from register request params builder sets timeout in seconds, to indicate for how long this request remains vali. Return type is Register Request Params. Builder and parameters are double. builds register request params",sink,sink,sink,sink
6667,RegisterResponseData_equals,equals from register response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6668,RegisterResponseData_getClientDataString,get client data string from register response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6669,RegisterResponseData_getProtocolVersion,get protocol version from register response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6670,RegisterResponseData_getRegisterData,get register data from register response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6671,RegisterResponseData_getVersionCode,get version code from register response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6672,RegisterResponseData_hashCode,hash code from register response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6673,RegisterResponseData_toJsonObject,to json object from register response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6674,RegisterResponseData_toString,to string from register response data . this class is deprecated  please use fido a p is instead,source,neither,neither,neither
6675,RegisterResponseData_writeToParcel,write to parcel from register response data . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6676,RequestParams_getAllAppIds,get all app ids from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6677,RequestParams_getAppId,get app id from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6678,RequestParams_getChannelIdValue,get channel id value from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6679,RequestParams_getDisplayHint,get display hint from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6680,RequestParams_getRegisteredKeys,get registered keys from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6681,RequestParams_getRequestId,get request id from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6682,RequestParams_getTimeoutSeconds,get timeout seconds from request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6683,ResponseData_toJsonObject,to json object from response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6684,SignRequestParams_equals,equals from sign request params . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6685,SignRequestParams_getAllAppIds,get all app ids from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6686,SignRequestParams_getAppId,get app id from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6687,SignRequestParams_getChannelIdValue,get channel id value from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6688,SignRequestParams_getDefaultSignChallenge,get default sign challenge from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6689,SignRequestParams_getDisplayHint,get display hint from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6690,SignRequestParams_getRegisteredKeys,get registered keys from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6691,SignRequestParams_getRequestId,get request id from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6692,SignRequestParams_getTimeoutSeconds,get timeout seconds from sign request params . this class is deprecated  please use fido a p is instead,source,source,source,source
6693,SignRequestParams_hashCode,hash code from sign request params . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6694,SignRequestParams_writeToParcel,write to parcel from sign request params . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6695,SignRequestParams.Builder_build,build from sign request params builder builds a sign request param. Return type is Sign Request Params and no argument. builds sign request params,neither,neither,neither,neither
6696,SignRequestParams.Builder_setAppId,set app id from sign request params builder sets sign request app i. Return type is Sign Request Params. Builder and parameters are uri. builds sign request params,sink,sink,sink,sink
6697,SignRequestParams.Builder_setChannelIdValue,set channel id value from sign request params builder sets channel id value for the sign reques. Return type is Sign Request Params. Builder and parameters are channel id value. builds sign request params,sink,sink,sink,sink
6698,SignRequestParams.Builder_setDefaultSignChallenge,set default sign challenge from sign request params builder sets default sign challenge for the sign reques. Return type is Sign Request Params. Builder and parameters are byte[]. builds sign request params,sink,sink,sink,sink
6699,SignRequestParams.Builder_setDisplayHint,set display hint from sign request params builder sets the display hint that is shown to the use. Return type is Sign Request Params. Builder and parameters are string. builds sign request params,sink,sink,sink,sink
6700,SignRequestParams.Builder_setRegisteredKeys,set registered keys from sign request params builder sets registered keys for the sign reques. Return type is Sign Request Params. Builder and parameters are list. builds sign request params,sink,sink,sink,sink
6701,SignRequestParams.Builder_setRequestId,set request id from sign request params builder sets the request id in order to link together events into a single sessio. Return type is Sign Request Params. Builder and parameters are integer. builds sign request params,sink,sink,sink,sink
6702,SignRequestParams.Builder_setTimeoutSeconds,"set timeout seconds from sign request params builder sets timeout in seconds, to indicate for how long this request remains vali. Return type is Sign Request Params. Builder and parameters are double. builds sign request params",sink,sink,sink,sink
6703,SignResponseData_equals,equals from sign response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6704,SignResponseData_getClientDataString,get client data string from sign response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6705,SignResponseData_getKeyHandle,get key handle from sign response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6706,SignResponseData_getSignatureData,get signature data from sign response data . this class is deprecated  please use fido a p is instead,source,source,source,source
6707,SignResponseData_hashCode,hash code from sign response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6708,SignResponseData_toJsonObject,to json object from sign response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6709,SignResponseData_toString,to string from sign response data . this class is deprecated  please use fido a p is instead,neither,neither,neither,neither
6710,SignResponseData_writeToParcel,write to parcel from sign response data . this class is deprecated  please use fido a p is instead,sink,sink,sink,sink
6711,ClientData.Builder_build,build from client data builder . builder for client data,neither,neither,neither,neither
6712,ClientData.Builder_clone,clone from client data builder clones this builder instanc. Return type is Client Data. Builder and no argument. builder for client data,neither,neither,neither,neither
6713,ClientData.Builder_newInstance,new instance from client data builder . builder for client data,neither,neither,neither,neither
6714,ClientData.Builder_setChallenge,set challenge from client data builder set the client data challenge valu. Return type is Client Data. Builder and parameters are string. builder for client data,sink,sink,sink,sink
6715,ClientData.Builder_setChannelId,set channel id from client data builder set the client data channel id valu. Return type is Client Data. Builder and parameters are channel id value. builder for client data,sink,sink,sink,sink
6716,ClientData.Builder_setOrigin,set origin from client data builder set the origin for the client dat. Return type is Client Data. Builder and parameters are string. builder for client data,sink,sink,sink,sink
6717,ClientData.Builder_setType,set type from client data builder set the type of the client dat. Return type is Client Data. Builder and parameters are string. builder for client data,sink,sink,sink,sink
6718,RegisterRequestParams.Builder_build,build from register request params builder builds a sign request param. Return type is Register Request Params and no argument. builds register request params,neither,neither,neither,neither
6719,RegisterRequestParams.Builder_setAppId,set app id from register request params builder sets register request app i. Return type is Register Request Params. Builder and parameters are uri. builds register request params,sink,sink,sink,sink
6720,RegisterRequestParams.Builder_setChannelIdValue,set channel id value from register request params builder sets channel id value for the register reques. Return type is Register Request Params. Builder and parameters are channel id value. builds register request params,sink,sink,sink,sink
6721,RegisterRequestParams.Builder_setDisplayHint,set display hint from register request params builder sets the display hint that is shown to the use. Return type is Register Request Params. Builder and parameters are string. builds register request params,sink,sink,sink,sink
6722,RegisterRequestParams.Builder_setRegisterRequests,set register requests from register request params builder sets register requests in this register request param. Return type is Register Request Params. Builder and parameters are list. builds register request params,sink,sink,sink,sink
6723,RegisterRequestParams.Builder_setRegisteredKeys,set registered keys from register request params builder sets registered keys for the register reques. Return type is Register Request Params. Builder and parameters are list. builds register request params,sink,sink,sink,sink
6724,RegisterRequestParams.Builder_setRequestId,set request id from register request params builder sets the request id in order to link together events into a single sessio. Return type is Register Request Params. Builder and parameters are integer. builds register request params,sink,sink,sink,sink
6725,RegisterRequestParams.Builder_setTimeoutSeconds,"set timeout seconds from register request params builder sets timeout in seconds, to indicate for how long this request remains vali. Return type is Register Request Params. Builder and parameters are double. builds register request params",sink,sink,sink,sink
6726,SignRequestParams.Builder_build,build from sign request params builder builds a sign request param. Return type is Sign Request Params and no argument. builds sign request params,neither,neither,neither,neither
6727,SignRequestParams.Builder_setAppId,set app id from sign request params builder sets sign request app i. Return type is Sign Request Params. Builder and parameters are uri. builds sign request params,sink,sink,sink,sink
6728,SignRequestParams.Builder_setChannelIdValue,set channel id value from sign request params builder sets channel id value for the sign reques. Return type is Sign Request Params. Builder and parameters are channel id value. builds sign request params,sink,sink,sink,sink
6729,SignRequestParams.Builder_setDefaultSignChallenge,set default sign challenge from sign request params builder sets default sign challenge for the sign reques. Return type is Sign Request Params. Builder and parameters are byte[]. builds sign request params,sink,sink,sink,sink
6730,SignRequestParams.Builder_setDisplayHint,set display hint from sign request params builder sets the display hint that is shown to the use. Return type is Sign Request Params. Builder and parameters are string. builds sign request params,sink,sink,sink,sink
6731,SignRequestParams.Builder_setRegisteredKeys,set registered keys from sign request params builder sets registered keys for the sign reques. Return type is Sign Request Params. Builder and parameters are list. builds sign request params,sink,sink,sink,sink
6732,SignRequestParams.Builder_setRequestId,set request id from sign request params builder sets the request id in order to link together events into a single sessio. Return type is Sign Request Params. Builder and parameters are integer. builds sign request params,sink,sink,sink,sink
6733,SignRequestParams.Builder_setTimeoutSeconds,"set timeout seconds from sign request params builder sets timeout in seconds, to indicate for how long this request remains vali. Return type is Sign Request Params. Builder and parameters are double. builds sign request params",sink,sink,sink,sink
6734,AuthenticationExtensions_equals,equals from authentication extensions . represents extensions that can be passed into f i d o2 a p is,neither,neither,neither,neither
6735,AuthenticationExtensions_getFidoAppIdExtension,get fido app id extension from authentication extensions . represents extensions that can be passed into f i d o2 a p is,source,source,source,source
6736,AuthenticationExtensions_getUserVerificationMethodExtension,get user verification method extension from authentication extensions . represents extensions that can be passed into f i d o2 a p is,source,source,source,source
6737,AuthenticationExtensions_hashCode,hash code from authentication extensions . represents extensions that can be passed into f i d o2 a p is,neither,neither,neither,neither
6738,AuthenticationExtensions_writeToParcel,write to parcel from authentication extensions . represents extensions that can be passed into f i d o2 a p is,sink,sink,sink,sink
6739,AuthenticationExtensions.Builder_build,build from authentication extensions builder builds the authentication extensions objec. Return type is Authentication Extensions and no argument. builder for authentication extensions,neither,neither,neither,neither
6740,AuthenticationExtensions.Builder_setFido2Extension,"set fido2 extension from authentication extensions builder sets the app id extension, which allows for authentication of u2 f authenticators previously registered under the supplied app i. Return type is Authentication Extensions. Builder and parameters are fido app id extension. builder for authentication extensions",sink,sink,sink,sink
6741,AuthenticationExtensions.Builder_setUserVerificationMethodExtension,"set user verification method extension from authentication extensions builder sets the user verification method extension, which allows the relying party to ascertain up to three authentication methods that were use. Return type is Authentication Extensions. Builder and parameters are user verification method extension. builder for authentication extensions",sink,sink,sink,sink
6742,AuthenticationExtensionsClientOutputs_deserializeFromBytes,"deserialize from bytes from authentication extensions client outputs de-serializes the authenticator assertion response from bytes, reversing serialize to byt. Return type is Authentication Extensions Client Outputs and parameters are byte[]. this container class represents client output for extensions that can be passed into f i d o2 a p is",neither,neither,neither,neither
6743,AuthenticationExtensionsClientOutputs_equals,equals from authentication extensions client outputs . this container class represents client output for extensions that can be passed into f i d o2 a p is,neither,neither,neither,neither
6744,AuthenticationExtensionsClientOutputs_getUvmEntries,get uvm entries from authentication extensions client outputs . this container class represents client output for extensions that can be passed into f i d o2 a p is,source,source,source,source
6745,AuthenticationExtensionsClientOutputs_hashCode,hash code from authentication extensions client outputs . this container class represents client output for extensions that can be passed into f i d o2 a p is,source,neither,neither,source
6746,AuthenticationExtensionsClientOutputs_serializeToBytes,serialize to bytes from authentication extensions client outputs serializes the authentication extensions client outputs to byte. Return type is byte[] and no argument. this container class represents client output for extensions that can be passed into f i d o2 a p is,sink,sink,neither,sink
6747,AuthenticationExtensionsClientOutputs_writeToParcel,write to parcel from authentication extensions client outputs . this container class represents client output for extensions that can be passed into f i d o2 a p is,sink,sink,sink,sink
6748,AuthenticationExtensionsClientOutputs.Builder_build,build from authentication extensions client outputs builder builds the authentication extensions client outputs objec. Return type is Authentication Extensions Client Outputs and no argument. builder for authentication extensions client outputs,neither,neither,neither,neither
6749,AuthenticationExtensionsClientOutputs.Builder_setUserVerificationMethodEntries,set user verification method entries from authentication extensions client outputs builder sets the user verification method extension entrie. Return type is Authentication Extensions Client Outputs. Builder and parameters are uvm entries. builder for authentication extensions client outputs,sink,sink,sink,sink
6750,AuthenticatorAssertionResponse_deserializeFromBytes,"deserialize from bytes from authenticator assertion response de-serializes the authenticator assertion response from bytes, reversing serialize to byt. Return type is Authenticator Assertion Response and parameters are byte[]. this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction",neither,neither,neither,neither
6751,AuthenticatorAssertionResponse_equals,equals from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,neither,neither,neither,neither
6752,AuthenticatorAssertionResponse_getAuthenticatorData,get authenticator data from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,source,source,source,source
6753,AuthenticatorAssertionResponse_getClientDataJSON,get client data j s o n from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,source,source,source,source
6754,AuthenticatorAssertionResponse_getKeyHandle,get key handle from authenticator assertion response deprecate. Return type is byte[] and no argument. this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,source,source,source,source
6755,AuthenticatorAssertionResponse_getSignature,get signature from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,source,source,source,source
6756,AuthenticatorAssertionResponse_getUserHandle,get user handle from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,source,source,source,source
6757,AuthenticatorAssertionResponse_hashCode,hash code from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,neither,neither,neither,source
6758,AuthenticatorAssertionResponse_serializeToBytes,serialize to bytes from authenticator assertion response serializes the authenticator assertion response to byte. Return type is byte[] and no argument. this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,neither,neither,source,neither
6759,AuthenticatorAssertionResponse_toString,to string from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,source,neither,source,source
6760,AuthenticatorAssertionResponse_writeToParcel,write to parcel from authenticator assertion response . this structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction,sink,sink,sink,sink
6761,AuthenticatorAttestationResponse_deserializeFromBytes,"deserialize from bytes from authenticator attestation response de-serializes the authenticator attestation response from bytes, reversing serialize to byt. Return type is Authenticator Attestation Response and parameters are byte[]. represents a newly created scoped credential, aka the response from a registration request",neither,neither,neither,neither
6762,AuthenticatorAttestationResponse_equals,"equals from authenticator attestation response . represents a newly created scoped credential, aka the response from a registration request",neither,neither,neither,neither
6763,AuthenticatorAttestationResponse_getAttestationObject,"get attestation object from authenticator attestation response . represents a newly created scoped credential, aka the response from a registration request",source,source,source,source
6764,AuthenticatorAttestationResponse_getClientDataJSON,"get client data j s o n from authenticator attestation response . represents a newly created scoped credential, aka the response from a registration request",source,source,source,source
6765,AuthenticatorAttestationResponse_getKeyHandle,"get key handle from authenticator attestation response deprecate. Return type is byte[] and no argument. represents a newly created scoped credential, aka the response from a registration request",source,source,source,source
6766,AuthenticatorAttestationResponse_hashCode,"hash code from authenticator attestation response . represents a newly created scoped credential, aka the response from a registration request",source,source,source,neither
6767,AuthenticatorAttestationResponse_serializeToBytes,"serialize to bytes from authenticator attestation response serializes the authenticator attestation response to byte. Return type is byte[] and no argument. represents a newly created scoped credential, aka the response from a registration request",sink,neither,source,neither
6768,AuthenticatorAttestationResponse_toString,"to string from authenticator attestation response . represents a newly created scoped credential, aka the response from a registration request",source,neither,source,neither
6769,AuthenticatorAttestationResponse_writeToParcel,"write to parcel from authenticator attestation response . represents a newly created scoped credential, aka the response from a registration request",sink,sink,sink,sink
6770,AuthenticatorErrorResponse_deserializeFromBytes,"deserialize from bytes from authenticator error response de-serializes the authenticator error response from bytes, reversing serialize to byt. Return type is Authenticator Error Response and parameters are byte[]. the response after an error occurred",neither,neither,neither,neither
6771,AuthenticatorErrorResponse_equals,equals from authenticator error response . the response after an error occurred,neither,neither,neither,neither
6772,AuthenticatorErrorResponse_getClientDataJSON,get client data j s o n from authenticator error response . the response after an error occurred,source,source,source,source
6773,AuthenticatorErrorResponse_getErrorCode,get error code from authenticator error response . the response after an error occurred,source,source,source,source
6774,AuthenticatorErrorResponse_getErrorCodeAsInt,get error code as int from authenticator error response . the response after an error occurred,source,source,source,source
6775,AuthenticatorErrorResponse_getErrorMessage,get error message from authenticator error response . the response after an error occurred,source,source,source,source
6776,AuthenticatorErrorResponse_hashCode,hash code from authenticator error response . the response after an error occurred,source,source,neither,neither
6777,AuthenticatorErrorResponse_serializeToBytes,serialize to bytes from authenticator error response serializes the authenticator error response to byte. Return type is byte[] and no argument. the response after an error occurred,sink,neither,neither,neither
6778,AuthenticatorErrorResponse_toString,to string from authenticator error response . the response after an error occurred,source,source,source,neither
6779,AuthenticatorErrorResponse_writeToParcel,write to parcel from authenticator error response . the response after an error occurred,sink,sink,sink,sink
6780,AuthenticatorResponse_getClientDataJSON,get client data j s o n from authenticator response . authenticators respond to relying party requests by returning an object derived from this interface,source,source,source,source
6781,AuthenticatorResponse_serializeToBytes,serialize to bytes from authenticator response . authenticators respond to relying party requests by returning an object derived from this interface,neither,neither,neither,neither
6782,AuthenticatorSelectionCriteria_equals,equals from authenticator selection criteria . relying parties may use authenticator selection criteria to specify their requirements regarding authenticator attributes,neither,neither,neither,neither
6783,AuthenticatorSelectionCriteria_getAttachment,get attachment from authenticator selection criteria . relying parties may use authenticator selection criteria to specify their requirements regarding authenticator attributes,source,source,source,source
6784,AuthenticatorSelectionCriteria_getAttachmentAsString,get attachment as string from authenticator selection criteria . relying parties may use authenticator selection criteria to specify their requirements regarding authenticator attributes,source,source,source,source
6785,AuthenticatorSelectionCriteria_getRequireResidentKey,get require resident key from authenticator selection criteria . relying parties may use authenticator selection criteria to specify their requirements regarding authenticator attributes,source,source,source,source
6786,AuthenticatorSelectionCriteria_hashCode,hash code from authenticator selection criteria . relying parties may use authenticator selection criteria to specify their requirements regarding authenticator attributes,neither,neither,neither,source
6787,AuthenticatorSelectionCriteria_writeToParcel,write to parcel from authenticator selection criteria . relying parties may use authenticator selection criteria to specify their requirements regarding authenticator attributes,sink,sink,sink,sink
6788,AuthenticatorSelectionCriteria.Builder_build,build from authenticator selection criteria builder builds the authenticator selection criteria objec. Return type is Authenticator Selection Criteria and no argument. builder for authenticator selection criteria,neither,neither,neither,neither
6789,AuthenticatorSelectionCriteria.Builder_setAttachment,set attachment from authenticator selection criteria builder sets the attachment to use for this sessio. Return type is Authenticator Selection Criteria. Builder and parameters are attachment. builder for authenticator selection criteria,sink,sink,sink,sink
6790,AuthenticatorSelectionCriteria.Builder_setRequireResidentKey,set require resident key from authenticator selection criteria builder sets whether the key created will be a resident ke. Return type is Authenticator Selection Criteria. Builder and parameters are boolean. builder for authenticator selection criteria,sink,sink,sink,sink
6791,BrowserPublicKeyCredentialCreationOptions_deserializeFromBytes,"deserialize from bytes from browser public key credential creation options de-serializes the browser public key credential creation options from bytes, reversing serialize to byt. Return type is Browser Public Key Credential Creation Options and parameters are byte[]. parameters to a make credential request from a web browser",neither,neither,source,neither
6792,BrowserPublicKeyCredentialCreationOptions_equals,equals from browser public key credential creation options . parameters to a make credential request from a web browser,neither,neither,neither,sink
6793,BrowserPublicKeyCredentialCreationOptions_getAuthenticationExtensions,get authentication extensions from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6794,BrowserPublicKeyCredentialCreationOptions_getChallenge,get challenge from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6795,BrowserPublicKeyCredentialCreationOptions_getClientDataHash,get client data hash from browser public key credential creation options gets value of the client data has. Return type is byte[] and no argument. parameters to a make credential request from a web browser,source,source,source,source
6796,BrowserPublicKeyCredentialCreationOptions_getOrigin,get origin from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6797,BrowserPublicKeyCredentialCreationOptions_getPublicKeyCredentialCreationOptions,get public key credential creation options from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6798,BrowserPublicKeyCredentialCreationOptions_getRequestId,get request id from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6799,BrowserPublicKeyCredentialCreationOptions_getTimeoutSeconds,get timeout seconds from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6800,BrowserPublicKeyCredentialCreationOptions_getTokenBinding,get token binding from browser public key credential creation options . parameters to a make credential request from a web browser,source,source,source,source
6801,BrowserPublicKeyCredentialCreationOptions_hashCode,hash code from browser public key credential creation options . parameters to a make credential request from a web browser,sink,neither,sink,source
6802,BrowserPublicKeyCredentialCreationOptions_serializeToBytes,serialize to bytes from browser public key credential creation options serializes the browser public key credential creation options to byte. Return type is byte[] and no argument. parameters to a make credential request from a web browser,sink,sink,sink,sink
6803,BrowserPublicKeyCredentialCreationOptions_writeToParcel,write to parcel from browser public key credential creation options . parameters to a make credential request from a web browser,sink,sink,sink,sink
6804,BrowserPublicKeyCredentialCreationOptions.Builder_build,build from browser public key credential creation options builder builds the browser public key credential creation options objec. Return type is Browser Public Key Credential Creation Options and no argument. builder for browser public key credential creation options,neither,neither,neither,sink
6805,BrowserPublicKeyCredentialCreationOptions.Builder_setClientDataHash,set client data hash from browser public key credential creation options builder sets a client data hash value to sign over in place of assembling and hashing client data j s o n during the signature reques. Return type is Browser Public Key Credential Creation Options. Builder and parameters are byte[]. builder for browser public key credential creation options,sink,sink,sink,sink
6806,BrowserPublicKeyCredentialCreationOptions.Builder_setOrigin,set origin from browser public key credential creation options builder sets the origin on whose behalf the calling browser is requesting a registration operatio. Return type is Browser Public Key Credential Creation Options. Builder and parameters are uri. builder for browser public key credential creation options,sink,sink,sink,sink
6807,BrowserPublicKeyCredentialCreationOptions.Builder_setPublicKeyCredentialCreationOptions,set public key credential creation options from browser public key credential creation options builder sets the parameters to dictate the client behavior during this registration sessio. Return type is Browser Public Key Credential Creation Options. Builder and parameters are public key credential creation options. builder for browser public key credential creation options,sink,sink,sink,sink
6808,BrowserPublicKeyCredentialRequestOptions_deserializeFromBytes,"deserialize from bytes from browser public key credential request options de-serializes the browser public key credential request options from bytes, reversing serialize to byt. Return type is Browser Public Key Credential Request Options and parameters are byte[]. parameters for a signature request from a web browser",neither,neither,source,neither
6809,BrowserPublicKeyCredentialRequestOptions_equals,equals from browser public key credential request options . parameters for a signature request from a web browser,neither,neither,neither,neither
6810,BrowserPublicKeyCredentialRequestOptions_getAuthenticationExtensions,get authentication extensions from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6811,BrowserPublicKeyCredentialRequestOptions_getChallenge,get challenge from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6812,BrowserPublicKeyCredentialRequestOptions_getClientDataHash,get client data hash from browser public key credential request options gets value of the client data has. Return type is byte[] and no argument. parameters for a signature request from a web browser,source,source,source,source
6813,BrowserPublicKeyCredentialRequestOptions_getOrigin,get origin from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6814,BrowserPublicKeyCredentialRequestOptions_getPublicKeyCredentialRequestOptions,get public key credential request options from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6815,BrowserPublicKeyCredentialRequestOptions_getRequestId,get request id from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6816,BrowserPublicKeyCredentialRequestOptions_getTimeoutSeconds,get timeout seconds from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6817,BrowserPublicKeyCredentialRequestOptions_getTokenBinding,get token binding from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6818,BrowserPublicKeyCredentialRequestOptions_hashCode,hash code from browser public key credential request options . parameters for a signature request from a web browser,source,source,source,source
6819,BrowserPublicKeyCredentialRequestOptions_serializeToBytes,serialize to bytes from browser public key credential request options serializes the browser public key credential request options to byte. Return type is byte[] and no argument. parameters for a signature request from a web browser,sink,sink,sink,sink
6820,BrowserPublicKeyCredentialRequestOptions_writeToParcel,write to parcel from browser public key credential request options . parameters for a signature request from a web browser,sink,sink,sink,sink
6821,BrowserPublicKeyCredentialRequestOptions.Builder_build,build from browser public key credential request options builder builds the browser public key credential request options objec. Return type is Browser Public Key Credential Request Options and no argument. builder for browser public key credential request options,neither,neither,neither,sink
6822,BrowserPublicKeyCredentialRequestOptions.Builder_setClientDataHash,set client data hash from browser public key credential request options builder sets a client data hash value to sign over in place of assembling and hashing client data j s o n during the signature reques. Return type is Browser Public Key Credential Request Options. Builder and parameters are byte[]. builder for browser public key credential request options,sink,sink,sink,sink
6823,BrowserPublicKeyCredentialRequestOptions.Builder_setOrigin,set origin from browser public key credential request options builder sets the origin on whose behalf the calling browser is requesting an authentication operatio. Return type is Browser Public Key Credential Request Options. Builder and parameters are uri. builder for browser public key credential request options,sink,sink,sink,sink
6824,BrowserPublicKeyCredentialRequestOptions.Builder_setPublicKeyCredentialRequestOptions,set public key credential request options from browser public key credential request options builder sets the parameters to dictate client behavior during this authentication sessio. Return type is Browser Public Key Credential Request Options. Builder and parameters are public key credential request options. builder for browser public key credential request options,sink,sink,sink,sink
6825,BrowserRequestOptions_getClientDataHash,get client data hash from browser request options gets value of the client data has. Return type is  byte[] and no argument. an abstract class representing browser based request parameters,source,source,source,source
6826,BrowserRequestOptions_getOrigin,get origin from browser request options . an abstract class representing browser based request parameters,source,source,source,source
6827,COSEAlgorithmIdentifier_describeContents,"describe contents from c o s e algorithm identifier . this class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated",neither,neither,source,neither
6828,COSEAlgorithmIdentifier_equals,"equals from c o s e algorithm identifier . this class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated",neither,neither,neither,neither
6829,COSEAlgorithmIdentifier_fromCoseValue,"from cose value from c o s e algorithm identifier . this class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated",neither,neither,neither,source
6830,COSEAlgorithmIdentifier_hashCode,"hash code from c o s e algorithm identifier . this class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated",neither,neither,source,source
6831,COSEAlgorithmIdentifier_toCoseValue,"to cose value from c o s e algorithm identifier . this class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated",neither,neither,neither,source
6832,COSEAlgorithmIdentifier_writeToParcel,"write to parcel from c o s e algorithm identifier . this class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated",sink,sink,sink,sink
6833,FidoAppIdExtension_equals,"equals from fido app id extension . extension for fido app id, to support u2 f backward compatibility in f i d o2 assertion requests",neither,neither,neither,neither
6834,FidoAppIdExtension_getAppId,"get app id from fido app id extension . extension for fido app id, to support u2 f backward compatibility in f i d o2 assertion requests",source,source,source,source
6835,FidoAppIdExtension_hashCode,"hash code from fido app id extension . extension for fido app id, to support u2 f backward compatibility in f i d o2 assertion requests",neither,neither,neither,neither
6836,FidoAppIdExtension_writeToParcel,"write to parcel from fido app id extension . extension for fido app id, to support u2 f backward compatibility in f i d o2 assertion requests",sink,sink,sink,sink
6837,PublicKeyCredential_deserializeFromBytes,"deserialize from bytes from public key credential de-serializes the public key credential from bytes, reversing serialize to byt. Return type is Public Key Credential and parameters are byte[]. this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",neither,neither,neither,neither
6838,PublicKeyCredential_equals,"equals from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",neither,neither,neither,neither
6839,PublicKeyCredential_getClientExtensionResults,"get client extension results from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",source,source,source,source
6840,PublicKeyCredential_getId,"get id from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",source,source,source,source
6841,PublicKeyCredential_getRawId,"get raw id from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",source,source,source,source
6842,PublicKeyCredential_getResponse,"get response from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",source,source,source,source
6843,PublicKeyCredential_getType,"get type from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",source,source,source,source
6844,PublicKeyCredential_hashCode,"hash code from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",source,source,source,source
6845,PublicKeyCredential_serializeToBytes,"serialize to bytes from public key credential serializes the public key credential to byte. Return type is byte[] and no argument. this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",sink,sink,neither,sink
6846,PublicKeyCredential_writeToParcel,"write to parcel from public key credential . this class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested",sink,sink,sink,sink
6847,PublicKeyCredential.Builder_build,build from public key credential builder builds the public key credential objec. Return type is Public Key Credential and no argument. builder for public key credential,neither,neither,neither,neither
6848,PublicKeyCredential.Builder_setAuthenticationExtensionsClientOutputs,set authentication extensions client outputs from public key credential builder sets the output produced by the client's processing of the extensions requested by the relying part. Return type is Public Key Credential. Builder and parameters are authentication extensions client outputs. builder for public key credential,sink,sink,sink,sink
6849,PublicKeyCredential.Builder_setId,set id from public key credential builder sets the base64url encoding of the credential identifie. Return type is Public Key Credential. Builder and parameters are string. builder for public key credential,sink,sink,sink,sink
6850,PublicKeyCredential.Builder_setRawId,set raw id from public key credential builder sets the raw value of the credential identifie. Return type is Public Key Credential. Builder and parameters are byte[]. builder for public key credential,sink,sink,sink,sink
6851,PublicKeyCredential.Builder_setResponse,set response from public key credential builder sets the authenticator's response to the clients register or sign reques. Return type is Public Key Credential. Builder and parameters are authenticator response. builder for public key credential,sink,sink,sink,sink
6852,PublicKeyCredentialCreationOptions_deserializeFromBytes,"deserialize from bytes from public key credential creation options de-serializes the public key credential creation options from bytes, reversing serialize to byt. Return type is Public Key Credential Creation Options and parameters are byte[]. this class is used to supply options when creating a new credential",neither,neither,neither,neither
6853,PublicKeyCredentialCreationOptions_equals,equals from public key credential creation options . this class is used to supply options when creating a new credential,neither,neither,neither,neither
6854,PublicKeyCredentialCreationOptions_getAttestationConveyancePreference,get attestation conveyance preference from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6855,PublicKeyCredentialCreationOptions_getAttestationConveyancePreferenceAsString,get attestation conveyance preference as string from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6856,PublicKeyCredentialCreationOptions_getAuthenticationExtensions,get authentication extensions from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6857,PublicKeyCredentialCreationOptions_getAuthenticatorSelection,get authenticator selection from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6858,PublicKeyCredentialCreationOptions_getChallenge,get challenge from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6859,PublicKeyCredentialCreationOptions_getExcludeList,get exclude list from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6860,PublicKeyCredentialCreationOptions_getParameters,get parameters from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6861,PublicKeyCredentialCreationOptions_getRequestId,get request id from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6862,PublicKeyCredentialCreationOptions_getRp,get rp from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6863,PublicKeyCredentialCreationOptions_getTimeoutSeconds,get timeout seconds from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6864,PublicKeyCredentialCreationOptions_getTokenBinding,get token binding from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6865,PublicKeyCredentialCreationOptions_getUser,get user from public key credential creation options . this class is used to supply options when creating a new credential,source,source,source,source
6866,PublicKeyCredentialCreationOptions_hashCode,hash code from public key credential creation options . this class is used to supply options when creating a new credential,neither,neither,neither,neither
6867,PublicKeyCredentialCreationOptions_serializeToBytes,serialize to bytes from public key credential creation options serializes the public key credential creation options to byte. Return type is byte[] and no argument. this class is used to supply options when creating a new credential,sink,sink,sink,sink
6868,PublicKeyCredentialCreationOptions_writeToParcel,write to parcel from public key credential creation options . this class is used to supply options when creating a new credential,sink,sink,sink,sink
6869,PublicKeyCredentialCreationOptions.Builder_build,build from public key credential creation options builder builds the public key credential creation options objec. Return type is Public Key Credential Creation Options and no argument. builder for public key credential creation options,neither,neither,neither,neither
6870,PublicKeyCredentialCreationOptions.Builder_setAttestationConveyancePreference,set attestation conveyance preference from public key credential creation options builder sets the preference for obfuscation level of the returned attestation dat. Return type is Public Key Credential Creation Options. Builder and parameters are attestation conveyance preference. builder for public key credential creation options,sink,sink,sink,sink
6871,PublicKeyCredentialCreationOptions.Builder_setAuthenticationExtensions,set authentication extensions from public key credential creation options builder sets additional extensions that may dictate some client behavior during an exchange with a connected authenticato. Return type is Public Key Credential Creation Options. Builder and parameters are authentication extensions. builder for public key credential creation options,sink,sink,sink,sink
6872,PublicKeyCredentialCreationOptions.Builder_setAuthenticatorSelection,set authenticator selection from public key credential creation options builder sets constraints on the type of authenticator that is acceptable for this sessio. Return type is Public Key Credential Creation Options. Builder and parameters are authenticator selection criteria. builder for public key credential creation options,sink,sink,sink,sink
6873,PublicKeyCredentialCreationOptions.Builder_setChallenge,set challenge from public key credential creation options builder sets the challenge to sign when generating the attestation for this reques. Return type is Public Key Credential Creation Options. Builder and parameters are byte[]. builder for public key credential creation options,sink,sink,sink,sink
6874,PublicKeyCredentialCreationOptions.Builder_setExcludeList,"set exclude list from public key credential creation options builder sets a list of credentials that, if found on a connected authenticator, will preclude registration of that authenticator with the relying part. Return type is Public Key Credential Creation Options. Builder and parameters are list. builder for public key credential creation options",sink,sink,sink,sink
6875,PublicKeyCredentialCreationOptions.Builder_setParameters,set parameters from public key credential creation options builder sets the public key credential parameters that constrain the type of credential to generat. Return type is Public Key Credential Creation Options. Builder and parameters are list. builder for public key credential creation options,sink,sink,sink,sink
6876,PublicKeyCredentialCreationOptions.Builder_setRequestId,set request id from public key credential creation options builder sets the request id in order to link together events into a single sessio. Return type is Public Key Credential Creation Options. Builder and parameters are integer. builder for public key credential creation options,sink,sink,sink,sink
6877,PublicKeyCredentialCreationOptions.Builder_setRp,"set rp from public key credential creation options builder sets information for a relying party, on whose behalf a given registration operation is being performe. Return type is Public Key Credential Creation Options. Builder and parameters are public key credential rp entity. builder for public key credential creation options",sink,sink,sink,sink
6878,PublicKeyCredentialCreationOptions.Builder_setTimeoutSeconds,set timeout seconds from public key credential creation options builder sets a timeout that limits the duration of the registration session provided to the use. Return type is Public Key Credential Creation Options. Builder and parameters are double. builder for public key credential creation options,sink,sink,sink,sink
6879,PublicKeyCredentialCreationOptions.Builder_setTokenBinding,set token binding from public key credential creation options builder sets the token binding associated with the calling origi. Return type is Public Key Credential Creation Options. Builder and parameters are token binding. builder for public key credential creation options,sink,sink,sink,sink
6880,PublicKeyCredentialCreationOptions.Builder_setUser,set user from public key credential creation options builder sets information about the user on whose behalf the relying party is registering a credentia. Return type is Public Key Credential Creation Options. Builder and parameters are public key credential user entity. builder for public key credential creation options,sink,sink,sink,sink
6881,PublicKeyCredentialDescriptor_equals,equals from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,neither,neither,neither,neither
6882,PublicKeyCredentialDescriptor_getId,get id from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,source,source,source,source
6883,PublicKeyCredentialDescriptor_getTransports,get transports from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,source,source,source,source
6884,PublicKeyCredentialDescriptor_getType,get type from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,source,source,source,source
6885,PublicKeyCredentialDescriptor_getTypeAsString,get type as string from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,source,source,source,source
6886,PublicKeyCredentialDescriptor_hashCode,hash code from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,source,source,neither,neither
6887,PublicKeyCredentialDescriptor_writeToParcel,write to parcel from public key credential descriptor . this class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method,sink,sink,sink,sink
6888,PublicKeyCredentialParameters_equals,equals from public key credential parameters . this class supplies additional parameters when creating a new credential,neither,neither,neither,neither
6889,PublicKeyCredentialParameters_getAlgorithm,get algorithm from public key credential parameters . this class supplies additional parameters when creating a new credential,source,source,source,source
6890,PublicKeyCredentialParameters_getAlgorithmIdAsInteger,get algorithm id as integer from public key credential parameters . this class supplies additional parameters when creating a new credential,source,source,source,source
6891,PublicKeyCredentialParameters_getType,get type from public key credential parameters . this class supplies additional parameters when creating a new credential,source,source,source,source
6892,PublicKeyCredentialParameters_getTypeAsString,get type as string from public key credential parameters . this class supplies additional parameters when creating a new credential,source,source,source,source
6893,PublicKeyCredentialParameters_hashCode,hash code from public key credential parameters . this class supplies additional parameters when creating a new credential,neither,neither,sink,neither
6894,PublicKeyCredentialParameters_writeToParcel,write to parcel from public key credential parameters . this class supplies additional parameters when creating a new credential,sink,sink,sink,sink
6895,PublicKeyCredentialRequestOptions_deserializeFromBytes,"deserialize from bytes from public key credential request options deserializes the public key credential request options from bytes, reversing serialize to byt. Return type is Public Key Credential Request Options and parameters are byte[]. this class is used to supply an authentication request with the data it needs to generate an assertion",neither,neither,neither,neither
6896,PublicKeyCredentialRequestOptions_equals,equals from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,neither,neither,neither,neither
6897,PublicKeyCredentialRequestOptions_getAllowList,get allow list from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6898,PublicKeyCredentialRequestOptions_getAuthenticationExtensions,get authentication extensions from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6899,PublicKeyCredentialRequestOptions_getChallenge,get challenge from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6900,PublicKeyCredentialRequestOptions_getRequestId,get request id from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6901,PublicKeyCredentialRequestOptions_getRpId,get rp id from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6902,PublicKeyCredentialRequestOptions_getTimeoutSeconds,get timeout seconds from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6903,PublicKeyCredentialRequestOptions_getTokenBinding,get token binding from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6904,PublicKeyCredentialRequestOptions_hashCode,hash code from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,source,source,source,source
6905,PublicKeyCredentialRequestOptions_serializeToBytes,serialize to bytes from public key credential request options serializes the public key credential request options to byte. Return type is byte[] and no argument. this class is used to supply an authentication request with the data it needs to generate an assertion,sink,sink,source,sink
6906,PublicKeyCredentialRequestOptions_writeToParcel,write to parcel from public key credential request options . this class is used to supply an authentication request with the data it needs to generate an assertion,sink,sink,sink,sink
6907,PublicKeyCredentialRequestOptions.Builder_build,build from public key credential request options builder builds the public key credential request options objec. Return type is Public Key Credential Request Options and no argument. builder for public key credential request options,neither,neither,neither,neither
6908,PublicKeyCredentialRequestOptions.Builder_setAllowList,set allow list from public key credential request options builder sets a list of public key credentials which constrain authentication to authenticators that contain a private key for at least one of the supplied public key. Return type is Public Key Credential Request Options. Builder and parameters are list. builder for public key credential request options,sink,sink,sink,sink
6909,PublicKeyCredentialRequestOptions.Builder_setAuthenticationExtensions,set authentication extensions from public key credential request options builder sets additional extensions that may dictate some client behavior during an exchange with a connected authenticato. Return type is Public Key Credential Request Options. Builder and parameters are authentication extensions. builder for public key credential request options,sink,sink,sink,sink
6910,PublicKeyCredentialRequestOptions.Builder_setChallenge,set challenge from public key credential request options builder sets the nonce value that the authenticator should sign using a private key corresponding to a public key credential that is acceptable for this authentication sessio. Return type is Public Key Credential Request Options. Builder and parameters are byte[]. builder for public key credential request options,sink,sink,sink,sink
6911,PublicKeyCredentialRequestOptions.Builder_setRequestId,set request id from public key credential request options builder sets the request id in order to link together events into a single sessio. Return type is Public Key Credential Request Options. Builder and parameters are integer. builder for public key credential request options,sink,sink,sink,sink
6912,PublicKeyCredentialRequestOptions.Builder_setRpId,"set rp id from public key credential request options builder sets identifier for a relying party, on whose behalf a given authentication operation is being performe. Return type is Public Key Credential Request Options. Builder and parameters are string. builder for public key credential request options",sink,sink,sink,sink
6913,PublicKeyCredentialRequestOptions.Builder_setTimeoutSeconds,set timeout seconds from public key credential request options builder . builder for public key credential request options,sink,sink,sink,sink
6914,PublicKeyCredentialRequestOptions.Builder_setTokenBinding,set token binding from public key credential request options builder sets the token binding associated with the calling origi. Return type is Public Key Credential Request Options. Builder and parameters are token binding. builder for public key credential request options,sink,sink,sink,sink
6915,PublicKeyCredentialRpEntity_equals,equals from public key credential rp entity . represents the information about a relying party with which a credential is associated,neither,neither,neither,neither
6916,PublicKeyCredentialRpEntity_getIcon,get icon from public key credential rp entity . represents the information about a relying party with which a credential is associated,source,source,source,source
6917,PublicKeyCredentialRpEntity_getId,get id from public key credential rp entity . represents the information about a relying party with which a credential is associated,source,source,source,source
6918,PublicKeyCredentialRpEntity_getName,get name from public key credential rp entity . represents the information about a relying party with which a credential is associated,source,source,source,source
6919,PublicKeyCredentialRpEntity_hashCode,hash code from public key credential rp entity . represents the information about a relying party with which a credential is associated,source,source,source,source
6920,PublicKeyCredentialRpEntity_writeToParcel,write to parcel from public key credential rp entity . represents the information about a relying party with which a credential is associated,sink,sink,sink,sink
6921,PublicKeyCredentialUserEntity_equals,equals from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,neither,neither,neither,neither
6922,PublicKeyCredentialUserEntity_getDisplayName,get display name from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,source,source,source,source
6923,PublicKeyCredentialUserEntity_getIcon,get icon from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,source,source,source,source
6924,PublicKeyCredentialUserEntity_getId,get id from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,source,source,source,source
6925,PublicKeyCredentialUserEntity_getName,get name from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,source,source,source,source
6926,PublicKeyCredentialUserEntity_hashCode,hash code from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,neither,neither,neither,neither
6927,PublicKeyCredentialUserEntity_writeToParcel,write to parcel from public key credential user entity . this class is used to supply additional parameters about the user account when creating a new credential,sink,sink,sink,sink
6928,RequestOptions_getChallenge,get challenge from request options . an abstract class representing f i d o2 request options,source,source,source,neither
6929,RequestOptions_getRequestId,get request id from request options . an abstract class representing f i d o2 request options,source,source,source,neither
6930,RequestOptions_getTimeoutSeconds,get timeout seconds from request options . an abstract class representing f i d o2 request options,source,source,source,source
6931,RequestOptions_getTokenBinding,get token binding from request options . an abstract class representing f i d o2 request options,source,source,source,neither
6932,RequestOptions_serializeToBytes,serialize to bytes from request options serializes the request options to byte. Return type is byte[] and no argument. an abstract class representing f i d o2 request options,sink,sink,sink,sink
6933,TokenBinding_equals,equals from token binding . represents the token binding information provided by the relying party,neither,neither,neither,neither
6934,TokenBinding_getTokenBindingId,"get token binding id from token binding returns the token binding id if the token binding status is p r e s e n t, otherwise returns nul. Return type is String and no argument. represents the token binding information provided by the relying party",source,source,source,source
6935,TokenBinding_getTokenBindingStatusAsString,get token binding status as string from token binding returns the stringified token binding token binding status associated with this instanc. Return type is String and no argument. represents the token binding information provided by the relying party,source,source,source,source
6936,TokenBinding_hashCode,hash code from token binding . represents the token binding information provided by the relying party,source,source,source,source
6937,TokenBinding_toJsonObject,to json object from token binding returns this token binding object as a j s o n objec. Return type is J S O N Object and no argument. represents the token binding information provided by the relying party,neither,neither,neither,neither
6938,TokenBinding_writeToParcel,write to parcel from token binding . represents the token binding information provided by the relying party,sink,sink,sink,sink
6939,UserVerificationMethodExtension_equals,equals from user verification method extension . extension for fido user verification method,neither,neither,neither,neither
6940,UserVerificationMethodExtension_getUvm,get uvm from user verification method extension . extension for fido user verification method,source,source,source,source
6941,UserVerificationMethodExtension_hashCode,hash code from user verification method extension . extension for fido user verification method,neither,neither,neither,neither
6942,UserVerificationMethodExtension_writeToParcel,write to parcel from user verification method extension . extension for fido user verification method,sink,sink,sink,sink
6943,UvmEntries_equals,equals from uvm entries . represents up to three user verification methods used by the authenticator,neither,neither,neither,neither
6944,UvmEntries_getUvmEntryList,get uvm entry list from uvm entries . represents up to three user verification methods used by the authenticator,source,source,source,source
6945,UvmEntries_hashCode,hash code from uvm entries . represents up to three user verification methods used by the authenticator,source,source,source,neither
6946,UvmEntries_writeToParcel,write to parcel from uvm entries . represents up to three user verification methods used by the authenticator,sink,sink,sink,sink
6947,UvmEntries.Builder_addAll,add all from uvm entries builder . builder for uvm entries,neither,neither,neither,neither
6948,UvmEntries.Builder_addUvmEntry,add uvm entry from uvm entries builder . builder for uvm entries,neither,neither,neither,neither
6949,UvmEntries.Builder_build,build from uvm entries builder builds the uvm entries objec. Return type is Uvm Entries and no argument. builder for uvm entries,neither,neither,neither,neither
6950,UvmEntry_equals,equals from uvm entry . represents a single user verification method entry as defined at u v m entry,neither,neither,neither,neither
6951,UvmEntry_getKeyProtectionType,get key protection type from uvm entry . represents a single user verification method entry as defined at u v m entry,source,source,source,source
6952,UvmEntry_getMatcherProtectionType,get matcher protection type from uvm entry . represents a single user verification method entry as defined at u v m entry,source,source,source,source
6953,UvmEntry_getUserVerificationMethod,get user verification method from uvm entry . represents a single user verification method entry as defined at u v m entry,source,source,source,source
6954,UvmEntry_hashCode,hash code from uvm entry . represents a single user verification method entry as defined at u v m entry,source,source,neither,neither
6955,UvmEntry_writeToParcel,write to parcel from uvm entry . represents a single user verification method entry as defined at u v m entry,sink,sink,sink,sink
6956,UvmEntry.Builder_build,build from uvm entry builder builds the uvm entry objec. Return type is Uvm Entry and no argument. builder for uvm entry,neither,neither,neither,neither
6957,UvmEntry.Builder_setKeyProtectionType,set key protection type from uvm entry builder . builder for uvm entry,sink,sink,sink,neither
6958,UvmEntry.Builder_setMatcherProtectionType,set matcher protection type from uvm entry builder . builder for uvm entry,neither,neither,sink,neither
6959,UvmEntry.Builder_setUserVerificationMethod,set user verification method from uvm entry builder . builder for uvm entry,sink,sink,sink,sink
6960,Algorithm_fromAlgoValue,from algo value from algorithm . an interface for an algorithm used in public key encryption,neither,neither,neither,neither
6961,Algorithm_getAlgoValue,get algo value from algorithm gets the cose value for the algorithm used in the encryption of the credentia. Return type is  int and no argument. an interface for an algorithm used in public key encryption,source,source,source,source
6962,AuthenticationExtensions.Builder_build,build from authentication extensions builder builds the authentication extensions objec. Return type is Authentication Extensions and no argument. builder for authentication extensions,neither,neither,neither,neither
6963,AuthenticationExtensions.Builder_setFido2Extension,"set fido2 extension from authentication extensions builder sets the app id extension, which allows for authentication of u2 f authenticators previously registered under the supplied app i. Return type is Authentication Extensions. Builder and parameters are fido app id extension. builder for authentication extensions",sink,sink,sink,sink
6964,AuthenticationExtensions.Builder_setUserVerificationMethodExtension,"set user verification method extension from authentication extensions builder sets the user verification method extension, which allows the relying party to ascertain up to three authentication methods that were use. Return type is Authentication Extensions. Builder and parameters are user verification method extension. builder for authentication extensions",sink,sink,sink,sink
6965,AuthenticationExtensionsClientOutputs.Builder_build,build from authentication extensions client outputs builder builds the authentication extensions client outputs objec. Return type is Authentication Extensions Client Outputs and no argument. builder for authentication extensions client outputs,neither,neither,neither,neither
6966,AuthenticationExtensionsClientOutputs.Builder_setUserVerificationMethodEntries,set user verification method entries from authentication extensions client outputs builder sets the user verification method extension entrie. Return type is Authentication Extensions Client Outputs. Builder and parameters are uvm entries. builder for authentication extensions client outputs,sink,sink,sink,sink
6967,AuthenticatorSelectionCriteria.Builder_build,build from authenticator selection criteria builder builds the authenticator selection criteria objec. Return type is Authenticator Selection Criteria and no argument. builder for authenticator selection criteria,neither,neither,neither,neither
6968,AuthenticatorSelectionCriteria.Builder_setAttachment,set attachment from authenticator selection criteria builder sets the attachment to use for this sessio. Return type is Authenticator Selection Criteria. Builder and parameters are attachment. builder for authenticator selection criteria,sink,sink,sink,sink
6969,AuthenticatorSelectionCriteria.Builder_setRequireResidentKey,set require resident key from authenticator selection criteria builder sets whether the key created will be a resident ke. Return type is Authenticator Selection Criteria. Builder and parameters are boolean. builder for authenticator selection criteria,sink,sink,sink,sink
6970,BrowserPublicKeyCredentialCreationOptions.Builder_build,build from browser public key credential creation options builder builds the browser public key credential creation options objec. Return type is Browser Public Key Credential Creation Options and no argument. builder for browser public key credential creation options,neither,neither,neither,sink
6971,BrowserPublicKeyCredentialCreationOptions.Builder_setClientDataHash,set client data hash from browser public key credential creation options builder sets a client data hash value to sign over in place of assembling and hashing client data j s o n during the signature reques. Return type is Browser Public Key Credential Creation Options. Builder and parameters are byte[]. builder for browser public key credential creation options,sink,sink,sink,sink
6972,BrowserPublicKeyCredentialCreationOptions.Builder_setOrigin,set origin from browser public key credential creation options builder sets the origin on whose behalf the calling browser is requesting a registration operatio. Return type is Browser Public Key Credential Creation Options. Builder and parameters are uri. builder for browser public key credential creation options,sink,sink,sink,sink
6973,BrowserPublicKeyCredentialCreationOptions.Builder_setPublicKeyCredentialCreationOptions,set public key credential creation options from browser public key credential creation options builder sets the parameters to dictate the client behavior during this registration sessio. Return type is Browser Public Key Credential Creation Options. Builder and parameters are public key credential creation options. builder for browser public key credential creation options,sink,sink,sink,sink
6974,BrowserPublicKeyCredentialRequestOptions.Builder_build,build from browser public key credential request options builder builds the browser public key credential request options objec. Return type is Browser Public Key Credential Request Options and no argument. builder for browser public key credential request options,neither,neither,neither,sink
6975,BrowserPublicKeyCredentialRequestOptions.Builder_setClientDataHash,set client data hash from browser public key credential request options builder sets a client data hash value to sign over in place of assembling and hashing client data j s o n during the signature reques. Return type is Browser Public Key Credential Request Options. Builder and parameters are byte[]. builder for browser public key credential request options,sink,sink,sink,sink
6976,BrowserPublicKeyCredentialRequestOptions.Builder_setOrigin,set origin from browser public key credential request options builder sets the origin on whose behalf the calling browser is requesting an authentication operatio. Return type is Browser Public Key Credential Request Options. Builder and parameters are uri. builder for browser public key credential request options,sink,sink,sink,sink
6977,BrowserPublicKeyCredentialRequestOptions.Builder_setPublicKeyCredentialRequestOptions,set public key credential request options from browser public key credential request options builder sets the parameters to dictate client behavior during this authentication sessio. Return type is Browser Public Key Credential Request Options. Builder and parameters are public key credential request options. builder for browser public key credential request options,sink,sink,sink,sink
6978,PublicKeyCredential.Builder_build,build from public key credential builder builds the public key credential objec. Return type is Public Key Credential and no argument. builder for public key credential,neither,neither,neither,neither
6979,PublicKeyCredential.Builder_setAuthenticationExtensionsClientOutputs,set authentication extensions client outputs from public key credential builder sets the output produced by the client's processing of the extensions requested by the relying part. Return type is Public Key Credential. Builder and parameters are authentication extensions client outputs. builder for public key credential,sink,sink,sink,sink
6980,PublicKeyCredential.Builder_setId,set id from public key credential builder sets the base64url encoding of the credential identifie. Return type is Public Key Credential. Builder and parameters are string. builder for public key credential,sink,sink,sink,sink
6981,PublicKeyCredential.Builder_setRawId,set raw id from public key credential builder sets the raw value of the credential identifie. Return type is Public Key Credential. Builder and parameters are byte[]. builder for public key credential,sink,sink,sink,sink
6982,PublicKeyCredential.Builder_setResponse,set response from public key credential builder sets the authenticator's response to the clients register or sign reques. Return type is Public Key Credential. Builder and parameters are authenticator response. builder for public key credential,sink,sink,sink,sink
6983,PublicKeyCredentialCreationOptions.Builder_build,build from public key credential creation options builder builds the public key credential creation options objec. Return type is Public Key Credential Creation Options and no argument. builder for public key credential creation options,neither,neither,neither,neither
6984,PublicKeyCredentialCreationOptions.Builder_setAttestationConveyancePreference,set attestation conveyance preference from public key credential creation options builder sets the preference for obfuscation level of the returned attestation dat. Return type is Public Key Credential Creation Options. Builder and parameters are attestation conveyance preference. builder for public key credential creation options,sink,sink,sink,sink
6985,PublicKeyCredentialCreationOptions.Builder_setAuthenticationExtensions,set authentication extensions from public key credential creation options builder sets additional extensions that may dictate some client behavior during an exchange with a connected authenticato. Return type is Public Key Credential Creation Options. Builder and parameters are authentication extensions. builder for public key credential creation options,sink,sink,sink,sink
6986,PublicKeyCredentialCreationOptions.Builder_setAuthenticatorSelection,set authenticator selection from public key credential creation options builder sets constraints on the type of authenticator that is acceptable for this sessio. Return type is Public Key Credential Creation Options. Builder and parameters are authenticator selection criteria. builder for public key credential creation options,sink,sink,sink,sink
6987,PublicKeyCredentialCreationOptions.Builder_setChallenge,set challenge from public key credential creation options builder sets the challenge to sign when generating the attestation for this reques. Return type is Public Key Credential Creation Options. Builder and parameters are byte[]. builder for public key credential creation options,sink,sink,sink,sink
6988,PublicKeyCredentialCreationOptions.Builder_setExcludeList,"set exclude list from public key credential creation options builder sets a list of credentials that, if found on a connected authenticator, will preclude registration of that authenticator with the relying part. Return type is Public Key Credential Creation Options. Builder and parameters are list. builder for public key credential creation options",sink,sink,sink,sink
6989,PublicKeyCredentialCreationOptions.Builder_setParameters,set parameters from public key credential creation options builder sets the public key credential parameters that constrain the type of credential to generat. Return type is Public Key Credential Creation Options. Builder and parameters are list. builder for public key credential creation options,sink,sink,sink,sink
6990,PublicKeyCredentialCreationOptions.Builder_setRequestId,set request id from public key credential creation options builder sets the request id in order to link together events into a single sessio. Return type is Public Key Credential Creation Options. Builder and parameters are integer. builder for public key credential creation options,sink,sink,sink,sink
6991,PublicKeyCredentialCreationOptions.Builder_setRp,"set rp from public key credential creation options builder sets information for a relying party, on whose behalf a given registration operation is being performe. Return type is Public Key Credential Creation Options. Builder and parameters are public key credential rp entity. builder for public key credential creation options",sink,sink,sink,sink
6992,PublicKeyCredentialCreationOptions.Builder_setTimeoutSeconds,set timeout seconds from public key credential creation options builder sets a timeout that limits the duration of the registration session provided to the use. Return type is Public Key Credential Creation Options. Builder and parameters are double. builder for public key credential creation options,sink,sink,sink,sink
6993,PublicKeyCredentialCreationOptions.Builder_setTokenBinding,set token binding from public key credential creation options builder sets the token binding associated with the calling origi. Return type is Public Key Credential Creation Options. Builder and parameters are token binding. builder for public key credential creation options,sink,sink,sink,sink
6994,PublicKeyCredentialCreationOptions.Builder_setUser,set user from public key credential creation options builder sets information about the user on whose behalf the relying party is registering a credentia. Return type is Public Key Credential Creation Options. Builder and parameters are public key credential user entity. builder for public key credential creation options,sink,sink,sink,sink
6995,PublicKeyCredentialRequestOptions.Builder_build,build from public key credential request options builder builds the public key credential request options objec. Return type is Public Key Credential Request Options and no argument. builder for public key credential request options,neither,neither,neither,neither
6996,PublicKeyCredentialRequestOptions.Builder_setAllowList,set allow list from public key credential request options builder sets a list of public key credentials which constrain authentication to authenticators that contain a private key for at least one of the supplied public key. Return type is Public Key Credential Request Options. Builder and parameters are list. builder for public key credential request options,sink,sink,sink,sink
6997,PublicKeyCredentialRequestOptions.Builder_setAuthenticationExtensions,set authentication extensions from public key credential request options builder sets additional extensions that may dictate some client behavior during an exchange with a connected authenticato. Return type is Public Key Credential Request Options. Builder and parameters are authentication extensions. builder for public key credential request options,sink,sink,sink,sink
6998,PublicKeyCredentialRequestOptions.Builder_setChallenge,set challenge from public key credential request options builder sets the nonce value that the authenticator should sign using a private key corresponding to a public key credential that is acceptable for this authentication sessio. Return type is Public Key Credential Request Options. Builder and parameters are byte[]. builder for public key credential request options,sink,sink,sink,sink
6999,PublicKeyCredentialRequestOptions.Builder_setRequestId,set request id from public key credential request options builder sets the request id in order to link together events into a single sessio. Return type is Public Key Credential Request Options. Builder and parameters are integer. builder for public key credential request options,sink,sink,sink,sink
7000,PublicKeyCredentialRequestOptions.Builder_setRpId,"set rp id from public key credential request options builder sets identifier for a relying party, on whose behalf a given authentication operation is being performe. Return type is Public Key Credential Request Options. Builder and parameters are string. builder for public key credential request options",sink,sink,sink,sink
7001,PublicKeyCredentialRequestOptions.Builder_setTimeoutSeconds,set timeout seconds from public key credential request options builder . builder for public key credential request options,sink,sink,sink,sink
7002,PublicKeyCredentialRequestOptions.Builder_setTokenBinding,set token binding from public key credential request options builder sets the token binding associated with the calling origi. Return type is Public Key Credential Request Options. Builder and parameters are token binding. builder for public key credential request options,sink,sink,sink,sink
7003,UvmEntries.Builder_addAll,add all from uvm entries builder . builder for uvm entries,neither,neither,neither,neither
7004,UvmEntries.Builder_addUvmEntry,add uvm entry from uvm entries builder . builder for uvm entries,neither,neither,neither,neither
7005,UvmEntries.Builder_build,build from uvm entries builder builds the uvm entries objec. Return type is Uvm Entries and no argument. builder for uvm entries,neither,neither,neither,neither
7006,UvmEntry.Builder_build,build from uvm entry builder builds the uvm entry objec. Return type is Uvm Entry and no argument. builder for uvm entry,neither,neither,neither,neither
7007,UvmEntry.Builder_setKeyProtectionType,set key protection type from uvm entry builder . builder for uvm entry,sink,sink,sink,neither
7008,UvmEntry.Builder_setMatcherProtectionType,set matcher protection type from uvm entry builder . builder for uvm entry,neither,neither,sink,neither
7009,UvmEntry.Builder_setUserVerificationMethod,set user verification method from uvm entry builder . builder for uvm entry,sink,sink,sink,sink
7010,LabelValue_getLabel,get label from label value . parcelable representing label value,source,source,source,source
7011,LabelValue_getValue,get value from label value . parcelable representing label value,source,source,source,source
7012,LabelValue_writeToParcel,write to parcel from label value . parcelable representing label value,sink,sink,sink,sink
7013,LabelValueRow_getColumns,get columns from label value row . parcelable representing label value row data,source,source,source,source
7014,LabelValueRow_getHexBackgroundColor,get hex background color from label value row deprecate. Return type is String and no argument. parcelable representing label value row data,source,source,source,source
7015,LabelValueRow_getHexFontColor,get hex font color from label value row deprecate. Return type is String and no argument. parcelable representing label value row data,source,source,source,source
7016,LabelValueRow_newBuilder,new builder from label value row . parcelable representing label value row data,neither,neither,neither,neither
7017,LabelValueRow_writeToParcel,write to parcel from label value row . parcelable representing label value row data,sink,sink,sink,sink
7018,LabelValueRow.Builder_addColumn,add column from label value row builder . builder to create an label value row,neither,neither,neither,neither
7019,LabelValueRow.Builder_addColumns,add columns from label value row builder adds the specified columns to this builder instanc. Return type is Label Value Row. Builder and parameters are collection. builder to create an label value row,neither,neither,neither,neither
7020,LabelValueRow.Builder_build,build from label value row builder . builder to create an label value row,neither,neither,neither,neither
7021,LabelValueRow.Builder_setHexBackgroundColor,set hex background color from label value row builder deprecate. Return type is Label Value Row. Builder and parameters are string. builder to create an label value row,sink,sink,sink,sink
7022,LabelValueRow.Builder_setHexFontColor,set hex font color from label value row builder deprecate. Return type is Label Value Row. Builder and parameters are string. builder to create an label value row,sink,sink,sink,sink
7023,LoyaltyPoints_getBalance,"get balance from loyalty points . parcelable representing the loyalty reward points label, balance, and type",source,source,source,source
7024,LoyaltyPoints_getLabel,"get label from loyalty points . parcelable representing the loyalty reward points label, balance, and type",source,source,source,source
7025,LoyaltyPoints_getType,"get type from loyalty points deprecate. Return type is String and no argument. parcelable representing the loyalty reward points label, balance, and type",source,source,source,source
7026,LoyaltyPoints_getValidTimeInterval,"get valid time interval from loyalty points deprecate. Return type is Time Interval and no argument. parcelable representing the loyalty reward points label, balance, and type",source,source,source,source
7027,LoyaltyPoints_newBuilder,"new builder from loyalty points . parcelable representing the loyalty reward points label, balance, and type",neither,neither,neither,neither
7028,LoyaltyPoints_writeToParcel,"write to parcel from loyalty points . parcelable representing the loyalty reward points label, balance, and type",sink,sink,sink,sink
7029,LoyaltyPoints.Builder_build,build from loyalty points builder . builder to create a loyalty points,neither,neither,neither,neither
7030,LoyaltyPoints.Builder_setBalance,"set balance from loyalty points builder sets the loyalty point balance, such as ""500"" or ""$1000. Return type is Loyalty Points. Builder and parameters are loyalty points balance. builder to create a loyalty points",sink,sink,sink,sink
7031,LoyaltyPoints.Builder_setLabel,"set label from loyalty points builder sets the loyalty points label, such as "" points. Return type is Loyalty Points. Builder and parameters are string. builder to create a loyalty points",sink,sink,sink,sink
7032,LoyaltyPoints.Builder_setType,set type from loyalty points builder deprecate. Return type is Loyalty Points. Builder and parameters are string. builder to create a loyalty points,sink,sink,sink,sink
7033,LoyaltyPoints.Builder_setValidTimeInterval,set valid time interval from loyalty points builder deprecate. Return type is Loyalty Points. Builder and parameters are time interval. builder to create a loyalty points,sink,sink,sink,sink
7034,LoyaltyPointsBalance_getCurrencyCode,get currency code from loyalty points balance . parcelable representing loyalty points balance,source,source,source,source
7035,LoyaltyPointsBalance_getCurrencyMicros,get currency micros from loyalty points balance . parcelable representing loyalty points balance,source,source,source,source
7036,LoyaltyPointsBalance_getDouble,get double from loyalty points balance . parcelable representing loyalty points balance,source,source,source,source
7037,LoyaltyPointsBalance_getInt,get int from loyalty points balance . parcelable representing loyalty points balance,source,source,source,source
7038,LoyaltyPointsBalance_getString,get string from loyalty points balance . parcelable representing loyalty points balance,source,source,source,source
7039,LoyaltyPointsBalance_getType,get type from loyalty points balance . parcelable representing loyalty points balance,source,source,source,source
7040,LoyaltyPointsBalance_newBuilder,new builder from loyalty points balance . parcelable representing loyalty points balance,neither,neither,neither,neither
7041,LoyaltyPointsBalance_writeToParcel,write to parcel from loyalty points balance . parcelable representing loyalty points balance,sink,sink,sink,sink
7042,LoyaltyPointsBalance.Builder_build,build from loyalty points balance builder . builder to create a loyalty points balance,neither,neither,neither,neither
7043,LoyaltyPointsBalance.Builder_setDouble,set double from loyalty points balance builder the double form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are double. builder to create a loyalty points balance,sink,sink,sink,sink
7044,LoyaltyPointsBalance.Builder_setInt,set int from loyalty points balance builder the integer form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are int. builder to create a loyalty points balance,sink,sink,sink,sink
7045,LoyaltyPointsBalance.Builder_setMoney,set money from loyalty points balance builder the money form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are string long. builder to create a loyalty points balance,sink,sink,sink,sink
7046,LoyaltyPointsBalance.Builder_setString,set string from loyalty points balance builder the string form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are string. builder to create a loyalty points balance,sink,sink,sink,sink
7047,TextModuleData_getBody,get body from text module data . parcelable representing data for text module associated with wallet object,source,source,source,source
7048,TextModuleData_getHeader,get header from text module data . parcelable representing data for text module associated with wallet object,source,source,source,source
7049,TextModuleData_writeToParcel,write to parcel from text module data . parcelable representing data for text module associated with wallet object,sink,sink,sink,sink
7050,TimeInterval_getEndTimestamp,get end timestamp from time interval . parcelable representing a time interval,source,source,source,source
7051,TimeInterval_getStartTimestamp,get start timestamp from time interval . parcelable representing a time interval,source,source,source,source
7052,TimeInterval_writeToParcel,write to parcel from time interval . parcelable representing a time interval,sink,sink,sink,sink
7053,UriData_getDescription,get description from uri data . parcelable representing an uri,source,source,source,source
7054,UriData_getUri,get uri from uri data . parcelable representing an uri,source,source,source,source
7055,UriData_writeToParcel,write to parcel from uri data . parcelable representing an uri,sink,sink,sink,sink
7056,WalletObjectMessage_getActionUri,get action uri from wallet object message deprecate. Return type is Uri Data and no argument. parcelable representing a message associated with the wallet object,source,source,source,source
7057,WalletObjectMessage_getBody,get body from wallet object message . parcelable representing a message associated with the wallet object,source,source,source,source
7058,WalletObjectMessage_getDisplayInterval,get display interval from wallet object message . parcelable representing a message associated with the wallet object,source,source,source,source
7059,WalletObjectMessage_getHeader,get header from wallet object message . parcelable representing a message associated with the wallet object,source,source,source,source
7060,WalletObjectMessage_getImageUri,get image uri from wallet object message deprecate. Return type is Uri Data and no argument. parcelable representing a message associated with the wallet object,source,source,source,source
7061,WalletObjectMessage_newBuilder,new builder from wallet object message . parcelable representing a message associated with the wallet object,neither,neither,neither,neither
7062,WalletObjectMessage_writeToParcel,write to parcel from wallet object message . parcelable representing a message associated with the wallet object,sink,sink,sink,sink
7063,WalletObjectMessage.Builder_build,build from wallet object message builder . builder to create a wallet object message,neither,neither,neither,neither
7064,WalletObjectMessage.Builder_setActionUri,set action uri from wallet object message builder deprecate. Return type is Wallet Object Message. Builder and parameters are uri data. builder to create a wallet object message,sink,sink,sink,sink
7065,WalletObjectMessage.Builder_setBody,set body from wallet object message builder sets the message bod. Return type is Wallet Object Message. Builder and parameters are string. builder to create a wallet object message,sink,sink,sink,sink
7066,WalletObjectMessage.Builder_setDisplayInterval,set display interval from wallet object message builder sets the period of time that the message will be displayed to user. Return type is Wallet Object Message. Builder and parameters are time interval. builder to create a wallet object message,sink,sink,sink,sink
7067,WalletObjectMessage.Builder_setHeader,set header from wallet object message builder sets the message heade. Return type is Wallet Object Message. Builder and parameters are string. builder to create a wallet object message,sink,sink,sink,sink
7068,WalletObjectMessage.Builder_setImageUri,set image uri from wallet object message builder deprecate. Return type is Wallet Object Message. Builder and parameters are uri data. builder to create a wallet object message,sink,sink,sink,sink
7069,WalletObjects_createWalletObjects,create wallet objects from wallet objects launches a ui allowing the user to save a loyalty card wallet object to their walle. Return type is  void and parameters are google api client create wallet objects request int. entry point for wallet objects functionality,sink,neither,neither,neither
7070,LabelValueRow.Builder_addColumn,add column from label value row builder . builder to create an label value row,neither,neither,neither,neither
7071,LabelValueRow.Builder_addColumns,add columns from label value row builder adds the specified columns to this builder instanc. Return type is Label Value Row. Builder and parameters are collection. builder to create an label value row,neither,neither,neither,neither
7072,LabelValueRow.Builder_build,build from label value row builder . builder to create an label value row,neither,neither,neither,neither
7073,LabelValueRow.Builder_setHexBackgroundColor,set hex background color from label value row builder deprecate. Return type is Label Value Row. Builder and parameters are string. builder to create an label value row,sink,sink,sink,sink
7074,LabelValueRow.Builder_setHexFontColor,set hex font color from label value row builder deprecate. Return type is Label Value Row. Builder and parameters are string. builder to create an label value row,sink,sink,sink,sink
7075,LoyaltyPoints.Builder_build,build from loyalty points builder . builder to create a loyalty points,neither,neither,neither,neither
7076,LoyaltyPoints.Builder_setBalance,"set balance from loyalty points builder sets the loyalty point balance, such as ""500"" or ""$1000. Return type is Loyalty Points. Builder and parameters are loyalty points balance. builder to create a loyalty points",sink,sink,sink,sink
7077,LoyaltyPoints.Builder_setLabel,"set label from loyalty points builder sets the loyalty points label, such as "" points. Return type is Loyalty Points. Builder and parameters are string. builder to create a loyalty points",sink,sink,sink,sink
7078,LoyaltyPoints.Builder_setType,set type from loyalty points builder deprecate. Return type is Loyalty Points. Builder and parameters are string. builder to create a loyalty points,sink,sink,sink,sink
7079,LoyaltyPoints.Builder_setValidTimeInterval,set valid time interval from loyalty points builder deprecate. Return type is Loyalty Points. Builder and parameters are time interval. builder to create a loyalty points,sink,sink,sink,sink
7080,LoyaltyPointsBalance.Builder_build,build from loyalty points balance builder . builder to create a loyalty points balance,neither,neither,neither,neither
7081,LoyaltyPointsBalance.Builder_setDouble,set double from loyalty points balance builder the double form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are double. builder to create a loyalty points balance,sink,sink,sink,sink
7082,LoyaltyPointsBalance.Builder_setInt,set int from loyalty points balance builder the integer form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are int. builder to create a loyalty points balance,sink,sink,sink,sink
7083,LoyaltyPointsBalance.Builder_setMoney,set money from loyalty points balance builder the money form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are string long. builder to create a loyalty points balance,sink,sink,sink,sink
7084,LoyaltyPointsBalance.Builder_setString,set string from loyalty points balance builder the string form of a balanc. Return type is Loyalty Points Balance. Builder and parameters are string. builder to create a loyalty points balance,sink,sink,sink,sink
7085,WalletObjectMessage.Builder_build,build from wallet object message builder . builder to create a wallet object message,neither,neither,neither,neither
7086,WalletObjectMessage.Builder_setActionUri,set action uri from wallet object message builder deprecate. Return type is Wallet Object Message. Builder and parameters are uri data. builder to create a wallet object message,sink,sink,sink,sink
7087,WalletObjectMessage.Builder_setBody,set body from wallet object message builder sets the message bod. Return type is Wallet Object Message. Builder and parameters are string. builder to create a wallet object message,sink,sink,sink,sink
7088,WalletObjectMessage.Builder_setDisplayInterval,set display interval from wallet object message builder sets the period of time that the message will be displayed to user. Return type is Wallet Object Message. Builder and parameters are time interval. builder to create a wallet object message,sink,sink,sink,sink
7089,WalletObjectMessage.Builder_setHeader,set header from wallet object message builder sets the message heade. Return type is Wallet Object Message. Builder and parameters are string. builder to create a wallet object message,sink,sink,sink,sink
7090,WalletObjectMessage.Builder_setImageUri,set image uri from wallet object message builder deprecate. Return type is Wallet Object Message. Builder and parameters are uri data. builder to create a wallet object message,sink,sink,sink,sink
7091,SmsCodeRetriever_getAutofillClient,"get autofill client from sms code retriever creates a new instance of sms code autofill client for use in an activit. Return type is Sms Code Autofill Client and parameters are activity. sms code retriever is a variant of sms retriever, and it provides access to google services that help you retrieve sms verification codes sent to the user's device, without having to ask for android permission r e a d_ s m s or android permission r e c e i v e_ s m s",source,source,source,source
7092,SmsCodeRetriever_getAutofillClient,"get autofill client from sms code retriever creates a new instance of sms code autofill client for use in a contex. Return type is Sms Code Autofill Client and parameters are context. sms code retriever is a variant of sms retriever, and it provides access to google services that help you retrieve sms verification codes sent to the user's device, without having to ask for android permission r e a d_ s m s or android permission r e c e i v e_ s m s",source,source,source,source
7093,SmsCodeRetriever_getBrowserClient,"get browser client from sms code retriever creates a new instance of sms code browser client for use in an activit. Return type is Sms Code Browser Client and parameters are activity. sms code retriever is a variant of sms retriever, and it provides access to google services that help you retrieve sms verification codes sent to the user's device, without having to ask for android permission r e a d_ s m s or android permission r e c e i v e_ s m s",source,source,source,source
7094,SmsCodeRetriever_getBrowserClient,"get browser client from sms code retriever creates a new instance of sms code browser client for use in a contex. Return type is Sms Code Browser Client and parameters are context. sms code retriever is a variant of sms retriever, and it provides access to google services that help you retrieve sms verification codes sent to the user's device, without having to ask for android permission r e a d_ s m s or android permission r e c e i v e_ s m s",source,source,source,source
7095,SmsRetriever_getClient,get client from sms retriever create a new instance of sms retriever client for use in an activit. Return type is Sms Retriever Client and parameters are activity. sms retriever provides access to google services that help you retrieve sms messages sent to your app without having to ask for android permission r e a d_ s m s or android permission r e c e i v e_ s m s,source,source,source,source
7096,SmsRetriever_getClient,get client from sms retriever create a new instance of sms retriever client for use in an contex. Return type is Sms Retriever Client and parameters are context. sms retriever provides access to google services that help you retrieve sms messages sent to your app without having to ask for android permission r e a d_ s m s or android permission r e c e i v e_ s m s,source,source,source,source
7097,SmsRetrieverClient_startSmsRetriever,"start sms retriever from sms retriever client starts sms retriever, which waits for a matching sms message until timeou. Return type is Task and no argument. the main entry point for interacting with sms retriever",sink,sink,sink,sink
7098,SmsRetrieverClient_startSmsUserConsent,"start sms user consent from sms retriever client starts sms user consent, which waits for an o t p-containing sms message until timeou. Return type is Task and parameters are string. the main entry point for interacting with sms retriever",sink,sink,sink,neither
7099,SmsRetrieverStatusCodes_getStatusCodeString,"get status code string from sms retriever status codes returns an untranslated debug string based on the given status cod. Return type is String and parameters are int. s m s retriever specific status codes, for use in get status code",source,source,source,source
7100,SmsCodeAutofillClient_checkPermissionState,check permission state from sms code autofill client returns the sms code autofill client permission state of the current user-designated autofill servic. Return type is Task and no argument. the interface for interacting with the sms code autofill api,source,source,source,source
7101,SmsCodeAutofillClient_hasOngoingSmsRequest,has ongoing sms request from sms code autofill client returns true if there are requests from sms retriever in progress for the given package nam. Return type is Task and parameters are string. the interface for interacting with the sms code autofill api,source,neither,source,neither
7102,SmsCodeAutofillClient_startSmsCodeRetriever,"start sms code retriever from sms code autofill client starts sms code retriever, which looks for an sms verification code from messages recently receive. Return type is Task and no argument. the interface for interacting with the sms code autofill api",source,neither,neither,source
7103,SmsCodeBrowserClient_startSmsCodeRetriever,"start sms code retriever from sms code browser client starts sms code retriever, which looks for an origin-bound one-time code from sms messages recently receive. Return type is Task and no argument. the interface for interacting with the sms code browser api",source,source,neither,source
7104,SmsRetrieverApi_startSmsRetriever,"start sms retriever from sms retriever api starts sms retriever, which waits for a matching sms message until timeou. Return type is Task and no argument. a p i interface for sms retriever",sink,sink,sink,sink
7105,SmsRetrieverApi_startSmsUserConsent,"start sms user consent from sms retriever api starts sms user consent, which waits for an o t p-containing sms message until timeou. Return type is Task and parameters are string. a p i interface for sms retriever",sink,sink,sink,neither
7106,DynamicHeightSearchAdRequest_getCustomEventExtrasBundle,get custom event extras bundle from dynamic height search ad request returns extra parameters to pass to a specific custom event adapte. Return type is Bundle and parameters are class. use to configure custom search ad  ad requests,source,source,source,neither
7107,DynamicHeightSearchAdRequest_getNetworkExtrasBundle,get network extras bundle from dynamic height search ad request returns extra parameters to pass to a specific ad network adapte. Return type is Bundle and parameters are class. use to configure custom search ad  ad requests,source,source,source,sink
7108,DynamicHeightSearchAdRequest_getQuery,get query from dynamic height search ad request returns the query of the search ad reques. Return type is String and no argument. use to configure custom search ad  ad requests,source,source,source,neither
7109,DynamicHeightSearchAdRequest_isTestDevice,is test device from dynamic height search ad request returns true if this device will receive test ad. Return type is boolean and parameters are context. use to configure custom search ad  ad requests,neither,neither,source,neither
7110,DynamicHeightSearchAdRequest.Builder_addCustomEventExtrasBundle,add custom event extras bundle from dynamic height search ad request builder adds extra parameters to pass to a specific custom event adapte. Return type is Dynamic Height Search Ad Request. Builder and parameters are class<? bundle. builds a dynamic height search ad request,neither,neither,neither,neither
7111,DynamicHeightSearchAdRequest.Builder_addNetworkExtras,add network extras from dynamic height search ad request builder adds extra parameters to pass to a specific ad network adapte. Return type is Dynamic Height Search Ad Request. Builder and parameters are network extras. builds a dynamic height search ad request,sink,sink,neither,sink
7112,DynamicHeightSearchAdRequest.Builder_addNetworkExtrasBundle,add network extras bundle from dynamic height search ad request builder adds extra parameters to pass to a specific ad network adapte. Return type is Dynamic Height Search Ad Request. Builder and parameters are class<? bundle. builds a dynamic height search ad request,neither,neither,neither,sink
7113,DynamicHeightSearchAdRequest.Builder_build,build from dynamic height search ad request builder constructs a dynamic height search ad request with the specified attribute. Return type is Dynamic Height Search Ad Request and no argument. builds a dynamic height search ad request,neither,neither,neither,neither
7114,DynamicHeightSearchAdRequest.Builder_setAdBorderSelectors,"set ad border selectors from dynamic height search ad request builder the csa ""ad border selections"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7115,DynamicHeightSearchAdRequest.Builder_setAdTest,"set ad test from dynamic height search ad request builder indicates if the csa ""ad test"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7116,DynamicHeightSearchAdRequest.Builder_setAdjustableLineHeight,"set adjustable line height from dynamic height search ad request builder the csa ""adjustable line height"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7117,DynamicHeightSearchAdRequest.Builder_setAdvancedOptionValue,set advanced option value from dynamic height search ad request builder sets an advanced option value for a specified ke. Return type is Dynamic Height Search Ad Request. Builder and parameters are string string. builds a dynamic height search ad request,sink,sink,sink,sink
7118,DynamicHeightSearchAdRequest.Builder_setAttributionSpacingBelow,"set attribution spacing below from dynamic height search ad request builder the csa ""attribution spacing below"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7119,DynamicHeightSearchAdRequest.Builder_setBorderSelections,"set border selections from dynamic height search ad request builder the csa ""border selections"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7120,DynamicHeightSearchAdRequest.Builder_setChannel,"set channel from dynamic height search ad request builder the csa ""channel"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7121,DynamicHeightSearchAdRequest.Builder_setColorAdBorder,"set color ad border from dynamic height search ad request builder the csa ""color ad border"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7122,DynamicHeightSearchAdRequest.Builder_setColorAdSeparator,"set color ad separator from dynamic height search ad request builder the csa ""color ad separator"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7123,DynamicHeightSearchAdRequest.Builder_setColorAnnotation,"set color annotation from dynamic height search ad request builder the csa ""color annotation"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7124,DynamicHeightSearchAdRequest.Builder_setColorAttribution,"set color attribution from dynamic height search ad request builder the csa ""color attribution"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7125,DynamicHeightSearchAdRequest.Builder_setColorBackground,"set color background from dynamic height search ad request builder the csa ""color background"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7126,DynamicHeightSearchAdRequest.Builder_setColorBorder,"set color border from dynamic height search ad request builder the csa ""color border"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7127,DynamicHeightSearchAdRequest.Builder_setColorDomainLink,"set color domain link from dynamic height search ad request builder the csa ""color domain link"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7128,DynamicHeightSearchAdRequest.Builder_setColorText,"set color text from dynamic height search ad request builder the csa ""color text"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7129,DynamicHeightSearchAdRequest.Builder_setColorTitleLink,"set color title link from dynamic height search ad request builder the csa ""color title link"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7130,DynamicHeightSearchAdRequest.Builder_setCssWidth,"set css width from dynamic height search ad request builder the csa ""width"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7131,DynamicHeightSearchAdRequest.Builder_setDetailedAttribution,"set detailed attribution from dynamic height search ad request builder indicates if the csa ""detailed attribution"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7132,DynamicHeightSearchAdRequest.Builder_setFontFamily,"set font family from dynamic height search ad request builder the csa ""font family"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7133,DynamicHeightSearchAdRequest.Builder_setFontFamilyAttribution,"set font family attribution from dynamic height search ad request builder the csa ""font family attribution"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7134,DynamicHeightSearchAdRequest.Builder_setFontSizeAnnotation,"set font size annotation from dynamic height search ad request builder the csa ""font size annotation"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7135,DynamicHeightSearchAdRequest.Builder_setFontSizeAttribution,"set font size attribution from dynamic height search ad request builder the csa ""font size attribution"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7136,DynamicHeightSearchAdRequest.Builder_setFontSizeDescription,"set font size description from dynamic height search ad request builder the csa ""font size description"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7137,DynamicHeightSearchAdRequest.Builder_setFontSizeDomainLink,"set font size domain link from dynamic height search ad request builder the csa ""font size domain link"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7138,DynamicHeightSearchAdRequest.Builder_setFontSizeTitle,"set font size title from dynamic height search ad request builder the csa ""font size title"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7139,DynamicHeightSearchAdRequest.Builder_setHostLanguage,"set host language from dynamic height search ad request builder the csa ""hl"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7140,DynamicHeightSearchAdRequest.Builder_setIsClickToCallEnabled,"set is click to call enabled from dynamic height search ad request builder indicates if the csa ""click to call"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7141,DynamicHeightSearchAdRequest.Builder_setIsLocationEnabled,"set is location enabled from dynamic height search ad request builder indicates if the csa ""location"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7142,DynamicHeightSearchAdRequest.Builder_setIsPlusOnesEnabled,"set is plus ones enabled from dynamic height search ad request builder indicates if the csa ""plus ones"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,neither,sink
7143,DynamicHeightSearchAdRequest.Builder_setIsSellerRatingsEnabled,"set is seller ratings enabled from dynamic height search ad request builder indicates if the csa ""seller ratings"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7144,DynamicHeightSearchAdRequest.Builder_setIsSiteLinksEnabled,"set is site links enabled from dynamic height search ad request builder indicates if the csa ""site links"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7145,DynamicHeightSearchAdRequest.Builder_setIsTitleBold,"set is title bold from dynamic height search ad request builder indicates if the csa ""title bold"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7146,DynamicHeightSearchAdRequest.Builder_setIsTitleUnderlined,"set is title underlined from dynamic height search ad request builder indicates if the csa ""no title underline"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,neither
7147,DynamicHeightSearchAdRequest.Builder_setLocationColor,"set location color from dynamic height search ad request builder the csa ""color location"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7148,DynamicHeightSearchAdRequest.Builder_setLocationFontSize,"set location font size from dynamic height search ad request builder the csa ""font size location"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7149,DynamicHeightSearchAdRequest.Builder_setLongerHeadlines,"set longer headlines from dynamic height search ad request builder indicates if the csa ""longer headlines"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7150,DynamicHeightSearchAdRequest.Builder_setNumber,"set number from dynamic height search ad request builder the csa ""number"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7151,DynamicHeightSearchAdRequest.Builder_setPage,"set page from dynamic height search ad request builder the csa ""ad page"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7152,DynamicHeightSearchAdRequest.Builder_setQuery,set query from dynamic height search ad request builder sets the query for requesting a search a. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request,sink,sink,sink,sink
7153,DynamicHeightSearchAdRequest.Builder_setStyleId,"set style id from dynamic height search ad request builder the csa "" style i d"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7154,DynamicHeightSearchAdRequest.Builder_setVerticalSpacing,"set vertical spacing from dynamic height search ad request builder the csa ""vertical spacing"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7155,SearchAdView_destroy,destroy from search ad view destroy the search ad vie. Return type is void and no argument. the view to display search banner ads for use with search ads for apps,neither,neither,neither,neither
7156,SearchAdView_getAdListener,get ad listener from search ad view returns the ad listener for this search ad vie. Return type is Ad Listener and no argument. the view to display search banner ads for use with search ads for apps,source,source,source,neither
7157,SearchAdView_getAdSize,get ad size from search ad view returns the size of the banner a. Return type is Ad Size and no argument. the view to display search banner ads for use with search ads for apps,source,source,source,source
7158,SearchAdView_getAdUnitId,get ad unit id from search ad view returns the ad unit i. Return type is String and no argument. the view to display search banner ads for use with search ads for apps,source,source,source,neither
7159,SearchAdView_loadAd,load ad from search ad view start loading the ad on a background threa. Return type is void and parameters are dynamic height search ad request. the view to display search banner ads for use with search ads for apps,neither,neither,neither,neither
7160,SearchAdView_loadAd,load ad from search ad view start loading the ad on a background threa. Return type is void and parameters are search ad request. the view to display search banner ads for use with search ads for apps,neither,neither,neither,neither
7161,SearchAdView_pause,pause from search ad view pause any extra processing associated with this search ad vie. Return type is void and no argument. the view to display search banner ads for use with search ads for apps,neither,neither,neither,neither
7162,SearchAdView_resume,resume from search ad view resume an search ad view after a previous call to pau. Return type is void and no argument. the view to display search banner ads for use with search ads for apps,neither,neither,neither,neither
7163,SearchAdView_setAdListener,set ad listener from search ad view sets an ad listener for this search ad vie. Return type is void and parameters are ad listener. the view to display search banner ads for use with search ads for apps,sink,sink,sink,sink
7164,SearchAdView_setAdSize,set ad size from search ad view sets the size of the banner a. Return type is void and parameters are ad size. the view to display search banner ads for use with search ads for apps,sink,sink,sink,sink
7165,SearchAdView_setAdUnitId,set ad unit id from search ad view sets the ad unit i. Return type is void and parameters are string. the view to display search banner ads for use with search ads for apps,sink,sink,sink,sink
7166,DynamicHeightSearchAdRequest.Builder_addCustomEventExtrasBundle,add custom event extras bundle from dynamic height search ad request builder adds extra parameters to pass to a specific custom event adapte. Return type is Dynamic Height Search Ad Request. Builder and parameters are class<? bundle. builds a dynamic height search ad request,neither,neither,neither,neither
7167,DynamicHeightSearchAdRequest.Builder_addNetworkExtras,add network extras from dynamic height search ad request builder adds extra parameters to pass to a specific ad network adapte. Return type is Dynamic Height Search Ad Request. Builder and parameters are network extras. builds a dynamic height search ad request,sink,sink,neither,sink
7168,DynamicHeightSearchAdRequest.Builder_addNetworkExtrasBundle,add network extras bundle from dynamic height search ad request builder adds extra parameters to pass to a specific ad network adapte. Return type is Dynamic Height Search Ad Request. Builder and parameters are class<? bundle. builds a dynamic height search ad request,neither,neither,neither,sink
7169,DynamicHeightSearchAdRequest.Builder_build,build from dynamic height search ad request builder constructs a dynamic height search ad request with the specified attribute. Return type is Dynamic Height Search Ad Request and no argument. builds a dynamic height search ad request,neither,neither,neither,neither
7170,DynamicHeightSearchAdRequest.Builder_setAdBorderSelectors,"set ad border selectors from dynamic height search ad request builder the csa ""ad border selections"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7171,DynamicHeightSearchAdRequest.Builder_setAdTest,"set ad test from dynamic height search ad request builder indicates if the csa ""ad test"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7172,DynamicHeightSearchAdRequest.Builder_setAdjustableLineHeight,"set adjustable line height from dynamic height search ad request builder the csa ""adjustable line height"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7173,DynamicHeightSearchAdRequest.Builder_setAdvancedOptionValue,set advanced option value from dynamic height search ad request builder sets an advanced option value for a specified ke. Return type is Dynamic Height Search Ad Request. Builder and parameters are string string. builds a dynamic height search ad request,sink,sink,sink,sink
7174,DynamicHeightSearchAdRequest.Builder_setAttributionSpacingBelow,"set attribution spacing below from dynamic height search ad request builder the csa ""attribution spacing below"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7175,DynamicHeightSearchAdRequest.Builder_setBorderSelections,"set border selections from dynamic height search ad request builder the csa ""border selections"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7176,DynamicHeightSearchAdRequest.Builder_setChannel,"set channel from dynamic height search ad request builder the csa ""channel"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7177,DynamicHeightSearchAdRequest.Builder_setColorAdBorder,"set color ad border from dynamic height search ad request builder the csa ""color ad border"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7178,DynamicHeightSearchAdRequest.Builder_setColorAdSeparator,"set color ad separator from dynamic height search ad request builder the csa ""color ad separator"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7179,DynamicHeightSearchAdRequest.Builder_setColorAnnotation,"set color annotation from dynamic height search ad request builder the csa ""color annotation"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7180,DynamicHeightSearchAdRequest.Builder_setColorAttribution,"set color attribution from dynamic height search ad request builder the csa ""color attribution"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7181,DynamicHeightSearchAdRequest.Builder_setColorBackground,"set color background from dynamic height search ad request builder the csa ""color background"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7182,DynamicHeightSearchAdRequest.Builder_setColorBorder,"set color border from dynamic height search ad request builder the csa ""color border"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7183,DynamicHeightSearchAdRequest.Builder_setColorDomainLink,"set color domain link from dynamic height search ad request builder the csa ""color domain link"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7184,DynamicHeightSearchAdRequest.Builder_setColorText,"set color text from dynamic height search ad request builder the csa ""color text"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7185,DynamicHeightSearchAdRequest.Builder_setColorTitleLink,"set color title link from dynamic height search ad request builder the csa ""color title link"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7186,DynamicHeightSearchAdRequest.Builder_setCssWidth,"set css width from dynamic height search ad request builder the csa ""width"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7187,DynamicHeightSearchAdRequest.Builder_setDetailedAttribution,"set detailed attribution from dynamic height search ad request builder indicates if the csa ""detailed attribution"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7188,DynamicHeightSearchAdRequest.Builder_setFontFamily,"set font family from dynamic height search ad request builder the csa ""font family"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7189,DynamicHeightSearchAdRequest.Builder_setFontFamilyAttribution,"set font family attribution from dynamic height search ad request builder the csa ""font family attribution"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7190,DynamicHeightSearchAdRequest.Builder_setFontSizeAnnotation,"set font size annotation from dynamic height search ad request builder the csa ""font size annotation"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7191,DynamicHeightSearchAdRequest.Builder_setFontSizeAttribution,"set font size attribution from dynamic height search ad request builder the csa ""font size attribution"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7192,DynamicHeightSearchAdRequest.Builder_setFontSizeDescription,"set font size description from dynamic height search ad request builder the csa ""font size description"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7193,DynamicHeightSearchAdRequest.Builder_setFontSizeDomainLink,"set font size domain link from dynamic height search ad request builder the csa ""font size domain link"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7194,DynamicHeightSearchAdRequest.Builder_setFontSizeTitle,"set font size title from dynamic height search ad request builder the csa ""font size title"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7195,DynamicHeightSearchAdRequest.Builder_setHostLanguage,"set host language from dynamic height search ad request builder the csa ""hl"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7196,DynamicHeightSearchAdRequest.Builder_setIsClickToCallEnabled,"set is click to call enabled from dynamic height search ad request builder indicates if the csa ""click to call"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7197,DynamicHeightSearchAdRequest.Builder_setIsLocationEnabled,"set is location enabled from dynamic height search ad request builder indicates if the csa ""location"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7198,DynamicHeightSearchAdRequest.Builder_setIsPlusOnesEnabled,"set is plus ones enabled from dynamic height search ad request builder indicates if the csa ""plus ones"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,neither,sink
7199,DynamicHeightSearchAdRequest.Builder_setIsSellerRatingsEnabled,"set is seller ratings enabled from dynamic height search ad request builder indicates if the csa ""seller ratings"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7200,DynamicHeightSearchAdRequest.Builder_setIsSiteLinksEnabled,"set is site links enabled from dynamic height search ad request builder indicates if the csa ""site links"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7201,DynamicHeightSearchAdRequest.Builder_setIsTitleBold,"set is title bold from dynamic height search ad request builder indicates if the csa ""title bold"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7202,DynamicHeightSearchAdRequest.Builder_setIsTitleUnderlined,"set is title underlined from dynamic height search ad request builder indicates if the csa ""no title underline"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,neither
7203,DynamicHeightSearchAdRequest.Builder_setLocationColor,"set location color from dynamic height search ad request builder the csa ""color location"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7204,DynamicHeightSearchAdRequest.Builder_setLocationFontSize,"set location font size from dynamic height search ad request builder the csa ""font size location"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7205,DynamicHeightSearchAdRequest.Builder_setLongerHeadlines,"set longer headlines from dynamic height search ad request builder indicates if the csa ""longer headlines"" parameter is enable. Return type is Dynamic Height Search Ad Request. Builder and parameters are boolean. builds a dynamic height search ad request",sink,sink,sink,sink
7206,DynamicHeightSearchAdRequest.Builder_setNumber,"set number from dynamic height search ad request builder the csa ""number"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7207,DynamicHeightSearchAdRequest.Builder_setPage,"set page from dynamic height search ad request builder the csa ""ad page"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7208,DynamicHeightSearchAdRequest.Builder_setQuery,set query from dynamic height search ad request builder sets the query for requesting a search a. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request,sink,sink,sink,sink
7209,DynamicHeightSearchAdRequest.Builder_setStyleId,"set style id from dynamic height search ad request builder the csa "" style i d"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are string. builds a dynamic height search ad request",sink,sink,sink,sink
7210,DynamicHeightSearchAdRequest.Builder_setVerticalSpacing,"set vertical spacing from dynamic height search ad request builder the csa ""vertical spacing"" paramete. Return type is Dynamic Height Search Ad Request. Builder and parameters are int. builds a dynamic height search ad request",sink,sink,sink,sink
7211,H5AdsRequestHandler_clearAdObjects,clear ad objects from h5 ads request handler destroys all ads being managed by h5 ad. Return type is void and no argument. handles h5 ad requests,neither,neither,neither,neither
7212,H5AdsRequestHandler_handleH5AdsRequest,handle h5 ads request from h5 ads request handler attempts to handle an h5 ads reques. Return type is boolean and parameters are string. handles h5 ad requests,neither,neither,neither,neither
7213,H5AdsRequestHandler_shouldInterceptRequest,"should intercept request from h5 ads request handler returns true if request is for h5 ads, false otherwis. Return type is boolean and parameters are string. handles h5 ad requests",neither,neither,neither,neither
7214,H5AdsWebViewClient_clearAdObjects,clear ad objects from h5 ads web view client destroys all ads being managed by h5 ad. Return type is void and no argument. a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7215,H5AdsWebViewClient_doUpdateVisitedHistory,do update visited history from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,sink
7216,H5AdsWebViewClient_getDelegateWebViewClient,get delegate web view client from h5 ads web view client gets the delegate web view clien. Return type is Web View Client and no argument. a web view client that intercepts and handles h5 ad requests,source,source,source,source
7217,H5AdsWebViewClient_onFormResubmission,on form resubmission from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7218,H5AdsWebViewClient_onLoadResource,on load resource from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7219,H5AdsWebViewClient_onPageCommitVisible,on page commit visible from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7220,H5AdsWebViewClient_onPageFinished,on page finished from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7221,H5AdsWebViewClient_onPageStarted,on page started from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7222,H5AdsWebViewClient_onReceivedClientCertRequest,on received client cert request from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7223,H5AdsWebViewClient_onReceivedError,on received error from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7224,H5AdsWebViewClient_onReceivedError,on received error from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7225,H5AdsWebViewClient_onReceivedHttpAuthRequest,on received http auth request from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7226,H5AdsWebViewClient_onReceivedHttpError,on received http error from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7227,H5AdsWebViewClient_onReceivedLoginRequest,on received login request from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7228,H5AdsWebViewClient_onReceivedSslError,on received ssl error from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7229,H5AdsWebViewClient_onRenderProcessGone,on render process gone from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7230,H5AdsWebViewClient_onSafeBrowsingHit,on safe browsing hit from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7231,H5AdsWebViewClient_onScaleChanged,on scale changed from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7232,H5AdsWebViewClient_onTooManyRedirects,on too many redirects from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7233,H5AdsWebViewClient_onUnhandledKeyEvent,on unhandled key event from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7234,H5AdsWebViewClient_setDelegateWebViewClient,set delegate web view client from h5 ads web view client sets a web view client to delegate methods not handled by h5 ads web view clien. Return type is void and parameters are web view client. a web view client that intercepts and handles h5 ad requests,sink,sink,sink,sink
7235,H5AdsWebViewClient_shouldInterceptRequest,should intercept request from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7236,H5AdsWebViewClient_shouldInterceptRequest,should intercept request from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7237,H5AdsWebViewClient_shouldOverrideKeyEvent,should override key event from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7238,H5AdsWebViewClient_shouldOverrideUrlLoading,should override url loading from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7239,H5AdsWebViewClient_shouldOverrideUrlLoading,should override url loading from h5 ads web view client . a web view client that intercepts and handles h5 ad requests,neither,neither,neither,neither
7240,OnH5AdsEventListener_onH5AdsEvent,on h5 ads event from on h5 ads event listener called by java script when an h5 ads event needs to be executed on a web vie. Return type is  void and parameters are string. interface definition for a callback to be invoked when java script from an h5 ads event needs to be executed on a web view,neither,neither,neither,neither
7241,CustomEventExtras_getExtra,"get extra from custom event extras returns the extra parameter for the custom event with the provided labe. Return type is Object and parameters are string. this class is deprecated  this class will only work with implementations of the old custom event adapter which has been deprecated in favor of custom event banner and custom event interstitial  to pass extras to custom events that implement custom event banner or custom event interstitial, call ad request builder add custom event extras bundle with the class of your custom event banner or custom event interstitial implementation and a bundle",source,source,source,source
7242,CustomEventExtras_setExtra,"set extra from custom event extras sets an extra parameter for the custom event with the provided labe. Return type is void and parameters are string object. this class is deprecated  this class will only work with implementations of the old custom event adapter which has been deprecated in favor of custom event banner and custom event interstitial  to pass extras to custom events that implement custom event banner or custom event interstitial, call ad request builder add custom event extras bundle with the class of your custom event banner or custom event interstitial implementation and a bundle",sink,sink,sink,sink
7243,CustomEvent_onDestroy,on destroy from custom event tears down the adapter contro. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7244,CustomEvent_onPause,on pause from custom event called when the application calls base ad viewpau. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7245,CustomEvent_onResume,on resume from custom event called when the application calls base ad viewresu. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7246,CustomEventBanner_requestBannerAd,request banner ad from custom event banner called by the mediation library to request a view from the custom even. Return type is  void and parameters are context custom event banner listener string ad size mediation ad request bundle. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7247,CustomEventBannerListener_onAdLoaded,on ad loaded from custom event banner listener indicates that a view has been requested and successfully receive. Return type is  void and parameters are view. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7248,CustomEventInterstitial_requestInterstitialAd,request interstitial ad from custom event interstitial called by the mediation library to request an interstitia. Return type is  void and parameters are context custom event interstitial listener string mediation ad request bundle. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7249,CustomEventInterstitial_showInterstitial,show interstitial from custom event interstitial show the interstitia. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7250,CustomEventInterstitialListener_onAdLoaded,on ad loaded from custom event interstitial listener indicates that an interstitial has been requested and successfully receive. Return type is  void and no argument. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7251,CustomEventListener_onAdClicked,on ad clicked from custom event listener indicates that the user has clicked on this custom even. Return type is  void and no argument. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7252,CustomEventListener_onAdClosed,on ad closed from custom event listener indicates that the custom event rendered something in full screen and is now transferring control back to the applicatio. Return type is  void and no argument. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7253,CustomEventListener_onAdFailedToLoad,on ad failed to load from custom event listener deprecate. Return type is  void and parameters are int. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7254,CustomEventListener_onAdFailedToLoad,on ad failed to load from custom event listener indicates that a custom event request has failed along with the underlying caus. Return type is  void and parameters are ad error. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7255,CustomEventListener_onAdLeftApplication,on ad left application from custom event listener indicates that user interaction with the custom event is causing the device to switch to a different applicatio. Return type is  void and no argument. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7256,CustomEventListener_onAdOpened,on ad opened from custom event listener indicates that the custom event is rendering something that is full scree. Return type is  void and no argument. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7257,CustomEventNative_requestNativeAd,request native ad from custom event native called by the mediation library to request a native ad from the custom even. Return type is  void and parameters are context custom event native listener string native mediation ad request bundle. this interface is deprecated  use adapter instead,neither,neither,neither,neither
7258,CustomEventNativeListener_onAdImpression,on ad impression from custom event native listener indicates that an impression has been recorded for the a. Return type is  void and no argument. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7259,CustomEventNativeListener_onAdLoaded,on ad loaded from custom event native listener indicates that a unified native ad has been requested and successfully receive. Return type is  void and parameters are unified native ad mapper. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
7260,CastLaunchRequest_equals,equals from cast launch request . the information about an request to launch or join the application,neither,neither,source,neither
7261,CastLaunchRequest_getCredentialsData,get credentials data from cast launch request returns the credentials data in the launch reques. Return type is Credentials Data and no argument. the information about an request to launch or join the application,source,source,source,source
7262,CastLaunchRequest_hashCode,hash code from cast launch request . the information about an request to launch or join the application,source,source,source,source
7263,CastLaunchRequest_writeToParcel,write to parcel from cast launch request . the information about an request to launch or join the application,sink,sink,sink,sink
7264,CastReceiverContext_getInstance,get instance from cast receiver context returns the shared instanc. Return type is Cast Receiver Context and no argument. the singleton class as the entry point of the cast tv sdk,source,source,source,source
7265,CastReceiverContext_getMediaManager,get media manager from cast receiver context returns the media manage. Return type is Media Manager and no argument. the singleton class as the entry point of the cast tv sdk,source,source,source,source
7266,CastReceiverContext_getReceiverOptions,get receiver options from cast receiver context returns the receiver option. Return type is Cast Receiver Options and no argument. the singleton class as the entry point of the cast tv sdk,source,source,source,source
7267,CastReceiverContext_getSender,get sender from cast receiver context returns the sender info with the given sender i. Return type is Sender Info and parameters are string. the singleton class as the entry point of the cast tv sdk,source,source,source,source
7268,CastReceiverContext_getSenders,get senders from cast receiver context returns all sender. Return type is Collection and no argument. the singleton class as the entry point of the cast tv sdk,source,source,source,source
7269,CastReceiverContext_initInstance,init instance from cast receiver context initializes the shared instanc. Return type is  void and parameters are context. the singleton class as the entry point of the cast tv sdk,neither,neither,neither,neither
7270,CastReceiverContext_registerEventCallback,register event callback from cast receiver context registers a cast receiver context event callbac. Return type is void and parameters are cast receiver context event callback. the singleton class as the entry point of the cast tv sdk,neither,neither,neither,neither
7271,CastReceiverContext_removeMessageReceivedListener,remove message received listener from cast receiver context removes a listener for a given namespac. Return type is void and parameters are string. the singleton class as the entry point of the cast tv sdk,neither,neither,neither,neither
7272,CastReceiverContext_sendMessage,send message from cast receiver context sends a message to a specific sende. Return type is void and parameters are string string string. the singleton class as the entry point of the cast tv sdk,sink,sink,sink,sink
7273,CastReceiverContext_setMessageReceivedListener,set message received listener from cast receiver context sets a listener for a given namespac. Return type is void and parameters are string cast receiver context message received listener. the singleton class as the entry point of the cast tv sdk,sink,sink,sink,neither
7274,CastReceiverContext_start,start from cast receiver context tells the cast tv sdk that the receiver app has started and is ready to accept command. Return type is void and no argument. the singleton class as the entry point of the cast tv sdk,neither,neither,neither,neither
7275,CastReceiverContext_stop,stop from cast receiver context tells the cast tv sdk that the receiver app has stopped and won't accept commands any mor. Return type is void and no argument. the singleton class as the entry point of the cast tv sdk,neither,neither,neither,neither
7276,CastReceiverContext_unregisterEventCallback,unregister event callback from cast receiver context unregisters a cast receiver context event callbac. Return type is void and parameters are cast receiver context event callback. the singleton class as the entry point of the cast tv sdk,neither,neither,neither,neither
7277,CastReceiverContext.EventCallback_onSenderConnected,on sender connected from cast receiver context event callback called when a sender is connecte. Return type is void and parameters are sender info. callback class for observing various events,neither,neither,neither,neither
7278,CastReceiverContext.EventCallback_onSenderDisconnected,on sender disconnected from cast receiver context event callback called when a sender is disconnecte. Return type is void and parameters are sender disconnected event info. callback class for observing various events,neither,neither,neither,neither
7279,CastReceiverContext.EventCallback_onStopApplication,on stop application from cast receiver context event callback called when a sender has requested to stop the applicatio. Return type is void and no argument. callback class for observing various events,neither,neither,neither,neither
7280,CastReceiverOptions_getCustomNamespaces,get custom namespaces from cast receiver options returns the list of custom namespace. Return type is List and no argument. options of cast atv receiver library,source,source,source,source
7281,CastReceiverOptions_getLaunchRequestChecker,get launch request checker from cast receiver options returns the callback to check if a launch request is supporte. Return type is Cast Receiver Options. Launch Request Checker and no argument. options of cast atv receiver library,source,source,source,source
7282,CastReceiverOptions_getStatusText,get status text from cast receiver options returns the status tex. Return type is String and no argument. options of cast atv receiver library,source,source,source,source
7283,CastReceiverOptions_getVersionCode,get version code from cast receiver options returns the version code of the receiver ap. Return type is int and no argument. options of cast atv receiver library,source,source,source,source
7284,CastReceiverOptions_writeToParcel,write to parcel from cast receiver options . options of cast atv receiver library,sink,sink,sink,sink
7285,CastReceiverOptions.Builder_build,build from cast receiver options builder builds a cast receiver options object with the provided option. Return type is Cast Receiver Options and no argument. builder for cast receiver options,neither,neither,neither,neither
7286,CastReceiverOptions.Builder_setCustomNamespaces,set custom namespaces from cast receiver options builder sets the list of custom namespace. Return type is Cast Receiver Options. Builder and parameters are list. builder for cast receiver options,sink,sink,sink,sink
7287,CastReceiverOptions.Builder_setLaunchRequestChecker,set launch request checker from cast receiver options builder sets the callback to check if a launch request is supporte. Return type is Cast Receiver Options. Builder and parameters are cast receiver options launch request checker. builder for cast receiver options,sink,sink,sink,sink
7288,CastReceiverOptions.Builder_setStatusText,set status text from cast receiver options builder sets the status tex. Return type is Cast Receiver Options. Builder and parameters are string. builder for cast receiver options,sink,sink,sink,sink
7289,CastReceiverOptions.Builder_setVersionCode,set version code from cast receiver options builder sets the version code of the receiver ap. Return type is Cast Receiver Options. Builder and parameters are int. builder for cast receiver options,sink,sink,sink,sink
7290,CastReceiverUtils_parseCastLaunchRequestFromLaunchIntent,parse cast launch request from launch intent from cast receiver utils parse the cast launch request from a launch inten. Return type is Cast Launch Request and parameters are intent. utility class for miscellaneous helper methods,neither,neither,neither,neither
7291,SenderDisconnectedEventInfo_equals,equals from sender disconnected event info . information about a sender disconnected event,neither,neither,neither,neither
7292,SenderDisconnectedEventInfo_getDisconnectReason,get disconnect reason from sender disconnected event info returns the sender disconnect reaso. Return type is int and no argument. information about a sender disconnected event,source,source,source,source
7293,SenderDisconnectedEventInfo_getSenderInfo,get sender info from sender disconnected event info returns the sender info of the disconnected sende. Return type is Sender Info and no argument. information about a sender disconnected event,source,source,source,source
7294,SenderDisconnectedEventInfo_hashCode,hash code from sender disconnected event info . information about a sender disconnected event,source,source,source,source
7295,SenderInfo_equals,equals from sender info . the information about a sender,neither,neither,sink,neither
7296,SenderInfo_getCastLaunchRequest,get cast launch request from sender info returns the cast launch request that the sender used to launch wit. Return type is Cast Launch Request and no argument. the information about a sender,source,source,source,source
7297,SenderInfo_getSenderId,get sender id from sender info returns the id of the sende. Return type is String and no argument. the information about a sender,source,source,source,source
7298,SenderInfo_getUserAgent,get user agent from sender info returns the user agent of the sende. Return type is String and no argument. the information about a sender,source,source,source,source
7299,SenderInfo_hashCode,hash code from sender info . the information about a sender,source,source,source,source
7300,SenderInfo_writeToParcel,write to parcel from sender info . the information about a sender,sink,sink,sink,sink
7301,CastReceiverContext.MessageReceivedListener_onMessageReceived,on message received from cast receiver context message received listener called when a new message is received from the sende. Return type is  void and parameters are string string string. listener for listening messages that come from the sender,neither,neither,neither,neither
7302,CastReceiverOptions.LaunchRequestChecker_checkLaunchRequestSupported,check launch request supported from cast receiver options launch request checker called when a sender requests to launch the app or join the current sessio. Return type is Task and parameters are cast launch request. interface for checking if a launch request is supported,source,source,source,source
7303,ReceiverOptionsProvider_getOptions,"get options from receiver options provider provides cast receiver options, which indicates the information about the receiver applicatio. Return type is Cast Receiver Options and parameters are context. provider of cast receiver options",source,source,source,source
7304,CastReceiverContext.EventCallback_onSenderConnected,on sender connected from cast receiver context event callback called when a sender is connecte. Return type is void and parameters are sender info. callback class for observing various events,neither,neither,neither,neither
7305,CastReceiverContext.EventCallback_onSenderDisconnected,on sender disconnected from cast receiver context event callback called when a sender is disconnecte. Return type is void and parameters are sender disconnected event info. callback class for observing various events,neither,neither,neither,neither
7306,CastReceiverContext.EventCallback_onStopApplication,on stop application from cast receiver context event callback called when a sender has requested to stop the applicatio. Return type is void and no argument. callback class for observing various events,neither,neither,neither,neither
7307,CastReceiverContext.MessageReceivedListener_onMessageReceived,on message received from cast receiver context message received listener called when a new message is received from the sende. Return type is  void and parameters are string string string. listener for listening messages that come from the sender,neither,neither,neither,neither
7308,CastReceiverOptions.Builder_build,build from cast receiver options builder builds a cast receiver options object with the provided option. Return type is Cast Receiver Options and no argument. builder for cast receiver options,neither,neither,neither,neither
7309,CastReceiverOptions.Builder_setCustomNamespaces,set custom namespaces from cast receiver options builder sets the list of custom namespace. Return type is Cast Receiver Options. Builder and parameters are list. builder for cast receiver options,sink,sink,sink,sink
7310,CastReceiverOptions.Builder_setLaunchRequestChecker,set launch request checker from cast receiver options builder sets the callback to check if a launch request is supporte. Return type is Cast Receiver Options. Builder and parameters are cast receiver options launch request checker. builder for cast receiver options,sink,sink,sink,sink
7311,CastReceiverOptions.Builder_setStatusText,set status text from cast receiver options builder sets the status tex. Return type is Cast Receiver Options. Builder and parameters are string. builder for cast receiver options,sink,sink,sink,sink
7312,CastReceiverOptions.Builder_setVersionCode,set version code from cast receiver options builder sets the version code of the receiver ap. Return type is Cast Receiver Options. Builder and parameters are int. builder for cast receiver options,sink,sink,sink,sink
7313,CastReceiverOptions.LaunchRequestChecker_checkLaunchRequestSupported,check launch request supported from cast receiver options launch request checker called when a sender requests to launch the app or join the current sessio. Return type is Task and parameters are cast launch request. interface for checking if a launch request is supported,source,source,source,source
7314,CustomPropertyKey_equals,equals from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,neither,neither,neither,neither
7315,CustomPropertyKey_fromJson,from json from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,neither,neither,neither,neither
7316,CustomPropertyKey_getKey,get key from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,source,source,source,source
7317,CustomPropertyKey_getVisibility,get visibility from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,source,source,source,neither
7318,CustomPropertyKey_hashCode,hash code from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,neither,source,neither,neither
7319,CustomPropertyKey_toJson,to json from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,neither,neither,neither,neither
7320,CustomPropertyKey_toString,to string from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,sink,neither,neither,neither
7321,CustomPropertyKey_writeToParcel,write to parcel from custom property key . the key to a custom file property key value pair that can be serialized in a parcel,sink,sink,sink,sink
7322,Awareness_getFenceClient,get fence client from awareness creates a new instance of fence client for use in an activit. Return type is Fence Client and parameters are activity. the main entry point for the awareness service,source,source,source,source
7323,Awareness_getFenceClient,get fence client from awareness creates a new instance of fence client for use in a non-activity contex. Return type is Fence Client and parameters are context. the main entry point for the awareness service,source,source,source,source
7324,Awareness_getSnapshotClient,get snapshot client from awareness creates a new instance of snapshot client for use in an activit. Return type is Snapshot Client and parameters are activity. the main entry point for the awareness service,source,source,source,source
7325,Awareness_getSnapshotClient,get snapshot client from awareness creates a new instance of fence client for use in a non-activity contex. Return type is Snapshot Client and parameters are context. the main entry point for the awareness service,source,source,source,source
7326,AwarenessStatusCodes_getStatusCodeString,"get status code string from awareness status codes a human-readable string of the status cod. Return type is String and parameters are int. awareness specific status codes, for use in get status code",source,source,source,source
7327,FenceClient_queryFences,query fences from fence client queries the state of a registered fence in the awareness ap. Return type is Task and parameters are fence query request. main entry point for the awareness fence api,source,source,source,neither
7328,FenceClient_updateFences,update fences from fence client adds or removes a set of fences that are registered with the awareness ap. Return type is Task and parameters are fence update request. main entry point for the awareness fence api,neither,neither,sink,sink
7329,SnapshotClient_getBeaconState,get beacon state from snapshot client gets the current information about nearby beacon. Return type is Task and parameters are collection< beacon state type filter>. main entry point for the awareness snapshot api,source,source,source,source
7330,SnapshotClient_getBeaconState,get beacon state from snapshot client gets the current information about nearby beacon. Return type is Task and parameters are type filter   . main entry point for the awareness snapshot api,source,source,source,source
7331,SnapshotClient_getDetectedActivity,get detected activity from snapshot client gets the user's current activit. Return type is Task and no argument. main entry point for the awareness snapshot api,source,source,source,source
7332,SnapshotClient_getHeadphoneState,get headphone state from snapshot client reports whether headphones are plugged into the devic. Return type is Task and no argument. main entry point for the awareness snapshot api,source,source,source,source
7333,SnapshotClient_getLocation,get location from snapshot client gets the device's current locatio. Return type is Task and no argument. main entry point for the awareness snapshot api,source,source,source,source
7334,SnapshotClient_getTimeIntervals,get time intervals from snapshot client gets the semantic time intervals for the to the current time and locatio. Return type is Task and no argument. main entry point for the awareness snapshot api,source,source,source,source
7335,FenceApi_queryFences,query fences from fence api deprecate. Return type is Pending Result and parameters are google api client fence query request. this interface is deprecated  use get fence client instead,source,source,neither,source
7336,FenceApi_updateFences,update fences from fence api deprecate. Return type is Pending Result and parameters are google api client fence update request. this interface is deprecated  use get fence client instead,neither,neither,sink,sink
7337,SnapshotApi_getBeaconState,get beacon state from snapshot api deprecate. Return type is Pending Result and parameters are google api client collection< beacon state type filter>. this interface is deprecated  use get snapshot client instead,source,source,source,source
7338,SnapshotApi_getBeaconState,get beacon state from snapshot api deprecate. Return type is Pending Result and parameters are google api client type filter   . this interface is deprecated  use get snapshot client instead,source,source,source,source
7339,SnapshotApi_getDetectedActivity,get detected activity from snapshot api deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  use get snapshot client instead,source,source,source,source
7340,SnapshotApi_getHeadphoneState,get headphone state from snapshot api deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  use get snapshot client instead,source,source,source,source
7341,SnapshotApi_getLocation,get location from snapshot api deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  use get snapshot client instead,source,source,source,source
7342,SnapshotApi_getTimeIntervals,get time intervals from snapshot api deprecate. Return type is Pending Result and parameters are google api client. this interface is deprecated  use get snapshot client instead,source,source,source,source
7343,BeaconState.TypeFilter_with,"with from beacon state type filter creates a beacon state type filter that matches against beacons with the given namespace and type, regardless of the conten. Return type is Beacon State. Type Filter and parameters are string string. the type of beacon to match",neither,neither,neither,neither
7344,BeaconState.TypeFilter_with,"with from beacon state type filter creates a beacon state type filter that matches against beacons with the given namespace, type, and conten. Return type is Beacon State. Type Filter and parameters are string string byte[]. the type of beacon to match",neither,neither,neither,neither
7345,BeaconState_getBeaconInfo,get beacon info from beacon state get the list of all beacons that are nearb. Return type is List and no argument. state of nearby beacon devices,source,source,source,source
7346,BeaconState.BeaconInfo_getContent,get content from beacon state beacon info return the byte array content of the beacon attachment if it exist. Return type is  byte[] and no argument. information from one beacon,source,source,source,source
7347,BeaconState.BeaconInfo_getNamespace,get namespace from beacon state beacon info return the beacon namespac. Return type is String and no argument. information from one beacon,source,source,source,source
7348,BeaconState.BeaconInfo_getType,get type from beacon state beacon info return the beacon typ. Return type is String and no argument. information from one beacon,source,source,source,source
7349,HeadphoneState_getState,get state from headphone state returns the current state of the headphone. Return type is  int and no argument. headphone state,source,source,source,source
7350,TimeIntervals_getTimeIntervals,get time intervals from time intervals get the semantic time intervals for the to the current time and locatio. Return type is  int[] and no argument. the semantic time intervals for the to the current time and location,source,source,source,source
7351,TimeIntervals_hasTimeInterval,has time interval from time intervals returns true if the given semantic time interval is applicable to the current time and local. Return type is  boolean and parameters are int. the semantic time intervals for the to the current time and location,neither,neither,neither,neither
7352,BeaconState.BeaconInfo_getContent,get content from beacon state beacon info return the byte array content of the beacon attachment if it exist. Return type is  byte[] and no argument. information from one beacon,source,source,source,source
7353,BeaconState.BeaconInfo_getNamespace,get namespace from beacon state beacon info return the beacon namespac. Return type is String and no argument. information from one beacon,source,source,source,source
7354,BeaconState.BeaconInfo_getType,get type from beacon state beacon info return the beacon typ. Return type is String and no argument. information from one beacon,source,source,source,source
7355,BeaconState.TypeFilter_with,"with from beacon state type filter creates a beacon state type filter that matches against beacons with the given namespace and type, regardless of the conten. Return type is Beacon State. Type Filter and parameters are string string. the type of beacon to match",neither,neither,neither,neither
7356,BeaconState.TypeFilter_with,"with from beacon state type filter creates a beacon state type filter that matches against beacons with the given namespace, type, and conten. Return type is Beacon State. Type Filter and parameters are string string byte[]. the type of beacon to match",neither,neither,neither,neither
7357,TfLite_initialize,initialize from tf lite initialize the t f lite ap. Return type is Task and parameters are context. entry point for the tensor flow lite  java api provided by google play services,neither,neither,sink,sink
7358,PasswordComplexityServiceClient_getClient,get client from password complexity service client . a google api client for password complexity check api,source,source,source,source
7359,PasswordComplexityServiceClient_getPasswordComplexity,"get password complexity from password complexity service client returns password complexity check result indicating how complex the screen lock is, or the reason why the complexity cannot be determine. Return type is Task and no argument. a google api client for password complexity check api",source,source,source,source
7360,Blockstore_getClient,get client from blockstore creates a new instance of blockstore clien. Return type is Blockstore Client and parameters are context. entry point for block store api,source,source,source,source
7361,StoreBytesData_getBytes,get bytes from store bytes data raw bytes passed from apps to block stor. Return type is byte[] and no argument. data passed by apps to block store,source,source,source,source
7362,StoreBytesData_shouldBackupToCloud,should backup to cloud from store bytes data whether the bytes to be stored should be backed up to the cloud in the next syn. Return type is boolean and no argument. data passed by apps to block store,neither,neither,neither,neither
7363,StoreBytesData_writeToParcel,write to parcel from store bytes data . data passed by apps to block store,sink,sink,sink,sink
7364,StoreBytesData.Builder_build,build from store bytes data builder builds and returns the store bytes data objec. Return type is Store Bytes Data and no argument. a builder for store bytes data objects,neither,neither,neither,neither
7365,StoreBytesData.Builder_setBytes,set bytes from store bytes data builder sets the raw bytes to be stored with block stor. Return type is Store Bytes Data. Builder and parameters are byte[]. a builder for store bytes data objects,sink,sink,sink,sink
7366,StoreBytesData.Builder_setShouldBackupToCloud,set should backup to cloud from store bytes data builder sets whether the bytes to be stored should be backed up to the cloud in the next syn. Return type is Store Bytes Data. Builder and parameters are boolean. a builder for store bytes data objects,sink,sink,sink,sink
7367,BlockstoreClient_isEndToEndEncryptionAvailable,is end to end encryption available from blockstore client returns a task which asynchronously determines whether block store data backed up to the cloud will be end-to-end encrypte. Return type is Task and no argument. the interface for clients to access block store,neither,neither,neither,source
7368,BlockstoreClient_retrieveBytes,"retrieve bytes from blockstore client returns a task which asynchronously retrieves the previously-stored bytes, if an. Return type is Task and no argument. the interface for clients to access block store",source,source,source,source
7369,BlockstoreClient_storeBytes,store bytes from blockstore client returns a task which asynchronously stores the provided byte[] byte. Return type is Task and parameters are store bytes data. the interface for clients to access block store,sink,neither,neither,sink
7370,StoreBytesData.Builder_build,build from store bytes data builder builds and returns the store bytes data objec. Return type is Store Bytes Data and no argument. a builder for store bytes data objects,neither,neither,neither,neither
7371,StoreBytesData.Builder_setBytes,set bytes from store bytes data builder sets the raw bytes to be stored with block stor. Return type is Store Bytes Data. Builder and parameters are byte[]. a builder for store bytes data objects,sink,sink,sink,sink
7372,StoreBytesData.Builder_setShouldBackupToCloud,set should backup to cloud from store bytes data builder sets whether the bytes to be stored should be backed up to the cloud in the next syn. Return type is Store Bytes Data. Builder and parameters are boolean. a builder for store bytes data objects,sink,sink,sink,sink
7373,AnnotatedData<T>_get,get from annotated data< t> returns the data that is annotated by this clas. Return type is T and no argument. class to return annotated data,source,source,source,source
7374,AnnotatedData<T>_isStale,is stale from annotated data< t> returns true if the data returned by g. Return type is boolean and no argument. class to return annotated data,neither,neither,neither,source
7375,GameBuffer_get,get from game buffer . data structure providing access to a list of games,source,source,source,source
7376,GameEntity_areSnapshotsEnabled,are snapshots enabled from game entity indicates whether or not this game supports snapshot. Return type is boolean and no argument. data object representing a set of game data,source,source,source,source
7377,GameEntity_equals,equals from game entity . data object representing a set of game data,neither,neither,neither,neither
7378,GameEntity_freeze,freeze from game entity . data object representing a set of game data,neither,neither,neither,sink
7379,GameEntity_getAchievementTotalCount,get achievement total count from game entity retrieves the number of achievements registered for this gam. Return type is int and no argument. data object representing a set of game data,source,source,source,source
7380,GameEntity_getApplicationId,get application id from game entity retrieves the application id for this gam. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7381,GameEntity_getDescription,get description from game entity retrieves the description of this gam. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7382,GameEntity_getDescription,get description from game entity loads the description string into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of game data,source,source,source,source
7383,GameEntity_getDeveloperName,get developer name from game entity loads the developer name into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of game data,source,source,source,source
7384,GameEntity_getDeveloperName,get developer name from game entity retrieves the name of the developer of this gam. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7385,GameEntity_getDisplayName,get display name from game entity loads the display name string into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of game data,source,source,source,source
7386,GameEntity_getDisplayName,get display name from game entity retrieves the display name for this gam. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7387,GameEntity_getFeaturedImageUri,get featured image uri from game entity retrieves an image uri that can be used to load the game's feature. Return type is Uri and no argument. data object representing a set of game data,source,source,source,source
7388,GameEntity_getHiResImageUri,get hi res image uri from game entity retrieves an image uri that can be used to load the game's hi-res imag. Return type is Uri and no argument. data object representing a set of game data,source,source,source,source
7389,GameEntity_getIconImageUri,get icon image uri from game entity retrieves an image uri that can be used to load the game's ico. Return type is Uri and no argument. data object representing a set of game data,source,source,source,source
7390,GameEntity_getLeaderboardCount,get leaderboard count from game entity gets the number of leaderboards registered for this gam. Return type is int and no argument. data object representing a set of game data,source,source,source,source
7391,GameEntity_getPrimaryCategory,get primary category from game entity retrieves the primary category of the game - this is may be nul. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7392,GameEntity_getSecondaryCategory,get secondary category from game entity retrieves the secondary category of the game - this may be nul. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7393,GameEntity_getThemeColor,get theme color from game entity retrieves the theme color for this gam. Return type is String and no argument. data object representing a set of game data,source,source,source,source
7394,GameEntity_hasGamepadSupport,has gamepad support from game entity indicates whether or not this game is marked as supporting gamepad. Return type is boolean and no argument. data object representing a set of game data,source,source,source,source
7395,GameEntity_hashCode,hash code from game entity . data object representing a set of game data,neither,neither,neither,source
7396,GameEntity_isDataValid,is data valid from game entity . data object representing a set of game data,neither,neither,neither,source
7397,GameEntity_toString,to string from game entity . data object representing a set of game data,sink,neither,source,sink
7398,GameEntity_writeToParcel,write to parcel from game entity . data object representing a set of game data,sink,sink,sink,sink
7399,Games_getAchievementsClient,get achievements client from games returns a new instance of achievements client for use in an activit. Return type is Achievements Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7400,Games_getAchievementsClient,get achievements client from games returns a new instance of achievements client for use in a contex. Return type is Achievements Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7401,Games_getAchievementsClient,get achievements client from games returns a new instance of achievements client for use in a contex. Return type is Achievements Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7402,Games_getAchievementsClient,get achievements client from games returns a new instance of achievements client for use in an activit. Return type is Achievements Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7403,Games_getCurrentAccountName,get current account name from games deprecate. Return type is String and parameters are google api client. main entry point for the games a p is,source,source,source,source
7404,Games_getEventsClient,get events client from games returns a new instance of events client for use in a contex. Return type is Events Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7405,Games_getEventsClient,get events client from games returns a new instance of events client for use in an activit. Return type is Events Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7406,Games_getEventsClient,get events client from games returns a new instance of events client for use in an activit. Return type is Events Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7407,Games_getEventsClient,get events client from games returns a new instance of events client for use in a contex. Return type is Events Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7408,Games_getGamesClient,get games client from games returns a new instance of games client for use in an activit. Return type is Games Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7409,Games_getGamesClient,get games client from games returns a new instance of games client for use in an activit. Return type is Games Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7410,Games_getGamesClient,get games client from games returns a new instance of games client for use in a contex. Return type is Games Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7411,Games_getGamesClient,get games client from games returns a new instance of games client for use in a contex. Return type is Games Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7412,Games_getGamesMetadataClient,get games metadata client from games returns a new instance of games metadata client for use in a contex. Return type is Games Metadata Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7413,Games_getGamesMetadataClient,get games metadata client from games returns a new instance of games metadata client for use in an activit. Return type is Games Metadata Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7414,Games_getGamesMetadataClient,get games metadata client from games returns a new instance of games metadata client for use in an activit. Return type is Games Metadata Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7415,Games_getGamesMetadataClient,get games metadata client from games returns a new instance of games metadata client for use in a contex. Return type is Games Metadata Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7416,Games_getLeaderboardsClient,get leaderboards client from games returns a new instance of leaderboards client for use in a contex. Return type is Leaderboards Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7417,Games_getLeaderboardsClient,get leaderboards client from games returns a new instance of leaderboards client for use in an activit. Return type is Leaderboards Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7418,Games_getLeaderboardsClient,get leaderboards client from games returns a new instance of leaderboards client for use in a contex. Return type is Leaderboards Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7419,Games_getLeaderboardsClient,get leaderboards client from games returns a new instance of leaderboards client for use in an activit. Return type is Leaderboards Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7420,Games_getPlayerStatsClient,get player stats client from games returns a new instance of player stats client for use in a contex. Return type is Player Stats Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7421,Games_getPlayerStatsClient,get player stats client from games returns a new instance of player stats client for use in an activit. Return type is Player Stats Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7422,Games_getPlayerStatsClient,get player stats client from games returns a new instance of player stats client for use in an activit. Return type is Player Stats Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7423,Games_getPlayerStatsClient,get player stats client from games returns a new instance of player stats client for use in a contex. Return type is Player Stats Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7424,Games_getPlayersClient,get players client from games returns a new instance of players client for use in an activit. Return type is Players Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7425,Games_getPlayersClient,get players client from games returns a new instance of players client for use in a contex. Return type is Players Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7426,Games_getPlayersClient,get players client from games returns a new instance of players client for use in an activit. Return type is Players Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7427,Games_getPlayersClient,get players client from games returns a new instance of players client for use in a contex. Return type is Players Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7428,Games_getSnapshotsClient,get snapshots client from games returns a new instance of snapshots client for use in a contex. Return type is Snapshots Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7429,Games_getSnapshotsClient,get snapshots client from games returns a new instance of snapshots client for use in an activit. Return type is Snapshots Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7430,Games_getSnapshotsClient,get snapshots client from games returns a new instance of snapshots client for use in a contex. Return type is Snapshots Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7431,Games_getSnapshotsClient,get snapshots client from games returns a new instance of snapshots client for use in an activit. Return type is Snapshots Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7432,Games_getVideosClient,get videos client from games returns a new instance of videos client for use in a contex. Return type is Videos Client and parameters are context google sign in account games games options. main entry point for the games a p is,source,source,source,source
7433,Games_getVideosClient,get videos client from games returns a new instance of videos client for use in an activit. Return type is Videos Client and parameters are activity google sign in account games games options. main entry point for the games a p is,source,source,source,source
7434,Games_getVideosClient,get videos client from games returns a new instance of videos client for use in a contex. Return type is Videos Client and parameters are context google sign in account. main entry point for the games a p is,source,source,source,source
7435,Games_getVideosClient,get videos client from games returns a new instance of videos client for use in an activit. Return type is Videos Client and parameters are activity google sign in account. main entry point for the games a p is,source,source,source,source
7436,Games_signOut,sign out from games deprecate. Return type is Pending Result and parameters are google api client. main entry point for the games a p is,neither,neither,neither,source
7437,Games.GamesOptions_builder,builder from games games options . a p i configuration parameters for games,sink,sink,neither,sink
7438,Games.GamesOptions_equals,equals from games games options . a p i configuration parameters for games,neither,neither,neither,sink
7439,Games.GamesOptions_hashCode,hash code from games games options . a p i configuration parameters for games,sink,neither,neither,source
7440,Games.GamesOptions.Builder_build,build from games games options builder . helper class to build games games options,neither,neither,neither,neither
7441,Games.GamesOptions.Builder_setSdkVariant,set sdk variant from games games options builder . helper class to build games games options,sink,sink,sink,sink
7442,Games.GamesOptions.Builder_setShowConnectingPopup,"set show connecting popup from games games options builder sets whether a ""connecting"" popup should be displayed automatically at the start of the sign-in flo. Return type is Games. Games Options. Builder and parameters are boolean. helper class to build games games options",sink,sink,sink,sink
7443,Games.GamesOptions.Builder_setShowConnectingPopup,"set show connecting popup from games games options builder sets whether a ""connecting"" popup should be displayed automatically at the start of the sign-in flo. Return type is Games. Games Options. Builder and parameters are boolean int. helper class to build games games options",sink,sink,sink,sink
7444,GamesCallbackStatusCodes_getStatusCodeString,get status code string from games callback status codes get the string associated with the status cod. Return type is String and parameters are int. status codes for games callbacks,source,source,source,source
7445,GamesClient_getActivationHint,get activation hint from games client returns a task which asynchronously loads a bundle that may contain an information regarding to the previous user's actio. Return type is Task and no argument. a client to interact with games basic functionality,source,source,source,source
7446,GamesClient_getAppId,get app id from games client returns a task which asynchronously loads the application id linked to this client instanc. Return type is Task and no argument. a client to interact with games basic functionality,source,source,source,source
7447,GamesClient_getCurrentAccountName,get current account name from games client returns a task which asynchronously loads the name of the currently selected accoun. Return type is Task and no argument. a client to interact with games basic functionality,source,source,source,source
7448,GamesClient_getSettingsIntent,get settings intent from games client returns a task which asynchronously loads an intent to show the settings screen that allows the user to configure games-related features for the current gam. Return type is Task and no argument. a client to interact with games basic functionality,source,source,source,source
7449,GamesClient_setGravityForPopups,set gravity for popups from games client returns a task which asynchronously sets the part of the screen at which games service pop-up. Return type is Task and parameters are int. a client to interact with games basic functionality,sink,sink,sink,sink
7450,GamesClient_setViewForPopups,set view for popups from games client returns a task which asynchronously sets the view to use as a content view for popup. Return type is Task and parameters are view. a client to interact with games basic functionality,sink,sink,sink,sink
7451,GamesClientStatusCodes_getStatusCodeString,get status code string from games client status codes get the string associated with the status cod. Return type is String and parameters are int. status codes for games clients methods result task failures,source,source,source,source
7452,GamesStatusCodes_getStatusString,get status string from games status codes get the string associated with the status cod. Return type is String and parameters are int. this class is deprecated  used only for google api client games api,source,source,source,source
7453,LeaderboardsClient.LeaderboardScores_getLeaderboard,get leaderboard from leaderboards client leaderboard scores . result delivered when leaderboard scores have been loaded,source,source,source,source
7454,LeaderboardsClient.LeaderboardScores_getScores,get scores from leaderboards client leaderboard scores . result delivered when leaderboard scores have been loaded,source,source,source,source
7455,LeaderboardsClient.LeaderboardScores_release,release from leaderboards client leaderboard scores release the leaderboard score buffer used for scores storag. Return type is void and no argument. result delivered when leaderboard scores have been loaded,neither,neither,neither,sink
7456,PlayerBuffer_get,get from player buffer . data structure providing access to a list of players,source,source,source,source
7457,PlayerEntity_equals,equals from player entity . data object representing a set of player data,neither,neither,neither,neither
7458,PlayerEntity_freeze,freeze from player entity . data object representing a set of player data,neither,neither,neither,neither
7459,PlayerEntity_getBannerImageLandscapeUri,get banner image landscape uri from player entity retrieves the uri for loading this player's landscape banner imag. Return type is Uri and no argument. data object representing a set of player data,source,source,source,source
7460,PlayerEntity_getBannerImagePortraitUri,get banner image portrait uri from player entity retrieves the uri for loading this player's portrait banner imag. Return type is Uri and no argument. data object representing a set of player data,source,source,source,source
7461,PlayerEntity_getCurrentPlayerInfo,get current player info from player entity returns information only available for the signed-in use. Return type is Current Player Info and no argument. data object representing a set of player data,source,source,source,source
7462,PlayerEntity_getDisplayName,get display name from player entity loads the player's display name into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of player data,source,source,source,source
7463,PlayerEntity_getDisplayName,get display name from player entity retrieves the display name for this playe. Return type is String and no argument. data object representing a set of player data,source,source,source,source
7464,PlayerEntity_getHiResImageUri,get hi res image uri from player entity retrieves the uri for loading this player's hi-res profile imag. Return type is Uri and no argument. data object representing a set of player data,source,source,source,source
7465,PlayerEntity_getIconImageUri,get icon image uri from player entity retrieves the uri for loading this player's icon-size profile imag. Return type is Uri and no argument. data object representing a set of player data,source,source,source,source
7466,PlayerEntity_getLastPlayedWithTimestamp,get last played with timestamp from player entity retrieves the timestamp at which this player last played a multiplayer game with the currently signed in use. Return type is long and no argument. data object representing a set of player data,source,source,source,source
7467,PlayerEntity_getLevelInfo,get level info from player entity retrieves the player level associated information if any exist. Return type is Player Level Info and no argument. data object representing a set of player data,source,source,source,source
7468,PlayerEntity_getPlayerId,get player id from player entity retrieves the id of this playe. Return type is String and no argument. data object representing a set of player data,source,source,source,source
7469,PlayerEntity_getRelationshipInfo,get relationship info from player entity returns relationship information of this playe. Return type is Player Relationship Info and no argument. data object representing a set of player data,source,source,source,source
7470,PlayerEntity_getRetrievedTimestamp,get retrieved timestamp from player entity retrieves the timestamp at which this player record was last updated locall. Return type is long and no argument. data object representing a set of player data,source,source,source,source
7471,PlayerEntity_getTitle,get title from player entity retrieves the title of the playe. Return type is String and no argument. data object representing a set of player data,source,source,source,source
7472,PlayerEntity_getTitle,get title from player entity loads the player's title into the given char array buffe. Return type is void and parameters are char array buffer. data object representing a set of player data,source,source,source,source
7473,PlayerEntity_hasHiResImage,has hi res image from player entity indicates whether this player has a hi-res profile image to displa. Return type is boolean and no argument. data object representing a set of player data,source,source,source,source
7474,PlayerEntity_hasIconImage,has icon image from player entity indicates whether this player has an icon-size profile image to displa. Return type is boolean and no argument. data object representing a set of player data,neither,neither,source,neither
7475,PlayerEntity_hashCode,hash code from player entity . data object representing a set of player data,neither,source,neither,source
7476,PlayerEntity_isDataValid,is data valid from player entity . data object representing a set of player data,neither,neither,neither,source
7477,PlayerEntity_toString,to string from player entity . data object representing a set of player data,sink,neither,neither,source
7478,PlayerEntity_writeToParcel,write to parcel from player entity . data object representing a set of player data,sink,sink,sink,sink
7479,PlayerLevel_equals,equals from player level . data object representing a level a player can obtain in the metagame,neither,neither,neither,neither
7480,PlayerLevel_getLevelNumber,"get level number from player level returns the number for this level, e. Return type is int and no argument. data object representing a level a player can obtain in the metagame",source,source,source,source
7481,PlayerLevel_getMaxXp,get max xp from player level . data object representing a level a player can obtain in the metagame,source,source,source,source
7482,PlayerLevel_getMinXp,get min xp from player level . data object representing a level a player can obtain in the metagame,source,source,source,source
7483,PlayerLevel_hashCode,hash code from player level . data object representing a level a player can obtain in the metagame,source,source,source,source
7484,PlayerLevel_toString,to string from player level . data object representing a level a player can obtain in the metagame,source,source,neither,source
7485,PlayerLevel_writeToParcel,write to parcel from player level . data object representing a level a player can obtain in the metagame,sink,sink,sink,sink
7486,PlayerLevelInfo_equals,equals from player level info . data object representing the current level information of a player in the metagame,neither,neither,neither,neither
7487,PlayerLevelInfo_getCurrentLevel,get current level from player level info getter for the player's current level objec. Return type is Player Level and no argument. data object representing the current level information of a player in the metagame,source,source,source,source
7488,PlayerLevelInfo_getCurrentXpTotal,get current xp total from player level info . data object representing the current level information of a player in the metagame,source,source,source,source
7489,PlayerLevelInfo_getLastLevelUpTimestamp,get last level up timestamp from player level info . data object representing the current level information of a player in the metagame,source,source,source,source
7490,PlayerLevelInfo_getNextLevel,get next level from player level info getter for the player's next level objec. Return type is Player Level and no argument. data object representing the current level information of a player in the metagame,source,source,source,source
7491,PlayerLevelInfo_hashCode,hash code from player level info . data object representing the current level information of a player in the metagame,source,source,source,source
7492,PlayerLevelInfo_isMaxLevel,is max level from player level info . data object representing the current level information of a player in the metagame,source,source,source,source
7493,PlayerLevelInfo_writeToParcel,write to parcel from player level info . data object representing the current level information of a player in the metagame,sink,sink,sink,sink
7494,SnapshotsClient.DataOrConflict<T>_getConflict,get conflict from snapshots client data or conflict< t> . represents the result of attempting to open a snapshot or resolve a conflict from a previous attempt,source,source,source,source
7495,SnapshotsClient.DataOrConflict<T>_getData,get data from snapshots client data or conflict< t> returns data if the result was successfu. Return type is T and no argument. represents the result of attempting to open a snapshot or resolve a conflict from a previous attempt,source,source,source,source
7496,SnapshotsClient.DataOrConflict<T>_isConflict,"is conflict from snapshots client data or conflict< t> returns true if there is conflict, in which case get confli. Return type is boolean and no argument. represents the result of attempting to open a snapshot or resolve a conflict from a previous attempt",source,source,source,source
7497,SnapshotsClient.SnapshotConflict_getConflictId,"get conflict id from snapshots client snapshot conflict returns the id of the conflict to resolve, if an. Return type is String and no argument. result delivered when a conflict was detected during open or resolve conflict",source,source,source,source
7498,SnapshotsClient.SnapshotConflict_getConflictingSnapshot,get conflicting snapshot from snapshots client snapshot conflict returns the modified version of the snapshot in the case of a conflic. Return type is Snapshot and no argument. result delivered when a conflict was detected during open or resolve conflict,source,source,source,source
7499,SnapshotsClient.SnapshotConflict_getResolutionSnapshotContents,get resolution snapshot contents from snapshots client snapshot conflict returns the snapshot contents object used to update the data in case of a conflic. Return type is Snapshot Contents and no argument. result delivered when a conflict was detected during open or resolve conflict,source,source,source,source
7500,SnapshotsClient.SnapshotConflict_getSnapshot,get snapshot from snapshots client snapshot conflict returns the server's version of the snapshot that was opene. Return type is Snapshot and no argument. result delivered when a conflict was detected during open or resolve conflict,source,source,source,source
7501,VideosClient_getCaptureCapabilities,"get capture capabilities from videos client returns a task which asynchronously fetches the video capabilities of the service, whether the mic or front-facing camera are supported, if the service can write to external storage, and what capture modes and quality levels are availabl. Return type is Task and no argument. a client to interact with videos",source,source,source,source
7502,VideosClient_getCaptureOverlayIntent,get capture overlay intent from videos client returns a task which asynchronously loads an intent to launch the capture overla. Return type is Task and no argument. a client to interact with videos,source,source,source,source
7503,VideosClient_getCaptureState,get capture state from videos client returns a task which asynchronously fetches the current capture state of the capture servic. Return type is Task and no argument. a client to interact with videos,source,source,source,source
7504,VideosClient_isCaptureAvailable,is capture available from videos client returns a task which asynchronously fetches whether the capture service is already in us. Return type is Task and parameters are int. a client to interact with videos,source,source,neither,neither
7505,VideosClient_isCaptureSupported,is capture supported from videos client returns a task which asynchronously checks whether the device supports captur. Return type is Task and no argument. a client to interact with videos,source,neither,neither,neither
7506,VideosClient_registerOnCaptureOverlayStateChangedListener,register on capture overlay state changed listener from videos client returns a task which asynchronously registers a videos client on capture overlay state listener to listen for changes to the overlay state launched by get capture overlay inte. Return type is Task and parameters are videos client on capture overlay state listener. a client to interact with videos,neither,neither,neither,neither
7507,VideosClient_unregisterOnCaptureOverlayStateChangedListener,"unregister on capture overlay state changed listener from videos client returns a task which asynchronously unregisters this client's overlay state update listener, if any, and loads the resul. Return type is Task and parameters are videos client on capture overlay state listener. a client to interact with videos",neither,neither,neither,neither
7508,AchievementsClient_getAchievementsIntent,get achievements intent from achievements client returns a task which asynchronously loads an intent to show the list of achievements for a gam. Return type is Task and no argument. a client to interact with achievements functionality,source,source,source,source
7509,AchievementsClient_increment,increment from achievements client increments an achievement by the given number of step. Return type is  void and parameters are string int. a client to interact with achievements functionality,neither,neither,neither,neither
7510,AchievementsClient_incrementImmediate,increment immediate from achievements client returns a task which asynchronously increments an achievement by the given number of step. Return type is Task and parameters are string int. a client to interact with achievements functionality,neither,neither,neither,sink
7511,AchievementsClient_load,load from achievements client returns a task which asynchronously loads an annotated achievement buffer that represents the achievement data for the currently signed-in playe. Return type is Task> and parameters are boolean. a client to interact with achievements functionality,neither,neither,neither,sink
7512,AchievementsClient_reveal,reveal from achievements client reveals a hidden achievement to the currently signed-in playe. Return type is  void and parameters are string. a client to interact with achievements functionality,neither,neither,neither,source
7513,AchievementsClient_revealImmediate,reveal immediate from achievements client returns a task which asynchronously reveals a hidden achievement to the currently signed in playe. Return type is Task and parameters are string. a client to interact with achievements functionality,neither,neither,neither,sink
7514,AchievementsClient_setSteps,set steps from achievements client sets an achievement to have at least the given number of steps complete. Return type is  void and parameters are string int. a client to interact with achievements functionality,sink,sink,sink,sink
7515,AchievementsClient_setStepsImmediate,set steps immediate from achievements client returns a task which asynchronously sets an achievement to have at least the given number of steps complete. Return type is Task and parameters are string int. a client to interact with achievements functionality,sink,sink,sink,sink
7516,AchievementsClient_unlock,unlock from achievements client unlocks an achievement for the currently signed in playe. Return type is  void and parameters are string. a client to interact with achievements functionality,neither,neither,neither,source
7517,AchievementsClient_unlockImmediate,unlock immediate from achievements client returns a task which asynchronously unlocks an achievement for the currently signed in playe. Return type is Task and parameters are string. a client to interact with achievements functionality,neither,neither,neither,source
7518,CurrentPlayerInfo_getFriendsListVisibilityStatus,get friends list visibility status from current player info retrieves if the user has shared the friends list with the gam. Return type is  int and no argument. data object representing the information related only to the signed in user,source,source,source,source
7519,EventsClient_increment,increment from events client increments an event specified by event id by the given number of step. Return type is  void and parameters are string int. a client to interact with events functionality,neither,neither,neither,neither
7520,EventsClient_load,load from events client returns a task which asynchronously loads an annotated event buffer that represents the event data for the currently signed-in playe. Return type is Task> and parameters are boolean. a client to interact with events functionality,neither,neither,neither,neither
7521,EventsClient_loadByIds,load by ids from events client returns a task which asynchronously loads an annotated event buffer that represents the event data for the specified event id. Return type is Task> and parameters are boolean string   . a client to interact with events functionality,neither,neither,neither,neither
7522,Game_areSnapshotsEnabled,are snapshots enabled from game indicates whether or not this game supports snapshot. Return type is  boolean and no argument. data interface for retrieving game information,source,source,source,source
7523,Game_getAchievementTotalCount,get achievement total count from game retrieves the number of achievements registered for this gam. Return type is  int and no argument. data interface for retrieving game information,source,source,source,source
7524,Game_getApplicationId,get application id from game retrieves the application id for this gam. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7525,Game_getDescription,get description from game retrieves the description of this gam. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7526,Game_getDescription,get description from game loads the description string into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving game information,source,source,source,source
7527,Game_getDeveloperName,get developer name from game loads the developer name into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving game information,source,source,source,source
7528,Game_getDeveloperName,get developer name from game retrieves the name of the developer of this gam. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7529,Game_getDisplayName,get display name from game loads the display name string into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving game information,source,source,source,source
7530,Game_getDisplayName,get display name from game retrieves the display name for this gam. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7531,Game_getFeaturedImageUri,get featured image uri from game retrieves an image uri that can be used to load the game's feature. Return type is Uri and no argument. data interface for retrieving game information,source,source,source,source
7532,Game_getHiResImageUri,get hi res image uri from game retrieves an image uri that can be used to load the game's hi-res imag. Return type is Uri and no argument. data interface for retrieving game information,source,source,source,source
7533,Game_getIconImageUri,get icon image uri from game retrieves an image uri that can be used to load the game's ico. Return type is Uri and no argument. data interface for retrieving game information,source,source,source,source
7534,Game_getLeaderboardCount,get leaderboard count from game gets the number of leaderboards registered for this gam. Return type is  int and no argument. data interface for retrieving game information,source,source,source,source
7535,Game_getPrimaryCategory,get primary category from game retrieves the primary category of the game - this is may be nul. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7536,Game_getSecondaryCategory,get secondary category from game retrieves the secondary category of the game - this may be nul. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7537,Game_getThemeColor,get theme color from game retrieves the theme color for this gam. Return type is String and no argument. data interface for retrieving game information,source,source,source,source
7538,Game_hasGamepadSupport,has gamepad support from game indicates whether or not this game is marked as supporting gamepad. Return type is  boolean and no argument. data interface for retrieving game information,source,source,source,source
7539,GamesMetadata_getCurrentGame,"get current game from games metadata gets the metadata for the current game, if availabl. Return type is Game and parameters are google api client. this interface is deprecated  use games metadata client instea",source,source,source,source
7540,GamesMetadata_loadGame,load game from games metadata loads the details for the current gam. Return type is Pending Result and parameters are google api client. this interface is deprecated  use games metadata client instea,source,source,source,source
7541,GamesMetadata.LoadGamesResult_getGames,get games from games metadata load games result . this interface is deprecated  game buffer is returned directly in the games metadata client,source,source,source,source
7542,GamesMetadataClient_getCurrentGame,get current game from games metadata client returns a task which asynchronously loads the game metadata for the current game from the local cach. Return type is Task and no argument. a client to receive games metadata,source,source,source,source
7543,GamesMetadataClient_loadGame,load game from games metadata client returns a task which asynchronously loads an annotated game metadata for the current gam. Return type is Task> and no argument. a client to receive games metadata,source,neither,neither,sink
7544,LeaderboardsClient_getAllLeaderboardsIntent,get all leaderboards intent from leaderboards client returns a task which asynchronously loads an intent to show the list of leaderboards for a gam. Return type is Task and no argument. a client to interact with leaderboards functionality,source,source,source,source
7545,LeaderboardsClient_getLeaderboardIntent,get leaderboard intent from leaderboards client returns a task which asynchronously loads an intent to show a leaderboard for a game specified by a leaderboard i. Return type is Task and parameters are string int. a client to interact with leaderboards functionality,source,source,source,source
7546,LeaderboardsClient_getLeaderboardIntent,get leaderboard intent from leaderboards client returns a task which asynchronously loads an intent to show a leaderboard for a game specified by a leaderboard i. Return type is Task and parameters are string. a client to interact with leaderboards functionality,source,source,source,source
7547,LeaderboardsClient_getLeaderboardIntent,get leaderboard intent from leaderboards client returns a task which asynchronously loads an intent to show a leaderboard for a game specified by a leaderboard i. Return type is Task and parameters are string int int. a client to interact with leaderboards functionality,source,source,source,source
7548,LeaderboardsClient_loadCurrentPlayerLeaderboardScore,load current player leaderboard score from leaderboards client returns a task which asynchronously loads an annotated leaderboard score that represents the signed-in player's score for the leaderboard specified by leaderboard i. Return type is Task> and parameters are string int int. a client to interact with leaderboards functionality,source,source,source,source
7549,LeaderboardsClient_loadLeaderboardMetadata,load leaderboard metadata from leaderboards client returns a task which asynchronously loads an annotated leaderboard buffer that represents a list of leaderboards metadata for this gam. Return type is Task> and parameters are boolean. a client to interact with leaderboards functionality,source,neither,source,sink
7550,LeaderboardsClient_loadLeaderboardMetadata,load leaderboard metadata from leaderboards client returns a task which asynchronously loads an annotated leaderboard specified by leaderboard i. Return type is Task> and parameters are string boolean. a client to interact with leaderboards functionality,neither,neither,source,sink
7551,LeaderboardsClient_loadMoreScores,load more scores from leaderboards client returns a task which asynchronously loads an annotated leaderboards client leaderboard scores that represents an additional page of score data for the given score buffe. Return type is Task> and parameters are leaderboard score buffer int int. a client to interact with leaderboards functionality,neither,sink,neither,sink
7552,LeaderboardsClient_loadPlayerCenteredScores,load player centered scores from leaderboards client returns a task which asynchronously loads an annotated leaderboards client leaderboard scores that represents the player-centered page of scores for the leaderboard specified by leaderboard i. Return type is Task> and parameters are string int int int boolean. a client to interact with leaderboards functionality,neither,neither,neither,sink
7553,LeaderboardsClient_loadPlayerCenteredScores,load player centered scores from leaderboards client returns a task which asynchronously loads an annotated leaderboards client leaderboard scores that represents the player-centered page of scores for the leaderboard specified by leaderboard i. Return type is Task> and parameters are string int int int. a client to interact with leaderboards functionality,neither,sink,neither,sink
7554,LeaderboardsClient_loadTopScores,load top scores from leaderboards client returns a task which asynchronously loads an annotated leaderboards client leaderboard scores that represents the top page of scores for a given leaderboard specified by leaderboard i. Return type is Task> and parameters are string int int int. a client to interact with leaderboards functionality,source,neither,source,sink
7555,LeaderboardsClient_loadTopScores,load top scores from leaderboards client returns a task which asynchronously loads an annotated leaderboards client leaderboard scores that represents the top page of scores for the leaderboard specified by leaderboard i. Return type is Task> and parameters are string int int int boolean. a client to interact with leaderboards functionality,neither,neither,neither,sink
7556,LeaderboardsClient_submitScore,submit score from leaderboards client submit a score to a leaderboard for the currently signed-in playe. Return type is  void and parameters are string long string. a client to interact with leaderboards functionality,sink,sink,sink,sink
7557,LeaderboardsClient_submitScore,submit score from leaderboards client submit a score to a leaderboard for the currently signed-in playe. Return type is  void and parameters are string long. a client to interact with leaderboards functionality,sink,sink,sink,sink
7558,LeaderboardsClient_submitScoreImmediate,submit score immediate from leaderboards client returns a task which asynchronously submits the score to the leaderboard for the currently signed-in playe. Return type is Task and parameters are string long string. a client to interact with leaderboards functionality,sink,sink,neither,sink
7559,LeaderboardsClient_submitScoreImmediate,submit score immediate from leaderboards client returns a task which asynchronously submits the score to the leaderboard for the currently signed-in playe. Return type is Task and parameters are string long. a client to interact with leaderboards functionality,sink,sink,neither,sink
7560,Player_getBannerImageLandscapeUri,get banner image landscape uri from player retrieves the uri for loading this player's landscape banner imag. Return type is Uri and no argument. data interface for retrieving player information,source,source,source,source
7561,Player_getBannerImagePortraitUri,get banner image portrait uri from player retrieves the uri for loading this player's portrait banner imag. Return type is Uri and no argument. data interface for retrieving player information,source,source,source,source
7562,Player_getCurrentPlayerInfo,get current player info from player returns information only available for the signed-in use. Return type is Current Player Info and no argument. data interface for retrieving player information,source,source,source,source
7563,Player_getDisplayName,get display name from player loads the player's display name into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving player information,source,source,source,source
7564,Player_getDisplayName,get display name from player retrieves the display name for this playe. Return type is String and no argument. data interface for retrieving player information,source,source,source,source
7565,Player_getHiResImageUri,get hi res image uri from player retrieves the uri for loading this player's hi-res profile imag. Return type is Uri and no argument. data interface for retrieving player information,source,source,source,source
7566,Player_getIconImageUri,get icon image uri from player retrieves the uri for loading this player's icon-size profile imag. Return type is Uri and no argument. data interface for retrieving player information,source,source,source,source
7567,Player_getLastPlayedWithTimestamp,get last played with timestamp from player deprecate. Return type is  long and no argument. data interface for retrieving player information,source,source,source,source
7568,Player_getLevelInfo,get level info from player retrieves the player level associated information if any exist. Return type is Player Level Info and no argument. data interface for retrieving player information,source,source,source,source
7569,Player_getPlayerId,get player id from player retrieves the id of this playe. Return type is String and no argument. data interface for retrieving player information,source,source,source,source
7570,Player_getRelationshipInfo,get relationship info from player returns relationship information of this playe. Return type is Player Relationship Info and no argument. data interface for retrieving player information,source,source,source,source
7571,Player_getRetrievedTimestamp,get retrieved timestamp from player retrieves the timestamp at which this player record was last updated locall. Return type is  long and no argument. data interface for retrieving player information,source,source,source,source
7572,Player_getTitle,get title from player retrieves the title of the playe. Return type is String and no argument. data interface for retrieving player information,source,source,source,source
7573,Player_getTitle,get title from player loads the player's title into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for retrieving player information,source,source,source,source
7574,Player_hasHiResImage,has hi res image from player indicates whether this player has a hi-res profile image to displa. Return type is  boolean and no argument. data interface for retrieving player information,source,source,source,source
7575,Player_hasIconImage,has icon image from player indicates whether this player has an icon-size profile image to displa. Return type is  boolean and no argument. data interface for retrieving player information,source,source,source,neither
7576,PlayerRelationshipInfo_getFriendStatus,get friend status from player relationship info retrieves this player's friend status relative to the currently signed-in playe. Return type is  int and no argument. data object representing the relationship information of a player,source,source,source,source
7577,Players_getCompareProfileIntent,get compare profile intent from players returns an intent that will display a screen where the user can compare themselves against another player's profil. Return type is Intent and parameters are google api client player. this interface is deprecated  use players client instea,source,source,source,source
7578,Players_getCurrentPlayer,"get current player from players get the current signed in player, if availabl. Return type is Player and parameters are google api client. this interface is deprecated  use players client instea",source,source,source,source
7579,Players_getCurrentPlayerId,"get current player id from players get the current signed in player i d, if availabl. Return type is String and parameters are google api client. this interface is deprecated  use players client instea",source,source,source,source
7580,Players_getPlayerSearchIntent,get player search intent from players returns an intent that will display a screen where the user can search for player. Return type is Intent and parameters are google api client. this interface is deprecated  use players client instea,source,source,source,source
7581,Players_loadConnectedPlayers,load connected players from players deprecate. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use players client instea,neither,neither,neither,sink
7582,Players_loadInvitablePlayers,load invitable players from players deprecate. Return type is Pending Result and parameters are google api client int boolean. this interface is deprecated  use players client instea,neither,neither,neither,sink
7583,Players_loadMoreInvitablePlayers,load more invitable players from players deprecate. Return type is Pending Result and parameters are google api client int. this interface is deprecated  use players client instea,neither,neither,neither,sink
7584,Players_loadMoreRecentlyPlayedWithPlayers,load more recently played with players from players asynchronously loads an additional page of players that the signed-in player has played multiplayer games with recentl. Return type is Pending Result and parameters are google api client int. this interface is deprecated  use players client instea,neither,neither,neither,sink
7585,Players_loadPlayer,load player from players loads the profile for the requested player i. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use players client instea,source,source,neither,sink
7586,Players_loadPlayer,load player from players loads the profile for the requested player i. Return type is Pending Result and parameters are google api client string boolean. this interface is deprecated  use players client instea,source,neither,neither,sink
7587,Players_loadRecentlyPlayedWithPlayers,"load recently played with players from players load the initial page of players the currently signed-in player has played multiplayer games with recently, starting with the most recen. Return type is Pending Result and parameters are google api client int boolean. this interface is deprecated  use players client instea",neither,neither,neither,source
7588,Players.LoadPlayersResult_getPlayers,get players from players load players result . this interface is deprecated  player is returned directly in the players client,source,source,source,source
7589,PlayersClient_getCompareProfileIntent,get compare profile intent from players client returns a task which asynchronously loads an intent that will display a screen where the user can see a comparison of their own profile against another player's profil. Return type is Task and parameters are string. a client to interact with players,source,source,source,source
7590,PlayersClient_getCompareProfileIntent,get compare profile intent from players client returns a task which asynchronously loads an intent that will display a screen where the user can compare themselves against another player's profil. Return type is Task and parameters are player. a client to interact with players,source,source,source,source
7591,PlayersClient_getCompareProfileIntentWithAlternativeNameHints,get compare profile intent with alternative name hints from players client returns a task which asynchronously loads an intent that will display a screen where the user can see a comparison of their own profile against another player's profil. Return type is Task and parameters are string string string. a client to interact with players,source,source,source,source
7592,PlayersClient_getCurrentPlayer,"get current player from players client returns a task which asynchronously loads the current signed-in player, if availabl. Return type is Task> and parameters are boolean. a client to interact with players",source,source,source,source
7593,PlayersClient_getCurrentPlayer,"get current player from players client returns a task which asynchronously loads the current signed-in player, if availabl. Return type is Task and no argument. a client to interact with players",source,source,source,source
7594,PlayersClient_getCurrentPlayerId,"get current player id from players client returns a task which asynchronously loads the current signed-in player i d, if availabl. Return type is Task and no argument. a client to interact with players",source,source,source,source
7595,PlayersClient_getPlayerSearchIntent,get player search intent from players client returns a task which asynchronously loads an intent that will display a screen where the user can search for player. Return type is Task and no argument. a client to interact with players,source,source,source,source
7596,PlayersClient_loadFriends,load friends from players client returns a task which asynchronously loads an annotated player buffer that represents friends the user ha. Return type is Task> and parameters are int boolean. a client to interact with players,neither,neither,neither,neither
7597,PlayersClient_loadMoreFriends,load more friends from players client returns a task which asynchronously loads an annotated player buffer that represents friends the user ha. Return type is Task> and parameters are int. a client to interact with players,neither,neither,neither,neither
7598,PlayersClient_loadMoreRecentlyPlayedWithPlayers,load more recently played with players from players client deprecate. Return type is Task> and parameters are int. a client to interact with players,neither,neither,neither,sink
7599,PlayersClient_loadPlayer,load player from players client returns a task which asynchronously loads an annotated player profile specified by player i. Return type is Task> and parameters are string boolean. a client to interact with players,neither,neither,neither,neither
7600,PlayersClient_loadPlayer,load player from players client returns a task which asynchronously loads an annotated player profile specified by player i. Return type is Task> and parameters are string. a client to interact with players,neither,neither,neither,sink
7601,PlayersClient_loadRecentlyPlayedWithPlayers,load recently played with players from players client deprecate. Return type is Task> and parameters are int boolean. a client to interact with players,neither,neither,neither,sink
7602,PlayerStatsClient_loadPlayerStats,load player stats from player stats client returns a task which asynchronously loads an annotated player stats for the currently signed-in player and game into a single resul. Return type is Task> and parameters are boolean. a client to retrieve player stats,source,source,source,sink
7603,SnapshotsClient_commitAndClose,commit and close from snapshots client returns a task which asynchronously commits any modifications in snapshot metadata change made to the snapshot and loads a snapshot metadat. Return type is Task and parameters are snapshot snapshot metadata change. a client to interact with snapshots,neither,neither,neither,neither
7604,SnapshotsClient_delete,delete from snapshots client returns a task which asynchronously deletes the specified by snapshot metadata snapshot and loads the deleted snapshot i. Return type is Task and parameters are snapshot metadata. a client to interact with snapshots,neither,neither,neither,neither
7605,SnapshotsClient_discardAndClose,discard and close from snapshots client returns a task which asynchronously discards the contents of the snapshot and closes i. Return type is Task and parameters are snapshot. a client to interact with snapshots,neither,neither,neither,neither
7606,SnapshotsClient_getMaxCoverImageSize,get max cover image size from snapshots client returns a task which asynchronously loads the maximum data size per snapshot cover image in byte. Return type is Task and no argument. a client to interact with snapshots,source,source,source,source
7607,SnapshotsClient_getMaxDataSize,get max data size from snapshots client returns a task which asynchronously loads the maximum data size per snapshot in byte. Return type is Task and no argument. a client to interact with snapshots,source,source,source,source
7608,SnapshotsClient_getSelectSnapshotIntent,get select snapshot intent from snapshots client returns a task which asynchronously loads an intent that will let the user select a snapsho. Return type is Task and parameters are string boolean boolean int. a client to interact with snapshots,source,source,source,source
7609,SnapshotsClient_getSnapshotFromBundle,get snapshot from bundle from snapshots client this method takes a bundle object and extracts the snapshot provide. Return type is Snapshot Metadata and parameters are bundle. a client to interact with snapshots,source,source,source,source
7610,SnapshotsClient_load,load from snapshots client returns a task which asynchronously loads an annotated snapshot metadata buffer that represents the snapshot data for the currently signed-in playe. Return type is Task> and parameters are boolean. a client to interact with snapshots,neither,neither,neither,sink
7611,SnapshotsClient_open,open from snapshots client returns a task which asynchronously opens a snapshot with the given snapshot metadat. Return type is Task> and parameters are snapshot metadata. a client to interact with snapshots,neither,source,sink,source
7612,SnapshotsClient_open,open from snapshots client returns a task which asynchronously opens a snapshot with the given snapshot metadat. Return type is Task> and parameters are snapshot metadata int. a client to interact with snapshots,neither,source,sink,source
7613,SnapshotsClient_open,open from snapshots client returns a task which asynchronously opens a snapshot with the given file nam. Return type is Task> and parameters are string boolean int. a client to interact with snapshots,neither,source,sink,source
7614,SnapshotsClient_open,open from snapshots client returns a task which asynchronously opens a snapshot with the given file nam. Return type is Task> and parameters are string boolean. a client to interact with snapshots,neither,source,sink,source
7615,SnapshotsClient_resolveConflict,resolve conflict from snapshots client returns a task which asynchronously resolves a conflict using the provided dat. Return type is Task> and parameters are string string snapshot metadata change snapshot contents. a client to interact with snapshots,neither,neither,neither,neither
7616,SnapshotsClient_resolveConflict,resolve conflict from snapshots client returns a task which asynchronously resolves a conflict using the data from the provided snapsho. Return type is Task> and parameters are string snapshot. a client to interact with snapshots,neither,neither,neither,neither
7617,VideosClient.OnCaptureOverlayStateListener_onCaptureOverlayStateChanged,"on capture overlay state changed from videos client on capture overlay state listener called when the capture overlay state change. Return type is  void and parameters are int. listener that will notify about key user interactions with the overlay, such as starting/stopping capture or dismissing the overlay",neither,neither,neither,neither
7618,Games.GamesOptions_builder,builder from games games options . a p i configuration parameters for games,sink,sink,neither,sink
7619,Games.GamesOptions_equals,equals from games games options . a p i configuration parameters for games,neither,neither,neither,sink
7620,Games.GamesOptions_hashCode,hash code from games games options . a p i configuration parameters for games,sink,neither,neither,source
7621,Games.GamesOptions.Builder_build,build from games games options builder . helper class to build games games options,neither,neither,neither,neither
7622,Games.GamesOptions.Builder_setSdkVariant,set sdk variant from games games options builder . helper class to build games games options,sink,sink,sink,sink
7623,Games.GamesOptions.Builder_setShowConnectingPopup,"set show connecting popup from games games options builder sets whether a ""connecting"" popup should be displayed automatically at the start of the sign-in flo. Return type is Games. Games Options. Builder and parameters are boolean. helper class to build games games options",sink,sink,sink,sink
7624,Games.GamesOptions.Builder_setShowConnectingPopup,"set show connecting popup from games games options builder sets whether a ""connecting"" popup should be displayed automatically at the start of the sign-in flo. Return type is Games. Games Options. Builder and parameters are boolean int. helper class to build games games options",sink,sink,sink,sink
7625,VideosClient.OnCaptureOverlayStateListener_onCaptureOverlayStateChanged,"on capture overlay state changed from videos client on capture overlay state listener called when the capture overlay state change. Return type is  void and parameters are int. listener that will notify about key user interactions with the overlay, such as starting/stopping capture or dismissing the overlay",neither,neither,neither,neither
7626,GamesMetadata.LoadGamesResult_getGames,get games from games metadata load games result . this interface is deprecated  game buffer is returned directly in the games metadata client,source,source,source,source
7627,LeaderboardsClient.LeaderboardScores_getLeaderboard,get leaderboard from leaderboards client leaderboard scores . result delivered when leaderboard scores have been loaded,source,source,source,source
7628,LeaderboardsClient.LeaderboardScores_getScores,get scores from leaderboards client leaderboard scores . result delivered when leaderboard scores have been loaded,source,source,source,source
7629,LeaderboardsClient.LeaderboardScores_release,release from leaderboards client leaderboard scores release the leaderboard score buffer used for scores storag. Return type is void and no argument. result delivered when leaderboard scores have been loaded,neither,neither,neither,sink
7630,Players.LoadPlayersResult_getPlayers,get players from players load players result . this interface is deprecated  player is returned directly in the players client,source,source,source,source
7631,SnapshotsClient.SnapshotConflict_getConflictId,"get conflict id from snapshots client snapshot conflict returns the id of the conflict to resolve, if an. Return type is String and no argument. result delivered when a conflict was detected during open or resolve conflict",source,source,source,source
7632,SnapshotsClient.SnapshotConflict_getConflictingSnapshot,get conflicting snapshot from snapshots client snapshot conflict returns the modified version of the snapshot in the case of a conflic. Return type is Snapshot and no argument. result delivered when a conflict was detected during open or resolve conflict,source,source,source,source
7633,SnapshotsClient.SnapshotConflict_getResolutionSnapshotContents,get resolution snapshot contents from snapshots client snapshot conflict returns the snapshot contents object used to update the data in case of a conflic. Return type is Snapshot Contents and no argument. result delivered when a conflict was detected during open or resolve conflict,source,source,source,source
7634,SnapshotsClient.SnapshotConflict_getSnapshot,get snapshot from snapshots client snapshot conflict returns the server's version of the snapshot that was opene. Return type is Snapshot and no argument. result delivered when a conflict was detected during open or resolve conflict,source,source,source,source
7635,SnapshotsClient.SnapshotContentUnavailableApiException_getSnapshotMetadata,"get snapshot metadata from snapshots client snapshot content unavailable api exception . indicates that the snapshot contents are unavailable at the moment, but the snapshot metadata is available through get snapshot metadata",source,source,source,source
7636,Games.GamesOptions.Builder_build,build from games games options builder . helper class to build games games options,neither,neither,neither,neither
7637,Games.GamesOptions.Builder_setSdkVariant,set sdk variant from games games options builder . helper class to build games games options,sink,sink,sink,sink
7638,Games.GamesOptions.Builder_setShowConnectingPopup,"set show connecting popup from games games options builder sets whether a ""connecting"" popup should be displayed automatically at the start of the sign-in flo. Return type is Games. Games Options. Builder and parameters are boolean. helper class to build games games options",sink,sink,sink,sink
7639,Games.GamesOptions.Builder_setShowConnectingPopup,"set show connecting popup from games games options builder sets whether a ""connecting"" popup should be displayed automatically at the start of the sign-in flo. Return type is Games. Games Options. Builder and parameters are boolean int. helper class to build games games options",sink,sink,sink,sink
7640,PanoramaApi_loadPanoramaInfo,load panorama info from panorama api loads information about a panoram. Return type is Pending Result and parameters are google api client uri. the main entry point for interacting with panorama viewer,source,source,source,source
7641,PanoramaApi_loadPanoramaInfoAndGrantAccess,load panorama info and grant access from panorama api loads information about a panorama from a content provide. Return type is Pending Result and parameters are google api client uri. the main entry point for interacting with panorama viewer,source,source,source,source
7642,PanoramaApi.PanoramaResult_getViewerIntent,get viewer intent from panorama api panorama result . result interface for loading panorama info,source,source,source,source
7643,PanoramaApi.PanoramaResult_getViewerIntent,get viewer intent from panorama api panorama result . result interface for loading panorama info,source,source,source,source
7644,Fido2ApiClient_getRegisterIntent,get register intent from fido2 api client deprecate. Return type is Task and parameters are public key credential creation options. the entry point for interacting with f i d o2 a p is,source,source,source,neither
7645,Fido2ApiClient_getRegisterPendingIntent,"get register pending intent from fido2 api client creates a task with pending intent, when started, will issue a f i d o2 registration request, which is done once per f i d o2 device per account for associating the new f i d o2 device with that accoun. Return type is Task and parameters are public key credential creation options. the entry point for interacting with f i d o2 a p is",source,source,source,neither
7646,Fido2ApiClient_getSignIntent,get sign intent from fido2 api client deprecate. Return type is Task and parameters are public key credential request options. the entry point for interacting with f i d o2 a p is,source,source,source,neither
7647,Fido2ApiClient_getSignPendingIntent,"get sign pending intent from fido2 api client creates a task with pending intent, when started, will issue a f i d o2 signature request for a relying party to authenticate a use. Return type is Task and parameters are public key credential request options. the entry point for interacting with f i d o2 a p is",source,source,source,source
7648,Fido2ApiClient_isUserVerifyingPlatformAuthenticatorAvailable,"is user verifying platform authenticator available from fido2 api client creates a task with boolean, which check if a user verifying platform authenticator is available on the devic. Return type is Task and no argument. the entry point for interacting with f i d o2 a p is",source,neither,source,neither
7649,Fido2PrivilegedApiClient_getRegisterIntent,get register intent from fido2 privileged api client deprecate. Return type is Task and parameters are browser public key credential creation options. the entry point for interacting with the privileged f i d o2 a p is,source,source,source,source
7650,Fido2PrivilegedApiClient_getRegisterPendingIntent,"get register pending intent from fido2 privileged api client creates a task with pending intent, when started, will issue a f i d o2 registration request for privileged app. Return type is Task and parameters are browser public key credential creation options. the entry point for interacting with the privileged f i d o2 a p is",source,source,source,source
7651,Fido2PrivilegedApiClient_getSignIntent,get sign intent from fido2 privileged api client deprecate. Return type is Task and parameters are browser public key credential request options. the entry point for interacting with the privileged f i d o2 a p is,source,source,source,source
7652,Fido2PrivilegedApiClient_getSignPendingIntent,"get sign pending intent from fido2 privileged api client creates a task with pending intent, when started, will issue a f i d o2 signature request for privileged app. Return type is Task and parameters are browser public key credential request options. the entry point for interacting with the privileged f i d o2 a p is",source,source,source,source
7653,Fido2PrivilegedApiClient_isUserVerifyingPlatformAuthenticatorAvailable,"is user verifying platform authenticator available from fido2 privileged api client creates a task with boolean, which check if a user verifying platform authenticator is available on the devic. Return type is Task and no argument. the entry point for interacting with the privileged f i d o2 a p is",source,neither,source,source
7654,Fido2PendingIntent_hasPendingIntent,has pending intent from fido2 pending intent returns true if an activity has a pending inten. Return type is  boolean and no argument. this interface is deprecated  use fido2 api client get register pending intent or fido2 api client get sign pending intent to avoid a dependence on this,source,source,source,source
7655,Fido2PendingIntent_launchPendingIntent,launch pending intent from fido2 pending intent launches the pending inten. Return type is  void and parameters are activity int. this interface is deprecated  use fido2 api client get register pending intent or fido2 api client get sign pending intent to avoid a dependence on this,sink,sink,sink,sink
7656,GoogleNowAuthState_getAccessToken,get access token from google now auth state returns the o auth access token or null if access token is unavailabl. Return type is String and no argument. output of search auth api get google now auth,source,source,source,source
7657,GoogleNowAuthState_getAuthCode,get auth code from google now auth state returns the o auth authorization code or null if authorization code is unavailabl. Return type is String and no argument. output of search auth api get google now auth,source,source,source,source
7658,GoogleNowAuthState_getNextAllowedTimeMillis,get next allowed time millis from google now auth state if the request was rejected by the throttler then the next allowed request wall tim. Return type is long and no argument. output of search auth api get google now auth,source,source,source,source
7659,GoogleNowAuthState_toString,to string from google now auth state . output of search auth api get google now auth,source,source,source,source
7660,SearchAuthApi_clearToken,clear token from search auth api clears an access token from the cach. Return type is Pending Result and parameters are google api client string. a p i for google search auth,neither,neither,neither,neither
7661,SearchAuthApi_getGoogleNowAuth,"get google now auth from search auth api obtains authorization for the caller to use the now api to publish to the google now user, if any, on this devic. Return type is Pending Result and parameters are google api client string. a p i for google search auth",source,source,source,source
7662,SearchAuthApi.GoogleNowAuthResult_getGoogleNowAuthState,get google now auth state from search auth api google now auth result returns the auth state if resultget stat. Return type is Google Now Auth State and no argument. result of search auth api get google now auth,source,source,source,source
7663,SearchAuthApi.GoogleNowAuthResult_getGoogleNowAuthState,get google now auth state from search auth api google now auth result returns the auth state if resultget stat. Return type is Google Now Auth State and no argument. result of search auth api get google now auth,source,source,source,source
7664,FirebaseApp_equals,equals from firebase app . the entry point of firebase s d ks,neither,neither,neither,neither
7665,FirebaseApp_getApplicationContext,get application context from firebase app returns the application contex. Return type is Context and no argument. the entry point of firebase s d ks,source,source,source,source
7666,FirebaseApp_getApps,get apps from firebase app returns a mutable list of all firebase app. Return type is List and parameters are context. the entry point of firebase s d ks,source,source,source,source
7667,FirebaseApp_getInstance,"get instance from firebase app returns the instance identified by the unique name, or throws if it does not exis. Return type is Firebase App and parameters are string. the entry point of firebase s d ks",source,source,source,source
7668,FirebaseApp_getInstance,get instance from firebase app returns the defaul. Return type is Firebase App and no argument. the entry point of firebase s d ks,source,source,source,source
7669,FirebaseApp_getName,get name from firebase app returns the unique name of this ap. Return type is String and no argument. the entry point of firebase s d ks,source,source,source,source
7670,FirebaseApp_getOptions,get options from firebase app returns the specified firebase option. Return type is Firebase Options and no argument. the entry point of firebase s d ks,source,source,source,source
7671,FirebaseApp_hashCode,hash code from firebase app . the entry point of firebase s d ks,neither,neither,neither,neither
7672,FirebaseApp_initializeApp,initialize app from firebase app initializes the default firebase app instanc. Return type is Firebase App and parameters are context firebase options. the entry point of firebase s d ks,neither,neither,neither,sink
7673,FirebaseApp_initializeApp,initialize app from firebase app a factory method to initialize a firebase ap. Return type is Firebase App and parameters are context firebase options string. the entry point of firebase s d ks,neither,neither,neither,sink
7674,FirebaseApp_initializeApp,initialize app from firebase app initializes the default firebase app instance using string resource values - populated from google-servicesjso. Return type is Firebase App and parameters are context. the entry point of firebase s d ks,neither,neither,neither,sink
7675,FirebaseApp_setAutomaticResourceManagementEnabled,set automatic resource management enabled from firebase app if set to true it indicates that firebase should close database connections automatically when the app is in the backgroun. Return type is void and parameters are boolean. the entry point of firebase s d ks,neither,sink,neither,neither
7676,FirebaseApp_toString,to string from firebase app . the entry point of firebase s d ks,sink,sink,neither,sink
7677,FirebaseOptions_equals,equals from firebase options . configurable firebase options,neither,neither,neither,neither
7678,FirebaseOptions_fromResource,from resource from firebase options creates a new firebase options instance that is populated from string resouce. Return type is Firebase Options and parameters are context. configurable firebase options,neither,neither,neither,neither
7679,FirebaseOptions_getApiKey,"get api key from firebase options a p i key used for authenticating requests from your app, e. Return type is String and no argument. configurable firebase options",source,source,source,source
7680,FirebaseOptions_getApplicationId,get application id from firebase options the google app id that is used to uniquely identify an instance of an ap. Return type is String and no argument. configurable firebase options,source,source,source,source
7681,FirebaseOptions_getDatabaseUrl,"get database url from firebase options the database root u r l, e. Return type is String and no argument. configurable firebase options",source,source,source,source
7682,FirebaseOptions_getGcmSenderId,"get gcm sender id from firebase options the project number from the google developer's console, for example 012345678901, used to configure google cloud messagin. Return type is String and no argument. configurable firebase options",source,source,source,source
7683,FirebaseOptions_getProjectId,"get project id from firebase options the google cloud project i d, e. Return type is String and no argument. configurable firebase options",source,source,source,source
7684,FirebaseOptions_getStorageBucket,"get storage bucket from firebase options the google cloud storage bucket name, e. Return type is String and no argument. configurable firebase options",source,source,source,source
7685,FirebaseOptions_hashCode,hash code from firebase options . configurable firebase options,sink,sink,neither,sink
7686,FirebaseOptions_toString,to string from firebase options . configurable firebase options,sink,sink,sink,sink
7687,FirebaseOptions.Builder_build,build from firebase options builder . builder for constructing firebase options,neither,sink,neither,sink
7688,FirebaseOptions.Builder_setApiKey,set api key from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7689,FirebaseOptions.Builder_setApplicationId,set application id from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7690,FirebaseOptions.Builder_setDatabaseUrl,set database url from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7691,FirebaseOptions.Builder_setGcmSenderId,set gcm sender id from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7692,FirebaseOptions.Builder_setProjectId,set project id from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7693,FirebaseOptions.Builder_setStorageBucket,set storage bucket from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7694,Timestamp_compareTo,"compare to from timestamp . a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",neither,neither,neither,neither
7695,Timestamp_describeContents,"describe contents from timestamp . a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",neither,neither,neither,neither
7696,Timestamp_equals,"equals from timestamp . a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",neither,neither,neither,neither
7697,Timestamp_getNanoseconds,"get nanoseconds from timestamp returns the sub-second part of the timestamp, in nanosecond. Return type is int and no argument. a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",source,source,source,source
7698,Timestamp_getSeconds,"get seconds from timestamp returns the seconds part of the timestam. Return type is long and no argument. a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",source,source,source,source
7699,Timestamp_hashCode,"hash code from timestamp . a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",source,source,source,source
7700,Timestamp_now,"now from timestamp creates a new timestamp with the current date, with millisecond precisio. Return type is Timestamp and no argument. a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",neither,neither,neither,neither
7701,Timestamp_toDate,"to date from timestamp returns a new date corresponding to this timestam. Return type is Date and no argument. a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",source,source,neither,source
7702,Timestamp_toString,"to string from timestamp . a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",neither,neither,source,sink
7703,Timestamp_writeToParcel,"write to parcel from timestamp . a timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in utc epoch time",sink,sink,sink,sink
7704,FirebaseOptions.Builder_build,build from firebase options builder . builder for constructing firebase options,neither,sink,neither,sink
7705,FirebaseOptions.Builder_setApiKey,set api key from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7706,FirebaseOptions.Builder_setApplicationId,set application id from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7707,FirebaseOptions.Builder_setDatabaseUrl,set database url from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7708,FirebaseOptions.Builder_setGcmSenderId,set gcm sender id from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7709,FirebaseOptions.Builder_setProjectId,set project id from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7710,FirebaseOptions.Builder_setStorageBucket,set storage bucket from firebase options builder . builder for constructing firebase options,sink,sink,sink,sink
7711,SnapshotEntity_equals,equals from snapshot entity . data object representing the data for a saved game,neither,neither,neither,neither
7712,SnapshotEntity_freeze,freeze from snapshot entity . data object representing the data for a saved game,neither,neither,neither,sink
7713,SnapshotEntity_getMetadata,get metadata from snapshot entity retrieves the metadata for this snapsho. Return type is Snapshot Metadata and no argument. data object representing the data for a saved game,source,source,source,source
7714,SnapshotEntity_getSnapshotContents,get snapshot contents from snapshot entity retrieve the snapshot contents associated with this snapsho. Return type is Snapshot Contents and no argument. data object representing the data for a saved game,source,source,source,source
7715,SnapshotEntity_hashCode,hash code from snapshot entity . data object representing the data for a saved game,neither,neither,neither,source
7716,SnapshotEntity_isDataValid,is data valid from snapshot entity . data object representing the data for a saved game,neither,neither,neither,sink
7717,SnapshotEntity_toString,to string from snapshot entity . data object representing the data for a saved game,sink,sink,neither,sink
7718,SnapshotEntity_writeToParcel,write to parcel from snapshot entity . data object representing the data for a saved game,sink,sink,sink,sink
7719,SnapshotMetadataBuffer_get,get from snapshot metadata buffer . data structure providing access to a list of snapshots,source,source,source,source
7720,SnapshotMetadataChange.Builder_build,build from snapshot metadata change builder . builder for snapshot metadata change objects,neither,neither,neither,neither
7721,SnapshotMetadataChange.Builder_fromMetadata,from metadata from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,neither,neither
7722,SnapshotMetadataChange.Builder_setCoverImage,set cover image from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7723,SnapshotMetadataChange.Builder_setDescription,set description from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7724,SnapshotMetadataChange.Builder_setPlayedTimeMillis,set played time millis from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7725,SnapshotMetadataChange.Builder_setProgressValue,set progress value from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7726,SnapshotMetadataEntity_equals,equals from snapshot metadata entity . data object representing the metadata for a saved game,neither,neither,neither,neither
7727,SnapshotMetadataEntity_freeze,freeze from snapshot metadata entity . data object representing the metadata for a saved game,neither,neither,neither,sink
7728,SnapshotMetadataEntity_getCoverImageAspectRatio,"get cover image aspect ratio from snapshot metadata entity retrieves the aspect ratio of the cover image for this snapshot, if an. Return type is float and no argument. data object representing the metadata for a saved game",source,source,source,source
7729,SnapshotMetadataEntity_getCoverImageUri,get cover image uri from snapshot metadata entity retrieves an image uri that can be used to load the snapshot's cover imag. Return type is Uri and no argument. data object representing the metadata for a saved game,source,source,source,source
7730,SnapshotMetadataEntity_getDescription,get description from snapshot metadata entity retrieves the description of this snapsho. Return type is String and no argument. data object representing the metadata for a saved game,source,source,source,source
7731,SnapshotMetadataEntity_getDescription,get description from snapshot metadata entity loads the snapshot description into the given char array buffe. Return type is void and parameters are char array buffer. data object representing the metadata for a saved game,source,source,source,source
7732,SnapshotMetadataEntity_getDeviceName,"get device name from snapshot metadata entity retrieves the name of the device that wrote this snapshot, if know. Return type is String and no argument. data object representing the metadata for a saved game",source,source,source,source
7733,SnapshotMetadataEntity_getGame,get game from snapshot metadata entity retrieves the game associated with this snapsho. Return type is Game and no argument. data object representing the metadata for a saved game,source,source,source,source
7734,SnapshotMetadataEntity_getLastModifiedTimestamp,"get last modified timestamp from snapshot metadata entity retrieves the last time this snapshot was modified, in millis since epoc. Return type is long and no argument. data object representing the metadata for a saved game",source,source,source,source
7735,SnapshotMetadataEntity_getOwner,get owner from snapshot metadata entity retrieves the player that owns this snapsho. Return type is Player and no argument. data object representing the metadata for a saved game,source,source,source,source
7736,SnapshotMetadataEntity_getPlayedTime,get played time from snapshot metadata entity retrieves the played time of this snapshot in millisecond. Return type is long and no argument. data object representing the metadata for a saved game,source,source,source,source
7737,SnapshotMetadataEntity_getProgressValue,get progress value from snapshot metadata entity retrieves the progress value for this snapsho. Return type is long and no argument. data object representing the metadata for a saved game,source,source,source,source
7738,SnapshotMetadataEntity_getSnapshotId,get snapshot id from snapshot metadata entity retrieves the id of this snapsho. Return type is String and no argument. data object representing the metadata for a saved game,source,source,source,source
7739,SnapshotMetadataEntity_getUniqueName,get unique name from snapshot metadata entity retrieves the unique identifier of this snapsho. Return type is String and no argument. data object representing the metadata for a saved game,source,source,source,source
7740,SnapshotMetadataEntity_hasChangePending,has change pending from snapshot metadata entity indicates whether or not this snapshot has any changes pending that have not been uploaded to the serve. Return type is boolean and no argument. data object representing the metadata for a saved game,source,neither,neither,source
7741,SnapshotMetadataEntity_hashCode,hash code from snapshot metadata entity . data object representing the metadata for a saved game,neither,source,neither,source
7742,SnapshotMetadataEntity_isDataValid,is data valid from snapshot metadata entity . data object representing the metadata for a saved game,neither,neither,neither,sink
7743,SnapshotMetadataEntity_toString,to string from snapshot metadata entity . data object representing the metadata for a saved game,sink,sink,neither,sink
7744,SnapshotMetadataEntity_writeToParcel,write to parcel from snapshot metadata entity . data object representing the metadata for a saved game,sink,sink,sink,sink
7745,Snapshot_getMetadata,get metadata from snapshot retrieves the metadata for this snapsho. Return type is Snapshot Metadata and no argument. data interface for a representation of a saved game,source,source,source,source
7746,Snapshot_getSnapshotContents,get snapshot contents from snapshot retrieve the snapshot contents associated with this snapsho. Return type is Snapshot Contents and no argument. data interface for a representation of a saved game,source,source,source,source
7747,SnapshotContents_getParcelFileDescriptor,get parcel file descriptor from snapshot contents retrieve the parcel file descriptor associated with the underlying file for this snapshot content. Return type is Parcel File Descriptor and no argument. data interface for a representation of snapshot contents,source,source,source,source
7748,SnapshotContents_isClosed,is closed from snapshot contents . data interface for a representation of snapshot contents,neither,neither,neither,neither
7749,SnapshotContents_modifyBytes,modify bytes from snapshot contents write the specified data into the snapsho. Return type is  boolean and parameters are int byte[] int int. data interface for a representation of snapshot contents,sink,sink,sink,sink
7750,SnapshotContents_readFully,read fully from snapshot contents read the contents of a snapsho. Return type is  byte[] and no argument. data interface for a representation of snapshot contents,source,source,source,source
7751,SnapshotContents_writeBytes,write bytes from snapshot contents write the specified data into the snapsho. Return type is  boolean and parameters are byte[]. data interface for a representation of snapshot contents,sink,sink,sink,sink
7752,SnapshotMetadata_getCoverImageAspectRatio,"get cover image aspect ratio from snapshot metadata retrieves the aspect ratio of the cover image for this snapshot, if an. Return type is  float and no argument. data interface for the metadata of a saved game",source,source,source,source
7753,SnapshotMetadata_getCoverImageUri,get cover image uri from snapshot metadata retrieves an image uri that can be used to load the snapshot's cover imag. Return type is Uri and no argument. data interface for the metadata of a saved game,source,source,source,source
7754,SnapshotMetadata_getDescription,get description from snapshot metadata retrieves the description of this snapsho. Return type is String and no argument. data interface for the metadata of a saved game,source,source,source,source
7755,SnapshotMetadata_getDescription,get description from snapshot metadata loads the snapshot description into the given char array buffe. Return type is  void and parameters are char array buffer. data interface for the metadata of a saved game,source,source,source,source
7756,SnapshotMetadata_getDeviceName,"get device name from snapshot metadata retrieves the name of the device that wrote this snapshot, if know. Return type is String and no argument. data interface for the metadata of a saved game",source,source,source,source
7757,SnapshotMetadata_getGame,get game from snapshot metadata retrieves the game associated with this snapsho. Return type is Game and no argument. data interface for the metadata of a saved game,source,source,source,source
7758,SnapshotMetadata_getLastModifiedTimestamp,"get last modified timestamp from snapshot metadata retrieves the last time this snapshot was modified, in millis since epoc. Return type is  long and no argument. data interface for the metadata of a saved game",source,source,source,source
7759,SnapshotMetadata_getOwner,get owner from snapshot metadata retrieves the player that owns this snapsho. Return type is Player and no argument. data interface for the metadata of a saved game,source,source,source,source
7760,SnapshotMetadata_getPlayedTime,get played time from snapshot metadata retrieves the played time of this snapshot in millisecond. Return type is  long and no argument. data interface for the metadata of a saved game,source,source,source,source
7761,SnapshotMetadata_getProgressValue,get progress value from snapshot metadata retrieves the progress value for this snapsho. Return type is  long and no argument. data interface for the metadata of a saved game,source,source,source,source
7762,SnapshotMetadata_getSnapshotId,get snapshot id from snapshot metadata retrieves the id of this snapsho. Return type is String and no argument. data interface for the metadata of a saved game,source,source,source,source
7763,SnapshotMetadata_getUniqueName,get unique name from snapshot metadata retrieves the unique identifier of this snapsho. Return type is String and no argument. data interface for the metadata of a saved game,source,source,source,source
7764,SnapshotMetadata_hasChangePending,has change pending from snapshot metadata indicates whether or not this snapshot has any changes pending that have not been uploaded to the serve. Return type is  boolean and no argument. data interface for the metadata of a saved game,neither,neither,neither,source
7765,SnapshotMetadataChange_getCoverImage,get cover image from snapshot metadata change . a collection of changes to apply to the metadata of a snapshot,source,source,source,source
7766,SnapshotMetadataChange_getDescription,get description from snapshot metadata change . a collection of changes to apply to the metadata of a snapshot,source,source,source,source
7767,SnapshotMetadataChange_getPlayedTimeMillis,get played time millis from snapshot metadata change . a collection of changes to apply to the metadata of a snapshot,source,source,source,source
7768,SnapshotMetadataChange_getProgressValue,get progress value from snapshot metadata change . a collection of changes to apply to the metadata of a snapshot,source,source,source,source
7769,Snapshots_commitAndClose,commit and close from snapshots commit any modifications made to the snapsho. Return type is Pending Result and parameters are google api client snapshot snapshot metadata change. this interface is deprecated  use snapshots client instea,neither,neither,neither,neither
7770,Snapshots_delete,delete from snapshots delete the specified snapsho. Return type is Pending Result and parameters are google api client snapshot metadata. this interface is deprecated  use snapshots client instea,neither,neither,neither,source
7771,Snapshots_discardAndClose,discard and close from snapshots discard the contents of the snapshot and close the content. Return type is  void and parameters are google api client snapshot. this interface is deprecated  use snapshots client instea,neither,neither,neither,neither
7772,Snapshots_getMaxCoverImageSize,get max cover image size from snapshots gets the maximum data size per snapshot cover image in byte. Return type is  int and parameters are google api client. this interface is deprecated  use snapshots client instea,source,source,source,source
7773,Snapshots_getMaxDataSize,get max data size from snapshots gets the maximum data size per snapshot in byte. Return type is  int and parameters are google api client. this interface is deprecated  use snapshots client instea,source,source,source,source
7774,Snapshots_getSelectSnapshotIntent,get select snapshot intent from snapshots returns an intent that will let the user select a snapsho. Return type is Intent and parameters are google api client string boolean boolean int. this interface is deprecated  use snapshots client instea,source,source,source,source
7775,Snapshots_getSnapshotFromBundle,get snapshot from bundle from snapshots this method takes a bundle object and extracts the snapshot provide. Return type is Snapshot Metadata and parameters are bundle. this interface is deprecated  use snapshots client instea,source,source,source,source
7776,Snapshots_load,load from snapshots asynchronously load the snapshot data for the currently signed-in playe. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use snapshots client instea,neither,neither,neither,sink
7777,Snapshots_open,open from snapshots open a snapshot with the given metadat. Return type is Pending Result and parameters are google api client snapshot metadata. this interface is deprecated  use snapshots client instea,source,source,source,source
7778,Snapshots_open,open from snapshots open a snapshot with the given nam. Return type is Pending Result and parameters are google api client string boolean. this interface is deprecated  use snapshots client instea,source,source,source,source
7779,Snapshots_open,open from snapshots open a snapshot with the given nam. Return type is Pending Result and parameters are google api client string boolean int. this interface is deprecated  use snapshots client instea,source,source,source,source
7780,Snapshots_open,open from snapshots open a snapshot with the given metadat. Return type is Pending Result and parameters are google api client snapshot metadata int. this interface is deprecated  use snapshots client instea,source,source,source,source
7781,Snapshots_resolveConflict,resolve conflict from snapshots resolve a conflict using the provided dat. Return type is Pending Result and parameters are google api client string string snapshot metadata change snapshot contents. this interface is deprecated  use snapshots client instea,neither,neither,neither,neither
7782,Snapshots_resolveConflict,resolve conflict from snapshots resolve a conflict using the data from the provided snapsho. Return type is Pending Result and parameters are google api client string snapshot. this interface is deprecated  use snapshots client instea,neither,neither,neither,neither
7783,Snapshots.CommitSnapshotResult_getSnapshotMetadata,get snapshot metadata from snapshots commit snapshot result . this interface is deprecated  snapshot metadata is returned directly in the snapshots client,source,source,source,source
7784,Snapshots.DeleteSnapshotResult_getSnapshotId,get snapshot id from snapshots delete snapshot result . this interface is deprecated  snapshot id is returned directly in the snapshots client,source,source,source,source
7785,Snapshots.LoadSnapshotsResult_getSnapshots,get snapshots from snapshots load snapshots result . this interface is deprecated  snapshot metadata buffer is returned directly in the snapshots client,source,source,source,source
7786,Snapshots.OpenSnapshotResult_getConflictId,"get conflict id from snapshots open snapshot result retrieves the id of the conflict to resolve, if an. Return type is String and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client",source,source,source,source
7787,Snapshots.OpenSnapshotResult_getConflictingSnapshot,get conflicting snapshot from snapshots open snapshot result retrieves the modified version of this snapshot in the case of a conflic. Return type is Snapshot and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client,source,source,source,source
7788,Snapshots.OpenSnapshotResult_getResolutionSnapshotContents,get resolution snapshot contents from snapshots open snapshot result retrieve the snapshot contents object used to update the data in case of a conflic. Return type is Snapshot Contents and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client,source,source,source,source
7789,Snapshots.OpenSnapshotResult_getSnapshot,get snapshot from snapshots open snapshot result retrieves the snapshot that was opene. Return type is Snapshot and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client,source,source,source,source
7790,SnapshotMetadataChange.Builder_build,build from snapshot metadata change builder . builder for snapshot metadata change objects,neither,neither,neither,neither
7791,SnapshotMetadataChange.Builder_fromMetadata,from metadata from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,neither,neither
7792,SnapshotMetadataChange.Builder_setCoverImage,set cover image from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7793,SnapshotMetadataChange.Builder_setDescription,set description from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7794,SnapshotMetadataChange.Builder_setPlayedTimeMillis,set played time millis from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7795,SnapshotMetadataChange.Builder_setProgressValue,set progress value from snapshot metadata change builder . builder for snapshot metadata change objects,sink,sink,sink,sink
7796,Snapshots.CommitSnapshotResult_getSnapshotMetadata,get snapshot metadata from snapshots commit snapshot result . this interface is deprecated  snapshot metadata is returned directly in the snapshots client,source,source,source,source
7797,Snapshots.DeleteSnapshotResult_getSnapshotId,get snapshot id from snapshots delete snapshot result . this interface is deprecated  snapshot id is returned directly in the snapshots client,source,source,source,source
7798,Snapshots.LoadSnapshotsResult_getSnapshots,get snapshots from snapshots load snapshots result . this interface is deprecated  snapshot metadata buffer is returned directly in the snapshots client,source,source,source,source
7799,Snapshots.OpenSnapshotResult_getConflictId,"get conflict id from snapshots open snapshot result retrieves the id of the conflict to resolve, if an. Return type is String and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client",source,source,source,source
7800,Snapshots.OpenSnapshotResult_getConflictingSnapshot,get conflicting snapshot from snapshots open snapshot result retrieves the modified version of this snapshot in the case of a conflic. Return type is Snapshot and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client,source,source,source,source
7801,Snapshots.OpenSnapshotResult_getResolutionSnapshotContents,get resolution snapshot contents from snapshots open snapshot result retrieve the snapshot contents object used to update the data in case of a conflic. Return type is Snapshot Contents and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client,source,source,source,source
7802,Snapshots.OpenSnapshotResult_getSnapshot,get snapshot from snapshots open snapshot result retrieves the snapshot that was opene. Return type is Snapshot and no argument. this interface is deprecated  snapshots client data or conflict is returned instead in the snapshots client,source,source,source,source
7803,ActivityRecognition_getClient,get client from activity recognition create a new instance of activity recognition client for use in an activit. Return type is Activity Recognition Client and parameters are activity. the main entry point for activity recognition integration,source,source,source,source
7804,ActivityRecognition_getClient,get client from activity recognition create a new instance of activity recognition client for use in a non-activity contex. Return type is Activity Recognition Client and parameters are context. the main entry point for activity recognition integration,source,source,source,source
7805,ActivityRecognitionClient_removeActivityTransitionUpdates,remove activity transition updates from activity recognition client removes activity transition updates associated with the given pending inten. Return type is Task and parameters are pending intent. the main entry point for interacting with activity recognition,neither,neither,neither,neither
7806,ActivityRecognitionClient_removeActivityUpdates,remove activity updates from activity recognition client removes all activity updates for the specified pending inten. Return type is Task and parameters are pending intent. the main entry point for interacting with activity recognition,neither,neither,neither,neither
7807,ActivityRecognitionClient_removeSleepSegmentUpdates,remove sleep segment updates from activity recognition client removes all sleep segment detection updates for the specified pending inten. Return type is Task and parameters are pending intent. the main entry point for interacting with activity recognition,neither,neither,neither,neither
7808,ActivityRecognitionClient_requestActivityTransitionUpdates,request activity transition updates from activity recognition client activity recognition transition api provides an ability for apps to subscribe to activity transitional condition. Return type is Task and parameters are activity transition request pending intent. the main entry point for interacting with activity recognition,neither,neither,neither,sink
7809,ActivityRecognitionClient_requestActivityUpdates,request activity updates from activity recognition client register for activity recognition update. Return type is Task and parameters are long pending intent. the main entry point for interacting with activity recognition,neither,neither,neither,sink
7810,ActivityRecognitionClient_requestSleepSegmentUpdates,request sleep segment updates from activity recognition client registers for detected user sleep tim. Return type is Task and parameters are pending intent sleep segment request. the main entry point for interacting with activity recognition,neither,neither,sink,sink
7811,ActivityRecognitionResult_extractResult,extract result from activity recognition result extracts the activity recognition result from an inten. Return type is Activity Recognition Result and parameters are intent. result of an activity recognition,source,source,source,source
7812,ActivityRecognitionResult_getActivityConfidence,get activity confidence from activity recognition result returns the confidence of the given activity typ. Return type is int and parameters are int. result of an activity recognition,source,source,source,source
7813,ActivityRecognitionResult_getElapsedRealtimeMillis,"get elapsed realtime millis from activity recognition result returns the elapsed real time of this detection in milliseconds since boot, including time spent in sleep as obtained by system clockelapsed realti. Return type is long and no argument. result of an activity recognition",source,source,source,source
7814,ActivityRecognitionResult_getMostProbableActivity,get most probable activity from activity recognition result returns the most probable activity of the use. Return type is Detected Activity and no argument. result of an activity recognition,source,source,source,source
7815,ActivityRecognitionResult_getProbableActivities,get probable activities from activity recognition result returns the list of activities that were detected with the confidence value associated with each activit. Return type is List and no argument. result of an activity recognition,source,source,source,source
7816,ActivityRecognitionResult_getTime,"get time from activity recognition result returns the utc time of this detection, in milliseconds since january 1, 197. Return type is long and no argument. result of an activity recognition",source,source,source,source
7817,ActivityRecognitionResult_hasResult,has result from activity recognition result returns true if an intent contains an activity recognition resul. Return type is  boolean and parameters are intent. result of an activity recognition,source,source,neither,source
7818,ActivityRecognitionResult_toString,to string from activity recognition result . result of an activity recognition,source,source,source,sink
7819,ActivityRecognitionResult_writeToParcel,write to parcel from activity recognition result . result of an activity recognition,sink,sink,sink,sink
7820,ActivityTransition_equals,equals from activity transition . represents an activity and the transition of it,neither,neither,neither,neither
7821,ActivityTransition_getActivityType,get activity type from activity transition gets the type of the activity to be detecte. Return type is int and no argument. represents an activity and the transition of it,source,source,source,source
7822,ActivityTransition_getTransitionType,get transition type from activity transition gets the interested transition typ. Return type is int and no argument. represents an activity and the transition of it,source,source,source,source
7823,ActivityTransition_hashCode,hash code from activity transition . represents an activity and the transition of it,neither,neither,neither,neither
7824,ActivityTransition_toString,to string from activity transition . represents an activity and the transition of it,neither,neither,neither,neither
7825,ActivityTransition_writeToParcel,write to parcel from activity transition . represents an activity and the transition of it,sink,sink,sink,sink
7826,ActivityTransition.Builder_build,build from activity transition builder builds a activity transition objec. Return type is Activity Transition and no argument. the builder to help create an activity transition object,neither,neither,neither,neither
7827,ActivityTransition.Builder_setActivityTransition,set activity transition from activity transition builder adds an interested transition typ. Return type is Activity Transition. Builder and parameters are int. the builder to help create an activity transition object,sink,sink,sink,sink
7828,ActivityTransition.Builder_setActivityType,set activity type from activity transition builder sets the type of the activity to be detecte. Return type is Activity Transition. Builder and parameters are int. the builder to help create an activity transition object,sink,sink,sink,sink
7829,ActivityTransitionEvent_equals,"equals from activity transition event . represents an activity transition event, for example start to walk, stop running etc",neither,neither,neither,neither
7830,ActivityTransitionEvent_getActivityType,"get activity type from activity transition event gets the type of the activity of this transitio. Return type is int and no argument. represents an activity transition event, for example start to walk, stop running etc",source,source,source,source
7831,ActivityTransitionEvent_getElapsedRealTimeNanos,"get elapsed real time nanos from activity transition event gets the elapsed realtime when this transition happene. Return type is long and no argument. represents an activity transition event, for example start to walk, stop running etc",source,source,source,source
7832,ActivityTransitionEvent_getTransitionType,"get transition type from activity transition event gets the type of the transitio. Return type is int and no argument. represents an activity transition event, for example start to walk, stop running etc",source,source,source,source
7833,ActivityTransitionEvent_hashCode,"hash code from activity transition event . represents an activity transition event, for example start to walk, stop running etc",neither,neither,neither,neither
7834,ActivityTransitionEvent_toString,"to string from activity transition event . represents an activity transition event, for example start to walk, stop running etc",neither,neither,neither,neither
7835,ActivityTransitionEvent_writeToParcel,"write to parcel from activity transition event . represents an activity transition event, for example start to walk, stop running etc",sink,sink,sink,sink
7836,ActivityTransitionRequest_equals,equals from activity transition request . the request object for apps to get notified when user's activity changes,neither,neither,neither,neither
7837,ActivityTransitionRequest_hashCode,hash code from activity transition request . the request object for apps to get notified when user's activity changes,neither,neither,neither,neither
7838,ActivityTransitionRequest_serializeToIntentExtra,serialize to intent extra from activity transition request serializes this request to the given inten. Return type is void and parameters are intent. the request object for apps to get notified when user's activity changes,sink,sink,sink,sink
7839,ActivityTransitionRequest_toString,to string from activity transition request . the request object for apps to get notified when user's activity changes,neither,neither,neither,neither
7840,ActivityTransitionRequest_writeToParcel,write to parcel from activity transition request . the request object for apps to get notified when user's activity changes,sink,sink,sink,sink
7841,ActivityTransitionResult_equals,equals from activity transition result . represents the result of activity transitions,neither,neither,neither,neither
7842,ActivityTransitionResult_extractResult,extract result from activity transition result extracts the activity transition result from the given inten. Return type is Activity Transition Result and parameters are intent. represents the result of activity transitions,source,source,source,neither
7843,ActivityTransitionResult_getTransitionEvents,get transition events from activity transition result gets all the activity transition events in this resul. Return type is List and no argument. represents the result of activity transitions,source,source,source,source
7844,ActivityTransitionResult_hasResult,has result from activity transition result checks if the intent contains an activity transition resul. Return type is  boolean and parameters are intent. represents the result of activity transitions,source,source,source,neither
7845,ActivityTransitionResult_hashCode,hash code from activity transition result . represents the result of activity transitions,neither,neither,neither,neither
7846,ActivityTransitionResult_writeToParcel,write to parcel from activity transition result . represents the result of activity transitions,sink,sink,sink,sink
7847,DetectedActivity_getConfidence,get confidence from detected activity returns a value from 0 to 100 indicating the likelihood that the user is performing this activit. Return type is int and no argument. the detected activity of the device with an an associated confidence,source,source,source,source
7848,DetectedActivity_getType,get type from detected activity returns the type of activity that was detecte. Return type is int and no argument. the detected activity of the device with an an associated confidence,source,source,source,source
7849,DetectedActivity_toString,to string from detected activity . the detected activity of the device with an an associated confidence,neither,neither,source,neither
7850,DetectedActivity_writeToParcel,write to parcel from detected activity . the detected activity of the device with an an associated confidence,sink,sink,sink,sink
7851,FusedLocationProviderClient_flushLocations,"flush locations from fused location provider client flushes any locations currently being batched and sends them to all registered location listeners, location callbacks, and pending intent. Return type is Task and no argument. the main entry point for interacting with the fused location provider",sink,sink,neither,sink
7852,FusedLocationProviderClient_getCurrentLocation,get current location from fused location provider client returns a single current location fix on the devic. Return type is Task and parameters are int cancellation token. the main entry point for interacting with the fused location provider,source,source,source,source
7853,FusedLocationProviderClient_getLastLocation,get last location from fused location provider client returns the best most recent location currently availabl. Return type is Task and no argument. the main entry point for interacting with the fused location provider,source,source,source,source
7854,FusedLocationProviderClient_getLocationAvailability,get location availability from fused location provider client returns the availability of location dat. Return type is Task and no argument. the main entry point for interacting with the fused location provider,source,source,source,source
7855,FusedLocationProviderClient_removeLocationUpdates,remove location updates from fused location provider client removes all location updates for the given pending inten. Return type is Task and parameters are pending intent. the main entry point for interacting with the fused location provider,neither,neither,neither,neither
7856,FusedLocationProviderClient_removeLocationUpdates,remove location updates from fused location provider client removes all location updates for the given location result listene. Return type is Task and parameters are location callback. the main entry point for interacting with the fused location provider,neither,neither,neither,neither
7857,FusedLocationProviderClient_requestLocationUpdates,request location updates from fused location provider client requests location updates with a callback on the specified looper threa. Return type is Task and parameters are location request location callback looper. the main entry point for interacting with the fused location provider,neither,neither,neither,sink
7858,FusedLocationProviderClient_requestLocationUpdates,request location updates from fused location provider client requests location updates with a callback on the specified pending inten. Return type is Task and parameters are location request pending intent. the main entry point for interacting with the fused location provider,neither,sink,neither,sink
7859,FusedLocationProviderClient_setMockLocation,set mock location from fused location provider client sets the mock location to be used for the location provide. Return type is Task and parameters are location. the main entry point for interacting with the fused location provider,sink,sink,sink,sink
7860,FusedLocationProviderClient_setMockMode,set mock mode from fused location provider client sets whether or not the location provider is in mock mod. Return type is Task and parameters are boolean. the main entry point for interacting with the fused location provider,sink,sink,sink,sink
7861,Geofence.Builder_build,build from geofence builder creates a geofence objec. Return type is Geofence and no argument. a builder that builds geofence,neither,neither,neither,neither
7862,Geofence.Builder_setCircularRegion,set circular region from geofence builder sets the region of this geofenc. Return type is Geofence. Builder and parameters are double double float. a builder that builds geofence,sink,sink,sink,sink
7863,Geofence.Builder_setExpirationDuration,set expiration duration from geofence builder sets the expiration duration of geofenc. Return type is Geofence. Builder and parameters are long. a builder that builds geofence,sink,sink,sink,sink
7864,Geofence.Builder_setLoiteringDelay,set loitering delay from geofence builder sets the delay between g e o f e n c e_ t r a n s i t i o n_ e n t e r and g e o f e n c e_ t r a n s i t i o n_ d w e l l i n g in millisecond. Return type is Geofence. Builder and parameters are int. a builder that builds geofence,sink,sink,sink,sink
7865,Geofence.Builder_setNotificationResponsiveness,set notification responsiveness from geofence builder sets the best-effort notification responsiveness of the geofenc. Return type is Geofence. Builder and parameters are int. a builder that builds geofence,sink,sink,sink,sink
7866,Geofence.Builder_setRequestId,set request id from geofence builder sets the request id of the geofenc. Return type is Geofence. Builder and parameters are string. a builder that builds geofence,sink,sink,sink,sink
7867,Geofence.Builder_setTransitionTypes,set transition types from geofence builder sets the transition types of interes. Return type is Geofence. Builder and parameters are int. a builder that builds geofence,sink,sink,sink,sink
7868,GeofenceStatusCodes_getStatusCodeString,"get status code string from geofence status codes returns an untranslated debu. Return type is String and parameters are int. geofence specific status codes, for use in status get status cod",source,source,source,source
7869,GeofencingClient_addGeofences,add geofences from geofencing client sets alerts to be notified when the device enters or exits one of the specified geofence. Return type is Task and parameters are geofencing request pending intent. the main entry point for interacting with the geofencing a p is,sink,sink,sink,sink
7870,GeofencingClient_removeGeofences,remove geofences from geofencing client removes geofences by their request id. Return type is Task and parameters are list. the main entry point for interacting with the geofencing a p is,neither,neither,neither,neither
7871,GeofencingClient_removeGeofences,remove geofences from geofencing client removes all geofences associated with the given pending inten. Return type is Task and parameters are pending intent. the main entry point for interacting with the geofencing a p is,neither,neither,neither,neither
7872,GeofencingEvent_fromIntent,from intent from geofencing event creates a geofencing event object from the given inten. Return type is Geofencing Event and parameters are intent. represents an event from the geofencing api api,neither,neither,neither,sink
7873,GeofencingEvent_getErrorCode,get error code from geofencing event returns the error code that explains the error that triggered the intent specified in from inte. Return type is int and no argument. represents an event from the geofencing api api,source,source,source,source
7874,GeofencingEvent_getGeofenceTransition,get geofence transition from geofencing event returns the transition type of the geofence transition aler. Return type is int and no argument. represents an event from the geofencing api api,source,source,source,source
7875,GeofencingEvent_getTriggeringGeofences,get triggering geofences from geofencing event returns a list of geofences that triggered this geofence transition aler. Return type is List and no argument. represents an event from the geofencing api api,source,source,source,source
7876,GeofencingEvent_getTriggeringLocation,get triggering location from geofencing event gets the location that triggered the geofence transitio. Return type is Location and no argument. represents an event from the geofencing api api,source,source,source,source
7877,GeofencingEvent_hasError,has error from geofencing event whether an error triggered this inten. Return type is boolean and no argument. represents an event from the geofencing api api,neither,neither,neither,neither
7878,GeofencingRequest_getGeofences,get geofences from geofencing request gets the list of geofences to be monitore. Return type is List and no argument. specifies the list of geofences to be monitored and how the geofence notifications should be reported,source,source,source,source
7879,GeofencingRequest_getInitialTrigger,get initial trigger from geofencing request gets the triggering behavior at the moment when the geofences are adde. Return type is int and no argument. specifies the list of geofences to be monitored and how the geofence notifications should be reported,source,source,source,neither
7880,GeofencingRequest_toString,to string from geofencing request . specifies the list of geofences to be monitored and how the geofence notifications should be reported,sink,sink,sink,sink
7881,GeofencingRequest_writeToParcel,write to parcel from geofencing request . specifies the list of geofences to be monitored and how the geofence notifications should be reported,sink,sink,sink,sink
7882,GeofencingRequest.Builder_addGeofence,add geofence from geofencing request builder adds a geofence to be monitored by geofencing servic. Return type is Geofencing Request. Builder and parameters are geofence. a builder that builds geofencing request pendin,neither,neither,neither,sink
7883,GeofencingRequest.Builder_addGeofences,add geofences from geofencing request builder adds all the geofences in the given list to be monitored by geofencing servic. Return type is Geofencing Request. Builder and parameters are list. a builder that builds geofencing request pendin,neither,sink,neither,sink
7884,GeofencingRequest.Builder_build,build from geofencing request builder builds the geofencing request objec. Return type is Geofencing Request and no argument. a builder that builds geofencing request pendin,neither,neither,neither,neither
7885,GeofencingRequest.Builder_setInitialTrigger,set initial trigger from geofencing request builder sets the geofence notification behavior at the moment when the geofences are adde. Return type is Geofencing Request. Builder and parameters are int. a builder that builds geofencing request pendin,sink,sink,sink,sink
7886,LocationAvailability_equals,equals from location availability . status on the availability of location data,neither,neither,neither,neither
7887,LocationAvailability_extractLocationAvailability,extract location availability from location availability extracts the location availability from an inten. Return type is Location Availability and parameters are intent. status on the availability of location data,source,source,source,source
7888,LocationAvailability_hasLocationAvailability,has location availability from location availability returns true if an intent contains a location availabilit. Return type is  boolean and parameters are intent. status on the availability of location data,source,source,source,source
7889,LocationAvailability_hashCode,hash code from location availability . status on the availability of location data,source,source,source,source
7890,LocationAvailability_isLocationAvailable,is location available from location availability returns true if the device location is known and reasonably up to date within the hints requested by the active location request. Return type is boolean and no argument. status on the availability of location data,source,source,source,source
7891,LocationAvailability_toString,to string from location availability . status on the availability of location data,source,source,source,source
7892,LocationAvailability_writeToParcel,write to parcel from location availability . status on the availability of location data,sink,sink,sink,sink
7893,LocationCallback_onLocationAvailability,on location availability from location callback called when there is a change in the availability of location dat. Return type is void and parameters are location availability. used for receiving notifications from the fused location provider api when the device location has changed or can no longer be determined,neither,neither,neither,neither
7894,LocationCallback_onLocationResult,on location result from location callback called when device location information is availabl. Return type is void and parameters are location result. used for receiving notifications from the fused location provider api when the device location has changed or can no longer be determined,neither,neither,neither,neither
7895,LocationRequest_create,create from location request create a location request with default parameter. Return type is Location Request and no argument. a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,neither,sink
7896,LocationRequest_equals,equals from location request . a data object that contains quality of service parameters for requests to the fused location provider api,neither,neither,neither,sink
7897,LocationRequest_getExpirationTime,"get expiration time from location request get the request expiration time, in milliseconds since boo. Return type is long and no argument. a data object that contains quality of service parameters for requests to the fused location provider api",source,source,source,source
7898,LocationRequest_getFastestInterval,"get fastest interval from location request get the fastest interval of this request, in millisecond. Return type is long and no argument. a data object that contains quality of service parameters for requests to the fused location provider api",source,source,source,source
7899,LocationRequest_getInterval,"get interval from location request get the desired interval of this request, in millisecond. Return type is long and no argument. a data object that contains quality of service parameters for requests to the fused location provider api",source,source,source,source
7900,LocationRequest_getMaxWaitTime,get max wait time from location request gets the maximum wait time in milliseconds for location update. Return type is long and no argument. a data object that contains quality of service parameters for requests to the fused location provider api,source,source,source,source
7901,LocationRequest_getNumUpdates,get num updates from location request get the number of updates requeste. Return type is int and no argument. a data object that contains quality of service parameters for requests to the fused location provider api,source,source,source,source
7902,LocationRequest_getPriority,get priority from location request get the quality of the reques. Return type is int and no argument. a data object that contains quality of service parameters for requests to the fused location provider api,source,source,source,source
7903,LocationRequest_getSmallestDisplacement,get smallest displacement from location request get the minimum displacement between location updates in meters by default this is . Return type is float and no argument. a data object that contains quality of service parameters for requests to the fused location provider api,source,source,source,source
7904,LocationRequest_hashCode,hash code from location request . a data object that contains quality of service parameters for requests to the fused location provider api,neither,neither,neither,sink
7905,LocationRequest_isFastestIntervalExplicitlySet,is fastest interval explicitly set from location request returns whether or not the fastest interval was explicitly specified for the location reques. Return type is boolean and no argument. a data object that contains quality of service parameters for requests to the fused location provider api,source,source,source,sink
7906,LocationRequest_isWaitForAccurateLocation,"is wait for accurate location from location request returns whether the location services will wait a few seconds initially for accurate locations, if accurate locations cannot be computed on the device for p r i o r i t y_ h i g h_ a c c u r a c y request. Return type is boolean and no argument. a data object that contains quality of service parameters for requests to the fused location provider api",neither,neither,neither,sink
7907,LocationRequest_setExpirationDuration,"set expiration duration from location request set the duration of this request, in millisecond. Return type is Location Request and parameters are long. a data object that contains quality of service parameters for requests to the fused location provider api",sink,sink,sink,sink
7908,LocationRequest_setExpirationTime,"set expiration time from location request set the request expiration time, in millisecond since boo. Return type is Location Request and parameters are long. a data object that contains quality of service parameters for requests to the fused location provider api",sink,sink,sink,sink
7909,LocationRequest_setFastestInterval,"set fastest interval from location request explicitly set the fastest interval for location updates, in millisecond. Return type is Location Request and parameters are long. a data object that contains quality of service parameters for requests to the fused location provider api",sink,sink,sink,sink
7910,LocationRequest_setInterval,"set interval from location request set the desired interval for active location updates, in millisecond. Return type is Location Request and parameters are long. a data object that contains quality of service parameters for requests to the fused location provider api",sink,sink,sink,sink
7911,LocationRequest_setMaxWaitTime,set max wait time from location request sets the maximum wait time in milliseconds for location update. Return type is Location Request and parameters are long. a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,sink,sink
7912,LocationRequest_setNumUpdates,set num updates from location request set the number of location update. Return type is Location Request and parameters are int. a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,sink,sink
7913,LocationRequest_setPriority,set priority from location request set the priority of the reques. Return type is Location Request and parameters are int. a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,sink,sink
7914,LocationRequest_setSmallestDisplacement,set smallest displacement from location request set the minimum displacement between location updates in meters by default this is . Return type is Location Request and parameters are float. a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,sink,sink
7915,LocationRequest_setWaitForAccurateLocation,"set wait for accurate location from location request sets whether the client wants the locations services to wait a few seconds for accurate locations initially, when accurate locations could not be computed on the device immediately after p r i o r i t y_ h i g h_ a c c u r a c y request is mad. Return type is Location Request and parameters are boolean. a data object that contains quality of service parameters for requests to the fused location provider api",sink,sink,sink,sink
7916,LocationRequest_toString,to string from location request . a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,neither,sink
7917,LocationRequest_writeToParcel,write to parcel from location request . a data object that contains quality of service parameters for requests to the fused location provider api,sink,sink,sink,sink
7918,LocationResult_create,create from location result creates a location result for the given location. Return type is Location Result and parameters are list. a data class representing a geographic location result from the fused location provider,neither,neither,neither,neither
7919,LocationResult_equals,equals from location result . a data class representing a geographic location result from the fused location provider,neither,neither,neither,neither
7920,LocationResult_extractResult,extract result from location result extracts the location result from an inten. Return type is Location Result and parameters are intent. a data class representing a geographic location result from the fused location provider,source,source,source,neither
7921,LocationResult_getLastLocation,"get last location from location result returns the most recent location available in this result, or null if no locations are availabl. Return type is Location and no argument. a data class representing a geographic location result from the fused location provider",source,source,source,source
7922,LocationResult_getLocations,"get locations from location result returns locations computed, ordered from oldest to newes. Return type is List and no argument. a data class representing a geographic location result from the fused location provider",source,source,source,source
7923,LocationResult_hasResult,has result from location result returns true if an intent contains a location resul. Return type is  boolean and parameters are intent. a data class representing a geographic location result from the fused location provider,source,source,neither,neither
7924,LocationResult_hashCode,hash code from location result . a data class representing a geographic location result from the fused location provider,neither,neither,neither,neither
7925,LocationResult_toString,to string from location result . a data class representing a geographic location result from the fused location provider,sink,sink,neither,sink
7926,LocationResult_writeToParcel,write to parcel from location result . a data class representing a geographic location result from the fused location provider,sink,sink,sink,sink
7927,LocationServices_getFusedLocationProviderClient,get fused location provider client from location services create a new instance of fused location provider client for use in an activit. Return type is Fused Location Provider Client and parameters are activity. the main entry point for location services integration,source,source,source,source
7928,LocationServices_getFusedLocationProviderClient,get fused location provider client from location services create a new instance of fused location provider client for use in a non-activity contex. Return type is Fused Location Provider Client and parameters are context. the main entry point for location services integration,source,source,source,source
7929,LocationServices_getGeofencingClient,get geofencing client from location services create a new instance of geofencing client for use in an activit. Return type is Geofencing Client and parameters are activity. the main entry point for location services integration,source,source,source,source
7930,LocationServices_getGeofencingClient,get geofencing client from location services create a new instance of geofencing client for use in a non-activity contex. Return type is Geofencing Client and parameters are context. the main entry point for location services integration,source,source,source,source
7931,LocationServices_getSettingsClient,get settings client from location services create a new instance of settings client for use in a non-activity contex. Return type is Settings Client and parameters are context. the main entry point for location services integration,source,source,source,source
7932,LocationServices_getSettingsClient,get settings client from location services create a new instance of settings client for use in an activit. Return type is Settings Client and parameters are activity. the main entry point for location services integration,source,source,source,source
7933,LocationSettingsRequest_writeToParcel,write to parcel from location settings request . specifies the types of location services the client is interested in using,sink,sink,sink,sink
7934,LocationSettingsRequest.Builder_addAllLocationRequests,add all location requests from location settings request builder adds a collection of location requests that the client is interested i. Return type is Location Settings Request. Builder and parameters are collection. a builder that builds location settings request,sink,sink,sink,sink
7935,LocationSettingsRequest.Builder_addLocationRequest,add location request from location settings request builder adds one location request that the client is interested i. Return type is Location Settings Request. Builder and parameters are location request. a builder that builds location settings request,sink,sink,sink,sink
7936,LocationSettingsRequest.Builder_build,build from location settings request builder creates a location settings request that can be used with settings ap. Return type is Location Settings Request and no argument. a builder that builds location settings request,sink,sink,sink,sink
7937,LocationSettingsRequest.Builder_setAlwaysShow,set always show from location settings request builder whether or not location is required by the calling app in order to continu. Return type is Location Settings Request. Builder and parameters are boolean. a builder that builds location settings request,sink,sink,sink,sink
7938,LocationSettingsRequest.Builder_setNeedBle,set need ble from location settings request builder sets whether the client wants ble scan to be enable. Return type is Location Settings Request. Builder and parameters are boolean. a builder that builds location settings request,sink,sink,sink,sink
7939,LocationSettingsResponse_getLocationSettingsStates,get location settings states from location settings response retrieves the location settings state. Return type is Location Settings States and no argument. successful response of checking settings via settings api check location settings,source,source,source,source
7940,LocationSettingsResult_getLocationSettingsStates,"get location settings states from location settings result retrieves the location settings state. Return type is Location Settings States and no argument. result of checking settings via settings api check location settings, indicates whether a dialog should be shown to ask the user's consent to change their settings",source,source,source,source
7941,LocationSettingsResult_getStatus,"get status from location settings result . result of checking settings via settings api check location settings, indicates whether a dialog should be shown to ask the user's consent to change their settings",source,source,source,source
7942,LocationSettingsResult_writeToParcel,"write to parcel from location settings result . result of checking settings via settings api check location settings, indicates whether a dialog should be shown to ask the user's consent to change their settings",sink,sink,sink,sink
7943,LocationSettingsStates_fromIntent,from intent from location settings states retrieves the location settings states from the intent extra. Return type is Location Settings States and parameters are intent. stores the current states of all location related settings,source,source,source,sink
7944,LocationSettingsStates_isBlePresent,is ble present from location settings states whether ble is present on the devic. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,neither
7945,LocationSettingsStates_isBleUsable,is ble usable from location settings states whether ble is enabled and is usable by the ap. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,neither
7946,LocationSettingsStates_isGpsPresent,is gps present from location settings states whether gps provider is present on the devic. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,source
7947,LocationSettingsStates_isGpsUsable,is gps usable from location settings states whether gps provider is enabled and is usable by the ap. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,source
7948,LocationSettingsStates_isLocationPresent,is location present from location settings states whether location is present on the devic. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,neither
7949,LocationSettingsStates_isLocationUsable,is location usable from location settings states whether location is enabled and is usable by the ap. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,neither
7950,LocationSettingsStates_isNetworkLocationPresent,is network location present from location settings states whether network location provider is present on the devic. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,source
7951,LocationSettingsStates_isNetworkLocationUsable,is network location usable from location settings states whether network location provider is enabled and usable by the ap. Return type is boolean and no argument. stores the current states of all location related settings,source,source,source,source
7952,LocationSettingsStates_writeToParcel,write to parcel from location settings states . stores the current states of all location related settings,sink,sink,sink,sink
7953,SettingsClient_checkLocationSettings,check location settings from settings client checks if the relevant system settings are enabled on the device to carry out the desired location request. Return type is Task and parameters are location settings request. the main entry point for interacting with the location settings enabler a p is,source,source,source,source
7954,SleepClassifyEvent_equals,"equals from sleep classify event . represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",neither,neither,neither,neither
7955,SleepClassifyEvent_extractEvents,"extract events from sleep classify event extracts the sleep classify event from an inten. Return type is List and parameters are intent. represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",source,source,source,neither
7956,SleepClassifyEvent_getConfidence,"get confidence from sleep classify event returns a sleep confidence value between 0 and 10. Return type is int and no argument. represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",source,source,source,source
7957,SleepClassifyEvent_getLight,"get light from sleep classify event returns the brightness of the space around the device, based on the device's ambient light sensor reading. Return type is int and no argument. represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",source,source,source,source
7958,SleepClassifyEvent_getMotion,"get motion from sleep classify event returns the amount of device motion, based on the device's accelerometer reading. Return type is int and no argument. represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",source,source,source,source
7959,SleepClassifyEvent_getTimestampMillis,"get timestamp millis from sleep classify event returns the unix epoch time when the event happened, expressed as the number of milliseconds since 1/1/1970 ut. Return type is long and no argument. represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",source,source,source,source
7960,SleepClassifyEvent_hasEvents,"has events from sleep classify event checks whether the intent has any sleep classify even. Return type is  boolean and parameters are intent. represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",neither,neither,neither,neither
7961,SleepClassifyEvent_hashCode,"hash code from sleep classify event . represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",neither,neither,neither,neither
7962,SleepClassifyEvent_toString,"to string from sleep classify event . represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",neither,neither,neither,neither
7963,SleepClassifyEvent_writeToParcel,"write to parcel from sleep classify event . represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level",sink,sink,sink,sink
7964,SleepSegmentEvent_equals,equals from sleep segment event . represents the result of segmenting sleep after the user is awake,neither,neither,neither,neither
7965,SleepSegmentEvent_extractEvents,extract events from sleep segment event extract the detected sleep segment events from an inten. Return type is List and parameters are intent. represents the result of segmenting sleep after the user is awake,source,source,source,neither
7966,SleepSegmentEvent_getEndTimeMillis,"get end time millis from sleep segment event if the status is s t a t u s_ s u c c e s s or s t a t u s_ m i s s i n g_ d a t a, this method returns the unix epoch time for the moment when the system detects that the user stops sleeping and wakes u. Return type is long and no argument. represents the result of segmenting sleep after the user is awake",source,source,source,source
7967,SleepSegmentEvent_getSegmentDurationMillis,"get segment duration millis from sleep segment event the amount of elapsed time, in milliseconds, that the system detected that the user was asleep based on the device sensor dat. Return type is long and no argument. represents the result of segmenting sleep after the user is awake",source,source,source,source
7968,SleepSegmentEvent_getStartTimeMillis,"get start time millis from sleep segment event if the status is s t a t u s_ s u c c e s s or s t a t u s_ m i s s i n g_ d a t a, this method returns the unix epoch tim. Return type is long and no argument. represents the result of segmenting sleep after the user is awake",source,source,source,source
7969,SleepSegmentEvent_getStatus,get status from sleep segment event get a status code that indicates whether the system succeeded in detecting sleep and gathering sleep dat. Return type is int and no argument. represents the result of segmenting sleep after the user is awake,source,source,source,source
7970,SleepSegmentEvent_hasEvents,has events from sleep segment event check whether the intent has any sleep segment even. Return type is  boolean and parameters are intent. represents the result of segmenting sleep after the user is awake,neither,neither,source,neither
7971,SleepSegmentEvent_hashCode,hash code from sleep segment event . represents the result of segmenting sleep after the user is awake,neither,neither,neither,neither
7972,SleepSegmentEvent_toString,to string from sleep segment event . represents the result of segmenting sleep after the user is awake,neither,neither,neither,neither
7973,SleepSegmentEvent_writeToParcel,write to parcel from sleep segment event . represents the result of segmenting sleep after the user is awake,sink,sink,sink,sink
7974,SleepSegmentRequest_equals,equals from sleep segment request . a request object that specifies what data to receive from the sleep api,neither,neither,neither,neither
7975,SleepSegmentRequest_getDefaultSleepSegmentRequest,get default sleep segment request from sleep segment request creates a default request that registers for both sleep segment event and sleep classify event dat. Return type is Sleep Segment Request and no argument. a request object that specifies what data to receive from the sleep api,source,source,source,source
7976,SleepSegmentRequest_getRequestedDataType,"get requested data type from sleep segment request returns the requested data type, which is one of s e g m e n t_ a n d_ c l a s s i f y_ e v e n t s, s e g m e n t_ e v e n t s_ o n l y, or c l a s s i f y_ e v e n t s_ o n l. Return type is int and no argument. a request object that specifies what data to receive from the sleep api",source,source,source,source
7977,SleepSegmentRequest_hashCode,hash code from sleep segment request . a request object that specifies what data to receive from the sleep api,neither,neither,neither,neither
7978,SleepSegmentRequest_writeToParcel,write to parcel from sleep segment request . a request object that specifies what data to receive from the sleep api,sink,sink,sink,sink
7979,ActivityRecognitionApi_removeActivityUpdates,remove activity updates from activity recognition api removes all activity updates for the specified pending inten. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use the google api based api activity recognition client instead,neither,neither,neither,neither
7980,ActivityRecognitionApi_requestActivityUpdates,request activity updates from activity recognition api register for activity recognition update. Return type is Pending Result and parameters are google api client long pending intent. this interface is deprecated  use the google api based api activity recognition client instead,source,source,neither,source
7981,FusedLocationProviderApi_flushLocations,"flush locations from fused location provider api flushes any locations currently being batched and sends them to all registered location listeners, location callbacks, and pending intent. Return type is Pending Result and parameters are google api client. this interface is deprecated  use the google api based api fused location provider client instead",sink,sink,neither,sink
7982,FusedLocationProviderApi_getLastLocation,get last location from fused location provider api returns the best most recent location currently availabl. Return type is Location and parameters are google api client. this interface is deprecated  use the google api based api fused location provider client instead,source,source,source,source
7983,FusedLocationProviderApi_getLocationAvailability,get location availability from fused location provider api returns the availability of location dat. Return type is Location Availability and parameters are google api client. this interface is deprecated  use the google api based api fused location provider client instead,source,source,source,source
7984,FusedLocationProviderApi_removeLocationUpdates,remove location updates from fused location provider api removes all location updates for the given pending inten. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use the google api based api fused location provider client instead,neither,neither,neither,sink
7985,FusedLocationProviderApi_removeLocationUpdates,remove location updates from fused location provider api removes all location updates for the given location listene. Return type is Pending Result and parameters are google api client location listener. this interface is deprecated  use the google api based api fused location provider client instead,neither,neither,neither,neither
7986,FusedLocationProviderApi_removeLocationUpdates,remove location updates from fused location provider api removes all location updates for the given location result listene. Return type is Pending Result and parameters are google api client location callback. this interface is deprecated  use the google api based api fused location provider client instead,neither,neither,neither,neither
7987,FusedLocationProviderApi_requestLocationUpdates,request location updates from fused location provider api requests location update. Return type is Pending Result and parameters are google api client location request location listener. this interface is deprecated  use the google api based api fused location provider client instead,sink,sink,neither,sink
7988,FusedLocationProviderApi_requestLocationUpdates,request location updates from fused location provider api requests location updates with a callback on the specified looper threa. Return type is Pending Result and parameters are google api client location request location callback looper. this interface is deprecated  use the google api based api fused location provider client instead,neither,neither,neither,sink
7989,FusedLocationProviderApi_requestLocationUpdates,request location updates from fused location provider api requests location updates with a callback on the specified looper threa. Return type is Pending Result and parameters are google api client location request location listener looper. this interface is deprecated  use the google api based api fused location provider client instead,neither,neither,neither,sink
7990,FusedLocationProviderApi_requestLocationUpdates,request location updates from fused location provider api requests location updates with a callback on the specified pending inten. Return type is Pending Result and parameters are google api client location request pending intent. this interface is deprecated  use the google api based api fused location provider client instead,neither,sink,neither,sink
7991,FusedLocationProviderApi_setMockLocation,set mock location from fused location provider api sets the mock location to be used for the location provide. Return type is Pending Result and parameters are google api client location. this interface is deprecated  use the google api based api fused location provider client instead,sink,sink,sink,sink
7992,FusedLocationProviderApi_setMockMode,set mock mode from fused location provider api sets whether or not the location provider is in mock mod. Return type is Pending Result and parameters are google api client boolean. this interface is deprecated  use the google api based api fused location provider client instead,sink,sink,sink,sink
7993,Geofence_getRequestId,"get request id from geofence returns the request id of this geofenc. Return type is String and no argument. represents a geographical region, also known as a geofence",source,source,source,source
7994,GeofencingApi_addGeofences,add geofences from geofencing api sets alerts to be notified when the device enters or exits one of the specified geofence. Return type is Pending Result and parameters are google api client geofencing request pending intent. this interface is deprecated  use the google api based api geofencing client instead,neither,neither,neither,sink
7995,GeofencingApi_addGeofences,add geofences from geofencing api deprecate. Return type is Pending Result and parameters are google api client list pending intent. this interface is deprecated  use the google api based api geofencing client instead,neither,neither,neither,sink
7996,GeofencingApi_removeGeofences,remove geofences from geofencing api removes geofences by their request id. Return type is Pending Result and parameters are google api client list. this interface is deprecated  use the google api based api geofencing client instead,neither,neither,neither,neither
7997,GeofencingApi_removeGeofences,remove geofences from geofencing api removes all geofences associated with the given pending inten. Return type is Pending Result and parameters are google api client pending intent. this interface is deprecated  use the google api based api geofencing client instead,neither,neither,neither,neither
7998,LocationListener_onLocationChanged,on location changed from location listener called when the location has change. Return type is  void and parameters are location. used for receiving notifications from the fused location provider api when the location has changed,neither,neither,neither,neither
7999,SettingsApi_checkLocationSettings,check location settings from settings api checks if the relevant system settings are enabled on the device to carry out the desired location request. Return type is Pending Result and parameters are google api client location settings request. this interface is deprecated  use google api based api settings client instead,source,source,source,source
8000,ActivityTransition.Builder_build,build from activity transition builder builds a activity transition objec. Return type is Activity Transition and no argument. the builder to help create an activity transition object,neither,neither,neither,neither
8001,ActivityTransition.Builder_setActivityTransition,set activity transition from activity transition builder adds an interested transition typ. Return type is Activity Transition. Builder and parameters are int. the builder to help create an activity transition object,sink,sink,sink,sink
8002,ActivityTransition.Builder_setActivityType,set activity type from activity transition builder sets the type of the activity to be detecte. Return type is Activity Transition. Builder and parameters are int. the builder to help create an activity transition object,sink,sink,sink,sink
8003,GeofencingRequest.Builder_addGeofence,add geofence from geofencing request builder adds a geofence to be monitored by geofencing servic. Return type is Geofencing Request. Builder and parameters are geofence. a builder that builds geofencing request pendin,neither,neither,neither,sink
8004,GeofencingRequest.Builder_addGeofences,add geofences from geofencing request builder adds all the geofences in the given list to be monitored by geofencing servic. Return type is Geofencing Request. Builder and parameters are list. a builder that builds geofencing request pendin,neither,sink,neither,sink
8005,GeofencingRequest.Builder_build,build from geofencing request builder builds the geofencing request objec. Return type is Geofencing Request and no argument. a builder that builds geofencing request pendin,neither,neither,neither,neither
8006,GeofencingRequest.Builder_setInitialTrigger,set initial trigger from geofencing request builder sets the geofence notification behavior at the moment when the geofences are adde. Return type is Geofencing Request. Builder and parameters are int. a builder that builds geofencing request pendin,sink,sink,sink,sink
8007,LocationSettingsRequest.Builder_addAllLocationRequests,add all location requests from location settings request builder adds a collection of location requests that the client is interested i. Return type is Location Settings Request. Builder and parameters are collection. a builder that builds location settings request,sink,sink,sink,sink
8008,LocationSettingsRequest.Builder_addLocationRequest,add location request from location settings request builder adds one location request that the client is interested i. Return type is Location Settings Request. Builder and parameters are location request. a builder that builds location settings request,sink,sink,sink,sink
8009,LocationSettingsRequest.Builder_build,build from location settings request builder creates a location settings request that can be used with settings ap. Return type is Location Settings Request and no argument. a builder that builds location settings request,sink,sink,sink,sink
8010,LocationSettingsRequest.Builder_setAlwaysShow,set always show from location settings request builder whether or not location is required by the calling app in order to continu. Return type is Location Settings Request. Builder and parameters are boolean. a builder that builds location settings request,sink,sink,sink,sink
8011,LocationSettingsRequest.Builder_setNeedBle,set need ble from location settings request builder sets whether the client wants ble scan to be enable. Return type is Location Settings Request. Builder and parameters are boolean. a builder that builds location settings request,sink,sink,sink,sink
8012,Geofence.Builder_build,build from geofence builder creates a geofence objec. Return type is Geofence and no argument. a builder that builds geofence,neither,neither,neither,neither
8013,Geofence.Builder_setCircularRegion,set circular region from geofence builder sets the region of this geofenc. Return type is Geofence. Builder and parameters are double double float. a builder that builds geofence,sink,sink,sink,sink
8014,Geofence.Builder_setExpirationDuration,set expiration duration from geofence builder sets the expiration duration of geofenc. Return type is Geofence. Builder and parameters are long. a builder that builds geofence,sink,sink,sink,sink
8015,Geofence.Builder_setLoiteringDelay,set loitering delay from geofence builder sets the delay between g e o f e n c e_ t r a n s i t i o n_ e n t e r and g e o f e n c e_ t r a n s i t i o n_ d w e l l i n g in millisecond. Return type is Geofence. Builder and parameters are int. a builder that builds geofence,sink,sink,sink,sink
8016,Geofence.Builder_setNotificationResponsiveness,set notification responsiveness from geofence builder sets the best-effort notification responsiveness of the geofenc. Return type is Geofence. Builder and parameters are int. a builder that builds geofence,sink,sink,sink,sink
8017,Geofence.Builder_setRequestId,set request id from geofence builder sets the request id of the geofenc. Return type is Geofence. Builder and parameters are string. a builder that builds geofence,sink,sink,sink,sink
8018,Geofence.Builder_setTransitionTypes,set transition types from geofence builder sets the transition types of interes. Return type is Geofence. Builder and parameters are int. a builder that builds geofence,sink,sink,sink,sink
8019,OssLicensesActivity_onCreate,on create from oss licenses activity . an activity used to display the actual content of a license in res/raw/third_party_licenses generated by oss licenses gradle plugin,neither,neither,neither,neither
8020,OssLicensesActivity_onOptionsItemSelected,on options item selected from oss licenses activity . an activity used to display the actual content of a license in res/raw/third_party_licenses generated by oss licenses gradle plugin,neither,neither,neither,neither
8021,OssLicensesActivity_onRestoreInstanceState,on restore instance state from oss licenses activity . an activity used to display the actual content of a license in res/raw/third_party_licenses generated by oss licenses gradle plugin,neither,neither,neither,neither
8022,OssLicensesActivity_onSaveInstanceState,on save instance state from oss licenses activity . an activity used to display the actual content of a license in res/raw/third_party_licenses generated by oss licenses gradle plugin,sink,neither,neither,neither
8023,OssLicensesMenuActivity_onCreateLoader,on create loader from oss licenses menu activity . an activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin,neither,neither,neither,neither
8024,OssLicensesMenuActivity_onDestroy,on destroy from oss licenses menu activity . an activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin,neither,neither,neither,neither
8025,OssLicensesMenuActivity_onLoadFinished,on load finished from oss licenses menu activity . an activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin,neither,neither,neither,neither
8026,OssLicensesMenuActivity_onLoaderReset,on loader reset from oss licenses menu activity . an activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin,neither,neither,neither,neither
8027,OssLicensesMenuActivity_onOptionsItemSelected,on options item selected from oss licenses menu activity . an activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin,neither,neither,neither,neither
8028,OssLicensesMenuActivity_setActivityTitle,set activity title from oss licenses menu activity sets the title for oss licenses menu activit. Return type is  void and parameters are string. an activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin,sink,sink,sink,neither
8029,GoogleSignIn_getAccountForExtension,get account for extension from google sign in gets a google sign in account object to use with other authenticated api. Return type is Google Sign In Account and parameters are context google sign in options extension. entry point for the google sign in api,source,source,source,source
8030,GoogleSignIn_getAccountForScopes,get account for scopes from google sign in gets a google sign in account object to use with other authenticated api. Return type is Google Sign In Account and parameters are context scope scope   . entry point for the google sign in api,source,source,source,source
8031,GoogleSignIn_getClient,get client from google sign in create a new instance of google sign in clien. Return type is Google Sign In Client and parameters are context google sign in options. entry point for the google sign in api,source,source,source,source
8032,GoogleSignIn_getClient,get client from google sign in create a new instance of google sign in clien. Return type is Google Sign In Client and parameters are activity google sign in options. entry point for the google sign in api,source,source,source,source
8033,GoogleSignIn_getLastSignedInAccount,get last signed in account from google sign in gets the last account that the user signed in wit. Return type is Google Sign In Account and parameters are context. entry point for the google sign in api,source,source,source,source
8034,GoogleSignIn_getSignedInAccountFromIntent,get signed in account from intent from google sign in returns a google sign in account present in the result data for the associated activity started via google sign in clientget sign in inte. Return type is Task and parameters are intent. entry point for the google sign in api,source,source,source,source
8035,GoogleSignIn_hasPermissions,has permissions from google sign in determines if the given account has been granted permission to all scopes associated with the given extensio. Return type is  boolean and parameters are google sign in account google sign in options extension. entry point for the google sign in api,source,source,source,source
8036,GoogleSignIn_hasPermissions,has permissions from google sign in determines if the given account has been granted permission to all given scope. Return type is  boolean and parameters are google sign in account scope   . entry point for the google sign in api,source,source,source,source
8037,GoogleSignIn_requestPermissions,request permissions from google sign in requests a collection of permissions to be granted to the given accoun. Return type is  void and parameters are activity int google sign in account scope   . entry point for the google sign in api,source,source,source,source
8038,GoogleSignIn_requestPermissions,request permissions from google sign in requests a collection of permissions associated with the given extension to be granted to the given accoun. Return type is  void and parameters are activity int google sign in account google sign in options extension. entry point for the google sign in api,source,source,source,source
8039,GoogleSignIn_requestPermissions,request permissions from google sign in see request permissio. Return type is  void and parameters are fragment int google sign in account google sign in options extension. entry point for the google sign in api,source,source,source,source
8040,GoogleSignIn_requestPermissions,request permissions from google sign in see request permissio. Return type is  void and parameters are fragment int google sign in account scope   . entry point for the google sign in api,source,source,source,source
8041,GoogleSignInClient_getSignInIntent,get sign in intent from google sign in client gets an intent to start the google sign in flow by calling activitystart activity for resu. Return type is Intent and no argument. a client for interacting with the google sign in api,source,source,source,source
8042,GoogleSignInClient_revokeAccess,revoke access from google sign in client revokes access given to the current applicatio. Return type is Task and no argument. a client for interacting with the google sign in api,neither,neither,neither,neither
8043,GoogleSignInClient_signOut,sign out from google sign in client signs out the current signed-in user if an. Return type is Task and no argument. a client for interacting with the google sign in api,neither,neither,neither,source
8044,GoogleSignInClient_silentSignIn,silent sign in from google sign in client returns the err. Return type is Task and no argument. a client for interacting with the google sign in api,neither,neither,neither,source
8045,GoogleSignInResult_getSignInAccount,get sign in account from google sign in result returns a err. Return type is Google Sign In Account and no argument. google sign in results are result implementations that potentially contain a error,source,source,source,source
8046,GoogleSignInResult_getStatus,get status from google sign in result returns a status object indicating the status of the sign in attemp. Return type is Status and no argument. google sign in results are result implementations that potentially contain a error,source,source,source,source
8047,GoogleSignInResult_isSuccess,is success from google sign in result convenient method to help you tell if sign-in completed successfull. Return type is boolean and no argument. google sign in results are result implementations that potentially contain a error,source,neither,neither,source
8048,GoogleSignInAccount_equals,equals from google sign in account . class that holds the basic account information of the signed in google user,neither,neither,source,neither
8049,GoogleSignInAccount_getAccount,get account from google sign in account a convenient wrapper for get ema. Return type is Account and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8050,GoogleSignInAccount_getDisplayName,get display name from google sign in account returns the display name of the signed in user if you built your configuration starting from new google sign in options build. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8051,GoogleSignInAccount_getEmail,get email from google sign in account returns the email address of the signed in user if google sign in options builderrequest ema. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8052,GoogleSignInAccount_getFamilyName,get family name from google sign in account returns the family name of the signed in user if you built your configuration starting from new google sign in options build. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8053,GoogleSignInAccount_getGivenName,get given name from google sign in account returns the given name of the signed in user if you built your configuration starting from new google sign in options build. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8054,GoogleSignInAccount_getGrantedScopes,get granted scopes from google sign in account returns all scopes that have been authorized to your applicatio. Return type is Set and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8055,GoogleSignInAccount_getId,get id from google sign in account returns the unique id for the google account if you built your configuration starting from new google sign in options build. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8056,GoogleSignInAccount_getIdToken,get id token from google sign in account returns an id token that you can send to your server if google sign in options builderrequest id tok. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8057,GoogleSignInAccount_getPhotoUrl,get photo url from google sign in account returns the photo url of the signed in user if the user has a profile picture and you built your configuration either starting from new google sign in options build. Return type is Uri and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8058,GoogleSignInAccount_getServerAuthCode,get server auth code from google sign in account returns a one-time server auth code to send to your web server which can be exchanged for access token and sometimes refresh token if google sign in options builderrequest server auth co. Return type is String and no argument. class that holds the basic account information of the signed in google user,source,source,source,source
8059,GoogleSignInAccount_hashCode,hash code from google sign in account . class that holds the basic account information of the signed in google user,source,source,source,source
8060,GoogleSignInAccount_writeToParcel,write to parcel from google sign in account . class that holds the basic account information of the signed in google user,sink,sink,sink,sink
8061,GoogleSignInStatusCodes_getStatusCodeString,"get status code string from google sign in status codes returns an untranslated debu. Return type is String and parameters are int. google sign in specific status codes, for use in status#get status code",source,source,source,source
8062,GoogleSignInOptions_equals,equals from google sign in options . google sign in options contains options used to configure the auth g o o g l e_ s i g n_ i n_ a p i,neither,neither,source,neither
8063,GoogleSignInOptions_getScopeArray,get scope array from google sign in options gets an array of all the requested scope. Return type is Scope[] and no argument. google sign in options contains options used to configure the auth g o o g l e_ s i g n_ i n_ a p i,source,source,source,source
8064,GoogleSignInOptions_hashCode,hash code from google sign in options . google sign in options contains options used to configure the auth g o o g l e_ s i g n_ i n_ a p i,source,source,source,source
8065,GoogleSignInOptions_writeToParcel,write to parcel from google sign in options . google sign in options contains options used to configure the auth g o o g l e_ s i g n_ i n_ a p i,sink,sink,sink,sink
8066,GoogleSignInOptions.Builder_addExtension,add extension from google sign in options builder specifies additional sign-in options via the given extensio. Return type is Google Sign In Options. Builder and parameters are google sign in options extension. builder for google sign in options,neither,sink,neither,sink
8067,GoogleSignInOptions.Builder_build,build from google sign in options builder builds the google sign in options objec. Return type is Google Sign In Options and no argument. builder for google sign in options,neither,neither,neither,neither
8068,GoogleSignInOptions.Builder_requestEmail,request email from google sign in options builder specifies that email info is requested by your applicatio. Return type is Google Sign In Options. Builder and no argument. builder for google sign in options,source,source,source,source
8069,GoogleSignInOptions.Builder_requestId,request id from google sign in options builder specifies that user id is requested by your applicatio. Return type is Google Sign In Options. Builder and no argument. builder for google sign in options,source,source,source,source
8070,GoogleSignInOptions.Builder_requestIdToken,request id token from google sign in options builder specifies that an id token for authenticated users is requeste. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,source,source,source,source
8071,GoogleSignInOptions.Builder_requestProfile,request profile from google sign in options builder specifies that user's profile info is requested by your applicatio. Return type is Google Sign In Options. Builder and no argument. builder for google sign in options,source,source,source,source
8072,GoogleSignInOptions.Builder_requestScopes,request scopes from google sign in options builder specifies o auth 20 scopes your application request. Return type is Google Sign In Options. Builder and parameters are scope scope   . builder for google sign in options,neither,neither,source,neither
8073,GoogleSignInOptions.Builder_requestServerAuthCode,request server auth code from google sign in options builder specifies that offline access is requeste. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,source,source,source,source
8074,GoogleSignInOptions.Builder_requestServerAuthCode,request server auth code from google sign in options builder specifies that offline access is requeste. Return type is Google Sign In Options. Builder and parameters are string boolean. builder for google sign in options,source,source,source,source
8075,GoogleSignInOptions.Builder_setAccountName,set account name from google sign in options builder specifies an account name on the device that should be use. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,sink,sink,sink,sink
8076,GoogleSignInOptions.Builder_setHostedDomain,set hosted domain from google sign in options builder specifies a hosted domain restrictio. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,sink,sink,sink,sink
8077,RevocationBoundService_onBind,on bind from revocation bound service . handles google sign in user revocation,neither,neither,neither,neither
8078,GoogleSignInApi_getSignInIntent,get sign in intent from google sign in api gets an intent to start the google sign in flow by calling activitystart activity for resu. Return type is Intent and parameters are google api client. api interface for sign in with google,source,source,source,source
8079,GoogleSignInApi_getSignInResultFromIntent,get sign in result from intent from google sign in api helper function to extract out google sign in result from the activityon activity resu. Return type is Google Sign In Result and parameters are intent. api interface for sign in with google,source,source,source,source
8080,GoogleSignInApi_revokeAccess,revoke access from google sign in api revokes access given to the current applicatio. Return type is Pending Result and parameters are google api client. api interface for sign in with google,neither,neither,neither,source
8081,GoogleSignInApi_signOut,sign out from google sign in api signs out the current signed-in user if an. Return type is Pending Result and parameters are google api client. api interface for sign in with google,neither,neither,neither,source
8082,GoogleSignInApi_silentSignIn,silent sign in from google sign in api returns the err. Return type is Optional Pending Result and parameters are google api client. api interface for sign in with google,source,neither,source,source
8083,GoogleSignInOptions.Builder_addExtension,add extension from google sign in options builder specifies additional sign-in options via the given extensio. Return type is Google Sign In Options. Builder and parameters are google sign in options extension. builder for google sign in options,neither,sink,neither,sink
8084,GoogleSignInOptions.Builder_build,build from google sign in options builder builds the google sign in options objec. Return type is Google Sign In Options and no argument. builder for google sign in options,neither,neither,neither,neither
8085,GoogleSignInOptions.Builder_requestEmail,request email from google sign in options builder specifies that email info is requested by your applicatio. Return type is Google Sign In Options. Builder and no argument. builder for google sign in options,source,source,source,source
8086,GoogleSignInOptions.Builder_requestId,request id from google sign in options builder specifies that user id is requested by your applicatio. Return type is Google Sign In Options. Builder and no argument. builder for google sign in options,source,source,source,source
8087,GoogleSignInOptions.Builder_requestIdToken,request id token from google sign in options builder specifies that an id token for authenticated users is requeste. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,source,source,source,source
8088,GoogleSignInOptions.Builder_requestProfile,request profile from google sign in options builder specifies that user's profile info is requested by your applicatio. Return type is Google Sign In Options. Builder and no argument. builder for google sign in options,source,source,source,source
8089,GoogleSignInOptions.Builder_requestScopes,request scopes from google sign in options builder specifies o auth 20 scopes your application request. Return type is Google Sign In Options. Builder and parameters are scope scope   . builder for google sign in options,neither,neither,source,neither
8090,GoogleSignInOptions.Builder_requestServerAuthCode,request server auth code from google sign in options builder specifies that offline access is requeste. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,source,source,source,source
8091,GoogleSignInOptions.Builder_requestServerAuthCode,request server auth code from google sign in options builder specifies that offline access is requeste. Return type is Google Sign In Options. Builder and parameters are string boolean. builder for google sign in options,source,source,source,source
8092,GoogleSignInOptions.Builder_setAccountName,set account name from google sign in options builder specifies an account name on the device that should be use. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,sink,sink,sink,sink
8093,GoogleSignInOptions.Builder_setHostedDomain,set hosted domain from google sign in options builder specifies a hosted domain restrictio. Return type is Google Sign In Options. Builder and parameters are string. builder for google sign in options,sink,sink,sink,sink
8094,Adapter_getSDKVersionInfo,get s d k version info from adapter returns the version of the third party sdk built into the ap. Return type is Version Info and no argument. adapter for third party ad networks,source,source,source,source
8095,Adapter_getVersionInfo,get version info from adapter returns the version of the mediation adapte. Return type is Version Info and no argument. adapter for third party ad networks,source,source,source,source
8096,Adapter_initialize,initialize from adapter called by the google mobile ads sdk to initialize a third party adapter and sd. Return type is  void and parameters are context initialization complete callback list. adapter for third party ad networks,neither,neither,neither,sink
8097,Adapter_loadBannerAd,load banner ad from adapter called by the google mobile ads sdk to begin loading a third party banner ad given a mediation ad configuration used to load the winning ad from a mediation reques. Return type is void and parameters are mediation banner ad configuration mediation ad load callback< mediation banner ad mediation banner ad callback>. adapter for third party ad networks,neither,neither,neither,neither
8098,Adapter_loadInterscrollerAd,load interscroller ad from adapter called by the google mobile ads sdk to begin loading a third party interscroller ad given a mediation ad configuration used to load the winning ad from a mediation reques. Return type is void and parameters are mediation banner ad configuration mediation ad load callback< mediation interscroller ad mediation banner ad callback>. adapter for third party ad networks,neither,neither,neither,neither
8099,Adapter_loadInterstitialAd,load interstitial ad from adapter called by the google mobile ads sdk to begin loading a third party interstitial ad given a mediation ad configuration used to load the winning ad from a mediation reques. Return type is void and parameters are mediation interstitial ad configuration mediation ad load callback< mediation interstitial ad mediation interstitial ad callback>. adapter for third party ad networks,neither,neither,neither,neither
8100,Adapter_loadNativeAd,load native ad from adapter called by the google mobile ads sdk to begin loading a third party native ad given a mediation ad configuration used to load the winning ad from a mediation reques. Return type is void and parameters are mediation native ad configuration mediation ad load callback< unified native ad mapper mediation native ad callback>. adapter for third party ad networks,neither,neither,neither,neither
8101,Adapter_loadRewardedAd,load rewarded ad from adapter called by the google mobile ads sdk to begin loading a third party rewarded ad given a mediation ad configuration used to load the winning ad from a mediation reques. Return type is void and parameters are mediation rewarded ad configuration mediation ad load callback< mediation rewarded ad mediation rewarded ad callback>. adapter for third party ad networks,neither,neither,neither,neither
8102,Adapter_loadRewardedInterstitialAd,load rewarded interstitial ad from adapter called by the google mobile ads sdk to begin loading a third party rewarded interstitial ad given a mediation ad configuration used to load the winning ad from a mediation reques. Return type is void and parameters are mediation rewarded ad configuration mediation ad load callback< mediation rewarded ad mediation rewarded ad callback>. adapter for third party ad networks,neither,neither,neither,neither
8103,MediationAdConfiguration_getBidResponse,get bid response from mediation ad configuration the encrypted data from the third party server containing information the third party sdk needs to render an a. Return type is String and no argument. data used to render mediation ads,source,source,source,source
8104,MediationAdConfiguration_getContext,get context from mediation ad configuration the context passed by this publisher for this specific reques. Return type is Context and no argument. data used to render mediation ads,source,source,source,neither
8105,MediationAdConfiguration_getLocation,"get location from mediation ad configuration returns the location of the user, if defined by the ad reques. Return type is Location and no argument. data used to render mediation ads",source,source,source,neither
8106,MediationAdConfiguration_getMaxAdContentRating,get max ad content rating from mediation ad configuration returns the maximum ad content rating for this reques. Return type is String and no argument. data used to render mediation ads,source,source,source,source
8107,MediationAdConfiguration_getMediationExtras,get mediation extras from mediation ad configuration additional parameters passed in by the publisher for this specific reques. Return type is Bundle and no argument. data used to render mediation ads,source,source,source,neither
8108,MediationAdConfiguration_getServerParameters,get server parameters from mediation ad configuration parameters defined by the publisher in the ad mob or google ad manager u. Return type is Bundle and no argument. data used to render mediation ads,source,source,source,source
8109,MediationAdConfiguration_getWatermark,get watermark from mediation ad configuration returns a base64-encoded watermark png file that identifies the source of the a. Return type is String and no argument. data used to render mediation ads,source,source,source,source
8110,MediationAdConfiguration_isTestRequest,is test request from mediation ad configuration returns true if the publisher is asking for test ad. Return type is boolean and no argument. data used to render mediation ads,neither,neither,source,neither
8111,MediationAdConfiguration_taggedForChildDirectedTreatment,tagged for child directed treatment from mediation ad configuration returns whether the publisher indicated that the app is to be treated as child-directed for purposes of the children’s online privacy protection ac. Return type is int and no argument. data used to render mediation ads,source,source,source,neither
8112,MediationAdConfiguration_taggedForUnderAgeTreatment,tagged for under age treatment from mediation ad configuration returns whether the publisher indicated that the ad request should receive treatment for users in the european economic are. Return type is int and no argument. data used to render mediation ads,source,neither,source,neither
8113,MediationBannerAdConfiguration_getAdSize,get ad size from mediation banner ad configuration returns the ad size associated with the banner ad reques. Return type is Ad Size and no argument. data used to render mediation banner ads,source,source,source,source
8114,MediationConfiguration_getFormat,get format from mediation configuration returns the ad format associated with the configuratio. Return type is Ad Format and no argument. contains a mediation configuration set by the publisher in the ad mob or dfp ui,source,source,source,source
8115,MediationConfiguration_getServerParameters,get server parameters from mediation configuration returns the settings set by the publisher in the u. Return type is Bundle and no argument. contains a mediation configuration set by the publisher in the ad mob or dfp ui,source,source,source,source
8116,MediationNativeAdConfiguration_getNativeAdOptions,get native ad options from mediation native ad configuration returns the native ad options for this ad reques. Return type is Native Ad Options and no argument. data used to render mediation native ads,source,source,source,source
8117,UnifiedNativeAdMapper_getAdChoicesContent,get ad choices content from unified native ad mapper returns the view being used as ad choices conten. Return type is View and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8118,UnifiedNativeAdMapper_getAdvertiser,get advertiser from unified native ad mapper returns the text that identifies the advertise. Return type is String and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8119,UnifiedNativeAdMapper_getBody,get body from unified native ad mapper returns body tex. Return type is String and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8120,UnifiedNativeAdMapper_getCallToAction,get call to action from unified native ad mapper returns the text that encourages the user to take some action with the a. Return type is String and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8121,UnifiedNativeAdMapper_getCurrentTime,get current time from unified native ad mapper gets the video's current tim. Return type is float and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8122,UnifiedNativeAdMapper_getDuration,get duration from unified native ad mapper gets the video's duratio. Return type is float and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8123,UnifiedNativeAdMapper_getExtras,get extras from unified native ad mapper returns the bundle of extras passed in via the set extras metho. Return type is Bundle and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8124,UnifiedNativeAdMapper_getHeadline,get headline from unified native ad mapper returns the primary text headlin. Return type is String and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8125,UnifiedNativeAdMapper_getIcon,get icon from unified native ad mapper returns a small image identifying the advertise. Return type is Native Ad. Image and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8126,UnifiedNativeAdMapper_getImages,get images from unified native ad mapper returns a list of large image. Return type is List and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8127,UnifiedNativeAdMapper_getMediaContentAspectRatio,get media content aspect ratio from unified native ad mapper returns the aspect ratio of the media to be rendered in the media vie. Return type is float and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8128,UnifiedNativeAdMapper_getOverrideClickHandling,get override click handling from unified native ad mapper returns true if the ad network does click handling on its ow. Return type is final boolean and no argument. mapping class for google ad mob unified native ads,source,source,source,neither
8129,UnifiedNativeAdMapper_getOverrideImpressionRecording,get override impression recording from unified native ad mapper returns true if the ad network does impression tracking on its ow. Return type is final boolean and no argument. mapping class for google ad mob unified native ads,source,source,source,source
8130,UnifiedNativeAdMapper_getPrice,"get price from unified native ad mapper for ads about apps, returns a string representing how much the app cost. Return type is String and no argument. mapping class for google ad mob unified native ads",source,source,source,source
8131,UnifiedNativeAdMapper_getStarRating,"get star rating from unified native ad mapper for ads about apps, returns a star rating from 0 to 5 representing how many stars the app has in the store offering i. Return type is Double and no argument. mapping class for google ad mob unified native ads",source,source,source,source
8132,UnifiedNativeAdMapper_getStore,"get store from unified native ad mapper for ads about apps, returns the name of the store offering the app for downloa. Return type is String and no argument. mapping class for google ad mob unified native ads",source,source,source,source
8133,UnifiedNativeAdMapper_handleClick,handle click from unified native ad mapper subclasses should implement this method if the network requires the developer to explicitly handle click events of views rendered to scree. Return type is void and parameters are view. mapping class for google ad mob unified native ads,neither,neither,neither,neither
8134,UnifiedNativeAdMapper_hasVideoContent,has video content from unified native ad mapper returns true if the current ad has video conten. Return type is boolean and no argument. mapping class for google ad mob unified native ads,source,source,source,neither
8135,UnifiedNativeAdMapper_recordImpression,record impression from unified native ad mapper subclasses should implement this method if the network requires the developer to explicitly record an impression of a view rendered to scree. Return type is void and no argument. mapping class for google ad mob unified native ads,sink,sink,neither,neither
8136,UnifiedNativeAdMapper_setAdChoicesContent,set ad choices content from unified native ad mapper sets a view to be used as ad choices conten. Return type is void and parameters are view. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8137,UnifiedNativeAdMapper_setAdvertiser,set advertiser from unified native ad mapper sets a text that identifies the advertise. Return type is final void and parameters are string. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8138,UnifiedNativeAdMapper_setBody,set body from unified native ad mapper sets body tex. Return type is final void and parameters are string. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8139,UnifiedNativeAdMapper_setCallToAction,set call to action from unified native ad mapper sets the ad's call to actio. Return type is final void and parameters are string. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8140,UnifiedNativeAdMapper_setExtras,set extras from unified native ad mapper sets a bundle of extras containing assets or attributes that do not directly map to those expected for a google native ad objec. Return type is final void and parameters are bundle. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8141,UnifiedNativeAdMapper_setHasVideoContent,set has video content from unified native ad mapper set to true if the current ad has video conten. Return type is void and parameters are boolean. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8142,UnifiedNativeAdMapper_setHeadline,set headline from unified native ad mapper sets the primary text headlin. Return type is final void and parameters are string. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8143,UnifiedNativeAdMapper_setIcon,set icon from unified native ad mapper sets a small image identifying the advertise. Return type is final void and parameters are native ad image. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8144,UnifiedNativeAdMapper_setImages,set images from unified native ad mapper sets a list of large image. Return type is final void and parameters are list< native ad image>. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8145,UnifiedNativeAdMapper_setMediaContentAspectRatio,set media content aspect ratio from unified native ad mapper sets the aspect ratio of the media to be rendered in the media vie. Return type is void and parameters are float. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8146,UnifiedNativeAdMapper_setMediaView,set media view from unified native ad mapper sets mediated view that displays medi. Return type is void and parameters are view. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8147,UnifiedNativeAdMapper_setOverrideClickHandling,set override click handling from unified native ad mapper set to true if the ad network does click handling on its ow. Return type is final void and parameters are boolean. mapping class for google ad mob unified native ads,neither,neither,neither,neither
8148,UnifiedNativeAdMapper_setOverrideImpressionRecording,set override impression recording from unified native ad mapper set to true if the ad network does impression tracking on its ow. Return type is final void and parameters are boolean. mapping class for google ad mob unified native ads,sink,sink,sink,sink
8149,UnifiedNativeAdMapper_setPrice,"set price from unified native ad mapper for ads about apps, sets a string representing how much the app cost. Return type is final void and parameters are string. mapping class for google ad mob unified native ads",sink,sink,sink,sink
8150,UnifiedNativeAdMapper_setStarRating,"set star rating from unified native ad mapper for ads about apps, sets a star rating from 0 to 5 representing how many stars the app has in the store offering i. Return type is final void and parameters are double. mapping class for google ad mob unified native ads",sink,sink,sink,sink
8151,UnifiedNativeAdMapper_setStore,"set store from unified native ad mapper for ads about apps, sets the name of the store offering the app for downloa. Return type is final void and parameters are string. mapping class for google ad mob unified native ads",sink,sink,sink,sink
8152,UnifiedNativeAdMapper_trackViews,track views from unified native ad mapper subclasses should implement this method if the network requires the developer to prepare state for recording an impression and/or click before a view is rendered to scree. Return type is void and parameters are view map< string view> map< string view>. mapping class for google ad mob unified native ads,neither,neither,neither,neither
8153,UnifiedNativeAdMapper_untrackView,untrack view from unified native ad mapper subclasses should implement this method if the mediated network's sdk offers a way to stop tracking a native ad view for the ad mapped by this objec. Return type is void and parameters are view. mapping class for google ad mob unified native ads,neither,neither,neither,neither
8154,VersionInfo_getMajorVersion,get major version from version info major versio. Return type is int and no argument. version info for adapters and for third party s d ks,source,source,source,source
8155,VersionInfo_getMicroVersion,get micro version from version info micro versio. Return type is int and no argument. version info for adapters and for third party s d ks,source,source,source,source
8156,VersionInfo_getMinorVersion,get minor version from version info minor versio. Return type is int and no argument. version info for adapters and for third party s d ks,source,source,source,source
8157,InitializationCompleteCallback_onInitializationFailed,on initialization failed from initialization complete callback notifies the google mobile ads sdk that the third party sdk initialization faile. Return type is  void and parameters are string. callbacks for a mediation adapter to communicate third party ad network initialization status back to the google mobile ads sdk,neither,neither,neither,neither
8158,InitializationCompleteCallback_onInitializationSucceeded,on initialization succeeded from initialization complete callback notifies the google mobile ads sdk that the third party sdk initialization succeede. Return type is  void and no argument. callbacks for a mediation adapter to communicate third party ad network initialization status back to the google mobile ads sdk,neither,neither,neither,neither
8159,MediationAdapter_onDestroy,on destroy from mediation adapter tears down the adapter contro. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8160,MediationAdapter_onPause,on pause from mediation adapter called when the application calls on pause on the ad vie. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8161,MediationAdapter_onResume,on resume from mediation adapter called when the application calls on resume on the ad vie. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8162,MediationAdCallback_onAdClosed,on ad closed from mediation ad callback notifies the google mobile ads sdk that the ad close. Return type is  void and no argument. ad callback for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8163,MediationAdCallback_onAdOpened,on ad opened from mediation ad callback notifies the google mobile ads sdk that the ad opene. Return type is  void and no argument. ad callback for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8164,MediationAdCallback_reportAdClicked,report ad clicked from mediation ad callback notifies the google mobile ads sdk that the ad has been clicke. Return type is  void and no argument. ad callback for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8165,MediationAdCallback_reportAdImpression,report ad impression from mediation ad callback notifies the google mobile ads sdk that an impression occurred on the a. Return type is  void and no argument. ad callback for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8166,"MediationAdLoadCallback<MediationAdT, MediationAdCallbackT>_onFailure","on failure from mediation ad load callback< mediation ad t,  mediation ad callback t> called when a mediation adapter fails to load an a. Return type is  void and parameters are ad error. callback to be invoked when a mediation adapter loads an ad",neither,neither,neither,neither
8167,"MediationAdLoadCallback<MediationAdT, MediationAdCallbackT>_onFailure","on failure from mediation ad load callback< mediation ad t,  mediation ad callback t> deprecate. Return type is  void and parameters are string. callback to be invoked when a mediation adapter loads an ad",neither,neither,neither,neither
8168,"MediationAdLoadCallback<MediationAdT, MediationAdCallbackT>_onSuccess","on success from mediation ad load callback< mediation ad t,  mediation ad callback t> success callback for third party ad loadin. Return type is Mediation Ad Callback T and parameters are mediation ad t. callback to be invoked when a mediation adapter loads an ad",neither,neither,neither,neither
8169,MediationAdRequest_getBirthday,get birthday from mediation ad request deprecate. Return type is Date and no argument. this interface is deprecated  use adapter and mediation ad configuration instead,source,source,source,source
8170,MediationAdRequest_getGender,get gender from mediation ad request deprecate. Return type is  int and no argument. this interface is deprecated  use adapter and mediation ad configuration instead,source,source,source,source
8171,MediationAdRequest_getKeywords,"get keywords from mediation ad request returns the set of keywords requested by the user, if defined by the ad reques. Return type is Set and no argument. this interface is deprecated  use adapter and mediation ad configuration instead",source,source,source,source
8172,MediationAdRequest_getLocation,"get location from mediation ad request returns the location of the user, if defined by the ad reques. Return type is Location and no argument. this interface is deprecated  use adapter and mediation ad configuration instead",source,source,source,source
8173,MediationAdRequest_isDesignedForFamilies,is designed for families from mediation ad request deprecate. Return type is  boolean and no argument. this interface is deprecated  use adapter and mediation ad configuration instead,neither,neither,neither,neither
8174,MediationAdRequest_isTesting,is testing from mediation ad request returns true if the publisher is asking for test ad. Return type is  boolean and no argument. this interface is deprecated  use adapter and mediation ad configuration instead,neither,neither,neither,neither
8175,MediationAdRequest_taggedForChildDirectedTreatment,tagged for child directed treatment from mediation ad request returns whether the publisher indicated that the app is to be treated as child-directed for purposes of the children’s online privacy protection ac. Return type is  int and no argument. this interface is deprecated  use adapter and mediation ad configuration instead,neither,neither,source,neither
8176,MediationBannerAd_getView,get view from mediation banner ad returns the view containing the third party rendered a. Return type is View and no argument. mediated banner ad from a banner adapter,source,source,source,source
8177,MediationBannerAdapter_getBannerView,get banner view from mediation banner adapter returns a view that can be rendered to display the a. Return type is View and no argument. this interface is deprecated  use adapter instead,source,source,source,source
8178,MediationBannerAdapter_requestBannerAd,request banner ad from mediation banner adapter called by the mediation library to request a banner ad from the adapte. Return type is  void and parameters are context mediation banner listener bundle ad size mediation ad request bundle. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8179,MediationBannerAdCallback_onAdLeftApplication,on ad left application from mediation banner ad callback notifies the google mobile ads sdk that the ad has caused the user to leave the applicatio. Return type is  void and no argument. banner ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8180,MediationBannerListener_onAdClicked,on ad clicked from mediation banner listener indicates that the user has clicked on this a. Return type is  void and parameters are mediation banner adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8181,MediationBannerListener_onAdClosed,on ad closed from mediation banner listener indicates that the ad control rendered something in full screen and is now transferring control back to the applicatio. Return type is  void and parameters are mediation banner adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8182,MediationBannerListener_onAdFailedToLoad,on ad failed to load from mediation banner listener indicates that an ad request failed to loa. Return type is  void and parameters are mediation banner adapter ad error. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8183,MediationBannerListener_onAdFailedToLoad,on ad failed to load from mediation banner listener deprecate. Return type is  void and parameters are mediation banner adapter int. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8184,MediationBannerListener_onAdLeftApplication,on ad left application from mediation banner listener indicates that the ad is causing the device to switch to a different applicatio. Return type is  void and parameters are mediation banner adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8185,MediationBannerListener_onAdLoaded,on ad loaded from mediation banner listener indicates that an ad has been requested and successfully receive. Return type is  void and parameters are mediation banner adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8186,MediationBannerListener_onAdOpened,on ad opened from mediation banner listener indicates that the ad control is rendering something that is full scree. Return type is  void and parameters are mediation banner adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8187,MediationInterscrollerAd_shouldDelegateInterscrollerEffect,should delegate interscroller effect from mediation interscroller ad indicates whether the interscroller rendering effect should be delegated to the google mobile ads sd. Return type is  boolean and no argument. mediated interscroller ad from an interscroller adapter,neither,neither,neither,neither
8188,MediationInterstitialAd_showAd,show ad from mediation interstitial ad shows the interstitia. Return type is  void and parameters are context. mediated interstitial ad from an interstitial adapter,neither,neither,neither,neither
8189,MediationInterstitialAdapter_requestInterstitialAd,request interstitial ad from mediation interstitial adapter called by the mediation library to request an ad from the adapte. Return type is  void and parameters are context mediation interstitial listener bundle mediation ad request bundle. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8190,MediationInterstitialAdapter_showInterstitial,show interstitial from mediation interstitial adapter shows the interstitia. Return type is  void and no argument. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8191,MediationInterstitialAdCallback_onAdFailedToShow,on ad failed to show from mediation interstitial ad callback deprecate. Return type is  void and parameters are string. interstitial ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8192,MediationInterstitialAdCallback_onAdFailedToShow,on ad failed to show from mediation interstitial ad callback notifies the google mobile ads sdk that the interstitial ad failed to sho. Return type is  void and parameters are ad error. interstitial ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8193,MediationInterstitialAdCallback_onAdLeftApplication,on ad left application from mediation interstitial ad callback notifies the google mobile ads sdk that the ad has caused the user to leave the applicatio. Return type is  void and no argument. interstitial ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8194,MediationInterstitialListener_onAdClicked,on ad clicked from mediation interstitial listener indicates that the user has clicked on this a. Return type is  void and parameters are mediation interstitial adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8195,MediationInterstitialListener_onAdClosed,on ad closed from mediation interstitial listener indicates that the ad control rendered something in full screen and is now transferring control back to the applicatio. Return type is  void and parameters are mediation interstitial adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8196,MediationInterstitialListener_onAdFailedToLoad,on ad failed to load from mediation interstitial listener deprecate. Return type is  void and parameters are mediation interstitial adapter int. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8197,MediationInterstitialListener_onAdFailedToLoad,on ad failed to load from mediation interstitial listener indicates that an ad request failed to loa. Return type is  void and parameters are mediation interstitial adapter ad error. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8198,MediationInterstitialListener_onAdLeftApplication,on ad left application from mediation interstitial listener indicates that the ad is causing the device to switch to a different applicatio. Return type is  void and parameters are mediation interstitial adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8199,MediationInterstitialListener_onAdLoaded,on ad loaded from mediation interstitial listener indicates that an ad has been requested and successfully receive. Return type is  void and parameters are mediation interstitial adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8200,MediationInterstitialListener_onAdOpened,on ad opened from mediation interstitial listener indicates that the ad control is rendering something that is full scree. Return type is  void and parameters are mediation interstitial adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8201,MediationNativeAdapter_requestNativeAd,request native ad from mediation native adapter called by the mediation library to request a native ad from the adapte. Return type is  void and parameters are context mediation native listener bundle native mediation ad request bundle. this interface is deprecated  use adapter instead,neither,neither,neither,neither
8202,MediationNativeAdCallback_onAdLeftApplication,on ad left application from mediation native ad callback notifies the google mobile ads sdk that the ad has caused the user to leave the applicatio. Return type is  void and no argument. native ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8203,MediationNativeAdCallback_onVideoComplete,on video complete from mediation native ad callback notifies the google mobile ads sdk that a video ad has completed playin. Return type is  void and no argument. native ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8204,MediationNativeAdCallback_onVideoMute,on video mute from mediation native ad callback notifies the google mobile ads sdk that a video ad is mute. Return type is  void and no argument. native ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8205,MediationNativeAdCallback_onVideoPause,on video pause from mediation native ad callback notifies the google mobile ads sdk that a video ad is pause. Return type is  void and no argument. native ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8206,MediationNativeAdCallback_onVideoPlay,on video play from mediation native ad callback notifies the google mobile ads sdk that a video ad is playin. Return type is  void and no argument. native ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8207,MediationNativeAdCallback_onVideoUnmute,on video unmute from mediation native ad callback notifies the google mobile ads sdk that a video ad is unmute. Return type is  void and no argument. native ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8208,MediationNativeListener_onAdClicked,on ad clicked from mediation native listener indicates that the user has clicked on this a. Return type is  void and parameters are mediation native adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8209,MediationNativeListener_onAdClosed,on ad closed from mediation native listener indicates that the ad control rendered something in full screen and is now transferring control back to the applicatio. Return type is  void and parameters are mediation native adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8210,MediationNativeListener_onAdFailedToLoad,on ad failed to load from mediation native listener deprecate. Return type is  void and parameters are mediation native adapter int. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8211,MediationNativeListener_onAdFailedToLoad,on ad failed to load from mediation native listener indicates that an ad request failed to loa. Return type is  void and parameters are mediation native adapter ad error. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8212,MediationNativeListener_onAdImpression,on ad impression from mediation native listener indicates that an impression has been recorded for the a. Return type is  void and parameters are mediation native adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8213,MediationNativeListener_onAdLeftApplication,on ad left application from mediation native listener indicates that the ad is causing the device to switch to a different applicatio. Return type is  void and parameters are mediation native adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8214,MediationNativeListener_onAdLoaded,on ad loaded from mediation native listener indicates that an ad has been requested and successfully receive. Return type is  void and parameters are mediation native adapter unified native ad mapper. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8215,MediationNativeListener_onAdOpened,on ad opened from mediation native listener indicates that the ad control is rendering something that is full scree. Return type is  void and parameters are mediation native adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8216,MediationNativeListener_onVideoEnd,on video end from mediation native listener indicates that an ad has completely finished playing vide. Return type is  void and parameters are mediation native adapter. this interface is deprecated  use adapter and mediation ad load callback instead,neither,neither,neither,neither
8217,MediationRewardedAd_showAd,show ad from mediation rewarded ad called when a rewarded ad is to be show. Return type is  void and parameters are context. interface definition describing methods that may be invoked once a rewarded ad has loaded,neither,neither,neither,neither
8218,MediationRewardedAdCallback_onAdFailedToShow,on ad failed to show from mediation rewarded ad callback deprecate. Return type is  void and parameters are string. rewarded ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8219,MediationRewardedAdCallback_onAdFailedToShow,on ad failed to show from mediation rewarded ad callback notifies the google mobile ads sdk that the rewarded ad failed to sho. Return type is  void and parameters are ad error. rewarded ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8220,MediationRewardedAdCallback_onUserEarnedReward,on user earned reward from mediation rewarded ad callback notifies the google mobile ads sdk that the user has earned a rewar. Return type is  void and parameters are reward item. rewarded ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8221,MediationRewardedAdCallback_onVideoComplete,on video complete from mediation rewarded ad callback notifies the google mobile ads sdk that the rewarded ad finished playin. Return type is  void and no argument. rewarded ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8222,MediationRewardedAdCallback_onVideoStart,on video start from mediation rewarded ad callback notifies the google mobile ads sdk that a rewarded ad started playin. Return type is  void and no argument. rewarded ad callbacks for a mediation adapter to communicate back to the google mobile ads sdk,neither,neither,neither,neither
8223,NativeMediationAdRequest_getAdVolume,get ad volume from native mediation ad request returns ad volume as a fraction of system volum. Return type is  float and no argument. this interface is deprecated  use adapter and mediation native ad configuration instead,source,source,source,source
8224,NativeMediationAdRequest_getNativeAdOptions,get native ad options from native mediation ad request deprecate. Return type is Native Ad Options and no argument. this interface is deprecated  use adapter and mediation native ad configuration instead,source,source,source,source
8225,NativeMediationAdRequest_getNativeAdRequestOptions,get native ad request options from native mediation ad request returns the native ad options provided with the native ad reques. Return type is Native Ad Options and no argument. this interface is deprecated  use adapter and mediation native ad configuration instead,source,source,source,source
8226,NativeMediationAdRequest_isAdMuted,is ad muted from native mediation ad request returns whether ad is mute. Return type is  boolean and no argument. this interface is deprecated  use adapter and mediation native ad configuration instead,source,source,source,neither
8227,NativeMediationAdRequest_isUnifiedNativeAdRequested,is unified native ad requested from native mediation ad request returns whether an unified native ad is requested or no. Return type is  boolean and no argument. this interface is deprecated  use adapter and mediation native ad configuration instead,source,source,source,source
8228,OnContextChangedListener_onContextChanged,on context changed from on context changed listener called when the publisher updates an ad object's current contex. Return type is  void and parameters are context. an optional interface that mediation adapters can implement to be informed of context changes,neither,neither,neither,neither
8229,OnImmersiveModeUpdatedListener_onImmersiveModeUpdated,on immersive mode updated from on immersive mode updated listener sets immersive mode enable or disable for interstitial a. Return type is  void and parameters are boolean. an optional interface that mediation adapters can implement to be informed of immersive mode updates,neither,neither,neither,neither
8230,Asset_createFromBytes,create from bytes from asset creates an asset using a byte arra. Return type is Asset and parameters are byte[]. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,neither,neither,neither,neither
8231,Asset_createFromFd,create from fd from asset creates an asset using a file descripto. Return type is Asset and parameters are parcel file descriptor. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,neither,neither,neither,neither
8232,Asset_createFromRef,create from ref from asset create an asset using an existing asset's diges. Return type is Asset and parameters are string. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,neither,neither,neither,neither
8233,Asset_createFromUri,create from uri from asset creates an asset using a content ur. Return type is Asset and parameters are uri. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,neither,neither,neither,neither
8234,Asset_equals,equals from asset . an asset is a binary blob shared between data items that is replicated across the wearable network on demand,neither,neither,neither,neither
8235,Asset_getDigest,get digest from asset returns the digest associated with the asset dat. Return type is String and no argument. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,source,source,source,source
8236,Asset_getFd,get fd from asset returns the file descriptor referencing the asse. Return type is Parcel File Descriptor and no argument. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,source,source,source,source
8237,Asset_getUri,get uri from asset returns the uri referencing the asset dat. Return type is Uri and no argument. an asset is a binary blob shared between data items that is replicated across the wearable network on demand,source,source,source,source
8238,Asset_hashCode,hash code from asset . an asset is a binary blob shared between data items that is replicated across the wearable network on demand,neither,neither,neither,neither
8239,Asset_toString,to string from asset . an asset is a binary blob shared between data items that is replicated across the wearable network on demand,sink,neither,neither,sink
8240,Asset_writeToParcel,write to parcel from asset . an asset is a binary blob shared between data items that is replicated across the wearable network on demand,sink,sink,sink,sink
8241,CapabilityClient_addListener,add listener from capability client registers a listener to be notified of a specific capability being added to or removed from the wear networ. Return type is Task and parameters are capability client on capability changed listener string. exposes an api to learn about capabilities provided by nodes on the wear network,neither,neither,neither,neither
8242,CapabilityClient_addListener,add listener from capability client registers a listener to be notified of capabilities being added to or removed from the wear networ. Return type is Task and parameters are capability client on capability changed listener uri int. exposes an api to learn about capabilities provided by nodes on the wear network,neither,neither,neither,neither
8243,CapabilityClient_addLocalCapability,add local capability from capability client announces that a capability has become available on the local nod. Return type is Task and parameters are string. exposes an api to learn about capabilities provided by nodes on the wear network,sink,sink,neither,sink
8244,CapabilityClient_getAllCapabilities,"get all capabilities from capability client returns information about all capabilities, including the nodes that declare those capabilitie. Return type is Task> and parameters are int. exposes an api to learn about capabilities provided by nodes on the wear network",source,source,source,source
8245,CapabilityClient_getCapability,"get capability from capability client returns information about a capability, including the nodes that declare that capabilit. Return type is Task and parameters are string int. exposes an api to learn about capabilities provided by nodes on the wear network",source,source,source,source
8246,CapabilityClient_removeListener,remove listener from capability client removes a listener which was previously added through add listen. Return type is Task and parameters are capability client on capability changed listener. exposes an api to learn about capabilities provided by nodes on the wear network,neither,neither,neither,neither
8247,CapabilityClient_removeListener,remove listener from capability client removes a listener which was previously added through add listen. Return type is Task and parameters are capability client on capability changed listener string. exposes an api to learn about capabilities provided by nodes on the wear network,neither,neither,neither,neither
8248,CapabilityClient_removeLocalCapability,remove local capability from capability client announces that a capability is no longer available on the local nod. Return type is Task and parameters are string. exposes an api to learn about capabilities provided by nodes on the wear network,neither,neither,neither,source
8249,ChannelClient_close,"close from channel client closes a channel, passing an application-defined error code to the remote nod. Return type is Task and parameters are channel client channel int. client interface for wearable channel api",neither,neither,neither,neither
8250,ChannelClient_close,"close from channel client closes a channel, making any future operations on it invali. Return type is Task and parameters are channel client channel. client interface for wearable channel api",neither,neither,neither,neither
8251,ChannelClient_getInputStream,get input stream from channel client returns an input stream which can read data from the remote nod. Return type is Task and parameters are channel client channel. client interface for wearable channel api,source,source,source,source
8252,ChannelClient_getOutputStream,get output stream from channel client returns an output stream which can send data to a remote nod. Return type is Task and parameters are channel client channel. client interface for wearable channel api,source,source,source,source
8253,ChannelClient_openChannel,open channel from channel client opens a channel to exchange data with a remote nod. Return type is Task and parameters are string string. client interface for wearable channel api,sink,sink,neither,sink
8254,ChannelClient_receiveFile,receive file from channel client reads input from a channel into a fil. Return type is Task and parameters are channel client channel uri boolean. client interface for wearable channel api,source,source,source,source
8255,ChannelClient_registerChannelCallback,register channel callback from channel client registers a callback to be notified of events for a channe. Return type is Task and parameters are channel client channel channel client channel callback. client interface for wearable channel api,neither,neither,neither,neither
8256,ChannelClient_registerChannelCallback,register channel callback from channel client registers a callback to be notified of channel event. Return type is Task and parameters are channel client channel callback. client interface for wearable channel api,neither,neither,neither,neither
8257,ChannelClient_sendFile,send file from channel client reads from a file into the output side of a channe. Return type is Task and parameters are channel client channel uri. client interface for wearable channel api,sink,sink,sink,sink
8258,ChannelClient_sendFile,send file from channel client reads from a file into the output side of a channe. Return type is Task and parameters are channel client channel uri long long. client interface for wearable channel api,sink,sink,sink,sink
8259,ChannelClient_unregisterChannelCallback,unregister channel callback from channel client removes a callback which was previously added through register channel callba. Return type is Task and parameters are channel client channel channel client channel callback. client interface for wearable channel api,neither,neither,neither,neither
8260,ChannelClient_unregisterChannelCallback,unregister channel callback from channel client removes a callback which was previously added through register channel callba. Return type is Task and parameters are channel client channel callback. client interface for wearable channel api,neither,neither,neither,neither
8261,ChannelClient.ChannelCallback_onChannelClosed,on channel closed from channel client channel callback called when a channel is close. Return type is void and parameters are channel client channel int int. a callback which will be notified on changes to channels,neither,neither,neither,neither
8262,ChannelClient.ChannelCallback_onChannelOpened,on channel opened from channel client channel callback called when a new channel is opened by a remote nod. Return type is void and parameters are channel client channel. a callback which will be notified on changes to channels,neither,neither,neither,neither
8263,ChannelClient.ChannelCallback_onInputClosed,on input closed from channel client channel callback called when the input side of a channel is close. Return type is void and parameters are channel client channel int int. a callback which will be notified on changes to channels,neither,neither,neither,neither
8264,ChannelClient.ChannelCallback_onOutputClosed,on output closed from channel client channel callback called when the output side of a channel is close. Return type is void and parameters are channel client channel int int. a callback which will be notified on changes to channels,neither,neither,neither,neither
8265,DataClient_addListener,add listener from data client registers a listener to receive data item changed and deleted event. Return type is Task and parameters are data client on data changed listener. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},neither,neither,neither,neither
8266,DataClient_addListener,add listener from data client registers a listener to receive data item changed and deleted event. Return type is Task and parameters are data client on data changed listener uri int. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},neither,neither,neither,neither
8267,DataClient_deleteDataItems,delete data items from data client removes all specified data items from the android wear networ. Return type is Task and parameters are uri int. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},neither,neither,neither,neither
8268,DataClient_deleteDataItems,delete data items from data client removes all specified data items from the android wear networ. Return type is Task and parameters are uri. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},neither,neither,neither,neither
8269,DataClient_getDataItem,get data item from data client retrieves a single data item from the android wear networ. Return type is Task and parameters are uri. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},source,source,source,source
8270,DataClient_getDataItems,"get data items from data client retrieves all data items matching the provided uri and filter type, from the android wear networ. Return type is Task and parameters are uri int. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets}",source,source,source,source
8271,DataClient_getDataItems,get data items from data client retrieves all data items from the android wear networ. Return type is Task and no argument. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},source,source,source,source
8272,DataClient_getDataItems,"get data items from data client retrieves all data items matching the provided u r i, from the android wear networ. Return type is Task and parameters are uri. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets}",source,source,source,source
8273,DataClient_getFdForAsset,get fd for asset from data client retrieves a parcel file descriptor pointing at the bytes of an asse. Return type is Task and parameters are data item asset. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},source,source,source,source
8274,DataClient_getFdForAsset,get fd for asset from data client retrieves a parcel file descriptor pointing at the bytes of an asse. Return type is Task and parameters are asset. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},source,source,source,source
8275,DataClient_putDataItem,put data item from data client adds a data item to the android wear networ. Return type is Task and parameters are put data request. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},sink,sink,sink,sink
8276,DataClient_removeListener,remove listener from data client removes a listener which was previously added through add listen. Return type is Task and parameters are data client on data changed listener. exposes an api for components to read or write {@linkplain data item data items} and {@linkplain asset assets},neither,neither,neither,neither
8277,DataClient.GetFdForAssetResponse_getFdForAsset,get fd for asset from data client get fd for asset response returns a file descriptor for the requested asse. Return type is Parcel File Descriptor and no argument. contains a file descriptor for the requested asset,source,source,source,source
8278,DataClient.GetFdForAssetResponse_getInputStream,get input stream from data client get fd for asset response returns an input stream wrapping the file descripto. Return type is Input Stream and no argument. contains a file descriptor for the requested asset,source,source,source,source
8279,DataEventBuffer_get,get from data event buffer . data structure holding references to a set of events,source,source,source,source
8280,DataEventBuffer_getCount,get count from data event buffer . data structure holding references to a set of events,source,source,source,neither
8281,DataEventBuffer_getStatus,get status from data event buffer . data structure holding references to a set of events,source,source,source,source
8282,DataItemBuffer_get,get from data item buffer . data structure holding reference to a set of data items,source,source,source,source
8283,DataItemBuffer_getCount,get count from data item buffer . data structure holding reference to a set of data items,source,source,source,source
8284,DataItemBuffer_getStatus,get status from data item buffer . data structure holding reference to a set of data items,source,source,source,source
8285,DataMap_arrayListFromBundleArrayList,array list from bundle array list from data map returns an array list of data maps from an array list of bundle. Return type is Array List and parameters are array list. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8286,DataMap_clear,clear from data map removes all elements from the mapping of this data ma. Return type is void and no argument. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8287,DataMap_containsKey,contains key from data map returns true if the given key is contained in the mapping of this data ma. Return type is boolean and parameters are string. a map of data supported by put data map request and data map items,source,source,source,neither
8288,DataMap_equals,equals from data map returns true if the given object is a data map equivalent to this on. Return type is boolean and parameters are object. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8289,DataMap_fromBundle,from bundle from data map returns a data map from a bundl. Return type is Data Map and parameters are bundle. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8290,DataMap_fromByteArray,from byte array from data map returns a data map from a byte[. Return type is Data Map and parameters are byte[]. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8291,DataMap_get,get from data map returns the entry with the given key as an objec. Return type is T and parameters are string. a map of data supported by put data map request and data map items,source,source,source,source
8292,DataMap_getAsset,"get asset from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is Asset and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8293,DataMap_getBoolean,"get boolean from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is boolean and parameters are string boolean. a map of data supported by put data map request and data map items",source,source,source,source
8294,DataMap_getBoolean,"get boolean from data map returns the value associated with the given key, or false if no mapping of the desired type exists for the given ke. Return type is boolean and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8295,DataMap_getByte,"get byte from data map returns the value associated with the given key, o. Return type is byte and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8296,DataMap_getByte,"get byte from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is byte and parameters are string byte. a map of data supported by put data map request and data map items",source,source,source,source
8297,DataMap_getByteArray,"get byte array from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is byte[] and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8298,DataMap_getDataMap,"get data map from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is Data Map and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8299,DataMap_getDataMapArrayList,"get data map array list from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is Array List and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8300,DataMap_getDouble,"get double from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is double and parameters are string double. a map of data supported by put data map request and data map items",source,source,source,source
8301,DataMap_getDouble,"get double from data map returns the value associated with the given key, or 00 if no mapping of the desired type exists for the given ke. Return type is double and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8302,DataMap_getFloat,"get float from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is float and parameters are string float. a map of data supported by put data map request and data map items",source,source,source,source
8303,DataMap_getFloat,"get float from data map returns the value associated with the given key, or 00f if no mapping of the desired type exists for the given ke. Return type is float and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8304,DataMap_getFloatArray,"get float array from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is float[] and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8305,DataMap_getInt,"get int from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is int and parameters are string int. a map of data supported by put data map request and data map items",source,source,source,source
8306,DataMap_getInt,"get int from data map returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given ke. Return type is int and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8307,DataMap_getIntegerArrayList,"get integer array list from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is Array List and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8308,DataMap_getLong,"get long from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is long and parameters are string long. a map of data supported by put data map request and data map items",source,source,source,source
8309,DataMap_getLong,"get long from data map returns the value associated with the given key, or 0 l if no mapping of the desired type exists for the given ke. Return type is long and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8310,DataMap_getLongArray,"get long array from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is long[] and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8311,DataMap_getString,"get string from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is String and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8312,DataMap_getString,"get string from data map returns the value associated with the given key, or default value if no mapping of the desired type exists for the given ke. Return type is String and parameters are string string. a map of data supported by put data map request and data map items",source,source,source,source
8313,DataMap_getStringArray,"get string array from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is String[] and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8314,DataMap_getStringArrayList,"get string array list from data map returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the ke. Return type is Array List and parameters are string. a map of data supported by put data map request and data map items",source,source,source,source
8315,DataMap_hashCode,hash code from data map . a map of data supported by put data map request and data map items,sink,neither,neither,neither
8316,DataMap_isEmpty,"is empty from data map returns true if the mapping of this data map is empty, false otherwis. Return type is boolean and no argument. a map of data supported by put data map request and data map items",neither,neither,source,neither
8317,DataMap_keySet,key set from data map returns a set containing the strings used as keys in this data ma. Return type is Set and no argument. a map of data supported by put data map request and data map items,source,source,neither,source
8318,DataMap_putAll,put all from data map inserts all mappings from the given data map into this data ma. Return type is void and parameters are data map. a map of data supported by put data map request and data map items,sink,sink,sink,sink
8319,DataMap_putAsset,"put asset from data map inserts an asset into the mapping of this data map, replacing any existing asset for the given ke. Return type is void and parameters are string asset. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8320,DataMap_putBoolean,"put boolean from data map inserts a boolean value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string boolean. a map of data supported by put data map request and data map items",sink,sink,sink,neither
8321,DataMap_putByte,"put byte from data map inserts a byte value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string byte. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8322,DataMap_putByteArray,"put byte array from data map inserts a byte array value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string byte[]. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8323,DataMap_putDataMap,"put data map from data map inserts a data map into the mapping of this data map, replacing any existing data map for the given ke. Return type is void and parameters are string data map. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8324,DataMap_putDataMapArrayList,"put data map array list from data map inserts an array list value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string array list. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8325,DataMap_putDouble,"put double from data map inserts a double value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string double. a map of data supported by put data map request and data map items",sink,sink,sink,neither
8326,DataMap_putFloat,"put float from data map inserts a float value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string float. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8327,DataMap_putFloatArray,"put float array from data map inserts a float array value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string float[]. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8328,DataMap_putInt,"put int from data map inserts an int value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string int. a map of data supported by put data map request and data map items",sink,sink,sink,neither
8329,DataMap_putIntegerArrayList,"put integer array list from data map inserts an array list value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string array list. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8330,DataMap_putLong,"put long from data map inserts a long value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string long. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8331,DataMap_putLongArray,"put long array from data map inserts a long array value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string long[]. a map of data supported by put data map request and data map items",sink,sink,neither,sink
8332,DataMap_putString,"put string from data map inserts a string value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string string. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8333,DataMap_putStringArray,"put string array from data map inserts a string array value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string string[]. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8334,DataMap_putStringArrayList,"put string array list from data map inserts an array list value into the mapping of this data map, replacing any existing value for the given ke. Return type is void and parameters are string array list. a map of data supported by put data map request and data map items",sink,sink,sink,sink
8335,DataMap_remove,remove from data map removes any entry with the given key from the mapping of this data ma. Return type is Object and parameters are string. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8336,DataMap_size,size from data map returns the number of key-value pairs in this ma. Return type is int and no argument. a map of data supported by put data map request and data map items,source,source,source,neither
8337,DataMap_toBundle,to bundle from data map returns a bundle containing all the elements on this data ma. Return type is Bundle and no argument. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8338,DataMap_toByteArray,to byte array from data map returns a serialized byte[] representing this data ma. Return type is byte[] and no argument. a map of data supported by put data map request and data map items,neither,neither,neither,neither
8339,DataMap_toString,to string from data map . a map of data supported by put data map request and data map items,sink,sink,sink,sink
8340,DataMapItem_fromDataItem,from data item from data map item provides a data map item wrapping a data ite. Return type is Data Map Item and parameters are data item. creates a new data item like object containing structured and serializable data,neither,neither,neither,neither
8341,DataMapItem_getDataMap,get data map from data map item returns the data ma. Return type is Data Map and no argument. creates a new data item like object containing structured and serializable data,source,source,source,source
8342,DataMapItem_getUri,get uri from data map item returns the underlying data item's ur. Return type is Uri and no argument. creates a new data item like object containing structured and serializable data,source,source,source,source
8343,MessageClient_addListener,add listener from message client registers a listener to be notified of received message. Return type is Task and parameters are message client on message received listener uri int. exposes an api for components to send messages to other nodes,neither,neither,sink,neither
8344,MessageClient_addListener,add listener from message client registers a listener to be notified of received message. Return type is Task and parameters are message client on message received listener. exposes an api for components to send messages to other nodes,neither,neither,neither,neither
8345,MessageClient_removeListener,remove listener from message client removes a listener which was previously added through add listen. Return type is Task and parameters are message client on message received listener. exposes an api for components to send messages to other nodes,neither,neither,neither,neither
8346,MessageClient_sendMessage,send message from message client sends byte[] data to the specified nod. Return type is Task and parameters are string string byte[]. exposes an api for components to send messages to other nodes,sink,sink,sink,sink
8347,MessageClient_sendMessage,send message from message client sends byte[] data to the specified nod. Return type is Task and parameters are string string byte[] message options. exposes an api for components to send messages to other nodes,sink,sink,sink,sink
8348,NodeClient_getCompanionPackageForNode,get companion package for node from node client gets the package name for the companion application associated with this nod. Return type is Task and parameters are string. exposes an api for learning about local or connected nodes,source,source,source,source
8349,NodeClient_getConnectedNodes,"get connected nodes from node client gets a list of nodes to which this device is currently connected, either directly or indirectly via a directly connected nod. Return type is Task> and no argument. exposes an api for learning about local or connected nodes",source,source,source,source
8350,NodeClient_getLocalNode,get local node from node client gets the node that refers to this devic. Return type is Task and no argument. exposes an api for learning about local or connected nodes,source,source,source,source
8351,PutDataMapRequest_asPutDataRequest,as put data request from put data map request creates a put data request containing the data and assets in this put data map reques. Return type is Put Data Request and no argument. put data map request is a data map aware version of put data request,sink,sink,sink,sink
8352,PutDataMapRequest_create,"create from put data map request creates a put data map request with the provided, complete, pat. Return type is Put Data Map Request and parameters are string. put data map request is a data map aware version of put data request",sink,sink,sink,sink
8353,PutDataMapRequest_createFromDataMapItem,create from data map item from put data map request creates a put data map request from a data map item using the provided sourc. Return type is Put Data Map Request and parameters are data map item. put data map request is a data map aware version of put data request,sink,sink,sink,neither
8354,PutDataMapRequest_createWithAutoAppendedId,create with auto appended id from put data map request creates a put data map request with a randomly generated id prefixed with the provided pat. Return type is Put Data Map Request and parameters are string. put data map request is a data map aware version of put data request,sink,sink,sink,neither
8355,PutDataMapRequest_getDataMap,get data map from put data map request . put data map request is a data map aware version of put data request,source,source,source,source
8356,PutDataMapRequest_getUri,get uri from put data map request returns a uri for the pending data ite. Return type is Uri and no argument. put data map request is a data map aware version of put data request,source,source,source,source
8357,PutDataMapRequest_isUrgent,is urgent from put data map request whether the data item for this request is urgen. Return type is boolean and no argument. put data map request is a data map aware version of put data request,sink,sink,sink,sink
8358,PutDataMapRequest_setUrgent,set urgent from put data map request flags this data item for urgent transpor. Return type is Put Data Map Request and no argument. put data map request is a data map aware version of put data request,sink,sink,sink,sink
8359,PutDataRequest_create,"create from put data request creates a data item with the provided, complete, pat. Return type is Put Data Request and parameters are string. put data request is used to create new data items in the android wear network",sink,sink,sink,sink
8360,PutDataRequest_createFromDataItem,create from data item from put data request creates a put data request from an existing data item using the provided sourc. Return type is Put Data Request and parameters are data item. put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8361,PutDataRequest_createWithAutoAppendedId,create with auto appended id from put data request creates a put data request with a randomly generated id prefixed with the provided pat. Return type is Put Data Request and parameters are string. put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8362,PutDataRequest_getAsset,get asset from put data request returns an asset previously added with put ass. Return type is Asset and parameters are string. put data request is used to create new data items in the android wear network,source,source,source,source
8363,PutDataRequest_getAssets,get assets from put data request . put data request is used to create new data items in the android wear network,source,neither,source,sink
8364,PutDataRequest_getData,get data from put data request an array of data stored at the specfied ur. Return type is byte[] and no argument. put data request is used to create new data items in the android wear network,source,source,source,sink
8365,PutDataRequest_getUri,get uri from put data request returns a uri for the pending data ite. Return type is Uri and no argument. put data request is used to create new data items in the android wear network,source,source,source,source
8366,PutDataRequest_hasAsset,has asset from put data request . put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8367,PutDataRequest_isUrgent,is urgent from put data request whether the data item for this request is urgen. Return type is boolean and no argument. put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8368,PutDataRequest_putAsset,put asset from put data request adds an asset to the data ite. Return type is Put Data Request and parameters are string asset. put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8369,PutDataRequest_removeAsset,remove asset from put data request removes a previously added asse. Return type is Put Data Request and parameters are string. put data request is used to create new data items in the android wear network,sink,sink,neither,neither
8370,PutDataRequest_setData,set data from put data request sets the data in a data ite. Return type is Put Data Request and parameters are byte[]. put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8371,PutDataRequest_setUrgent,set urgent from put data request flags this data item for urgent transpor. Return type is Put Data Request and no argument. put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8372,PutDataRequest_toString,to string from put data request . put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8373,PutDataRequest_toString,to string from put data request . put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8374,PutDataRequest_writeToParcel,write to parcel from put data request . put data request is used to create new data items in the android wear network,sink,sink,sink,sink
8375,Wearable_getCapabilityClient,get capability client from wearable create a new instance of capability client for use in a non-activity contex. Return type is Capability Client and parameters are context. an api for the android wear platform,source,source,source,source
8376,Wearable_getCapabilityClient,get capability client from wearable create a new instance of capability client for use in an activit. Return type is Capability Client and parameters are activity wearable wearable options. an api for the android wear platform,source,source,source,source
8377,Wearable_getCapabilityClient,get capability client from wearable create a new instance of capability client for use in a non-activity contex. Return type is Capability Client and parameters are context wearable wearable options. an api for the android wear platform,source,source,source,source
8378,Wearable_getCapabilityClient,get capability client from wearable create a new instance of capability client for use in an activit. Return type is Capability Client and parameters are activity. an api for the android wear platform,source,source,source,source
8379,Wearable_getChannelClient,get channel client from wearable create a new instance of channel client for use in a non-activity contex. Return type is Channel Client and parameters are context wearable wearable options. an api for the android wear platform,source,source,source,source
8380,Wearable_getChannelClient,get channel client from wearable create a new instance of channel client for use in a non-activity contex. Return type is Channel Client and parameters are context. an api for the android wear platform,source,source,source,source
8381,Wearable_getChannelClient,get channel client from wearable create a new instance of channel client for use in an activit. Return type is Channel Client and parameters are activity wearable wearable options. an api for the android wear platform,source,source,source,source
8382,Wearable_getChannelClient,get channel client from wearable create a new instance of channel client for use in an activit. Return type is Channel Client and parameters are activity. an api for the android wear platform,source,source,source,source
8383,Wearable_getDataClient,get data client from wearable create a new instance of data client for use in an activit. Return type is Data Client and parameters are activity wearable wearable options. an api for the android wear platform,source,source,source,source
8384,Wearable_getDataClient,get data client from wearable create a new instance of data client for use in an activit. Return type is Data Client and parameters are activity. an api for the android wear platform,source,source,source,source
8385,Wearable_getDataClient,get data client from wearable create a new instance of data client for use in a non-activity contex. Return type is Data Client and parameters are context wearable wearable options. an api for the android wear platform,source,source,source,source
8386,Wearable_getDataClient,get data client from wearable create a new instance of data client for use in a non-activity contex. Return type is Data Client and parameters are context. an api for the android wear platform,source,source,source,source
8387,Wearable_getMessageClient,get message client from wearable create a new instance of message client for use in a non-activity contex. Return type is Message Client and parameters are context wearable wearable options. an api for the android wear platform,source,source,source,source
8388,Wearable_getMessageClient,get message client from wearable create a new instance of message client for use in an activit. Return type is Message Client and parameters are activity. an api for the android wear platform,source,source,source,source
8389,Wearable_getMessageClient,get message client from wearable create a new instance of message client for use in a non-activity contex. Return type is Message Client and parameters are context. an api for the android wear platform,source,source,source,source
8390,Wearable_getMessageClient,get message client from wearable create a new instance of message client for use in an activit. Return type is Message Client and parameters are activity wearable wearable options. an api for the android wear platform,source,source,source,source
8391,Wearable_getNodeClient,get node client from wearable create a new instance of node client for use in a non-activity contex. Return type is Node Client and parameters are context. an api for the android wear platform,source,source,source,source
8392,Wearable_getNodeClient,get node client from wearable create a new instance of node client for use in an activit. Return type is Node Client and parameters are activity. an api for the android wear platform,source,source,source,source
8393,Wearable_getNodeClient,get node client from wearable create a new instance of node client for use in a non-activity contex. Return type is Node Client and parameters are context wearable wearable options. an api for the android wear platform,source,source,source,source
8394,Wearable_getNodeClient,get node client from wearable create a new instance of node client for use in an activit. Return type is Node Client and parameters are activity wearable wearable options. an api for the android wear platform,source,source,source,source
8395,Wearable.WearableOptions_equals,equals from wearable wearable options . options for the wearable api,neither,neither,neither,neither
8396,Wearable.WearableOptions_hashCode,hash code from wearable wearable options . options for the wearable api,neither,neither,neither,neither
8397,Wearable.WearableOptions.Builder_build,build from wearable wearable options builder builds a wearable wearable option. Return type is Wearable. Wearable Options and no argument. builder class for wearable wearable option,neither,neither,neither,neither
8398,Wearable.WearableOptions.Builder_setLooper,set looper from wearable wearable options builder sets the looper used for listener callback. Return type is Wearable. Wearable Options. Builder and parameters are looper. builder class for wearable wearable option,sink,sink,sink,sink
8399,WearableListenerService_getLooper,"get looper from wearable listener service this method is used to retrieve the looper all callbacks will run o. Return type is Looper and no argument. receives events from other nodes, such as data changes, messages or connectivity events",source,source,source,neither
8400,WearableListenerService_onBind,"on bind from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8401,WearableListenerService_onCapabilityChanged,"on capability changed from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8402,WearableListenerService_onChannelClosed,"on channel closed from wearable listener service called when a channel is close. Return type is void and parameters are channel int int. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8403,WearableListenerService_onChannelClosed,"on channel closed from wearable listener service called when a channel is close. Return type is void and parameters are channel client channel int int. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8404,WearableListenerService_onChannelOpened,"on channel opened from wearable listener service called when a new channel is opened by a remote nod. Return type is void and parameters are channel. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8405,WearableListenerService_onChannelOpened,"on channel opened from wearable listener service called when a new channel is opened by a remote nod. Return type is void and parameters are channel client channel. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8406,WearableListenerService_onConnectedNodes,"on connected nodes from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8407,WearableListenerService_onCreate,"on create from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8408,WearableListenerService_onDataChanged,"on data changed from wearable listener service receives data changed event. Return type is void and parameters are data event buffer. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8409,WearableListenerService_onDestroy,"on destroy from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8410,WearableListenerService_onInputClosed,"on input closed from wearable listener service called when the input side of a channel is close. Return type is void and parameters are channel int int. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8411,WearableListenerService_onInputClosed,"on input closed from wearable listener service called when the input side of a channel is close. Return type is void and parameters are channel client channel int int. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8412,WearableListenerService_onMessageReceived,"on message received from wearable listener service receives message event. Return type is void and parameters are message event. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8413,WearableListenerService_onOutputClosed,"on output closed from wearable listener service called when the output side of a channel is close. Return type is void and parameters are channel int int. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8414,WearableListenerService_onOutputClosed,"on output closed from wearable listener service called when the output side of a channel is close. Return type is void and parameters are channel client channel int int. receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8415,WearableListenerService_onPeerConnected,"on peer connected from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8416,WearableListenerService_onPeerDisconnected,"on peer disconnected from wearable listener service . receives events from other nodes, such as data changes, messages or connectivity events",neither,neither,neither,neither
8417,WearableStatusCodes_getStatusCodeString,get status code string from wearable status codes returns an untranslated debu. Return type is String and parameters are int. error codes for wearable api failures,source,source,source,source
8418,CapabilityApi_addCapabilityListener,add capability listener from capability api registers a listener to be notified of a specific capability being added to or removed from the wear networ. Return type is Pending Result and parameters are google api client capability api capability listener string. this interface is deprecated  use capability client,neither,neither,neither,sink
8419,CapabilityApi_addListener,add listener from capability api registers a listener to be notified of capabilities being added to or removed from the wear networ. Return type is Pending Result and parameters are google api client capability api capability listener uri int. this interface is deprecated  use capability client,neither,neither,neither,neither
8420,CapabilityApi_addLocalCapability,add local capability from capability api announces that a capability has become available on the local nod. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use capability client,sink,sink,sink,sink
8421,CapabilityApi_getAllCapabilities,"get all capabilities from capability api returns information about all capabilities, including the nodes that declare those capabilitie. Return type is Pending Result and parameters are google api client int. this interface is deprecated  use capability client",source,source,source,source
8422,CapabilityApi_getCapability,"get capability from capability api returns information about a capability, including the nodes that declare that capabilit. Return type is Pending Result and parameters are google api client string int. this interface is deprecated  use capability client",source,source,source,source
8423,CapabilityApi_removeCapabilityListener,remove capability listener from capability api removes a listener which was previously added through add capability listen. Return type is Pending Result and parameters are google api client capability api capability listener string. this interface is deprecated  use capability client,neither,neither,neither,neither
8424,CapabilityApi_removeListener,remove listener from capability api removes a listener which was previously added through add listen. Return type is Pending Result and parameters are google api client capability api capability listener. this interface is deprecated  use capability client,neither,neither,neither,neither
8425,CapabilityApi_removeLocalCapability,remove local capability from capability api announces that a capability is no longer available on the local nod. Return type is Pending Result and parameters are google api client string. this interface is deprecated  use capability client,neither,neither,neither,source
8426,CapabilityApi.CapabilityListener_onCapabilityChanged,on capability changed from capability api capability listener . this interface is deprecated  use capability client on capability changed listener,neither,neither,neither,neither
8427,CapabilityApi.GetAllCapabilitiesResult_getAllCapabilities,get all capabilities from capability api get all capabilities result . this interface is deprecated  see capability client get all capabilities,source,source,source,source
8428,CapabilityApi.GetCapabilityResult_getCapability,get capability from capability api get capability result . this interface is deprecated  see capability client get capability,source,source,source,source
8429,CapabilityClient.OnCapabilityChangedListener_onCapabilityChanged,on capability changed from capability client on capability changed listener . listener for changes in the reachable nodes providing a capability,neither,neither,neither,neither
8430,CapabilityInfo_getName,get name from capability info returns the name of the capabilit. Return type is String and no argument. information about a capability on the network and where it is available,source,source,source,source
8431,CapabilityInfo_getNodes,get nodes from capability info returns the set of nodes for the capabilit. Return type is Set and no argument. information about a capability on the network and where it is available,source,source,source,source
8432,Channel_addListener,add listener from channel registers a listener to be notified of events for this channe. Return type is Pending Result and parameters are google api client channel api channel listener. this interface is deprecated  use channel client channel,neither,neither,neither,neither
8433,Channel_close,"close from channel closes this channel, passing an application-defined error code to the remote nod. Return type is Pending Result and parameters are google api client int. this interface is deprecated  use channel client channel",neither,neither,neither,neither
8434,Channel_close,"close from channel closes this channel, making any future operations on it invali. Return type is Pending Result and parameters are google api client. this interface is deprecated  use channel client channel",neither,neither,neither,neither
8435,Channel_getInputStream,get input stream from channel opens the input side of the channel to receive data from the remote nod. Return type is Pending Result and parameters are google api client. this interface is deprecated  use channel client channel,source,source,source,source
8436,Channel_getNodeId,get node id from channel returns the node id of the node on the other side of the channe. Return type is String and no argument. this interface is deprecated  use channel client channel,source,source,source,source
8437,Channel_getOutputStream,get output stream from channel opens the output side of the channel to send data to the remote nod. Return type is Pending Result and parameters are google api client. this interface is deprecated  use channel client channel,source,source,source,source
8438,Channel_getPath,get path from channel returns the path that was used to open the channe. Return type is String and no argument. this interface is deprecated  use channel client channel,source,source,source,source
8439,Channel_receiveFile,receive file from channel reads input from this channel into a fil. Return type is Pending Result and parameters are google api client uri boolean. this interface is deprecated  use channel client channel,source,source,source,source
8440,Channel_removeListener,remove listener from channel removes a listener which was previously added through add listen. Return type is Pending Result and parameters are google api client channel api channel listener. this interface is deprecated  use channel client channel,neither,neither,neither,neither
8441,Channel_sendFile,send file from channel reads from a file into the output side of the channe. Return type is Pending Result and parameters are google api client uri. this interface is deprecated  use channel client channel,sink,sink,sink,sink
8442,Channel_sendFile,send file from channel reads from a file into the output side of the channe. Return type is Pending Result and parameters are google api client uri long long. this interface is deprecated  use channel client channel,sink,sink,sink,sink
8443,Channel.GetInputStreamResult_getInputStream,get input stream from channel get input stream result returns an input stream which can read data from the remote nod. Return type is Input Stream and no argument. this interface is deprecated  see channel client get input stream,source,source,source,source
8444,Channel.GetOutputStreamResult_getOutputStream,get output stream from channel get output stream result returns an output stream which can send data to a remote nod. Return type is Output Stream and no argument. this interface is deprecated  see channel client get output stream,source,source,source,source
8445,ChannelApi_addListener,add listener from channel api registers a listener to be notified of channel event. Return type is Pending Result and parameters are google api client channel api channel listener. this interface is deprecated  use channel client,neither,neither,neither,neither
8446,ChannelApi_openChannel,open channel from channel api opens a channel to exchange data with a remote nod. Return type is Pending Result and parameters are google api client string string. this interface is deprecated  use channel client,sink,neither,sink,source
8447,ChannelApi_removeListener,remove listener from channel api removes a listener which was previously added through add listen. Return type is Pending Result and parameters are google api client channel api channel listener. this interface is deprecated  use channel client,neither,neither,neither,neither
8448,ChannelApi.ChannelListener_onChannelClosed,on channel closed from channel api channel listener called when a channel is close. Return type is  void and parameters are channel int int. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8449,ChannelApi.ChannelListener_onChannelOpened,on channel opened from channel api channel listener called when a new channel is opened by a remote nod. Return type is  void and parameters are channel. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8450,ChannelApi.ChannelListener_onInputClosed,on input closed from channel api channel listener called when the input side of a channel is close. Return type is  void and parameters are channel int int. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8451,ChannelApi.ChannelListener_onOutputClosed,on output closed from channel api channel listener called when the output side of a channel is close. Return type is  void and parameters are channel int int. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8452,ChannelApi.OpenChannelResult_getChannel,"get channel from channel api open channel result returns the newly created channel, or null, if the connection couldn't be opene. Return type is Channel and no argument. this interface is deprecated  see channel client open channel",source,source,source,source
8453,ChannelClient.Channel_getNodeId,get node id from channel client channel returns the node id of the node on the other side of the channe. Return type is String and no argument. a channel created through channel client open channel,source,source,source,source
8454,ChannelClient.Channel_getPath,get path from channel client channel returns the path that was used to open the channe. Return type is String and no argument. a channel created through channel client open channel,source,source,source,source
8455,DataApi_addListener,add listener from data api registers a listener to receive data item changed and deleted event. Return type is Pending Result and parameters are google api client data api data listener. this interface is deprecated  use data client,neither,neither,neither,neither
8456,DataApi_addListener,add listener from data api registers a listener to receive data item changed and deleted event. Return type is Pending Result and parameters are google api client data api data listener uri int. this interface is deprecated  use data client,neither,neither,neither,neither
8457,DataApi_deleteDataItems,delete data items from data api removes all specified data items from the android wear networ. Return type is Pending Result and parameters are google api client uri int. this interface is deprecated  use data client,neither,neither,neither,neither
8458,DataApi_deleteDataItems,delete data items from data api removes all specified data items from the android wear networ. Return type is Pending Result and parameters are google api client uri. this interface is deprecated  use data client,neither,neither,neither,neither
8459,DataApi_getDataItem,get data item from data api retrieves a single data item from the android wear networ. Return type is Pending Result and parameters are google api client uri. this interface is deprecated  use data client,source,source,source,source
8460,DataApi_getDataItems,"get data items from data api retrieves all data items matching the provided uri and filter type, from the android wear networ. Return type is Pending Result and parameters are google api client uri int. this interface is deprecated  use data client",source,source,source,source
8461,DataApi_getDataItems,get data items from data api retrieves all data items from the android wear networ. Return type is Pending Result and parameters are google api client. this interface is deprecated  use data client,source,source,source,source
8462,DataApi_getDataItems,"get data items from data api retrieves all data items matching the provided u r i, from the android wear networ. Return type is Pending Result and parameters are google api client uri. this interface is deprecated  use data client",source,source,source,source
8463,DataApi_getFdForAsset,get fd for asset from data api retrieves a parcel file descriptor pointing at the bytes of an asse. Return type is Pending Result and parameters are google api client asset. this interface is deprecated  use data client,source,source,source,source
8464,DataApi_getFdForAsset,get fd for asset from data api retrieves a parcel file descriptor pointing at the bytes of an asse. Return type is Pending Result and parameters are google api client data item asset. this interface is deprecated  use data client,source,source,source,source
8465,DataApi_putDataItem,put data item from data api adds a data item to the android wear networ. Return type is Pending Result and parameters are google api client put data request. this interface is deprecated  use data client,sink,sink,sink,sink
8466,DataApi_removeListener,remove listener from data api removes a data listener which was previously added through add listen. Return type is Pending Result and parameters are google api client data api data listener. this interface is deprecated  use data client,neither,neither,neither,neither
8467,DataApi.DataItemResult_getDataItem,"get data item from data api data item result returns a data item, or null if the item does not exi. Return type is Data Item and no argument. this interface is deprecated  see data client get data item",source,source,source,source
8468,DataApi.DataListener_onDataChanged,on data changed from data api data listener notification that a set of data items have been changed or delete. Return type is  void and parameters are data event buffer. this interface is deprecated  use data client on data changed listener,neither,neither,neither,neither
8469,DataApi.DeleteDataItemsResult_getNumDeleted,get num deleted from data api delete data items result returns the number of items deleted by data apidelete data ite. Return type is  int and no argument. this interface is deprecated  see data client delete data items,source,source,source,source
8470,DataApi.GetFdForAssetResult_getFd,get fd from data api get fd for asset result returns a file descriptor for the requested asse. Return type is Parcel File Descriptor and no argument. this interface is deprecated  use data client get fd for asset response,source,source,source,source
8471,DataApi.GetFdForAssetResult_getInputStream,get input stream from data api get fd for asset result returns an input stream wrapping the file descripto. Return type is Input Stream and no argument. this interface is deprecated  use data client get fd for asset response,source,source,source,source
8472,DataClient.OnDataChangedListener_onDataChanged,on data changed from data client on data changed listener notification that a set of data items have been changed or delete. Return type is  void and parameters are data event buffer. used with data client add listener to receive data events,neither,neither,neither,neither
8473,DataEvent_getDataItem,get data item from data event returns the data item modified in this even. Return type is Data Item and no argument. data interface for data events,source,source,source,source
8474,DataEvent_getType,get type from data event returns the type of event this i. Return type is  int and no argument. data interface for data events,source,source,source,source
8475,DataItem_getAssets,get assets from data item a map of assets associated with this data ite. Return type is Map and no argument. the base object of data stored in the android wear network,source,source,source,source
8476,DataItem_getData,get data from data item an array of data stored at the specified ur. Return type is  byte[] and no argument. the base object of data stored in the android wear network,source,source,source,source
8477,DataItem_getUri,get uri from data item returns the data item's ur. Return type is Uri and no argument. the base object of data stored in the android wear network,source,source,source,source
8478,DataItem_setData,set data from data item sets the data in a data ite. Return type is Data Item and parameters are byte[]. the base object of data stored in the android wear network,sink,sink,sink,sink
8479,DataItemAsset_getDataItemKey,get data item key from data item asset . a reference to an asset stored in a data item,source,source,source,source
8480,DataItemAsset_getId,get id from data item asset . a reference to an asset stored in a data item,source,source,source,source
8481,MessageApi_addListener,add listener from message api registers a listener to be notified of received message. Return type is Pending Result and parameters are google api client message api message listener uri int. this interface is deprecated  use message client,neither,neither,neither,neither
8482,MessageApi_addListener,add listener from message api registers a listener to be notified of received message. Return type is Pending Result and parameters are google api client message api message listener. this interface is deprecated  use message client,neither,neither,neither,neither
8483,MessageApi_removeListener,remove listener from message api removes a message listener which was previously added through add listen. Return type is Pending Result and parameters are google api client message api message listener. this interface is deprecated  use message client,neither,neither,neither,neither
8484,MessageApi_sendMessage,send message from message api sends byte[] data to the specified nod. Return type is Pending Result and parameters are google api client string string byte[]. this interface is deprecated  use message client,sink,sink,sink,sink
8485,MessageApi.MessageListener_onMessageReceived,on message received from message api message listener notification that a message has been receive. Return type is  void and parameters are message event. this interface is deprecated  use message client on message received listener,neither,neither,neither,neither
8486,MessageApi.SendMessageResult_getRequestId,get request id from message api send message result returns an id used to identify the sent messag. Return type is  int and no argument. this interface is deprecated  see message client send message,source,source,source,source
8487,MessageClient.OnMessageReceivedListener_onMessageReceived,on message received from message client on message received listener notification that a message has been receive. Return type is  void and parameters are message event. used with message client add listener to receive message events,neither,neither,neither,neither
8488,MessageEvent_getData,get data from message event returns the data passed by the messag. Return type is  byte[] and no argument. information about a message received by a {@linkplain message api message listener listener},source,source,source,source
8489,MessageEvent_getPath,get path from message event returns the path the message is being delivered t. Return type is String and no argument. information about a message received by a {@linkplain message api message listener listener},source,source,source,source
8490,MessageEvent_getRequestId,"get request id from message event returns the request id of the message, generated by the sende. Return type is  int and no argument. information about a message received by a {@linkplain message api message listener listener}",source,source,source,source
8491,MessageEvent_getSourceNodeId,get source node id from message event returns the node id of the sende. Return type is String and no argument. information about a message received by a {@linkplain message api message listener listener},source,source,source,source
8492,Node_getDisplayName,get display name from node returns a human readable description of the nod. Return type is String and no argument. information about a particular node in the android wear network,source,source,source,source
8493,Node_getId,get id from node returns an opaque string that represents a node in the android wear networ. Return type is String and no argument. information about a particular node in the android wear network,source,source,source,source
8494,Node_isNearby,is nearby from node indicates that this node can be considered geographically nearby the local nod. Return type is  boolean and no argument. information about a particular node in the android wear network,neither,neither,neither,neither
8495,NodeApi_getConnectedNodes,"get connected nodes from node api gets a list of nodes to which this device is currently connected, either directly or indirectly via a directly connected nod. Return type is Pending Result and parameters are google api client. this interface is deprecated  use node client",source,source,source,source
8496,NodeApi_getLocalNode,get local node from node api gets the node that refers to this devic. Return type is Pending Result and parameters are google api client. this interface is deprecated  use node client,source,source,source,source
8497,NodeApi.GetConnectedNodesResult_getNodes,"get nodes from node api get connected nodes result returns a list of connected nodes, either directly or indirectly via a directly connected nod. Return type is List and no argument. this interface is deprecated  see node client get connected nodes",source,source,source,source
8498,NodeApi.GetLocalNodeResult_getNode,get node from node api get local node result returns a node object which represents this devic. Return type is Node and no argument. this interface is deprecated  see node client get local node,source,source,source,source
8499,CapabilityClient.OnCapabilityChangedListener_onCapabilityChanged,on capability changed from capability client on capability changed listener . listener for changes in the reachable nodes providing a capability,neither,neither,neither,neither
8500,ChannelClient.Channel_getNodeId,get node id from channel client channel returns the node id of the node on the other side of the channe. Return type is String and no argument. a channel created through channel client open channel,source,source,source,source
8501,ChannelClient.Channel_getPath,get path from channel client channel returns the path that was used to open the channe. Return type is String and no argument. a channel created through channel client open channel,source,source,source,source
8502,ChannelClient.ChannelCallback_onChannelClosed,on channel closed from channel client channel callback called when a channel is close. Return type is void and parameters are channel client channel int int. a callback which will be notified on changes to channels,neither,neither,neither,neither
8503,ChannelClient.ChannelCallback_onChannelOpened,on channel opened from channel client channel callback called when a new channel is opened by a remote nod. Return type is void and parameters are channel client channel. a callback which will be notified on changes to channels,neither,neither,neither,neither
8504,ChannelClient.ChannelCallback_onInputClosed,on input closed from channel client channel callback called when the input side of a channel is close. Return type is void and parameters are channel client channel int int. a callback which will be notified on changes to channels,neither,neither,neither,neither
8505,ChannelClient.ChannelCallback_onOutputClosed,on output closed from channel client channel callback called when the output side of a channel is close. Return type is void and parameters are channel client channel int int. a callback which will be notified on changes to channels,neither,neither,neither,neither
8506,DataClient.GetFdForAssetResponse_getFdForAsset,get fd for asset from data client get fd for asset response returns a file descriptor for the requested asse. Return type is Parcel File Descriptor and no argument. contains a file descriptor for the requested asset,source,source,source,source
8507,DataClient.GetFdForAssetResponse_getInputStream,get input stream from data client get fd for asset response returns an input stream wrapping the file descripto. Return type is Input Stream and no argument. contains a file descriptor for the requested asset,source,source,source,source
8508,DataClient.OnDataChangedListener_onDataChanged,on data changed from data client on data changed listener notification that a set of data items have been changed or delete. Return type is  void and parameters are data event buffer. used with data client add listener to receive data events,neither,neither,neither,neither
8509,MessageClient.OnMessageReceivedListener_onMessageReceived,on message received from message client on message received listener notification that a message has been receive. Return type is  void and parameters are message event. used with message client add listener to receive message events,neither,neither,neither,neither
8510,Wearable.WearableOptions_equals,equals from wearable wearable options . options for the wearable api,neither,neither,neither,neither
8511,Wearable.WearableOptions_hashCode,hash code from wearable wearable options . options for the wearable api,neither,neither,neither,neither
8512,Wearable.WearableOptions.Builder_build,build from wearable wearable options builder builds a wearable wearable option. Return type is Wearable. Wearable Options and no argument. builder class for wearable wearable option,neither,neither,neither,neither
8513,Wearable.WearableOptions.Builder_setLooper,set looper from wearable wearable options builder sets the looper used for listener callback. Return type is Wearable. Wearable Options. Builder and parameters are looper. builder class for wearable wearable option,sink,sink,sink,sink
8514,CapabilityApi.CapabilityListener_onCapabilityChanged,on capability changed from capability api capability listener . this interface is deprecated  use capability client on capability changed listener,neither,neither,neither,neither
8515,CapabilityApi.GetAllCapabilitiesResult_getAllCapabilities,get all capabilities from capability api get all capabilities result . this interface is deprecated  see capability client get all capabilities,source,source,source,source
8516,CapabilityApi.GetCapabilityResult_getCapability,get capability from capability api get capability result . this interface is deprecated  see capability client get capability,source,source,source,source
8517,Channel.GetInputStreamResult_getInputStream,get input stream from channel get input stream result returns an input stream which can read data from the remote nod. Return type is Input Stream and no argument. this interface is deprecated  see channel client get input stream,source,source,source,source
8518,Channel.GetOutputStreamResult_getOutputStream,get output stream from channel get output stream result returns an output stream which can send data to a remote nod. Return type is Output Stream and no argument. this interface is deprecated  see channel client get output stream,source,source,source,source
8519,ChannelApi.ChannelListener_onChannelClosed,on channel closed from channel api channel listener called when a channel is close. Return type is  void and parameters are channel int int. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8520,ChannelApi.ChannelListener_onChannelOpened,on channel opened from channel api channel listener called when a new channel is opened by a remote nod. Return type is  void and parameters are channel. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8521,ChannelApi.ChannelListener_onInputClosed,on input closed from channel api channel listener called when the input side of a channel is close. Return type is  void and parameters are channel int int. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8522,ChannelApi.ChannelListener_onOutputClosed,on output closed from channel api channel listener called when the output side of a channel is close. Return type is  void and parameters are channel int int. this interface is deprecated  use channel client channel callback,neither,neither,neither,neither
8523,ChannelApi.OpenChannelResult_getChannel,"get channel from channel api open channel result returns the newly created channel, or null, if the connection couldn't be opene. Return type is Channel and no argument. this interface is deprecated  see channel client open channel",source,source,source,source
8524,DataApi.DataItemResult_getDataItem,"get data item from data api data item result returns a data item, or null if the item does not exi. Return type is Data Item and no argument. this interface is deprecated  see data client get data item",source,source,source,source
8525,DataApi.DataListener_onDataChanged,on data changed from data api data listener notification that a set of data items have been changed or delete. Return type is  void and parameters are data event buffer. this interface is deprecated  use data client on data changed listener,neither,neither,neither,neither
8526,DataApi.DeleteDataItemsResult_getNumDeleted,get num deleted from data api delete data items result returns the number of items deleted by data apidelete data ite. Return type is  int and no argument. this interface is deprecated  see data client delete data items,source,source,source,source
8527,DataApi.GetFdForAssetResult_getFd,get fd from data api get fd for asset result returns a file descriptor for the requested asse. Return type is Parcel File Descriptor and no argument. this interface is deprecated  use data client get fd for asset response,source,source,source,source
8528,DataApi.GetFdForAssetResult_getInputStream,get input stream from data api get fd for asset result returns an input stream wrapping the file descripto. Return type is Input Stream and no argument. this interface is deprecated  use data client get fd for asset response,source,source,source,source
8529,MessageApi.MessageListener_onMessageReceived,on message received from message api message listener notification that a message has been receive. Return type is  void and parameters are message event. this interface is deprecated  use message client on message received listener,neither,neither,neither,neither
8530,MessageApi.SendMessageResult_getRequestId,get request id from message api send message result returns an id used to identify the sent messag. Return type is  int and no argument. this interface is deprecated  see message client send message,source,source,source,source
8531,NodeApi.GetConnectedNodesResult_getNodes,"get nodes from node api get connected nodes result returns a list of connected nodes, either directly or indirectly via a directly connected nod. Return type is List and no argument. this interface is deprecated  see node client get connected nodes",source,source,source,source
8532,NodeApi.GetLocalNodeResult_getNode,get node from node api get local node result returns a node object which represents this devic. Return type is Node and no argument. this interface is deprecated  see node client get local node,source,source,source,source
8533,Wearable.WearableOptions.Builder_build,build from wearable wearable options builder builds a wearable wearable option. Return type is Wearable. Wearable Options and no argument. builder class for wearable wearable option,neither,neither,neither,neither
8534,Wearable.WearableOptions.Builder_setLooper,set looper from wearable wearable options builder sets the looper used for listener callback. Return type is Wearable. Wearable Options. Builder and parameters are looper. builder class for wearable wearable option,sink,sink,sink,sink
