key,docs,version,classification,xg_d
GnssAntennaInfo_describeContents,"describe contents from gnss antenna info  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,source,neither
GnssAntennaInfo_getCarrierFrequencyMHz,"get carrier frequency m hz from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,source,source
GnssAntennaInfo_getPhaseCenterOffset,"get phase center offset from gnss antenna info returns a phase center offset object encapsulating the phase center offset and corresponding uncertainties in millimeter. Return type is Gnss Antenna Info. Phase Center Offset and parameters are ). a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,source,source
GnssAntennaInfo_getPhaseCenterVariationCorrections,"get phase center variation corrections from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,source,source
GnssAntennaInfo_getSignalGainCorrections,"get signal gain corrections from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,source,source
GnssAntennaInfo_toString,"to string from gnss antenna info  returns a string representation of the objec. Return type is String and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,neither,source
GnssAntennaInfo_writeToParcel,"write to parcel from gnss antenna info  flatten this object in to a parce. Return type is void and parameters are parcel int. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2018,sink,sink
GnssAntennaInfo_describeContents,"describe contents from gnss antenna info  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,source,neither
GnssAntennaInfo_getCarrierFrequencyMHz,"get carrier frequency m hz from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,source,source
GnssAntennaInfo_getPhaseCenterOffset,"get phase center offset from gnss antenna info returns a phase center offset object encapsulating the phase center offset and corresponding uncertainties in millimeter. Return type is Gnss Antenna Info. Phase Center Offset and parameters are ). a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,source,source
GnssAntennaInfo_getPhaseCenterVariationCorrections,"get phase center variation corrections from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,source,source
GnssAntennaInfo_getSignalGainCorrections,"get signal gain corrections from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,source,source
GnssAntennaInfo_toString,"to string from gnss antenna info  returns a string representation of the objec. Return type is String and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,neither,source
GnssAntennaInfo_writeToParcel,"write to parcel from gnss antenna info  flatten this object in to a parce. Return type is void and parameters are parcel int. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2020,sink,sink
GnssAntennaInfo_describeContents,"describe contents from gnss antenna info  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,source,neither
GnssAntennaInfo_equals,"equals from gnss antenna info  indicates whether some other object is ""equal to"" this on. Return type is boolean and parameters are object. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,neither,neither
GnssAntennaInfo_getCarrierFrequencyMHz,"get carrier frequency m hz from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,source,source
GnssAntennaInfo_getPhaseCenterOffset,"get phase center offset from gnss antenna info  returns a phase center offset object encapsulating the phase center offset and  corresponding uncertainties in millimeter. Return type is Gnss Antenna Info. Phase Center Offset and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,source,source
GnssAntennaInfo_getPhaseCenterVariationCorrections,"get phase center variation corrections from gnss antenna info  returns a spherical corrections object encapsulating the phase center variation  corrections and corresponding uncertainties in millimeter. Return type is Gnss Antenna Info. Spherical Corrections and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,source,source
GnssAntennaInfo_getSignalGainCorrections,"get signal gain corrections from gnss antenna info  returns a spherical corrections object encapsulating the signal gain  corrections and corresponding uncertainties in d b. Return type is Gnss Antenna Info. Spherical Corrections and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,source,source
GnssAntennaInfo_hashCode,"hash code from gnss antenna info  returns a hash code value for the objec. Return type is int and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,neither,source
GnssAntennaInfo_toString,"to string from gnss antenna info  returns a string representation of the objec. Return type is String and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,neither,source
GnssAntennaInfo_writeToParcel,"write to parcel from gnss antenna info  flatten this object in to a parce. Return type is void and parameters are parcel int. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2021,sink,sink
GnssAntennaInfo_describeContents,"describe contents from gnss antenna info  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,source,neither
GnssAntennaInfo_equals,"equals from gnss antenna info  indicates whether some other object is ""equal to"" this on. Return type is boolean and parameters are object. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,neither,neither
GnssAntennaInfo_getCarrierFrequencyMHz,"get carrier frequency m hz from gnss antenna info . a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,source,source
GnssAntennaInfo_getPhaseCenterOffset,"get phase center offset from gnss antenna info  returns a phase center offset object encapsulating the phase center offset and  corresponding uncertainties in millimeter. Return type is Gnss Antenna Info. Phase Center Offset and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,source,source
GnssAntennaInfo_getPhaseCenterVariationCorrections,"get phase center variation corrections from gnss antenna info  returns a spherical corrections object encapsulating the phase center variation  corrections and corresponding uncertainties in millimeter. Return type is Gnss Antenna Info. Spherical Corrections and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,source,source
GnssAntennaInfo_getSignalGainCorrections,"get signal gain corrections from gnss antenna info  returns a spherical corrections object encapsulating the signal gain  corrections and corresponding uncertainties in d b. Return type is Gnss Antenna Info. Spherical Corrections and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,source,source
GnssAntennaInfo_hashCode,"hash code from gnss antenna info  returns a hash code value for the objec. Return type is int and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,neither,source
GnssAntennaInfo_toString,"to string from gnss antenna info  returns a string representation of the objec. Return type is String and no argument. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,neither,source
GnssAntennaInfo_writeToParcel,"write to parcel from gnss antenna info  flatten this object in to a parce. Return type is void and parameters are parcel int. a class that contains information about a gnss antenna  gnss antenna characteristics can change with device configuration, such as when a device is folded open or closed  antenna information is delivered to registered instances of listener",2022,sink,sink
GnssAntennaInfo.PhaseCenterOffset_describeContents,"describe contents from gnss antenna info phase center offset  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,sink
GnssAntennaInfo.PhaseCenterOffset_getXOffsetMm,"get x offset mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,source
GnssAntennaInfo.PhaseCenterOffset_getXOffsetUncertaintyMm,"get x offset uncertainty mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetMm,"get y offset mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetUncertaintyMm,"get y offset uncertainty mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetMm,"get z offset mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetUncertaintyMm,"get z offset uncertainty mm from gnss antenna info phase center offset returns the 1-sigma uncertainty of the z-axis offset of the phase center from the origin of the android sensor coordinate system, in millimeter. Return type is double and parameters are ). class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,source,source
GnssAntennaInfo.PhaseCenterOffset_toString,"to string from gnss antenna info phase center offset  returns a string representation of the objec. Return type is String and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,neither,source
GnssAntennaInfo.PhaseCenterOffset_writeToParcel,"write to parcel from gnss antenna info phase center offset  flatten this object in to a parce. Return type is void and parameters are parcel int. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2018,sink,sink
GnssAntennaInfo.PhaseCenterOffset_describeContents,"describe contents from gnss antenna info phase center offset  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,sink
GnssAntennaInfo.PhaseCenterOffset_getXOffsetMm,"get x offset mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,source
GnssAntennaInfo.PhaseCenterOffset_getXOffsetUncertaintyMm,"get x offset uncertainty mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetMm,"get y offset mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetUncertaintyMm,"get y offset uncertainty mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetMm,"get z offset mm from gnss antenna info phase center offset . class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetUncertaintyMm,"get z offset uncertainty mm from gnss antenna info phase center offset returns the 1-sigma uncertainty of the z-axis offset of the phase center from the origin of the android sensor coordinate system, in millimeter. Return type is double and parameters are ). class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,source,source
GnssAntennaInfo.PhaseCenterOffset_toString,"to string from gnss antenna info phase center offset  returns a string representation of the objec. Return type is String and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,neither,source
GnssAntennaInfo.PhaseCenterOffset_writeToParcel,"write to parcel from gnss antenna info phase center offset  flatten this object in to a parce. Return type is void and parameters are parcel int. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported  to 1 sigma",2020,sink,sink
GnssAntennaInfo.PhaseCenterOffset_describeContents,"describe contents from gnss antenna info phase center offset  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,sink
GnssAntennaInfo.PhaseCenterOffset_equals,"equals from gnss antenna info phase center offset  indicates whether some other object is ""equal to"" this on. Return type is boolean and parameters are object. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,neither,neither
GnssAntennaInfo.PhaseCenterOffset_getXOffsetMm,"get x offset mm from gnss antenna info phase center offset  returns the x-axis offset of the phase center from the origin of the android sensor  coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,source
GnssAntennaInfo.PhaseCenterOffset_getXOffsetUncertaintyMm,"get x offset uncertainty mm from gnss antenna info phase center offset  returns the 1-sigma uncertainty of the x-axis offset of the phase center from the origin  of the android sensor coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetMm,"get y offset mm from gnss antenna info phase center offset  returns the y-axis offset of the phase center from the origin of the android sensor  coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetUncertaintyMm,"get y offset uncertainty mm from gnss antenna info phase center offset  returns the 1-sigma uncertainty of the y-axis offset of the phase center from the origin  of the android sensor coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetMm,"get z offset mm from gnss antenna info phase center offset  returns the z-axis offset of the phase center from the origin of the android sensor  coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetUncertaintyMm,"get z offset uncertainty mm from gnss antenna info phase center offset  returns the 1-sigma uncertainty of the z-axis offset of the phase center from the origin  of the android sensor coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,source,source
GnssAntennaInfo.PhaseCenterOffset_hashCode,"hash code from gnss antenna info phase center offset  returns a hash code value for the objec. Return type is int and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,neither,source
GnssAntennaInfo.PhaseCenterOffset_toString,"to string from gnss antenna info phase center offset  returns a string representation of the objec. Return type is String and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,neither,source
GnssAntennaInfo.PhaseCenterOffset_writeToParcel,"write to parcel from gnss antenna info phase center offset  flatten this object in to a parce. Return type is void and parameters are parcel int. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2021,sink,sink
GnssAntennaInfo.SphericalCorrections_describeContents,"describe contents from gnss antenna info spherical corrections  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,source,neither
GnssAntennaInfo.SphericalCorrections_getCorrectionUncertaintiesArray,"get correction uncertainties array from gnss antenna info spherical corrections  array representing uncertainty on corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,source,source
GnssAntennaInfo.SphericalCorrections_getCorrectionsArray,"get corrections array from gnss antenna info spherical corrections  array representing corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaPhi,"get delta phi from gnss antenna info spherical corrections  the fixed phi angle separation between successive column. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaTheta,"get delta theta from gnss antenna info spherical corrections  the fixed theta angle separation between successive row. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,source,source
GnssAntennaInfo.SphericalCorrections_toString,"to string from gnss antenna info spherical corrections  returns a string representation of the objec. Return type is String and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,neither,neither
GnssAntennaInfo.SphericalCorrections_writeToParcel,"write to parcel from gnss antenna info spherical corrections  flatten this object in to a parce. Return type is void and parameters are parcel int. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2020,sink,sink
GnssAntennaInfo.SphericalCorrections_describeContents,"describe contents from gnss antenna info spherical corrections  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,source,neither
GnssAntennaInfo.SphericalCorrections_equals,"equals from gnss antenna info spherical corrections  indicates whether some other object is ""equal to"" this on. Return type is boolean and parameters are object. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,neither,neither
GnssAntennaInfo.SphericalCorrections_getCorrectionUncertaintiesArray,"get correction uncertainties array from gnss antenna info spherical corrections  array representing uncertainty on corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,source,source
GnssAntennaInfo.SphericalCorrections_getCorrectionsArray,"get corrections array from gnss antenna info spherical corrections  array representing corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaPhi,"get delta phi from gnss antenna info spherical corrections  the fixed phi angle separation between successive column. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaTheta,"get delta theta from gnss antenna info spherical corrections  the fixed theta angle separation between successive row. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,source,source
GnssAntennaInfo.SphericalCorrections_hashCode,"hash code from gnss antenna info spherical corrections  returns a hash code value for the objec. Return type is int and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,neither,neither
GnssAntennaInfo.SphericalCorrections_toString,"to string from gnss antenna info spherical corrections  returns a string representation of the objec. Return type is String and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,neither,neither
GnssAntennaInfo.SphericalCorrections_writeToParcel,"write to parcel from gnss antenna info spherical corrections  flatten this object in to a parce. Return type is void and parameters are parcel int. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2021,sink,sink
GnssAntennaInfo.PhaseCenterOffset_describeContents,"describe contents from gnss antenna info phase center offset  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,sink
GnssAntennaInfo.PhaseCenterOffset_equals,"equals from gnss antenna info phase center offset  indicates whether some other object is ""equal to"" this on. Return type is boolean and parameters are object. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,neither,neither
GnssAntennaInfo.PhaseCenterOffset_getXOffsetMm,"get x offset mm from gnss antenna info phase center offset  returns the x-axis offset of the phase center from the origin of the android sensor  coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,source
GnssAntennaInfo.PhaseCenterOffset_getXOffsetUncertaintyMm,"get x offset uncertainty mm from gnss antenna info phase center offset  returns the 1-sigma uncertainty of the x-axis offset of the phase center from the origin  of the android sensor coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetMm,"get y offset mm from gnss antenna info phase center offset  returns the y-axis offset of the phase center from the origin of the android sensor  coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,source
GnssAntennaInfo.PhaseCenterOffset_getYOffsetUncertaintyMm,"get y offset uncertainty mm from gnss antenna info phase center offset  returns the 1-sigma uncertainty of the y-axis offset of the phase center from the origin  of the android sensor coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetMm,"get z offset mm from gnss antenna info phase center offset  returns the z-axis offset of the phase center from the origin of the android sensor  coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,source
GnssAntennaInfo.PhaseCenterOffset_getZOffsetUncertaintyMm,"get z offset uncertainty mm from gnss antenna info phase center offset  returns the 1-sigma uncertainty of the z-axis offset of the phase center from the origin  of the android sensor coordinate system, in millimeter. Return type is double and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,source,source
GnssAntennaInfo.PhaseCenterOffset_hashCode,"hash code from gnss antenna info phase center offset  returns a hash code value for the objec. Return type is int and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,neither,source
GnssAntennaInfo.PhaseCenterOffset_toString,"to string from gnss antenna info phase center offset  returns a string representation of the objec. Return type is String and no argument. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,neither,source
GnssAntennaInfo.PhaseCenterOffset_writeToParcel,"write to parcel from gnss antenna info phase center offset  flatten this object in to a parce. Return type is void and parameters are parcel int. class containing information about the antenna phase center offset   pco is defined with respect to the origin of the android sensor coordinate system, example, center of primary screen for mobiles   see sensor or form factor documents for details  uncertainties are reported to 1 sigma",2022,sink,sink
GnssAntennaInfo.SphericalCorrections_describeContents,"describe contents from gnss antenna info spherical corrections  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,source,neither
GnssAntennaInfo.SphericalCorrections_getCorrectionUncertaintiesArray,"get correction uncertainties array from gnss antenna info spherical corrections  array representing uncertainty on corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,source,source
GnssAntennaInfo.SphericalCorrections_getCorrectionsArray,"get corrections array from gnss antenna info spherical corrections  array representing corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaPhi,"get delta phi from gnss antenna info spherical corrections  the fixed phi angle separation between successive column. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaTheta,"get delta theta from gnss antenna info spherical corrections  the fixed theta angle separation between successive row. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,source,source
GnssAntennaInfo.SphericalCorrections_toString,"to string from gnss antenna info spherical corrections  returns a string representation of the objec. Return type is String and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,neither,neither
GnssAntennaInfo.SphericalCorrections_writeToParcel,"write to parcel from gnss antenna info spherical corrections  flatten this object in to a parce. Return type is void and parameters are parcel int. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2018,sink,sink
GnssAntennaInfo.SphericalCorrections_describeContents,"describe contents from gnss antenna info spherical corrections  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,source,neither
GnssAntennaInfo.SphericalCorrections_equals,"equals from gnss antenna info spherical corrections  indicates whether some other object is ""equal to"" this on. Return type is boolean and parameters are object. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,neither,neither
GnssAntennaInfo.SphericalCorrections_getCorrectionUncertaintiesArray,"get correction uncertainties array from gnss antenna info spherical corrections  array representing uncertainty on corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,source,source
GnssAntennaInfo.SphericalCorrections_getCorrectionsArray,"get corrections array from gnss antenna info spherical corrections  array representing corrections on a spherical mappin. Return type is double[][] and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaPhi,"get delta phi from gnss antenna info spherical corrections  the fixed phi angle separation between successive column. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,source,source
GnssAntennaInfo.SphericalCorrections_getDeltaTheta,"get delta theta from gnss antenna info spherical corrections  the fixed theta angle separation between successive row. Return type is double and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,source,source
GnssAntennaInfo.SphericalCorrections_hashCode,"hash code from gnss antenna info spherical corrections  returns a hash code value for the objec. Return type is int and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,neither,neither
GnssAntennaInfo.SphericalCorrections_toString,"to string from gnss antenna info spherical corrections  returns a string representation of the objec. Return type is String and no argument. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,neither,neither
GnssAntennaInfo.SphericalCorrections_writeToParcel,"write to parcel from gnss antenna info spherical corrections  flatten this object in to a parce. Return type is void and parameters are parcel int. represents corrections on a spherical mapping  corrections are added to measurements to obtain the corrected values  the corrections and associated  uncertainties are represented by respect 2 d arrays  each row  represents a fixed theta  the first row corresponds to a theta angle of 0 degrees  the last row corresponds to a theta angle of  degrees, where delta theta is the regular spacing between azimuthal angles, i e , delta theta = 360 /   the columns  represent fixed zenith angles, beginning at 0 degrees and ending at 180 degrees  they are separated by delta phi, the regular spacing between zenith angles, i e , delta phi = 180 /",2022,sink,sink
GnssMeasurementsEvent_describeContents,describe contents from gnss measurements event  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2018,source,neither
GnssMeasurementsEvent_getClock,get clock from gnss measurements event  gets the gnss receiver clock information associated with the measurements for the current  even. Return type is Gnss Clock and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2018,source,source
GnssMeasurementsEvent_getMeasurements,get measurements from gnss measurements event  gets a read-only collection of measurements associated with the current even. Return type is Collection and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2018,source,source
GnssMeasurementsEvent_toString,to string from gnss measurements event  returns a string representation of the objec. Return type is String and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2018,neither,source
GnssMeasurementsEvent_writeToParcel,write to parcel from gnss measurements event  flatten this object in to a parce. Return type is void and parameters are parcel int. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2018,sink,sink
GnssMeasurementsEvent_describeContents,describe contents from gnss measurements event  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2020,source,neither
GnssMeasurementsEvent_getClock,get clock from gnss measurements event  gets the gnss receiver clock information associated with the measurements for the current  even. Return type is Gnss Clock and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2020,source,source
GnssMeasurementsEvent_getMeasurements,get measurements from gnss measurements event  gets a read-only collection of measurements associated with the current even. Return type is Collection and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2020,source,source
GnssMeasurementsEvent_toString,to string from gnss measurements event  returns a string representation of the objec. Return type is String and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2020,neither,source
GnssMeasurementsEvent_writeToParcel,write to parcel from gnss measurements event  flatten this object in to a parce. Return type is void and parameters are parcel int. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2020,sink,sink
GnssMeasurementsEvent_describeContents,describe contents from gnss measurements event  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2021,source,neither
GnssMeasurementsEvent_getClock,get clock from gnss measurements event  gets the gnss receiver clock information associated with the measurements for the current  even. Return type is Gnss Clock and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2021,source,source
GnssMeasurementsEvent_getMeasurements,get measurements from gnss measurements event  gets a read-only collection of measurements associated with the current even. Return type is Collection and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2021,source,source
GnssMeasurementsEvent_toString,to string from gnss measurements event  returns a string representation of the objec. Return type is String and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2021,neither,source
GnssMeasurementsEvent_writeToParcel,write to parcel from gnss measurements event  flatten this object in to a parce. Return type is void and parameters are parcel int. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2021,sink,sink
GnssMeasurementsEvent.Callback_onGnssMeasurementsReceived,on gnss measurements received from gnss measurements event callback  reports the latest collected gnss measurement. Return type is void and parameters are gnss measurements event. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback,2020,neither,source
GnssMeasurementsEvent.Callback_onStatusChanged,on status changed from gnss measurements event callback  reports the latest status of the gnss measurements sub-syste. Return type is void and parameters are int. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback,2020,neither,sink
GnssMeasurementsEvent.Callback_onGnssMeasurementsReceived,on gnss measurements received from gnss measurements event callback  reports the latest collected gnss measurement. Return type is void and parameters are gnss measurements event. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback,2021,neither,source
GnssMeasurementsEvent.Callback_onStatusChanged,"on status changed from gnss measurements event callback  this method was deprecated  in api level 31  do not rely on this callback from android s onwards this callback will be  invoked once with s t a t u s_ r e a d y in all cases for backwards compatibility, and  then never invoked again use location manager a p is if you need to determine if  gnss measurements are supported or if location is off, et. Return type is void and parameters are int. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback",2021,neither,sink
GnssMeasurementsEvent_describeContents,describe contents from gnss measurements event  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2022,source,neither
GnssMeasurementsEvent_getClock,get clock from gnss measurements event  gets the gnss receiver clock information associated with the measurements for the current  even. Return type is Gnss Clock and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2022,source,source
GnssMeasurementsEvent_getGnssAutomaticGainControls,get gnss automatic gain controls from gnss measurements event  gets the collection of gnss automatic gain control associated with the  current even. Return type is Collection and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2022,source,source
GnssMeasurementsEvent_getMeasurements,get measurements from gnss measurements event  gets the collection of measurements associated with the current even. Return type is Collection and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2022,source,source
GnssMeasurementsEvent_toString,to string from gnss measurements event  returns a string representation of the objec. Return type is String and no argument. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2022,neither,source
GnssMeasurementsEvent_writeToParcel,write to parcel from gnss measurements event  flatten this object in to a parce. Return type is void and parameters are parcel int. a class implementing a container for data associated with a measurement event  events are delivered to registered instances of callback,2022,sink,sink
GnssMeasurementsEvent.Callback_onGnssMeasurementsReceived,on gnss measurements received from gnss measurements event callback  reports the latest collected gnss measurement. Return type is void and parameters are gnss measurements event. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback,2018,neither,source
GnssMeasurementsEvent.Callback_onStatusChanged,on status changed from gnss measurements event callback  reports the latest status of the gnss measurements sub-syste. Return type is void and parameters are int. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback,2018,neither,sink
GnssMeasurementsEvent.Callback_onGnssMeasurementsReceived,on gnss measurements received from gnss measurements event callback  reports the latest collected gnss measurement. Return type is void and parameters are gnss measurements event. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback,2022,neither,source
GnssMeasurementsEvent.Callback_onStatusChanged,"on status changed from gnss measurements event callback  this method was deprecated  in api level 31  do not rely on this callback from android s onwards this callback will be  invoked once with s t a t u s_ r e a d y in all cases for backwards compatibility, and  then never invoked again use location manager a p is if you need to determine if  gnss measurements are supported or if location is off, et. Return type is void and parameters are int. used for receiving gnss satellite measurements from the gnss engine  each measurement contains raw and computed data identifying a satellite  you can implement this interface and call location manager#register gnss measurements callback",2022,neither,sink
GnssNavigationMessage.Callback_onGnssNavigationMessageReceived,on gnss navigation message received from gnss navigation message callback  returns the latest collected gnss navigation messag. Return type is void and parameters are gnss navigation message. used for receiving gnss satellite navigation messages from the gnss engine,2018,neither,neither
GnssNavigationMessage.Callback_onStatusChanged,on status changed from gnss navigation message callback  returns the latest status of the gnss navigation messages sub-syste. Return type is void and parameters are int. used for receiving gnss satellite navigation messages from the gnss engine,2018,neither,neither
GnssNavigationMessage.Callback_onGnssNavigationMessageReceived,on gnss navigation message received from gnss navigation message callback  returns the latest collected gnss navigation messag. Return type is void and parameters are gnss navigation message. used for receiving gnss satellite navigation messages from the gnss engine,2020,neither,neither
GnssNavigationMessage.Callback_onStatusChanged,on status changed from gnss navigation message callback  returns the latest status of the gnss navigation messages sub-syste. Return type is void and parameters are int. used for receiving gnss satellite navigation messages from the gnss engine,2020,neither,neither
GnssNavigationMessage.Callback_onGnssNavigationMessageReceived,on gnss navigation message received from gnss navigation message callback  returns the latest collected gnss navigation messag. Return type is void and parameters are gnss navigation message. used for receiving gnss satellite navigation messages from the gnss engine,2022,neither,neither
GnssNavigationMessage.Callback_onStatusChanged,"on status changed from gnss navigation message callback  this method was deprecated  in api level 31  do not rely on this callback from android s onwards this callback will be  invoked once with s t a t u s_ r e a d y in all cases for backwards compatibility, and  then never invoked again use location manager a p is if you need to determine if  gnss navigation messages are supported or if location is off, et. Return type is void and parameters are int. used for receiving gnss satellite navigation messages from the gnss engine",2022,neither,neither
GnssNavigationMessage.Callback_onGnssNavigationMessageReceived,on gnss navigation message received from gnss navigation message callback  returns the latest collected gnss navigation messag. Return type is void and parameters are gnss navigation message. used for receiving gnss satellite navigation messages from the gnss engine,2021,neither,neither
GnssNavigationMessage.Callback_onStatusChanged,"on status changed from gnss navigation message callback  this method was deprecated  in api level 31  do not rely on this callback from android s onwards this callback will be  invoked once with s t a t u s_ r e a d y in all cases for backwards compatibility, and  then never invoked again use location manager a p is if you need to determine if  gnss navigation messages are supported or if location is off, et. Return type is void and parameters are int. used for receiving gnss satellite navigation messages from the gnss engine",2021,neither,neither
GpsSatellite_getAzimuth,get azimuth from gps satellite  returns the azimuth of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,source
GpsSatellite_getElevation,get elevation from gps satellite  returns the elevation of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,source
GpsSatellite_getPrn,get prn from gps satellite  returns the prn  for the satellit. Return type is int and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,source
GpsSatellite_getSnr,get snr from gps satellite  returns the signal to noise ratio for the satellit. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,source
GpsSatellite_hasAlmanac,has almanac from gps satellite  returns true if the gps engine has almanac data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,source
GpsSatellite_hasEphemeris,has ephemeris from gps satellite  returns true if the gps engine has ephemeris data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,source
GpsSatellite_usedInFix,used in fix from gps satellite  returns true if the satellite was used by the gps engine when  calculating the most recent gps fi. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2018,source,neither
GpsSatellite_getAzimuth,get azimuth from gps satellite  returns the azimuth of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,source
GpsSatellite_getElevation,get elevation from gps satellite  returns the elevation of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,source
GpsSatellite_getPrn,get prn from gps satellite  returns the prn  for the satellit. Return type is int and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,source
GpsSatellite_getSnr,get snr from gps satellite  returns the signal to noise ratio for the satellit. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,source
GpsSatellite_hasAlmanac,has almanac from gps satellite  returns true if the gps engine has almanac data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,source
GpsSatellite_hasEphemeris,has ephemeris from gps satellite  returns true if the gps engine has ephemeris data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,source
GpsSatellite_usedInFix,used in fix from gps satellite  returns true if the satellite was used by the gps engine when  calculating the most recent gps fi. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2020,source,neither
GpsStatus_getMaxSatellites,get max satellites from gps status  returns the maximum number of satellites that can be in the satellite  list that can be returned by get satellite. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2018,source,source
GpsStatus_getSatellites,"get satellites from gps status  returns an array of gps satellite objects, which represent the  current state of the gps engin. Return type is Iterable and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener",2018,source,source
GpsStatus_getTimeToFirstFix,get time to first fix from gps status  returns the time required to receive the first fix since the most recent  restart of the gps engin. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2018,source,source
GpsSatellite_getAzimuth,get azimuth from gps satellite  returns the azimuth of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,source
GpsSatellite_getElevation,get elevation from gps satellite  returns the elevation of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,source
GpsSatellite_getPrn,get prn from gps satellite  returns the prn  for the satellit. Return type is int and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,source
GpsSatellite_getSnr,get snr from gps satellite  returns the signal to noise ratio for the satellit. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,source
GpsSatellite_hasAlmanac,has almanac from gps satellite  returns true if the gps engine has almanac data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,source
GpsSatellite_hasEphemeris,has ephemeris from gps satellite  returns true if the gps engine has ephemeris data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,source
GpsSatellite_usedInFix,used in fix from gps satellite  returns true if the satellite was used by the gps engine when  calculating the most recent gps fi. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2021,source,neither
GpsSatellite_getAzimuth,get azimuth from gps satellite  returns the azimuth of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,source
GpsSatellite_getElevation,get elevation from gps satellite  returns the elevation of the satellite in degree. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,source
GpsSatellite_getPrn,get prn from gps satellite  returns the prn  for the satellit. Return type is int and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,source
GpsSatellite_getSnr,get snr from gps satellite  returns the signal to noise ratio for the satellit. Return type is float and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,source
GpsSatellite_hasAlmanac,has almanac from gps satellite  returns true if the gps engine has almanac data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,source
GpsSatellite_hasEphemeris,has ephemeris from gps satellite  returns true if the gps engine has ephemeris data for the satellit. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,source
GpsSatellite_usedInFix,used in fix from gps satellite  returns true if the satellite was used by the gps engine when  calculating the most recent gps fi. Return type is boolean and no argument. this class represents the current state of a gps satellite  this class is used in conjunction with the gps status class,2022,source,neither
GpsStatus_create,create from gps status  builds a gps status from the given gnss statu. Return type is Gps Status and parameters are gnss status int. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2020,neither,neither
GpsStatus_getMaxSatellites,get max satellites from gps status  returns the maximum number of satellites that can be in the satellite  list that can be returned by get satellite. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2020,source,source
GpsStatus_getSatellites,"get satellites from gps status  returns an array of gps satellite objects, which represent the  current state of the gps engin. Return type is Iterable and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener",2020,source,source
GpsStatus_getTimeToFirstFix,get time to first fix from gps status  returns the time required to receive the first fix since the most recent  restart of the gps engin. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2020,source,source
GpsStatus_create,create from gps status  builds a gps status from the given gnss statu. Return type is Gps Status and parameters are gnss status int. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2021,neither,neither
GpsStatus_getMaxSatellites,get max satellites from gps status  returns the maximum number of satellites that can be in the satellite  list that can be returned by get satellite. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2021,source,source
GpsStatus_getSatellites,"get satellites from gps status  returns an array of gps satellite objects, which represent the  current state of the gps engin. Return type is Iterable and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener",2021,source,source
GpsStatus_getTimeToFirstFix,get time to first fix from gps status  returns the time required to receive the first fix since the most recent  restart of the gps engin. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2021,source,source
Location_bearingTo,bearing to from location  returns the approximate initial bearing in degrees east of true  north when traveling along the shortest path between this  location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location,2018,source,neither
Location_convert,convert from location  converts a coordinate to a string representatio. Return type is String and parameters are double int. a data class representing a geographic location,2018,neither,neither
Location_convert,"convert from location  converts a string in one of the formats described by  format degrees, format minutes, or format seconds into a  doubl. Return type is   double and parameters are string. a data class representing a geographic location",2018,neither,neither
Location_describeContents,describe contents from location  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a data class representing a geographic location,2018,neither,neither
Location_distanceBetween,"distance between from location  computes the approximate distance in meters between two  locations, and optionally the initial and final bearings of the  shortest path between the. Return type is   void and parameters are double double double double float[]. a data class representing a geographic location",2018,neither,neither
Location_distanceTo,distance to from location  returns the approximate distance in meters between this  location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location,2018,source,source
Location_dump,dump from location dumps location information to the given printe. Return type is void and parameters are printer string. a data class representing a geographic location,2018,sink,sink
Location_getAccuracy,"get accuracy from location  get the estimated horizontal accuracy of this location, radial, in meter. Return type is float and no argument. a data class representing a geographic location",2018,source,source
Location_getAltitude,"get altitude from location  get the altitude if available, in meters above the wgs 84 reference  ellipsoi. Return type is double and no argument. a data class representing a geographic location",2018,source,source
Location_getBearing,"get bearing from location  get the bearing, in degree. Return type is float and no argument. a data class representing a geographic location",2018,source,source
Location_getBearingAccuracyDegrees,"get bearing accuracy degrees from location  get the estimated bearing accuracy of this location, in degree. Return type is float and no argument. a data class representing a geographic location",2018,source,source
Location_getElapsedRealtimeNanos,"get elapsed realtime nanos from location  return the time of this fix, in elapsed real-time since system boo. Return type is long and no argument. a data class representing a geographic location",2018,source,source
Location_getExtras,get extras from location  returns additional provider-specific information about the  location fix as a bundl. Return type is Bundle and no argument. a data class representing a geographic location,2018,source,source
Location_getLatitude,"get latitude from location  get the latitude, in degree. Return type is double and no argument. a data class representing a geographic location",2018,source,source
Location_getLongitude,"get longitude from location  get the longitude, in degree. Return type is double and no argument. a data class representing a geographic location",2018,source,source
Location_getProvider,get provider from location  returns the name of the provider that generated this fi. Return type is String and no argument. a data class representing a geographic location,2018,source,source
Location_getSpeed,"get speed from location  get the speed if it is available, in meters/second over groun. Return type is float and no argument. a data class representing a geographic location",2018,source,source
Location_getSpeedAccuracyMetersPerSecond,"get speed accuracy meters per second from location  get the estimated speed accuracy of this location, in meters per secon. Return type is float and no argument. a data class representing a geographic location",2018,source,source
Location_getTime,"get time from location  return the utc time of this fix, in milliseconds since january 1, 197. Return type is long and no argument. a data class representing a geographic location",2018,source,source
Location_getVerticalAccuracyMeters,"get vertical accuracy meters from location  get the estimated vertical accuracy of this location, in meter. Return type is float and no argument. a data class representing a geographic location",2018,source,source
Location_hasAccuracy,has accuracy from location  true if this location has a horizontal accurac. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_hasAltitude,has altitude from location  true if this location has an altitud. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_hasBearing,has bearing from location  true if this location has a bearin. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_hasBearingAccuracy,has bearing accuracy from location  true if this location has a bearing accurac. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_hasSpeed,has speed from location  true if this location has a spee. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_hasSpeedAccuracy,has speed accuracy from location  true if this location has a speed accurac. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_hasVerticalAccuracy,has vertical accuracy from location  true if this location has a vertical accurac. Return type is boolean and no argument. a data class representing a geographic location,2018,neither,neither
Location_isFromMockProvider,is from mock provider from location  returns true if the location came from a mock provide. Return type is boolean and no argument. a data class representing a geographic location,2018,source,neither
Location_removeAccuracy,remove accuracy from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2018,neither,neither
Location_removeAltitude,remove altitude from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2018,neither,sink
Location_removeBearing,remove bearing from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2018,neither,neither
Location_removeSpeed,remove speed from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2018,neither,sink
Location_reset,reset from location  clears the contents of the locatio. Return type is void and no argument. a data class representing a geographic location,2018,neither,neither
Location_set,set from location  sets the contents of the location to the values from the given locatio. Return type is void and parameters are location. a data class representing a geographic location,2018,sink,sink
Location_setAccuracy,"set accuracy from location  set the estimated horizontal accuracy of this location, meter. Return type is void and parameters are float. a data class representing a geographic location",2018,sink,sink
Location_setAltitude,"set altitude from location  set the altitude, in meters above the wgs 84 reference ellipsoi. Return type is void and parameters are double. a data class representing a geographic location",2018,sink,sink
Location_setBearing,"set bearing from location  set the bearing, in degree. Return type is void and parameters are float. a data class representing a geographic location",2018,sink,sink
Location_setBearingAccuracyDegrees,"set bearing accuracy degrees from location  set the estimated bearing accuracy of this location, degree. Return type is void and parameters are float. a data class representing a geographic location",2018,sink,sink
Location_setElapsedRealtimeNanos,"set elapsed realtime nanos from location  set the time of this fix, in elapsed real-time since system boo. Return type is void and parameters are long. a data class representing a geographic location",2018,sink,sink
Location_setExtras,set extras from location  sets the extra information associated with this fix to the  given bundl. Return type is void and parameters are bundle. a data class representing a geographic location,2018,sink,sink
Location_setLatitude,"set latitude from location  set the latitude, in degree. Return type is void and parameters are double. a data class representing a geographic location",2018,sink,sink
Location_setLongitude,"set longitude from location  set the longitude, in degree. Return type is void and parameters are double. a data class representing a geographic location",2018,sink,sink
Location_setProvider,set provider from location  sets the name of the provider that generated this fi. Return type is void and parameters are string. a data class representing a geographic location,2018,sink,sink
Location_setSpeed,"set speed from location  set the speed, in meters/second over groun. Return type is void and parameters are float. a data class representing a geographic location",2018,sink,sink
Location_setSpeedAccuracyMetersPerSecond,"set speed accuracy meters per second from location  set the estimated speed accuracy of this location, meters per secon. Return type is void and parameters are float. a data class representing a geographic location",2018,sink,sink
Location_setTime,"set time from location  set the utc time of this fix, in milliseconds since january 1,  197. Return type is void and parameters are long. a data class representing a geographic location",2018,sink,sink
Location_setVerticalAccuracyMeters,"set vertical accuracy meters from location  set the estimated vertical accuracy of this location, meter. Return type is void and parameters are float. a data class representing a geographic location",2018,sink,sink
Location_toString,to string from location  returns a string representation of the objec. Return type is String and no argument. a data class representing a geographic location,2018,sink,source
Location_writeToParcel,write to parcel from location  flatten this object in to a parce. Return type is void and parameters are parcel int. a data class representing a geographic location,2018,sink,sink
GpsStatus_create,create from gps status  builds a gps status from the given gnss statu. Return type is Gps Status and parameters are gnss status int. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2022,neither,neither
GpsStatus_getMaxSatellites,get max satellites from gps status  returns the maximum number of satellites that can be in the satellite  list that can be returned by get satellite. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2022,source,source
GpsStatus_getSatellites,"get satellites from gps status  returns an array of gps satellite objects, which represent the  current state of the gps engin. Return type is Iterable and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener",2022,source,source
GpsStatus_getTimeToFirstFix,get time to first fix from gps status  returns the time required to receive the first fix since the most recent  restart of the gps engin. Return type is int and no argument. this class represents the current state of the gps engine and is used in conjunction with gps status listener,2022,source,source
Location_bearingTo,bearing to from location  returns the approximate initial bearing in degrees east of true  north when traveling along the shortest path between this  location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location,2021,source,neither
Location_convert,convert from location  converts a coordinate to a string representatio. Return type is String and parameters are double int. a data class representing a geographic location,2021,neither,neither
Location_convert,"convert from location  converts a string in one of the formats described by  format degrees, format minutes, or format seconds into a  doubl. Return type is   double and parameters are string. a data class representing a geographic location",2021,neither,neither
Location_describeContents,describe contents from location  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a data class representing a geographic location,2021,neither,neither
Location_distanceBetween,"distance between from location  computes the approximate distance in meters between two  locations, and optionally the initial and final bearings of the  shortest path between the. Return type is   void and parameters are double double double double float[]. a data class representing a geographic location",2021,neither,neither
Location_distanceTo,distance to from location  returns the approximate distance in meters between this  location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location,2021,source,source
Location_dump,dump from location dumps location information to the given printe. Return type is void and parameters are printer string. a data class representing a geographic location,2021,sink,sink
Location_equals,equals from location  location equality is provided primarily for test purpose. Return type is boolean and parameters are object. a data class representing a geographic location,2021,neither,neither
Location_getAccuracy,"get accuracy from location  get the estimated horizontal accuracy of this location, radial, in meter. Return type is float and no argument. a data class representing a geographic location",2021,source,source
Location_getAltitude,"get altitude from location  get the altitude if available, in meters above the wgs 84 reference  ellipsoi. Return type is double and no argument. a data class representing a geographic location",2021,source,source
Location_getBearing,"get bearing from location  get the bearing, in degree. Return type is float and no argument. a data class representing a geographic location",2021,source,source
Location_getBearingAccuracyDegrees,"get bearing accuracy degrees from location  get the estimated bearing accuracy of this location, in degree. Return type is float and no argument. a data class representing a geographic location",2021,source,source
Location_getElapsedRealtimeNanos,get elapsed realtime nanos from location  return the time of this fix in nanoseconds of elapsed realtime since system boo. Return type is long and no argument. a data class representing a geographic location,2021,source,source
Location_getElapsedRealtimeUncertaintyNanos,"get elapsed realtime uncertainty nanos from location  get estimate of the relative precision of the alignment of the  elapsed realtime nanos timestamp, with the reported measurements in  nanoseconds. Return type is double and no argument. a data class representing a geographic location",2021,source,source
Location_getExtras,get extras from location  returns additional provider-specific information about the location fix as a bundl. Return type is Bundle and no argument. a data class representing a geographic location,2021,source,source
Location_getLatitude,"get latitude from location  get the latitude, in degree. Return type is double and no argument. a data class representing a geographic location",2021,source,source
Location_getLongitude,"get longitude from location  get the longitude, in degree. Return type is double and no argument. a data class representing a geographic location",2021,source,source
Location_getProvider,get provider from location  returns the name of the provider that generated this fi. Return type is String and no argument. a data class representing a geographic location,2021,source,source
Location_getSpeed,"get speed from location  get the speed if it is available, in meters/second over groun. Return type is float and no argument. a data class representing a geographic location",2021,source,source
Location_getSpeedAccuracyMetersPerSecond,"get speed accuracy meters per second from location  get the estimated speed accuracy of this location, in meters per secon. Return type is float and no argument. a data class representing a geographic location",2021,source,source
Location_getTime,"get time from location  return the utc time of this location fix, in milliseconds since epoch. Return type is long and no argument. a data class representing a geographic location",2021,source,source
Location_getVerticalAccuracyMeters,"get vertical accuracy meters from location  get the estimated vertical accuracy of this location, in meter. Return type is float and no argument. a data class representing a geographic location",2021,source,source
Location_hasAccuracy,has accuracy from location  true if this location has a horizontal accurac. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasAltitude,has altitude from location  true if this location has an altitud. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasBearing,has bearing from location  true if this location has a bearin. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasBearingAccuracy,has bearing accuracy from location  true if this location has a bearing accurac. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasElapsedRealtimeUncertaintyNanos,has elapsed realtime uncertainty nanos from location  true if this location has a elapsed realtime accurac. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasSpeed,has speed from location  true if this location has a spee. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasSpeedAccuracy,has speed accuracy from location  true if this location has a speed accurac. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hasVerticalAccuracy,has vertical accuracy from location  true if this location has a vertical accurac. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_hashCode,hash code from location  returns a hash code value for the objec. Return type is int and no argument. a data class representing a geographic location,2021,source,source
Location_isFromMockProvider,is from mock provider from location  this method was deprecated  in api level 31  prefer is mock instea. Return type is boolean and no argument. a data class representing a geographic location,2021,source,neither
Location_isMock,is mock from location  returns true if this location is marked as a mock locatio. Return type is boolean and no argument. a data class representing a geographic location,2021,neither,neither
Location_removeAccuracy,remove accuracy from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2021,neither,neither
Location_removeAltitude,remove altitude from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2021,neither,sink
Location_removeBearing,remove bearing from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2021,neither,neither
Location_removeSpeed,remove speed from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2021,neither,sink
Location_reset,reset from location  clears the contents of the locatio. Return type is void and no argument. a data class representing a geographic location,2021,neither,neither
Location_set,set from location  sets the contents of the location to the values from the given locatio. Return type is void and parameters are location. a data class representing a geographic location,2021,sink,sink
Location_setAccuracy,"set accuracy from location  set the estimated horizontal accuracy of this location, meter. Return type is void and parameters are float. a data class representing a geographic location",2021,sink,sink
Location_setAltitude,"set altitude from location  set the altitude, in meters above the wgs 84 reference ellipsoi. Return type is void and parameters are double. a data class representing a geographic location",2021,sink,sink
Location_setBearing,"set bearing from location  set the bearing, in degree. Return type is void and parameters are float. a data class representing a geographic location",2021,sink,sink
Location_setBearingAccuracyDegrees,"set bearing accuracy degrees from location  set the estimated bearing accuracy of this location, degree. Return type is void and parameters are float. a data class representing a geographic location",2021,sink,sink
Location_setElapsedRealtimeNanos,"set elapsed realtime nanos from location  set the time of this fix, in elapsed realtime since system boo. Return type is void and parameters are long. a data class representing a geographic location",2021,sink,sink
Location_setElapsedRealtimeUncertaintyNanos,"set elapsed realtime uncertainty nanos from location  set estimate of the relative precision of the alignment of the  elapsed realtime nanos timestamp, with the reported measurements in  nanoseconds. Return type is void and parameters are double. a data class representing a geographic location",2021,sink,sink
Location_setExtras,set extras from location  sets the extra information associated with this fix to the given bundl. Return type is void and parameters are bundle. a data class representing a geographic location,2021,sink,sink
Location_setLatitude,"set latitude from location  set the latitude, in degree. Return type is void and parameters are double. a data class representing a geographic location",2021,sink,sink
Location_setLongitude,"set longitude from location  set the longitude, in degree. Return type is void and parameters are double. a data class representing a geographic location",2021,sink,sink
Location_setMock,set mock from location  sets whether this location is marked as a mock locatio. Return type is void and parameters are boolean. a data class representing a geographic location,2021,sink,sink
Location_setProvider,set provider from location  sets the name of the provider that generated this fi. Return type is void and parameters are string. a data class representing a geographic location,2021,sink,sink
Location_setSpeed,"set speed from location  set the speed, in meters/second over groun. Return type is void and parameters are float. a data class representing a geographic location",2021,sink,sink
Location_setSpeedAccuracyMetersPerSecond,"set speed accuracy meters per second from location  set the estimated speed accuracy of this location, meters per secon. Return type is void and parameters are float. a data class representing a geographic location",2021,sink,sink
Location_setTime,"set time from location  set the utc time of this fix, in milliseconds since epoch. Return type is void and parameters are long. a data class representing a geographic location",2021,sink,sink
Location_setVerticalAccuracyMeters,"set vertical accuracy meters from location  set the estimated vertical accuracy of this location, meter. Return type is void and parameters are float. a data class representing a geographic location",2021,sink,sink
Location_toString,to string from location  returns a string representation of the objec. Return type is String and no argument. a data class representing a geographic location,2021,sink,source
Location_writeToParcel,write to parcel from location  flatten this object in to a parce. Return type is void and parameters are parcel int. a data class representing a geographic location,2021,sink,sink
Location_bearingTo,bearing to from location  returns the approximate initial bearing in degrees east of true  north when traveling along the shortest path between this  location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location,2020,source,neither
Location_convert,convert from location  converts a coordinate to a string representatio. Return type is String and parameters are double int. a data class representing a geographic location,2020,neither,neither
Location_convert,"convert from location  converts a string in one of the formats described by  format degrees, format minutes, or format seconds into a  doubl. Return type is   double and parameters are string. a data class representing a geographic location",2020,neither,neither
Location_describeContents,describe contents from location  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a data class representing a geographic location,2020,neither,neither
Location_distanceBetween,"distance between from location  computes the approximate distance in meters between two  locations, and optionally the initial and final bearings of the  shortest path between the. Return type is   void and parameters are double double double double float[]. a data class representing a geographic location",2020,neither,neither
Location_distanceTo,distance to from location  returns the approximate distance in meters between this  location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location,2020,source,source
Location_dump,dump from location dumps location information to the given printe. Return type is void and parameters are printer string. a data class representing a geographic location,2020,sink,sink
Location_getAccuracy,"get accuracy from location  get the estimated horizontal accuracy of this location, radial, in meter. Return type is float and no argument. a data class representing a geographic location",2020,source,source
Location_getAltitude,"get altitude from location  get the altitude if available, in meters above the wgs 84 reference  ellipsoi. Return type is double and no argument. a data class representing a geographic location",2020,source,source
Location_getBearing,"get bearing from location  get the bearing, in degree. Return type is float and no argument. a data class representing a geographic location",2020,source,source
Location_getBearingAccuracyDegrees,"get bearing accuracy degrees from location  get the estimated bearing accuracy of this location, in degree. Return type is float and no argument. a data class representing a geographic location",2020,source,source
Location_getElapsedRealtimeNanos,"get elapsed realtime nanos from location  return the time of this fix, in elapsed real-time since system boo. Return type is long and no argument. a data class representing a geographic location",2020,source,source
Location_getElapsedRealtimeUncertaintyNanos,"get elapsed realtime uncertainty nanos from location  get estimate of the relative precision of the alignment of the  elapsed realtime nanos timestamp, with the reported measurements in  nanoseconds. Return type is double and no argument. a data class representing a geographic location",2020,source,source
Location_getExtras,get extras from location  returns additional provider-specific information about the  location fix as a bundl. Return type is Bundle and no argument. a data class representing a geographic location,2020,source,source
Location_getLatitude,"get latitude from location  get the latitude, in degree. Return type is double and no argument. a data class representing a geographic location",2020,source,source
Location_getLongitude,"get longitude from location  get the longitude, in degree. Return type is double and no argument. a data class representing a geographic location",2020,source,source
Location_getProvider,get provider from location  returns the name of the provider that generated this fi. Return type is String and no argument. a data class representing a geographic location,2020,source,source
Location_getSpeed,"get speed from location  get the speed if it is available, in meters/second over groun. Return type is float and no argument. a data class representing a geographic location",2020,source,source
Location_getSpeedAccuracyMetersPerSecond,"get speed accuracy meters per second from location  get the estimated speed accuracy of this location, in meters per secon. Return type is float and no argument. a data class representing a geographic location",2020,source,source
Location_getTime,"get time from location  return the utc time of this fix, in milliseconds since january 1, 197. Return type is long and no argument. a data class representing a geographic location",2020,source,source
Location_getVerticalAccuracyMeters,"get vertical accuracy meters from location  get the estimated vertical accuracy of this location, in meter. Return type is float and no argument. a data class representing a geographic location",2020,source,source
Location_hasAccuracy,has accuracy from location  true if this location has a horizontal accurac. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasAltitude,has altitude from location  true if this location has an altitud. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasBearing,has bearing from location  true if this location has a bearin. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasBearingAccuracy,has bearing accuracy from location  true if this location has a bearing accurac. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasElapsedRealtimeUncertaintyNanos,has elapsed realtime uncertainty nanos from location  true if this location has a elapsed realtime accurac. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasSpeed,has speed from location  true if this location has a spee. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasSpeedAccuracy,has speed accuracy from location  true if this location has a speed accurac. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_hasVerticalAccuracy,has vertical accuracy from location  true if this location has a vertical accurac. Return type is boolean and no argument. a data class representing a geographic location,2020,neither,neither
Location_isFromMockProvider,is from mock provider from location  returns true if the location came from a mock provide. Return type is boolean and no argument. a data class representing a geographic location,2020,source,neither
Location_removeAccuracy,remove accuracy from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2020,neither,neither
Location_removeAltitude,remove altitude from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2020,neither,sink
Location_removeBearing,remove bearing from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2020,neither,neither
Location_removeSpeed,remove speed from location  this method was deprecated  in api level 26  use a new location object for location update. Return type is void and no argument. a data class representing a geographic location,2020,neither,sink
Location_reset,reset from location  clears the contents of the locatio. Return type is void and no argument. a data class representing a geographic location,2020,neither,neither
Location_set,set from location  sets the contents of the location to the values from the given locatio. Return type is void and parameters are location. a data class representing a geographic location,2020,sink,sink
Location_setAccuracy,"set accuracy from location  set the estimated horizontal accuracy of this location, meter. Return type is void and parameters are float. a data class representing a geographic location",2020,sink,sink
Location_setAltitude,"set altitude from location  set the altitude, in meters above the wgs 84 reference ellipsoi. Return type is void and parameters are double. a data class representing a geographic location",2020,sink,sink
Location_setBearing,"set bearing from location  set the bearing, in degree. Return type is void and parameters are float. a data class representing a geographic location",2020,sink,sink
Location_setBearingAccuracyDegrees,"set bearing accuracy degrees from location  set the estimated bearing accuracy of this location, degree. Return type is void and parameters are float. a data class representing a geographic location",2020,sink,sink
Location_setElapsedRealtimeNanos,"set elapsed realtime nanos from location  set the time of this fix, in elapsed real-time since system boo. Return type is void and parameters are long. a data class representing a geographic location",2020,sink,sink
Location_setElapsedRealtimeUncertaintyNanos,"set elapsed realtime uncertainty nanos from location  set estimate of the relative precision of the alignment of the  elapsed realtime nanos timestamp, with the reported measurements in  nanoseconds. Return type is void and parameters are double. a data class representing a geographic location",2020,sink,sink
Location_setExtras,set extras from location  sets the extra information associated with this fix to the  given bundl. Return type is void and parameters are bundle. a data class representing a geographic location,2020,sink,sink
Location_setLatitude,"set latitude from location  set the latitude, in degree. Return type is void and parameters are double. a data class representing a geographic location",2020,sink,sink
Location_setLongitude,"set longitude from location  set the longitude, in degree. Return type is void and parameters are double. a data class representing a geographic location",2020,sink,sink
Location_setProvider,set provider from location  sets the name of the provider that generated this fi. Return type is void and parameters are string. a data class representing a geographic location,2020,sink,sink
Location_setSpeed,"set speed from location  set the speed, in meters/second over groun. Return type is void and parameters are float. a data class representing a geographic location",2020,sink,sink
Location_setSpeedAccuracyMetersPerSecond,"set speed accuracy meters per second from location  set the estimated speed accuracy of this location, meters per secon. Return type is void and parameters are float. a data class representing a geographic location",2020,sink,sink
Location_setTime,"set time from location  set the utc time of this fix, in milliseconds since january 1,  197. Return type is void and parameters are long. a data class representing a geographic location",2020,sink,sink
Location_setVerticalAccuracyMeters,"set vertical accuracy meters from location  set the estimated vertical accuracy of this location, meter. Return type is void and parameters are float. a data class representing a geographic location",2020,sink,sink
Location_toString,to string from location  returns a string representation of the objec. Return type is String and no argument. a data class representing a geographic location,2020,sink,source
Location_writeToParcel,write to parcel from location  flatten this object in to a parce. Return type is void and parameters are parcel int. a data class representing a geographic location,2020,sink,sink
Location_bearingTo,"bearing to from location  returns the approximate initial bearing in degrees east of true north when traveling along  the shortest path between this location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,neither
Location_convert,"convert from location  converts a latitude/longitude coordinate to a string representatio. Return type is String and parameters are double int. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_convert,"convert from location  converts a string in one of the formats described by format degrees,  format minutes, or format seconds into a doubl. Return type is   double and parameters are string. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_describeContents,"describe contents from location  describe the kinds of special objects contained in this parcelable  instance's marshaled representatio. Return type is int and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_distanceBetween,"distance between from location  computes the approximate distance in meters between two  locations, and optionally the initial and final bearings of the  shortest path between the. Return type is   void and parameters are double double double double float[]. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_distanceTo,"distance to from location  returns the approximate distance in meters between this location and the given locatio. Return type is float and parameters are location. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_dump,"dump from location  this method was deprecated  in api level 33  prefer to use to string along with whatever custom formatting is  required instead of this method it is not this class's job to manage print representation. Return type is void and parameters are printer string. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_equals,"equals from location  location equality is provided primarily for test purpose. Return type is boolean and parameters are object. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_getAccuracy,"get accuracy from location  returns the estimated horizontal accuracy radius in meters of this location at the 68th  percentile confidence leve. Return type is float and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getAltitude,"get altitude from location  the altitude of this location in meters above the w g s84 reference ellipsoi. Return type is double and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getBearing,"get bearing from location  returns the bearing at the time of this location in degree. Return type is float and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getBearingAccuracyDegrees,"get bearing accuracy degrees from location  returns the estimated bearing accuracy in degrees of this location at the 68th percentile  confidence leve. Return type is float and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getElapsedRealtimeAgeMillis,"get elapsed realtime age millis from location  a convenience method that returns the age of this location with respect to the given  reference elapsed realtim. Return type is long and parameters are long. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getElapsedRealtimeAgeMillis,"get elapsed realtime age millis from location  a convenience methods that returns the age of this location in milliseconds with respect to  the current elapsed realtim. Return type is long and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getElapsedRealtimeMillis,"get elapsed realtime millis from location  return the time of this fix in milliseconds of elapsed realtime since system boo. Return type is long and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getElapsedRealtimeNanos,"get elapsed realtime nanos from location  return the time of this fix in nanoseconds of elapsed realtime since system boo. Return type is long and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getElapsedRealtimeUncertaintyNanos,"get elapsed realtime uncertainty nanos from location  get the uncertainty in nanoseconds of the precision of get elapsed realtime nanos at  the 68th percentile confidence leve. Return type is double and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getExtras,"get extras from location  returns an optional bundle of additional information associated with this locatio. Return type is Bundle and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getLatitude,"get latitude from location  get the latitude in degree. Return type is double and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getLongitude,"get longitude from location  get the longitude in degree. Return type is double and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getProvider,"get provider from location  returns the name of the provider associated with this locatio. Return type is String and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getSpeed,"get speed from location  returns the speed at the time of this location in meters per secon. Return type is float and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getSpeedAccuracyMetersPerSecond,"get speed accuracy meters per second from location  returns the estimated speed accuracy in meters per second of this location at the 68th  percentile confidence leve. Return type is float and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getTime,"get time from location  returns the unix epoch time of this location fix, in milliseconds since the start of the unix  epoch. Return type is long and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_getVerticalAccuracyMeters,"get vertical accuracy meters from location  returns the estimated altitude accuracy in meters of this location at the 68th percentile  confidence leve. Return type is float and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_hasAccuracy,"has accuracy from location  returns true if this location has a horizontal accuracy, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasAltitude,"has altitude from location  returns true if this location has an altitude, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasBearing,"has bearing from location  true if this location has a bearing, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasBearingAccuracy,"has bearing accuracy from location  returns true if this location has a bearing accuracy, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasElapsedRealtimeUncertaintyNanos,"has elapsed realtime uncertainty nanos from location  true if this location has an elapsed realtime uncertainty, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasSpeed,"has speed from location  true if this location has a speed, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasSpeedAccuracy,"has speed accuracy from location  returns true if this location has a speed accuracy, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hasVerticalAccuracy,"has vertical accuracy from location  returns true if this location has a vertical accuracy, false otherwis. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_hashCode,"hash code from location  returns a hash code value for the objec. Return type is int and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,source
Location_isComplete,"is complete from location  return true if this location is considered complet. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_isFromMockProvider,"is from mock provider from location  this method was deprecated  in api level 31  prefer is mock instea. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,source,neither
Location_isMock,"is mock from location  returns true if this location is marked as a mock locatio. Return type is boolean and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeAccuracy,"remove accuracy from location  remove the horizontal accuracy from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeAltitude,"remove altitude from location  removes the altitude from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeBearing,"remove bearing from location  remove the bearing from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeBearingAccuracy,"remove bearing accuracy from location  remove the bearing accuracy from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeElapsedRealtimeUncertaintyNanos,"remove elapsed realtime uncertainty nanos from location  removes the elapsed realtime uncertainty from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeSpeed,"remove speed from location  remove the speed from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeSpeedAccuracy,"remove speed accuracy from location  remove the speed accuracy from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_removeVerticalAccuracy,"remove vertical accuracy from location  remove the vertical accuracy from this locatio. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_reset,"reset from location  sets the provider to null, removes all optional fields, and sets the values of all other  fields to zer. Return type is void and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,neither,neither
Location_set,"set from location  turns this location into a copy of the given locatio. Return type is void and parameters are location. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setAccuracy,"set accuracy from location  set the horizontal accuracy in meters of this locatio. Return type is void and parameters are float. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setAltitude,"set altitude from location  set the altitude of this location in meters above the w g s84 reference ellipsoi. Return type is void and parameters are double. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setBearing,"set bearing from location  set the bearing at the time of this location, in degree. Return type is void and parameters are float. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setBearingAccuracyDegrees,"set bearing accuracy degrees from location  set the bearing accuracy in degrees of this locatio. Return type is void and parameters are float. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setElapsedRealtimeNanos,"set elapsed realtime nanos from location  set the time of this location in nanoseconds of elapsed realtime since system boo. Return type is void and parameters are long. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setElapsedRealtimeUncertaintyNanos,"set elapsed realtime uncertainty nanos from location  sets the uncertainty in nanoseconds of the precision of the elapsed realtime timestamp at a  68% confidence leve. Return type is void and parameters are double. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setExtras,"set extras from location  sets the extra information associated with this fix to the given bundl. Return type is void and parameters are bundle. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setLatitude,"set latitude from location  set the latitude of this locatio. Return type is void and parameters are double. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setLongitude,"set longitude from location  set the longitude of this locatio. Return type is void and parameters are double. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setMock,"set mock from location  sets whether this location is marked as a mock locatio. Return type is void and parameters are boolean. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setProvider,"set provider from location  sets the name of the provider associated with this locatio. Return type is void and parameters are string. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setSpeed,"set speed from location  set the speed at the time of this location, in meters per secon. Return type is void and parameters are float. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setSpeedAccuracyMetersPerSecond,"set speed accuracy meters per second from location  set the speed accuracy of this location in meters per secon. Return type is void and parameters are float. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setTime,"set time from location  sets the unix epoch time of this location fix, in milliseconds since the start of the unix  epoch. Return type is void and parameters are long. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_setVerticalAccuracyMeters,"set vertical accuracy meters from location  set the altitude accuracy of this location in meter. Return type is void and parameters are float. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
Location_toString,"to string from location  returns a string representation of the objec. Return type is String and no argument. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,source
Location_writeToParcel,"write to parcel from location  flatten this object in to a parce. Return type is void and parameters are parcel int. a data class representing a geographic location  a location consists of a latitude, longitude, timestamp, accuracy, and other information such as bearing, altitude and velocity",2022,sink,sink
LocationManager_addGpsStatusListener,"add gps status listener from location manager  this method was deprecated  in api level 24  use register gnss status callback instea. Return type is boolean and parameters are gps status listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are on nmea message listener handler. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are on nmea message listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 24  use add nmea listener instea. Return type is boolean and parameters are gps status nmea listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_addProximityAlert,"add proximity alert from location manager  set a proximity alert for the location given by the position   and the given radiu. Return type is void and parameters are double double float long pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a mock location provider and adds it to the set of active provider. Return type is void and parameters are string boolean boolean boolean boolean boolean boolean boolean int int. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,sink,sink
LocationManager_clearTestProviderEnabled,"clear test provider enabled from location manager  removes any mock enabled value associated with the given provide. Return type is void and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_clearTestProviderLocation,"clear test provider location from location manager  removes any mock location associated with the given provide. Return type is void and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_clearTestProviderStatus,"clear test provider status from location manager  removes any mock status values associated with the given provide. Return type is void and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_getAllProviders,"get all providers from location manager  returns a list of the names of all known location provider. Return type is List and no argument. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getBestProvider,"get best provider from location manager  returns the name of the provider that best meets the given criteri. Return type is String and parameters are criteria boolean. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getGnssHardwareModelName,"get gnss hardware model name from location manager  returns the model name  of the gnss hardware  drive. Return type is String and no argument. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getGnssYearOfHardware,"get gnss year of hardware from location manager  returns the model year of the gnss hardware and software buil. Return type is int and no argument. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getGpsStatus,"get gps status from location manager  retrieves information about the current status of the gps engin. Return type is Gps Status and parameters are gps status. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getLastKnownLocation,"get last known location from location manager  returns a location indicating the data from the last known  location fix obtained from the given provide. Return type is Location and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getProvider,"get provider from location manager  returns the information associated with the location provider of the  given name, or null if no provider exists by that nam. Return type is Location Provider and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of location provider. Return type is List and parameters are boolean. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of location providers that satisfy the given  criteria, or null if none d. Return type is List and parameters are criteria boolean. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_isLocationEnabled,"is location enabled from location manager  returns the current enabled/disabled status of locatio. Return type is boolean and no argument. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_isProviderEnabled,"is provider enabled from location manager  returns the current enabled/disabled status of the given provide. Return type is boolean and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,source,source
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gps measurement callbac. Return type is boolean and parameters are gnss measurements event callback. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gps measurement callbac. Return type is boolean and parameters are gnss measurements event callback handler. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are gnss navigation message callback handler. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are gnss navigation message callback. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are gnss status callback. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are gnss status callback handler. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_removeGpsStatusListener,"remove gps status listener from location manager  this method was deprecated  in api level 24  use unregister gnss status callback instea. Return type is void and parameters are gps status listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  removes an nmea listene. Return type is void and parameters are on nmea message listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  this method was deprecated  in api level 24  use remove nmea listener instea. Return type is void and parameters are gps status nmea listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_removeProximityAlert,"remove proximity alert from location manager  removes the proximity alert with the given pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_removeTestProvider,"remove test provider from location manager  removes the mock location provider with the given nam. Return type is void and parameters are string. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes all location updates for the specified location listene. Return type is void and parameters are location listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes all location updates for the specified pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a  pending inten. Return type is void and parameters are string long float location listener. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using a criteria, and a callback  on the specified looper threa. Return type is void and parameters are long float criteria location listener looper. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a callback on  the specified looper threa. Return type is void and parameters are string long float location listener looper. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using a criteria and pending inten. Return type is void and parameters are long float criteria pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a  pending inten. Return type is void and parameters are string long float pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  register for a single location update using a named provider and pending inten. Return type is void and parameters are string pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  register for a single location update using a criteria and pending inten. Return type is void and parameters are criteria pending intent. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  register for a single location update using the named provider and  a callbac. Return type is void and parameters are string location listener looper. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  register for a single location update using a criteria and  a callbac. Return type is void and parameters are criteria location listener looper. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_sendExtraCommand,"send extra command from location manager  sends additional commands to a location provide. Return type is boolean and parameters are string string bundle. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,sink,sink
LocationManager_setTestProviderEnabled,"set test provider enabled from location manager  sets a mock enabled value for the given provide. Return type is void and parameters are string boolean. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_setTestProviderLocation,"set test provider location from location manager  sets a mock location for the given provide. Return type is void and parameters are string location. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,sink,sink
LocationManager_setTestProviderStatus,"set test provider status from location manager  sets mock status values for the given provide. Return type is void and parameters are string int bundle long. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,sink
LocationManager_unregisterGnssMeasurementsCallback,"unregister gnss measurements callback from location manager  unregisters a gps measurement callbac. Return type is void and parameters are gnss measurements event callback. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_unregisterGnssNavigationMessageCallback,"unregister gnss navigation message callback from location manager  unregisters a gnss navigation message callbac. Return type is void and parameters are gnss navigation message callback. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_unregisterGnssStatusCallback,"unregister gnss status callback from location manager  removes a gnss status callbac. Return type is void and parameters are gnss status callback. this class provides access to the system location services   these services allow applications to obtain periodic updates of the device's geographical location, or to fire an application specified intent when the device enters the proximity of a given geographical location",2018,neither,neither
LocationManager_addGpsStatusListener,"add gps status listener from location manager  this method was deprecated  in api level 24  use register gnss status callback instead no longer  supported in apps targeting s and abov. Return type is boolean and parameters are gps status listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are on nmea message listener handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 30  use add nmea listener or add nmea listener instea. Return type is boolean and parameters are on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 24  use add nmea listener instea. Return type is boolean and parameters are gps status nmea listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are executor on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_addProximityAlert,"add proximity alert from location manager  sets a proximity alert for the location given by the position  and the  given radiu. Return type is void and parameters are double double float long pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string provider properties. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string provider properties set. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string boolean boolean boolean boolean boolean boolean boolean int int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_clearTestProviderEnabled,"clear test provider enabled from location manager  this method was deprecated  in api level 29  use set test provider enabled instea. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_clearTestProviderLocation,"clear test provider location from location manager  this method was deprecated  in api level 29  this method has always been a no-op, and may be removed in the futur. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_clearTestProviderStatus,"clear test provider status from location manager  this method was deprecated  in api level 29  this method has no effec. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_getAllProviders,"get all providers from location manager  returns a list of the names of all available location provider. Return type is List and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getBestProvider,"get best provider from location manager  returns the name of the provider that best meets the given criteri. Return type is String and parameters are criteria boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getCurrentLocation,"get current location from location manager  asynchronously returns a single current location fix from the given provider based on the  given location reques. Return type is void and parameters are string location request cancellation signal executor consumer. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getCurrentLocation,"get current location from location manager  asynchronously returns a single current location fix from the given provide. Return type is void and parameters are string cancellation signal executor consumer. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getGnssAntennaInfos,"get gnss antenna infos from location manager  returns the current list of gnss antenna infos, or null if unknown or unsupporte. Return type is List and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getGnssCapabilities,"get gnss capabilities from location manager  returns the supported capabilities of the gnss chipse. Return type is Gnss Capabilities and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getGnssHardwareModelName,"get gnss hardware model name from location manager  returns the model name  of the gnss hardware  driver, or null if this information is not availabl. Return type is String and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getGnssYearOfHardware,"get gnss year of hardware from location manager  returns the model year of the gnss hardware and software build, or 0 if the model year  is before 201. Return type is int and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getGpsStatus,"get gps status from location manager  this method was deprecated  in api level 24  gps status a p is are deprecated, use gnss status a p is instead no longer  supported in apps targeting s and abov. Return type is Gps Status and parameters are gps status. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getLastKnownLocation,"get last known location from location manager  gets the last known location from the given provider, or null if there is no last known  locatio. Return type is Location and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getProvider,"get provider from location manager  this method was deprecated  in api level 31  this method has no way to indicate that a provider's properties are unknown, and  so may return incorrect results on rare occasions use get provider properties  instea. Return type is Location Provider and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getProviderProperties,"get provider properties from location manager  returns the properties of the given provider, or null if the properties are currently  unknow. Return type is Provider Properties and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of available location provider. Return type is List and parameters are boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of available location providers that satisfy the given criteri. Return type is List and parameters are criteria boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_hasProvider,"has provider from location manager  returns true if the given location provider exists on this device, irrespective of whether  it is currently enabled or no. Return type is boolean and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_isLocationEnabled,"is location enabled from location manager  returns the current enabled/disabled state of locatio. Return type is boolean and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_isProviderEnabled,"is provider enabled from location manager  returns the current enabled/disabled status of the given provide. Return type is boolean and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,source,source
LocationManager_registerAntennaInfoListener,"register antenna info listener from location manager  registers a gnss antenna info listener that will receive all changes to antenna inf. Return type is boolean and parameters are executor gnss antenna info listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gnss measurements callbac. Return type is boolean and parameters are executor gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  this method was deprecated  in api level 30  use register gnss measurements callback or register gnss measurements callback instead  requires manifestpermission access fine location. Return type is boolean and parameters are gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gnss measurement callbac. Return type is boolean and parameters are gnss measurement request executor gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gnss measurements callbac. Return type is boolean and parameters are gnss measurements event callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are gnss navigation message callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are executor gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  this method was deprecated  in api level 30  use register gnss navigation message callback or register gnss navigation message callback instea. Return type is boolean and parameters are gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  this method was deprecated  in api level 30  use register gnss status callback or register gnss status callback instea. Return type is boolean and parameters are gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are gnss status callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are executor gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_removeGpsStatusListener,"remove gps status listener from location manager  this method was deprecated  in api level 24  use unregister gnss status callback instead no longer  supported in apps targeting s and abov. Return type is void and parameters are gps status listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  removes an nmea listene. Return type is void and parameters are on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  this method was deprecated  in api level 24  use remove nmea listener instea. Return type is void and parameters are gps status nmea listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_removeProximityAlert,"remove proximity alert from location manager  removes the proximity alert with the given pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_removeTestProvider,"remove test provider from location manager  removes the test location provider with the given name or does nothing if no such test  location provider exist. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes all location updates for the specified location listene. Return type is void and parameters are location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes location updates for the specified pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_requestFlush,"request flush from location manager  requests that the given provider flush any batched locations to listener. Return type is void and parameters are string location listener int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_requestFlush,"request flush from location manager  requests that the given provider flush any batched locations to listener. Return type is void and parameters are string pending intent int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the given provider with the given arguments, and a  callback on the looper of the calling threa. Return type is void and parameters are string long float location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  this method was deprecated  in api level 31  use  request location updates instead to  explicitly select a provide. Return type is void and parameters are long float criteria location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the given provider with the given arguments, and a  callback on the specified loope. Return type is void and parameters are string long float location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a callback on  the specified executo. Return type is void and parameters are string long float executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the specified provider, using a location request,  and callbacks delivered via the provided pending inten. Return type is void and parameters are string location request pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the specified provider, using a location request,  and a callback on the specified executo. Return type is void and parameters are string location request executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  this method was deprecated  in api level 31  use request location updates instead  to explicitly select a provide. Return type is void and parameters are long float criteria pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  this method was deprecated  in api level 31  use  request location updates instead to  explicitly select a provide. Return type is void and parameters are long float criteria executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and callbacks delivered via the  provided pending inten. Return type is void and parameters are string long float pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are string pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are criteria pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are string location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are criteria location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_sendExtraCommand,"send extra command from location manager  sends additional commands to a location provide. Return type is boolean and parameters are string string bundle. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_setTestProviderEnabled,"set test provider enabled from location manager  sets the given test provider to be enabled or disable. Return type is void and parameters are string boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_setTestProviderLocation,"set test provider location from location manager  sets a new location for the given test provide. Return type is void and parameters are string location. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,sink,sink
LocationManager_setTestProviderStatus,"set test provider status from location manager  this method was deprecated  in api level 29  this method has no effec. Return type is void and parameters are string int bundle long. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,sink
LocationManager_unregisterAntennaInfoListener,"unregister antenna info listener from location manager  unregisters a gnss antenna info listene. Return type is void and parameters are gnss antenna info listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_unregisterGnssMeasurementsCallback,"unregister gnss measurements callback from location manager  unregisters a gps measurement callbac. Return type is void and parameters are gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_unregisterGnssNavigationMessageCallback,"unregister gnss navigation message callback from location manager  unregisters a gnss navigation message callbac. Return type is void and parameters are gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_unregisterGnssStatusCallback,"unregister gnss status callback from location manager  removes a gnss status callbac. Return type is void and parameters are gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2021,neither,neither
LocationManager_addGpsStatusListener,"add gps status listener from location manager  this method was deprecated  in api level 24  use register gnss status callback instead no longer  supported in apps targeting s and abov. Return type is boolean and parameters are gps status listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are on nmea message listener handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 30  use add nmea listener or add nmea listener instea. Return type is boolean and parameters are on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 24  use add nmea listener instea. Return type is boolean and parameters are gps status nmea listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are executor on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_addProximityAlert,"add proximity alert from location manager  set a proximity alert for the location given by the position   and the given radiu. Return type is void and parameters are double double float long pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string boolean boolean boolean boolean boolean boolean boolean int int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,sink,sink
LocationManager_clearTestProviderEnabled,"clear test provider enabled from location manager  this method was deprecated  in api level 29  use set test provider enabled instea. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_clearTestProviderLocation,"clear test provider location from location manager  this method was deprecated  in api level 29  this method has always been a no-op, and may be removed in the futur. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_clearTestProviderStatus,"clear test provider status from location manager  this method was deprecated  in api level 29  this method has no effec. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_getAllProviders,"get all providers from location manager  returns a list of the names of all known location provider. Return type is List and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getBestProvider,"get best provider from location manager  returns the name of the provider that best meets the given criteri. Return type is String and parameters are criteria boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getCurrentLocation,"get current location from location manager  asynchronously returns a single current location fi. Return type is void and parameters are string cancellation signal executor consumer. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getGnssCapabilities,"get gnss capabilities from location manager  returns the supported capabilities of the gnss chipse. Return type is Gnss Capabilities and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getGnssHardwareModelName,"get gnss hardware model name from location manager  returns the model name  of the gnss hardware  drive. Return type is String and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getGnssYearOfHardware,"get gnss year of hardware from location manager  returns the model year of the gnss hardware and software buil. Return type is int and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getGpsStatus,"get gps status from location manager  this method was deprecated  in api level 24  gps status a p is are deprecated, use gnss status a p is instead no longer  supported in apps targeting s and abov. Return type is Gps Status and parameters are gps status. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getLastKnownLocation,"get last known location from location manager  gets the last known location from the given provider, or null if there is no last known  locatio. Return type is Location and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getProvider,"get provider from location manager  returns the information about the location provider with the given name, or null if no  provider exists by that nam. Return type is Location Provider and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of location provider. Return type is List and parameters are boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of providers that satisfy the given criteri. Return type is List and parameters are criteria boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_isLocationEnabled,"is location enabled from location manager  returns the current enabled/disabled state of locatio. Return type is boolean and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_isProviderEnabled,"is provider enabled from location manager  returns the current enabled/disabled status of the given provide. Return type is boolean and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,source,source
LocationManager_registerAntennaInfoListener,"register antenna info listener from location manager  registers a gnss antenna info listene. Return type is boolean and parameters are executor gnss antenna info listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gps measurement callbac. Return type is boolean and parameters are executor gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  this method was deprecated  in api level 30  use register gnss measurements callback or register gnss measurements callback instea. Return type is boolean and parameters are gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gps measurement callbac. Return type is boolean and parameters are gnss measurements event callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are gnss navigation message callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are executor gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  this method was deprecated  in api level 30  use register gnss navigation message callback or register gnss navigation message callback instea. Return type is boolean and parameters are gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  this method was deprecated  in api level 30  use register gnss status callback or register gnss status callback instea. Return type is boolean and parameters are gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are gnss status callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are executor gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_removeGpsStatusListener,"remove gps status listener from location manager  this method was deprecated  in api level 24  use unregister gnss status callback instead no longer  supported in apps targeting s and abov. Return type is void and parameters are gps status listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  removes an nmea listene. Return type is void and parameters are on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  this method was deprecated  in api level 24  use remove nmea listener instea. Return type is void and parameters are gps status nmea listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_removeProximityAlert,"remove proximity alert from location manager  removes the proximity alert with the given pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_removeTestProvider,"remove test provider from location manager  removes the test location provider with the given name or does nothing if no such test  location provider exist. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes location updates for the specified location listene. Return type is void and parameters are location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes location updates for the specified pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the given provider with the given argument. Return type is void and parameters are string long float location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using a provider selected through the given criteria, and a  callback on the specified loope. Return type is void and parameters are long float criteria location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a callback on  the specified loope. Return type is void and parameters are string long float location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a callback on  the specified executo. Return type is void and parameters are string long float executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using a provider selected through the given criteria, and  callbacks delivered via the provided pending inten. Return type is void and parameters are long float criteria pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using a provider selected through the given criteria, and a  callback on the specified executo. Return type is void and parameters are long float criteria executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and callbacks delivered via the  provided pending inten. Return type is void and parameters are string long float pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are string pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are criteria pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are string location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are criteria location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_sendExtraCommand,"send extra command from location manager  sends additional commands to a location provide. Return type is boolean and parameters are string string bundle. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,sink,sink
LocationManager_setTestProviderEnabled,"set test provider enabled from location manager  sets the given test provider to be enabled or disable. Return type is void and parameters are string boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_setTestProviderLocation,"set test provider location from location manager  sets a new location for the given test provide. Return type is void and parameters are string location. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,sink,sink
LocationManager_setTestProviderStatus,"set test provider status from location manager  this method was deprecated  in api level 29  this method has no effec. Return type is void and parameters are string int bundle long. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,sink
LocationManager_unregisterAntennaInfoListener,"unregister antenna info listener from location manager  unregisters a gnss antenna info listene. Return type is void and parameters are gnss antenna info listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_unregisterGnssMeasurementsCallback,"unregister gnss measurements callback from location manager  unregisters a gps measurement callbac. Return type is void and parameters are gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_unregisterGnssNavigationMessageCallback,"unregister gnss navigation message callback from location manager  unregisters a gnss navigation message callbac. Return type is void and parameters are gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationManager_unregisterGnssStatusCallback,"unregister gnss status callback from location manager  removes a gnss status callbac. Return type is void and parameters are gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2020,neither,neither
LocationProvider_getAccuracy,get accuracy from location provider  returns a constant describing horizontal accuracy of this provide. Return type is int and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device,2018,source,source
LocationProvider_getName,get name from location provider  returns the name of this provide. Return type is String and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device,2018,source,source
LocationProvider_getPowerRequirement,get power requirement from location provider  returns the power requirement for this provide. Return type is int and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device,2018,source,source
LocationProvider_hasMonetaryCost,"has monetary cost from location provider  returns true if the use of this provider may result in a  monetary charge to the user, false if use is fre. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,neither,neither
LocationProvider_meetsCriteria,"meets criteria from location provider  returns true if this provider meets the given criteria,  false otherwis. Return type is boolean and parameters are criteria. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,neither,neither
LocationProvider_requiresCell,"requires cell from location provider  returns true if the provider requires access to an appropriate  cellular network , false  otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,neither,sink
LocationProvider_requiresNetwork,"requires network from location provider  returns true if the provider requires access to a  data network , false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,source,neither
LocationProvider_requiresSatellite,"requires satellite from location provider  returns true if the provider requires access to a  satellite-based positioning system , false  otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,neither,neither
LocationProvider_supportsAltitude,"supports altitude from location provider  returns true if the provider is able to provide altitude  information, false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,source,neither
LocationProvider_supportsBearing,"supports bearing from location provider  returns true if the provider is able to provide bearing  information, false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,source,sink
LocationProvider_supportsSpeed,"supports speed from location provider  returns true if the provider is able to provide speed  information, false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2018,source,sink
LocationManager_addGpsStatusListener,"add gps status listener from location manager  this method was deprecated  in api level 24  use register gnss status callback instead no longer  supported in apps targeting s and abov. Return type is boolean and parameters are gps status listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are on nmea message listener handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 30  use add nmea listener or add nmea listener instea. Return type is boolean and parameters are on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  this method was deprecated  in api level 24  use add nmea listener instea. Return type is boolean and parameters are gps status nmea listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_addNmeaListener,"add nmea listener from location manager  adds an nmea listene. Return type is boolean and parameters are executor on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_addProximityAlert,"add proximity alert from location manager  sets a proximity alert for the location given by the position  and the  given radiu. Return type is void and parameters are double double float long pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string provider properties. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string provider properties set. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_addTestProvider,"add test provider from location manager  creates a test location provider and adds it to the set of active provider. Return type is void and parameters are string boolean boolean boolean boolean boolean boolean boolean int int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_clearTestProviderEnabled,"clear test provider enabled from location manager  this method was deprecated  in api level 29  use set test provider enabled instea. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_clearTestProviderLocation,"clear test provider location from location manager  this method was deprecated  in api level 29  this method has always been a no-op, and may be removed in the futur. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_clearTestProviderStatus,"clear test provider status from location manager  this method was deprecated  in api level 29  this method has no effec. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_getAllProviders,"get all providers from location manager  returns a list of the names of all available location provider. Return type is List and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getBestProvider,"get best provider from location manager  returns the name of the provider that best meets the given criteri. Return type is String and parameters are criteria boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getCurrentLocation,"get current location from location manager  asynchronously returns a single current location fix from the given provider based on the  given location reques. Return type is void and parameters are string location request cancellation signal executor consumer. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getCurrentLocation,"get current location from location manager  asynchronously returns a single current location fix from the given provide. Return type is void and parameters are string cancellation signal executor consumer. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getGnssAntennaInfos,"get gnss antenna infos from location manager  returns the current list of gnss antenna infos, or null if unknown or unsupporte. Return type is List and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getGnssCapabilities,"get gnss capabilities from location manager  returns the supported capabilities of the gnss chipse. Return type is Gnss Capabilities and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getGnssHardwareModelName,"get gnss hardware model name from location manager  returns the model name  of the gnss hardware  driver, or null if this information is not availabl. Return type is String and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getGnssYearOfHardware,"get gnss year of hardware from location manager  returns the model year of the gnss hardware and software build, or 0 if the model year  is before 201. Return type is int and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getGpsStatus,"get gps status from location manager  this method was deprecated  in api level 24  gps status a p is are deprecated, use gnss status a p is instead no longer  supported in apps targeting s and abov. Return type is Gps Status and parameters are gps status. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getLastKnownLocation,"get last known location from location manager  gets the last known location from the given provider, or null if there is no last known  locatio. Return type is Location and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getProvider,"get provider from location manager  this method was deprecated  in api level 31  this method has no way to indicate that a provider's properties are unknown, and  so may return incorrect results on rare occasions use get provider properties  instea. Return type is Location Provider and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getProviderProperties,"get provider properties from location manager  returns the properties of the given provider, or null if the properties are currently  unknow. Return type is Provider Properties and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of available location provider. Return type is List and parameters are boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_getProviders,"get providers from location manager  returns a list of the names of available location providers that satisfy the given criteri. Return type is List and parameters are criteria boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_hasProvider,"has provider from location manager  returns true if the given location provider exists on this device, irrespective of whether  it is currently enabled or no. Return type is boolean and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_isLocationEnabled,"is location enabled from location manager  returns the current enabled/disabled state of locatio. Return type is boolean and no argument. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_isProviderEnabled,"is provider enabled from location manager  returns the current enabled/disabled status of the given provide. Return type is boolean and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,source,source
LocationManager_registerAntennaInfoListener,"register antenna info listener from location manager  registers a gnss antenna info listener that will receive all changes to antenna inf. Return type is boolean and parameters are executor gnss antenna info listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gnss measurements callbac. Return type is boolean and parameters are executor gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  this method was deprecated  in api level 30  use register gnss measurements callback or register gnss measurements callback instead  requires manifestpermission access fine location. Return type is boolean and parameters are gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gnss measurement callbac. Return type is boolean and parameters are gnss measurement request executor gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssMeasurementsCallback,"register gnss measurements callback from location manager  registers a gnss measurements callbac. Return type is boolean and parameters are gnss measurements event callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are gnss navigation message callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  registers a gnss navigation message callbac. Return type is boolean and parameters are executor gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssNavigationMessageCallback,"register gnss navigation message callback from location manager  this method was deprecated  in api level 30  use register gnss navigation message callback or register gnss navigation message callback instea. Return type is boolean and parameters are gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  this method was deprecated  in api level 30  use register gnss status callback or register gnss status callback instea. Return type is boolean and parameters are gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are gnss status callback handler. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_registerGnssStatusCallback,"register gnss status callback from location manager  registers a gnss status callbac. Return type is boolean and parameters are executor gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_removeGpsStatusListener,"remove gps status listener from location manager  this method was deprecated  in api level 24  use unregister gnss status callback instead no longer  supported in apps targeting s and abov. Return type is void and parameters are gps status listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  removes an nmea listene. Return type is void and parameters are on nmea message listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_removeNmeaListener,"remove nmea listener from location manager  this method was deprecated  in api level 24  use remove nmea listener instea. Return type is void and parameters are gps status nmea listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_removeProximityAlert,"remove proximity alert from location manager  removes the proximity alert with the given pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_removeTestProvider,"remove test provider from location manager  removes the test location provider with the given name or does nothing if no such test  location provider exist. Return type is void and parameters are string. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes all location updates for the specified location listene. Return type is void and parameters are location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_removeUpdates,"remove updates from location manager  removes location updates for the specified pending inten. Return type is void and parameters are pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_requestFlush,"request flush from location manager  requests that the given provider flush any batched locations to listener. Return type is void and parameters are string location listener int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_requestFlush,"request flush from location manager  requests that the given provider flush any batched locations to listener. Return type is void and parameters are string pending intent int. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the given provider with the given arguments, and a  callback on the looper of the calling threa. Return type is void and parameters are string long float location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  this method was deprecated  in api level 31  use  request location updates instead to  explicitly select a provide. Return type is void and parameters are long float criteria location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the given provider with the given arguments, and a  callback on the specified loope. Return type is void and parameters are string long float location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and a callback on  the specified executo. Return type is void and parameters are string long float executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the specified provider, using a location request,  and callbacks delivered via the provided pending inten. Return type is void and parameters are string location request pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates from the specified provider, using a location request,  and a callback on the specified executo. Return type is void and parameters are string location request executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  this method was deprecated  in api level 31  use request location updates instead  to explicitly select a provide. Return type is void and parameters are long float criteria pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  this method was deprecated  in api level 31  use  request location updates instead to  explicitly select a provide. Return type is void and parameters are long float criteria executor location listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestLocationUpdates,"request location updates from location manager  register for location updates using the named provider, and callbacks delivered via the  provided pending inten. Return type is void and parameters are string long float pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are string pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are criteria pending intent. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are string location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_requestSingleUpdate,"request single update from location manager  this method was deprecated  in api level 30  use get current location  instead as it does not carry a risk of extreme battery drai. Return type is void and parameters are criteria location listener looper. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_sendExtraCommand,"send extra command from location manager  sends additional commands to a location provide. Return type is boolean and parameters are string string bundle. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_setTestProviderEnabled,"set test provider enabled from location manager  sets the given test provider to be enabled or disable. Return type is void and parameters are string boolean. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_setTestProviderLocation,"set test provider location from location manager  sets a new location for the given test provide. Return type is void and parameters are string location. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,sink,sink
LocationManager_setTestProviderStatus,"set test provider status from location manager  this method was deprecated  in api level 29  this method has no effec. Return type is void and parameters are string int bundle long. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,sink
LocationManager_unregisterAntennaInfoListener,"unregister antenna info listener from location manager  unregisters a gnss antenna info listene. Return type is void and parameters are gnss antenna info listener. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_unregisterGnssMeasurementsCallback,"unregister gnss measurements callback from location manager  unregisters a gps measurement callbac. Return type is void and parameters are gnss measurements event callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_unregisterGnssNavigationMessageCallback,"unregister gnss navigation message callback from location manager  unregisters a gnss navigation message callbac. Return type is void and parameters are gnss navigation message callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationManager_unregisterGnssStatusCallback,"unregister gnss status callback from location manager  removes a gnss status callbac. Return type is void and parameters are gnss status callback. this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",2022,neither,neither
LocationProvider_getAccuracy,get accuracy from location provider  returns a constant describing horizontal accuracy of this provide. Return type is int and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device,2020,source,source
LocationProvider_getName,get name from location provider  returns the name of this provide. Return type is String and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device,2020,source,source
LocationProvider_getPowerRequirement,get power requirement from location provider  returns the power requirement for this provide. Return type is int and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device,2020,source,source
LocationProvider_hasMonetaryCost,"has monetary cost from location provider  returns true if the use of this provider may result in a  monetary charge to the user, false if use is fre. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,neither,neither
LocationProvider_meetsCriteria,"meets criteria from location provider  returns true if this provider meets the given criteria,  false otherwis. Return type is boolean and parameters are criteria. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,neither,neither
LocationProvider_requiresCell,"requires cell from location provider  returns true if the provider requires access to an appropriate  cellular network , false  otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,neither,sink
LocationProvider_requiresNetwork,"requires network from location provider  returns true if the provider requires access to a  data network , false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,source,neither
LocationProvider_requiresSatellite,"requires satellite from location provider  returns true if the provider requires access to a  satellite-based positioning system , false  otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,neither,neither
LocationProvider_supportsAltitude,"supports altitude from location provider  returns true if the provider is able to provide altitude  information, false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,source,neither
LocationProvider_supportsBearing,"supports bearing from location provider  returns true if the provider is able to provide bearing  information, false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,source,sink
LocationProvider_supportsSpeed,"supports speed from location provider  returns true if the provider is able to provide speed  information, false otherwis. Return type is boolean and no argument. an abstract superclass for location providers   a location provider provides periodic reports on the geographical location of the device",2020,source,sink
LocationProvider_getAccuracy,"get accuracy from location provider  returns the rough accuracy of this provider, one of the provider properties accuracy  constant. Return type is int and no argument. information about the properties of a location provider",2021,source,source
LocationProvider_getName,get name from location provider  returns the name of this provide. Return type is String and no argument. information about the properties of a location provider,2021,source,source
LocationProvider_getPowerRequirement,"get power requirement from location provider  returns the power requirement for this provider, one of the provider properties power usage  constant. Return type is int and no argument. information about the properties of a location provider",2021,source,source
LocationProvider_hasMonetaryCost,"has monetary cost from location provider  returns true if the use of this provider may result in a  monetary charge to the user, false if use is fre. Return type is boolean and no argument. information about the properties of a location provider",2021,neither,neither
LocationProvider_meetsCriteria,"meets criteria from location provider  returns true if this provider meets the given criteria,  false otherwis. Return type is boolean and parameters are criteria. information about the properties of a location provider",2021,neither,neither
LocationProvider_requiresCell,"requires cell from location provider  returns true if the provider requires access to an appropriate  cellular network , false  otherwis. Return type is boolean and no argument. information about the properties of a location provider",2021,neither,neither
LocationProvider_requiresNetwork,"requires network from location provider  returns true if the provider requires access to a  data network , false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2021,source,source
LocationProvider_requiresSatellite,"requires satellite from location provider  returns true if the provider requires access to a  satellite-based positioning system , false  otherwis. Return type is boolean and no argument. information about the properties of a location provider",2021,neither,neither
LocationProvider_supportsAltitude,"supports altitude from location provider  returns true if the provider is able to provide altitude  information, false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2021,source,neither
LocationProvider_supportsBearing,"supports bearing from location provider  returns true if the provider is able to provide bearing  information, false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2021,source,source
LocationProvider_supportsSpeed,"supports speed from location provider  returns true if the provider is able to provide speed  information, false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2021,source,source
LocationProvider_getAccuracy,"get accuracy from location provider  returns the rough accuracy of this provider, one of the provider properties accuracy  constant. Return type is int and no argument. information about the properties of a location provider",2022,source,source
LocationProvider_getName,get name from location provider  returns the name of this provide. Return type is String and no argument. information about the properties of a location provider,2022,source,source
LocationProvider_getPowerRequirement,"get power requirement from location provider  returns the power requirement for this provider, one of the provider properties power usage  constant. Return type is int and no argument. information about the properties of a location provider",2022,source,source
LocationProvider_hasMonetaryCost,"has monetary cost from location provider  returns true if the use of this provider may result in a  monetary charge to the user, false if use is fre. Return type is boolean and no argument. information about the properties of a location provider",2022,neither,neither
LocationProvider_meetsCriteria,"meets criteria from location provider  returns true if this provider meets the given criteria,  false otherwis. Return type is boolean and parameters are criteria. information about the properties of a location provider",2022,neither,neither
LocationProvider_requiresCell,"requires cell from location provider  returns true if the provider requires access to an appropriate  cellular network , false  otherwis. Return type is boolean and no argument. information about the properties of a location provider",2022,neither,neither
LocationProvider_requiresNetwork,"requires network from location provider  returns true if the provider requires access to a  data network , false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2022,source,source
LocationProvider_requiresSatellite,"requires satellite from location provider  returns true if the provider requires access to a  satellite-based positioning system , false  otherwis. Return type is boolean and no argument. information about the properties of a location provider",2022,neither,neither
LocationProvider_supportsAltitude,"supports altitude from location provider  returns true if the provider is able to provide altitude  information, false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2022,source,neither
LocationProvider_supportsBearing,"supports bearing from location provider  returns true if the provider is able to provide bearing  information, false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2022,source,source
LocationProvider_supportsSpeed,"supports speed from location provider  returns true if the provider is able to provide speed  information, false otherwis. Return type is boolean and no argument. information about the properties of a location provider",2022,source,source
