key,docs,category_map,real_cat
AudioManager_getStreamMaxVolume, returns the maximum volume index for a particular stream .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_isMusicActive, checks whether any music is active .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_getRingerMode, returns the current ringtone mode .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_getParameters, gets a variable number of parameter values from audio hardware .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_getStreamVolume, returns the current volume index for a particular stream .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_isMicrophoneMute, checks whether the microphone mute is on or off .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_getMode, returns the current audio mode .  audio manager provides access to volume and ringer mode control,no category,audio
AudioManager_getProperty, returns the value of the property with the specified key .  audio manager provides access to volume and ringer mode control,no category,audio
AudioTrack_getMaxVolume," returns the maximum gain value, which is greater than or equal to 1 0 .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getNativeOutputSampleRate," returns the output sample rate in hz for the specified stream type .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getChannelConfiguration," returns the configured channel position mask .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getSampleRate," returns the configured audio source sample rate in hz .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getStreamType," returns the volume stream type of this audio track .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getChannelCount," returns the configured number of channels .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getMinVolume," returns the minimum gain value, which is the constant 0 0 .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getNotificationMarkerPosition," returns marker position expressed in frames .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getPlayState," returns the playback state of the audio track instance .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getPositionNotificationPeriod," returns the notification update period expressed in frames .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getAudioFormat," returns the configured audio data encoding .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getAudioSessionId," returns the audio session id .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getPlaybackHeadPosition," returns the playback head position expressed in frames .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getState," returns the state of the audio track instance .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
AudioTrack_getPlaybackRate," returns the current playback sample rate rate in hz .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",no category,audio
Calendar_setTime," sets this calendar's current time with the given date .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",no category,calendar
Calendar_set," sets the values for the fields year, month, date, hour, minute, and second .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",no category,calendar
CalendarView_setDate," sets the selected date in milliseconds since january 1, 1970 00:00:00 in  time zone#get default time zone .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable",no category,calendar information
CalendarView_setMaxDate," sets the maximal date supported by this calendar view in milliseconds  since january 1, 1970 00:00:00 in time zone#get default time  zone .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable",no category,calendar information
CalendarView_setMinDate," sets the minimal date supported by this calendar view in milliseconds  since january 1, 1970 00:00:00 in time zone#get default time  zone .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable",no category,calendar information
DatagramSocket_getChannel," returns the unique datagram channel object  associated with this datagram socket, if any .  this class represents a socket for sending and receiving datagram packets",no category,network connection
DatagramSocket_setSoTimeout," enable/disable s o_ t i m e o u t with the specified timeout, in  milliseconds .  this class represents a socket for sending and receiving datagram packets",no category,network connection
DatagramSocket_getLocalPort, returns the port number on the local host to which this socket  is bound .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_setSendBufferSize, sets the s o_ s n d b u f option to the specified value for this  datagram socket .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_setReuseAddress, enable/disable the s o_ r e u s e a d d r socket option .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getReceiveBufferSize," get value of the s o_ r c v b u f option for this datagram socket, that is the  buffer size used by the platform for input on this datagram socket .  this class represents a socket for sending and receiving datagram packets",no category,network connection
DatagramSocket_getReuseAddress, tests if s o_ r e u s e a d d r is enabled .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getInetAddress, returns the address to which this socket is connected .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getLocalSocketAddress, returns the address of the endpoint this socket is bound to .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getSoTimeout, retrieve setting for s o_ t i m e o u t .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_send, sends a datagram packet from this socket .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_setTrafficClass, sets traffic class or type-of-service octet in the ip  datagram header for datagrams sent from this datagram socket .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getSendBufferSize," get value of the s o_ s n d b u f option for this datagram socket, that is the  buffer size used by the platform for output on this datagram socket .  this class represents a socket for sending and receiving datagram packets",no category,network connection
DatagramSocket_getRemoteSocketAddress," returns the address of the endpoint this socket is connected to, or  null if it is unconnected .  this class represents a socket for sending and receiving datagram packets",no category,network connection
DatagramSocket_setBroadcast, enable/disable s o_ b r o a d c a s t .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_setReceiveBufferSize, sets the s o_ r c v b u f option to the specified value for this  datagram socket .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getTrafficClass, gets traffic class or type-of-service in the ip datagram  header for packets sent from this datagram socket .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getLocalAddress, gets the local address to which the socket is bound .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getBroadcast, tests if s o_ b r o a d c a s t is enabled .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_bind, binds this datagram socket to a specific address and port .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DatagramSocket_getPort, returns the port number to which this socket is connected .  this class represents a socket for sending and receiving datagram packets,no category,network connection
DownloadManager_getRecommendedMaxBytesOverMobile," returns recommended maximum size, in bytes, of downloads that may go over a mobile  connection; or null if there's no recommended limit .  the download manager is a system service that handles long running http downloads  clients may request that a uri be downloaded to a particular destination file  the download manager will conduct the download in the background, taking care of http interactions and retrying downloads after failures or across connectivity changes and system reboots",no category,network connection
DownloadManager_query," query the download manager about downloads that have been requested .  the download manager is a system service that handles long running http downloads  clients may request that a uri be downloaded to a particular destination file  the download manager will conduct the download in the background, taking care of http interactions and retrying downloads after failures or across connectivity changes and system reboots",no category,files
DownloadManager_getMimeTypeForDownloadedFile," returns the media type of the given downloaded file id, if the file was  downloaded successfully .  the download manager is a system service that handles long running http downloads  clients may request that a uri be downloaded to a particular destination file  the download manager will conduct the download in the background, taking care of http interactions and retrying downloads after failures or across connectivity changes and system reboots",no category,files
DownloadManager_getMaxBytesOverMobile," returns maximum size, in bytes, of downloads that may go over a mobile connection; or null if  there's no limi .  the download manager is a system service that handles long running http downloads  clients may request that a uri be downloaded to a particular destination file  the download manager will conduct the download in the background, taking care of http interactions and retrying downloads after failures or across connectivity changes and system reboots",no category,network connection
HttpURLConnection_getPermission, returns a socket permission object representing the  permission necessary to connect to the destination host and port .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_getInstanceFollowRedirects, returns the value of this http u r l connection's  instance follow redirects field .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_getFollowRedirects, returns a boolean indicating  whether or not http redirects  should  be automatically followed .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_getResponseMessage," gets the http response message, if any, returned along with the  response code from a server .  a u r l connection with support for http specific features  see  the spec  for details",no category,network connection
HttpURLConnection_getRequestMethod, get the request method .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_getErrorStream, returns the error stream if the connection failed  but the server sent useful data nonetheless .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_getHeaderFieldDate, returns the value of the named field parsed as date .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_getResponseCode, gets the status code from an http response message .  a u r l connection with support for http specific features  see  the spec  for details,no category,network connection
HttpURLConnection_setRequestMethod," set the method for the url request, one of:  get  post  head  options  put  delete  trace  are legal, subject to protocol restrictions .  a u r l connection with support for http specific features  see  the spec  for details",no category,network connection
MediaMetadataRetriever_getFrameAtTime, call this method after set data source .  media metadata retriever class provides a unified interface for retrieving frame and meta data from an input media file,no category,media
MediaMetadataRetriever_getEmbeddedPicture, call this method after set data source .  media metadata retriever class provides a unified interface for retrieving frame and meta data from an input media file,no category,media
SQLiteDatabase_setVersion, sets the database version .  exposes methods to manage a s q lite database,no category,database
SQLiteDatabase_openOrCreateDatabase," equivalent to open database(file get path, factory, c r e a t e_ i f_ n e c e s s a r y) .  exposes methods to manage a s q lite database",no category,database
SQLiteDatabase_setPageSize, sets the database page size .  exposes methods to manage a s q lite database,no category,database
SQLiteDatabase_update, convenience method for updating rows in the database .  exposes methods to manage a s q lite database,no category,database
SQLiteDatabase_setMaximumSize, sets the maximum size the database will grow to .  exposes methods to manage a s q lite database,no category,database
SQLiteProgram_bindLong, bind a long value to this statement .  a base class for compiled s q lite programs,no category,database
SQLiteProgram_bindBlob, bind a byte array value to this statement .  a base class for compiled s q lite programs,no category,database
SQLiteProgram_bindAllArgsAsStrings," given an array of string bind args, this method binds all of them in one single call .  a base class for compiled s q lite programs",no category,database
SQLiteProgram_bindNull, bind a null value to this statement .  a base class for compiled s q lite programs,no category,database
SQLiteProgram_bindDouble, bind a double value to this statement .  a base class for compiled s q lite programs,no category,database
SQLiteProgram_bindString, bind a string value to this statement .  a base class for compiled s q lite programs,no category,database
ServerSocket_setReuseAddress," enable/disable the s o_ r e u s e a d d r  socket option .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_setPerformancePreferences," sets performance preferences for this server socket .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_setSoTimeout," enable/disable s o_ t i m e o u t with the  specified timeout, in milliseconds .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getLocalPort," returns the port number on which this socket is listening .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_setReceiveBufferSize," sets a default proposed value for the  s o_ r c v b u f option for sockets  accepted from this server socket .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getInetAddress," returns the local address of this server socket .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getReuseAddress," tests if s o_ r e u s e a d d r is enabled .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getLocalSocketAddress," returns the address of the endpoint this socket is bound to .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getChannel," returns the unique server socket channel object  associated with this socket, if any .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getSoTimeout," retrieve setting for s o_ t i m e o u t .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_bind," binds the server socket to a specific address   .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
ServerSocket_getReceiveBufferSize," gets the value of the s o_ r c v b u f option  for this server socket, that is the proposed buffer size that  will be used for sockets accepted from this server socket .  this class implements server sockets  a server socket waits for requests to come in over the network  it performs some operation based on that request, and then possibly returns a result to the requester",no category,network connection
URLConnection_getFileNameMap," returns a file name map implementation suitable for guessing a  content type based on a u r l's ""file"" component .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getExpiration," returns the value of the expires header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getUseCaches," returns the value of this u r l connection's  use caches field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getHeaderFieldKey," returns the key for the nth header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getHeaderFieldInt," returns the value of the named field parsed as a number .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_setDefaultUseCaches," sets the default value of the use caches field to the  specified value .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_toString," returns a string representation of this url connection .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getDoOutput," returns the value of this u r l connection's  do output flag .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getAllowUserInteraction," returns the value of the allow user interaction field for  this object .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getDefaultAllowUserInteraction," returns the default value of the allow user interaction  field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getHeaderField," returns the value of the named header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getDoInput," returns the value of this u r l connection's  do input flag .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getReadTimeout," returns setting for read timeout .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getIfModifiedSince," returns the value of this object's if modified since field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getOutputStream," returns an output stream that writes to this connection .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getContent," retrieves the contents of this url connection .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getURL," returns the value of this u r l connection's url  field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getConnectTimeout," returns setting for connect timeout .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getPermission," returns a permission object representing the permission  necessary to make the connection represented by this  object .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getRequestProperty," returns the value of the named general request property for this  connection .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getInputStream," returns an input stream that reads from this open connection .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getContentEncoding," returns the value of the content-encoding header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getLastModified," returns the value of the last-modified header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getHeaderFields," returns an unmodifiable map of the header fields .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getDefaultUseCaches," returns the default value of a u r l connection's  use caches flag .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getHeaderFieldDate," returns the value of the named field parsed as date .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_setRequestProperty," sets the general request property .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getContentType," returns the value of the content-type header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getDate," returns the value of the date header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getContentLength," returns the value of the content-length header field .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
URLConnection_getRequestProperties," returns an unmodifiable map of general request  properties for this connection .  the abstract class u r l connection is the superclass of all classes that represent a communications link between the application and a url  instances of this class can be used both to read from and to write to the resource referenced by the url  in general, creating a connection to a url is a multistep process",no category,network connection
PresetReverb_setPreset," enables a preset on the reverb .  a sound generated within a room travels in many directions  the listener first hears the direct sound from the source itself  later, he or she hears discrete echoes caused by sound bouncing off nearby walls, the ceiling and the floor  as sound waves arrive after undergoing more and more reflections, individual reflections become indistinguishable and the listener hears continuous reverberation that decays over time  reverb is vital for modeling a listener's environment  it can be used in music applications to simulate music being played back in various environments, or in games to immerse the listener within the game's environment  the preset reverb class allows an application to configure the global reverb using a reverb preset  this is primarily used for adding some reverb in a music playback context  applications requiring control over a more advanced environmental reverb are advised to use the environmental reverb class",audio,audio
Virtualizer_setProperties," sets the virtualizer properties .  an audio virtualizer is a general name for an effect to spatialize audio channels  the exact behavior of this effect is dependent on the number of audio input channels and the types and number of audio output channels of the device  for example, in the case of a stereo input and stereo headphone output, a stereo widening effect is used when this effect is turned on",audio,audio
AudioRecord_setNotificationMarkerPosition," sets the marker position at which the listener is called, if set with  set record position update listener or  set record position update listener .  the audio record class manages the audio resources for java applications to record audio from the audio input hardware of the platform  this is achieved by ""pulling""  the data from the audio record object  the application is responsible for polling the audio record object in time using one of the following three methods:  read, read or read  the choice of which method to use will be based on the audio data storage format that is the most convenient for the user of audio record",audio,audio
PresetReverb_setProperties," sets the preset reverb properties .  a sound generated within a room travels in many directions  the listener first hears the direct sound from the source itself  later, he or she hears discrete echoes caused by sound bouncing off nearby walls, the ceiling and the floor  as sound waves arrive after undergoing more and more reflections, individual reflections become indistinguishable and the listener hears continuous reverberation that decays over time  reverb is vital for modeling a listener's environment  it can be used in music applications to simulate music being played back in various environments, or in games to immerse the listener within the game's environment  the preset reverb class allows an application to configure the global reverb using a reverb preset  this is primarily used for adding some reverb in a music playback context  applications requiring control over a more advanced environmental reverb are advised to use the environmental reverb class",audio,audio
Virtualizer_setStrength," sets the strength of the virtualizer effect .  an audio virtualizer is a general name for an effect to spatialize audio channels  the exact behavior of this effect is dependent on the number of audio input channels and the types and number of audio output channels of the device  for example, in the case of a stereo input and stereo headphone output, a stereo widening effect is used when this effect is turned on",audio,audio
AudioManager_setMicrophoneMute, sets the microphone mute on or off .  audio manager provides access to volume and ringer mode control,audio,audio
AudioManager_setStreamVolume, sets the volume index for a particular stream .  audio manager provides access to volume and ringer mode control,audio,audio
AudioTrack_setAuxEffectSendLevel," sets the send level of the audio track to the attached auxiliary effect  attach aux effect .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",audio,audio
AudioManager_setMode, sets the audio mode .  audio manager provides access to volume and ringer mode control,audio,audio
AudioTrack_setPositionNotificationPeriod," sets the period for the periodic notification event .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",audio,audio
AudioTrack_setNotificationMarkerPosition," sets the position of the notification marker .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",audio,audio
Equalizer_setProperties, sets the equalizer properties .  an equalizer is used to alter the frequency response of a particular music source or of the main output mix,audio,audio
AudioManager_setRingerMode, sets the ringer mode .  audio manager provides access to volume and ringer mode control,audio,audio
Equalizer_setBandLevel, sets the given equalizer band to the given gain value .  an equalizer is used to alter the frequency response of a particular music source or of the main output mix,audio,audio
AudioRecord_setPositionNotificationPeriod," sets the period at which the listener is called, if set with  set record position update listener or  set record position update listener .  the audio record class manages the audio resources for java applications to record audio from the audio input hardware of the platform  this is achieved by ""pulling""  the data from the audio record object  the application is responsible for polling the audio record object in time using one of the following three methods:  read, read or read  the choice of which method to use will be based on the audio data storage format that is the most convenient for the user of audio record",audio,audio
AudioTrack_setPlaybackRate," sets the playback sample rate for this track .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",audio,audio
AudioManager_setBluetoothScoOn, request use of bluetooth sco headset for communications .  audio manager provides access to volume and ringer mode control,audio,audio
BassBoost_setProperties, sets the bass boost properties .  bass boost is an audio effect to boost or amplify low frequencies of the sound  it is comparable to a simple equalizer but limited to one band amplification in the low frequency range,audio,audio
AudioTrack_setLoopPoints," sets the loop points and the loop count .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",audio,audio
AudioManager_setSpeakerphoneOn, sets the speakerphone on or off .  audio manager provides access to volume and ringer mode control,audio,audio
BassBoost_setStrength, sets the strength of the bass boost effect .  bass boost is an audio effect to boost or amplify low frequencies of the sound  it is comparable to a simple equalizer but limited to one band amplification in the low frequency range,audio,audio
AudioTrack_setPlaybackHeadPosition," sets the playback head position within the static buffer .  the audio track class manages and plays a single audio resource for java applications  it allows streaming of pcm audio buffers to the audio sink for playback  this is achieved by ""pushing"" the data to the audio track object using one of the  write, write,  and write methods",audio,audio
AudioManager_setParameters, sets a variable number of parameter values to audio hardware .  audio manager provides access to volume and ringer mode control,audio,audio
BluetoothHeadset_getConnectedDevices," get connected devices for this specific profile   for apps targeting build v e r s i o n_ c o d e s# s or or higher,  this requires the manifest permission# b l u e t o o t h_ c o n n e c t  permission which can be gained with  activity request permissions .  public api for controlling the bluetooth headset service  this includes both bluetooth headset and handsfree  profiles",bluetooth,bluetooth
BluetoothHeadset_getDevicesMatchingConnectionStates," get a list of devices that match any of the given connection  states   for apps targeting build v e r s i o n_ c o d e s# s or or higher,  this requires the manifest permission# b l u e t o o t h_ c o n n e c t  permission which can be gained with  activity request permissions .  public api for controlling the bluetooth headset service  this includes both bluetooth headset and handsfree  profiles",bluetooth,bluetooth
BluetoothHeadset_getConnectionState," get the current connection state of the profile  for apps targeting build v e r s i o n_ c o d e s# s or or higher,  this requires the manifest permission# b l u e t o o t h_ c o n n e c t  permission which can be gained with  activity request permissions .  public api for controlling the bluetooth headset service  this includes both bluetooth headset and handsfree  profiles",bluetooth,bluetooth
BluetoothHeadset_startVoiceRecognition, start bluetooth voice recognition .  public api for controlling the bluetooth headset service  this includes both bluetooth headset and handsfree  profiles,bluetooth,bluetooth
CalendarView_getDateTextAppearance, gets the text appearance for the calendar dates .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable,calendar information,calendar information
CalendarView_getDate," gets the selected date in milliseconds since january 1, 1970 00:00:00 in  time zone#get default time zone .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable",calendar information,calendar information
GregorianCalendar_getMinimum, returns the minimum value for the given calendar field of this  gregorian calendar instance .  gregorian calendar is a concrete subclass of calendar and provides the standard calendar system used by most of the world,calendar information,calendar information
Calendar_getFirstDayOfWeek," returns what the first day of the week is,  where 1 = sunday and 7 = saturday .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getInstance," returns a calendar using the default time zone and locale .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getTimeInMillis," returns this calendar's current time as a long .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getTime," returns this calendar's current time .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getDisplayNames," returns a map containing all names of the calendar  field in the given style and  locale and their corresponding field values .  the calendar class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields such as y e a r, m o n t h, d a y_ o f_ m o n t h, h o u r, and so on, and for manipulating the calendar fields, such as getting the date of the next week  an instant in time can be represented by a millisecond value that is an offset from the epoch, january 1, 1970 00:00:00 000 gmt ",calendar information,calendar information
GregorianCalendar_getActualMinimum," return the minimum value that this field could have, given the current date .  [icu enhancement] i c u's replacement for gregorian calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
CalendarView_getWeekDayTextAppearance, gets the text appearance for the week day abbreviation of the calendar header .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable,calendar information,calendar information
Calendar_toString," returns a string representation of this calendar .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
GregorianCalendar_getGregorianChange," gets the gregorian calendar change date .  [icu enhancement] i c u's replacement for gregorian calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getTimeZone," returns the time zone .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
GregorianCalendar_getGreatestMinimum, returns the highest minimum value for the given calendar field  of this gregorian calendar instance .  gregorian calendar is a concrete subclass of calendar and provides the standard calendar system used by most of the world,calendar information,calendar information
Calendar_getActualMinimum," returns the minimum value that this field could have, given the current date .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
CalendarView_getFirstDayOfWeek, gets the first day of week .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable,calendar information,calendar information
Calendar_getMinimalDaysInFirstWeek," returns what the minimal days required in the first week of the year are .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_clone," overrides cloneabl .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
GregorianCalendar_getActualMaximum," return the maximum value that this field could have, given the current date .  [icu enhancement] i c u's replacement for gregorian calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getDisplayName," returns the name of this calendar in the language of the given locale .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getActualMaximum," returns the maximum value that this field could have, given the  current date .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
Calendar_getAvailableLocales," returns the list of locales for which calendars are installed .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
CalendarView_getMaxDate," gets the maximal date supported by this calendar view in milliseconds  since january 1, 1970 00:00:00 in time zone#get default time  zone .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable",calendar information,calendar information
GregorianCalendar_getLeastMaximum, returns the lowest maximum value for the given calendar field  of this gregorian calendar instance .  gregorian calendar is a concrete subclass of calendar and provides the standard calendar system used by most of the world,calendar information,calendar information
Calendar_get," returns the value for a given time field .  [icu enhancement] i c u's replacement for calendar   methods, fields, and other functionality specific to icu are labeled '[icu]'",calendar information,calendar information
CalendarView_getMinDate," gets the minimal date supported by this calendar view in milliseconds  since january 1, 1970 00:00:00 in time zone#get default time  zone .  this class is a calendar widget for displaying and selecting dates  the range of dates supported by this calendar is configurable",calendar information,calendar information
GregorianCalendar_getMaximum, returns the maximum value for the given calendar field of this  gregorian calendar instance .  gregorian calendar is a concrete subclass of calendar and provides the standard calendar system used by most of the world,calendar information,calendar information
QuickContactBadge_setMode," this call has no effect anymore, as there is only one quick contact mod .  widget used to show an image with the standard quick contact badge and on click behavior",calendar information,contact information
SQLiteCursor_getColumnIndex," returns the zero-based index for the given column name, or -1 if the column doesn't exist .  a cursor implementation that exposes results from a query on a s q lite database  s q lite cursor is not internally synchronized so code using a s q lite cursor from multiple threads should perform its own synchronization when using the s q lite cursor",database,database
SQLiteCursor_getCount, returns the numbers of rows in the cursor .  a cursor implementation that exposes results from a query on a s q lite database  s q lite cursor is not internally synchronized so code using a s q lite cursor from multiple threads should perform its own synchronization when using the s q lite cursor,database,database
SQLiteDatabase_getVersion, gets the database version .  exposes methods to manage a s q lite database,database,database
SQLiteDatabase_query," query the given u r l, returning a cursor over the result set .  exposes methods to manage a s q lite database",database,database
SQLiteDatabase_rawQuery, runs the provided sql and returns a cursor over the result set .  exposes methods to manage a s q lite database,database,database
SQLiteDatabase_rawQueryWithFactory, runs the provided sql and returns a cursor over the result set .  exposes methods to manage a s q lite database,database,database
SQLiteDatabase_getPageSize," returns the current database page size, in bytes .  exposes methods to manage a s q lite database",database,database
SQLiteDatabase_getPath, gets the path to the database file .  exposes methods to manage a s q lite database,database,database
SQLiteCursor_getDatabase, get the database that this cursor is associated with .  a cursor implementation that exposes results from a query on a s q lite database  s q lite cursor is not internally synchronized so code using a s q lite cursor from multiple threads should perform its own synchronization when using the s q lite cursor,database,database
SQLiteCursor_getColumnNames, returns a string array holding the names of all of the columns in the  result set in the order in which they were listed in the result .  a cursor implementation that exposes results from a query on a s q lite database  s q lite cursor is not internally synchronized so code using a s q lite cursor from multiple threads should perform its own synchronization when using the s q lite cursor,database,database
SQLiteDatabase_getMaximumSize, returns the maximum size the database may grow to .  exposes methods to manage a s q lite database,database,database
SQLiteDatabase_getAttachedDbs, returns list of full pathnames of all attached databases including the main database  by executing 'pragma database_list' on the database .  exposes methods to manage a s q lite database,database,database
SQLiteDatabase_queryWithFactory," query the given u r l, returning a cursor over the result set .  exposes methods to manage a s q lite database",database,database
MediaPlayer_addTimedTextSource, adds an external timed text source file  .  media player class can be used to control playback of audio/video files and streams,files,media
DownloadManager_openDownloadedFile," open a downloaded file for reading .  the download manager is a system service that handles long running http downloads  clients may request that a uri be downloaded to a particular destination file  the download manager will conduct the download in the background, taking care of http interactions and retrying downloads after failures or across connectivity changes and system reboots",files,files
MediaMetadataRetriever_setDataSource, sets the data source  to use .  media metadata retriever class provides a unified interface for retrieving frame and meta data from an input media file,files,media
AttributesImpl_getURI, return an attribute's namespace uri .  default implementation of the attributes interface,files,files
Binder_dump," implemented to call the more convenient version  dump .  base class for a remotable object, the core part of a lightweight remote procedure call mechanism defined by i binder  this class is an implementation of i binder that provides standard local implementation of such an object",files,files
Binder_dumpAsync," like dump, but ensures the target  executes asynchronously .  base class for a remotable object, the core part of a lightweight remote procedure call mechanism defined by i binder  this class is an implementation of i binder that provides standard local implementation of such an object",files,files
MediaRecorder_setOutputFile, pass in the file descriptor of the file to be written .  used to record audio and video  the recording control is based on a simple state machine ,files,files
RandomAccessFile_write," writes b length bytes from the specified byte array  to this file, starting at the current file pointer .  instances of this class support both reading and writing to a random access file  a random access file behaves like a large array of bytes stored in the file system  there is a kind of cursor, or index into the implied array, called the file pointer; input operations read bytes starting at the file pointer and advance the file pointer past the bytes read  if the random access file is created in read/write mode, then output operations are also available; output operations write bytes starting at the file pointer and advance the file pointer past the bytes written  output operations that write past the current end of the implied array cause the array to be extended  the file pointer can be read by the get file pointer method and set by the seek method",files,files
FileOutputStream_write," writes b length bytes from the specified byte array  to this file output stream .  a file output stream is an output stream for writing data to a file or to a file descriptor  whether or not a file is available or may be created depends upon the underlying platform   some platforms, in particular, allow a file to be opened for writing by only one file output stream  at a time   in such situations the constructors in this class will fail if the file involved is already open",files,files
Debug_dumpService," get a debugging dump of a system service by name .  provides various debugging methods for android applications, including tracing and allocation counts",files,files
MediaPlayer_setDataSource, sets the data source  to use .  media player class can be used to control playback of audio/video files and streams,files,media
DownloadManager_getUriForDownloadedFile," returns the uri of the given downloaded file id, if the file is  downloaded successfully .  the download manager is a system service that handles long running http downloads  clients may request that a uri be downloaded to a particular destination file  the download manager will conduct the download in the background, taking care of http interactions and retrying downloads after failures or across connectivity changes and system reboots",files,files
RandomAccessFile_setLength," sets the length of this file .  instances of this class support both reading and writing to a random access file  a random access file behaves like a large array of bytes stored in the file system  there is a kind of cursor, or index into the implied array, called the file pointer; input operations read bytes starting at the file pointer and advance the file pointer past the bytes read  if the random access file is created in read/write mode, then output operations are also available; output operations write bytes starting at the file pointer and advance the file pointer past the bytes written  output operations that write past the current end of the implied array cause the array to be extended  the file pointer can be read by the get file pointer method and set by the seek method",files,files
Debug_dumpHprofData," dump ""hprof"" data to the specified file .  provides various debugging methods for android applications, including tracing and allocation counts",files,files
DropBoxManager_addFile," stores the contents of a file, which may be ignored or discarded as with  add text .  enqueues chunks of data    the queue is size bounded and will drop old data if the enqueued data exceeds the maximum size   you can think of this as a persistent, system wide, blob oriented ""logcat""",files,files
Debug_startMethodTracing," start method tracing with default log name and buffer size .  provides various debugging methods for android applications, including tracing and allocation counts",files,log
BackupAgent_onRestoreFile," handle the data delivered via the given file descriptor during a full restore  operation .  provides the central interface between an application and android's data backup infrastructure   an application that wishes to participate in the backup and restore mechanism will declare a subclass of backup agent, implement the on backup and on restore methods, and provide the name of its backup agent class in its android manifest xml file via the <application> tag's android:backup agent attribute",files,files
LocationManager_getBestProvider," returns the name of the provider that best meets the given criteria .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_getLastKnownLocation," gets the last known location from the given provider, or null if there is no last known  location .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_setTestProviderLocation," sets a new location for the given test provider .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_addNmeaListener," adds an nmea listener .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_sendExtraCommand," sends additional commands to a location provider .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_setTestProviderEnabled," sets the given test provider to be enabled or disabled .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_getProviders," returns a list of the names of available location providers .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_getAllProviders," returns a list of the names of all available location providers .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
LocationManager_isProviderEnabled," returns the current enabled/disabled status of the given provider .  this class provides access to the system location services  these services allow applications to obtain periodic updates of the device's geographical location, or to be notified when the device enters the proximity of a given geographical location",geolocation,geolocation
SpeechRecognizer_startListening," starts listening for speech .  this class provides access to the speech recognition service  this service allows access to the speech recognizer  do not instantiate this class directly, instead, call speech recognizer#create speech recognizer, or speech recognizer#create on device speech recognizer  this class's methods must be invoked only from the main application thread",log,media
Log_i, send a info log message and log the exception .  a p i for sending log output,log,log
UiModeManager_setNightMode, sets the system-wide night mode .  this class provides access to the system uimode services   these services allow applications to control ui modes of the device  it provides functionality to disable the car mode and it gives access to the night mode settings,log,system settings
WallpaperManager_setBitmap," version of set bitmap that allows the caller  to specify which of the supported wallpaper categories to set .  provides access to the system wallpaper  with wallpaper manager, you can get the current wallpaper, get the desired dimensions for the wallpaper, set the wallpaper, and more",log,media
AccessibilityManager_sendAccessibilityEvent," sends an accessibility event .  system level service that serves as an event dispatch for accessibility events, and provides facilities for querying the accessibility state of the system  accessibility events are generated when something notable happens in the user interface, for example an activity starts, the focus or selection of a view changes etc  parties interested in handling accessibility events implement and register an accessibility service which extends accessibility service",log,system settings
Log_e, send an error log message .  a p i for sending log output,log,log
NotificationManager_notify, post a notification to be shown in the status bar .  class to notify the user of events that happen   this is how you tell the user that something has happened in the background,log,notification
Log_wtf, what a terrible failure: report a condition that should never happen .  a p i for sending log output,log,log
Log_d, send a debug log message and log the exception .  a p i for sending log output,log,log
MediaPlayer_setSurface, sets the surface to be used as the sink for the video portion of  the media .  media player class can be used to control playback of audio/video files and streams,log,media
UiModeManager_enableCarMode," force device into car mode, like it had been placed in the car dock .  this class provides access to the system uimode services   these services allow applications to control ui modes of the device  it provides functionality to disable the car mode and it gives access to the night mode settings",log,system settings
Log_w, send a warn log message and log the exception .  a p i for sending log output,log,log
WallpaperManager_setResource," version of set resource that allows the caller to specify which  of the supported wallpaper categories to set .  provides access to the system wallpaper  with wallpaper manager, you can get the current wallpaper, get the desired dimensions for the wallpaper, set the wallpaper, and more",log,media
Log_v, send a verbose log message .  a p i for sending log output,log,log
WallpaperManager_setStream," change the current system wallpaper to a specific byte stream .  provides access to the system wallpaper  with wallpaper manager, you can get the current wallpaper, get the desired dimensions for the wallpaper, set the wallpaper, and more",log,media
LogPrinter_println, write a line of text to the output .  implementation of a printer that sends its output to the system log,log,log
Log_println, low-level logging call .  a p i for sending log output,log,log
AccessibilityService_performGlobalAction," performs a global action .  accessibility services should only be used to assist users with disabilities in using android devices and apps  they run in the background and receive callbacks by the system when accessibility events are fired  such events denote some state transition in the user interface, for example, the focus has changed, a button has been clicked, etc  such a service can optionally request the capability for querying the content of the active window  development of an accessibility service requires extending this class and implementing its abstract methods",log,system settings
WifiP2pManager_requestPeers," request the current list of peers .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_addLocalService," register a local service for service discovery .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_createGroup," create a p2p group with the current device as the group owner .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_setDnsSdResponseListeners," register a callback to be invoked on receiving bonjour service discovery  response .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_removeLocalService," remove a registered local service added with add local service  the function call immediately returns after sending a request to remove a  local service to the framework .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
ScanResult_writeToParcel, flatten this object in to a parcel .  scan result for bluetooth le scan,network connection,bluetooth
WifiP2pManager_removeServiceRequest," remove a specified service discovery request added with add service request  the function call immediately returns after sending a request to remove service  discovery request to the framework .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
NsdManager_registerService," register a service to be discovered by other services .  the network service discovery manager class provides the api to discover services on a network  as an example, if device a and device b are connected over a wi fi network, a game registered on device a can be discovered by a game on device b  another example use case is an application discovering printers on the network",network connection,network connection
NsdManager_resolveService," resolve a discovered service .  the network service discovery manager class provides the api to discover services on a network  as an example, if device a and device b are connected over a wi fi network, a game registered on device a can be discovered by a game on device b  another example use case is an application discovering printers on the network",network connection,network connection
WifiP2pManager_setServiceResponseListener," register a callback to be invoked on receiving service discovery response .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_discoverPeers," initiate peer discovery .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
TrafficStats_setThreadStatsTag," set active tag to use when accounting socket traffic originating  from the current thread .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network connection,network connection
URL_openConnection," same as open connection, except that the connection will be  made through the specified proxy; protocol handlers that do not  support proxing will ignore the proxy parameter and make a  normal connection .  class url represents a uniform resource locator, a pointer to a ""resource"" on the world wide web  a resource can be something as simple as a file or a directory, or it can be a reference to a more complicated object, such as a query to a database or to a search engine  more information on the types of u r ls and their formats can be found at: types of ur",network connection,network connection
WifiP2pManager_setUpnpServiceResponseListener," register a callback to be invoked on receiving upnp service discovery  response .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_addServiceRequest," add a service discovery request .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
NsdManager_discoverServices," initiate service discovery to browse for instances of a service type .  the network service discovery manager class provides the api to discover services on a network  as an example, if device a and device b are connected over a wi fi network, a game registered on device a can be discovered by a game on device b  another example use case is an application discovering printers on the network",network connection,network connection
WifiP2pManager_cancelConnect," cancel any ongoing p2p group negotiation  the function call immediately returns after sending a connection cancellation request  to the framework .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_connect," start a p2p connection to a device with the specified configuration .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_discoverServices," initiate service discovery .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_removeGroup," remove the current p2p group .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_requestGroupInfo," request p2p group info .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_stopPeerDiscovery," stop an ongoing peer discovery  the function call immediately returns after sending a stop request  to the framework .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
WifiP2pManager_requestConnectionInfo," request device connection info .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network connection,network connection
TrafficStats_getMobileRxBytes," return number of bytes received across mobile networks since device boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
SSLContext_getInstance, returns a s s l context object that implements the  specified secure socket protocol .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network connection
TrafficStats_getTotalTxPackets," return number of packets transmitted since device boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
SSLParameters_getCipherSuites," returns a copy of the array of ciphersuites or null if none  have been set .  encapsulates parameters for an s s l/ t l s connection  the parameters are the list of ciphersuites to be accepted in an s s l/ t l s handshake, the list of protocols to be allowed, the endpoint identification algorithm during s s l/ t l s handshaking, the server name indication , the algorithm constraints and whether s s l/ t l s servers should request or require client authentication, etc",network information,network connection
TrafficStats_getMobileRxPackets," return number of packets received across mobile networks since device  boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
ClassLoader_getSystemResources," finds all resources of the specified name from the search path used to  load classes .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,network connection
SSLParameters_getWantClientAuth," returns whether client authentication should be requested .  encapsulates parameters for an s s l/ t l s connection  the parameters are the list of ciphersuites to be accepted in an s s l/ t l s handshake, the list of protocols to be allowed, the endpoint identification algorithm during s s l/ t l s handshaking, the server name indication , the algorithm constraints and whether s s l/ t l s servers should request or require client authentication, etc",network information,network connection
SSLEngine_getPeerHost," returns the host name of the peer .  a class which enables secure communications using protocols such as the secure sockets layer  or  ietf rfc 2246 "" transport layer security""   protocols, but is transport independent",network information,network connection
TrafficStats_getTotalTxBytes," return number of bytes transmitted since device boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
AccessibilityService_getRootInActiveWindow," gets the root node in the currently active window if this service  can retrieve window content .  accessibility services should only be used to assist users with disabilities in using android devices and apps  they run in the background and receive callbacks by the system when accessibility events are fired  such events denote some state transition in the user interface, for example, the focus has changed, a button has been clicked, etc  such a service can optionally request the capability for querying the content of the active window  development of an accessibility service requires extending this class and implementing its abstract methods",network information,network connection
WifiP2pManager_initialize," registers the application with the wi- fi framework .  this class provides the api for managing wi fi peer to peer connectivity  this lets an application discover available peers, setup connection to peers and query for the list of peers  when a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device",network information,network connection
SSLContext_getSupportedSSLParameters, returns a copy of the s s l parameters indicating the supported  settings for this ssl context .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network connection
ClassLoader_getSystemResource," find a resource of the specified name from the search path used to load  classes .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
SSLEngine_wrap," attempts to encode plaintext bytes from a sequence of data  buffers into s s l/ t l s network data .  a class which enables secure communications using protocols such as the secure sockets layer  or  ietf rfc 2246 "" transport layer security""   protocols, but is transport independent",network information,network connection
SSLParameters_getNeedClientAuth," returns whether client authentication should be required .  encapsulates parameters for an s s l/ t l s connection  the parameters are the list of ciphersuites to be accepted in an s s l/ t l s handshake, the list of protocols to be allowed, the endpoint identification algorithm during s s l/ t l s handshaking, the server name indication , the algorithm constraints and whether s s l/ t l s servers should request or require client authentication, etc",network information,network connection
TrafficStats_getThreadStatsTag," get the active tag used when accounting socket traffic originating  from the current thread .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
TrafficStats_getMobileTxPackets," return number of packets transmitted across mobile networks since device  boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
ClassLoader_getResource," finds the resource with the given name .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
ClassLoader_getResources," finds all the resources with the given name .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
SmsManager_divideMessage," divide a message text into several fragments, none bigger than the maximum sms message size .  manages sms operations such as sending data, text, and pdu sms messages  get this object by calling the static method get default  to create an instance of sms manager associated with a specific subscription i d, call get sms manager for subscription id  this is typically used for devices that support multiple active subscriptions at once",network information,text message
TrafficStats_getMobileTxBytes," return number of bytes transmitted across mobile networks since device  boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
ClassLoader_loadClass," loads the class with the specified binary name .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
TrafficStats_getTotalRxBytes," return number of bytes received since device boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
ClassLoader_getSystemClassLoader," returns the system class loader for delegation .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
TrafficStats_getTotalRxPackets," return number of packets received since device boot .  class that provides network traffic statistics  these statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per uid basis",network information,network connection
ClassLoader_getParent," returns the parent class loader for delegation .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
SSLContext_getSocketFactory, returns a socket factory object for this  context .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network connection
SSLParameters_getProtocols," returns a copy of the array of protocols or null if none  have been set .  encapsulates parameters for an s s l/ t l s connection  the parameters are the list of ciphersuites to be accepted in an s s l/ t l s handshake, the list of protocols to be allowed, the endpoint identification algorithm during s s l/ t l s handshaking, the server name indication , the algorithm constraints and whether s s l/ t l s servers should request or require client authentication, etc",network information,network connection
SSLEngine_getPeerPort," returns the port number of the peer .  a class which enables secure communications using protocols such as the secure sockets layer  or  ietf rfc 2246 "" transport layer security""   protocols, but is transport independent",network information,network connection
SSLContext_getClientSessionContext," returns the client session context, which represents the set of  ssl sessions available for use during the handshake phase of  client-side ssl sockets .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes",network information,network connection
SSLContext_getProtocol, returns the protocol name of this s s l context object .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network connection
ClassLoader_getResourceAsStream," returns an input stream for reading the specified resource .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
SSLEngine_getSSLParameters," returns the s s l parameters in effect for this s s l engine .  a class which enables secure communications using protocols such as the secure sockets layer  or  ietf rfc 2246 "" transport layer security""   protocols, but is transport independent",network information,network information
SSLEngine_unwrap," attempts to decode s s l/ t l s network data into a sequence of plaintext  application data buffers .  a class which enables secure communications using protocols such as the secure sockets layer  or  ietf rfc 2246 "" transport layer security""   protocols, but is transport independent",network information,network information
SSLContext_getServerSocketFactory, returns a server socket factory object for  this context .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network information
SSLContext_getDefaultSSLParameters, returns a copy of the s s l parameters indicating the default  settings for this ssl context .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network information
SSLContext_getDefault, returns the default ssl context .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network information
SSLSocket_getSSLParameters," returns the s s l parameters in effect for this s s l socket .  this class extends sockets and provides secure socket using protocols such as the "" secure sockets layer""  or ietf "" transport layer security""  protocols",network information,network information
SSLContext_getProvider, returns the provider of this s s l context object .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes,network information,network information
SSLContext_getServerSessionContext," returns the server session context, which represents the set of  ssl sessions available for use during the handshake phase of  server-side ssl sockets .  instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or s s l engines  this class is initialized with an optional set of key and trust managers and source of secure random bytes",network information,network information
ClassLoader_getSystemResourceAsStream," open for reading, a resource of the specified name from the search path  used to load classes .  a class loader is an object that is responsible for loading classes  the class class loader is an abstract class   given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class   a typical strategy is to transform the name into a file name and then read a ""class file"" of that name from a file system",network information,system settings
MifareUltralight_setTimeout, set the transceive timeout in milliseconds .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc communication,nfc communication
IsoDep_setTimeout, set the timeout of transceive in milliseconds .  provides access to iso dep  properties and i/ o operations on a tag,nfc communication,nfc communication
NfcA_setTimeout, set the transceive timeout in milliseconds .  provides access to nfc a  properties and i/ o operations on a tag,nfc communication,nfc communication
NfcF_setTimeout, set the transceive timeout in milliseconds .  provides access to nfc f  properties and i/ o operations on a tag,nfc communication,nfc communication
NfcAdapter_enableForegroundDispatch, enable foreground dispatch to the given activity .  represents the local nfc adapter,nfc communication,nfc communication
IsoDep_getHiLayerResponse, return the higher layer response bytes for nfc b tags .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc communication
MifareUltralight_getType, return the mifare ultralight type of the tag .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc communication
IsoDep_getTag, get the tag object backing this tag technology object .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc communication
MifareUltralight_getTimeout, get the current transceive timeout in milliseconds .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc information
MifareUltralight_getMaxTransceiveLength, return the maximum number of bytes that can be sent with transceive .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc information
IsoDep_transceive, send raw i s o- d e p data to the tag and receive the response .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc information
MifareUltralight_get, get an instance of mifare ultralight for the given tag .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc information
NfcA_transceive, send raw n f c- a commands to the tag and receive the response .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
NfcF_get, get an instance of nfc f for the given tag .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
NfcA_getTag, get the tag object backing this tag technology object .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
NfcA_getSak, return the s a k/ s e l_ r e s bytes from tag discovery .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
NfcA_getMaxTransceiveLength, return the maximum number of bytes that can be sent with transceive .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
NfcF_getManufacturer, return the manufacturer bytes from tag discovery .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
IsoDep_get, get an instance of iso dep for the given tag .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc information
MifareUltralight_getTag, get the tag object backing this tag technology object .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc information
NfcF_getTag, get the tag object backing this tag technology object .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
NfcF_getMaxTransceiveLength, return the maximum number of bytes that can be sent with transceive .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
NfcF_getTimeout, get the current transceive timeout in milliseconds .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
MifareUltralight_transceive, send raw nfc a data to a tag and receive the response .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc information
NfcA_getAtqa, return the a t q a/ s e n s_ r e s bytes from tag discovery .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
NfcA_getTimeout, get the current transceive timeout in milliseconds .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
MifareUltralight_readPages, read 4 pages  .  provides access to mifare ultralight properties and i/ o operations on a tag,nfc information,nfc information
IsoDep_getTimeout, get the current timeout for transceive in milliseconds .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc information
IsoDep_getHistoricalBytes, return the i s o- d e p historical bytes for nfc a tags .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc information
NfcA_get, get an instance of nfc a for the given tag .  provides access to nfc a  properties and i/ o operations on a tag,nfc information,nfc information
NfcF_transceive, send raw n f c- f commands to the tag and receive the response .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
NfcAdapter_getDefaultAdapter, helper to get the default nfc adapter .  represents the local nfc adapter,nfc information,nfc information
NfcF_getSystemCode, return the system code bytes from tag discovery .  provides access to nfc f  properties and i/ o operations on a tag,nfc information,nfc information
IsoDep_getMaxTransceiveLength, return the maximum number of bytes that can be sent with transceive .  provides access to iso dep  properties and i/ o operations on a tag,nfc information,nfc information
WebSettings_getDatabaseEnabled," gets whether the database storage api is enabled .  manages settings state for a web view  when a web view is first created, it obtains a set of default settings  these default settings will be returned from any getter call  a web settings object obtained from web view#get settings is tied to the life of the web view  if a web view has been destroyed, any method call on web settings will throw an illegal state exception",system settings,system settings
WebSettings_getJavaScriptEnabled," gets whether java script is enabled .  manages settings state for a web view  when a web view is first created, it obtains a set of default settings  these default settings will be returned from any getter call  a web settings object obtained from web view#get settings is tied to the life of the web view  if a web view has been destroyed, any method call on web settings will throw an illegal state exception",system settings,system settings
WebSettings_getDomStorageEnabled," gets whether the dom storage a p is are enabled .  manages settings state for a web view  when a web view is first created, it obtains a set of default settings  these default settings will be returned from any getter call  a web settings object obtained from web view#get settings is tied to the life of the web view  if a web view has been destroyed, any method call on web settings will throw an illegal state exception",system settings,system settings
SmsManager_sendTextMessage," send a text based sms .  manages sms operations such as sending data, text, and pdu sms messages  get this object by calling the static method get default  to create an instance of sms manager associated with a specific subscription i d, call get sms manager for subscription id  this is typically used for devices that support multiple active subscriptions at once",text message,system settings
SmsManager_sendMultipartTextMessage," send a multi-part text based sms .  manages sms operations such as sending data, text, and pdu sms messages  get this object by calling the static method get default  to create an instance of sms manager associated with a specific subscription i d, call get sms manager for subscription id  this is typically used for devices that support multiple active subscriptions at once",text message,system settings
SmsManager_sendDataMessage," send a data based sms to a specific application port .  manages sms operations such as sending data, text, and pdu sms messages  get this object by calling the static method get default  to create an instance of sms manager associated with a specific subscription i d, call get sms manager for subscription id  this is typically used for devices that support multiple active subscriptions at once",text message,text message
AccountManager_getAccountsByTypeAndFeatures," lists all accounts of a type which have certain features .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_addAccountExplicitly," adds an account directly to the account manager .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getAuthenticatorTypes," lists the currently registered authenticators .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_confirmCredentials," confirms that the user knows the password for an account to make extra  sure they are the owner of the account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_setAuthToken," adds an auth token to the account manager cache for an account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_addOnAccountsUpdatedListener," adds an on accounts update listener to this instance of the account manager .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_updateCredentials," asks the user to enter a new password for an account, updating the  saved credentials for the account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_invalidateAuthToken," removes an auth token from the account manager's cache .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getUserData," gets the user data named by ""key"" associated with the account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_addAccount," asks the user to add an account of a specified type .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_get," gets an account manager instance associated with a context .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_removeAccount," removes an account from the account manager .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_hasFeatures," finds out whether a particular account has all the specified features .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_newChooseAccountIntent," returns an intent to an activity that prompts the user to choose from a list of  accounts .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_peekAuthToken," gets an auth token from the account manager's cache .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getAccountsByType," lists all accounts of particular type visible to the caller .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_editProperties," offers the user an opportunity to change an authenticator's settings .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getAccounts," lists all accounts visible to the caller regardless of type .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getPassword," gets the saved password associated with the account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_blockingGetAuthToken," this convenience helper synchronously gets an auth token with  get auth token .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getAuthTokenByFeatures," this convenience helper combines the functionality of get accounts by type and features,  get auth token, and add account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_setPassword," sets or forgets a saved password .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_getAuthToken," gets an auth token of the specified type for a particular account,  optionally raising a notification if the user must enter credentials .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
AccountManager_setUserData," sets one userdata key for an account .  this class provides access to a centralized registry of the user's online accounts   the user enters credentials  once per account, granting applications access to online resources with ""one click"" approval",user account,user account
