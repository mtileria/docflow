[
    {
        "name": "cac",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/tv/cac/package-summary",
        "classes": [
            {
                "name": "UserAction",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/cac/UserAction",
                "description": "This class defines the list of user actions used in UserActionRequestData.",
                "methods": []
            },
            {
                "name": "UserActionContext",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/cac/UserActionContext",
                "description": "This class defines the list of user action context used in UserActionRequestData.",
                "methods": []
            }
        ]
    },
    {
        "name": "measurement",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/measurement/package-summary",
        "classes": [
            {
                "name": "AppMeasurementContentProvider",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/measurement/AppMeasurementContentProvider",
                "description": "This class is deprecated. Replaced by com.google.firebase.provider.FirebaseInitProvider.",
                "methods": [
                    {
                        "name": "attachInfo(Context context, ProviderInfo info)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "delete(Uri uri, String selection, String[] selectionArgs)",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getType(Uri uri)",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "insert(Uri uri, ContentValues values)",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)",
                        "return_type": "Cursor",
                        "description": ""
                    },
                    {
                        "name": "update(Uri uri, ContentValues values, String selection, String[] selectionArgs)",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AppMeasurementJobService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/measurement/AppMeasurementJobService",
                "description": "A JobService used by FirebaseAnalytics.",
                "methods": [
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onRebind(Intent intent)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStartJob(JobParameters params)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onStopJob(JobParameters params)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onUnbind(Intent intent)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AppMeasurementReceiver",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/measurement/AppMeasurementReceiver",
                "description": "A BroadcastReceiver for Firebase Analytics.",
                "methods": [
                    {
                        "name": "doGoAsync()",
                        "return_type": "BroadcastReceiver.PendingResult",
                        "description": ""
                    },
                    {
                        "name": "doStartService(Context context, Intent service)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceive(Context context, Intent intent)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AppMeasurementService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/measurement/AppMeasurementService",
                "description": "An Service used by FirebaseAnalytics.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onRebind(Intent intent)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStartCommand(Intent intent, int flags, int startId)",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "onUnbind(Intent intent)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "rtb",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/mediation/rtb/package-summary",
        "classes": [
            {
                "name": "RtbAdapter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/rtb/RtbAdapter",
                "description": "Mediation adapter that also supports open bidding.",
                "methods": [
                    {
                        "name": "collectSignals(RtbSignalData data, SignalCallbacks callback)",
                        "return_type": "abstract void",
                        "description": "Called by the Google Mobile Ads SDK to start signal generation."
                    },
                    {
                        "name": "loadRtbBannerAd(MediationBannerAdConfiguration adConfiguration, MediationAdLoadCallback<MediationBannerAd, MediationBannerAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading an open bidding banner ad given a MediationAdConfigurationUsed to load the winning ad from an open bidding request."
                    },
                    {
                        "name": "loadRtbInterscrollerAd(MediationBannerAdConfiguration adConfiguration, MediationAdLoadCallback<MediationInterscrollerAd, MediationBannerAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading an open bidding interscroller ad given a MediationAdConfigurationUsed to load the winning ad from an open bidding request."
                    },
                    {
                        "name": "loadRtbInterstitialAd(MediationInterstitialAdConfiguration adConfiguration, MediationAdLoadCallback<MediationInterstitialAd, MediationInterstitialAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading an open bidding interstitial ad given a MediationAdConfigurationUsed to load the winning ad from an open bidding request."
                    },
                    {
                        "name": "loadRtbNativeAd(MediationNativeAdConfiguration adConfiguration, MediationAdLoadCallback<UnifiedNativeAdMapper, MediationNativeAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading an open bidding native ad given a MediationAdConfigurationUsed to load the winning ad from an open bidding request."
                    },
                    {
                        "name": "loadRtbRewardedAd(MediationRewardedAdConfiguration adConfiguration, MediationAdLoadCallback<MediationRewardedAd, MediationRewardedAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading an open bidding rewarded ad given a MediationAdConfigurationUsed to load the winning ad from an open bidding request."
                    },
                    {
                        "name": "loadRtbRewardedInterstitialAd(MediationRewardedAdConfiguration adConfiguration, MediationAdLoadCallback<MediationRewardedAd, MediationRewardedAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading an open bidding rewarded interstitial ad given a MediationAdConfigurationUsed to load the winning ad from an open bidding request."
                    }
                ]
            },
            {
                "name": "RtbSignalData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/rtb/RtbSignalData",
                "description": "Data passed into the adapter for signal generation.",
                "methods": [
                    {
                        "name": "getAdSize()",
                        "return_type": "AdSize",
                        "description": "Returns the ad size associated with a banner ad request, or null if this signal data is not for a banner ad request."
                    },
                    {
                        "name": "getConfiguration()",
                        "return_type": "MediationConfiguration",
                        "description": "This method is deprecated. Use getConfigurations("
                    },
                    {
                        "name": "getConfigurations()",
                        "return_type": "List<MediationConfiguration>",
                        "description": "Returns the configurations defined by the publisher in the AdMob or Ad Manager UI."
                    },
                    {
                        "name": "getContext()",
                        "return_type": "Context",
                        "description": "Returns the context."
                    },
                    {
                        "name": "getNetworkExtras()",
                        "return_type": "Bundle",
                        "description": "Returns the extra parameters set by the publisher on a per-request basis for a specific ad network adapter."
                    }
                ]
            },
            {
                "name": "SignalCallbacks",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/rtb/SignalCallbacks",
                "description": "Callback for signal generation from 3p SDKs for RTB mediation.",
                "methods": [
                    {
                        "name": "onFailure(AdError adError)",
                        "return_type": "abstract void",
                        "description": "Called when signal generation fails."
                    },
                    {
                        "name": "onFailure(String failure)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onFailure(AdError"
                    },
                    {
                        "name": "onSuccess(String signals)",
                        "return_type": "abstract void",
                        "description": "Success callback for a 3p signal generation."
                    }
                ]
            }
        ]
    },
    {
        "name": "widget",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/framework/media/widget/package-summary",
        "classes": [
            {
                "name": "CastSeekBar",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/widget/CastSeekBar",
                "description": "A custom seek bar provided by the Cast SDK mimicking the Android SeekBar.",
                "methods": [
                    {
                        "name": "getMaxProgress()",
                        "return_type": "int",
                        "description": "Returns the maximum progress."
                    },
                    {
                        "name": "getProgress()",
                        "return_type": "int",
                        "description": "Returns the progress."
                    },
                    {
                        "name": "onDraw(Canvas canvas)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onTouchEvent(MotionEvent event)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExpandedControllerActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/widget/ExpandedControllerActivity",
                "description": "This abstract class provides most of the implementation of an expanded controller, which is an out-of-the-box remote player, used when casting media to a cast device.",
                "methods": [
                    {
                        "name": "getButtonImageViewAt(int slotIndex)",
                        "return_type": "finalImageView",
                        "description": "Returns the ImageView of the button at slotIndex in this container."
                    },
                    {
                        "name": "getButtonSlotCount()",
                        "return_type": "final int",
                        "description": "Returns the number of slots to hold control buttons in this container."
                    },
                    {
                        "name": "getButtonTypeAt(int slotIndex)",
                        "return_type": "final int",
                        "description": "Returns the type of the button at slotIndex in this container."
                    },
                    {
                        "name": "getSeekBar()",
                        "return_type": "SeekBar",
                        "description": "This method is deprecated. The expanded controller no longer uses SeekBar. The SeekBar returned by this method is only a dummy instance. Clients should not access the SeekBar."
                    },
                    {
                        "name": "getStatusTextView()",
                        "return_type": "TextView",
                        "description": "Returns the TextView that displays the status text."
                    },
                    {
                        "name": "getUIMediaController()",
                        "return_type": "UIMediaController",
                        "description": "Returns the UIMediaController used to bind views in this container."
                    },
                    {
                        "name": "onOptionsItemSelected(MenuItem item)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onWindowFocusChanged(boolean hasFocus)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MiniControllerFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/widget/MiniControllerFragment",
                "description": "A fragment that provides remote control functionality.",
                "methods": [
                    {
                        "name": "getButtonImageViewAt(int slotIndex)",
                        "return_type": "finalImageView",
                        "description": "Returns the ImageView of the button at slotIndex in this container."
                    },
                    {
                        "name": "getButtonSlotCount()",
                        "return_type": "final int",
                        "description": "Returns the number of slots to hold control buttons in this container."
                    },
                    {
                        "name": "getButtonTypeAt(int slotIndex)",
                        "return_type": "final int",
                        "description": "Returns the type of the button at slotIndex in this container."
                    },
                    {
                        "name": "getUIMediaController()",
                        "return_type": "UIMediaController",
                        "description": "Returns the UIMediaController used to bind views in this container."
                    },
                    {
                        "name": "onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onInflate(Context context, AttributeSet attrs, Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ControlButtonsContainer",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/widget/ControlButtonsContainer",
                "description": "An interface that defines a container which holds a certain number of slots to show control buttons.",
                "methods": [
                    {
                        "name": "getButtonImageViewAt(int slotIndex)",
                        "return_type": "abstractImageView",
                        "description": "Returns the ImageView of the button at slotIndex in this container."
                    },
                    {
                        "name": "getButtonSlotCount()",
                        "return_type": "abstract int",
                        "description": "Returns the number of slots to hold control buttons in this container."
                    },
                    {
                        "name": "getButtonTypeAt(int slotIndex)",
                        "return_type": "abstract int",
                        "description": "Returns the type of the button at slotIndex in this container."
                    },
                    {
                        "name": "getUIMediaController()",
                        "return_type": "abstractUIMediaController",
                        "description": "Returns the UIMediaController used to bind views in this container."
                    }
                ]
            }
        ]
    },
    {
        "name": "nearby",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/nearby/package-summary",
        "classes": [
            {
                "name": "Nearby",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/Nearby",
                "description": "API for communication with nearby devices.",
                "methods": [
                    {
                        "name": "getConnectionsClient(Context context)",
                        "return_type": "staticConnectionsClient",
                        "description": "Creates a new instance of ConnectionsClient."
                    },
                    {
                        "name": "getConnectionsClient(Activity activity)",
                        "return_type": "staticConnectionsClient",
                        "description": "Creates a new instance of ConnectionsClient."
                    },
                    {
                        "name": "getExposureNotificationClient(Context context)",
                        "return_type": "staticExposureNotificationClient",
                        "description": "Creates a new instance of ExposureNotificationClient."
                    },
                    {
                        "name": "getMessagesClient(Activity activity, MessagesOptions options)",
                        "return_type": "staticMessagesClient",
                        "description": "Creates a new instance of MessagesClient."
                    },
                    {
                        "name": "getMessagesClient(Activity activity)",
                        "return_type": "staticMessagesClient",
                        "description": "Creates a new instance of MessagesClient."
                    },
                    {
                        "name": "getMessagesClient(Context context, MessagesOptions options)",
                        "return_type": "staticMessagesClient",
                        "description": "Creates a new instance of MessagesClient."
                    },
                    {
                        "name": "getMessagesClient(Context context)",
                        "return_type": "staticMessagesClient",
                        "description": "Creates a new instance of MessagesClient."
                    }
                ]
            }
        ]
    },
    {
        "name": "people",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/plus/model/people/package-summary",
        "classes": [
            {
                "name": "Person.Cover.Layout",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.Layout",
                "description": "The layout of the cover art.",
                "methods": []
            },
            {
                "name": "Person.Gender",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Gender",
                "description": "The person's gender.",
                "methods": []
            },
            {
                "name": "Person.ObjectType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.ObjectType",
                "description": "Type of person within Google+.",
                "methods": []
            },
            {
                "name": "Person.Organizations.Type",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Organizations.Type",
                "description": "The type of organization.",
                "methods": []
            },
            {
                "name": "Person.RelationshipStatus",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.RelationshipStatus",
                "description": "The person's relationship status.",
                "methods": []
            },
            {
                "name": "Person.Urls.Type",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Urls.Type",
                "description": "The type of URL.",
                "methods": []
            },
            {
                "name": "PersonBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/model/people/PersonBuffer",
                "description": "This class was deprecated. This API has been deprecated. Please refer to Deprecation Notes for details.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "Person",
                        "description": "Get the item at the specified position."
                    }
                ]
            },
            {
                "name": "Person",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person",
                "description": "This interface was deprecated. This API has been deprecated. Please refer to Deprecation Notes for details.",
                "methods": [
                    {
                        "name": "getAboutMe()",
                        "return_type": "abstractString",
                        "description": "A short biography for this person."
                    },
                    {
                        "name": "getAgeRange()",
                        "return_type": "abstractPerson.AgeRange",
                        "description": "The age range of the person."
                    },
                    {
                        "name": "getBirthday()",
                        "return_type": "abstractString",
                        "description": "The person's date of birth, represented as YYYY-MM-DD."
                    },
                    {
                        "name": "getBraggingRights()",
                        "return_type": "abstractString",
                        "description": "The \"bragging rights\" line of this person."
                    },
                    {
                        "name": "getCircledByCount()",
                        "return_type": "abstract int",
                        "description": "If a Google+ Page and for followers who are visible, the number of people who have added this page to a circle."
                    },
                    {
                        "name": "getCover()",
                        "return_type": "abstractPerson.Cover",
                        "description": "The cover photo content."
                    },
                    {
                        "name": "getCurrentLocation()",
                        "return_type": "abstractString",
                        "description": "The current location for this person."
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "abstractString",
                        "description": "The name of this person, which is suitable for display."
                    },
                    {
                        "name": "getGender()",
                        "return_type": "abstract int",
                        "description": "The person's gender."
                    },
                    {
                        "name": "getId()",
                        "return_type": "abstractString",
                        "description": "The ID of this person."
                    },
                    {
                        "name": "getImage()",
                        "return_type": "abstractPerson.Image",
                        "description": "The representation of the person's profile photo."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "abstractString",
                        "description": "The user's preferred language for rendering."
                    },
                    {
                        "name": "getName()",
                        "return_type": "abstractPerson.Name",
                        "description": "An object representation of the individual components of a person's name."
                    },
                    {
                        "name": "getNickname()",
                        "return_type": "abstractString",
                        "description": "The nickname of this person."
                    },
                    {
                        "name": "getObjectType()",
                        "return_type": "abstract int",
                        "description": "Type of person within Google+."
                    },
                    {
                        "name": "getOrganizations()",
                        "return_type": "abstractList<Person.Organizations>",
                        "description": "A list of current or past organizations with which this person is associated."
                    },
                    {
                        "name": "getPlacesLived()",
                        "return_type": "abstractList<Person.PlacesLived>",
                        "description": "A list of places where this person has lived."
                    },
                    {
                        "name": "getPlusOneCount()",
                        "return_type": "abstract int",
                        "description": "If a Google+ Page, the number of people who have +1'd this page."
                    },
                    {
                        "name": "getRelationshipStatus()",
                        "return_type": "abstract int",
                        "description": "The person's relationship status."
                    },
                    {
                        "name": "getTagline()",
                        "return_type": "abstractString",
                        "description": "The brief description (tagline"
                    },
                    {
                        "name": "getUrl()",
                        "return_type": "abstractString",
                        "description": "The URL of this person's profile."
                    },
                    {
                        "name": "getUrls()",
                        "return_type": "abstractList<Person.Urls>",
                        "description": "A list of URLs for this person."
                    },
                    {
                        "name": "hasAboutMe()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"aboutMe\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasAgeRange()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"ageRange\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasBirthday()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"birthday\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasBraggingRights()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"braggingRights\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasCircledByCount()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"circledByCount\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasCover()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"cover\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasCurrentLocation()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"currentLocation\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasDisplayName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"displayName\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasGender()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"gender\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasId()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"id\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasImage()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"image\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasIsPlusUser()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"isPlusUser\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasLanguage()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"language\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"name\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasNickname()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"nickname\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasObjectType()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"objectType\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasOrganizations()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"organizations\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasPlacesLived()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"placesLived\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasPlusOneCount()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"plusOneCount\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasRelationshipStatus()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"relationshipStatus\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasTagline()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"tagline\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasUrl()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"url\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasUrls()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"urls\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasVerified()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"verified\" field is explicitly set to a value."
                    },
                    {
                        "name": "isPlusUser()",
                        "return_type": "abstract boolean",
                        "description": "Whether this user has signed up for Google+."
                    },
                    {
                        "name": "isVerified()",
                        "return_type": "abstract boolean",
                        "description": "Whether the person or Google+ Page has been verified."
                    }
                ]
            },
            {
                "name": "Person.AgeRange",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.AgeRange",
                "description": "The age range of the person.",
                "methods": [
                    {
                        "name": "getMax()",
                        "return_type": "abstract int",
                        "description": "The age range's upper bound, if any."
                    },
                    {
                        "name": "getMin()",
                        "return_type": "abstract int",
                        "description": "The age range's lower bound, if any."
                    },
                    {
                        "name": "hasMax()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"max\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasMin()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"min\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover",
                "description": "The cover photo content.",
                "methods": [
                    {
                        "name": "getCoverInfo()",
                        "return_type": "abstractPerson.Cover.CoverInfo",
                        "description": "Extra information about the cover photo."
                    },
                    {
                        "name": "getCoverPhoto()",
                        "return_type": "abstractPerson.Cover.CoverPhoto",
                        "description": "The person's primary cover image."
                    },
                    {
                        "name": "getLayout()",
                        "return_type": "abstract int",
                        "description": "The layout of the cover art."
                    },
                    {
                        "name": "hasCoverInfo()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"coverInfo\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasCoverPhoto()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"coverPhoto\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasLayout()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"layout\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.CoverInfo",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.CoverInfo",
                "description": "Extra information about the cover photo.",
                "methods": [
                    {
                        "name": "getLeftImageOffset()",
                        "return_type": "abstract int",
                        "description": "The difference between the left position of the cover image and the actual displayed cover image."
                    },
                    {
                        "name": "getTopImageOffset()",
                        "return_type": "abstract int",
                        "description": "The difference between the top position of the cover image and the actual displayed cover image."
                    },
                    {
                        "name": "hasLeftImageOffset()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"leftImageOffset\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasTopImageOffset()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"topImageOffset\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.CoverPhoto",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.CoverPhoto",
                "description": "The person's primary cover image.",
                "methods": [
                    {
                        "name": "getHeight()",
                        "return_type": "abstract int",
                        "description": "The height of the image."
                    },
                    {
                        "name": "getUrl()",
                        "return_type": "abstractString",
                        "description": "The URL of the image."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "abstract int",
                        "description": "The width of the image."
                    },
                    {
                        "name": "hasHeight()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"height\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasUrl()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"url\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasWidth()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"width\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Image",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Image",
                "description": "The representation of the person's profile photo.",
                "methods": [
                    {
                        "name": "getUrl()",
                        "return_type": "abstractString",
                        "description": "The URL of the person's profile photo."
                    },
                    {
                        "name": "hasUrl()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"url\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Name",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Name",
                "description": "An object representation of the individual components of a person's name.",
                "methods": [
                    {
                        "name": "getFamilyName()",
                        "return_type": "abstractString",
                        "description": "The family name (last name"
                    },
                    {
                        "name": "getFormatted()",
                        "return_type": "abstractString",
                        "description": "The full name of this person, including middle names, suffixes, etc."
                    },
                    {
                        "name": "getGivenName()",
                        "return_type": "abstractString",
                        "description": "The given name (first name"
                    },
                    {
                        "name": "getHonorificPrefix()",
                        "return_type": "abstractString",
                        "description": "The honorific prefixes (such as \"Dr.\" or \"Mrs.\""
                    },
                    {
                        "name": "getHonorificSuffix()",
                        "return_type": "abstractString",
                        "description": "The honorific suffixes (such as \"Jr.\""
                    },
                    {
                        "name": "getMiddleName()",
                        "return_type": "abstractString",
                        "description": "The middle name of this person."
                    },
                    {
                        "name": "hasFamilyName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"familyName\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasFormatted()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"formatted\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasGivenName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"givenName\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasHonorificPrefix()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"honorificPrefix\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasHonorificSuffix()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"honorificSuffix\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasMiddleName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"middleName\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Organizations",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Organizations",
                "description": "",
                "methods": [
                    {
                        "name": "getDepartment()",
                        "return_type": "abstractString",
                        "description": "The department within the organization."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "A short description of the person's role in this organization."
                    },
                    {
                        "name": "getEndDate()",
                        "return_type": "abstractString",
                        "description": "The date that the person left this organization."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "abstractString",
                        "description": "The location of this organization."
                    },
                    {
                        "name": "getName()",
                        "return_type": "abstractString",
                        "description": "The name of the organization."
                    },
                    {
                        "name": "getStartDate()",
                        "return_type": "abstractString",
                        "description": "The date that the person joined this organization."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "abstractString",
                        "description": "The person's job title or role within the organization."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstract int",
                        "description": "The type of organization."
                    },
                    {
                        "name": "hasDepartment()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"department\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasDescription()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"description\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasEndDate()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"endDate\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasLocation()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"location\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"name\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasPrimary()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"primary\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasStartDate()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"startDate\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasTitle()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"title\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasType()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"type\" field is explicitly set to a value."
                    },
                    {
                        "name": "isPrimary()",
                        "return_type": "abstract boolean",
                        "description": "If \"true\", indicates this organization is the person's primary one, which is typically interpreted as the current one."
                    }
                ]
            },
            {
                "name": "Person.PlacesLived",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.PlacesLived",
                "description": "",
                "methods": [
                    {
                        "name": "getValue()",
                        "return_type": "abstractString",
                        "description": "A place where this person has lived."
                    },
                    {
                        "name": "hasPrimary()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"primary\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasValue()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"value\" field is explicitly set to a value."
                    },
                    {
                        "name": "isPrimary()",
                        "return_type": "abstract boolean",
                        "description": "If \"true\", this place of residence is this person's primary residence."
                    }
                ]
            },
            {
                "name": "Person.Urls",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Urls",
                "description": "",
                "methods": [
                    {
                        "name": "getLabel()",
                        "return_type": "abstractString",
                        "description": "The label of the URL."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstract int",
                        "description": "The type of URL."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "abstractString",
                        "description": "The URL value."
                    },
                    {
                        "name": "hasLabel()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"label\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasType()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"type\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasValue()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"value\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.AgeRange",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.AgeRange",
                "description": "The age range of the person.",
                "methods": [
                    {
                        "name": "getMax()",
                        "return_type": "abstract int",
                        "description": "The age range's upper bound, if any."
                    },
                    {
                        "name": "getMin()",
                        "return_type": "abstract int",
                        "description": "The age range's lower bound, if any."
                    },
                    {
                        "name": "hasMax()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"max\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasMin()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"min\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover",
                "description": "The cover photo content.",
                "methods": [
                    {
                        "name": "getCoverInfo()",
                        "return_type": "abstractPerson.Cover.CoverInfo",
                        "description": "Extra information about the cover photo."
                    },
                    {
                        "name": "getCoverPhoto()",
                        "return_type": "abstractPerson.Cover.CoverPhoto",
                        "description": "The person's primary cover image."
                    },
                    {
                        "name": "getLayout()",
                        "return_type": "abstract int",
                        "description": "The layout of the cover art."
                    },
                    {
                        "name": "hasCoverInfo()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"coverInfo\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasCoverPhoto()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"coverPhoto\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasLayout()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"layout\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Gender",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Gender",
                "description": "The person's gender.",
                "methods": []
            },
            {
                "name": "Person.Image",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Image",
                "description": "The representation of the person's profile photo.",
                "methods": [
                    {
                        "name": "getUrl()",
                        "return_type": "abstractString",
                        "description": "The URL of the person's profile photo."
                    },
                    {
                        "name": "hasUrl()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"url\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Name",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Name",
                "description": "An object representation of the individual components of a person's name.",
                "methods": [
                    {
                        "name": "getFamilyName()",
                        "return_type": "abstractString",
                        "description": "The family name (last name"
                    },
                    {
                        "name": "getFormatted()",
                        "return_type": "abstractString",
                        "description": "The full name of this person, including middle names, suffixes, etc."
                    },
                    {
                        "name": "getGivenName()",
                        "return_type": "abstractString",
                        "description": "The given name (first name"
                    },
                    {
                        "name": "getHonorificPrefix()",
                        "return_type": "abstractString",
                        "description": "The honorific prefixes (such as \"Dr.\" or \"Mrs.\""
                    },
                    {
                        "name": "getHonorificSuffix()",
                        "return_type": "abstractString",
                        "description": "The honorific suffixes (such as \"Jr.\""
                    },
                    {
                        "name": "getMiddleName()",
                        "return_type": "abstractString",
                        "description": "The middle name of this person."
                    },
                    {
                        "name": "hasFamilyName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"familyName\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasFormatted()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"formatted\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasGivenName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"givenName\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasHonorificPrefix()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"honorificPrefix\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasHonorificSuffix()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"honorificSuffix\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasMiddleName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"middleName\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.ObjectType",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.ObjectType",
                "description": "Type of person within Google+.",
                "methods": []
            },
            {
                "name": "Person.Organizations",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Organizations",
                "description": "",
                "methods": [
                    {
                        "name": "getDepartment()",
                        "return_type": "abstractString",
                        "description": "The department within the organization."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "A short description of the person's role in this organization."
                    },
                    {
                        "name": "getEndDate()",
                        "return_type": "abstractString",
                        "description": "The date that the person left this organization."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "abstractString",
                        "description": "The location of this organization."
                    },
                    {
                        "name": "getName()",
                        "return_type": "abstractString",
                        "description": "The name of the organization."
                    },
                    {
                        "name": "getStartDate()",
                        "return_type": "abstractString",
                        "description": "The date that the person joined this organization."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "abstractString",
                        "description": "The person's job title or role within the organization."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstract int",
                        "description": "The type of organization."
                    },
                    {
                        "name": "hasDepartment()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"department\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasDescription()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"description\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasEndDate()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"endDate\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasLocation()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"location\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasName()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"name\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasPrimary()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"primary\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasStartDate()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"startDate\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasTitle()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"title\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasType()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"type\" field is explicitly set to a value."
                    },
                    {
                        "name": "isPrimary()",
                        "return_type": "abstract boolean",
                        "description": "If \"true\", indicates this organization is the person's primary one, which is typically interpreted as the current one."
                    }
                ]
            },
            {
                "name": "Person.PlacesLived",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.PlacesLived",
                "description": "",
                "methods": [
                    {
                        "name": "getValue()",
                        "return_type": "abstractString",
                        "description": "A place where this person has lived."
                    },
                    {
                        "name": "hasPrimary()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"primary\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasValue()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"value\" field is explicitly set to a value."
                    },
                    {
                        "name": "isPrimary()",
                        "return_type": "abstract boolean",
                        "description": "If \"true\", this place of residence is this person's primary residence."
                    }
                ]
            },
            {
                "name": "Person.RelationshipStatus",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.RelationshipStatus",
                "description": "The person's relationship status.",
                "methods": []
            },
            {
                "name": "Person.Urls",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Urls",
                "description": "",
                "methods": [
                    {
                        "name": "getLabel()",
                        "return_type": "abstractString",
                        "description": "The label of the URL."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstract int",
                        "description": "The type of URL."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "abstractString",
                        "description": "The URL value."
                    },
                    {
                        "name": "hasLabel()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"label\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasType()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"type\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasValue()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"value\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.CoverInfo",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.CoverInfo",
                "description": "Extra information about the cover photo.",
                "methods": [
                    {
                        "name": "getLeftImageOffset()",
                        "return_type": "abstract int",
                        "description": "The difference between the left position of the cover image and the actual displayed cover image."
                    },
                    {
                        "name": "getTopImageOffset()",
                        "return_type": "abstract int",
                        "description": "The difference between the top position of the cover image and the actual displayed cover image."
                    },
                    {
                        "name": "hasLeftImageOffset()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"leftImageOffset\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasTopImageOffset()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"topImageOffset\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.CoverPhoto",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.CoverPhoto",
                "description": "The person's primary cover image.",
                "methods": [
                    {
                        "name": "getHeight()",
                        "return_type": "abstract int",
                        "description": "The height of the image."
                    },
                    {
                        "name": "getUrl()",
                        "return_type": "abstractString",
                        "description": "The URL of the image."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "abstract int",
                        "description": "The width of the image."
                    },
                    {
                        "name": "hasHeight()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"height\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasUrl()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"url\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasWidth()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"width\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.Layout",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.Layout",
                "description": "The layout of the cover art.",
                "methods": []
            },
            {
                "name": "Person.Organizations.Type",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Organizations.Type",
                "description": "The type of organization.",
                "methods": []
            },
            {
                "name": "Person.Urls.Type",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Urls.Type",
                "description": "The type of URL.",
                "methods": []
            },
            {
                "name": "Person.Cover.CoverInfo",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.CoverInfo",
                "description": "Extra information about the cover photo.",
                "methods": [
                    {
                        "name": "getLeftImageOffset()",
                        "return_type": "abstract int",
                        "description": "The difference between the left position of the cover image and the actual displayed cover image."
                    },
                    {
                        "name": "getTopImageOffset()",
                        "return_type": "abstract int",
                        "description": "The difference between the top position of the cover image and the actual displayed cover image."
                    },
                    {
                        "name": "hasLeftImageOffset()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"leftImageOffset\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasTopImageOffset()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"topImageOffset\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.CoverPhoto",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.CoverPhoto",
                "description": "The person's primary cover image.",
                "methods": [
                    {
                        "name": "getHeight()",
                        "return_type": "abstract int",
                        "description": "The height of the image."
                    },
                    {
                        "name": "getUrl()",
                        "return_type": "abstractString",
                        "description": "The URL of the image."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "abstract int",
                        "description": "The width of the image."
                    },
                    {
                        "name": "hasHeight()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"height\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasUrl()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"url\" field is explicitly set to a value."
                    },
                    {
                        "name": "hasWidth()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the \"width\" field is explicitly set to a value."
                    }
                ]
            },
            {
                "name": "Person.Cover.Layout",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Cover.Layout",
                "description": "The layout of the cover art.",
                "methods": []
            },
            {
                "name": "Person.Organizations.Type",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Organizations.Type",
                "description": "The type of organization.",
                "methods": []
            },
            {
                "name": "Person.Urls.Type",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/model/people/Person.Urls.Type",
                "description": "The type of URL.",
                "methods": []
            }
        ]
    },
    {
        "name": "model",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/identity/intents/model/package-summary",
        "classes": [
            {
                "name": "CountrySpecification",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/identity/intents/model/CountrySpecification",
                "description": "Parcelable representing a country.",
                "methods": [
                    {
                        "name": "getCountryCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UserAddress",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/identity/intents/model/UserAddress",
                "description": "Parcelable representing an address.",
                "methods": [
                    {
                        "name": "fromIntent(Intent data)",
                        "return_type": "staticUserAddress",
                        "description": ""
                    },
                    {
                        "name": "getAddress1()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAddress2()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAddress3()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAddress4()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAddress5()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAdministrativeArea()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getCompanyName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getCountryCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getEmailAddress()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getLocality()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getPhoneNumber()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getPostalCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getSortingCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "isPostBox()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "admanager",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/admanager/package-summary",
        "classes": [
            {
                "name": "AdManagerAdRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AdManagerAdRequest",
                "description": "An AdManagerAdRequest contains targeting information used to fetch an ad from Google Ad Manager.",
                "methods": [
                    {
                        "name": "getCustomTargeting()",
                        "return_type": "Bundle",
                        "description": "Returns the custom targeting parameters."
                    },
                    {
                        "name": "getPublisherProvidedId()",
                        "return_type": "String",
                        "description": "Returns the identifier used for frequency capping, audience segmentation and targeting, sequential ad rotation, and other audience-based ad delivery controls across devices."
                    }
                ]
            },
            {
                "name": "AdManagerAdRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AdManagerAdRequest.Builder",
                "description": "Builds an AdManagerAdRequest.",
                "methods": [
                    {
                        "name": "addCategoryExclusion(String categoryExclusion)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Sets a slot-level ad category exclusion label."
                    },
                    {
                        "name": "addCustomTargeting(String key, List<String> values)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Adds a custom targeting parameter."
                    },
                    {
                        "name": "addCustomTargeting(String key, String value)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Adds a custom targeting parameter."
                    },
                    {
                        "name": "build()",
                        "return_type": "AdManagerAdRequest",
                        "description": "Constructs an AdManagerAdRequest with the specified attributes."
                    },
                    {
                        "name": "setPublisherProvidedId(String publisherProvidedId)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Sets an identifier for use in frequency capping, audience segmentation and targeting, sequential ad rotation, and other audience-based ad delivery controls across devices."
                    }
                ]
            },
            {
                "name": "AdManagerAdView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AdManagerAdView",
                "description": "The View to display banner ads for use with Google Ad Manager.",
                "methods": [
                    {
                        "name": "getAdSizes()",
                        "return_type": "AdSize[]",
                        "description": "Returns the ad sizes supported by this AdManagerAdView."
                    },
                    {
                        "name": "getAppEventListener()",
                        "return_type": "AppEventListener",
                        "description": "Returns the AppEventListener for this AdManagerAdView."
                    },
                    {
                        "name": "getVideoController()",
                        "return_type": "VideoController",
                        "description": "Returns the VideoController for this ad view."
                    },
                    {
                        "name": "getVideoOptions()",
                        "return_type": "VideoOptions",
                        "description": "Returns the VideoOptions for this ad view."
                    },
                    {
                        "name": "loadAd(AdManagerAdRequest adManagerAdRequest)",
                        "return_type": "void",
                        "description": "Loads an ad."
                    },
                    {
                        "name": "recordManualImpression()",
                        "return_type": "void",
                        "description": "Records a manual impression."
                    },
                    {
                        "name": "setAdSizes(AdSize... adSizes)",
                        "return_type": "void",
                        "description": "Sets the supported sizes of the banner ad."
                    },
                    {
                        "name": "setAppEventListener(AppEventListener appEventListener)",
                        "return_type": "void",
                        "description": "Sets an AppEventListener for this AdManagerAdView."
                    },
                    {
                        "name": "setManualImpressionsEnabled(boolean manualImpressionsEnabled)",
                        "return_type": "void",
                        "description": "Indicates whether you intend to record impressions manually for this AdManagerAdView."
                    },
                    {
                        "name": "setVideoOptions(VideoOptions videoOptions)",
                        "return_type": "void",
                        "description": "Sets the VideoOptions for this ad view."
                    }
                ]
            },
            {
                "name": "AdManagerInterstitialAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AdManagerInterstitialAd",
                "description": "A full page ad experience at natural transition points such as a page change, an app launch, or a game level load for Google Ad Manager publishers.",
                "methods": [
                    {
                        "name": "getAppEventListener()",
                        "return_type": "abstractAppEventListener",
                        "description": "Returns the AppEventListener for this AdManagerInterstitialAd."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdManagerAdRequest adManagerAdRequest, AdManagerInterstitialAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads an AdManagerInterstitialAd."
                    },
                    {
                        "name": "setAppEventListener(AppEventListener appEventListener)",
                        "return_type": "abstract void",
                        "description": "Sets an AppEventListener for this AdManagerInterstitialAd."
                    }
                ]
            },
            {
                "name": "AdManagerInterstitialAdLoadCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AdManagerInterstitialAdLoadCallback",
                "description": "Callback to be invoked when a Google Ad Manager interstitial ad finishes loading.",
                "methods": []
            },
            {
                "name": "AppEventListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AppEventListener",
                "description": "A listener interface for app events triggered by ads.",
                "methods": [
                    {
                        "name": "onAppEvent(String name, String data)",
                        "return_type": "abstract void",
                        "description": "Called when an app event occurs."
                    }
                ]
            },
            {
                "name": "AdManagerAdRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/admanager/AdManagerAdRequest.Builder",
                "description": "Builds an AdManagerAdRequest.",
                "methods": [
                    {
                        "name": "addCategoryExclusion(String categoryExclusion)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Sets a slot-level ad category exclusion label."
                    },
                    {
                        "name": "addCustomTargeting(String key, List<String> values)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Adds a custom targeting parameter."
                    },
                    {
                        "name": "addCustomTargeting(String key, String value)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Adds a custom targeting parameter."
                    },
                    {
                        "name": "build()",
                        "return_type": "AdManagerAdRequest",
                        "description": "Constructs an AdManagerAdRequest with the specified attributes."
                    },
                    {
                        "name": "setPublisherProvidedId(String publisherProvidedId)",
                        "return_type": "AdManagerAdRequest.Builder",
                        "description": "Sets an identifier for use in frequency capping, audience segmentation and targeting, sequential ad rotation, and other audience-based ad delivery controls across devices."
                    }
                ]
            }
        ]
    },
    {
        "name": "nativead",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/nativead/package-summary",
        "classes": [
            {
                "name": "AdChoicesView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/AdChoicesView",
                "description": "View for displaying AdChoices content.",
                "methods": []
            },
            {
                "name": "MediaView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/MediaView",
                "description": "View for displaying native app install ad media content.",
                "methods": [
                    {
                        "name": "setImageScaleType(ImageView.ScaleType scaleType)",
                        "return_type": "void",
                        "description": "Sets the ImageView.ScaleType when image is rendered in MediaView."
                    },
                    {
                        "name": "setMediaContent(MediaContent mediaContent)",
                        "return_type": "void",
                        "description": "Sets the media content to be displayed in the media view."
                    }
                ]
            },
            {
                "name": "NativeAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd",
                "description": "A Google native ad.",
                "methods": [
                    {
                        "name": "cancelUnconfirmedClick()",
                        "return_type": "abstract void",
                        "description": "Cancels an unconfirmed click that was previously recorded for the ad."
                    },
                    {
                        "name": "destroy()",
                        "return_type": "abstract void",
                        "description": "Destroys the ad object."
                    },
                    {
                        "name": "enableCustomClickGesture()",
                        "return_type": "abstract void",
                        "description": "Enables publishers reporting clicks using custom gestures for this NativeAd."
                    },
                    {
                        "name": "getAdChoicesInfo()",
                        "return_type": "abstractNativeAd.AdChoicesInfo",
                        "description": "Returns the information for the AdChoices attribution."
                    },
                    {
                        "name": "getAdvertiser()",
                        "return_type": "abstractString",
                        "description": "Returns text that identifies the advertiser."
                    },
                    {
                        "name": "getBody()",
                        "return_type": "abstractString",
                        "description": "Returns body text."
                    },
                    {
                        "name": "getCallToAction()",
                        "return_type": "abstractString",
                        "description": "Returns the ad's call to action (such as \"Buy\" or \"Install\""
                    },
                    {
                        "name": "getExtras()",
                        "return_type": "abstractBundle",
                        "description": "Returns a bundle of extra assets associated with the native ad."
                    },
                    {
                        "name": "getHeadline()",
                        "return_type": "abstractString",
                        "description": "Returns the primary text headline."
                    },
                    {
                        "name": "getIcon()",
                        "return_type": "abstractNativeAd.Image",
                        "description": "Returns a small image identifying the advertiser."
                    },
                    {
                        "name": "getImages()",
                        "return_type": "abstractList<NativeAd.Image>",
                        "description": "Returns a list of large images."
                    },
                    {
                        "name": "getMediaContent()",
                        "return_type": "abstractMediaContent",
                        "description": "Returns the MediaContent associated with this ad."
                    },
                    {
                        "name": "getMuteThisAdReasons()",
                        "return_type": "abstractList<MuteThisAdReason>",
                        "description": "Returns Mute This Ad reasons available for this ad."
                    },
                    {
                        "name": "getPrice()",
                        "return_type": "abstractString",
                        "description": "For ads about apps, returns a string representing how much the app costs."
                    },
                    {
                        "name": "getResponseInfo()",
                        "return_type": "abstractResponseInfo",
                        "description": "Returns the ResponseInfo object for the loaded ad."
                    },
                    {
                        "name": "getStarRating()",
                        "return_type": "abstractDouble",
                        "description": "For ads about apps, returns a star rating from 0 to 5 representing how many stars the app has in the store offering it."
                    },
                    {
                        "name": "getStore()",
                        "return_type": "abstractString",
                        "description": "For ads about apps, returns the name of the store offering the app for download."
                    },
                    {
                        "name": "isCustomClickGestureEnabled()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether clicks can be reported using custom click gestures."
                    },
                    {
                        "name": "isCustomMuteThisAdEnabled()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if this ad can be muted programmatically."
                    },
                    {
                        "name": "muteThisAd(MuteThisAdReason muteThisAdReason)",
                        "return_type": "abstract void",
                        "description": "Mutes This Ad programmatically."
                    },
                    {
                        "name": "performClick(Bundle clickData)",
                        "return_type": "abstract void",
                        "description": "Should be called when the user has clicked on the ad."
                    },
                    {
                        "name": "recordCustomClickGesture()",
                        "return_type": "abstract void",
                        "description": "Reports clicks for this NativeAd using custom click gesture."
                    },
                    {
                        "name": "recordImpression(Bundle impressionData)",
                        "return_type": "abstract boolean",
                        "description": "Should be called when the ad is first displayed."
                    },
                    {
                        "name": "reportTouchEvent(Bundle touchEventData)",
                        "return_type": "abstract void",
                        "description": "Should be called when a touch event happens on the ad."
                    },
                    {
                        "name": "setMuteThisAdListener(MuteThisAdListener listener)",
                        "return_type": "abstract void",
                        "description": "Sets the MuteThisAdListener for the ad."
                    },
                    {
                        "name": "setOnPaidEventListener(OnPaidEventListener listener)",
                        "return_type": "abstract void",
                        "description": "Register a callback to be invoked when this ad is estimated to have earned money."
                    },
                    {
                        "name": "setUnconfirmedClickListener(NativeAd.UnconfirmedClickListener listener)",
                        "return_type": "abstract void",
                        "description": "Sets the UnconfirmedClickListener for the ad."
                    }
                ]
            },
            {
                "name": "NativeAd.AdChoicesInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.AdChoicesInfo",
                "description": "Attribution information.",
                "methods": [
                    {
                        "name": "getImages()",
                        "return_type": "abstractList<NativeAd.Image>",
                        "description": "Returns a list of images for the attribution."
                    },
                    {
                        "name": "getText()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the attribution text."
                    }
                ]
            },
            {
                "name": "NativeAd.Image",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.Image",
                "description": "A native ad image asset.",
                "methods": [
                    {
                        "name": "getDrawable()",
                        "return_type": "abstractDrawable",
                        "description": "Returns the drawable representing the image."
                    },
                    {
                        "name": "getScale()",
                        "return_type": "abstract double",
                        "description": "Returns the scale for this image, which denotes the ratio of pixels to dp."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "abstractUri",
                        "description": "Returns the URI for this image."
                    }
                ]
            },
            {
                "name": "NativeAdAssetNames",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAdAssetNames",
                "description": "Asset names used for NativeAd.",
                "methods": []
            },
            {
                "name": "NativeAdOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAdOptions",
                "description": "Used to configure native ad requests.",
                "methods": [
                    {
                        "name": "getAdChoicesPlacement()",
                        "return_type": "int",
                        "description": "Returns the AdChoices placement."
                    },
                    {
                        "name": "getMediaAspectRatio()",
                        "return_type": "int",
                        "description": "Returns the aspect ratio of the media to be returned."
                    },
                    {
                        "name": "getVideoOptions()",
                        "return_type": "VideoOptions",
                        "description": "Returns the VideoOptions object."
                    },
                    {
                        "name": "shouldRequestMultipleImages()",
                        "return_type": "boolean",
                        "description": "Returns true if multiple images are requested."
                    },
                    {
                        "name": "shouldReturnUrlsForImageAssets()",
                        "return_type": "boolean",
                        "description": "Returns true if urls will be returned for image assets instead of images themselves."
                    }
                ]
            },
            {
                "name": "NativeAdOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAdOptions.Builder",
                "description": "Builder class for NativeAdOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NativeAdOptions",
                        "description": "Constructs a NativeAdOptions object with the specified attributes."
                    },
                    {
                        "name": "setAdChoicesPlacement(int adChoicesPlacement)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the placement of AdChoices icon (if present"
                    },
                    {
                        "name": "setMediaAspectRatio(int aspectRatio)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setRequestCustomMuteThisAd(boolean requestCustomMuteThisAd)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Set this boolean to true to request a custom implementation for the Mute This Ad feature."
                    },
                    {
                        "name": "setRequestMultipleImages(boolean shouldRequestMultipleImages)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether multiple images should be requested or not."
                    },
                    {
                        "name": "setReturnUrlsForImageAssets(boolean shouldReturnUrls)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether URLs alone should be returned for image assets."
                    },
                    {
                        "name": "setVideoOptions(VideoOptions videoOptions)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the VideoOptions object."
                    }
                ]
            },
            {
                "name": "NativeAdView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAdView",
                "description": "Root view for NativeAd.",
                "methods": [
                    {
                        "name": "destroy()",
                        "return_type": "void",
                        "description": "Destroys the native ad view."
                    },
                    {
                        "name": "getAdChoicesView()",
                        "return_type": "AdChoicesView",
                        "description": "Returns the view associated with AdChoices content."
                    },
                    {
                        "name": "getAdvertiserView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the advertiser asset."
                    },
                    {
                        "name": "getBodyView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the body asset."
                    },
                    {
                        "name": "getCallToActionView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the call to action asset."
                    },
                    {
                        "name": "getHeadlineView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the headline asset."
                    },
                    {
                        "name": "getIconView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the icon asset."
                    },
                    {
                        "name": "getImageView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the image asset."
                    },
                    {
                        "name": "getMediaView()",
                        "return_type": "MediaView",
                        "description": "Returns the view associated with the media content."
                    },
                    {
                        "name": "getPriceView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the price asset."
                    },
                    {
                        "name": "getStarRatingView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the star rating asset."
                    },
                    {
                        "name": "getStoreView()",
                        "return_type": "View",
                        "description": "Returns the view associated with the store asset."
                    },
                    {
                        "name": "setAdChoicesView(AdChoicesView adChoicesView)",
                        "return_type": "void",
                        "description": "Sets an AdChoicesView for displaying AdChoices content."
                    },
                    {
                        "name": "setAdvertiserView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the advertiser asset."
                    },
                    {
                        "name": "setBodyView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the body asset."
                    },
                    {
                        "name": "setCallToActionView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the call to action asset."
                    },
                    {
                        "name": "setClickConfirmingView(View view)",
                        "return_type": "void",
                        "description": "Sets the View that users will use to confirm their clickthroughs."
                    },
                    {
                        "name": "setHeadlineView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the headline asset."
                    },
                    {
                        "name": "setIconView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the icon asset."
                    },
                    {
                        "name": "setImageView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the image asset."
                    },
                    {
                        "name": "setMediaView(MediaView view)",
                        "return_type": "void",
                        "description": "Sets a media view for media content."
                    },
                    {
                        "name": "setNativeAd(NativeAd ad)",
                        "return_type": "void",
                        "description": "Sets the NativeAd that this view is currently displaying."
                    },
                    {
                        "name": "setPriceView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the price asset."
                    },
                    {
                        "name": "setStarRatingView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the star rating asset."
                    },
                    {
                        "name": "setStoreView(View view)",
                        "return_type": "void",
                        "description": "Sets a view for the store asset."
                    }
                ]
            },
            {
                "name": "NativeAdViewHolder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAdViewHolder",
                "description": "View holder for native ads which is an alternative way to show native ads.",
                "methods": [
                    {
                        "name": "setClickConfirmingView(View view)",
                        "return_type": "void",
                        "description": "Sets the View that users will use to confirm their clickthroughs."
                    },
                    {
                        "name": "setNativeAd(NativeAd ad)",
                        "return_type": "void",
                        "description": "Sets the NativeAd that this view holder will show."
                    },
                    {
                        "name": "unregisterNativeAd()",
                        "return_type": "void",
                        "description": "Dissociate this view holder from the NativeAd it's currently showing."
                    }
                ]
            },
            {
                "name": "NativeAd.OnNativeAdLoadedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.OnNativeAdLoadedListener",
                "description": "Interface definition for a callback to be invoked when a native ad has successfully loaded.",
                "methods": [
                    {
                        "name": "onNativeAdLoaded(NativeAd ad)",
                        "return_type": "abstract void",
                        "description": "Called when a native ad has successfully loaded."
                    }
                ]
            },
            {
                "name": "NativeAd.UnconfirmedClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.UnconfirmedClickListener",
                "description": "A listener interface apps can use to receive unconfirmed click events when using the Confirmed Click feature.",
                "methods": [
                    {
                        "name": "onUnconfirmedClickCancelled()",
                        "return_type": "abstract void",
                        "description": "Called after onUnconfirmedClickReceived(String"
                    },
                    {
                        "name": "onUnconfirmedClickReceived(String assetId)",
                        "return_type": "abstract void",
                        "description": "Called when a native ad object receives an unconfirmed click."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd",
                "description": "An Ad Manager custom native ad format.",
                "methods": [
                    {
                        "name": "destroy()",
                        "return_type": "abstract void",
                        "description": "Destroys the ad object."
                    },
                    {
                        "name": "getAvailableAssetNames()",
                        "return_type": "abstractList<String>",
                        "description": "Returns a list of all available assets."
                    },
                    {
                        "name": "getCustomFormatId()",
                        "return_type": "abstractString",
                        "description": "Returns the custom native ad format's ID as defined in the Ad Manager UI."
                    },
                    {
                        "name": "getDisplayOpenMeasurement()",
                        "return_type": "abstractNativeCustomFormatAd.DisplayOpenMeasurement",
                        "description": "Returns the NativeCustomFormatAd.DisplayOpenMeasurement associated with this ad."
                    },
                    {
                        "name": "getImage(String assetName)",
                        "return_type": "abstractNativeAd.Image",
                        "description": "Returns an image asset."
                    },
                    {
                        "name": "getText(String assetName)",
                        "return_type": "abstractCharSequence",
                        "description": "Returns a string asset of numbers, URLs, or other types other than an image asset."
                    },
                    {
                        "name": "getVideoController()",
                        "return_type": "abstractVideoController",
                        "description": "Returns the VideoController associated with this ad."
                    },
                    {
                        "name": "getVideoMediaView()",
                        "return_type": "abstractMediaView",
                        "description": "Returns a MediaView containing this ad's video content or null if there is no video content."
                    },
                    {
                        "name": "performClick(String assetName)",
                        "return_type": "abstract void",
                        "description": "Called when the user has clicked on the ad."
                    },
                    {
                        "name": "recordImpression()",
                        "return_type": "abstract void",
                        "description": "Pings impression URLs and records the impression."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd.DisplayOpenMeasurement",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd.DisplayOpenMeasurement",
                "description": "An interface for open measurement in display ads.",
                "methods": [
                    {
                        "name": "setView(View view)",
                        "return_type": "abstract void",
                        "description": "Sets the view to track for viewability measurements."
                    },
                    {
                        "name": "start()",
                        "return_type": "abstract boolean",
                        "description": "Starts OMID viewability measurements for display ads."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd.OnCustomClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd.OnCustomClickListener",
                "description": "Interface definition for a callback to be invoked when a user clicks on a custom native ad format.",
                "methods": [
                    {
                        "name": "onCustomClick(NativeCustomFormatAd ad, String assetName)",
                        "return_type": "abstract void",
                        "description": "Called when a custom native ad format is clicked."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd.OnCustomFormatAdLoadedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd.OnCustomFormatAdLoadedListener",
                "description": "Interface definition for a callback to be invoked when a custom native ad format has successfully loaded.",
                "methods": [
                    {
                        "name": "onCustomFormatAdLoaded(NativeCustomFormatAd ad)",
                        "return_type": "abstract void",
                        "description": "Called when a custom native ad format has successfully loaded."
                    }
                ]
            },
            {
                "name": "NativeAd.AdChoicesInfo",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.AdChoicesInfo",
                "description": "Attribution information.",
                "methods": [
                    {
                        "name": "getImages()",
                        "return_type": "abstractList<NativeAd.Image>",
                        "description": "Returns a list of images for the attribution."
                    },
                    {
                        "name": "getText()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the attribution text."
                    }
                ]
            },
            {
                "name": "NativeAd.Image",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.Image",
                "description": "A native ad image asset.",
                "methods": [
                    {
                        "name": "getDrawable()",
                        "return_type": "abstractDrawable",
                        "description": "Returns the drawable representing the image."
                    },
                    {
                        "name": "getScale()",
                        "return_type": "abstract double",
                        "description": "Returns the scale for this image, which denotes the ratio of pixels to dp."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "abstractUri",
                        "description": "Returns the URI for this image."
                    }
                ]
            },
            {
                "name": "NativeAd.OnNativeAdLoadedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.OnNativeAdLoadedListener",
                "description": "Interface definition for a callback to be invoked when a native ad has successfully loaded.",
                "methods": [
                    {
                        "name": "onNativeAdLoaded(NativeAd ad)",
                        "return_type": "abstract void",
                        "description": "Called when a native ad has successfully loaded."
                    }
                ]
            },
            {
                "name": "NativeAd.UnconfirmedClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAd.UnconfirmedClickListener",
                "description": "A listener interface apps can use to receive unconfirmed click events when using the Confirmed Click feature.",
                "methods": [
                    {
                        "name": "onUnconfirmedClickCancelled()",
                        "return_type": "abstract void",
                        "description": "Called after onUnconfirmedClickReceived(String"
                    },
                    {
                        "name": "onUnconfirmedClickReceived(String assetId)",
                        "return_type": "abstract void",
                        "description": "Called when a native ad object receives an unconfirmed click."
                    }
                ]
            },
            {
                "name": "NativeAdOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeAdOptions.Builder",
                "description": "Builder class for NativeAdOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NativeAdOptions",
                        "description": "Constructs a NativeAdOptions object with the specified attributes."
                    },
                    {
                        "name": "setAdChoicesPlacement(int adChoicesPlacement)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the placement of AdChoices icon (if present"
                    },
                    {
                        "name": "setMediaAspectRatio(int aspectRatio)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setRequestCustomMuteThisAd(boolean requestCustomMuteThisAd)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Set this boolean to true to request a custom implementation for the Mute This Ad feature."
                    },
                    {
                        "name": "setRequestMultipleImages(boolean shouldRequestMultipleImages)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether multiple images should be requested or not."
                    },
                    {
                        "name": "setReturnUrlsForImageAssets(boolean shouldReturnUrls)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether URLs alone should be returned for image assets."
                    },
                    {
                        "name": "setVideoOptions(VideoOptions videoOptions)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the VideoOptions object."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd.DisplayOpenMeasurement",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd.DisplayOpenMeasurement",
                "description": "An interface for open measurement in display ads.",
                "methods": [
                    {
                        "name": "setView(View view)",
                        "return_type": "abstract void",
                        "description": "Sets the view to track for viewability measurements."
                    },
                    {
                        "name": "start()",
                        "return_type": "abstract boolean",
                        "description": "Starts OMID viewability measurements for display ads."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd.OnCustomClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd.OnCustomClickListener",
                "description": "Interface definition for a callback to be invoked when a user clicks on a custom native ad format.",
                "methods": [
                    {
                        "name": "onCustomClick(NativeCustomFormatAd ad, String assetName)",
                        "return_type": "abstract void",
                        "description": "Called when a custom native ad format is clicked."
                    }
                ]
            },
            {
                "name": "NativeCustomFormatAd.OnCustomFormatAdLoadedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/ads/nativead/NativeCustomFormatAd.OnCustomFormatAdLoadedListener",
                "description": "Interface definition for a callback to be invoked when a custom native ad format has successfully loaded.",
                "methods": [
                    {
                        "name": "onCustomFormatAdLoaded(NativeCustomFormatAd ad)",
                        "return_type": "abstract void",
                        "description": "Called when a custom native ad format has successfully loaded."
                    }
                ]
            }
        ]
    },
    {
        "name": "api",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/api/package-summary",
        "classes": [
            {
                "name": "Auth",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/Auth",
                "description": "Entry point for Google Auth APIs through GoogleApiClient.",
                "methods": []
            },
            {
                "name": "Auth.AuthCredentialsOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/Auth.AuthCredentialsOptions",
                "description": "This class is deprecated. please use CredentialsOptions instead.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Auth.AuthCredentialsOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/Auth.AuthCredentialsOptions.Builder",
                "description": "This class is deprecated. please use CredentialsOptions.Builder instead.",
                "methods": [
                    {
                        "name": "forceEnableSaveDialog()",
                        "return_type": "Auth.AuthCredentialsOptions.Builder",
                        "description": "Specifies that the save confirmation dialog should always be shown when required."
                    }
                ]
            },
            {
                "name": "Auth.AuthCredentialsOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/Auth.AuthCredentialsOptions",
                "description": "This class is deprecated. please use CredentialsOptions instead.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Auth.AuthCredentialsOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/Auth.AuthCredentialsOptions.Builder",
                "description": "This class is deprecated. please use CredentialsOptions.Builder instead.",
                "methods": [
                    {
                        "name": "forceEnableSaveDialog()",
                        "return_type": "Auth.AuthCredentialsOptions.Builder",
                        "description": "Specifies that the save confirmation dialog should always be shown when required."
                    }
                ]
            },
            {
                "name": "Auth.AuthCredentialsOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/Auth.AuthCredentialsOptions.Builder",
                "description": "This class is deprecated. please use CredentialsOptions.Builder instead.",
                "methods": [
                    {
                        "name": "forceEnableSaveDialog()",
                        "return_type": "Auth.AuthCredentialsOptions.Builder",
                        "description": "Specifies that the save confirmation dialog should always be shown when required."
                    }
                ]
            }
        ]
    },
    {
        "name": "safetynet",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/safetynet/package-summary",
        "classes": [
            {
                "name": "HarmfulAppsData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/HarmfulAppsData",
                "description": "APK information pertaining to one potentially harmful app.",
                "methods": []
            },
            {
                "name": "SafeBrowsingThreat",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafeBrowsingThreat",
                "description": "A threat of interest used as input to lookupUri(String, String, int...) and returned as output if these threats are detected for the input URI to lookupUri(String, String, int...).",
                "methods": [
                    {
                        "name": "getThreatType()",
                        "return_type": "int",
                        "description": "Gets the threat type for this threat."
                    }
                ]
            },
            {
                "name": "SafetyNet",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNet",
                "description": "The SafetyNet API provides access to Google services that help you assess the health and safety of an Android device.",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticSafetyNetClient",
                        "description": "Returns a SafetyNetClient that is used to access all APIs that are called when the app has a foreground Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticSafetyNetClient",
                        "description": "Returns a SafetyNetClient that is used to access all APIs that are called without access to a foreground Activity."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.AttestationResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.AttestationResponse",
                "description": "Response from attest(byte[], String) that contains a Compatibility Test Suite attestation result.",
                "methods": [
                    {
                        "name": "getJwsResult()",
                        "return_type": "String",
                        "description": "Gets the JSON Web Signature attestation result."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.HarmfulAppsResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.HarmfulAppsResponse",
                "description": "A Response returned from listHarmfulApps().",
                "methods": [
                    {
                        "name": "getHarmfulAppsList()",
                        "return_type": "List<HarmfulAppsData>",
                        "description": "Returns a list of HarmfulAppsData that contains information on potentially harmful apps installed."
                    },
                    {
                        "name": "getHoursSinceLastScanWithHarmfulApp()",
                        "return_type": "int",
                        "description": "Gets the number of hours since the last scan on other profiles that detected a harmful app."
                    },
                    {
                        "name": "getLastScanTimeMs()",
                        "return_type": "long",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SafetyNetApi.RecaptchaTokenResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.RecaptchaTokenResponse",
                "description": "Response from verifyWithRecaptcha(String).",
                "methods": [
                    {
                        "name": "getTokenResult()",
                        "return_type": "String",
                        "description": "Gets the reCAPTCHA user response token which must be validated by calling the siteverify method described in Verify the user's response."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.SafeBrowsingResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.SafeBrowsingResponse",
                "description": "Response for lookupUri(String, String, int...).",
                "methods": [
                    {
                        "name": "getDetectedThreats()",
                        "return_type": "List<SafeBrowsingThreat>",
                        "description": "Returns threats detected from the input URI."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.VerifyAppsUserResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.VerifyAppsUserResponse",
                "description": "A Response to get user decisions for the Verify Apps API.",
                "methods": [
                    {
                        "name": "isVerifyAppsEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether the user has enabled Verify Apps when prompted."
                    }
                ]
            },
            {
                "name": "SafetyNetClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetClient",
                "description": "The main entry point for SafetyNet.",
                "methods": [
                    {
                        "name": "attest(byte[] nonce, String apiKey)",
                        "return_type": "Task<SafetyNetApi.AttestationResponse>",
                        "description": "Provides attestation results for the device."
                    },
                    {
                        "name": "enableVerifyApps()",
                        "return_type": "Task<SafetyNetApi.VerifyAppsUserResponse>",
                        "description": "Prompts the user to enable Verify Apps if it is currently turned off."
                    },
                    {
                        "name": "initSafeBrowsing()",
                        "return_type": "Task<Void>",
                        "description": "Initializes the Safe Browsing API."
                    },
                    {
                        "name": "isVerifyAppsEnabled()",
                        "return_type": "Task<SafetyNetApi.VerifyAppsUserResponse>",
                        "description": "Determines whether Verify Apps is enabled."
                    },
                    {
                        "name": "listHarmfulApps()",
                        "return_type": "Task<SafetyNetApi.HarmfulAppsResponse>",
                        "description": "Gets a list of known, potentially harmful apps installed."
                    },
                    {
                        "name": "lookupUri(String uri, String apiKey, int... threatTypes)",
                        "return_type": "Task<SafetyNetApi.SafeBrowsingResponse>",
                        "description": "Checks whether a URI is known to have specific threats."
                    },
                    {
                        "name": "shutdownSafeBrowsing()",
                        "return_type": "Task<Void>",
                        "description": "Safely shuts down the Safe Browsing API, releasing a resources from the system."
                    },
                    {
                        "name": "verifyWithRecaptcha(String siteKey)",
                        "return_type": "Task<SafetyNetApi.RecaptchaTokenResponse>",
                        "description": "Provides user attestation with reCAPTCHA."
                    }
                ]
            },
            {
                "name": "SafetyNetStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetStatusCodes",
                "description": "Status codes for the SafetyNet API.",
                "methods": []
            },
            {
                "name": "VerifyAppsConstants",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/safetynet/VerifyAppsConstants",
                "description": "Constants pertaining to the Verify Apps SafetyNet API.",
                "methods": []
            },
            {
                "name": "SafetyNetApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi",
                "description": "The main entry point for interacting with SafetyNet.",
                "methods": [
                    {
                        "name": "verifyWithRecaptcha(GoogleApiClient client, String siteKey)",
                        "return_type": "abstractPendingResult<SafetyNetApi.RecaptchaTokenResult>",
                        "description": "This method was deprecated. use verifyWithRecaptcha(String"
                    }
                ]
            },
            {
                "name": "SafetyNetApi.RecaptchaTokenResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.RecaptchaTokenResult",
                "description": "This interface was deprecated. use SafetyNetApi.RecaptchaTokenResponse returned from verifyWithRecaptcha(String).",
                "methods": [
                    {
                        "name": "getTokenResult()",
                        "return_type": "abstractString",
                        "description": "Gets the reCAPTCHA user response token, which must be validated by calling the siteverify method described in Verify the user's response."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.AttestationResponse",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.AttestationResponse",
                "description": "Response from attest(byte[], String) that contains a Compatibility Test Suite attestation result.",
                "methods": [
                    {
                        "name": "getJwsResult()",
                        "return_type": "String",
                        "description": "Gets the JSON Web Signature attestation result."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.HarmfulAppsResponse",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.HarmfulAppsResponse",
                "description": "A Response returned from listHarmfulApps().",
                "methods": [
                    {
                        "name": "getHarmfulAppsList()",
                        "return_type": "List<HarmfulAppsData>",
                        "description": "Returns a list of HarmfulAppsData that contains information on potentially harmful apps installed."
                    },
                    {
                        "name": "getHoursSinceLastScanWithHarmfulApp()",
                        "return_type": "int",
                        "description": "Gets the number of hours since the last scan on other profiles that detected a harmful app."
                    },
                    {
                        "name": "getLastScanTimeMs()",
                        "return_type": "long",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SafetyNetApi.RecaptchaTokenResponse",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.RecaptchaTokenResponse",
                "description": "Response from verifyWithRecaptcha(String).",
                "methods": [
                    {
                        "name": "getTokenResult()",
                        "return_type": "String",
                        "description": "Gets the reCAPTCHA user response token which must be validated by calling the siteverify method described in Verify the user's response."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.RecaptchaTokenResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.RecaptchaTokenResult",
                "description": "This interface was deprecated. use SafetyNetApi.RecaptchaTokenResponse returned from verifyWithRecaptcha(String).",
                "methods": [
                    {
                        "name": "getTokenResult()",
                        "return_type": "abstractString",
                        "description": "Gets the reCAPTCHA user response token, which must be validated by calling the siteverify method described in Verify the user's response."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.SafeBrowsingResponse",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.SafeBrowsingResponse",
                "description": "Response for lookupUri(String, String, int...).",
                "methods": [
                    {
                        "name": "getDetectedThreats()",
                        "return_type": "List<SafeBrowsingThreat>",
                        "description": "Returns threats detected from the input URI."
                    }
                ]
            },
            {
                "name": "SafetyNetApi.VerifyAppsUserResponse",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/safetynet/SafetyNetApi.VerifyAppsUserResponse",
                "description": "A Response to get user decisions for the Verify Apps API.",
                "methods": [
                    {
                        "name": "isVerifyAppsEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether the user has enabled Verify Apps when prompted."
                    }
                ]
            }
        ]
    },
    {
        "name": "messagebased",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/u2f/api/messagebased/package-summary",
        "classes": []
    },
    {
        "name": "admob",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/mediation/admob/package-summary",
        "classes": [
            {
                "name": "AdMobExtras",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/admob/AdMobExtras",
                "description": "This class is deprecated. Instead of using this class in conjunction with AdRequest.Builder.addNetworkExtras(NetworkExtras), pass a Bundle to AdRequest.Builder.addNetworkExtrasBundle(Class , Bundle) along with com.google.ads.mediation.admob.AdMobAdapter.class.",
                "methods": [
                    {
                        "name": "getExtras()",
                        "return_type": "Bundle",
                        "description": "Returns the extra ad request parameters."
                    }
                ]
            }
        ]
    },
    {
        "name": "media",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/framework/media/package-summary",
        "classes": [
            {
                "name": "CastMediaOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/CastMediaOptions",
                "description": "Configuration parameters for starting a Cast media session.",
                "methods": [
                    {
                        "name": "getExpandedControllerActivityClassName()",
                        "return_type": "String",
                        "description": "Returns the name of the expanded controller Activity that displays a full-screen media controller."
                    },
                    {
                        "name": "getImagePicker()",
                        "return_type": "ImagePicker",
                        "description": "Returns the ImagePicker to choose an appropriate image."
                    },
                    {
                        "name": "getMediaIntentReceiverClassName()",
                        "return_type": "String",
                        "description": "Returns the name of the BroadcastReceiver that handles media intents from notification and lock screen."
                    },
                    {
                        "name": "getMediaSessionEnabled()",
                        "return_type": "boolean",
                        "description": "Returns true if the Cast SDK automatically creates and manages a MediaSession for cast sessions."
                    },
                    {
                        "name": "getNotificationOptions()",
                        "return_type": "NotificationOptions",
                        "description": "Returns the options to configure notification."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CastMediaOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/CastMediaOptions.Builder",
                "description": "A builder to create an instance of CastMediaOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastMediaOptions",
                        "description": "Builds and returns the CastMediaOptions object."
                    },
                    {
                        "name": "setExpandedControllerActivityClassName(String className)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the class name of the expanded controller Activity."
                    },
                    {
                        "name": "setImagePicker(ImagePicker imagePicker)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the ImagePicker."
                    },
                    {
                        "name": "setMediaIntentReceiverClassName(String className)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the class name of the MediaIntentReceiver."
                    },
                    {
                        "name": "setMediaSessionEnabled(boolean enabled)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Enables or disables the MediaSession created and managed by the Cast SDK."
                    },
                    {
                        "name": "setNotificationOptions(NotificationOptions notificationOptions)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the NotificationOptions used to configure the notification with NotificationCompat.MediaStyle."
                    }
                ]
            },
            {
                "name": "ImageHints",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/ImageHints",
                "description": "An object that provides hints to an ImagePicker about the type and size of an image to be selected for display in the UI.",
                "methods": [
                    {
                        "name": "getHeightInPixels()",
                        "return_type": "int",
                        "description": "Returns the expected height of the image, in number of pixels."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the type of the image, defined in ImagePicker."
                    },
                    {
                        "name": "getWidthInPixels()",
                        "return_type": "int",
                        "description": "Returns the expected width of the image, in number of pixels."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ImagePicker",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/ImagePicker",
                "description": "An image picker to pick an appropriate image from the list of images in a MediaMetadata based on the use of the image, for example, notification thumbnail or full screen background.",
                "methods": [
                    {
                        "name": "onPickImage(MediaMetadata mediaMetadata, int type)",
                        "return_type": "WebImage",
                        "description": "This method is deprecated. Prefer to override onPickImage(MediaMetadata, ImageHints"
                    },
                    {
                        "name": "onPickImage(MediaMetadata mediaMetadata, ImageHints hints)",
                        "return_type": "WebImage",
                        "description": "Returns the WebImage to be used based on the given ImageHints."
                    }
                ]
            },
            {
                "name": "MediaIntentReceiver",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaIntentReceiver",
                "description": "A BroadcastReceiver for receiving media button actions from the status bar notification, the lock screen, and the cast dialog.",
                "methods": [
                    {
                        "name": "onReceive(Context context, Intent intent)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaNotificationService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaNotificationService",
                "description": "A service to provide status bar notifications when casting.",
                "methods": [
                    {
                        "name": "isNotificationOptionsValid(CastOptions options)",
                        "return_type": "static boolean",
                        "description": "Returns true if NotificationOptions in the CastOptions provides valid actions."
                    },
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStartCommand(Intent intent, int flags, int startId)",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaQueue",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaQueue",
                "description": "A data model representation of a media queue of arbitrary length.",
                "methods": [
                    {
                        "name": "fetchMoreItemsRelativeToIndex(int index, int nextCount, int prevCount)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Requests a range of queue item IDs before or after the given index in the queue."
                    },
                    {
                        "name": "getItemAtIndex(int index)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem at the given index."
                    },
                    {
                        "name": "getItemAtIndex(int index, boolean fetchIfNeeded)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem at the given index."
                    },
                    {
                        "name": "getItemCount()",
                        "return_type": "int",
                        "description": "Returns the number of items in the queue."
                    },
                    {
                        "name": "getItemIds()",
                        "return_type": "int[]",
                        "description": "Returns the list of item IDs in the queue."
                    },
                    {
                        "name": "indexOfItemWithId(int itemId)",
                        "return_type": "int",
                        "description": "Looks up the index of a queue item in the queue."
                    },
                    {
                        "name": "itemIdAtIndex(int index)",
                        "return_type": "int",
                        "description": "Returns the item ID of the item at the given index in the queue."
                    },
                    {
                        "name": "registerCallback(MediaQueue.Callback callback)",
                        "return_type": "void",
                        "description": "Registers a MediaQueue.Callback to receive media queue updates."
                    },
                    {
                        "name": "setCacheCapacity(int capacity)",
                        "return_type": "void",
                        "description": "Sets the capacity of the cache of the queue."
                    },
                    {
                        "name": "unregisterCallback(MediaQueue.Callback callback)",
                        "return_type": "void",
                        "description": "Unregisters a MediaQueue.Callback to stop receiving media queue updates."
                    }
                ]
            },
            {
                "name": "MediaQueue.Callback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaQueue.Callback",
                "description": "Callback interface for receiving updates from MediaQueue.",
                "methods": [
                    {
                        "name": "itemsInsertedInRange(int insertIndex, int insertCount)",
                        "return_type": "void",
                        "description": "Called when a contiguous range of queue items have been inserted into the queue."
                    },
                    {
                        "name": "itemsReloaded()",
                        "return_type": "void",
                        "description": "Called when the queue has been entirely reloaded."
                    },
                    {
                        "name": "itemsRemovedAtIndexes(int[] indexes)",
                        "return_type": "void",
                        "description": "Called when one or more queue items have been removed from the queue."
                    },
                    {
                        "name": "itemsReorderedAtIndexes(List<Integer> indexes, int insertBeforeIndex)",
                        "return_type": "void",
                        "description": "Called when one or more queue items have been reordered in the queue."
                    },
                    {
                        "name": "itemsUpdatedAtIndexes(int[] indexes)",
                        "return_type": "void",
                        "description": "Called when one or more queue items have been updated in the queue."
                    },
                    {
                        "name": "mediaQueueChanged()",
                        "return_type": "void",
                        "description": "Called when one or more changes have been made to the queue."
                    },
                    {
                        "name": "mediaQueueWillChange()",
                        "return_type": "void",
                        "description": "Called when one or more changes are about to be made to the queue."
                    }
                ]
            },
            {
                "name": "MediaQueueArrayAdapter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaQueueArrayAdapter",
                "description": "A ArrayAdapter for media queue using MediaQueue as backend.",
                "methods": [
                    {
                        "name": "areAllItemsEnabled()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "dispose()",
                        "return_type": "void",
                        "description": "Disposes the adapter so it no longer receives update from MediaQueue."
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getItem(int position)",
                        "return_type": "MediaQueueItem",
                        "description": ""
                    },
                    {
                        "name": "getItemId(int position)",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getMediaQueue()",
                        "return_type": "MediaQueue",
                        "description": "Returns the MediaQueue backing this adapter."
                    },
                    {
                        "name": "hasStableIds()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isEmpty()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isEnabled(int position)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaQueueRecyclerViewAdapter<VH extendsRecyclerView.ViewHolder>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaQueueRecyclerViewAdapter",
                "description": "A RecyclerView.Adapter for media queue using MediaQueue as backend.",
                "methods": [
                    {
                        "name": "dispose()",
                        "return_type": "void",
                        "description": "Disposes the adapter so it no longer receives update from MediaQueue."
                    },
                    {
                        "name": "getItem(int position)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem at a given position in the queue."
                    },
                    {
                        "name": "getItemCount()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getItemId(int position)",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getMediaQueue()",
                        "return_type": "MediaQueue",
                        "description": "Returns the MediaQueue backing this adapter."
                    }
                ]
            },
            {
                "name": "MediaUtils",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaUtils",
                "description": "Utils for remote media control.",
                "methods": [
                    {
                        "name": "getImageUri(MediaInfo info, int index)",
                        "return_type": "staticUri",
                        "description": "Returns an Uri of an image for the MediaInfo at the given index."
                    },
                    {
                        "name": "getImageUrl(MediaInfo info, int index)",
                        "return_type": "staticString",
                        "description": "Returns the URL of an image for the MediaInfo at the given index."
                    },
                    {
                        "name": "getTrackLanguage(MediaTrack track)",
                        "return_type": "staticLocale",
                        "description": "This method is deprecated. use MediaTrack.getLanguageLocale("
                    }
                ]
            },
            {
                "name": "NotificationAction",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationAction",
                "description": "An object representing an action in the media notification.",
                "methods": [
                    {
                        "name": "getAction()",
                        "return_type": "String",
                        "description": "Returns the intent action."
                    },
                    {
                        "name": "getContentDescription()",
                        "return_type": "String",
                        "description": "Returns the content description that is used for accessibility."
                    },
                    {
                        "name": "getIconResId()",
                        "return_type": "int",
                        "description": "Returns the icon's resource ID."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "NotificationAction.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationAction.Builder",
                "description": "A builder for NotificationAction.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NotificationAction",
                        "description": "Builds a NotificationAction."
                    },
                    {
                        "name": "setAction(String action)",
                        "return_type": "NotificationAction.Builder",
                        "description": "Sets the intent action."
                    },
                    {
                        "name": "setContentDescription(String contentDescription)",
                        "return_type": "NotificationAction.Builder",
                        "description": "Sets the content description that is used for accessibility."
                    },
                    {
                        "name": "setIconResId(int iconResId)",
                        "return_type": "NotificationAction.Builder",
                        "description": "Sets the icon's resource ID."
                    }
                ]
            },
            {
                "name": "NotificationActionsProvider",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationActionsProvider",
                "description": "If developers want to add dynamic custom actions in the media notification, they should extend this class to provide necessary data to build the media notification.",
                "methods": [
                    {
                        "name": "getApplicationContext()",
                        "return_type": "Context",
                        "description": "Returns the Context in which the app is running."
                    },
                    {
                        "name": "getCompactViewActionIndices()",
                        "return_type": "abstract int[]",
                        "description": "Developers should override this method to returns the indices of actions that will appear in the compact view of the media notification."
                    },
                    {
                        "name": "getNotificationActions()",
                        "return_type": "abstractList<NotificationAction>",
                        "description": "Developers should override this method to return the list of NotificationAction that will appear in expanded view of the media notification."
                    }
                ]
            },
            {
                "name": "NotificationOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationOptions",
                "description": "Configuration parameters for building the media notification.",
                "methods": [
                    {
                        "name": "getActions()",
                        "return_type": "List<String>",
                        "description": "Returns the list of actions to show in the notification."
                    },
                    {
                        "name": "getCastingToDeviceStringResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the \"Casting to\" format string, used as the subtitle in the notification."
                    },
                    {
                        "name": "getCompatActionIndices()",
                        "return_type": "int[]",
                        "description": "Returns a copy of the indices of the actions which should be shown in the compact form of the notification."
                    },
                    {
                        "name": "getDisconnectDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"disconnect\" button."
                    },
                    {
                        "name": "getForward10DrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"skip forward 10 seconds\" button."
                    },
                    {
                        "name": "getForward30DrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"skip forward 30 seconds\" button."
                    },
                    {
                        "name": "getForwardDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"skip forward\" button."
                    },
                    {
                        "name": "getPauseDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"pause\" button."
                    },
                    {
                        "name": "getPlayDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"play\" button."
                    },
                    {
                        "name": "getRewind10DrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"rewind 10 seconds\" button."
                    },
                    {
                        "name": "getRewind30DrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"rewind 30 seconds\" button."
                    },
                    {
                        "name": "getRewindDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"rewind\" button."
                    },
                    {
                        "name": "getSkipNextDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"skip next\" button."
                    },
                    {
                        "name": "getSkipPrevDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"skip previous\" button."
                    },
                    {
                        "name": "getSkipStepMs()",
                        "return_type": "long",
                        "description": "Returns the amount to jump if MediaIntentReceiver.ACTION_FORWARD or MediaIntentReceiver.ACTION_REWIND are included in the notification actions."
                    },
                    {
                        "name": "getSmallIconDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the small icon that will be used to build the notification."
                    },
                    {
                        "name": "getStopLiveStreamDrawableResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the icon that indicates a \"stop playing live stream\" button."
                    },
                    {
                        "name": "getStopLiveStreamTitleResId()",
                        "return_type": "int",
                        "description": "Returns the resource ID of the label for the \"Stop live stream\" button."
                    },
                    {
                        "name": "getTargetActivityClassName()",
                        "return_type": "String",
                        "description": "Returns the name of the Activity that will be launched when user taps on the content area of the notification."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "NotificationOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationOptions.Builder",
                "description": "A builder for creating an instance of NotificationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NotificationOptions",
                        "description": "Builds and returns the NotificationOptions object."
                    },
                    {
                        "name": "setActions(List<String> actions, int[] compatActionIndices)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets at most 5 actions to show in the notification, and the indices to the actions to show in the compact view."
                    },
                    {
                        "name": "setDisconnectDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"disconnect\"."
                    },
                    {
                        "name": "setForward10DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip forward 10 seconds\"."
                    },
                    {
                        "name": "setForward30DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip forward 30 seconds\"."
                    },
                    {
                        "name": "setForwardDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip forward\"."
                    },
                    {
                        "name": "setNotificationActionsProvider(NotificationActionsProvider notificationActionsProvider)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets a NotificationActionsProvider, which can be subclassed to provide dynamic custom actions."
                    },
                    {
                        "name": "setPauseDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"pause\"."
                    },
                    {
                        "name": "setPlayDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"play\"."
                    },
                    {
                        "name": "setRewind10DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"rewind 10 seconds\"."
                    },
                    {
                        "name": "setRewind30DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"rewind 30 seconds\"."
                    },
                    {
                        "name": "setRewindDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"rewind\"."
                    },
                    {
                        "name": "setSkipNextDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip next\"."
                    },
                    {
                        "name": "setSkipPrevDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip previous\"."
                    },
                    {
                        "name": "setSkipStepMs(long notificationSkipStepMs)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the amount to jump if MediaIntentReceiver.ACTION_FORWARD or MediaIntentReceiver.ACTION_REWIND are included for the notification actions."
                    },
                    {
                        "name": "setSmallIconDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID for the notification icon drawable."
                    },
                    {
                        "name": "setStopLiveStreamDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"stop playing live stream\"."
                    },
                    {
                        "name": "setTargetActivityClassName(String className)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the name of the Activity that will be launched when user taps on the content area of the notification."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient",
                "description": "Class for controlling a media player application running on a receiver.",
                "methods": [
                    {
                        "name": "addListener(RemoteMediaClient.Listener listener)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use registerCallback(Callback"
                    },
                    {
                        "name": "addProgressListener(RemoteMediaClient.ProgressListener listener, long periodMs)",
                        "return_type": "boolean",
                        "description": "Adds the RemoteMediaClient.ProgressListener to the progress updates."
                    },
                    {
                        "name": "getApproximateAdBreakClipPositionMs()",
                        "return_type": "long",
                        "description": "Returns the approximate ad break clip position as calculated from the last received stream information and the elapsed wall-time since that update."
                    },
                    {
                        "name": "getApproximateLiveSeekableRangeEnd()",
                        "return_type": "long",
                        "description": "Returns the approximate end position (in milliseconds"
                    },
                    {
                        "name": "getApproximateLiveSeekableRangeStart()",
                        "return_type": "long",
                        "description": "Returns the approximate start position (in milliseconds"
                    },
                    {
                        "name": "getApproximateStreamPosition()",
                        "return_type": "long",
                        "description": "Returns the approximate stream position as calculated from the last received stream information and the elapsed wall-time since that update."
                    },
                    {
                        "name": "getCurrentItem()",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the current item in the queue, or null if the queue is empty."
                    },
                    {
                        "name": "getIdleReason()",
                        "return_type": "int",
                        "description": "Returns the current idle reason."
                    },
                    {
                        "name": "getLoadingItem()",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the currently loading item in the queue, or null if no item is being loaded."
                    },
                    {
                        "name": "getMediaInfo()",
                        "return_type": "MediaInfo",
                        "description": "Returns the current media information, or null if there isn't a media session."
                    },
                    {
                        "name": "getMediaQueue()",
                        "return_type": "MediaQueue",
                        "description": "Returns the associated MediaQueue."
                    },
                    {
                        "name": "getMediaStatus()",
                        "return_type": "MediaStatus",
                        "description": "Returns the current media status, or null if there isn't a media session."
                    },
                    {
                        "name": "getNamespace()",
                        "return_type": "String",
                        "description": "Returns the media control namespace."
                    },
                    {
                        "name": "getPlayerState()",
                        "return_type": "int",
                        "description": "Returns the current player state."
                    },
                    {
                        "name": "getPreloadedItem()",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the currently preloaded item in the queue, or null if no item has been preloaded."
                    },
                    {
                        "name": "getStreamDuration()",
                        "return_type": "long",
                        "description": "Convenience method for getting the stream duration."
                    },
                    {
                        "name": "hasMediaSession()",
                        "return_type": "boolean",
                        "description": "Returns true if there is a media session, that is, media being loaded on the remote receiver."
                    },
                    {
                        "name": "isBuffering()",
                        "return_type": "boolean",
                        "description": "Returns true if the current media is buffering."
                    },
                    {
                        "name": "isLiveStream()",
                        "return_type": "boolean",
                        "description": "Returns true if the currently loaded media is a live stream, otherwise returns false."
                    },
                    {
                        "name": "isLoadingNextItem()",
                        "return_type": "boolean",
                        "description": "Returns true if the next item is being loaded."
                    },
                    {
                        "name": "isPaused()",
                        "return_type": "boolean",
                        "description": "Returns true if the current media is paused."
                    },
                    {
                        "name": "isPlaying()",
                        "return_type": "boolean",
                        "description": "Returns true if the current media is playing."
                    },
                    {
                        "name": "isPlayingAd()",
                        "return_type": "boolean",
                        "description": "Returns true if an ad is playing."
                    },
                    {
                        "name": "load(MediaInfo mediaInfo, boolean autoplay, long playPosition)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use load(MediaLoadRequestData"
                    },
                    {
                        "name": "load(MediaInfo mediaInfo, boolean autoplay, long playPosition, long[] activeTrackIds, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use load(MediaLoadRequestData"
                    },
                    {
                        "name": "load(MediaInfo mediaInfo)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use load(MediaLoadRequestData"
                    },
                    {
                        "name": "load(MediaInfo mediaInfo, MediaLoadOptions mediaLoadOptions)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Loads a new media item with specified options."
                    },
                    {
                        "name": "load(MediaInfo mediaInfo, boolean autoplay, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use load(MediaLoadRequestData"
                    },
                    {
                        "name": "load(MediaLoadRequestData loadRequestData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Loads a new media item and/or a queue with specified options."
                    },
                    {
                        "name": "load(MediaInfo mediaInfo, boolean autoplay)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use load(MediaLoadRequestData"
                    },
                    {
                        "name": "onMessageReceived(CastDevice castDevice, String namespace, String message)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "pause()",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Pauses playback of the current media item."
                    },
                    {
                        "name": "pause(JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Pauses playback of the current media item."
                    },
                    {
                        "name": "play()",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Begins (or resumes"
                    },
                    {
                        "name": "play(JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Begins (or resumes"
                    },
                    {
                        "name": "queueAppendItem(MediaQueueItem item, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Appends a new media item to the end of the queue."
                    },
                    {
                        "name": "queueInsertAndPlayItem(MediaQueueItem item, int insertBeforeItemId, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "A convenience method that inserts a single item into the queue and starts playing it at the specified position."
                    },
                    {
                        "name": "queueInsertAndPlayItem(MediaQueueItem item, int insertBeforeItemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "A convenience method that inserts a single item into the queue and starts playing it."
                    },
                    {
                        "name": "queueInsertItems(MediaQueueItem[] itemsToInsert, int insertBeforeItemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Inserts a list of new media items into the queue."
                    },
                    {
                        "name": "queueJumpToItem(int itemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Plays the item with itemId in the queue."
                    },
                    {
                        "name": "queueJumpToItem(int itemId, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Plays the item with itemId in the queue."
                    },
                    {
                        "name": "queueLoad(MediaQueueItem[] items, int startIndex, int repeatMode, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new queue of media items."
                    },
                    {
                        "name": "queueLoad(MediaQueueItem[] items, int startIndex, int repeatMode, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new queue of media items."
                    },
                    {
                        "name": "queueMoveItemToNewIndex(int itemId, int newIndex, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Moves the item with itemId to a new position in the queue."
                    },
                    {
                        "name": "queueNext(JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Jumps to the next item in the queue."
                    },
                    {
                        "name": "queuePrev(JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Jumps to the previous item in the queue."
                    },
                    {
                        "name": "queueRemoveItem(int itemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Removes the item with itemId from the queue."
                    },
                    {
                        "name": "queueRemoveItems(int[] itemIdsToRemove, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Removes a list of items from the queue."
                    },
                    {
                        "name": "queueReorderItems(int[] itemIdsToReorder, int insertBeforeItemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Reorders a list of media items in the queue."
                    },
                    {
                        "name": "queueSetRepeatMode(int repeatMode, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the repeat mode of the queue."
                    },
                    {
                        "name": "queueUpdateItems(MediaQueueItem[] itemsToUpdate, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Updates properties of a subset of the existing items in the media queue."
                    },
                    {
                        "name": "registerCallback(RemoteMediaClient.Callback callback)",
                        "return_type": "void",
                        "description": "Registers the RemoteMediaClient.Callback to get status updates."
                    },
                    {
                        "name": "removeListener(RemoteMediaClient.Listener listener)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use unregisterCallback(Callback"
                    },
                    {
                        "name": "removeProgressListener(RemoteMediaClient.ProgressListener listener)",
                        "return_type": "void",
                        "description": "Removes the RemoteMediaClient.ProgressListener."
                    },
                    {
                        "name": "requestStatus()",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Requests updated media status information from the receiver."
                    },
                    {
                        "name": "seek(long position)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use seek(MediaSeekOptions"
                    },
                    {
                        "name": "seek(MediaSeekOptions seekOptions)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Seeks to a new position as specified in seekOptions."
                    },
                    {
                        "name": "seek(long position, int resumeState, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use seek(MediaSeekOptions"
                    },
                    {
                        "name": "seek(long position, int resumeState)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "This method is deprecated. Use seek(MediaSeekOptions"
                    },
                    {
                        "name": "setActiveMediaTracks(long[] trackIds)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the active media tracks."
                    },
                    {
                        "name": "setParseAdsInfoCallback(RemoteMediaClient.ParseAdsInfoCallback callback)",
                        "return_type": "void",
                        "description": "Sets a RemoteMediaClient.ParseAdsInfoCallback."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the playback rate for the current media item and can pass along custom data."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the playback rate for the current media item."
                    },
                    {
                        "name": "setStreamMute(boolean muted)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Toggles the stream muting."
                    },
                    {
                        "name": "setStreamMute(boolean muted, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Toggles the stream muting."
                    },
                    {
                        "name": "setStreamVolume(double volume, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the stream volume."
                    },
                    {
                        "name": "setStreamVolume(double volume)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the stream volume of the current media item."
                    },
                    {
                        "name": "setTextTrackStyle(TextTrackStyle trackStyle)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Sets the text track style."
                    },
                    {
                        "name": "skipAd()",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Skips the playing ad."
                    },
                    {
                        "name": "stop(JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Stops playback of the current media item."
                    },
                    {
                        "name": "stop()",
                        "return_type": "PendingResult<RemoteMediaClient.MediaChannelResult>",
                        "description": "Stops playback of the current media item."
                    },
                    {
                        "name": "togglePlayback()",
                        "return_type": "void",
                        "description": "Toggles remote media playback."
                    },
                    {
                        "name": "unregisterCallback(RemoteMediaClient.Callback callback)",
                        "return_type": "void",
                        "description": "Unregisters the RemoteMediaClient.Callback to stop receiving status updates."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.Callback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.Callback",
                "description": "The callback for tracking player status changes.",
                "methods": [
                    {
                        "name": "onAdBreakStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated ad break status information is received."
                    },
                    {
                        "name": "onMediaError(MediaError mediaError)",
                        "return_type": "void",
                        "description": "Called when receiving media error message."
                    },
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "void",
                        "description": "Called when updated media metadata is received."
                    },
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player queue preload status information is received, for example, the next item to play has been preloaded."
                    },
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player queue status information is received."
                    },
                    {
                        "name": "onSendingRemoteMediaRequest()",
                        "return_type": "void",
                        "description": "Called when there is an outgoing request to the receiver."
                    },
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player status information is received."
                    }
                ]
            },
            {
                "name": "TracksChooserDialogFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/TracksChooserDialogFragment",
                "description": "A DialogFragment to show the available tracks (Text and Audio) for user to select.",
                "methods": [
                    {
                        "name": "newInstance()",
                        "return_type": "staticTracksChooserDialogFragment",
                        "description": "Creates a new instance of the dialog."
                    },
                    {
                        "name": "newInstance(MediaInfo mediaInfo, long[] activeTrackIds)",
                        "return_type": "staticTracksChooserDialogFragment",
                        "description": "This method is deprecated. Use newInstance("
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateDialog(Bundle savedInstanceState)",
                        "return_type": "Dialog",
                        "description": ""
                    },
                    {
                        "name": "onDestroyView()",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.Listener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.Listener",
                "description": "This interface is deprecated. Use RemoteMediaClient.Callback instead.",
                "methods": [
                    {
                        "name": "onAdBreakStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated ad break status information is received."
                    },
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated media metadata is received."
                    },
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue preload status information is received, for example, the next item to play has been preloaded."
                    },
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue status information is received."
                    },
                    {
                        "name": "onSendingRemoteMediaRequest()",
                        "return_type": "abstract void",
                        "description": "Called when there is an outgoing request to the receiver."
                    },
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player status information is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.MediaChannelResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.MediaChannelResult",
                "description": "The result of a media command.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "abstractJSONObject",
                        "description": "Custom data received from the receiver application."
                    },
                    {
                        "name": "getMediaError()",
                        "return_type": "abstract MediaError",
                        "description": "The error received from the receiver application."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.ParseAdsInfoCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.ParseAdsInfoCallback",
                "description": "The callback interface for parsing ads information from the custom data inside the MediaStatus.",
                "methods": [
                    {
                        "name": "parseAdBreaksFromMediaStatus(MediaStatus mediaStatus)",
                        "return_type": "abstractList<AdBreakInfo>",
                        "description": "Returns a list of AdBreakInfo instances, which contains information about a list of ads that is or will be played on the receiver."
                    },
                    {
                        "name": "parseIsPlayingAdFromMediaStatus(MediaStatus mediaStatus)",
                        "return_type": "abstract boolean",
                        "description": "Returns whether an ad is playing on the receiver."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.ProgressListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.ProgressListener",
                "description": "The listener interface for getting updates on the progress of the currently playing media.",
                "methods": [
                    {
                        "name": "onProgressUpdated(long progressMs, long durationMs)",
                        "return_type": "abstract void",
                        "description": "Called when progress or duration of the current playing media changes."
                    }
                ]
            },
            {
                "name": "CastMediaOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/CastMediaOptions.Builder",
                "description": "A builder to create an instance of CastMediaOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastMediaOptions",
                        "description": "Builds and returns the CastMediaOptions object."
                    },
                    {
                        "name": "setExpandedControllerActivityClassName(String className)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the class name of the expanded controller Activity."
                    },
                    {
                        "name": "setImagePicker(ImagePicker imagePicker)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the ImagePicker."
                    },
                    {
                        "name": "setMediaIntentReceiverClassName(String className)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the class name of the MediaIntentReceiver."
                    },
                    {
                        "name": "setMediaSessionEnabled(boolean enabled)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Enables or disables the MediaSession created and managed by the Cast SDK."
                    },
                    {
                        "name": "setNotificationOptions(NotificationOptions notificationOptions)",
                        "return_type": "CastMediaOptions.Builder",
                        "description": "Sets the NotificationOptions used to configure the notification with NotificationCompat.MediaStyle."
                    }
                ]
            },
            {
                "name": "MediaQueue.Callback",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/MediaQueue.Callback",
                "description": "Callback interface for receiving updates from MediaQueue.",
                "methods": [
                    {
                        "name": "itemsInsertedInRange(int insertIndex, int insertCount)",
                        "return_type": "void",
                        "description": "Called when a contiguous range of queue items have been inserted into the queue."
                    },
                    {
                        "name": "itemsReloaded()",
                        "return_type": "void",
                        "description": "Called when the queue has been entirely reloaded."
                    },
                    {
                        "name": "itemsRemovedAtIndexes(int[] indexes)",
                        "return_type": "void",
                        "description": "Called when one or more queue items have been removed from the queue."
                    },
                    {
                        "name": "itemsReorderedAtIndexes(List<Integer> indexes, int insertBeforeIndex)",
                        "return_type": "void",
                        "description": "Called when one or more queue items have been reordered in the queue."
                    },
                    {
                        "name": "itemsUpdatedAtIndexes(int[] indexes)",
                        "return_type": "void",
                        "description": "Called when one or more queue items have been updated in the queue."
                    },
                    {
                        "name": "mediaQueueChanged()",
                        "return_type": "void",
                        "description": "Called when one or more changes have been made to the queue."
                    },
                    {
                        "name": "mediaQueueWillChange()",
                        "return_type": "void",
                        "description": "Called when one or more changes are about to be made to the queue."
                    }
                ]
            },
            {
                "name": "NotificationAction.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationAction.Builder",
                "description": "A builder for NotificationAction.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NotificationAction",
                        "description": "Builds a NotificationAction."
                    },
                    {
                        "name": "setAction(String action)",
                        "return_type": "NotificationAction.Builder",
                        "description": "Sets the intent action."
                    },
                    {
                        "name": "setContentDescription(String contentDescription)",
                        "return_type": "NotificationAction.Builder",
                        "description": "Sets the content description that is used for accessibility."
                    },
                    {
                        "name": "setIconResId(int iconResId)",
                        "return_type": "NotificationAction.Builder",
                        "description": "Sets the icon's resource ID."
                    }
                ]
            },
            {
                "name": "NotificationOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/NotificationOptions.Builder",
                "description": "A builder for creating an instance of NotificationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NotificationOptions",
                        "description": "Builds and returns the NotificationOptions object."
                    },
                    {
                        "name": "setActions(List<String> actions, int[] compatActionIndices)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets at most 5 actions to show in the notification, and the indices to the actions to show in the compact view."
                    },
                    {
                        "name": "setDisconnectDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"disconnect\"."
                    },
                    {
                        "name": "setForward10DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip forward 10 seconds\"."
                    },
                    {
                        "name": "setForward30DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip forward 30 seconds\"."
                    },
                    {
                        "name": "setForwardDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip forward\"."
                    },
                    {
                        "name": "setNotificationActionsProvider(NotificationActionsProvider notificationActionsProvider)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets a NotificationActionsProvider, which can be subclassed to provide dynamic custom actions."
                    },
                    {
                        "name": "setPauseDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"pause\"."
                    },
                    {
                        "name": "setPlayDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"play\"."
                    },
                    {
                        "name": "setRewind10DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"rewind 10 seconds\"."
                    },
                    {
                        "name": "setRewind30DrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"rewind 30 seconds\"."
                    },
                    {
                        "name": "setRewindDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"rewind\"."
                    },
                    {
                        "name": "setSkipNextDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip next\"."
                    },
                    {
                        "name": "setSkipPrevDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"skip previous\"."
                    },
                    {
                        "name": "setSkipStepMs(long notificationSkipStepMs)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the amount to jump if MediaIntentReceiver.ACTION_FORWARD or MediaIntentReceiver.ACTION_REWIND are included for the notification actions."
                    },
                    {
                        "name": "setSmallIconDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID for the notification icon drawable."
                    },
                    {
                        "name": "setStopLiveStreamDrawableResId(int resId)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the resource ID of the icon that indicates \"stop playing live stream\"."
                    },
                    {
                        "name": "setTargetActivityClassName(String className)",
                        "return_type": "NotificationOptions.Builder",
                        "description": "Sets the name of the Activity that will be launched when user taps on the content area of the notification."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.Callback",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.Callback",
                "description": "The callback for tracking player status changes.",
                "methods": [
                    {
                        "name": "onAdBreakStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated ad break status information is received."
                    },
                    {
                        "name": "onMediaError(MediaError mediaError)",
                        "return_type": "void",
                        "description": "Called when receiving media error message."
                    },
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "void",
                        "description": "Called when updated media metadata is received."
                    },
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player queue preload status information is received, for example, the next item to play has been preloaded."
                    },
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player queue status information is received."
                    },
                    {
                        "name": "onSendingRemoteMediaRequest()",
                        "return_type": "void",
                        "description": "Called when there is an outgoing request to the receiver."
                    },
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player status information is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.Listener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.Listener",
                "description": "This interface is deprecated. Use RemoteMediaClient.Callback instead.",
                "methods": [
                    {
                        "name": "onAdBreakStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated ad break status information is received."
                    },
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated media metadata is received."
                    },
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue preload status information is received, for example, the next item to play has been preloaded."
                    },
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue status information is received."
                    },
                    {
                        "name": "onSendingRemoteMediaRequest()",
                        "return_type": "abstract void",
                        "description": "Called when there is an outgoing request to the receiver."
                    },
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player status information is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.MediaChannelResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.MediaChannelResult",
                "description": "The result of a media command.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "abstractJSONObject",
                        "description": "Custom data received from the receiver application."
                    },
                    {
                        "name": "getMediaError()",
                        "return_type": "abstract MediaError",
                        "description": "The error received from the receiver application."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.ParseAdsInfoCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.ParseAdsInfoCallback",
                "description": "The callback interface for parsing ads information from the custom data inside the MediaStatus.",
                "methods": [
                    {
                        "name": "parseAdBreaksFromMediaStatus(MediaStatus mediaStatus)",
                        "return_type": "abstractList<AdBreakInfo>",
                        "description": "Returns a list of AdBreakInfo instances, which contains information about a list of ads that is or will be played on the receiver."
                    },
                    {
                        "name": "parseIsPlayingAdFromMediaStatus(MediaStatus mediaStatus)",
                        "return_type": "abstract boolean",
                        "description": "Returns whether an ad is playing on the receiver."
                    }
                ]
            },
            {
                "name": "RemoteMediaClient.ProgressListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/RemoteMediaClient.ProgressListener",
                "description": "The listener interface for getting updates on the progress of the currently playing media.",
                "methods": [
                    {
                        "name": "onProgressUpdated(long progressMs, long durationMs)",
                        "return_type": "abstract void",
                        "description": "Called when progress or duration of the current playing media changes."
                    }
                ]
            }
        ]
    },
    {
        "name": "identity",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/api/identity/package-summary",
        "classes": [
            {
                "name": "BeginSignInRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest",
                "description": "Configurations that can be used to filter acceptable types of credentials returned from a sign-in attempt.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticBeginSignInRequest.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getGoogleIdTokenRequestOptions()",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions",
                        "description": ""
                    },
                    {
                        "name": "getPasswordRequestOptions()",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isAutoSelectEnabled()",
                        "return_type": "boolean",
                        "description": "Returns true if auto-select is requested, false otherwise."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.Builder",
                "description": "Builder for BeginSignInRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest",
                        "description": "Returns the built BeginSignInRequest."
                    },
                    {
                        "name": "setAutoSelectEnabled(boolean autoSelectEnabled)",
                        "return_type": "BeginSignInRequest.Builder",
                        "description": "Sets the auto-select behavior in the request."
                    },
                    {
                        "name": "setGoogleIdTokenRequestOptions(BeginSignInRequest.GoogleIdTokenRequestOptions googleIdTokenRequestOptions)",
                        "return_type": "BeginSignInRequest.Builder",
                        "description": "Sets the BeginSignInRequest.GoogleIdTokenRequestOptions for the request."
                    },
                    {
                        "name": "setPasswordRequestOptions(BeginSignInRequest.PasswordRequestOptions passwordRequestOptions)",
                        "return_type": "BeginSignInRequest.Builder",
                        "description": "Sets the BeginSignInRequest.PasswordRequestOptions for the request."
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.GoogleIdTokenRequestOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.GoogleIdTokenRequestOptions",
                "description": "Options for requesting Google ID token-backed credentials during sign-in.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticBeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "filterByAuthorizedAccounts()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getIdTokenDepositionScopes()",
                        "return_type": "List<String>",
                        "description": ""
                    },
                    {
                        "name": "getLinkedServiceId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getNonce()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getServerClientId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSupported()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                "description": "Builder for BeginSignInRequest.GoogleIdTokenRequestOptions.",
                "methods": [
                    {
                        "name": "associateLinkedAccounts(String linkedServiceId, List<String> idTokenDepositionScopes)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether to support sign-in using Google accounts that are linked to your users' accounts."
                    },
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions",
                        "description": "Returns the built BeginSignInRequest.GoogleIdTokenRequestOptions."
                    },
                    {
                        "name": "setFilterByAuthorizedAccounts(boolean filterByAuthorizedAccounts)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether to only allow the user to select from Google accounts that are already authorized to sign in to your application."
                    },
                    {
                        "name": "setNonce(String nonce)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets the nonce to use when generating a Google ID token."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets the server's client ID to use as the audience for Google ID tokens generated during the sign-in."
                    },
                    {
                        "name": "setSupported(boolean supported)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether Google ID token-backed credentials should be returned by the API."
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.PasswordRequestOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.PasswordRequestOptions",
                "description": "Options for requesting password-backed credentials during sign-in.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticBeginSignInRequest.PasswordRequestOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSupported()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.PasswordRequestOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.PasswordRequestOptions.Builder",
                "description": "Builder for BeginSignInRequest.PasswordRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions",
                        "description": "Returns the built BeginSignInRequest.PasswordRequestOptions."
                    },
                    {
                        "name": "setSupported(boolean supported)",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions.Builder",
                        "description": "Sets whether password-backed credentials should be returned by the API."
                    }
                ]
            },
            {
                "name": "BeginSignInResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInResult",
                "description": "Result returned from sign-in initiation that includes a PendingIntent that can be used to continue the sign-in flow.",
                "methods": [
                    {
                        "name": "getPendingIntent()",
                        "return_type": "PendingIntent",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GetPhoneNumberHintIntentRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/GetPhoneNumberHintIntentRequest",
                "description": "Request object used to get an Intent to start the Phone Number Hint flow.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticGetPhoneNumberHintIntentRequest.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GetPhoneNumberHintIntentRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/GetPhoneNumberHintIntentRequest.Builder",
                "description": "Builder for GetPhoneNumberHintIntentRequest",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "GetPhoneNumberHintIntentRequest",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GetSignInIntentRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/GetSignInIntentRequest",
                "description": "Request to get a Google sign-in intent.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticGetSignInIntentRequest.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getHostedDomainFilter()",
                        "return_type": "String",
                        "description": "Returns the hostedDomainFilter if it was set in the request, or null otherwise."
                    },
                    {
                        "name": "getNonce()",
                        "return_type": "String",
                        "description": "Returns the nonce that was set in the request."
                    },
                    {
                        "name": "getServerClientId()",
                        "return_type": "String",
                        "description": "Returns the serverClientId that was set in the request."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GetSignInIntentRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/GetSignInIntentRequest.Builder",
                "description": "Builder class for GetSignInIntentRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "GetSignInIntentRequest",
                        "description": ""
                    },
                    {
                        "name": "filterByHostedDomain(String hostedDomainFilter)",
                        "return_type": "GetSignInIntentRequest.Builder",
                        "description": "Sets the hosted domain filter (e.g."
                    },
                    {
                        "name": "setNonce(String nonce)",
                        "return_type": "GetSignInIntentRequest.Builder",
                        "description": "Sets the nonce to use when generating a Google ID token."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "GetSignInIntentRequest.Builder",
                        "description": "Sets the client ID of the server that will verify the integrity of the token."
                    }
                ]
            },
            {
                "name": "Identity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/Identity",
                "description": "The entry point to the Sign-In APIs.",
                "methods": [
                    {
                        "name": "getCredentialSavingClient(Activity activity)",
                        "return_type": "staticCredentialSavingClient",
                        "description": "Returns a new instance of CredentialSavingClient."
                    },
                    {
                        "name": "getCredentialSavingClient(Context context)",
                        "return_type": "staticCredentialSavingClient",
                        "description": "Returns a new instance of CredentialSavingClient."
                    },
                    {
                        "name": "getSignInClient(Activity activity)",
                        "return_type": "staticSignInClient",
                        "description": "Returns a new instance of SignInClient."
                    },
                    {
                        "name": "getSignInClient(Context context)",
                        "return_type": "staticSignInClient",
                        "description": "Returns a new instance of SignInClient."
                    }
                ]
            },
            {
                "name": "SaveAccountLinkingTokenRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SaveAccountLinkingTokenRequest",
                "description": "Configurations that allow saving a token to Google for the purpose of account linking.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticSaveAccountLinkingTokenRequest.Builder",
                        "description": "Returns an instance of the SaveAccountLinkingTokenRequest.Builder that can be used to build an instance of SaveAccountLinkingTokenRequest."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getConsentPendingIntent()",
                        "return_type": "PendingIntent",
                        "description": "Returns the PendingIntent that is set in the request and will be used to launch the consent page by Google Play Services during the flow."
                    },
                    {
                        "name": "getScopes()",
                        "return_type": "List<String>",
                        "description": "Returns the scopes that were set in the request."
                    },
                    {
                        "name": "getServiceId()",
                        "return_type": "String",
                        "description": "Returns the service-id that was set in the request."
                    },
                    {
                        "name": "getTokenType()",
                        "return_type": "String",
                        "description": "Returns the type of token that is requested."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SaveAccountLinkingTokenRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SaveAccountLinkingTokenRequest.Builder",
                "description": "Builder for SaveAccountLinkingTokenRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SaveAccountLinkingTokenRequest",
                        "description": "Builds an immutable instance of the SaveAccountLinkingTokenRequest."
                    },
                    {
                        "name": "setConsentPendingIntent(PendingIntent consentPendingIntent)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the (mandatory"
                    },
                    {
                        "name": "setScopes(List<String> scopes)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the list of scopes that are associated with the token that will be saved to Google."
                    },
                    {
                        "name": "setServiceId(String serviceId)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the service-id that can be obtained from your Google Cloud project."
                    },
                    {
                        "name": "setTokenType(String tokenType)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the type of token that will be saved to Google."
                    }
                ]
            },
            {
                "name": "SaveAccountLinkingTokenResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SaveAccountLinkingTokenResult",
                "description": "Result returned from the initial call to save an account linking token that includes a PendingIntent that can be used to continue the flow.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getPendingIntent()",
                        "return_type": "PendingIntent",
                        "description": "Returns the PendingIntent that can be used to launch the flow."
                    },
                    {
                        "name": "hasResolution()",
                        "return_type": "boolean",
                        "description": "Returns true if and only if this result contains a resolution that needs to be launched."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SavePasswordRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SavePasswordRequest",
                "description": "Configurations that allow saving a SignInPasswordto Google.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticSavePasswordRequest.Builder",
                        "description": "Returns a new instance of the SavePasswordRequest.Builder."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getSignInPassword()",
                        "return_type": "SignInPassword",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SavePasswordRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SavePasswordRequest.Builder",
                "description": "Builder for SavePasswordRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SavePasswordRequest",
                        "description": "Builds and returns a new instance of SavePasswordRequest."
                    },
                    {
                        "name": "setSignInPassword(SignInPassword signInPassword)",
                        "return_type": "SavePasswordRequest.Builder",
                        "description": "Sets the SignInPassword"
                    }
                ]
            },
            {
                "name": "SavePasswordResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SavePasswordResult",
                "description": "The result returned from calling CredentialSavingClient.savePassword(SavePasswordRequest) that includes a PendingIntent that can be used to launch the password saving flow.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getPendingIntent()",
                        "return_type": "PendingIntent",
                        "description": "Returns the PendingIntent that should be launched to start the UI flow for saving the password."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SignInCredential",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SignInCredential",
                "description": "The credential returned as a result of a successful sign-in.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getFamilyName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getGivenName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getGoogleIdToken()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Returns the identifier of the credential."
                    },
                    {
                        "name": "getPassword()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getProfilePictureUri()",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SignInPassword",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SignInPassword",
                "description": "An account ID such as a username or an email, and a password that can be used to sign a user in.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getPassword()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CredentialSavingClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/CredentialSavingClient",
                "description": "A client for the Credential Saving API.",
                "methods": [
                    {
                        "name": "saveAccountLinkingToken(SaveAccountLinkingTokenRequest saveAccountLinkingTokenRequest)",
                        "return_type": "abstractTask<SaveAccountLinkingTokenResult>",
                        "description": "Attempts to save a token for account linking."
                    },
                    {
                        "name": "savePassword(SavePasswordRequest savePasswordRequest)",
                        "return_type": "abstractTask<SavePasswordResult>",
                        "description": "Initiates the storage of a password-backed credential that can later be used to sign a user in."
                    }
                ]
            },
            {
                "name": "SignInClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SignInClient",
                "description": "A client for the sign-in API.",
                "methods": [
                    {
                        "name": "beginSignIn(BeginSignInRequest signInRequest)",
                        "return_type": "abstractTask<BeginSignInResult>",
                        "description": "Initiates the retrieval of a credential that can assist the caller in signing a user in to their application."
                    },
                    {
                        "name": "getPhoneNumberFromIntent(Intent data)",
                        "return_type": "abstractString",
                        "description": "Retrieves the Phone Number from the Intent returned upon a successful Phone Number Hint request, throwing an ApiException if no phone number is available or the input Intent is null."
                    },
                    {
                        "name": "getPhoneNumberHintIntent(GetPhoneNumberHintIntentRequest getPhoneNumberHintIntentRequest)",
                        "return_type": "abstractTask<PendingIntent>",
                        "description": "Gets the PendingIntent that initiates the Phone Number Hint flow."
                    },
                    {
                        "name": "getSignInCredentialFromIntent(Intent data)",
                        "return_type": "abstractSignInCredential",
                        "description": "Retrieves the SignInCredential from the Intent returned upon successful sign-in, throwing an ApiException if no credential is present."
                    },
                    {
                        "name": "getSignInIntent(GetSignInIntentRequest getSignInIntentRequest)",
                        "return_type": "abstractTask<PendingIntent>",
                        "description": "Gets the PendingIntent that initiates the Google Sign-in flow."
                    },
                    {
                        "name": "signOut()",
                        "return_type": "abstractTask<Void>",
                        "description": "Resets internal state related to sign-in."
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.Builder",
                "description": "Builder for BeginSignInRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest",
                        "description": "Returns the built BeginSignInRequest."
                    },
                    {
                        "name": "setAutoSelectEnabled(boolean autoSelectEnabled)",
                        "return_type": "BeginSignInRequest.Builder",
                        "description": "Sets the auto-select behavior in the request."
                    },
                    {
                        "name": "setGoogleIdTokenRequestOptions(BeginSignInRequest.GoogleIdTokenRequestOptions googleIdTokenRequestOptions)",
                        "return_type": "BeginSignInRequest.Builder",
                        "description": "Sets the BeginSignInRequest.GoogleIdTokenRequestOptions for the request."
                    },
                    {
                        "name": "setPasswordRequestOptions(BeginSignInRequest.PasswordRequestOptions passwordRequestOptions)",
                        "return_type": "BeginSignInRequest.Builder",
                        "description": "Sets the BeginSignInRequest.PasswordRequestOptions for the request."
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.GoogleIdTokenRequestOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.GoogleIdTokenRequestOptions",
                "description": "Options for requesting Google ID token-backed credentials during sign-in.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticBeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "filterByAuthorizedAccounts()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getIdTokenDepositionScopes()",
                        "return_type": "List<String>",
                        "description": ""
                    },
                    {
                        "name": "getLinkedServiceId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getNonce()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getServerClientId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSupported()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.PasswordRequestOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.PasswordRequestOptions",
                "description": "Options for requesting password-backed credentials during sign-in.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticBeginSignInRequest.PasswordRequestOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSupported()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                "description": "Builder for BeginSignInRequest.GoogleIdTokenRequestOptions.",
                "methods": [
                    {
                        "name": "associateLinkedAccounts(String linkedServiceId, List<String> idTokenDepositionScopes)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether to support sign-in using Google accounts that are linked to your users' accounts."
                    },
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions",
                        "description": "Returns the built BeginSignInRequest.GoogleIdTokenRequestOptions."
                    },
                    {
                        "name": "setFilterByAuthorizedAccounts(boolean filterByAuthorizedAccounts)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether to only allow the user to select from Google accounts that are already authorized to sign in to your application."
                    },
                    {
                        "name": "setNonce(String nonce)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets the nonce to use when generating a Google ID token."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets the server's client ID to use as the audience for Google ID tokens generated during the sign-in."
                    },
                    {
                        "name": "setSupported(boolean supported)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether Google ID token-backed credentials should be returned by the API."
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.PasswordRequestOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.PasswordRequestOptions.Builder",
                "description": "Builder for BeginSignInRequest.PasswordRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions",
                        "description": "Returns the built BeginSignInRequest.PasswordRequestOptions."
                    },
                    {
                        "name": "setSupported(boolean supported)",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions.Builder",
                        "description": "Sets whether password-backed credentials should be returned by the API."
                    }
                ]
            },
            {
                "name": "GetPhoneNumberHintIntentRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/GetPhoneNumberHintIntentRequest.Builder",
                "description": "Builder for GetPhoneNumberHintIntentRequest",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "GetPhoneNumberHintIntentRequest",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GetSignInIntentRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/GetSignInIntentRequest.Builder",
                "description": "Builder class for GetSignInIntentRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "GetSignInIntentRequest",
                        "description": ""
                    },
                    {
                        "name": "filterByHostedDomain(String hostedDomainFilter)",
                        "return_type": "GetSignInIntentRequest.Builder",
                        "description": "Sets the hosted domain filter (e.g."
                    },
                    {
                        "name": "setNonce(String nonce)",
                        "return_type": "GetSignInIntentRequest.Builder",
                        "description": "Sets the nonce to use when generating a Google ID token."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "GetSignInIntentRequest.Builder",
                        "description": "Sets the client ID of the server that will verify the integrity of the token."
                    }
                ]
            },
            {
                "name": "SaveAccountLinkingTokenRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SaveAccountLinkingTokenRequest.Builder",
                "description": "Builder for SaveAccountLinkingTokenRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SaveAccountLinkingTokenRequest",
                        "description": "Builds an immutable instance of the SaveAccountLinkingTokenRequest."
                    },
                    {
                        "name": "setConsentPendingIntent(PendingIntent consentPendingIntent)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the (mandatory"
                    },
                    {
                        "name": "setScopes(List<String> scopes)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the list of scopes that are associated with the token that will be saved to Google."
                    },
                    {
                        "name": "setServiceId(String serviceId)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the service-id that can be obtained from your Google Cloud project."
                    },
                    {
                        "name": "setTokenType(String tokenType)",
                        "return_type": "SaveAccountLinkingTokenRequest.Builder",
                        "description": "Sets the type of token that will be saved to Google."
                    }
                ]
            },
            {
                "name": "SavePasswordRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/SavePasswordRequest.Builder",
                "description": "Builder for SavePasswordRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SavePasswordRequest",
                        "description": "Builds and returns a new instance of SavePasswordRequest."
                    },
                    {
                        "name": "setSignInPassword(SignInPassword signInPassword)",
                        "return_type": "SavePasswordRequest.Builder",
                        "description": "Sets the SignInPassword"
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                "description": "Builder for BeginSignInRequest.GoogleIdTokenRequestOptions.",
                "methods": [
                    {
                        "name": "associateLinkedAccounts(String linkedServiceId, List<String> idTokenDepositionScopes)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether to support sign-in using Google accounts that are linked to your users' accounts."
                    },
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions",
                        "description": "Returns the built BeginSignInRequest.GoogleIdTokenRequestOptions."
                    },
                    {
                        "name": "setFilterByAuthorizedAccounts(boolean filterByAuthorizedAccounts)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether to only allow the user to select from Google accounts that are already authorized to sign in to your application."
                    },
                    {
                        "name": "setNonce(String nonce)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets the nonce to use when generating a Google ID token."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets the server's client ID to use as the audience for Google ID tokens generated during the sign-in."
                    },
                    {
                        "name": "setSupported(boolean supported)",
                        "return_type": "BeginSignInRequest.GoogleIdTokenRequestOptions.Builder",
                        "description": "Sets whether Google ID token-backed credentials should be returned by the API."
                    }
                ]
            },
            {
                "name": "BeginSignInRequest.PasswordRequestOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.PasswordRequestOptions.Builder",
                "description": "Builder for BeginSignInRequest.PasswordRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions",
                        "description": "Returns the built BeginSignInRequest.PasswordRequestOptions."
                    },
                    {
                        "name": "setSupported(boolean supported)",
                        "return_type": "BeginSignInRequest.PasswordRequestOptions.Builder",
                        "description": "Sets whether password-backed credentials should be returned by the API."
                    }
                ]
            }
        ]
    },
    {
        "name": "pay",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/pay/package-summary",
        "classes": [
            {
                "name": "Pay",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/pay/Pay",
                "description": "Entry point for Pay API.",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticPayClient",
                        "description": "Creates a new instance of PayClient for use in an Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticPayClient",
                        "description": "Creates a new instance of PayClient for use in a non-Activity Context."
                    }
                ]
            },
            {
                "name": "PayClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/pay/PayClient",
                "description": "Interface for Pay API.",
                "methods": [
                    {
                        "name": "getPayApiAvailabilityStatus(int requestType)",
                        "return_type": "abstract Task<Integer>",
                        "description": "Gets the PayApiAvailabilityStatus of the current user and device."
                    },
                    {
                        "name": "savePasses(String json, Activity activity, int requestCode)",
                        "return_type": "abstract void",
                        "description": "Saves one or multiple passes in a JSON format."
                    },
                    {
                        "name": "savePassesJwt(String jwt, Activity activity, int requestCode)",
                        "return_type": "abstract void",
                        "description": "Saves one or multiple passes in a JWT format."
                    }
                ]
            }
        ]
    },
    {
        "name": "appopen",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/appopen/package-summary",
        "classes": [
            {
                "name": "AppOpenAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/appopen/AppOpenAd",
                "description": "App open ads are used to display ads when users enter your app.",
                "methods": [
                    {
                        "name": "getAdUnitId()",
                        "return_type": "abstractString",
                        "description": "Returns the ad unit ID."
                    },
                    {
                        "name": "getFullScreenContentCallback()",
                        "return_type": "abstractFullScreenContentCallback",
                        "description": "Gets the FullScreenContentCallback for this AppOpenAd."
                    },
                    {
                        "name": "getOnPaidEventListener()",
                        "return_type": "abstractOnPaidEventListener",
                        "description": "Gets the OnPaidEventListener for this AppOpenAd."
                    },
                    {
                        "name": "getResponseInfo()",
                        "return_type": "abstractResponseInfo",
                        "description": "Returns the ResponseInfo for the loaded ad."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdManagerAdRequest adManagerAdRequest, int orientation, AppOpenAd.AppOpenAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads an AppOpenAd."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdRequest adRequest, int orientation, AppOpenAd.AppOpenAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads an AppOpenAd."
                    },
                    {
                        "name": "setFullScreenContentCallback(FullScreenContentCallback fullScreenContentCallback)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when ads show and dismiss full screen content."
                    },
                    {
                        "name": "setImmersiveMode(boolean immersiveModeEnabled)",
                        "return_type": "abstract void",
                        "description": "Sets a flag that controls if this app open ad object will be displayed in immersive mode."
                    },
                    {
                        "name": "setOnPaidEventListener(OnPaidEventListener listener)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when this ad is estimated to have earned money."
                    },
                    {
                        "name": "show(Activity activity)",
                        "return_type": "abstract void",
                        "description": "Shows the AppOpenAd."
                    }
                ]
            },
            {
                "name": "AppOpenAd.AppOpenAdLoadCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/appopen/AppOpenAd.AppOpenAdLoadCallback",
                "description": "An object for receiving event notifications for loading an app open ad.",
                "methods": []
            },
            {
                "name": "AppOpenAd.AppOpenAdLoadCallback",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/appopen/AppOpenAd.AppOpenAdLoadCallback",
                "description": "An object for receiving event notifications for loading an app open ad.",
                "methods": []
            }
        ]
    },
    {
        "name": "media",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/tv/media/package-summary",
        "classes": [
            {
                "name": "EditAudioTracksData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/EditAudioTracksData",
                "description": "Data structure for edit audio tracks command requests.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getIsSuggestedLanguage()",
                        "return_type": "Boolean",
                        "description": "Returns true if the provided language returned by getLanguage("
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Returns the language for the track that should be active."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "EditTracksInfoData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/EditTracksInfoData",
                "description": "Data structure for edit track info command requests.",
                "methods": [
                    {
                        "name": "getActiveTrackIds()",
                        "return_type": "long[]",
                        "description": "Array of the track IDs that should be active."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getEnableTextTracks()",
                        "return_type": "Boolean",
                        "description": "Flag to enable or disable text tracks."
                    },
                    {
                        "name": "getIsSuggestedLanguage()",
                        "return_type": "Boolean",
                        "description": "Returns true if the provided language was not explicit user request, but rather inferred from used language in voice query."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Language for the tracks that should be active."
                    },
                    {
                        "name": "getTextTrackStyle()",
                        "return_type": "TextTrackStyle",
                        "description": "The requested text track style."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FetchItemsRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/FetchItemsRequestData",
                "description": "Request data structure for fetching more items relative to a media item.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getItemId()",
                        "return_type": "int",
                        "description": "Returns the ID of the item relative to which the other items should be fetched."
                    },
                    {
                        "name": "getNextCount()",
                        "return_type": "Integer",
                        "description": "Returns the maximum number of item IDs to fetch after the given item."
                    },
                    {
                        "name": "getPrevCount()",
                        "return_type": "Integer",
                        "description": "Returns the maximum number of item IDs to fetch before the given item."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaCommandCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaCommandCallback",
                "description": "Callback for Cast media commands.",
                "methods": [
                    {
                        "name": "onEditAudioTracks(String senderId, EditAudioTracksData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a edit audio tracks command is received."
                    },
                    {
                        "name": "onEditTracksInfo(String senderId, EditTracksInfoData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a edit tracks info command is received."
                    },
                    {
                        "name": "onFetchItems(String senderId, FetchItemsRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a sender requests to fetch more items relative to an item."
                    },
                    {
                        "name": "onPause(String senderId, RequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a pause command is received."
                    },
                    {
                        "name": "onPlay(String senderId, RequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a play command is received."
                    },
                    {
                        "name": "onPlayAgain(String senderId, RequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when assistant requests to play the last media again."
                    },
                    {
                        "name": "onQueueInsert(String senderId, QueueInsertRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a queue insert command is received."
                    },
                    {
                        "name": "onQueueRemove(String senderId, QueueRemoveRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a queue remove command is received."
                    },
                    {
                        "name": "onQueueReorder(String senderId, QueueReorderRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a queue reorder command is received."
                    },
                    {
                        "name": "onQueueUpdate(String senderId, QueueUpdateRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a queue update command is received."
                    },
                    {
                        "name": "onSeek(String senderId, SeekRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a seek command is received."
                    },
                    {
                        "name": "onSelectTracksByType(String senderId, int type, List<MediaTrack> tracks)",
                        "return_type": "Task<Void>",
                        "description": "Called by default when a track-editing command is received, either onEditTracksInfo(String, EditTracksInfoData"
                    },
                    {
                        "name": "onSetPlaybackRate(String senderId, SetPlaybackRateRequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a command is received to set the playback rate."
                    },
                    {
                        "name": "onSetTextTrackStyle(String senderId, TextTrackStyle textTrackStyle)",
                        "return_type": "Task<Void>",
                        "description": "Called by default when a track-editing command is received, which requests to change the text track style."
                    },
                    {
                        "name": "onSkipAd(String senderId, RequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a skip ad command is received."
                    },
                    {
                        "name": "onStop(String senderId, RequestData requestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when a stop command is received."
                    },
                    {
                        "name": "onUserAction(String senderId, UserActionRequestData userActionRequestData)",
                        "return_type": "Task<Void>",
                        "description": "Called when the app receives a user action."
                    }
                ]
            },
            {
                "name": "MediaInfoModifier",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaInfoModifier",
                "description": "The modifier to override the MediaInfo auto-generated from MediaSession, and provide additional fields that are not in MediaSession.",
                "methods": [
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears all overrides."
                    },
                    {
                        "name": "getAdBreakClips()",
                        "return_type": "List<AdBreakClipInfo>",
                        "description": "Returns the list of AdBreakClipInfos to override."
                    },
                    {
                        "name": "getAdBreaks()",
                        "return_type": "List<AdBreakInfo>",
                        "description": "Returns the list of AdBreakInfos to override."
                    },
                    {
                        "name": "getContentId()",
                        "return_type": "String",
                        "description": "Returns the content ID to override."
                    },
                    {
                        "name": "getContentType()",
                        "return_type": "String",
                        "description": "Returns the content (MIME"
                    },
                    {
                        "name": "getContentUrl()",
                        "return_type": "String",
                        "description": "Returns the content URL to override."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data to override."
                    },
                    {
                        "name": "getEntity()",
                        "return_type": "String",
                        "description": "Returns the entity to override."
                    },
                    {
                        "name": "getMediaTracks()",
                        "return_type": "List<MediaTrack>",
                        "description": "Returns the list of media tracks to override."
                    },
                    {
                        "name": "getMetadataModifier()",
                        "return_type": "MediaMetadataModifier",
                        "description": "Returns the MediaMetadataModifier."
                    },
                    {
                        "name": "getStartAbsoluteTime()",
                        "return_type": "Long",
                        "description": "Returns the start absolute time to override."
                    },
                    {
                        "name": "getStreamDuration()",
                        "return_type": "Long",
                        "description": "Returns the stream duration to override."
                    },
                    {
                        "name": "getStreamType()",
                        "return_type": "Integer",
                        "description": "Returns the stream type to override."
                    },
                    {
                        "name": "getTextTrackStyle()",
                        "return_type": "TextTrackStyle",
                        "description": "Returns the text track style to override."
                    },
                    {
                        "name": "getVmapAdsRequest()",
                        "return_type": "VastAdsRequest",
                        "description": "Returns the VMAP ad request configuration to override."
                    },
                    {
                        "name": "setAdBreakClips(List<AdBreakClipInfo> adBreakClips)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the list of AdBreakClipInfos."
                    },
                    {
                        "name": "setAdBreaks(List<AdBreakInfo> adBreaks)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the list of AdBreakInfos."
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the content ID to override."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the content (MIME"
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the URL of the content to be played."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setDataFromMediaInfo(MediaInfo mediaInfo)",
                        "return_type": "void",
                        "description": "Sets the data of the modifier from a given MediaInfo."
                    },
                    {
                        "name": "setEntity(String entity)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the entity: a URI that identifies content in an application-specific way."
                    },
                    {
                        "name": "setMediaTracks(List<MediaTrack> mediaTracks)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the list of media tracks."
                    },
                    {
                        "name": "setMetadataModifier(MediaMetadataModifier mediaMetadataModifier)",
                        "return_type": "void",
                        "description": "Sets the MediaMetadataModifier which modifies the metadata of the processed MediaInfo."
                    },
                    {
                        "name": "setStartAbsoluteTime(Long startAbsoluteTime)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the start absolute time, in milliseconds in epoch time."
                    },
                    {
                        "name": "setStreamDuration(Long streamDuration)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the stream duration to override, in milliseconds."
                    },
                    {
                        "name": "setStreamType(Integer streamType)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the stream type to override."
                    },
                    {
                        "name": "setTextTrackStyle(TextTrackStyle textTrackStyle)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the text track style."
                    },
                    {
                        "name": "setVmapAdsRequest(VastAdsRequest vmapAdsRequest)",
                        "return_type": "MediaInfoModifier",
                        "description": "Sets the VMAP ad request configuration, which is a collection of VAST ads."
                    }
                ]
            },
            {
                "name": "MediaInfoWriter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaInfoWriter",
                "description": "The writer class to modify a MediaInfo instance.",
                "methods": [
                    {
                        "name": "getMediaInfo()",
                        "return_type": "MediaInfo",
                        "description": "Returns the wrapped MediaInfo object."
                    },
                    {
                        "name": "setAdBreakClips(List<AdBreakClipInfo> adBreakClips)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets an unmodifiable list of AdBreakClipInfos, or null if unspecified."
                    },
                    {
                        "name": "setAdBreaks(List<AdBreakInfo> adBreaks)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets an unmodifiable list of AdBreakInfos, or null if unspecified."
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the content ID."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the content (MIME"
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the URL of the content to be played."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the custom data, if any."
                    },
                    {
                        "name": "setEntity(String entity)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the entity: a URI that identifies content in an application-specific way."
                    },
                    {
                        "name": "setMediaTracks(List<MediaTrack> mediaTracks)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the list of media tracks, or null if unspecified."
                    },
                    {
                        "name": "setMetadata(MediaMetadata mediaMetadata)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the media item metadata."
                    },
                    {
                        "name": "setStartAbsoluteTime(long startAbsoluteTime)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the start absolute time in milliseconds in epoch time, or MediaInfo.UNKNOWN_START_ABSOLUTE_TIME if it is not available."
                    },
                    {
                        "name": "setStreamDuration(long streamDuration)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the stream duration, in milliseconds."
                    },
                    {
                        "name": "setStreamType(int streamType)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the stream type."
                    },
                    {
                        "name": "setTextTrackStyle(TextTrackStyle textTrackStyle)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the text track style, or null if unspecified."
                    },
                    {
                        "name": "setVmapAdsRequest(VastAdsRequest vmapAdsRequest)",
                        "return_type": "MediaInfoWriter",
                        "description": "Sets the VMAP ad request configuration, which is a collection of VAST ads."
                    }
                ]
            },
            {
                "name": "MediaLoadCommandCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaLoadCommandCallback",
                "description": "Callback for Cast load commands.",
                "methods": [
                    {
                        "name": "onLoad(String senderId, MediaLoadRequestData requestData)",
                        "return_type": "Task<MediaLoadRequestData>",
                        "description": "Called when a sender requests to load media."
                    }
                ]
            },
            {
                "name": "MediaManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaManager",
                "description": "Manager class for all media status and commands.",
                "methods": [
                    {
                        "name": "broadcastMediaStatus()",
                        "return_type": "void",
                        "description": "Trigger a media status broadcast."
                    },
                    {
                        "name": "getBaseMediaStatus()",
                        "return_type": "MediaStatus",
                        "description": "Returns the base MediaStatus which is generated from Android MediaSession, before applying any overrides from MediaStatusModifier, MediaQueueManager or MediaManager.MediaStatusInterceptor."
                    },
                    {
                        "name": "getCurrentMediaStatus()",
                        "return_type": "MediaStatus",
                        "description": "Returns the current MediaStatus generated from the base MediaStatus with overrides applied from MediaStatusModifier and MediaQueueManager (note that changes from MediaManager.MediaStatusInterceptor is not applied"
                    },
                    {
                        "name": "getMediaQueueManager()",
                        "return_type": "MediaQueueManager",
                        "description": "Returns the MediaQueueManager."
                    },
                    {
                        "name": "getMediaStatusModifier()",
                        "return_type": "MediaStatusModifier",
                        "description": "Returns the MediaStatusModifier."
                    },
                    {
                        "name": "onNewIntent(Intent intent)",
                        "return_type": "boolean",
                        "description": "Passes a new activity intent to MediaManager."
                    },
                    {
                        "name": "setDataFromLoad(MediaLoadRequestData loadRequestData)",
                        "return_type": "void",
                        "description": "Initializes MediaStatusModifier and MediaQueueManager overrides using the information from a load request."
                    },
                    {
                        "name": "setMediaCommandCallback(MediaCommandCallback callback)",
                        "return_type": "void",
                        "description": "Sets the MediaCommandCallback."
                    },
                    {
                        "name": "setMediaLoadCommandCallback(MediaLoadCommandCallback callback)",
                        "return_type": "void",
                        "description": "Sets the MediaLoadCommandCallback to handle load and resume session requests."
                    },
                    {
                        "name": "setMediaStatusInterceptor(MediaManager.MediaStatusInterceptor interceptor)",
                        "return_type": "void",
                        "description": "Sets the MediaManager.MediaStatusInterceptor to intercept and modify the MediaStatus before it is being sent out."
                    },
                    {
                        "name": "setSessionCompatToken(MediaSessionCompat.Token token)",
                        "return_type": "void",
                        "description": "Sets and attaches to a MediaSession token."
                    }
                ]
            },
            {
                "name": "MediaMetadataModifier",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaMetadataModifier",
                "description": "The class to modify the MediaMetadata of the media info in media status.",
                "methods": [
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears all overrides."
                    },
                    {
                        "name": "getDate(String key)",
                        "return_type": "Calendar",
                        "description": "Returns the date override on a given key."
                    },
                    {
                        "name": "getDouble(String key)",
                        "return_type": "Double",
                        "description": "Returns the double override on a given key."
                    },
                    {
                        "name": "getImages()",
                        "return_type": "List<WebImage>",
                        "description": "Returns the list of images to override."
                    },
                    {
                        "name": "getInt(String key)",
                        "return_type": "Integer",
                        "description": "Returns the int override on a given key."
                    },
                    {
                        "name": "getMediaType()",
                        "return_type": "Integer",
                        "description": "Returns the media type to override."
                    },
                    {
                        "name": "getString(String key)",
                        "return_type": "String",
                        "description": "Returns the string override on a given key."
                    },
                    {
                        "name": "getTimeMillis(String key)",
                        "return_type": "Long",
                        "description": "Returns the time override on a given key."
                    },
                    {
                        "name": "hasOverrideForKey(String key)",
                        "return_type": "boolean",
                        "description": "Returns whether the metadata has override on a given key."
                    },
                    {
                        "name": "putDate(String key, Calendar value)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Specifies a value to override in a date field."
                    },
                    {
                        "name": "putDouble(String key, Double value)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Specifies a value to override in a double field."
                    },
                    {
                        "name": "putInt(String key, Integer value)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Specifies a value to override in a int field."
                    },
                    {
                        "name": "putString(String key, String value)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Specifies a value to override in a String field."
                    },
                    {
                        "name": "putTimeMillis(String key, Long value)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Specifies a value to override in a time field, as a long in milliseconds."
                    },
                    {
                        "name": "removeOverride(String key)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Remove the override of the given key, so that the SDK uses the default value auto-generated from MediaMetadataCompat."
                    },
                    {
                        "name": "setImages(List<WebImage> images)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Specifies the list of images to override."
                    },
                    {
                        "name": "setMediaType(Integer mediaType)",
                        "return_type": "MediaMetadataModifier",
                        "description": "Sets the media type to override."
                    }
                ]
            },
            {
                "name": "MediaQueueItemWriter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaQueueItemWriter",
                "description": "The modifier to modify MediaQueueItem.",
                "methods": [
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the active track IDs for this item."
                    },
                    {
                        "name": "setAutoplay(boolean autoplay)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the autoplay for this item."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the custom data for this item."
                    },
                    {
                        "name": "setItemId(int itemId)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the item ID for this item."
                    },
                    {
                        "name": "setMedia(MediaInfo mediaInfo)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the MediaInfo for this item."
                    },
                    {
                        "name": "setPlaybackDuration(double playbackDuration)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the playback duration for this item."
                    },
                    {
                        "name": "setPreloadTime(double preloadTime)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the preload time for this item."
                    },
                    {
                        "name": "setStartTime(double startTime)",
                        "return_type": "MediaQueueItemWriter",
                        "description": "Sets the start time for this item."
                    }
                ]
            },
            {
                "name": "MediaQueueManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaQueueManager",
                "description": "The class for manipulating the media queue which overrides the default queue translated from MediaSession.",
                "methods": [
                    {
                        "name": "autoGenerateItemId()",
                        "return_type": "int",
                        "description": "Allocate a new unique item ID."
                    },
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears all overrides in this MediaQueueManager."
                    },
                    {
                        "name": "getCurrentItemId()",
                        "return_type": "Integer",
                        "description": "Returns the current item ID to override in MediaStatus."
                    },
                    {
                        "name": "getMediaQueueData()",
                        "return_type": "MediaQueueData",
                        "description": "Returns the MediaQueueData that is being used to override in MediaStatus."
                    },
                    {
                        "name": "getQueueItems()",
                        "return_type": "List<MediaQueueItem>",
                        "description": "Returns the current list of items that is being used to override in MediaStatus."
                    },
                    {
                        "name": "getQueueRepeatMode()",
                        "return_type": "Integer",
                        "description": "Returns the queue repeat mode to override in MediaStatus."
                    },
                    {
                        "name": "notifyItemsChanged(List<Integer> itemIds)",
                        "return_type": "void",
                        "description": "Notifies that some items in the queue has changed."
                    },
                    {
                        "name": "notifyItemsInserted(List<Integer> itemIds, Integer insertBefore)",
                        "return_type": "void",
                        "description": "Notifies that items has been inserted into the queue."
                    },
                    {
                        "name": "notifyItemsRemoved(List<Integer> itemIds)",
                        "return_type": "void",
                        "description": "Notifies that items has been removed from the queue."
                    },
                    {
                        "name": "notifyQueueFullUpdate()",
                        "return_type": "void",
                        "description": "Notifies that the entire queue has been changed."
                    },
                    {
                        "name": "setCurrentItemId(Integer currentItemId)",
                        "return_type": "MediaQueueManager",
                        "description": "Sets the current item ID to override in MediaStatus."
                    },
                    {
                        "name": "setMediaQueueData(MediaQueueData queueData)",
                        "return_type": "MediaQueueManager",
                        "description": "Sets the MediaQueueData to override in MediaStatus."
                    },
                    {
                        "name": "setQueueItems(List<MediaQueueItem> queueItems)",
                        "return_type": "MediaQueueManager",
                        "description": "Sets the list of items to override the items in MediaStatus."
                    },
                    {
                        "name": "setQueueRepeatMode(Integer queueRepeatMode)",
                        "return_type": "MediaQueueManager",
                        "description": "Sets the queue repeat mode to override in MediaStatus."
                    },
                    {
                        "name": "setQueueStatusLimit(boolean limitQueueItemsInStatus)",
                        "return_type": "void",
                        "description": "Sets whether to limit the number of queue items to be reported in MediaStatus."
                    }
                ]
            },
            {
                "name": "MediaResumeSessionRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaResumeSessionRequestData",
                "description": "The data structure for a resume session request.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getSessionState()",
                        "return_type": "SessionState",
                        "description": "Returns the session state of the resume session request."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaStatusModifier",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaStatusModifier",
                "description": "The modifier to override the base MediaStatus auto-generated from MediaSession, and provide additional status that are not in MediaSession.",
                "methods": [
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears all overrides in the modifier."
                    },
                    {
                        "name": "getAdBreakStatus()",
                        "return_type": "AdBreakStatus",
                        "description": "Returns the AdBreakStatus to override."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data to override."
                    },
                    {
                        "name": "getIdleReason()",
                        "return_type": "Integer",
                        "description": "Returns the idle reason to override."
                    },
                    {
                        "name": "getLiveSeekableRange()",
                        "return_type": "MediaLiveSeekableRange",
                        "description": "Returns the MediaLiveSeekableRange to override."
                    },
                    {
                        "name": "getLoadingItemId()",
                        "return_type": "Integer",
                        "description": "Returns the ID of the current item being loaded to override."
                    },
                    {
                        "name": "getMediaInfoModifier()",
                        "return_type": "MediaInfoModifier",
                        "description": "Returns the MediaInfoModifier to override fields of the top-level MediaInfo."
                    },
                    {
                        "name": "getMediaTracksModifier()",
                        "return_type": "MediaTracksModifier",
                        "description": "Returns the MediaTracksModifier."
                    },
                    {
                        "name": "getPlaybackRate()",
                        "return_type": "Double",
                        "description": "Returns the playback rate to override."
                    },
                    {
                        "name": "getPlayerState()",
                        "return_type": "Integer",
                        "description": "Returns the player state to override."
                    },
                    {
                        "name": "getPreloadedItemId()",
                        "return_type": "Integer",
                        "description": "Returns the ID of the item that has been preloaded to override."
                    },
                    {
                        "name": "getStreamPosition()",
                        "return_type": "Long",
                        "description": "Returns the stream position to override."
                    },
                    {
                        "name": "getSupportedMediaCommandOverride()",
                        "return_type": "Map<Long,Boolean>",
                        "description": "Returns the supported media commands to override."
                    },
                    {
                        "name": "getVideoInfo()",
                        "return_type": "VideoInfo",
                        "description": "Returns the VideoInfo to override."
                    },
                    {
                        "name": "isPlayingAd()",
                        "return_type": "Boolean",
                        "description": "Returns whether the receiver is playing ad to override."
                    },
                    {
                        "name": "setAdBreakStatus(AdBreakStatus adBreakStatus)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the AdBreakStatus."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setIdleReason(Integer idleReason)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the idle reason to override the auto-generated value."
                    },
                    {
                        "name": "setIsPlayingAd(Boolean isPlayingAd)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets whether the receiver is playing ad."
                    },
                    {
                        "name": "setLiveSeekableRange(MediaLiveSeekableRange liveSeekableRange)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the MediaLiveSeekableRange."
                    },
                    {
                        "name": "setLoadingItemId(Integer loadingItemId)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the ID of the current item being loaded."
                    },
                    {
                        "name": "setMediaCommandSupported(long command, Boolean isSupported)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets an override to specify whether a media command is supported."
                    },
                    {
                        "name": "setMediaInfoModifier(MediaInfoModifier mediaInfoModifier)",
                        "return_type": "void",
                        "description": "Sets the MediaInfoModifier to override fields of the top-level MediaInfo."
                    },
                    {
                        "name": "setPlaybackRate(Double playbackRate)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the playback rate to override the auto-generated value."
                    },
                    {
                        "name": "setPlayerState(Integer playerState)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the player state to override the auto-generated value."
                    },
                    {
                        "name": "setPreloadedItemId(Integer preloadedItemId)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the ID of the item that has been preloaded."
                    },
                    {
                        "name": "setStreamPosition(Long streamPosition)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the stream position to override the auto-generated value."
                    },
                    {
                        "name": "setVideoInfo(VideoInfo videoInfo)",
                        "return_type": "MediaStatusModifier",
                        "description": "Sets the VideoInfo."
                    }
                ]
            },
            {
                "name": "MediaStatusWriter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaStatusWriter",
                "description": "The writer class to make modifications on a MediaStatus instance.",
                "methods": [
                    {
                        "name": "getMediaInfoWriter()",
                        "return_type": "MediaInfoWriter",
                        "description": "Returns a MediaInfoWriter to modify the MediaInfo in this MediaStatus."
                    },
                    {
                        "name": "getMediaStatus()",
                        "return_type": "MediaStatus",
                        "description": "Returns the wrapped MediaStatus object."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the list of active track IDs."
                    },
                    {
                        "name": "setAdBreakStatus(AdBreakStatus adBreakStatus)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the AdBreakStatus."
                    },
                    {
                        "name": "setCurrentItemId(int currentItemId)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the item ID of the item that that was active in the queue (it may not be playing"
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets any custom data that is associated with the media item."
                    },
                    {
                        "name": "setIdleReason(int idleReason)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the player state idle reason."
                    },
                    {
                        "name": "setIsPlayingAd(boolean isPlayingAd)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets whether an ad is playing on the receiver."
                    },
                    {
                        "name": "setLiveSeekableRange(MediaLiveSeekableRange liveSeekableRange)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the seekable range of a live stream."
                    },
                    {
                        "name": "setLoadingItemId(int loadingItemId)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the item ID of the item that is currently loading (but isn't active in the queue"
                    },
                    {
                        "name": "setMediaInfo(MediaInfo mediaInfo)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the MediaInfo for this item."
                    },
                    {
                        "name": "setMuteState(boolean muteState)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the stream's mute state."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the current stream playback rate."
                    },
                    {
                        "name": "setPlayerState(int playerState)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the current media player state."
                    },
                    {
                        "name": "setPreloadedItemId(int preloadedItemId)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the next item has been preloaded this returns the preloaded item ID."
                    },
                    {
                        "name": "setQueueData(MediaQueueData queueData)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the MediaQueueData."
                    },
                    {
                        "name": "setQueueItems(List<MediaQueueItem> queueItems)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the list of MediaQueueItem."
                    },
                    {
                        "name": "setQueueRepeatMode(int queueRepeatMode)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the repeat mode of the media queue."
                    },
                    {
                        "name": "setStreamPosition(long streamPosition)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the current stream position, in milliseconds."
                    },
                    {
                        "name": "setStreamVolume(double streamVolume)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the stream's volume."
                    },
                    {
                        "name": "setSupportedMediaCommands(long supportedMediaCommands)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the supported media commands."
                    },
                    {
                        "name": "setVideoInfo(VideoInfo videoInfo)",
                        "return_type": "MediaStatusWriter",
                        "description": "Sets the VideoInfo."
                    }
                ]
            },
            {
                "name": "MediaTracksModifier",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaTracksModifier",
                "description": "Modifier class for managing media tracks.",
                "methods": [
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears the active track IDs."
                    },
                    {
                        "name": "getActiveTrackIds()",
                        "return_type": "Set<Long>",
                        "description": "Returns the set of IDs of all tracks."
                    },
                    {
                        "name": "getActiveTracksByType(int type)",
                        "return_type": "List<MediaTrack>",
                        "description": "Returns the list of active media tracks of type."
                    },
                    {
                        "name": "getMediaTracks()",
                        "return_type": "List<MediaTrack>",
                        "description": "Returns the list of media tracks of the top-level MediaInfoModifier."
                    },
                    {
                        "name": "getMediaTracksByType(int type)",
                        "return_type": "List<MediaTrack>",
                        "description": "Returns the list of media tracks of type of the top-level MediaInfoModifier."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaTracksModifier",
                        "description": "Sets the list of active track IDs."
                    },
                    {
                        "name": "setActiveTracksByType(int type, Set<Long> newTrackIds)",
                        "return_type": "void",
                        "description": "Sets the active track IDs of type."
                    },
                    {
                        "name": "setActiveTracksByType(int type, List<MediaTrack> newActiveTracks)",
                        "return_type": "void",
                        "description": "Sets the active tracks for of type."
                    }
                ]
            },
            {
                "name": "QueueInsertRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/QueueInsertRequestData",
                "description": "Data structure for queue insert command requests.",
                "methods": [
                    {
                        "name": "getCurrentItemId()",
                        "return_type": "Integer",
                        "description": "ID of the current media item after the insertion (if null, the currentItem value should be the same as before the insertion"
                    },
                    {
                        "name": "getCurrentItemIndex()",
                        "return_type": "Integer",
                        "description": "Index (relative to the items array, starting with 0"
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "Long",
                        "description": "Milliseconds since the beginning of content to start playback of the current item."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getInsertBefore()",
                        "return_type": "Integer",
                        "description": "ID of the item that will be located immediately after the inserted list."
                    },
                    {
                        "name": "getItems()",
                        "return_type": "List<MediaQueueItem>",
                        "description": "List of queue items."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "QueueRemoveRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/QueueRemoveRequestData",
                "description": "Data structure for queue remove command requests.",
                "methods": [
                    {
                        "name": "getCurrentItemId()",
                        "return_type": "Integer",
                        "description": "ID of the current media item after the deletion."
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "Long",
                        "description": "Milliseconds since the beginning of content to start playback of the current item."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getItemIds()",
                        "return_type": "List<Integer>",
                        "description": "IDs of queue items to be deleted."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "QueueReorderRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/QueueReorderRequestData",
                "description": "Data structure for queue reorder command requests.",
                "methods": [
                    {
                        "name": "getCurrentItemId()",
                        "return_type": "Integer",
                        "description": "ID of the current media item after the reorder (if null, the currentItem value will be the same as before the reorder"
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "Long",
                        "description": "Milliseconds since the beginning of content to start playback of the current item."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getInsertBefore()",
                        "return_type": "Integer",
                        "description": "ID of the item that will be located immediately after the reordered list."
                    },
                    {
                        "name": "getItemIds()",
                        "return_type": "List<Integer>",
                        "description": "IDs of the items to be reordered, in the new order."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "QueueUpdateRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/QueueUpdateRequestData",
                "description": "Data structure for queue update command requests.",
                "methods": [
                    {
                        "name": "getCurrentItemId()",
                        "return_type": "Integer",
                        "description": "ID of the current media item after the changes."
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "Long",
                        "description": "Milliseconds since the beginning of content to start playback of the current item."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getItems()",
                        "return_type": "List<MediaQueueItem>",
                        "description": "List of queue items to be updated."
                    },
                    {
                        "name": "getJump()",
                        "return_type": "Integer",
                        "description": "Skip/Go back jump number of items with respect to the position of current item (it can be negative"
                    },
                    {
                        "name": "getRepeatMode()",
                        "return_type": "Integer",
                        "description": "Behavior of the queue when all items have been played."
                    },
                    {
                        "name": "getShuffle()",
                        "return_type": "Boolean",
                        "description": "Shuffle the queue items when the update is processed."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SeekRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/SeekRequestData",
                "description": "Data structure for seek command requests.",
                "methods": [
                    {
                        "name": "getCurrentTime()",
                        "return_type": "Long",
                        "description": "Returns the absolute time to seek to, in milliseconds."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getRelativeTime()",
                        "return_type": "Long",
                        "description": "Returns the time to seek to, relative to the current position, in milliseconds."
                    },
                    {
                        "name": "getResumeState()",
                        "return_type": "int",
                        "description": "Returns the resume state."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SetPlaybackRateRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/SetPlaybackRateRequestData",
                "description": "Data structure for set playback rate command requests.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getPlaybackRate()",
                        "return_type": "Double",
                        "description": "Returns the new playback rate."
                    },
                    {
                        "name": "getRelativePlaybackRate()",
                        "return_type": "Double",
                        "description": "Returns the new playback rate relative to current playback rate."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StoreSessionRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/StoreSessionRequestData",
                "description": "Request data for storing session state for stream transfer.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StoreSessionResponseData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/StoreSessionResponseData",
                "description": "The response data for STORE_SESSION events.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getSessionState()",
                        "return_type": "SessionState",
                        "description": "Returns the session state."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StoreSessionResponseData.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/StoreSessionResponseData.Builder",
                "description": "Builder of StoreSessionResponseData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StoreSessionResponseData",
                        "description": "Builds a StoreSessionResponseData."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "StoreSessionResponseData.Builder",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setSessionState(SessionState sessionState)",
                        "return_type": "StoreSessionResponseData.Builder",
                        "description": "Sets the session state."
                    }
                ]
            },
            {
                "name": "UserActionRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/UserActionRequestData",
                "description": "Data structure for user action requests in command and command namespace.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data."
                    },
                    {
                        "name": "getUserAction()",
                        "return_type": "String",
                        "description": "Returns the user action."
                    },
                    {
                        "name": "getUserActionContext()",
                        "return_type": "String",
                        "description": "Returns the context of user action."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaManager.MediaStatusInterceptor",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaManager.MediaStatusInterceptor",
                "description": "Interceptor interface for MediaStatus.",
                "methods": [
                    {
                        "name": "intercept(MediaStatusWriter mediaStatusWriter)",
                        "return_type": "abstract void",
                        "description": "Intercepts a MediaStatus to modify it right before it's being broadcasted."
                    }
                ]
            },
            {
                "name": "MediaManager.MediaStatusInterceptor",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/MediaManager.MediaStatusInterceptor",
                "description": "Interceptor interface for MediaStatus.",
                "methods": [
                    {
                        "name": "intercept(MediaStatusWriter mediaStatusWriter)",
                        "return_type": "abstract void",
                        "description": "Intercepts a MediaStatus to modify it right before it's being broadcasted."
                    }
                ]
            },
            {
                "name": "StoreSessionResponseData.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/tv/media/StoreSessionResponseData.Builder",
                "description": "Builder of StoreSessionResponseData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StoreSessionResponseData",
                        "description": "Builds a StoreSessionResponseData."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "StoreSessionResponseData.Builder",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setSessionState(SessionState sessionState)",
                        "return_type": "StoreSessionResponseData.Builder",
                        "description": "Sets the session state."
                    }
                ]
            }
        ]
    },
    {
        "name": "analytics",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/analytics/package-summary",
        "classes": [
            {
                "name": "AnalyticsJobService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/AnalyticsJobService",
                "description": "A JobService used by Google Analytics.",
                "methods": [
                    {
                        "name": "callServiceStopSelfResult(int startId)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onStartJob(JobParameters params)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onStopJob(JobParameters params)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AnalyticsReceiver",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/AnalyticsReceiver",
                "description": "A BroadcastReceiver used by Google Analytics.",
                "methods": [
                    {
                        "name": "onReceive(Context context, Intent intent)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AnalyticsService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/AnalyticsService",
                "description": "A Service used by Google Analytics.",
                "methods": [
                    {
                        "name": "callServiceStopSelfResult(int startId)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CampaignTrackingReceiver",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/CampaignTrackingReceiver",
                "description": "Google Analytics receiver for com.android.vending.INSTALL_REFERRER.",
                "methods": [
                    {
                        "name": "onReceive(Context context, Intent intent)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CampaignTrackingService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/CampaignTrackingService",
                "description": "This class was deprecated. Campaign tracking happens in CampaignTrackingReceiver only.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExceptionReporter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/ExceptionReporter",
                "description": "Used to catch any uncaught exceptions and report them to Google Analytics.",
                "methods": [
                    {
                        "name": "getExceptionParser()",
                        "return_type": "ExceptionParser",
                        "description": ""
                    },
                    {
                        "name": "setExceptionParser(ExceptionParser exceptionParser)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "uncaughtException(Thread t, Throwable e)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleAnalytics",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/GoogleAnalytics",
                "description": "The top level Google Analytics singleton that provides methods for configuring Google Analytics and creating Tracker objects.",
                "methods": [
                    {
                        "name": "dispatchLocalHits()",
                        "return_type": "void",
                        "description": "Dispatches hits queued in the application store (views, events, or transactions"
                    },
                    {
                        "name": "enableAutoActivityReports(Application application)",
                        "return_type": "void",
                        "description": "On devices running API level 14 (ICE_CREAM_SANDWICH"
                    },
                    {
                        "name": "getAppOptOut()",
                        "return_type": "boolean",
                        "description": "Returns whether the state of the application-level opt is on."
                    },
                    {
                        "name": "getInstance(Context context)",
                        "return_type": "staticGoogleAnalytics",
                        "description": "Gets the GoogleAnalytics instance, creating it when necessary."
                    },
                    {
                        "name": "getLogger()",
                        "return_type": "Logger",
                        "description": "This method was deprecated. Logger interface is deprecated. See Logger interface for details."
                    },
                    {
                        "name": "isDryRunEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether dry run mode is on."
                    },
                    {
                        "name": "newTracker(String trackingId)",
                        "return_type": "Tracker",
                        "description": "Returns a Tracker instance with the given trackingId."
                    },
                    {
                        "name": "newTracker(int configResId)",
                        "return_type": "Tracker",
                        "description": "Returns a Tracker instance preconfigured with the values specified in configResId."
                    },
                    {
                        "name": "reportActivityStart(Activity activity)",
                        "return_type": "void",
                        "description": "Report the start of an Activity, so that it can be tracked by any Trackers that have enabled auto activity tracking (see enableAutoActivityTracking(boolean"
                    },
                    {
                        "name": "reportActivityStop(Activity activity)",
                        "return_type": "void",
                        "description": "Report the end of an Activity."
                    },
                    {
                        "name": "setAppOptOut(boolean optOut)",
                        "return_type": "void",
                        "description": "Sets or resets the application-level opt out flag."
                    },
                    {
                        "name": "setDryRun(boolean dryRun)",
                        "return_type": "void",
                        "description": "Toggles dry run mode."
                    },
                    {
                        "name": "setLocalDispatchPeriod(int dispatchPeriodInSeconds)",
                        "return_type": "void",
                        "description": "Sets dispatch period for the local dispatcher."
                    },
                    {
                        "name": "setLogger(Logger logger)",
                        "return_type": "void",
                        "description": "This method was deprecated. Logger interface is deprecated. See Logger interface for details."
                    }
                ]
            },
            {
                "name": "HitBuilders",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders",
                "description": "Helper class to build a map of hit parameters and values.",
                "methods": []
            },
            {
                "name": "HitBuilders.AppViewBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.AppViewBuilder",
                "description": "This class was deprecated. This class has been deprecated in favor of the new ScreenViewBuilder class. The two classes are semantically similar but the latter is consistent across all the Google Analytics platforms.",
                "methods": []
            },
            {
                "name": "HitBuilders.EventBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.EventBuilder",
                "description": "A Builder object to build event hits.",
                "methods": [
                    {
                        "name": "setAction(String action)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    },
                    {
                        "name": "setCategory(String category)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    },
                    {
                        "name": "setLabel(String label)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    },
                    {
                        "name": "setValue(long value)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.ExceptionBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.ExceptionBuilder",
                "description": "Exception builder allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your app.",
                "methods": [
                    {
                        "name": "setDescription(String description)",
                        "return_type": "HitBuilders.ExceptionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setFatal(boolean fatal)",
                        "return_type": "HitBuilders.ExceptionBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.HitBuilder<T extendsHitBuilder>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.HitBuilder",
                "description": "Internal class to provide common builder class methods.",
                "methods": [
                    {
                        "name": "addImpression(Product product, String impressionList)",
                        "return_type": "T",
                        "description": "Adds a product impression to the hit."
                    },
                    {
                        "name": "addProduct(Product product)",
                        "return_type": "T",
                        "description": "Adds product information to be sent with a given hit."
                    },
                    {
                        "name": "addPromotion(Promotion promotion)",
                        "return_type": "T",
                        "description": "Adds promotion related information to the hit."
                    },
                    {
                        "name": "build()",
                        "return_type": "Map<String,String>",
                        "description": "Builds a Map of parameters and values that can be set on the Tracker object."
                    },
                    {
                        "name": "set(String paramName, String paramValue)",
                        "return_type": "final T",
                        "description": "Sets the value for the given parameter name."
                    },
                    {
                        "name": "setAll(Map<String, String> params)",
                        "return_type": "final T",
                        "description": "Adds a set of key, value pairs to the hit builder."
                    },
                    {
                        "name": "setCampaignParamsFromUrl(String utmParams)",
                        "return_type": "T",
                        "description": "Parses and translates utm campaign parameters to analytics campaign parameters and returns them as a map."
                    },
                    {
                        "name": "setCustomDimension(int index, String dimension)",
                        "return_type": "T",
                        "description": "Adds a custom dimension to the current hit builder."
                    },
                    {
                        "name": "setCustomMetric(int index, float metric)",
                        "return_type": "T",
                        "description": "Adds a custom metric to the current hit builder."
                    },
                    {
                        "name": "setNewSession()",
                        "return_type": "T",
                        "description": ""
                    },
                    {
                        "name": "setNonInteraction(boolean nonInteraction)",
                        "return_type": "T",
                        "description": ""
                    },
                    {
                        "name": "setProductAction(ProductAction action)",
                        "return_type": "T",
                        "description": "Sets a product action for all the products included in this hit."
                    },
                    {
                        "name": "setPromotionAction(String action)",
                        "return_type": "T",
                        "description": "Adds an action associated with the promotions in a given hit."
                    }
                ]
            },
            {
                "name": "HitBuilders.ItemBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.ItemBuilder",
                "description": "This class was deprecated. This class has been deprecated in favor of a richer set of APIs on all the HitBuilder classes. With the new approach, simply use addProduct, addImpression, addPromo and setAction to add ecommerce data to any of the hits.",
                "methods": [
                    {
                        "name": "setCategory(String category)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setCurrencyCode(String currencyCode)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setPrice(double price)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setQuantity(long quantity)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setSku(String sku)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTransactionId(String transactionid)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.ScreenViewBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.ScreenViewBuilder",
                "description": "Class to build a screen view hit.",
                "methods": []
            },
            {
                "name": "HitBuilders.SocialBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.SocialBuilder",
                "description": "A Builder object to build social event hits.",
                "methods": [
                    {
                        "name": "setAction(String action)",
                        "return_type": "HitBuilders.SocialBuilder",
                        "description": ""
                    },
                    {
                        "name": "setNetwork(String network)",
                        "return_type": "HitBuilders.SocialBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTarget(String target)",
                        "return_type": "HitBuilders.SocialBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.TimingBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.TimingBuilder",
                "description": "Hit builder used to collect timing related data.",
                "methods": [
                    {
                        "name": "setCategory(String category)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    },
                    {
                        "name": "setLabel(String label)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    },
                    {
                        "name": "setValue(long value)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    },
                    {
                        "name": "setVariable(String variable)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.TransactionBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.TransactionBuilder",
                "description": "This class was deprecated. This class has been deprecated in favor of a richer set of APIs on all the HitBuilder classes. With the new approach, simply use addProduct, addImpression, addPromo and setAction to add ecommerce data to any of the hits.",
                "methods": [
                    {
                        "name": "setAffiliation(String affiliation)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setCurrencyCode(String currencyCode)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setRevenue(double revenue)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setShipping(double shipping)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTax(double tax)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTransactionId(String transactionid)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Logger.LogLevel",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/Logger.LogLevel",
                "description": "This class was deprecated. See Logger interface for details.",
                "methods": []
            },
            {
                "name": "StandardExceptionParser",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/StandardExceptionParser",
                "description": "This class will capture the root cause (last in a chain of causes) Throwable and report the exception type, class name, method name and thread name.",
                "methods": [
                    {
                        "name": "getDescription(String threadName, Throwable t)",
                        "return_type": "String",
                        "description": "Return a short description of a Throwable suitable for reporting to Google Analytics."
                    },
                    {
                        "name": "setIncludedPackages(Context context, Collection<String> additionalPackages)",
                        "return_type": "void",
                        "description": "Sets the list of packages considered relevant to the list of packages in the Context and the list of packages provided in the input parameter additionalPackages."
                    }
                ]
            },
            {
                "name": "Tracker",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/Tracker",
                "description": "Composes and sends hits to Google Analytics.",
                "methods": [
                    {
                        "name": "enableAdvertisingIdCollection(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets whether the advertising id and ad targeting preference should be collected while sending hits to GA servers."
                    },
                    {
                        "name": "enableAutoActivityTracking(boolean enabled)",
                        "return_type": "void",
                        "description": "Specify whether Activity starts should automatically generate screen views from this Tracker."
                    },
                    {
                        "name": "enableExceptionReporting(boolean enable)",
                        "return_type": "void",
                        "description": "Enables or disables uncaught exception reporting for a given tracker."
                    },
                    {
                        "name": "get(String key)",
                        "return_type": "String",
                        "description": "Gets the model value for the given key."
                    },
                    {
                        "name": "send(Map<String, String> params)",
                        "return_type": "void",
                        "description": "Merges the model values set on this Tracker via send(Map"
                    },
                    {
                        "name": "set(String key, String value)",
                        "return_type": "void",
                        "description": "Sets the model value for the given key."
                    },
                    {
                        "name": "setAnonymizeIp(boolean anonymize)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setAppId(String appId)",
                        "return_type": "void",
                        "description": "Sets the id of the App for analytics reports."
                    },
                    {
                        "name": "setAppInstallerId(String appInstallerId)",
                        "return_type": "void",
                        "description": "Sets the Installer Id of the App for analytics reports."
                    },
                    {
                        "name": "setAppName(String appName)",
                        "return_type": "void",
                        "description": "Sets the name of the App for analytics reports."
                    },
                    {
                        "name": "setAppVersion(String appVersion)",
                        "return_type": "void",
                        "description": "Sets the version identifier of the App for analytics reports."
                    },
                    {
                        "name": "setCampaignParamsOnNextHit(Uri uri)",
                        "return_type": "void",
                        "description": "Includes the campaign parameters contained in the URI referrer in the next hit."
                    },
                    {
                        "name": "setClientId(String clientId)",
                        "return_type": "void",
                        "description": "Sets a particular client Id for the device."
                    },
                    {
                        "name": "setEncoding(String encoding)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setHostname(String hostname)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setLanguage(String language)",
                        "return_type": "void",
                        "description": "Sets the language based on user's preferred locale."
                    },
                    {
                        "name": "setLocation(String location)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setPage(String page)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setReferrer(String referrer)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setSampleRate(double sampleRate)",
                        "return_type": "void",
                        "description": "Set the sample rate for all hits generated by the app."
                    },
                    {
                        "name": "setScreenColors(String screenColors)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setScreenName(String screenName)",
                        "return_type": "void",
                        "description": "Set the screen name to be associated with all subsequent hits."
                    },
                    {
                        "name": "setScreenResolution(int width, int height)",
                        "return_type": "void",
                        "description": "Sets the screen resolution of the device."
                    },
                    {
                        "name": "setSessionTimeout(long sessionTimeout)",
                        "return_type": "void",
                        "description": "Specify the time (in seconds"
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setUseSecure(boolean useSecure)",
                        "return_type": "void",
                        "description": "Sets whether hits should be sent securely over https."
                    },
                    {
                        "name": "setViewportSize(String viewportSize)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExceptionParser",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/analytics/ExceptionParser",
                "description": "This interface is responsible for parsing a Throwable and providing a short, meaningful description to report to Google Analytics.",
                "methods": [
                    {
                        "name": "getDescription(String threadName, Throwable t)",
                        "return_type": "abstractString",
                        "description": "Return a short description of a Throwable suitable for reporting to Google Analytics."
                    }
                ]
            },
            {
                "name": "Logger",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/analytics/Logger",
                "description": "This interface was deprecated. Logger interface is deprecated. Use adb shell setprop log.tag.GAv4 DEBUG to enable debug logging for Google Analytics.",
                "methods": [
                    {
                        "name": "error(Exception exception)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. See Logger interface for details."
                    },
                    {
                        "name": "error(String message)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. See Logger interface for details."
                    },
                    {
                        "name": "getLogLevel()",
                        "return_type": "abstract int",
                        "description": "This method was deprecated. See Logger interface for details."
                    },
                    {
                        "name": "info(String message)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. See Logger interface for details."
                    },
                    {
                        "name": "setLogLevel(int level)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. See Logger interface for details."
                    },
                    {
                        "name": "verbose(String message)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. See Logger interface for details."
                    },
                    {
                        "name": "warn(String message)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. See Logger interface for details."
                    }
                ]
            },
            {
                "name": "HitBuilders.AppViewBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.AppViewBuilder",
                "description": "This class was deprecated. This class has been deprecated in favor of the new ScreenViewBuilder class. The two classes are semantically similar but the latter is consistent across all the Google Analytics platforms.",
                "methods": []
            },
            {
                "name": "HitBuilders.EventBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.EventBuilder",
                "description": "A Builder object to build event hits.",
                "methods": [
                    {
                        "name": "setAction(String action)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    },
                    {
                        "name": "setCategory(String category)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    },
                    {
                        "name": "setLabel(String label)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    },
                    {
                        "name": "setValue(long value)",
                        "return_type": "HitBuilders.EventBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.ExceptionBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.ExceptionBuilder",
                "description": "Exception builder allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your app.",
                "methods": [
                    {
                        "name": "setDescription(String description)",
                        "return_type": "HitBuilders.ExceptionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setFatal(boolean fatal)",
                        "return_type": "HitBuilders.ExceptionBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.HitBuilder<T extends HitBuilder>",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.HitBuilder<T extends HitBuilder>",
                "description": "Internal class to provide common builder class methods.",
                "methods": []
            },
            {
                "name": "HitBuilders.ItemBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.ItemBuilder",
                "description": "This class was deprecated. This class has been deprecated in favor of a richer set of APIs on all the HitBuilder classes. With the new approach, simply use addProduct, addImpression, addPromo and setAction to add ecommerce data to any of the hits.",
                "methods": [
                    {
                        "name": "setCategory(String category)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setCurrencyCode(String currencyCode)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setPrice(double price)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setQuantity(long quantity)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setSku(String sku)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTransactionId(String transactionid)",
                        "return_type": "HitBuilders.ItemBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.ScreenViewBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.ScreenViewBuilder",
                "description": "Class to build a screen view hit.",
                "methods": []
            },
            {
                "name": "HitBuilders.SocialBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.SocialBuilder",
                "description": "A Builder object to build social event hits.",
                "methods": [
                    {
                        "name": "setAction(String action)",
                        "return_type": "HitBuilders.SocialBuilder",
                        "description": ""
                    },
                    {
                        "name": "setNetwork(String network)",
                        "return_type": "HitBuilders.SocialBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTarget(String target)",
                        "return_type": "HitBuilders.SocialBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.TimingBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.TimingBuilder",
                "description": "Hit builder used to collect timing related data.",
                "methods": [
                    {
                        "name": "setCategory(String category)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    },
                    {
                        "name": "setLabel(String label)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    },
                    {
                        "name": "setValue(long value)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    },
                    {
                        "name": "setVariable(String variable)",
                        "return_type": "HitBuilders.TimingBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HitBuilders.TransactionBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/HitBuilders.TransactionBuilder",
                "description": "This class was deprecated. This class has been deprecated in favor of a richer set of APIs on all the HitBuilder classes. With the new approach, simply use addProduct, addImpression, addPromo and setAction to add ecommerce data to any of the hits.",
                "methods": [
                    {
                        "name": "setAffiliation(String affiliation)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setCurrencyCode(String currencyCode)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setRevenue(double revenue)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setShipping(double shipping)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTax(double tax)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    },
                    {
                        "name": "setTransactionId(String transactionid)",
                        "return_type": "HitBuilders.TransactionBuilder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Logger.LogLevel",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/analytics/Logger.LogLevel",
                "description": "This class was deprecated. See Logger interface for details.",
                "methods": []
            }
        ]
    },
    {
        "name": "images",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/common/images/package-summary",
        "classes": [
            {
                "name": "ImageManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/images/ImageManager",
                "description": "This class is used to load images from the network and handles local caching for you.",
                "methods": [
                    {
                        "name": "create(Context context)",
                        "return_type": "staticImageManager",
                        "description": "Returns a new ImageManager for loading images from the network."
                    },
                    {
                        "name": "loadImage(ImageView imageView, Uri uri, int defaultResId)",
                        "return_type": "void",
                        "description": "Loads an image to display from a URI, using the given resource ID as the default if no image is found for the given URI."
                    },
                    {
                        "name": "loadImage(ImageManager.OnImageLoadedListener listener, Uri uri)",
                        "return_type": "void",
                        "description": "Load an image to display from a URI."
                    },
                    {
                        "name": "loadImage(ImageView imageView, int resId)",
                        "return_type": "void",
                        "description": "Loads an image to display from the given resource ID."
                    },
                    {
                        "name": "loadImage(ImageManager.OnImageLoadedListener listener, Uri uri, int defaultResId)",
                        "return_type": "void",
                        "description": "Load an image to display from a URI, using the given resource ID as the default if no image is found for the given URI."
                    },
                    {
                        "name": "loadImage(ImageView imageView, Uri uri)",
                        "return_type": "void",
                        "description": "Loads an image to display from a URI."
                    }
                ]
            },
            {
                "name": "Size",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/images/Size",
                "description": "Immutable class for describing width and height dimensions in pixels.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": "Check if this size is equal to another size."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "int",
                        "description": "Get the height of the size (in pixels"
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "int",
                        "description": "Get the width of the size (in pixels"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "parseSize(String string)",
                        "return_type": "staticSize",
                        "description": "Parses the specified string as a size value."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Return the size represented as a string with the format \"WxH"
                    }
                ]
            },
            {
                "name": "WebImage",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/images/WebImage",
                "description": "A class that represents an image that is located on a web server.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "int",
                        "description": "Gets the image height, in pixels."
                    },
                    {
                        "name": "getUrl()",
                        "return_type": "Uri",
                        "description": "Gets the image URL."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "int",
                        "description": "Gets the image width, in pixels."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a string representation of this object."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ImageManager.OnImageLoadedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/images/ImageManager.OnImageLoadedListener",
                "description": "Listener interface for handling when the image for a particular URI has been loaded.",
                "methods": [
                    {
                        "name": "onImageLoaded(Uri uri, Drawable drawable, boolean isRequestedDrawable)",
                        "return_type": "abstract void",
                        "description": "Listener method invoked when an image has been loaded."
                    }
                ]
            },
            {
                "name": "ImageManager.OnImageLoadedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/images/ImageManager.OnImageLoadedListener",
                "description": "Listener interface for handling when the image for a particular URI has been loaded.",
                "methods": [
                    {
                        "name": "onImageLoaded(Uri uri, Drawable drawable, boolean isRequestedDrawable)",
                        "return_type": "abstract void",
                        "description": "Listener method invoked when an image has been loaded."
                    }
                ]
            }
        ]
    },
    {
        "name": "ecommerce",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/analytics/ecommerce/package-summary",
        "classes": [
            {
                "name": "Product",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/ecommerce/Product",
                "description": "Class to construct product related information for a Google Analytics hit.",
                "methods": [
                    {
                        "name": "setBrand(String value)",
                        "return_type": "Product",
                        "description": "Sets the brand associated with the product in GA reports."
                    },
                    {
                        "name": "setCategory(String value)",
                        "return_type": "Product",
                        "description": "Sets the category associated with the product in GA reports."
                    },
                    {
                        "name": "setCouponCode(String value)",
                        "return_type": "Product",
                        "description": "Sets the coupon code associated with the product."
                    },
                    {
                        "name": "setCustomDimension(int index, String value)",
                        "return_type": "Product",
                        "description": "Sets the custom dimensions associated with the product."
                    },
                    {
                        "name": "setCustomMetric(int index, int value)",
                        "return_type": "Product",
                        "description": "Sets the custom metrics associated with the product."
                    },
                    {
                        "name": "setId(String value)",
                        "return_type": "Product",
                        "description": "Sets the id that is used to identify a product in GA reports."
                    },
                    {
                        "name": "setName(String value)",
                        "return_type": "Product",
                        "description": "Sets the name that is used to identify the product in GA reports."
                    },
                    {
                        "name": "setPosition(int value)",
                        "return_type": "Product",
                        "description": "Sets the position of the product on the page/product impression list etc."
                    },
                    {
                        "name": "setPrice(double value)",
                        "return_type": "Product",
                        "description": "Sets the price of the product."
                    },
                    {
                        "name": "setQuantity(int value)",
                        "return_type": "Product",
                        "description": "Sets the quantity of the product."
                    },
                    {
                        "name": "setVariant(String value)",
                        "return_type": "Product",
                        "description": "Sets the variant of the product."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ProductAction",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/ecommerce/ProductAction",
                "description": "Class to construct transaction/checkout or other product interaction related information for a Google Analytics hit.",
                "methods": [
                    {
                        "name": "setCheckoutOptions(String value)",
                        "return_type": "ProductAction",
                        "description": "Sets the label associated with the checkout."
                    },
                    {
                        "name": "setCheckoutStep(int value)",
                        "return_type": "ProductAction",
                        "description": "Sets the checkout processes's progress."
                    },
                    {
                        "name": "setProductActionList(String value)",
                        "return_type": "ProductAction",
                        "description": "Sets the list name associated with the products in the analytics hit."
                    },
                    {
                        "name": "setProductListSource(String value)",
                        "return_type": "ProductAction",
                        "description": "Sets the list source name associated with the products in the analytics hit."
                    },
                    {
                        "name": "setTransactionAffiliation(String value)",
                        "return_type": "ProductAction",
                        "description": "Sets the transaction's affiliation value."
                    },
                    {
                        "name": "setTransactionCouponCode(String value)",
                        "return_type": "ProductAction",
                        "description": "Sets the coupon code used in a transaction."
                    },
                    {
                        "name": "setTransactionId(String value)",
                        "return_type": "ProductAction",
                        "description": "The unique id associated with the transaction."
                    },
                    {
                        "name": "setTransactionRevenue(double value)",
                        "return_type": "ProductAction",
                        "description": "Sets the transaction's total revenue."
                    },
                    {
                        "name": "setTransactionShipping(double value)",
                        "return_type": "ProductAction",
                        "description": "Sets the transaction's shipping costs."
                    },
                    {
                        "name": "setTransactionTax(double value)",
                        "return_type": "ProductAction",
                        "description": "Sets the transaction's total tax."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Promotion",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/analytics/ecommerce/Promotion",
                "description": "Class to construct promotion related fields for Google Analytics hits.",
                "methods": [
                    {
                        "name": "setCreative(String value)",
                        "return_type": "Promotion",
                        "description": "Sets the name of the creative associated with the promotion."
                    },
                    {
                        "name": "setId(String value)",
                        "return_type": "Promotion",
                        "description": "Sets the id that is used to identify a promotion in GA reports."
                    },
                    {
                        "name": "setName(String value)",
                        "return_type": "Promotion",
                        "description": "Sets the name that is used to identify the promotion in GA reports."
                    },
                    {
                        "name": "setPosition(String value)",
                        "return_type": "Promotion",
                        "description": "Sets the position of the promotion."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "initialization",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/initialization/package-summary",
        "classes": [
            {
                "name": "AdapterStatus",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/initialization/AdapterStatus",
                "description": "An immutable snapshot of a mediation adapter's initialization status.",
                "methods": [
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "Detailed description of the status."
                    },
                    {
                        "name": "getInitializationState()",
                        "return_type": "abstractAdapterStatus.State",
                        "description": "Gets the adapter's initialization state."
                    },
                    {
                        "name": "getLatency()",
                        "return_type": "abstract int",
                        "description": "The adapter's initialization latency in milliseconds."
                    }
                ]
            },
            {
                "name": "InitializationStatus",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/initialization/InitializationStatus",
                "description": "The status of the SDK initialization.",
                "methods": [
                    {
                        "name": "getAdapterStatusMap()",
                        "return_type": "abstractMap<String,AdapterStatus>",
                        "description": "Initialization status of each known ad network, keyed by its adapter's class name."
                    }
                ]
            },
            {
                "name": "OnInitializationCompleteListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/initialization/OnInitializationCompleteListener",
                "description": "Listener that returns the status of SDK initialization upon initialization completion.",
                "methods": [
                    {
                        "name": "onInitializationComplete(InitializationStatus status)",
                        "return_type": "abstract void",
                        "description": "Called when the SDK initialization is complete."
                    }
                ]
            },
            {
                "name": "AdapterStatus.State",
                "type_obj": "enum",
                "link": "/android/reference/com/google/android/gms/ads/initialization/AdapterStatus.State",
                "description": "The initialization state of the mediation adapter.",
                "methods": []
            }
        ]
    },
    {
        "name": "rewardedinterstitial",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/rewardedinterstitial/package-summary",
        "classes": [
            {
                "name": "RewardedInterstitialAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/rewardedinterstitial/RewardedInterstitialAd",
                "description": "Rewarded interstitials are full screen ads that reward users and can be shown without a user opt in.",
                "methods": [
                    {
                        "name": "getAdMetadata()",
                        "return_type": "abstractBundle",
                        "description": "Gets all available ad metadata for this RewardedInterstitialAd."
                    },
                    {
                        "name": "getAdUnitId()",
                        "return_type": "abstractString",
                        "description": "Returns the ad unit ID."
                    },
                    {
                        "name": "getFullScreenContentCallback()",
                        "return_type": "abstractFullScreenContentCallback",
                        "description": "Gets the FullScreenContentCallback for this RewardedInterstitialAd."
                    },
                    {
                        "name": "getOnAdMetadataChangedListener()",
                        "return_type": "abstractOnAdMetadataChangedListener",
                        "description": "Gets the OnAdMetadataChangedListener for this RewardedInterstitialAd."
                    },
                    {
                        "name": "getOnPaidEventListener()",
                        "return_type": "abstractOnPaidEventListener",
                        "description": "Gets the OnPaidEventListener for this RewardedInterstitialAd."
                    },
                    {
                        "name": "getResponseInfo()",
                        "return_type": "abstractResponseInfo",
                        "description": "Returns information about the loaded ad."
                    },
                    {
                        "name": "getRewardItem()",
                        "return_type": "abstractRewardItem",
                        "description": "Gets reward item for the loaded rewarded interstitial ad."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdRequest adRequest, RewardedInterstitialAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads a RewardedInterstitialAd."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdManagerAdRequest adManagerAdRequest, RewardedInterstitialAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads a RewardedInterstitialAd."
                    },
                    {
                        "name": "setFullScreenContentCallback(FullScreenContentCallback fullScreenContentCallback)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when ads show and dismiss full screen content."
                    },
                    {
                        "name": "setImmersiveMode(boolean immersiveModeEnabled)",
                        "return_type": "abstract void",
                        "description": "Sets a flag that controls if this rewarded interstitial ad object will be displayed in immersive mode."
                    },
                    {
                        "name": "setOnAdMetadataChangedListener(OnAdMetadataChangedListener listener)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when the rewarded interstitial ad's metadata changes."
                    },
                    {
                        "name": "setOnPaidEventListener(OnPaidEventListener listener)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when this ad is estimated to have earned money."
                    },
                    {
                        "name": "setServerSideVerificationOptions(ServerSideVerificationOptions options)",
                        "return_type": "abstract void",
                        "description": "Sets ServerSideVerificationOptions for this rewarded interstitial ad."
                    },
                    {
                        "name": "show(Activity activity, OnUserEarnedRewardListener onUserEarnedRewardListener)",
                        "return_type": "abstract void",
                        "description": "Shows the rewarded interstitial ad."
                    }
                ]
            },
            {
                "name": "RewardedInterstitialAdLoadCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/rewardedinterstitial/RewardedInterstitialAdLoadCallback",
                "description": "Callback to be invoked when a rewarded interstitial ad finishes loading.",
                "methods": []
            }
        ]
    },
    {
        "name": "data",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fitness/data/package-summary",
        "classes": [
            {
                "name": "BleDevice",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/BleDevice",
                "description": "This class is deprecated. Use BluetoothManager directly.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAddress()",
                        "return_type": "String",
                        "description": "Returns the address of the BLE device, from getAddress("
                    },
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns all of the Fitness Platform data types supported by the device's supported profiles."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the name of the BLE device, from getName("
                    },
                    {
                        "name": "getSupportedProfiles()",
                        "return_type": "List<String>",
                        "description": "Returns a list of supported GATT Profile Specification Types for the device which are also supported by the Fitness Platform."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Bucket",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Bucket",
                "description": "A bucket represents a time interval over which aggregated data is computed.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActivity()",
                        "return_type": "String",
                        "description": "Returns the activity of the bucket if bucketing by activity was requested, or UNKNOWN otherwise."
                    },
                    {
                        "name": "getBucketType()",
                        "return_type": "int",
                        "description": "Returns the type of the bucket."
                    },
                    {
                        "name": "getDataSet(DataType dataType)",
                        "return_type": "DataSet",
                        "description": "Returns the data set of requested data type over the time interval of the bucket."
                    },
                    {
                        "name": "getDataSets()",
                        "return_type": "List<DataSet>",
                        "description": "Returns the requested data sets over the time interval of the bucket."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time of the bucket, in the given time unit since epoch."
                    },
                    {
                        "name": "getSession()",
                        "return_type": "Session",
                        "description": "Returns the session of the bucket if bucketing by session was requested, null otherwise."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time of the bucket, in the given time unit since epoch."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataPoint",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataPoint",
                "description": "Represents a single data point in a data type's stream from a particular data source.",
                "methods": [
                    {
                        "name": "builder(DataSource dataSource)",
                        "return_type": "staticDataPoint.Builder",
                        "description": "Creates a new builder for a DataPoint with the given dataSource."
                    },
                    {
                        "name": "create(DataSource dataSource)",
                        "return_type": "staticDataPoint",
                        "description": "This method is deprecated. Use DataPoint.Builder to create DataPoint instances."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extract(Intent intent)",
                        "return_type": "staticDataPoint",
                        "description": "Extracts a data point from a callback intent received after registering to a data source with a PendingIntent."
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the data source for the data point."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the data type defining the format of the values in this data point."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time of the interval represented by this data point, in the given unit since epoch."
                    },
                    {
                        "name": "getOriginalDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the original data source for this data point."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time of the interval represented by this data point, in the given unit since epoch."
                    },
                    {
                        "name": "getTimestamp(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the timestamp of the data point, in the given unit since epoch."
                    },
                    {
                        "name": "getValue(Field field)",
                        "return_type": "Value",
                        "description": "Returns the value holder for the field with the given name."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "setFloatValues(float... values)",
                        "return_type": "DataPoint",
                        "description": "This method is deprecated. Use DataPoint.Builder to create DataPoint instances."
                    },
                    {
                        "name": "setIntValues(int... values)",
                        "return_type": "DataPoint",
                        "description": "This method is deprecated. Use DataPoint.Builder to create DataPoint instances."
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "DataPoint",
                        "description": "This method is deprecated. Use DataPoint.Builder to create DataPoint instances."
                    },
                    {
                        "name": "setTimestamp(long timestamp, TimeUnit timeUnit)",
                        "return_type": "DataPoint",
                        "description": "This method is deprecated. Use DataPoint.Builder to create DataPoint instances."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataPoint.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataPoint.Builder",
                "description": "Builder for DataPoint instances.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataPoint",
                        "description": "Builds and returns the DataPoint."
                    },
                    {
                        "name": "setActivityField(Field field, String activity)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the value of an activity field to activity."
                    },
                    {
                        "name": "setField(Field field, float value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the floating point value of the given field to value."
                    },
                    {
                        "name": "setField(Field field, Map<String, Float> value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the map value of the given field to value."
                    },
                    {
                        "name": "setField(Field field, int value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the integer value of the given field to value."
                    },
                    {
                        "name": "setField(Field field, String value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the string value of the given field to value."
                    },
                    {
                        "name": "setFloatValues(float... values)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the values of the data point, where the format for all of its values is float."
                    },
                    {
                        "name": "setIntValues(int... values)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the values of the data point, where the format for all of its values is int."
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the time interval of a data point that represents an interval of time."
                    },
                    {
                        "name": "setTimestamp(long timestamp, TimeUnit timeUnit)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the timestamp of a data point that represent an instantaneous reading, measurement, or input."
                    }
                ]
            },
            {
                "name": "DataSet",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataSet",
                "description": "Represents a fixed set of data points in a data type's stream from a particular data source.",
                "methods": [
                    {
                        "name": "add(DataPoint dataPoint)",
                        "return_type": "void",
                        "description": "This method is deprecated. Build DataSet instances using the builder."
                    },
                    {
                        "name": "addAll(Iterable<DataPoint> dataPoints)",
                        "return_type": "void",
                        "description": "This method is deprecated. Build DataSet instances using the builder."
                    },
                    {
                        "name": "builder(DataSource dataSource)",
                        "return_type": "staticDataSet.Builder",
                        "description": "Creates a new builder for a DataSet with the given dataSource."
                    },
                    {
                        "name": "create(DataSource dataSource)",
                        "return_type": "staticDataSet",
                        "description": "Creates a new data set to hold data points for the given dataSource."
                    },
                    {
                        "name": "createDataPoint()",
                        "return_type": "DataPoint",
                        "description": "Creates an empty data point for this data set's data source."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataPoints()",
                        "return_type": "List<DataPoint>",
                        "description": "Returns the list of data points represented by this data set."
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the data source which this data set represents."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the data type this data set represents."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isEmpty()",
                        "return_type": "boolean",
                        "description": "Returns whether this data set contains no data points."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataSet.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataSet.Builder",
                "description": "Builder used to create new data sets.",
                "methods": [
                    {
                        "name": "add(DataPoint dataPoint)",
                        "return_type": "DataSet.Builder",
                        "description": "Adds a data point to this data set."
                    },
                    {
                        "name": "addAll(Iterable<DataPoint> dataPoints)",
                        "return_type": "DataSet.Builder",
                        "description": "Adds a list of data points to this data set in bulk."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataSet",
                        "description": "Finishes building and returns the DataSet."
                    }
                ]
            },
            {
                "name": "DataSource",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataSource",
                "description": "Definition of a unique source of sensor data.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extract(Intent intent)",
                        "return_type": "staticDataSource",
                        "description": "Extracts the data source extra from the given intent, such as an intent to view user's data."
                    },
                    {
                        "name": "getAppPackageName()",
                        "return_type": "String",
                        "description": "Returns the package name for the application responsible for setting the data, or null if unset/unknown."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the data type for data coming from this data source."
                    },
                    {
                        "name": "getDevice()",
                        "return_type": "Device",
                        "description": "Returns the device where data is being collected, or null if unset."
                    },
                    {
                        "name": "getStreamIdentifier()",
                        "return_type": "String",
                        "description": "Returns a unique identifier for the data stream produced by this data source."
                    },
                    {
                        "name": "getStreamName()",
                        "return_type": "String",
                        "description": "Returns the specific stream name for the stream coming from this data source, or an empty string if unset."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the constant describing the type of this data source."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataSource.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataSource.Builder",
                "description": "A builder that can be used to construct new data source objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataSource",
                        "description": "Finishes building the data source and returns a DataSource object."
                    },
                    {
                        "name": "setAppPackageName(String packageName)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the package name for the application that is recording or computing the data."
                    },
                    {
                        "name": "setAppPackageName(Context appContext)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the package name for the application that is recording or computing the data based on the app's context."
                    },
                    {
                        "name": "setDataType(DataType dataType)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the data type for the data source."
                    },
                    {
                        "name": "setDevice(Device device)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the integrated device where data is being recorded (for instance, a phone that has sensors, or a wearable"
                    },
                    {
                        "name": "setStreamName(String streamName)",
                        "return_type": "DataSource.Builder",
                        "description": "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer."
                    },
                    {
                        "name": "setType(int type)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the type of the data source."
                    }
                ]
            },
            {
                "name": "DataType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataType",
                "description": "The data type defines the schema for a stream of data being collected by, inserted into, or queried from Google Fit.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAggregateType()",
                        "return_type": "DataType",
                        "description": "Returns the aggregate output type for this type, or null if the type does not support aggregation."
                    },
                    {
                        "name": "getAggregatesForInput(DataType inputDataType)",
                        "return_type": "staticList<DataType>",
                        "description": "This method is deprecated. Use getAggregateType("
                    },
                    {
                        "name": "getFields()",
                        "return_type": "List<Field>",
                        "description": "Returns the ordered list of fields for the data type."
                    },
                    {
                        "name": "getMimeType(DataType dataType)",
                        "return_type": "staticString",
                        "description": "Returns the MIME type for a particular DataType."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the namespaced name which uniquely identifies this data type."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "indexOf(Field field)",
                        "return_type": "int",
                        "description": "Returns the index of a field."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataUpdateNotification",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataUpdateNotification",
                "description": "Captures the information needed to identify updates to Google Fitness Store data.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Retrieves the dataSource whose data has been modified."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Retrieves the dataType whose data has been modified."
                    },
                    {
                        "name": "getDataUpdateNotification(Intent intent)",
                        "return_type": "staticDataUpdateNotification",
                        "description": "Retrieves the data update notification from the given intent."
                    },
                    {
                        "name": "getOperationType()",
                        "return_type": "int",
                        "description": "Retrieves the operationType which causes the update in Fitness Store."
                    },
                    {
                        "name": "getUpdateEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Retrieves the endTime of the interval range for which data has been modified in the given unit since epoch."
                    },
                    {
                        "name": "getUpdateStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Retrieves the startTime of the interval range for which data has been modified in the given unit since epoch."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Device",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Device",
                "description": "Representation of an integrated device (such as a phone or a wearable) that can hold sensors.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getLocalDevice(Context context)",
                        "return_type": "staticDevice",
                        "description": "Returns the Device representation of the local device, which can be used when defining local data sources."
                    },
                    {
                        "name": "getManufacturer()",
                        "return_type": "String",
                        "description": "Returns the manufacturer of the product/hardware."
                    },
                    {
                        "name": "getModel()",
                        "return_type": "String",
                        "description": "Returns the end-user-visible model name for the device."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the constant representing the type of the device."
                    },
                    {
                        "name": "getUid()",
                        "return_type": "String",
                        "description": "Returns the serial number or other unique ID for the hardware."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Field",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Field",
                "description": "A field represents one dimension of a data type.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getFormat()",
                        "return_type": "int",
                        "description": "Returns the format of the field, as one of the format constant values."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the name of the field."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isOptional()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal",
                "description": "A fitness goal, which users create in Google Fit.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActivityName()",
                        "return_type": "String",
                        "description": "Returns the name of the goal's specific activity, if any."
                    },
                    {
                        "name": "getCreateTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the creation time of the goal since epoch, in the specified time unit."
                    },
                    {
                        "name": "getDurationObjective()",
                        "return_type": "Goal.DurationObjective",
                        "description": "Returns the duration objective of the goal if the objective type is OBJECTIVE_TYPE_DURATION."
                    },
                    {
                        "name": "getEndTime(Calendar current, TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time of the time range that should be used to calculate goal progress for current time."
                    },
                    {
                        "name": "getFrequencyObjective()",
                        "return_type": "Goal.FrequencyObjective",
                        "description": "Returns the frequency objective of the goal if the objective type is OBJECTIVE_TYPE_FREQUENCY."
                    },
                    {
                        "name": "getMetricObjective()",
                        "return_type": "Goal.MetricObjective",
                        "description": "Returns the metric objective of the goal if the objective type is OBJECTIVE_TYPE_METRIC."
                    },
                    {
                        "name": "getObjectiveType()",
                        "return_type": "int",
                        "description": "Returns the type of the goal's objective."
                    },
                    {
                        "name": "getRecurrence()",
                        "return_type": "Goal.Recurrence",
                        "description": "Returns the recurrence period of a goal if the goal is a recurring one."
                    },
                    {
                        "name": "getStartTime(Calendar current, TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time of the time range that should be used to calculate goal progress for current time."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.DurationObjective",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.DurationObjective",
                "description": "A duration objective, which uses duration time of activities to determine whether the goal is met.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDuration(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the objective duration of the goal in the specified time unit."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.FrequencyObjective",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.FrequencyObjective",
                "description": "A frequency objective, which uses the number of activity segments to determine whether the goal is met.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getFrequency()",
                        "return_type": "int",
                        "description": "Returns the objective frequency of the goal."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.MetricObjective",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.MetricObjective",
                "description": "A metric objective, which uses a metric value to determine whether the goal is met.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataTypeName()",
                        "return_type": "String",
                        "description": "Returns the data type name of the metric the goal tracks, such as com.google.step_count.delta or com.google.distance.delta."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "double",
                        "description": "Returns the objective metric's value."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.Recurrence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.Recurrence",
                "description": "A recurrence period of a recurring goal.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": "Returns the count of unit of the recurrence."
                    },
                    {
                        "name": "getUnit()",
                        "return_type": "int",
                        "description": "Returns the unit of the recurrence."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HealthDataTypes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/HealthDataTypes",
                "description": "Predefined health-specific data types.",
                "methods": []
            },
            {
                "name": "HealthFields",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/HealthFields",
                "description": "Predefined fields only used by health-specific data types in HealthDataTypes.",
                "methods": []
            },
            {
                "name": "Session",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Session",
                "description": "A Session represents a time interval with associated metadata.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extract(Intent intent)",
                        "return_type": "staticSession",
                        "description": "Extracts the session extra from the given intent, such as a callback intent received after registering to session start/end notifications, or an intent to view a session."
                    },
                    {
                        "name": "getActiveTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the active time period of the session."
                    },
                    {
                        "name": "getActivity()",
                        "return_type": "String",
                        "description": "Returns the activity associated with this session, if set."
                    },
                    {
                        "name": "getAppPackageName()",
                        "return_type": "String",
                        "description": "Returns the package name for the application responsible for adding the session."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "Returns the description for this session."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time for the session, in the given unit since epoch."
                    },
                    {
                        "name": "getIdentifier()",
                        "return_type": "String",
                        "description": "Returns the identifier for this session."
                    },
                    {
                        "name": "getMimeType(String activity)",
                        "return_type": "staticString",
                        "description": "Returns the MIME type which describes a Session for a particular activity."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the name for this session, if set."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time for the session, in the given time unit since epoch."
                    },
                    {
                        "name": "hasActiveTime()",
                        "return_type": "boolean",
                        "description": "Returns whether the session active time is set."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isOngoing()",
                        "return_type": "boolean",
                        "description": "Returns whether the session is ongoing."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Session.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Session.Builder",
                "description": "Builder used to create new Sessions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Session",
                        "description": "Finishes building and returns the session."
                    },
                    {
                        "name": "setActiveTime(long time, TimeUnit timeUnit)",
                        "return_type": "Session.Builder",
                        "description": "Sets the active session period duration."
                    },
                    {
                        "name": "setActivity(String activity)",
                        "return_type": "Session.Builder",
                        "description": "Sets the activity associated with this session."
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "Session.Builder",
                        "description": "Sets a description for this session."
                    },
                    {
                        "name": "setEndTime(long time, TimeUnit timeUnit)",
                        "return_type": "Session.Builder",
                        "description": "Sets the end time of the session."
                    },
                    {
                        "name": "setIdentifier(String identifier)",
                        "return_type": "Session.Builder",
                        "description": "Sets the identifier for this session."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Session.Builder",
                        "description": "Sets the a human readable name of the session."
                    },
                    {
                        "name": "setStartTime(long time, TimeUnit timeUnit)",
                        "return_type": "Session.Builder",
                        "description": "Sets the start time of the session."
                    }
                ]
            },
            {
                "name": "SleepStages",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/SleepStages",
                "description": "Constants representing different sleep stages, such as light sleep, deep sleep.",
                "methods": []
            },
            {
                "name": "Subscription",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Subscription",
                "description": "Subscription for persistent storage of data from a given data source or for a given data type.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the data source for this subscription, if specified."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the data type for this subscription, if specified."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toDebugString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Value",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/Value",
                "description": "Holder object for the value of a single field in a data point.",
                "methods": [
                    {
                        "name": "asActivity()",
                        "return_type": "String",
                        "description": "Returns the value of this object as an activity."
                    },
                    {
                        "name": "asFloat()",
                        "return_type": "float",
                        "description": "Returns the value of this object as a float."
                    },
                    {
                        "name": "asInt()",
                        "return_type": "int",
                        "description": "Returns the value of this object as an int."
                    },
                    {
                        "name": "asString()",
                        "return_type": "String",
                        "description": "Returns the value of this object as a string."
                    },
                    {
                        "name": "clearKey(String key)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use DataPoint.Builder to construct new DataPoint instances."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getFormat()",
                        "return_type": "int",
                        "description": "Returns the format of this value, which matches the appropriate field in the data type definition."
                    },
                    {
                        "name": "getKeyValue(String key)",
                        "return_type": "Float",
                        "description": "Returns the value of the given key in the map as a Float."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSet()",
                        "return_type": "boolean",
                        "description": "Returns true if this object's value has been set by calling one of the setters."
                    },
                    {
                        "name": "setActivity(String activity)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use DataPoint.Builder to construct new DataPoint instances."
                    },
                    {
                        "name": "setFloat(float value)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use DataPoint.Builder to construct new DataPoint instances."
                    },
                    {
                        "name": "setInt(int value)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use DataPoint.Builder to construct new DataPoint instances."
                    },
                    {
                        "name": "setKeyValue(String key, float value)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use DataPoint.Builder to construct new DataPoint instances."
                    },
                    {
                        "name": "setString(String value)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use DataPoint.Builder to construct new DataPoint instances."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "WorkoutExercises",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/data/WorkoutExercises",
                "description": "Constants representing different exercises, such as weightlifting exercises, strength training exercises, and cardiovascular exercises.",
                "methods": []
            },
            {
                "name": "DataPoint.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataPoint.Builder",
                "description": "Builder for DataPoint instances.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataPoint",
                        "description": "Builds and returns the DataPoint."
                    },
                    {
                        "name": "setActivityField(Field field, String activity)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the value of an activity field to activity."
                    },
                    {
                        "name": "setField(Field field, float value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the floating point value of the given field to value."
                    },
                    {
                        "name": "setField(Field field, Map<String, Float> value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the map value of the given field to value."
                    },
                    {
                        "name": "setField(Field field, int value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the integer value of the given field to value."
                    },
                    {
                        "name": "setField(Field field, String value)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the string value of the given field to value."
                    },
                    {
                        "name": "setFloatValues(float... values)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the values of the data point, where the format for all of its values is float."
                    },
                    {
                        "name": "setIntValues(int... values)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the values of the data point, where the format for all of its values is int."
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the time interval of a data point that represents an interval of time."
                    },
                    {
                        "name": "setTimestamp(long timestamp, TimeUnit timeUnit)",
                        "return_type": "DataPoint.Builder",
                        "description": "Sets the timestamp of a data point that represent an instantaneous reading, measurement, or input."
                    }
                ]
            },
            {
                "name": "DataSet.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataSet.Builder",
                "description": "Builder used to create new data sets.",
                "methods": [
                    {
                        "name": "add(DataPoint dataPoint)",
                        "return_type": "DataSet.Builder",
                        "description": "Adds a data point to this data set."
                    },
                    {
                        "name": "addAll(Iterable<DataPoint> dataPoints)",
                        "return_type": "DataSet.Builder",
                        "description": "Adds a list of data points to this data set in bulk."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataSet",
                        "description": "Finishes building and returns the DataSet."
                    }
                ]
            },
            {
                "name": "DataSource.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/DataSource.Builder",
                "description": "A builder that can be used to construct new data source objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataSource",
                        "description": "Finishes building the data source and returns a DataSource object."
                    },
                    {
                        "name": "setAppPackageName(String packageName)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the package name for the application that is recording or computing the data."
                    },
                    {
                        "name": "setAppPackageName(Context appContext)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the package name for the application that is recording or computing the data based on the app's context."
                    },
                    {
                        "name": "setDataType(DataType dataType)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the data type for the data source."
                    },
                    {
                        "name": "setDevice(Device device)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the integrated device where data is being recorded (for instance, a phone that has sensors, or a wearable"
                    },
                    {
                        "name": "setStreamName(String streamName)",
                        "return_type": "DataSource.Builder",
                        "description": "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer."
                    },
                    {
                        "name": "setType(int type)",
                        "return_type": "DataSource.Builder",
                        "description": "Sets the type of the data source."
                    }
                ]
            },
            {
                "name": "Goal.DurationObjective",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.DurationObjective",
                "description": "A duration objective, which uses duration time of activities to determine whether the goal is met.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDuration(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the objective duration of the goal in the specified time unit."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.FrequencyObjective",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.FrequencyObjective",
                "description": "A frequency objective, which uses the number of activity segments to determine whether the goal is met.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getFrequency()",
                        "return_type": "int",
                        "description": "Returns the objective frequency of the goal."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.MetricObjective",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.MetricObjective",
                "description": "A metric objective, which uses a metric value to determine whether the goal is met.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataTypeName()",
                        "return_type": "String",
                        "description": "Returns the data type name of the metric the goal tracks, such as com.google.step_count.delta or com.google.distance.delta."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "double",
                        "description": "Returns the objective metric's value."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Goal.MismatchedGoalException",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.MismatchedGoalException",
                "description": "Exception thrown by getMetricObjective(), getDurationObjective(), getFrequencyObjective() if the goal doesn't match the requested objective type.",
                "methods": []
            },
            {
                "name": "Goal.Recurrence",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/Goal.Recurrence",
                "description": "A recurrence period of a recurring goal.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": "Returns the count of unit of the recurrence."
                    },
                    {
                        "name": "getUnit()",
                        "return_type": "int",
                        "description": "Returns the unit of the recurrence."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Session.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/data/Session.Builder",
                "description": "Builder used to create new Sessions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Session",
                        "description": "Finishes building and returns the session."
                    },
                    {
                        "name": "setActiveTime(long time, TimeUnit timeUnit)",
                        "return_type": "Session.Builder",
                        "description": "Sets the active session period duration."
                    },
                    {
                        "name": "setActivity(String activity)",
                        "return_type": "Session.Builder",
                        "description": "Sets the activity associated with this session."
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "Session.Builder",
                        "description": "Sets a description for this session."
                    },
                    {
                        "name": "setEndTime(long time, TimeUnit timeUnit)",
                        "return_type": "Session.Builder",
                        "description": "Sets the end time of the session."
                    },
                    {
                        "name": "setIdentifier(String identifier)",
                        "return_type": "Session.Builder",
                        "description": "Sets the identifier for this session."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Session.Builder",
                        "description": "Sets the a human readable name of the session."
                    },
                    {
                        "name": "setStartTime(long time, TimeUnit timeUnit)",
                        "return_type": "Session.Builder",
                        "description": "Sets the start time of the session."
                    }
                ]
            }
        ]
    },
    {
        "name": "plus",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/plus/package-summary",
        "classes": [
            {
                "name": "Plus",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/Plus",
                "description": "This class was deprecated. This API has been deprecated. Please refer to Deprecation Notes for details.",
                "methods": []
            },
            {
                "name": "Plus.PlusOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/Plus.PlusOptions",
                "description": "API configuration parameters for Google+.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticPlus.PlusOptions.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Plus.PlusOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/Plus.PlusOptions.Builder",
                "description": "Plus builder.",
                "methods": [
                    {
                        "name": "addActivityTypes(String... activityTypes)",
                        "return_type": "Plus.PlusOptions.Builder",
                        "description": "Specify which user's app activity types can be written to Google+."
                    },
                    {
                        "name": "build()",
                        "return_type": "Plus.PlusOptions",
                        "description": ""
                    },
                    {
                        "name": "setServerClientId(String clientId)",
                        "return_type": "Plus.PlusOptions.Builder",
                        "description": "Specify the optional 3rd party server client ID for offline auth."
                    }
                ]
            },
            {
                "name": "PlusOneButton",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/PlusOneButton",
                "description": "This class was deprecated. This API has been deprecated. Please refer to Deprecation Notes for details.",
                "methods": [
                    {
                        "name": "initialize(String url, int activityRequestCode)",
                        "return_type": "void",
                        "description": "Updates the +1 button with a URL."
                    },
                    {
                        "name": "initialize(String url, PlusOneButton.OnPlusOneClickListener plusOneClickListener)",
                        "return_type": "void",
                        "description": "Updates the +1 button with a client and URL."
                    },
                    {
                        "name": "plusOneClick()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setAnnotation(int annotation)",
                        "return_type": "void",
                        "description": "Sets the annotation to display next to the +1 button."
                    },
                    {
                        "name": "setIntent(Intent intent)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setOnPlusOneClickListener(PlusOneButton.OnPlusOneClickListener listener)",
                        "return_type": "void",
                        "description": "Sets the PlusOneButton.OnPlusOneClickListener to handle clicks."
                    },
                    {
                        "name": "setSize(int size)",
                        "return_type": "void",
                        "description": "Sets the size of the +1 button."
                    }
                ]
            },
            {
                "name": "PlusOneButton.DefaultOnPlusOneClickListener",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/PlusOneButton.DefaultOnPlusOneClickListener",
                "description": "This is an View.OnClickListener that will proxy clicks to an attached PlusOneButton.OnPlusOneClickListener, or default to attempt to start the intent using an Activity context.",
                "methods": [
                    {
                        "name": "onClick(View view)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPlusOneClick(Intent intent)",
                        "return_type": "void",
                        "description": "Called when the +1 button is clicked."
                    }
                ]
            },
            {
                "name": "PlusOneDummyView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/PlusOneDummyView",
                "description": "This class was deprecated. This API has been deprecated. Please refer to Deprecation Notes for details.",
                "methods": []
            },
            {
                "name": "PlusShare",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/PlusShare",
                "description": "This class was deprecated. This API has been deprecated. Please refer to Deprecation Notes for details.",
                "methods": [
                    {
                        "name": "createPerson(String id, String displayName)",
                        "return_type": "staticPerson",
                        "description": "Creates a person to use as a recipient with the given ID and display name."
                    },
                    {
                        "name": "getDeepLinkId(Intent intent)",
                        "return_type": "staticString",
                        "description": "Get the incoming deep link."
                    }
                ]
            },
            {
                "name": "PlusShare.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/plus/PlusShare.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "addCallToAction(String label, Uri uri, String deepLinkId)",
                        "return_type": "PlusShare.Builder",
                        "description": "Adds a call-to-action button for an interactive post."
                    },
                    {
                        "name": "addStream(Uri streamUri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Add a stream URI to the data that should be shared."
                    },
                    {
                        "name": "getIntent()",
                        "return_type": "Intent",
                        "description": "Retrieve the Intent as configured so far by the Builder."
                    },
                    {
                        "name": "setContentDeepLinkId(String deepLinkId)",
                        "return_type": "PlusShare.Builder",
                        "description": "Include a deep-link URI of a resource to share on Google+."
                    },
                    {
                        "name": "setContentDeepLinkId(String deepLinkId, String title, String description, Uri thumbnailUri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Include a deep-link ID to a resource to share on Google+."
                    },
                    {
                        "name": "setContentUrl(Uri uri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Sets a URL to link to from the content on the web."
                    },
                    {
                        "name": "setRecipients(Person user, List<Person> recipientList)",
                        "return_type": "PlusShare.Builder",
                        "description": "Sets a list of people to send the interactive post to."
                    },
                    {
                        "name": "setStream(Uri streamUri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Set a stream URI to the data that should be shared."
                    },
                    {
                        "name": "setText(CharSequence text)",
                        "return_type": "PlusShare.Builder",
                        "description": "Set a pre-filled message to be sent as part of the share."
                    },
                    {
                        "name": "setType(String mimeType)",
                        "return_type": "PlusShare.Builder",
                        "description": "Set the type of data being shared."
                    }
                ]
            },
            {
                "name": "Account",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/Account",
                "description": "This interface was deprecated. replaced by GoogleSignInApi. See Google Sign-In for guidance on integrating with this API.",
                "methods": [
                    {
                        "name": "clearDefaultAccount(GoogleApiClient googleApiClient)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. replaced with signOut(GoogleApiClient"
                    },
                    {
                        "name": "getAccountName(GoogleApiClient googleApiClient)",
                        "return_type": "abstractString",
                        "description": "This method was deprecated. Use GoogleSignInApi and getSignInAccount("
                    },
                    {
                        "name": "revokeAccessAndDisconnect(GoogleApiClient googleApiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. replaced with revokeAccess(GoogleApiClient"
                    }
                ]
            },
            {
                "name": "People",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/People",
                "description": "This interface was deprecated. This API may return empty results, even if the user consented to SCOPE_PLUS_LOGIN. Please refer to Deprecation Notes for details. See below for suggested replacements.On Android, consider using Contacts Provider.If you are looking for cross-platform solutions, check out People API.If you want to advocate your app to your existing users' social graph, check out Firebase Invites.",
                "methods": [
                    {
                        "name": "getCurrentPerson(GoogleApiClient googleApiClient)",
                        "return_type": "abstractPerson",
                        "description": "This method was deprecated. use GoogleSignInApi and getSignInAccount("
                    },
                    {
                        "name": "load(GoogleApiClient googleApiClient, Collection<String> personIds)",
                        "return_type": "abstractPendingResult<People.LoadPeopleResult>",
                        "description": "This method was deprecated. In the future, you can possibly get empty data back even if user consented to the required scopes. See People for details."
                    },
                    {
                        "name": "load(GoogleApiClient googleApiClient, String... personIds)",
                        "return_type": "abstractPendingResult<People.LoadPeopleResult>",
                        "description": "This method was deprecated. In the future, you can possibly get empty data back even if user consented to the required scopes. See People for details."
                    },
                    {
                        "name": "loadConnected(GoogleApiClient googleApiClient)",
                        "return_type": "abstractPendingResult<People.LoadPeopleResult>",
                        "description": "This method was deprecated. In the future, you can possibly get empty data back even if user consented to the required scopes. See People for details."
                    },
                    {
                        "name": "loadVisible(GoogleApiClient googleApiClient, int orderBy, String pageToken)",
                        "return_type": "abstractPendingResult<People.LoadPeopleResult>",
                        "description": "This method was deprecated. In the future, you can possibly get empty data back even if user consented to the required scopes. See People for details."
                    },
                    {
                        "name": "loadVisible(GoogleApiClient googleApiClient, String pageToken)",
                        "return_type": "abstractPendingResult<People.LoadPeopleResult>",
                        "description": "This method was deprecated. In the future, you can possibly get empty data back even if user consented to the required scopes. See People for details."
                    }
                ]
            },
            {
                "name": "People.LoadPeopleResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/People.LoadPeopleResult",
                "description": "Information about the set of people that was loaded.",
                "methods": [
                    {
                        "name": "getNextPageToken()",
                        "return_type": "abstractString",
                        "description": "Returns the continuation token, which is used to page through large result sets."
                    },
                    {
                        "name": "getPersonBuffer()",
                        "return_type": "abstractPersonBuffer",
                        "description": "Returns the requested people."
                    }
                ]
            },
            {
                "name": "People.OrderBy",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/People.OrderBy",
                "description": "Constants to declare the order to return people in.",
                "methods": []
            },
            {
                "name": "PlusOneButton.OnPlusOneClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/plus/PlusOneButton.OnPlusOneClickListener",
                "description": "A listener for +1 button clicks.",
                "methods": [
                    {
                        "name": "onPlusOneClick(Intent intent)",
                        "return_type": "abstract void",
                        "description": "Called when the +1 button is clicked."
                    }
                ]
            },
            {
                "name": "Plus.PlusOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/Plus.PlusOptions",
                "description": "API configuration parameters for Google+.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticPlus.PlusOptions.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Plus.PlusOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/Plus.PlusOptions.Builder",
                "description": "Plus builder.",
                "methods": [
                    {
                        "name": "addActivityTypes(String... activityTypes)",
                        "return_type": "Plus.PlusOptions.Builder",
                        "description": "Specify which user's app activity types can be written to Google+."
                    },
                    {
                        "name": "build()",
                        "return_type": "Plus.PlusOptions",
                        "description": ""
                    },
                    {
                        "name": "setServerClientId(String clientId)",
                        "return_type": "Plus.PlusOptions.Builder",
                        "description": "Specify the optional 3rd party server client ID for offline auth."
                    }
                ]
            },
            {
                "name": "PlusOneButton.DefaultOnPlusOneClickListener",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/PlusOneButton.DefaultOnPlusOneClickListener",
                "description": "This is an View.OnClickListener that will proxy clicks to an attached PlusOneButton.OnPlusOneClickListener, or default to attempt to start the intent using an Activity context.",
                "methods": [
                    {
                        "name": "onClick(View view)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPlusOneClick(Intent intent)",
                        "return_type": "void",
                        "description": "Called when the +1 button is clicked."
                    }
                ]
            },
            {
                "name": "PlusOneButton.OnPlusOneClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/PlusOneButton.OnPlusOneClickListener",
                "description": "A listener for +1 button clicks.",
                "methods": [
                    {
                        "name": "onPlusOneClick(Intent intent)",
                        "return_type": "abstract void",
                        "description": "Called when the +1 button is clicked."
                    }
                ]
            },
            {
                "name": "PlusShare.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/PlusShare.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "addCallToAction(String label, Uri uri, String deepLinkId)",
                        "return_type": "PlusShare.Builder",
                        "description": "Adds a call-to-action button for an interactive post."
                    },
                    {
                        "name": "addStream(Uri streamUri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Add a stream URI to the data that should be shared."
                    },
                    {
                        "name": "getIntent()",
                        "return_type": "Intent",
                        "description": "Retrieve the Intent as configured so far by the Builder."
                    },
                    {
                        "name": "setContentDeepLinkId(String deepLinkId)",
                        "return_type": "PlusShare.Builder",
                        "description": "Include a deep-link URI of a resource to share on Google+."
                    },
                    {
                        "name": "setContentDeepLinkId(String deepLinkId, String title, String description, Uri thumbnailUri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Include a deep-link ID to a resource to share on Google+."
                    },
                    {
                        "name": "setContentUrl(Uri uri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Sets a URL to link to from the content on the web."
                    },
                    {
                        "name": "setRecipients(Person user, List<Person> recipientList)",
                        "return_type": "PlusShare.Builder",
                        "description": "Sets a list of people to send the interactive post to."
                    },
                    {
                        "name": "setStream(Uri streamUri)",
                        "return_type": "PlusShare.Builder",
                        "description": "Set a stream URI to the data that should be shared."
                    },
                    {
                        "name": "setText(CharSequence text)",
                        "return_type": "PlusShare.Builder",
                        "description": "Set a pre-filled message to be sent as part of the share."
                    },
                    {
                        "name": "setType(String mimeType)",
                        "return_type": "PlusShare.Builder",
                        "description": "Set the type of data being shared."
                    }
                ]
            },
            {
                "name": "People.LoadPeopleResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/People.LoadPeopleResult",
                "description": "Information about the set of people that was loaded.",
                "methods": [
                    {
                        "name": "getNextPageToken()",
                        "return_type": "abstractString",
                        "description": "Returns the continuation token, which is used to page through large result sets."
                    },
                    {
                        "name": "getPersonBuffer()",
                        "return_type": "abstractPersonBuffer",
                        "description": "Returns the requested people."
                    }
                ]
            },
            {
                "name": "People.OrderBy",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/plus/People.OrderBy",
                "description": "Constants to declare the order to return people in.",
                "methods": []
            },
            {
                "name": "Plus.PlusOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/plus/Plus.PlusOptions.Builder",
                "description": "Plus builder.",
                "methods": [
                    {
                        "name": "addActivityTypes(String... activityTypes)",
                        "return_type": "Plus.PlusOptions.Builder",
                        "description": "Specify which user's app activity types can be written to Google+."
                    },
                    {
                        "name": "build()",
                        "return_type": "Plus.PlusOptions",
                        "description": ""
                    },
                    {
                        "name": "setServerClientId(String clientId)",
                        "return_type": "Plus.PlusOptions.Builder",
                        "description": "Specify the optional 3rd party server client ID for offline auth."
                    }
                ]
            }
        ]
    },
    {
        "name": "connection",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/nearby/connection/package-summary",
        "classes": [
            {
                "name": "AdvertisingOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/AdvertisingOptions",
                "description": "Options for a call to ConnectionsClient.startAdvertising(String, String, ConnectionLifecycleCallback, AdvertisingOptions).",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDisruptiveUpgrade()",
                        "return_type": "boolean",
                        "description": "Gets the disruptive upgrade flag."
                    },
                    {
                        "name": "getLowPower()",
                        "return_type": "boolean",
                        "description": "Gets whether low power should be used, if true only low power mediums (like BLE"
                    },
                    {
                        "name": "getStrategy()",
                        "return_type": "Strategy",
                        "description": "Get the advertising strategy, the strategy used for advertising."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AdvertisingOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/AdvertisingOptions.Builder",
                "description": "Builder class for AdvertisingOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdvertisingOptions",
                        "description": "Builds an instance of AdvertisingOptions."
                    },
                    {
                        "name": "setDisruptiveUpgrade(boolean disruptiveUpgrade)",
                        "return_type": "AdvertisingOptions.Builder",
                        "description": "Sets the disruptive upgrade flag."
                    },
                    {
                        "name": "setLowPower(boolean lowPower)",
                        "return_type": "AdvertisingOptions.Builder",
                        "description": "Sets whether low power should be used, if true only low poer mediums (like BLE"
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "AdvertisingOptions.Builder",
                        "description": "Set the advertising strategy, the strategy used for advertising, must match the strategy used in DiscoveryOptions."
                    }
                ]
            },
            {
                "name": "AppIdentifier",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/AppIdentifier",
                "description": "This class is deprecated. This class is no longer used.An identifier for an application; the value of the identifier should be the package name for an Android application to be installed or launched to discover and communicate with the advertised service (e.g. com.example.myapp). Google applications may use this data to prompt the user to install the application.",
                "methods": [
                    {
                        "name": "getIdentifier()",
                        "return_type": "String",
                        "description": "Retrieves the identifier string for this application (e.g."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AppMetadata",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/AppMetadata",
                "description": "This class is deprecated. This class is no longer used.Metadata about an application. Contains one or more AppIdentifier objects indicating identifiers that can be used to install or launch application(s) that can discover and communicate with the advertised service. Google applications may use this data to prompt the user to install the application.",
                "methods": [
                    {
                        "name": "getAppIdentifiers()",
                        "return_type": "List<AppIdentifier>",
                        "description": "Returns a list of app identifiers that can discover and communicate with the advertised service."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ConnectionInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionInfo",
                "description": "Information about a connection that is being initiated.",
                "methods": [
                    {
                        "name": "getAuthenticationDigits()",
                        "return_type": "String",
                        "description": "A 4 digit authentication token that has been given to both devices."
                    },
                    {
                        "name": "getAuthenticationToken()",
                        "return_type": "String",
                        "description": "This method is deprecated. Use getAuthenticationDigits("
                    },
                    {
                        "name": "getEndpointInfo()",
                        "return_type": "byte[]",
                        "description": "Information that represents the remote device which is defined by the client or application."
                    },
                    {
                        "name": "getEndpointName()",
                        "return_type": "String",
                        "description": "The name of the remote device we're connecting to."
                    },
                    {
                        "name": "getRawAuthenticationToken()",
                        "return_type": "byte[]",
                        "description": "The raw (significantly longer"
                    },
                    {
                        "name": "isConnectionVerified()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. This API has been added, but the implementation has never been completed. It always returns false."
                    },
                    {
                        "name": "isIncomingConnection()",
                        "return_type": "boolean",
                        "description": "True if the connection request was initiated from a remote device."
                    }
                ]
            },
            {
                "name": "ConnectionLifecycleCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionLifecycleCallback",
                "description": "Listener for lifecycle events associated with a connection to a remote endpoint.",
                "methods": [
                    {
                        "name": "onConnectionInitiated(String endpointId, ConnectionInfo connectionInfo)",
                        "return_type": "abstract void",
                        "description": "A basic encrypted channel has been created between you and the endpoint."
                    },
                    {
                        "name": "onConnectionResult(String endpointId, ConnectionResolution resolution)",
                        "return_type": "abstract void",
                        "description": "Called after both sides have either accepted or rejected the connection."
                    },
                    {
                        "name": "onDisconnected(String endpointId)",
                        "return_type": "abstract void",
                        "description": "Called when a remote endpoint is disconnected or has become unreachable."
                    }
                ]
            },
            {
                "name": "ConnectionOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionOptions",
                "description": "Options for a call to ConnectionsClient.requestConnection(byte[], String, ConnectionLifecycleCallback).",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDisruptiveUpgrade()",
                        "return_type": "boolean",
                        "description": "Gets the disruptive upgrade flag."
                    },
                    {
                        "name": "getLowPower()",
                        "return_type": "boolean",
                        "description": "Gets whether to attempt to connect with the lowest possible power (like BLE"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ConnectionOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionOptions.Builder",
                "description": "Builder class for ConnectionOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ConnectionOptions",
                        "description": "Builds an instance of ConnectionOptions."
                    },
                    {
                        "name": "setDisruptiveUpgrade(boolean disruptiveUpgrade)",
                        "return_type": "ConnectionOptions.Builder",
                        "description": "Sets the disruptive upgrade flag."
                    },
                    {
                        "name": "setLowPower(boolean lowPower)",
                        "return_type": "ConnectionOptions.Builder",
                        "description": "Sets whether to attempt to connect with the lowest possible power (like BLE"
                    }
                ]
            },
            {
                "name": "ConnectionResolution",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionResolution",
                "description": "The result after ConnectionLifecycleCallback.onConnectionInitiated(String, ConnectionInfo).",
                "methods": [
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "The status of the response."
                    }
                ]
            },
            {
                "name": "Connections.ConnectionRequestListener",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.ConnectionRequestListener",
                "description": "This class is deprecated. Use ConnectionLifecycleCallback instead.",
                "methods": [
                    {
                        "name": "onConnectionRequest(String remoteEndpointId, String remoteEndpointName, byte[] handshakeData)",
                        "return_type": "void",
                        "description": "Called when a remote endpoint requests a connection to a local endpoint."
                    }
                ]
            },
            {
                "name": "Connections.EndpointDiscoveryListener",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.EndpointDiscoveryListener",
                "description": "This class is deprecated. Use EndpointDiscoveryCallback instead.",
                "methods": [
                    {
                        "name": "onEndpointFound(String endpointId, String serviceId, String name)",
                        "return_type": "void",
                        "description": "Called when a remote endpoint is discovered."
                    },
                    {
                        "name": "onEndpointLost(String endpointId)",
                        "return_type": "abstract void",
                        "description": "Called when a remote endpoint is no longer discoverable; only called for endpoints that previously had been passed to onEndpointFound(String, String, String"
                    }
                ]
            },
            {
                "name": "ConnectionsOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionsOptions",
                "description": "Configuration parameters for the Connections API.",
                "methods": []
            },
            {
                "name": "ConnectionsOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionsOptions.Builder",
                "description": "Builder for ConnectionsOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ConnectionsOptions",
                        "description": "Builds an instance of ConnectionsOptions."
                    }
                ]
            },
            {
                "name": "ConnectionsStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionsStatusCodes",
                "description": "Status codes for nearby connections results.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly!"
                    }
                ]
            },
            {
                "name": "DiscoveredEndpointInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/DiscoveredEndpointInfo",
                "description": "Information about an endpoint when it's discovered.",
                "methods": [
                    {
                        "name": "getEndpointInfo()",
                        "return_type": "byte[]",
                        "description": "Information advertised by the remote endpoint."
                    },
                    {
                        "name": "getEndpointName()",
                        "return_type": "String",
                        "description": "The human readable name of the remote endpoint."
                    },
                    {
                        "name": "getServiceId()",
                        "return_type": "String",
                        "description": "The ID of the service advertised by the remote endpoint."
                    }
                ]
            },
            {
                "name": "DiscoveryOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/DiscoveryOptions",
                "description": "Options for a call to ConnectionsClient.startDiscovery(String, EndpointDiscoveryCallback, DiscoveryOptions).",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getLowPower()",
                        "return_type": "boolean",
                        "description": "Gets whether low power should be used, if true, only low power mediums (like BLE"
                    },
                    {
                        "name": "getStrategy()",
                        "return_type": "Strategy",
                        "description": "Gets the discovery strategy, the strategy to use for discovering, must match the strategy used in AdvertisingOptions."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DiscoveryOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/DiscoveryOptions.Builder",
                "description": "Builder class for DiscoveryOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DiscoveryOptions",
                        "description": "Builds an instance of DiscoveryOptions."
                    },
                    {
                        "name": "setLowPower(boolean lowPower)",
                        "return_type": "DiscoveryOptions.Builder",
                        "description": "Sets whether to use low power."
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "DiscoveryOptions.Builder",
                        "description": "Sets the discovery strategy."
                    }
                ]
            },
            {
                "name": "EndpointDiscoveryCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/EndpointDiscoveryCallback",
                "description": "Listener invoked during endpoint discovery.",
                "methods": [
                    {
                        "name": "onEndpointFound(String endpointId, DiscoveredEndpointInfo info)",
                        "return_type": "abstract void",
                        "description": "Called when a remote endpoint is discovered."
                    },
                    {
                        "name": "onEndpointLost(String endpointId)",
                        "return_type": "abstract void",
                        "description": "Called when a remote endpoint is no longer discoverable; only called for endpoints that previously had been passed to onEndpointFound(String, DiscoveredEndpointInfo"
                    }
                ]
            },
            {
                "name": "Payload",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Payload",
                "description": "A Payload sent between devices.",
                "methods": [
                    {
                        "name": "asBytes()",
                        "return_type": "byte[]",
                        "description": "Non-null for payloads of type Payload.Type.BYTES."
                    },
                    {
                        "name": "asFile()",
                        "return_type": "Payload.File",
                        "description": "Non-null for payloads of type Payload.Type.FILE."
                    },
                    {
                        "name": "asStream()",
                        "return_type": "Payload.Stream",
                        "description": "Non-null for payloads of type Payload.Type.STREAM."
                    },
                    {
                        "name": "close()",
                        "return_type": "void",
                        "description": "Closes to release any ParcelFileDescriptor and InputStream resources for Payload.File or Payload.Stream when the transferring stopped."
                    },
                    {
                        "name": "fromBytes(byte[] bytes)",
                        "return_type": "staticPayload",
                        "description": "Creates a Payload of type Payload.Type.BYTES for sending to another device."
                    },
                    {
                        "name": "fromFile(ParcelFileDescriptor pfd)",
                        "return_type": "staticPayload",
                        "description": "Creates a Payload of type Payload.Type.FILE (backed by a ParcelFileDescriptor"
                    },
                    {
                        "name": "fromFile(File javaFile)",
                        "return_type": "staticPayload",
                        "description": "Creates a Payload of type Payload.Type.FILE (backed by a File"
                    },
                    {
                        "name": "fromStream(ParcelFileDescriptor pfd)",
                        "return_type": "staticPayload",
                        "description": "Creates a Payload of type Payload.Type.STREAM (backed by a ParcelFileDescriptor"
                    },
                    {
                        "name": "fromStream(InputStream inputStream)",
                        "return_type": "staticPayload",
                        "description": "Creates a Payload of type Payload.Type.STREAM (backed by an InputStream"
                    },
                    {
                        "name": "getId()",
                        "return_type": "long",
                        "description": "A unique identifier for this payload."
                    },
                    {
                        "name": "getOffset()",
                        "return_type": "long",
                        "description": "Returns the offset of this payload for resume sending or receiving."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "The type of this payload, one of Payload.Type."
                    },
                    {
                        "name": "setOffset(long offset)",
                        "return_type": "void",
                        "description": "Sets the offset from getOffset("
                    },
                    {
                        "name": "setSensitive(boolean isSensitive)",
                        "return_type": "void",
                        "description": "Sets whether or not the payload is sensitive."
                    }
                ]
            },
            {
                "name": "Payload.File",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Payload.File",
                "description": "Represents a file in local storage on the device.",
                "methods": [
                    {
                        "name": "asJavaFile()",
                        "return_type": "File",
                        "description": "This method is deprecated. use asUri("
                    },
                    {
                        "name": "asParcelFileDescriptor()",
                        "return_type": "ParcelFileDescriptor",
                        "description": "Gets the ParcelFileDescriptor from which to read the data of this File; useful when reading the File in a streaming fashion, before the entire contents have arrived from the remote endpoint."
                    },
                    {
                        "name": "asUri()",
                        "return_type": "Uri",
                        "description": "Gets a file Uri for which the client package has read and write permissions (see ContentResolver.openInputStream(Uri"
                    },
                    {
                        "name": "close()",
                        "return_type": "void",
                        "description": "This method is deprecated. use Payload.close("
                    },
                    {
                        "name": "getSize()",
                        "return_type": "long",
                        "description": "Gets the size of this Payload.File in bytes."
                    }
                ]
            },
            {
                "name": "Payload.Stream",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Payload.Stream",
                "description": "Represents a stream of data.",
                "methods": [
                    {
                        "name": "asInputStream()",
                        "return_type": "InputStream",
                        "description": "Gets the InputStream from which to read the data for this Stream."
                    },
                    {
                        "name": "asParcelFileDescriptor()",
                        "return_type": "ParcelFileDescriptor",
                        "description": "Gets the ParcelFileDescriptor from which to read the data for this Stream."
                    },
                    {
                        "name": "close()",
                        "return_type": "void",
                        "description": "This method is deprecated. use Payload.close("
                    }
                ]
            },
            {
                "name": "PayloadCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/PayloadCallback",
                "description": "Listener for incoming/outgoing Payloads between connected endpoints.",
                "methods": [
                    {
                        "name": "onPayloadReceived(String endpointId, Payload payload)",
                        "return_type": "abstract void",
                        "description": "Called when a Payload is received from a remote endpoint."
                    },
                    {
                        "name": "onPayloadTransferUpdate(String endpointId, PayloadTransferUpdate update)",
                        "return_type": "abstract void",
                        "description": "Called with progress information about an active Payload transfer, either incoming or outgoing."
                    }
                ]
            },
            {
                "name": "PayloadTransferUpdate",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/PayloadTransferUpdate",
                "description": "Describes the status for an active Payload transfer, either incoming or outgoing.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getBytesTransferred()",
                        "return_type": "long",
                        "description": "Returns the number of bytes transferred so far."
                    },
                    {
                        "name": "getPayloadId()",
                        "return_type": "long",
                        "description": "Returns the payload identifier."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "int",
                        "description": "Returns the status of the payload."
                    },
                    {
                        "name": "getTotalBytes()",
                        "return_type": "long",
                        "description": "Returns the total number of bytes in the payload."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PayloadTransferUpdate.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/PayloadTransferUpdate.Builder",
                "description": "Builder class for PayloadTransferUpdate.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PayloadTransferUpdate",
                        "description": "Builds an instance of PayloadTransferUpdate."
                    },
                    {
                        "name": "setBytesTransferred(long bytesTransferred)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets the number of bytes transferred so far."
                    },
                    {
                        "name": "setPayloadId(long payloadId)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets a payload identifier."
                    },
                    {
                        "name": "setStatus(int status)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets the status of the payload."
                    },
                    {
                        "name": "setTotalBytes(long totalBytes)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets the total number of bytes in the payload."
                    }
                ]
            },
            {
                "name": "Strategy",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Strategy",
                "description": "The Strategy to be used when discovering or advertising to Nearby devices.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Connections",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections",
                "description": "This interface is deprecated. Use ConnectionsClient.",
                "methods": [
                    {
                        "name": "acceptConnection(GoogleApiClient apiClient, String endpointId, PayloadCallback payloadCallback)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Accepts a connection to a remote endpoint."
                    },
                    {
                        "name": "acceptConnectionRequest(GoogleApiClient apiClient, String endpointId, byte[] handshakeData, Connections.MessageListener messageListener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use acceptConnection(GoogleApiClient, String, PayloadCallback"
                    },
                    {
                        "name": "cancelPayload(GoogleApiClient apiClient, long payloadId)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Cancels a Payload currently in-flight to or from remote endpoint(s"
                    },
                    {
                        "name": "disconnectFromEndpoint(GoogleApiClient apiClient, String endpointId)",
                        "return_type": "abstract void",
                        "description": "Disconnects from a remote endpoint."
                    },
                    {
                        "name": "rejectConnection(GoogleApiClient apiClient, String endpointId)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Rejects a connection to a remote endpoint."
                    },
                    {
                        "name": "rejectConnectionRequest(GoogleApiClient apiClient, String remoteEndpointId)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use rejectConnection(GoogleApiClient, String"
                    },
                    {
                        "name": "requestConnection(GoogleApiClient apiClient, String name, String endpointId, ConnectionLifecycleCallback connectionLifecycleCallback)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sends a request to connect to a remote endpoint."
                    },
                    {
                        "name": "sendConnectionRequest(GoogleApiClient apiClient, String name, String remoteEndpointId, byte[] handshakeData, Connections.ConnectionResponseCallback connectionResponseCallback, Connections.MessageListener messageListener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use requestConnection(GoogleApiClient, String, String, ConnectionLifecycleCallback"
                    },
                    {
                        "name": "sendPayload(GoogleApiClient apiClient, String endpointId, Payload payload)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sends a Payload to a remote endpoint."
                    },
                    {
                        "name": "sendPayload(GoogleApiClient apiClient, List<String> endpointIds, Payload payload)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Variant of sendPayload(GoogleApiClient, String, Payload"
                    },
                    {
                        "name": "sendReliableMessage(GoogleApiClient apiClient, List<String> remoteEndpointIds, byte[] payload)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use sendPayload(GoogleApiClient, List, Payload"
                    },
                    {
                        "name": "sendReliableMessage(GoogleApiClient apiClient, String remoteEndpointId, byte[] payload)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use sendPayload(GoogleApiClient, String, Payload"
                    },
                    {
                        "name": "sendUnreliableMessage(GoogleApiClient apiClient, String remoteEndpointId, byte[] payload)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use sendPayload(GoogleApiClient, String, Payload"
                    },
                    {
                        "name": "sendUnreliableMessage(GoogleApiClient apiClient, List<String> remoteEndpointIds, byte[] payload)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use sendPayload(GoogleApiClient, List, Payload"
                    },
                    {
                        "name": "startAdvertising(GoogleApiClient apiClient, String name, String serviceId, ConnectionLifecycleCallback connectionLifecycleCallback, AdvertisingOptions options)",
                        "return_type": "abstractPendingResult<Connections.StartAdvertisingResult>",
                        "description": "Starts advertising an endpoint for a local app."
                    },
                    {
                        "name": "startAdvertising(GoogleApiClient apiClient, String name, AppMetadata appMetadata, long durationMillis, Connections.ConnectionRequestListener connectionRequestListener)",
                        "return_type": "abstractPendingResult<Connections.StartAdvertisingResult>",
                        "description": "This method is deprecated. Use startAdvertising(GoogleApiClient, String, String, ConnectionLifecycleCallback, AdvertisingOptions"
                    },
                    {
                        "name": "startDiscovery(GoogleApiClient apiClient, String serviceId, long durationMillis, Connections.EndpointDiscoveryListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use startDiscovery(GoogleApiClient, String, EndpointDiscoveryCallback, DiscoveryOptions"
                    },
                    {
                        "name": "startDiscovery(GoogleApiClient apiClient, String serviceId, EndpointDiscoveryCallback endpointDiscoveryCallback, DiscoveryOptions options)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Starts discovery for remote endpoints with the specified service ID."
                    },
                    {
                        "name": "stopAdvertising(GoogleApiClient apiClient)",
                        "return_type": "abstract void",
                        "description": "Stops advertising a local endpoint."
                    },
                    {
                        "name": "stopAllEndpoints(GoogleApiClient apiClient)",
                        "return_type": "abstract void",
                        "description": "Disconnects from, and removes all traces of, all connected and/or discovered endpoints."
                    },
                    {
                        "name": "stopDiscovery(GoogleApiClient apiClient)",
                        "return_type": "abstract void",
                        "description": "Stops discovery for remote endpoints, after a previous call to startDiscovery(GoogleApiClient, String, com.google.android.gms.nearby.connection.EndpointDiscoveryCallback, DiscoveryOptions"
                    },
                    {
                        "name": "stopDiscovery(GoogleApiClient apiClient, String serviceId)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use stopDiscovery(GoogleApiClient"
                    }
                ]
            },
            {
                "name": "Connections.ConnectionResponseCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.ConnectionResponseCallback",
                "description": "This interface is deprecated. Use ConnectionLifecycleCallback instead.",
                "methods": [
                    {
                        "name": "onConnectionResponse(String remoteEndpointId, Status status, byte[] handshakeData)",
                        "return_type": "abstract void",
                        "description": "Called when a response is received for a connection request."
                    }
                ]
            },
            {
                "name": "Connections.MessageListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.MessageListener",
                "description": "This interface is deprecated. Use PayloadCallback instead.",
                "methods": [
                    {
                        "name": "onDisconnected(String endpointId)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Implement ConnectionLifecycleCallback.onDisconnected(String"
                    },
                    {
                        "name": "onMessageReceived(String endpointId, byte[] payload, boolean isReliable)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Implement PayloadCallback.onPayloadReceived(String, Payload"
                    }
                ]
            },
            {
                "name": "Connections.StartAdvertisingResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.StartAdvertisingResult",
                "description": "Result delivered when a local endpoint starts being advertised.",
                "methods": [
                    {
                        "name": "getLocalEndpointName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the human readable name for the local endpoint being advertised (possibly after resolving name collisions."
                    }
                ]
            },
            {
                "name": "ConnectionsClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionsClient",
                "description": "Entry point for advertising and discovering nearby apps and services, and communicating with them over established connections.",
                "methods": [
                    {
                        "name": "acceptConnection(String endpointId, PayloadCallback payloadCallback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Accepts a connection to a remote endpoint."
                    },
                    {
                        "name": "cancelPayload(long payloadId)",
                        "return_type": "abstract Task<Void>",
                        "description": "Cancels a Payload currently in-flight to or from remote endpoint(s"
                    },
                    {
                        "name": "disconnectFromEndpoint(String endpointId)",
                        "return_type": "abstract void",
                        "description": "Disconnects from a remote endpoint."
                    },
                    {
                        "name": "rejectConnection(String endpointId)",
                        "return_type": "abstract Task<Void>",
                        "description": "Rejects a connection to a remote endpoint."
                    },
                    {
                        "name": "requestConnection(byte[] endpointInfo, String endpointId, ConnectionLifecycleCallback connectionLifecycleCallback, ConnectionOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Sends a request to connect to a remote endpoint."
                    },
                    {
                        "name": "requestConnection(byte[] endpointInfo, String endpointId, ConnectionLifecycleCallback connectionLifecycleCallback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Sends a request to connect to a remote endpoint."
                    },
                    {
                        "name": "requestConnection(String name, String endpointId, ConnectionLifecycleCallback connectionLifecycleCallback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Sends a request to connect to a remote endpoint."
                    },
                    {
                        "name": "requestConnection(String name, String endpointId, ConnectionLifecycleCallback connectionLifecycleCallback, ConnectionOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Sends a request to connect to a remote endpoint."
                    },
                    {
                        "name": "sendPayload(String endpointId, Payload payload)",
                        "return_type": "abstract Task<Void>",
                        "description": "Sends a Payload to a remote endpoint."
                    },
                    {
                        "name": "sendPayload(List<String> endpointIds, Payload payload)",
                        "return_type": "abstract Task<Void>",
                        "description": "Variant of sendPayload(String, Payload"
                    },
                    {
                        "name": "startAdvertising(byte[] endpointInfo, String serviceId, ConnectionLifecycleCallback connectionLifecycleCallback, AdvertisingOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Starts advertising an endpoint for a local app."
                    },
                    {
                        "name": "startAdvertising(String name, String serviceId, ConnectionLifecycleCallback connectionLifecycleCallback, AdvertisingOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Starts advertising an endpoint for a local app."
                    },
                    {
                        "name": "startDiscovery(String serviceId, EndpointDiscoveryCallback endpointDiscoveryCallback, DiscoveryOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Starts discovery for remote endpoints with the specified service ID."
                    },
                    {
                        "name": "stopAdvertising()",
                        "return_type": "abstract void",
                        "description": "Stops advertising a local endpoint."
                    },
                    {
                        "name": "stopAllEndpoints()",
                        "return_type": "abstract void",
                        "description": "Disconnects from, and removes all traces of, all connected and/or discovered endpoints."
                    },
                    {
                        "name": "stopDiscovery()",
                        "return_type": "abstract void",
                        "description": "Stops discovery for remote endpoints, after a previous call to startDiscovery(String, EndpointDiscoveryCallback, DiscoveryOptions"
                    }
                ]
            },
            {
                "name": "AdvertisingOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/AdvertisingOptions.Builder",
                "description": "Builder class for AdvertisingOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdvertisingOptions",
                        "description": "Builds an instance of AdvertisingOptions."
                    },
                    {
                        "name": "setDisruptiveUpgrade(boolean disruptiveUpgrade)",
                        "return_type": "AdvertisingOptions.Builder",
                        "description": "Sets the disruptive upgrade flag."
                    },
                    {
                        "name": "setLowPower(boolean lowPower)",
                        "return_type": "AdvertisingOptions.Builder",
                        "description": "Sets whether low power should be used, if true only low poer mediums (like BLE"
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "AdvertisingOptions.Builder",
                        "description": "Set the advertising strategy, the strategy used for advertising, must match the strategy used in DiscoveryOptions."
                    }
                ]
            },
            {
                "name": "ConnectionOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionOptions.Builder",
                "description": "Builder class for ConnectionOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ConnectionOptions",
                        "description": "Builds an instance of ConnectionOptions."
                    },
                    {
                        "name": "setDisruptiveUpgrade(boolean disruptiveUpgrade)",
                        "return_type": "ConnectionOptions.Builder",
                        "description": "Sets the disruptive upgrade flag."
                    },
                    {
                        "name": "setLowPower(boolean lowPower)",
                        "return_type": "ConnectionOptions.Builder",
                        "description": "Sets whether to attempt to connect with the lowest possible power (like BLE"
                    }
                ]
            },
            {
                "name": "ConnectionsOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/ConnectionsOptions.Builder",
                "description": "Builder for ConnectionsOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ConnectionsOptions",
                        "description": "Builds an instance of ConnectionsOptions."
                    }
                ]
            },
            {
                "name": "DiscoveryOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/DiscoveryOptions.Builder",
                "description": "Builder class for DiscoveryOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DiscoveryOptions",
                        "description": "Builds an instance of DiscoveryOptions."
                    },
                    {
                        "name": "setLowPower(boolean lowPower)",
                        "return_type": "DiscoveryOptions.Builder",
                        "description": "Sets whether to use low power."
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "DiscoveryOptions.Builder",
                        "description": "Sets the discovery strategy."
                    }
                ]
            },
            {
                "name": "Payload.File",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Payload.File",
                "description": "Represents a file in local storage on the device.",
                "methods": [
                    {
                        "name": "asJavaFile()",
                        "return_type": "File",
                        "description": "This method is deprecated. use asUri("
                    },
                    {
                        "name": "asParcelFileDescriptor()",
                        "return_type": "ParcelFileDescriptor",
                        "description": "Gets the ParcelFileDescriptor from which to read the data of this File; useful when reading the File in a streaming fashion, before the entire contents have arrived from the remote endpoint."
                    },
                    {
                        "name": "asUri()",
                        "return_type": "Uri",
                        "description": "Gets a file Uri for which the client package has read and write permissions (see ContentResolver.openInputStream(Uri"
                    },
                    {
                        "name": "close()",
                        "return_type": "void",
                        "description": "This method is deprecated. use Payload.close("
                    },
                    {
                        "name": "getSize()",
                        "return_type": "long",
                        "description": "Gets the size of this Payload.File in bytes."
                    }
                ]
            },
            {
                "name": "Payload.Stream",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Payload.Stream",
                "description": "Represents a stream of data.",
                "methods": [
                    {
                        "name": "asInputStream()",
                        "return_type": "InputStream",
                        "description": "Gets the InputStream from which to read the data for this Stream."
                    },
                    {
                        "name": "asParcelFileDescriptor()",
                        "return_type": "ParcelFileDescriptor",
                        "description": "Gets the ParcelFileDescriptor from which to read the data for this Stream."
                    },
                    {
                        "name": "close()",
                        "return_type": "void",
                        "description": "This method is deprecated. use Payload.close("
                    }
                ]
            },
            {
                "name": "PayloadTransferUpdate.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/PayloadTransferUpdate.Builder",
                "description": "Builder class for PayloadTransferUpdate.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PayloadTransferUpdate",
                        "description": "Builds an instance of PayloadTransferUpdate."
                    },
                    {
                        "name": "setBytesTransferred(long bytesTransferred)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets the number of bytes transferred so far."
                    },
                    {
                        "name": "setPayloadId(long payloadId)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets a payload identifier."
                    },
                    {
                        "name": "setStatus(int status)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets the status of the payload."
                    },
                    {
                        "name": "setTotalBytes(long totalBytes)",
                        "return_type": "PayloadTransferUpdate.Builder",
                        "description": "Sets the total number of bytes in the payload."
                    }
                ]
            },
            {
                "name": "Connections.ConnectionRequestListener",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.ConnectionRequestListener",
                "description": "This class is deprecated. Use ConnectionLifecycleCallback instead.",
                "methods": [
                    {
                        "name": "onConnectionRequest(String remoteEndpointId, String remoteEndpointName, byte[] handshakeData)",
                        "return_type": "void",
                        "description": "Called when a remote endpoint requests a connection to a local endpoint."
                    }
                ]
            },
            {
                "name": "Connections.ConnectionResponseCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.ConnectionResponseCallback",
                "description": "This interface is deprecated. Use ConnectionLifecycleCallback instead.",
                "methods": [
                    {
                        "name": "onConnectionResponse(String remoteEndpointId, Status status, byte[] handshakeData)",
                        "return_type": "abstract void",
                        "description": "Called when a response is received for a connection request."
                    }
                ]
            },
            {
                "name": "Connections.EndpointDiscoveryListener",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.EndpointDiscoveryListener",
                "description": "This class is deprecated. Use EndpointDiscoveryCallback instead.",
                "methods": [
                    {
                        "name": "onEndpointFound(String endpointId, String serviceId, String name)",
                        "return_type": "void",
                        "description": "Called when a remote endpoint is discovered."
                    },
                    {
                        "name": "onEndpointLost(String endpointId)",
                        "return_type": "abstract void",
                        "description": "Called when a remote endpoint is no longer discoverable; only called for endpoints that previously had been passed to onEndpointFound(String, String, String"
                    }
                ]
            },
            {
                "name": "Connections.MessageListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.MessageListener",
                "description": "This interface is deprecated. Use PayloadCallback instead.",
                "methods": [
                    {
                        "name": "onDisconnected(String endpointId)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Implement ConnectionLifecycleCallback.onDisconnected(String"
                    },
                    {
                        "name": "onMessageReceived(String endpointId, byte[] payload, boolean isReliable)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Implement PayloadCallback.onPayloadReceived(String, Payload"
                    }
                ]
            },
            {
                "name": "Connections.StartAdvertisingResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/nearby/connection/Connections.StartAdvertisingResult",
                "description": "Result delivered when a local endpoint starts being advertised.",
                "methods": [
                    {
                        "name": "getLocalEndpointName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the human readable name for the local endpoint being advertised (possibly after resolving name collisions."
                    }
                ]
            }
        ]
    },
    {
        "name": "iid",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/iid/package-summary",
        "classes": [
            {
                "name": "InstanceID",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/iid/InstanceID",
                "description": "This class was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID.",
                "methods": [
                    {
                        "name": "deleteInstanceID()",
                        "return_type": "void",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    },
                    {
                        "name": "deleteToken(String authorizedEntity, String scope)",
                        "return_type": "void",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    },
                    {
                        "name": "getCreationTime()",
                        "return_type": "long",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    },
                    {
                        "name": "getInstance(Context context)",
                        "return_type": "staticInstanceID",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    },
                    {
                        "name": "getToken(String authorizedEntity, String scope)",
                        "return_type": "String",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    },
                    {
                        "name": "getToken(String authorizedEntity, String scope, Bundle extras)",
                        "return_type": "String",
                        "description": "This method was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID."
                    }
                ]
            },
            {
                "name": "InstanceIDListenerService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/iid/InstanceIDListenerService",
                "description": "This class was deprecated. Instance ID is deprecated and replaced by Firebase Instance ID. See the FCM migration guide for details on how to migrate to Firebase Instance ID.",
                "methods": [
                    {
                        "name": "onTokenRefresh()",
                        "return_type": "void",
                        "description": "Called when the system determines that the tokens need to be refreshed."
                    }
                ]
            }
        ]
    },
    {
        "name": "fido",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/package-summary",
        "classes": [
            {
                "name": "Fido",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/Fido",
                "description": "Entry point for Fido APIs.",
                "methods": [
                    {
                        "name": "getFido2ApiClient(Context context)",
                        "return_type": "staticFido2ApiClient",
                        "description": "Creates a new instance of Fido2ApiClient for use in a non-activity Context."
                    },
                    {
                        "name": "getFido2ApiClient(Activity activity)",
                        "return_type": "staticFido2ApiClient",
                        "description": "Creates a new instance of Fido2ApiClient for use in an Activity."
                    },
                    {
                        "name": "getFido2PrivilegedApiClient(Context context)",
                        "return_type": "staticFido2PrivilegedApiClient",
                        "description": "Creates a new instance of Fido2PrivilegedApiClient for use in a non-activity Context."
                    },
                    {
                        "name": "getFido2PrivilegedApiClient(Activity activity)",
                        "return_type": "staticFido2PrivilegedApiClient",
                        "description": "Create a new instance of Fido2PrivilegedApiClient for use in an Activity."
                    },
                    {
                        "name": "getSourceDirectTransferClient(Context context)",
                        "return_type": "final staticSourceDirectTransferClient",
                        "description": "Creates a new instance of SourceDirectTransferClient for use in a non-activity Context."
                    },
                    {
                        "name": "getSourceDirectTransferClient(Activity activity)",
                        "return_type": "final staticSourceDirectTransferClient",
                        "description": "Creates a new instance of SourceDirectTransferClient for use in a an Activity."
                    },
                    {
                        "name": "getU2fApiClient(Context context)",
                        "return_type": "staticU2fApiClient",
                        "description": "Creates a new instance of U2fApiClient for use in a non-activity Context."
                    },
                    {
                        "name": "getU2fApiClient(Activity activity)",
                        "return_type": "staticU2fApiClient",
                        "description": "Creates a new instance of U2fApiClient for use in an Activity."
                    }
                ]
            }
        ]
    },
    {
        "name": "formats",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/formats/package-summary",
        "classes": [
            {
                "name": "AdManagerAdViewOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/AdManagerAdViewOptions",
                "description": "Options to configure Google Ad Manager banner requests using an AdLoader.",
                "methods": [
                    {
                        "name": "getManualImpressionsEnabled()",
                        "return_type": "boolean",
                        "description": "Returns true if manual impression reporting is enabled."
                    }
                ]
            },
            {
                "name": "AdManagerAdViewOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/AdManagerAdViewOptions.Builder",
                "description": "Builder for a AdManagerAdViewOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdManagerAdViewOptions",
                        "description": "Constructs a AdManagerAdViewOptions object with the specified attributes."
                    },
                    {
                        "name": "setManualImpressionsEnabled(boolean manualImpressionsEnabled)",
                        "return_type": "AdManagerAdViewOptions.Builder",
                        "description": "Enables manual impression reporting for Google Ad Manager reservations."
                    }
                ]
            },
            {
                "name": "MediaView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/MediaView",
                "description": "This class is deprecated. Use MediaView.",
                "methods": [
                    {
                        "name": "setImageScaleType(ImageView.ScaleType scaleType)",
                        "return_type": "void",
                        "description": "Sets the ImageView.ScaleType when image is rendered in MediaView."
                    },
                    {
                        "name": "setMediaContent(MediaContent mediaContent)",
                        "return_type": "void",
                        "description": "Sets the media content to be displayed in the media view."
                    }
                ]
            },
            {
                "name": "NativeAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAd",
                "description": "This class is deprecated. Use NativeAd.",
                "methods": [
                    {
                        "name": "performClick(Bundle clickData)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use UnifiedNativeAd.performClick(Bundle"
                    },
                    {
                        "name": "recordImpression(Bundle impressionData)",
                        "return_type": "abstract boolean",
                        "description": "This method is deprecated. Use UnifiedNativeAd.recordImpression(Bundle"
                    },
                    {
                        "name": "reportTouchEvent(Bundle touchEventData)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use UnifiedNativeAd.reportTouchEvent(Bundle"
                    }
                ]
            },
            {
                "name": "NativeAd.AdChoicesInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAd.AdChoicesInfo",
                "description": "This class is deprecated. Use NativeAd.AdChoicesInfo.",
                "methods": [
                    {
                        "name": "getImages()",
                        "return_type": "abstractList<NativeAd.Image>",
                        "description": "Returns a list of images for the attribution."
                    },
                    {
                        "name": "getText()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the text representing the attribution type."
                    }
                ]
            },
            {
                "name": "NativeAd.Image",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAd.Image",
                "description": "This class is deprecated. Use NativeAd.Image.",
                "methods": [
                    {
                        "name": "getDrawable()",
                        "return_type": "abstractDrawable",
                        "description": "Returns the drawable representing the image."
                    },
                    {
                        "name": "getScale()",
                        "return_type": "abstract double",
                        "description": "Returns the scale for this image, which denotes the ratio of pixels to dp."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "abstractUri",
                        "description": "Returns the URI for this image."
                    }
                ]
            },
            {
                "name": "NativeAdOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAdOptions",
                "description": "This class is deprecated. Use NativeAdOptions.",
                "methods": [
                    {
                        "name": "getAdChoicesPlacement()",
                        "return_type": "int",
                        "description": "Returns the AdChoices placement."
                    },
                    {
                        "name": "getImageOrientation()",
                        "return_type": "int",
                        "description": "This method is deprecated. Use getMediaAspectRatio("
                    },
                    {
                        "name": "getMediaAspectRatio()",
                        "return_type": "int",
                        "description": "Returns the aspect ratio of the media to be returned."
                    },
                    {
                        "name": "getVideoOptions()",
                        "return_type": "VideoOptions",
                        "description": "Returns the VideoOptions object."
                    },
                    {
                        "name": "shouldRequestMultipleImages()",
                        "return_type": "boolean",
                        "description": "Returns true if multiple images are requested."
                    },
                    {
                        "name": "shouldReturnUrlsForImageAssets()",
                        "return_type": "boolean",
                        "description": "Returns true if urls will be returned for image assets instead of images themselves."
                    }
                ]
            },
            {
                "name": "NativeAdOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAdOptions.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NativeAdOptions",
                        "description": "Constructs a NativeAdOptions object with the specified attributes."
                    },
                    {
                        "name": "setAdChoicesPlacement(int adChoicesPlacement)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the placement of AdChoices icon (if present"
                    },
                    {
                        "name": "setImageOrientation(int orientation)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "This method is deprecated. Use setMediaAspectRatio(int"
                    },
                    {
                        "name": "setMediaAspectRatio(int aspectRatio)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setRequestCustomMuteThisAd(boolean requestCustomMuteThisAd)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Set this boolean to true to request a custom implementation for the Mute This Ad feature."
                    },
                    {
                        "name": "setRequestMultipleImages(boolean shouldRequestMultipleImages)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether multiple images should be requested or not."
                    },
                    {
                        "name": "setReturnUrlsForImageAssets(boolean shouldReturnUrls)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether URLs alone should be returned for image assets."
                    },
                    {
                        "name": "setVideoOptions(VideoOptions videoOptions)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the VideoOptions object."
                    }
                ]
            },
            {
                "name": "UnifiedNativeAdAssetNames",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/formats/UnifiedNativeAdAssetNames",
                "description": "This class is deprecated. Use NativeAdAssetNames.",
                "methods": []
            },
            {
                "name": "OnAdManagerAdViewLoadedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/formats/OnAdManagerAdViewLoadedListener",
                "description": "Interface definition for a callback to be invoked when a Google Ad Manager banner ad loads.",
                "methods": [
                    {
                        "name": "onAdManagerAdViewLoaded(AdManagerAdView adView)",
                        "return_type": "abstract void",
                        "description": "Called when an Ad Manager banner ad loads."
                    }
                ]
            },
            {
                "name": "AdManagerAdViewOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/formats/AdManagerAdViewOptions.Builder",
                "description": "Builder for a AdManagerAdViewOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdManagerAdViewOptions",
                        "description": "Constructs a AdManagerAdViewOptions object with the specified attributes."
                    },
                    {
                        "name": "setManualImpressionsEnabled(boolean manualImpressionsEnabled)",
                        "return_type": "AdManagerAdViewOptions.Builder",
                        "description": "Enables manual impression reporting for Google Ad Manager reservations."
                    }
                ]
            },
            {
                "name": "NativeAd.AdChoicesInfo",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAd.AdChoicesInfo",
                "description": "This class is deprecated. Use NativeAd.AdChoicesInfo.",
                "methods": [
                    {
                        "name": "getImages()",
                        "return_type": "abstractList<NativeAd.Image>",
                        "description": "Returns a list of images for the attribution."
                    },
                    {
                        "name": "getText()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the text representing the attribution type."
                    }
                ]
            },
            {
                "name": "NativeAd.Image",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAd.Image",
                "description": "This class is deprecated. Use NativeAd.Image.",
                "methods": [
                    {
                        "name": "getDrawable()",
                        "return_type": "abstractDrawable",
                        "description": "Returns the drawable representing the image."
                    },
                    {
                        "name": "getScale()",
                        "return_type": "abstract double",
                        "description": "Returns the scale for this image, which denotes the ratio of pixels to dp."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "abstractUri",
                        "description": "Returns the URI for this image."
                    }
                ]
            },
            {
                "name": "NativeAdOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/formats/NativeAdOptions.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "NativeAdOptions",
                        "description": "Constructs a NativeAdOptions object with the specified attributes."
                    },
                    {
                        "name": "setAdChoicesPlacement(int adChoicesPlacement)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the placement of AdChoices icon (if present"
                    },
                    {
                        "name": "setImageOrientation(int orientation)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "This method is deprecated. Use setMediaAspectRatio(int"
                    },
                    {
                        "name": "setMediaAspectRatio(int aspectRatio)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setRequestCustomMuteThisAd(boolean requestCustomMuteThisAd)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Set this boolean to true to request a custom implementation for the Mute This Ad feature."
                    },
                    {
                        "name": "setRequestMultipleImages(boolean shouldRequestMultipleImages)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether multiple images should be requested or not."
                    },
                    {
                        "name": "setReturnUrlsForImageAssets(boolean shouldReturnUrls)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets whether URLs alone should be returned for image assets."
                    },
                    {
                        "name": "setVideoOptions(VideoOptions videoOptions)",
                        "return_type": "NativeAdOptions.Builder",
                        "description": "Sets the VideoOptions object."
                    }
                ]
            }
        ]
    },
    {
        "name": "drive",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/drive/package-summary",
        "classes": [
            {
                "name": "CreateFileActivityBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/CreateFileActivityBuilder",
                "description": "This class was deprecated. Use CreateFileActivityOptions instead.",
                "methods": [
                    {
                        "name": "build(GoogleApiClient apiClient)",
                        "return_type": "IntentSender",
                        "description": "Gets an Intent that can be used to start the Create File activity."
                    },
                    {
                        "name": "setActivityStartFolder(DriveId folder)",
                        "return_type": "CreateFileActivityBuilder",
                        "description": "Sets the default folder that will be presented at activity startup as the location for file creation."
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "CreateFileActivityBuilder",
                        "description": "Sets the title displayed in the activity."
                    },
                    {
                        "name": "setInitialDriveContents(DriveContents driveContents)",
                        "return_type": "CreateFileActivityBuilder",
                        "description": "Sets the initial DriveContents for the new file."
                    },
                    {
                        "name": "setInitialMetadata(MetadataChangeSet metadataChangeSet)",
                        "return_type": "CreateFileActivityBuilder",
                        "description": "Sets the initial metadata for the new file."
                    }
                ]
            },
            {
                "name": "CreateFileActivityOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/CreateFileActivityOptions",
                "description": "Options used to configure settings for the create file dialog activity.",
                "methods": []
            },
            {
                "name": "CreateFileActivityOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/CreateFileActivityOptions.Builder",
                "description": "Builder used to create a new instance of CreateFileActivityOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CreateFileActivityOptions",
                        "description": "Builds the CreateShortcutFileActivityOptions with the current options."
                    },
                    {
                        "name": "setActivityStartFolder(DriveId folder)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the folder that the create file dialog activity will initially display to folder."
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the title of the dialog activity to title."
                    },
                    {
                        "name": "setInitialDriveContents(DriveContents driveContents)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the initial contents for the new file to driveContents."
                    },
                    {
                        "name": "setInitialMetadata(MetadataChangeSet metadataChangeSet)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the initial metadata for the new file to metadataChangeSet."
                    }
                ]
            },
            {
                "name": "Drive",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/Drive",
                "description": "This class is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getDriveClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticDriveClient",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getDriveClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticDriveClient",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getDriveResourceClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticDriveResourceClient",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getDriveResourceClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticDriveResourceClient",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    }
                ]
            },
            {
                "name": "DriveClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/DriveClient",
                "description": "This class is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getDriveId(String resourceId)",
                        "return_type": "abstractTask<DriveId>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getUploadPreferences()",
                        "return_type": "abstractTask<TransferPreferences>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "newCreateFileActivityIntentSender(CreateFileActivityOptions options)",
                        "return_type": "abstractTask<IntentSender>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "newOpenFileActivityIntentSender(OpenFileActivityOptions options)",
                        "return_type": "abstractTask<IntentSender>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "requestSync()",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "setUploadPreferences(TransferPreferences transferPreferences)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    }
                ]
            },
            {
                "name": "DriveId",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/DriveId",
                "description": "A canonical identifier for a Drive resource.",
                "methods": [
                    {
                        "name": "asDriveFile()",
                        "return_type": "DriveFile",
                        "description": "Returns a DriveFile object that can be used to interact with the file specified by this DriveId."
                    },
                    {
                        "name": "asDriveFolder()",
                        "return_type": "DriveFolder",
                        "description": "Returns a DriveFolder object that can be used to interact with the folder specified by this DriveId."
                    },
                    {
                        "name": "asDriveResource()",
                        "return_type": "DriveResource",
                        "description": "Returns a DriveResource object that can be used to interact with the file or folder specified by this DriveId."
                    },
                    {
                        "name": "decodeFromString(String s)",
                        "return_type": "staticDriveId",
                        "description": "Decodes the result of encodeToString("
                    },
                    {
                        "name": "encodeToString()",
                        "return_type": "finalString",
                        "description": "Returns a String representation of this DriveId that can be safely persisted, and from which an equivalent DriveId can later be reconstructed using decodeFromString(String"
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getResourceId()",
                        "return_type": "String",
                        "description": "Returns the remote Drive resource id associated with the resource."
                    },
                    {
                        "name": "getResourceType()",
                        "return_type": "int",
                        "description": "Returns the resource type corresponding to this DriveId."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toInvariantString()",
                        "return_type": "finalString",
                        "description": "Returns an invariant string for this DriveId."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a String representation of the ID."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveResourceClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/DriveResourceClient",
                "description": "This class is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "addChangeListener(DriveResource resource, OnChangeListener listener)",
                        "return_type": "abstractTask<ListenerToken>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "addChangeSubscription(DriveResource resource)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "cancelOpenFileCallback(ListenerToken token)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "commitContents(DriveContents contents, MetadataChangeSet changeSet)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "commitContents(DriveContents contents, MetadataChangeSet changeSet, ExecutionOptions executionOptions)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "createContents()",
                        "return_type": "abstractTask<DriveContents>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "createFile(DriveFolder folder, MetadataChangeSet changeSet, DriveContents driveContents, ExecutionOptions executionOptions)",
                        "return_type": "abstractTask<DriveFile>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "createFile(DriveFolder folder, MetadataChangeSet changeSet, DriveContents driveContents)",
                        "return_type": "abstractTask<DriveFile>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "createFolder(DriveFolder folder, MetadataChangeSet changeSet)",
                        "return_type": "abstractTask<DriveFolder>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "delete(DriveResource resource)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "discardContents(DriveContents contents)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getAppFolder()",
                        "return_type": "abstractTask<DriveFolder>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getMetadata(DriveResource resource)",
                        "return_type": "abstractTask<Metadata>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getRootFolder()",
                        "return_type": "abstractTask<DriveFolder>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "listChildren(DriveFolder folder)",
                        "return_type": "abstractTask<MetadataBuffer>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "listParents(DriveResource resource)",
                        "return_type": "abstractTask<MetadataBuffer>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "openFile(DriveFile file, int openMode)",
                        "return_type": "abstractTask<DriveContents>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "openFile(DriveFile file, int openMode, OpenFileCallback callback)",
                        "return_type": "abstractTask<ListenerToken>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "query(Query query)",
                        "return_type": "abstractTask<MetadataBuffer>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "queryChildren(DriveFolder folder, Query query)",
                        "return_type": "abstractTask<MetadataBuffer>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "removeChangeListener(ListenerToken token)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "removeChangeSubscription(DriveResource resource)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "reopenContentsForWrite(DriveContents contents)",
                        "return_type": "abstractTask<DriveContents>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "setParents(DriveResource resource, Set<DriveId> parentIds)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "trash(DriveResource resource)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "untrash(DriveResource resource)",
                        "return_type": "abstractTask<Void>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "updateMetadata(DriveResource resource, MetadataChangeSet changeSet)",
                        "return_type": "abstractTask<Metadata>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    }
                ]
            },
            {
                "name": "DriveStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/DriveStatusCodes",
                "description": "Drive specific status codes, for use in getStatusCode().",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly!"
                    }
                ]
            },
            {
                "name": "ExecutionOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/ExecutionOptions",
                "description": "Options that can be included with certain requests to the API to configure notification and conflict resolution behavior.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExecutionOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/ExecutionOptions.Builder",
                "description": "A builder for creating a new ExecutionOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExecutionOptions",
                        "description": ""
                    },
                    {
                        "name": "setConflictStrategy(int strategy)",
                        "return_type": "ExecutionOptions.Builder",
                        "description": "Sets a conflict resolution strategy for this action."
                    },
                    {
                        "name": "setNotifyOnCompletion(boolean notify)",
                        "return_type": "ExecutionOptions.Builder",
                        "description": "Sets whether the client should be notified when the action associated with these ExecutionOptions is applied on the server."
                    },
                    {
                        "name": "setTrackingTag(String trackingTag)",
                        "return_type": "ExecutionOptions.Builder",
                        "description": "Sets a client-defined string that will be returned to the client through a completion notification on DriveEventService after this particular action either succeeds or fails when applied on the server."
                    }
                ]
            },
            {
                "name": "Metadata",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/Metadata",
                "description": "The details of a Drive file or folder.",
                "methods": [
                    {
                        "name": "getAlternateLink()",
                        "return_type": "String",
                        "description": "Returns a link for opening the file using a relevant Google editor or viewer."
                    },
                    {
                        "name": "getContentAvailability()",
                        "return_type": "int",
                        "description": "Returns CONTENT_NOT_AVAILABLE_LOCALLY when the content is not available on the device or CONTENT_AVAILABLE_LOCALLY when the content is available on the device."
                    },
                    {
                        "name": "getCreatedDate()",
                        "return_type": "Date",
                        "description": "Returns the create time for this resource."
                    },
                    {
                        "name": "getCustomProperties()",
                        "return_type": "Map<CustomPropertyKey,String>",
                        "description": "Gets all custom properties and their associated values."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "A short description of the resource."
                    },
                    {
                        "name": "getDriveId()",
                        "return_type": "DriveId",
                        "description": "Returns the id of the resource"
                    },
                    {
                        "name": "getEmbedLink()",
                        "return_type": "String",
                        "description": "A link for embedding the file."
                    },
                    {
                        "name": "getFileExtension()",
                        "return_type": "String",
                        "description": "The file extension used when downloading this file."
                    },
                    {
                        "name": "getFileSize()",
                        "return_type": "long",
                        "description": "The size of the file in bytes."
                    },
                    {
                        "name": "getLastViewedByMeDate()",
                        "return_type": "Date",
                        "description": "Returns the last time this resource was viewed by the user or null if the user never viewed this resource."
                    },
                    {
                        "name": "getMimeType()",
                        "return_type": "String",
                        "description": "Returns the MIME type of the resource"
                    },
                    {
                        "name": "getModifiedByMeDate()",
                        "return_type": "Date",
                        "description": "Returns the last time this resource was modified by the user or null if the user never modified this resource."
                    },
                    {
                        "name": "getModifiedDate()",
                        "return_type": "Date",
                        "description": "Returns the last time this resource was modified by anyone."
                    },
                    {
                        "name": "getOriginalFilename()",
                        "return_type": "String",
                        "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API."
                    },
                    {
                        "name": "getQuotaBytesUsed()",
                        "return_type": "long",
                        "description": "The number of quota bytes used by this file."
                    },
                    {
                        "name": "getSharedWithMeDate()",
                        "return_type": "Date",
                        "description": "Returns the time at which this resource was shared with the user or null if the user is the owner of this resource."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Returns the title of the resource"
                    },
                    {
                        "name": "getWebContentLink()",
                        "return_type": "String",
                        "description": "A link for downloading the content of the file in a browser using cookie based authentication."
                    },
                    {
                        "name": "getWebViewLink()",
                        "return_type": "String",
                        "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc"
                    },
                    {
                        "name": "isEditable()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource can be edited by the current user."
                    },
                    {
                        "name": "isExplicitlyTrashed()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource has been explicitly trashed, as opposed to recursively trashed."
                    },
                    {
                        "name": "isFolder()",
                        "return_type": "boolean",
                        "description": "Returns true if this Metadata is for a folder."
                    },
                    {
                        "name": "isInAppFolder()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource is in the Application Folder."
                    },
                    {
                        "name": "isPinnable()",
                        "return_type": "boolean",
                        "description": "Returns true if the resource can be pinned."
                    },
                    {
                        "name": "isPinned()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource has been pinned (a request has been made to make the content available offline"
                    },
                    {
                        "name": "isRestricted()",
                        "return_type": "boolean",
                        "description": "Whether viewers are prevented from downloading this file."
                    },
                    {
                        "name": "isShared()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource is a shared resource."
                    },
                    {
                        "name": "isStarred()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource is starred by the user."
                    },
                    {
                        "name": "isTrashable()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource can be trashed by this user."
                    },
                    {
                        "name": "isTrashed()",
                        "return_type": "boolean",
                        "description": "Returns true if this resource has been trashed."
                    },
                    {
                        "name": "isViewed()",
                        "return_type": "boolean",
                        "description": "Whether this file has been viewed by this user."
                    }
                ]
            },
            {
                "name": "MetadataBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/MetadataBuffer",
                "description": "A data buffer that points to Metadata entries.",
                "methods": [
                    {
                        "name": "get(int row)",
                        "return_type": "Metadata",
                        "description": ""
                    },
                    {
                        "name": "getNextPageToken()",
                        "return_type": "String",
                        "description": "This method is deprecated. Paging is not supported, so this always returns null."
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MetadataChangeSet",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/MetadataChangeSet",
                "description": "A collection of metadata changes.",
                "methods": [
                    {
                        "name": "getCustomPropertyChangeMap()",
                        "return_type": "Map<CustomPropertyKey,String>",
                        "description": "Returns a map that defines the custom property changes for the resource."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "Returns the new description for the resource or null if unchanged."
                    },
                    {
                        "name": "getIndexableText()",
                        "return_type": "String",
                        "description": "Returns the new text to be indexed for the resource or null if unchanged."
                    },
                    {
                        "name": "getLastViewedByMeDate()",
                        "return_type": "Date",
                        "description": "Returns the date which will be recorded as when the user most recently viewed the resource or null if unchanged."
                    },
                    {
                        "name": "getMimeType()",
                        "return_type": "String",
                        "description": "Returns the new MIME type for the resource or null if unchanged."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Returns the new title for the resource or null if unchanged."
                    },
                    {
                        "name": "isPinned()",
                        "return_type": "Boolean",
                        "description": "Returns the new pinned state for the resource or null if unchanged."
                    },
                    {
                        "name": "isStarred()",
                        "return_type": "Boolean",
                        "description": "Returns the new starred state for the resource or null if unchanged."
                    },
                    {
                        "name": "isViewed()",
                        "return_type": "Boolean",
                        "description": "Returns the new viewed state for the resource or null if unchanged."
                    }
                ]
            },
            {
                "name": "MetadataChangeSet.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/MetadataChangeSet.Builder",
                "description": "A builder for creating a new MetadataChangeSet.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MetadataChangeSet",
                        "description": ""
                    },
                    {
                        "name": "deleteCustomProperty(CustomPropertyKey key)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Deletes the given custom property of the resource."
                    },
                    {
                        "name": "setCustomProperty(CustomPropertyKey key, String value)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets a Custom File Property for the resource."
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the description for the resource."
                    },
                    {
                        "name": "setIndexableText(String text)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the text to be indexed for the resource."
                    },
                    {
                        "name": "setLastViewedByMeDate(Date date)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the date when the user most recently viewed the resource."
                    },
                    {
                        "name": "setMimeType(String mimeType)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets a MIME type for the resource."
                    },
                    {
                        "name": "setPinned(boolean pinned)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "If true, the file's contents will be kept up to date locally and thus the contents will be available when the device is offline."
                    },
                    {
                        "name": "setStarred(boolean starred)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets whether the resource will be starred."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the title for the resource."
                    },
                    {
                        "name": "setViewed(boolean viewed)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "This method was deprecated. Use setViewed("
                    },
                    {
                        "name": "setViewed()",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the resource to viewed."
                    }
                ]
            },
            {
                "name": "OpenFileActivityBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/OpenFileActivityBuilder",
                "description": "This class was deprecated. Use OpenFileActivityOptions instead.",
                "methods": [
                    {
                        "name": "build(GoogleApiClient apiClient)",
                        "return_type": "IntentSender",
                        "description": "Builds an IntentSender from the builder attributes that can be used to start the Open File activity using startIntentSenderForResult(IntentSender, int, Intent, int, int, int"
                    },
                    {
                        "name": "setActivityStartFolder(DriveId folder)",
                        "return_type": "OpenFileActivityBuilder",
                        "description": "Sets the folder that the Activity will display initially."
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "OpenFileActivityBuilder",
                        "description": "Sets the title displayed in the activity."
                    },
                    {
                        "name": "setMimeType(String[] mimeTypes)",
                        "return_type": "OpenFileActivityBuilder",
                        "description": "Sets the MIME type filter which controls which kinds of files are selectable in the file picker."
                    },
                    {
                        "name": "setSelectionFilter(Filter filter)",
                        "return_type": "OpenFileActivityBuilder",
                        "description": "Sets the Filter that controls which files are selectable in the file picker."
                    }
                ]
            },
            {
                "name": "OpenFileActivityOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/OpenFileActivityOptions",
                "description": "Options used to configure settings for the open file dialog activity.",
                "methods": []
            },
            {
                "name": "OpenFileActivityOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/OpenFileActivityOptions.Builder",
                "description": "Builder used to create a new instance of OpenFileActivityOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "OpenFileActivityOptions",
                        "description": "Build the CreateShortcutFileActivityOptions with the current options."
                    },
                    {
                        "name": "setActivityStartFolder(DriveId folder)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the folder that the open file dialog activity will initially display to folder."
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the title of the dialog activity to title."
                    },
                    {
                        "name": "setMimeType(List<String> mimeTypes)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the mime-type filter to mimeTypes."
                    },
                    {
                        "name": "setSelectionFilter(Filter filter)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the Filter that is used to control which files will be selectable in the open file dialog activity to filter."
                    }
                ]
            },
            {
                "name": "TransferPreferencesBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/TransferPreferencesBuilder",
                "description": "Builder of immutable TransferPreferences instances.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TransferPreferences",
                        "description": "Builds an instance of TransferPreferences based on the values set in this builder."
                    },
                    {
                        "name": "setBatteryUsagePreference(int batteryUsagePreference)",
                        "return_type": "TransferPreferencesBuilder",
                        "description": "Updates the value of battery usage preference in the builder."
                    },
                    {
                        "name": "setIsRoamingAllowed(boolean isRoamingAllowed)",
                        "return_type": "TransferPreferencesBuilder",
                        "description": "Updates the value of roaming preference in the builder."
                    },
                    {
                        "name": "setNetworkPreference(int networkPreference)",
                        "return_type": "TransferPreferencesBuilder",
                        "description": "Updates the value of network preference in the builder."
                    }
                ]
            },
            {
                "name": "DriveApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "fetchDriveId(GoogleApiClient apiClient, String resourceId)",
                        "return_type": "abstractPendingResult<DriveApi.DriveIdResult>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getAppFolder(GoogleApiClient apiClient)",
                        "return_type": "abstractDriveFolder",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "getRootFolder(GoogleApiClient apiClient)",
                        "return_type": "abstractDriveFolder",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "newCreateFileActivityBuilder()",
                        "return_type": "abstractCreateFileActivityBuilder",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "newDriveContents(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<DriveApi.DriveContentsResult>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "newOpenFileActivityBuilder()",
                        "return_type": "abstractOpenFileActivityBuilder",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "query(GoogleApiClient apiClient, Query query)",
                        "return_type": "abstractPendingResult<DriveApi.MetadataBufferResult>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "requestSync(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    }
                ]
            },
            {
                "name": "DriveApi.DriveContentsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi.DriveContentsResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getDriveContents()",
                        "return_type": "abstractDriveContents",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveApi.DriveIdResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi.DriveIdResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getDriveId()",
                        "return_type": "abstractDriveId",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveApi.MetadataBufferResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi.MetadataBufferResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getMetadataBuffer()",
                        "return_type": "abstractMetadataBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveContents",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveContents",
                "description": "A reference to a Drive file's contents.",
                "methods": [
                    {
                        "name": "commit(GoogleApiClient apiClient, MetadataChangeSet changeSet, ExecutionOptions executionOptions)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use commitContents(DriveContents, MetadataChangeSet, ExecutionOptions"
                    },
                    {
                        "name": "commit(GoogleApiClient apiClient, MetadataChangeSet changeSet)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use commitContents(DriveContents, MetadataChangeSet"
                    },
                    {
                        "name": "discard(GoogleApiClient apiClient)",
                        "return_type": "abstract void",
                        "description": "This method was deprecated. Use discardContents(DriveContents"
                    },
                    {
                        "name": "getDriveId()",
                        "return_type": "abstractDriveId",
                        "description": "Gets the DriveId for the file that owns these contents."
                    },
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an InputStream that allows you to read this file's contents."
                    },
                    {
                        "name": "getMode()",
                        "return_type": "abstract int",
                        "description": "Gets the mode the contents are opened in."
                    },
                    {
                        "name": "getOutputStream()",
                        "return_type": "abstractOutputStream",
                        "description": "Returns an OutputStream that allows you to write new contents."
                    },
                    {
                        "name": "getParcelFileDescriptor()",
                        "return_type": "abstractParcelFileDescriptor",
                        "description": "Returns a ParcelFileDescriptor that points to the Drive file's contents."
                    },
                    {
                        "name": "reopenForWrite(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<DriveApi.DriveContentsResult>",
                        "description": "This method was deprecated. Use reopenContentsForWrite(DriveContents"
                    }
                ]
            },
            {
                "name": "DriveFile",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveFile",
                "description": "A file in Drive.",
                "methods": [
                    {
                        "name": "open(GoogleApiClient apiClient, int mode, DriveFile.DownloadProgressListener listener)",
                        "return_type": "abstractPendingResult<DriveApi.DriveContentsResult>",
                        "description": "This method was deprecated. Use openFile(DriveFile, int"
                    }
                ]
            },
            {
                "name": "DriveFile.DownloadProgressListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveFile.DownloadProgressListener",
                "description": "This interface is deprecated. Use OpenFileCallback instead.",
                "methods": [
                    {
                        "name": "onProgress(long bytesDownloaded, long bytesExpected)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveFolder",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveFolder",
                "description": "A folder in Drive.",
                "methods": [
                    {
                        "name": "createFile(GoogleApiClient apiClient, MetadataChangeSet changeSet, DriveContents driveContents)",
                        "return_type": "abstractPendingResult<DriveFolder.DriveFileResult>",
                        "description": "This method was deprecated. Use createFile(DriveFolder, MetadataChangeSet, DriveContents"
                    },
                    {
                        "name": "createFile(GoogleApiClient apiClient, MetadataChangeSet changeSet, DriveContents driveContents, ExecutionOptions executionOptions)",
                        "return_type": "abstractPendingResult<DriveFolder.DriveFileResult>",
                        "description": "This method was deprecated. Use createFile(DriveFolder, MetadataChangeSet, DriveContents, ExecutionOptions"
                    },
                    {
                        "name": "createFolder(GoogleApiClient apiClient, MetadataChangeSet changeSet)",
                        "return_type": "abstractPendingResult<DriveFolder.DriveFolderResult>",
                        "description": "This method was deprecated. Use createFolder(DriveFolder, MetadataChangeSet"
                    },
                    {
                        "name": "listChildren(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<DriveApi.MetadataBufferResult>",
                        "description": "This method was deprecated. Use listChildren(DriveFolder"
                    },
                    {
                        "name": "queryChildren(GoogleApiClient apiClient, Query query)",
                        "return_type": "abstractPendingResult<DriveApi.MetadataBufferResult>",
                        "description": "This method was deprecated. Use queryChildren(DriveFolder, Query"
                    }
                ]
            },
            {
                "name": "DriveFolder.DriveFileResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveFolder.DriveFileResult",
                "description": "This interface is deprecated. DriveFile objects are returned directly in the new Drive clients.",
                "methods": [
                    {
                        "name": "getDriveFile()",
                        "return_type": "abstractDriveFile",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveFolder.DriveFolderResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveFolder.DriveFolderResult",
                "description": "This interface is deprecated. DriveFolder objects are returned directly in the new Drive clients.",
                "methods": [
                    {
                        "name": "getDriveFolder()",
                        "return_type": "abstractDriveFolder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DrivePreferencesApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DrivePreferencesApi",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getFileUploadPreferences(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<DrivePreferencesApi.FileUploadPreferencesResult>",
                        "description": "This method isdeprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    },
                    {
                        "name": "setFileUploadPreferences(GoogleApiClient apiClient, FileUploadPreferences fileUploadPreferences)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method isdeprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API."
                    }
                ]
            },
            {
                "name": "DrivePreferencesApi.FileUploadPreferencesResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DrivePreferencesApi.FileUploadPreferencesResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getFileUploadPreferences()",
                        "return_type": "abstractFileUploadPreferences",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveResource",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveResource",
                "description": "A Resource represents a file or folder in Drive.",
                "methods": [
                    {
                        "name": "addChangeListener(GoogleApiClient apiClient, ChangeListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use addChangeListener(DriveResource, OnChangeListener"
                    },
                    {
                        "name": "addChangeSubscription(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use addChangeSubscription(DriveResource"
                    },
                    {
                        "name": "delete(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use delete(DriveResource"
                    },
                    {
                        "name": "getDriveId()",
                        "return_type": "abstractDriveId",
                        "description": "Returns the DriveId that uniquely identifies this resource."
                    },
                    {
                        "name": "getMetadata(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<DriveResource.MetadataResult>",
                        "description": "This method was deprecated. Use getMetadata(DriveResource"
                    },
                    {
                        "name": "listParents(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<DriveApi.MetadataBufferResult>",
                        "description": "This method was deprecated. Use listParents(DriveResource"
                    },
                    {
                        "name": "removeChangeListener(GoogleApiClient apiClient, ChangeListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use removeChangeListener(ListenerToken"
                    },
                    {
                        "name": "removeChangeSubscription(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use removeChangeSubscription(DriveResource"
                    },
                    {
                        "name": "setParents(GoogleApiClient apiClient, Set<DriveId> parentIds)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use setParents(DriveResource, Set"
                    },
                    {
                        "name": "trash(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use trash(DriveResource"
                    },
                    {
                        "name": "untrash(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method was deprecated. Use untrash(DriveResource"
                    },
                    {
                        "name": "updateMetadata(GoogleApiClient apiClient, MetadataChangeSet changeSet)",
                        "return_type": "abstractPendingResult<DriveResource.MetadataResult>",
                        "description": "This method was deprecated. Use updateMetadata(DriveResource, MetadataChangeSet"
                    }
                ]
            },
            {
                "name": "DriveResource.MetadataResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/DriveResource.MetadataResult",
                "description": "This interface is deprecated. Metadata objects are returned directly in the new Drive clients.",
                "methods": [
                    {
                        "name": "getMetadata()",
                        "return_type": "abstractMetadata",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FileUploadPreferences",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/FileUploadPreferences",
                "description": "This interface is deprecated. Use TransferPreferences and TransferPreferencesBuilder instead.",
                "methods": [
                    {
                        "name": "getBatteryUsagePreference()",
                        "return_type": "abstract int",
                        "description": "Returns the current battery usage preference value."
                    },
                    {
                        "name": "getNetworkTypePreference()",
                        "return_type": "abstract int",
                        "description": "Returns the current network type preference value."
                    },
                    {
                        "name": "isRoamingAllowed()",
                        "return_type": "abstract boolean",
                        "description": "Returns the current roaming preference value."
                    },
                    {
                        "name": "setBatteryUsagePreference(int batteryUsagePreference)",
                        "return_type": "abstract void",
                        "description": "Sets the battery usage preference to be applied on operations performed by the calling application."
                    },
                    {
                        "name": "setNetworkTypePreference(int networkTypePreference)",
                        "return_type": "abstract void",
                        "description": "Sets the network type preference to be applied on operations performed by the calling application."
                    },
                    {
                        "name": "setRoamingAllowed(boolean allowRoaming)",
                        "return_type": "abstract void",
                        "description": "Sets whether the operations by the calling application are allowed while the device is on roaming."
                    }
                ]
            },
            {
                "name": "TransferPreferences",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/TransferPreferences",
                "description": "Transfer preferences interface.",
                "methods": [
                    {
                        "name": "getBatteryUsagePreference()",
                        "return_type": "abstract int",
                        "description": "Returns the battery usage preference."
                    },
                    {
                        "name": "getNetworkPreference()",
                        "return_type": "abstract int",
                        "description": "Returns the network type preference."
                    },
                    {
                        "name": "isRoamingAllowed()",
                        "return_type": "abstract boolean",
                        "description": "Returns whether roaming is allowed."
                    }
                ]
            },
            {
                "name": "CreateFileActivityOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/drive/CreateFileActivityOptions.Builder",
                "description": "Builder used to create a new instance of CreateFileActivityOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CreateFileActivityOptions",
                        "description": "Builds the CreateShortcutFileActivityOptions with the current options."
                    },
                    {
                        "name": "setActivityStartFolder(DriveId folder)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the folder that the create file dialog activity will initially display to folder."
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the title of the dialog activity to title."
                    },
                    {
                        "name": "setInitialDriveContents(DriveContents driveContents)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the initial contents for the new file to driveContents."
                    },
                    {
                        "name": "setInitialMetadata(MetadataChangeSet metadataChangeSet)",
                        "return_type": "CreateFileActivityOptions.Builder",
                        "description": "Sets the initial metadata for the new file to metadataChangeSet."
                    }
                ]
            },
            {
                "name": "ExecutionOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/drive/ExecutionOptions.Builder",
                "description": "A builder for creating a new ExecutionOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExecutionOptions",
                        "description": ""
                    },
                    {
                        "name": "setConflictStrategy(int strategy)",
                        "return_type": "ExecutionOptions.Builder",
                        "description": "Sets a conflict resolution strategy for this action."
                    },
                    {
                        "name": "setNotifyOnCompletion(boolean notify)",
                        "return_type": "ExecutionOptions.Builder",
                        "description": "Sets whether the client should be notified when the action associated with these ExecutionOptions is applied on the server."
                    },
                    {
                        "name": "setTrackingTag(String trackingTag)",
                        "return_type": "ExecutionOptions.Builder",
                        "description": "Sets a client-defined string that will be returned to the client through a completion notification on DriveEventService after this particular action either succeeds or fails when applied on the server."
                    }
                ]
            },
            {
                "name": "MetadataChangeSet.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/drive/MetadataChangeSet.Builder",
                "description": "A builder for creating a new MetadataChangeSet.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MetadataChangeSet",
                        "description": ""
                    },
                    {
                        "name": "deleteCustomProperty(CustomPropertyKey key)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Deletes the given custom property of the resource."
                    },
                    {
                        "name": "setCustomProperty(CustomPropertyKey key, String value)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets a Custom File Property for the resource."
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the description for the resource."
                    },
                    {
                        "name": "setIndexableText(String text)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the text to be indexed for the resource."
                    },
                    {
                        "name": "setLastViewedByMeDate(Date date)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the date when the user most recently viewed the resource."
                    },
                    {
                        "name": "setMimeType(String mimeType)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets a MIME type for the resource."
                    },
                    {
                        "name": "setPinned(boolean pinned)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "If true, the file's contents will be kept up to date locally and thus the contents will be available when the device is offline."
                    },
                    {
                        "name": "setStarred(boolean starred)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets whether the resource will be starred."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the title for the resource."
                    },
                    {
                        "name": "setViewed(boolean viewed)",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "This method was deprecated. Use setViewed("
                    },
                    {
                        "name": "setViewed()",
                        "return_type": "MetadataChangeSet.Builder",
                        "description": "Sets the resource to viewed."
                    }
                ]
            },
            {
                "name": "OpenFileActivityOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/drive/OpenFileActivityOptions.Builder",
                "description": "Builder used to create a new instance of OpenFileActivityOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "OpenFileActivityOptions",
                        "description": "Build the CreateShortcutFileActivityOptions with the current options."
                    },
                    {
                        "name": "setActivityStartFolder(DriveId folder)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the folder that the open file dialog activity will initially display to folder."
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the title of the dialog activity to title."
                    },
                    {
                        "name": "setMimeType(List<String> mimeTypes)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the mime-type filter to mimeTypes."
                    },
                    {
                        "name": "setSelectionFilter(Filter filter)",
                        "return_type": "OpenFileActivityOptions.Builder",
                        "description": "Sets the Filter that is used to control which files will be selectable in the open file dialog activity to filter."
                    }
                ]
            },
            {
                "name": "DriveApi.DriveContentsResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi.DriveContentsResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getDriveContents()",
                        "return_type": "abstractDriveContents",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveApi.DriveIdResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi.DriveIdResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getDriveId()",
                        "return_type": "abstractDriveId",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveApi.MetadataBufferResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveApi.MetadataBufferResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getMetadataBuffer()",
                        "return_type": "abstractMetadataBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveFile.DownloadProgressListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveFile.DownloadProgressListener",
                "description": "This interface was deprecated. Use OpenFileCallback instead.",
                "methods": [
                    {
                        "name": "onProgress(long bytesDownloaded, long bytesExpected)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveFolder.DriveFileResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveFolder.DriveFileResult",
                "description": "This interface was deprecated. DriveFile objects are returned directly in the new Drive clients.",
                "methods": [
                    {
                        "name": "getDriveFile()",
                        "return_type": "abstractDriveFile",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveFolder.DriveFolderResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveFolder.DriveFolderResult",
                "description": "This interface was deprecated. DriveFolder objects are returned directly in the new Drive clients.",
                "methods": [
                    {
                        "name": "getDriveFolder()",
                        "return_type": "abstractDriveFolder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DrivePreferencesApi.FileUploadPreferencesResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DrivePreferencesApi.FileUploadPreferencesResult",
                "description": "This interface is deprecated. The Google Drive Android API is deprecated and will be turned down on December 6, 2019. See the migration guide for instructions on migrating to the REST API.",
                "methods": [
                    {
                        "name": "getFileUploadPreferences()",
                        "return_type": "abstractFileUploadPreferences",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveResource.MetadataResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/drive/DriveResource.MetadataResult",
                "description": "This interface was deprecated. Metadata objects are returned directly in the new Drive clients.",
                "methods": [
                    {
                        "name": "getMetadata()",
                        "return_type": "abstractMetadata",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "security",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/security/package-summary",
        "classes": [
            {
                "name": "ProviderInstaller",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/security/ProviderInstaller",
                "description": "A utility class for installing a dynamically updatable Provider to replace the platform default provider.",
                "methods": [
                    {
                        "name": "installIfNeeded(Context context)",
                        "return_type": "static void",
                        "description": "Installs the dynamically updatable security provider, if it's not already installed."
                    },
                    {
                        "name": "installIfNeededAsync(Context context, ProviderInstaller.ProviderInstallListener listener)",
                        "return_type": "static void",
                        "description": "Asynchronously installs the dynamically updatable security provider, if it's not already installed."
                    }
                ]
            },
            {
                "name": "ProviderInstaller.ProviderInstallListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/security/ProviderInstaller.ProviderInstallListener",
                "description": "Callback for notification of the result of provider installation.",
                "methods": [
                    {
                        "name": "onProviderInstallFailed(int errorCode, Intent recoveryIntent)",
                        "return_type": "abstract void",
                        "description": "Called when installing the provider fails."
                    },
                    {
                        "name": "onProviderInstalled()",
                        "return_type": "abstract void",
                        "description": "Called when installing the provider succeeds."
                    }
                ]
            },
            {
                "name": "ProviderInstaller.ProviderInstallListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/security/ProviderInstaller.ProviderInstallListener",
                "description": "Callback for notification of the result of provider installation.",
                "methods": [
                    {
                        "name": "onProviderInstallFailed(int errorCode, Intent recoveryIntent)",
                        "return_type": "abstract void",
                        "description": "Called when installing the provider fails."
                    },
                    {
                        "name": "onProviderInstalled()",
                        "return_type": "abstract void",
                        "description": "Called when installing the provider succeeds."
                    }
                ]
            }
        ]
    },
    {
        "name": "leaderboard",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/leaderboard/package-summary",
        "classes": [
            {
                "name": "LeaderboardBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/LeaderboardBuffer",
                "description": "AbstractDataBuffer implementation containing Leaderboard data.",
                "methods": [
                    {
                        "name": "get(int arg0)",
                        "return_type": "finalLeaderboard",
                        "description": ""
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LeaderboardScoreBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/LeaderboardScoreBuffer",
                "description": "AbstractDataBuffer containing LeaderboardScore data.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "LeaderboardScore",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ScoreSubmissionData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/ScoreSubmissionData",
                "description": "Data object representing the result of submitting a score to a leaderboard.",
                "methods": [
                    {
                        "name": "getLeaderboardId()",
                        "return_type": "String",
                        "description": "Retrieves the ID of the leaderboard the score was submitted to."
                    },
                    {
                        "name": "getPlayerId()",
                        "return_type": "String",
                        "description": "Retrieves the ID of the player the score was submitted for."
                    },
                    {
                        "name": "getScoreResult(int timeSpan)",
                        "return_type": "ScoreSubmissionData.Result",
                        "description": "Retrieves the ScoreSubmissionData.Result object for the given time span, if any."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ScoreSubmissionData.Result",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/ScoreSubmissionData.Result",
                "description": "Simple data class containing the result data for a particular time span.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboard",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboard",
                "description": "Data interface for leaderboard metadata.",
                "methods": [
                    {
                        "name": "getDisplayName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the display name of this leaderboard."
                    },
                    {
                        "name": "getDisplayName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads this leaderboard's display name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves an image URI that can be used to load this leaderboard's icon, or null if there was a problem retrieving the icon."
                    },
                    {
                        "name": "getLeaderboardId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of this leaderboard."
                    },
                    {
                        "name": "getScoreOrder()",
                        "return_type": "abstract int",
                        "description": "Retrieves the sort order of scores for this leaderboard."
                    },
                    {
                        "name": "getVariants()",
                        "return_type": "abstractArrayList<LeaderboardVariant>",
                        "description": "Retrieves the LeaderboardVariants for this leaderboard."
                    }
                ]
            },
            {
                "name": "Leaderboards",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards",
                "description": "This interface is deprecated. Use LeaderboardsClient instead",
                "methods": [
                    {
                        "name": "getAllLeaderboardsIntent(GoogleApiClient apiClient)",
                        "return_type": "abstractIntent",
                        "description": "Gets an intent to show the list of leaderboards for a game."
                    },
                    {
                        "name": "getLeaderboardIntent(GoogleApiClient apiClient, String leaderboardId)",
                        "return_type": "abstractIntent",
                        "description": "Gets an intent to show a leaderboard for a game."
                    },
                    {
                        "name": "getLeaderboardIntent(GoogleApiClient apiClient, String leaderboardId, int timeSpan)",
                        "return_type": "abstractIntent",
                        "description": "Gets an intent to show a leaderboard for a game."
                    },
                    {
                        "name": "getLeaderboardIntent(GoogleApiClient apiClient, String leaderboardId, int timeSpan, int collection)",
                        "return_type": "abstractIntent",
                        "description": "Gets an intent to show a leaderboard for a game."
                    },
                    {
                        "name": "loadCurrentPlayerLeaderboardScore(GoogleApiClient apiClient, String leaderboardId, int span, int leaderboardCollection)",
                        "return_type": "abstractPendingResult<Leaderboards.LoadPlayerScoreResult>",
                        "description": "Asynchronously load the currently signed in player's score for a given leaderboard."
                    },
                    {
                        "name": "loadLeaderboardMetadata(GoogleApiClient apiClient, String leaderboardId, boolean forceReload)",
                        "return_type": "abstractPendingResult<Leaderboards.LeaderboardMetadataResult>",
                        "description": "Asynchronously load a specific leaderboard's metadata for this game."
                    },
                    {
                        "name": "loadLeaderboardMetadata(GoogleApiClient apiClient, boolean forceReload)",
                        "return_type": "abstractPendingResult<Leaderboards.LeaderboardMetadataResult>",
                        "description": "Asynchronously load the list of leaderboard metadata for this game."
                    },
                    {
                        "name": "loadMoreScores(GoogleApiClient apiClient, LeaderboardScoreBuffer buffer, int maxResults, int pageDirection)",
                        "return_type": "abstractPendingResult<Leaderboards.LoadScoresResult>",
                        "description": "Asynchronously loads an additional page of score data for the given score buffer."
                    },
                    {
                        "name": "loadPlayerCenteredScores(GoogleApiClient apiClient, String leaderboardId, int span, int leaderboardCollection, int maxResults)",
                        "return_type": "abstractPendingResult<Leaderboards.LoadScoresResult>",
                        "description": "Asynchronously load the player-centered page of scores for a given leaderboard."
                    },
                    {
                        "name": "loadPlayerCenteredScores(GoogleApiClient apiClient, String leaderboardId, int span, int leaderboardCollection, int maxResults, boolean forceReload)",
                        "return_type": "abstractPendingResult<Leaderboards.LoadScoresResult>",
                        "description": "Asynchronously load the player-centered page of scores for a given leaderboard."
                    },
                    {
                        "name": "loadTopScores(GoogleApiClient apiClient, String leaderboardId, int span, int leaderboardCollection, int maxResults, boolean forceReload)",
                        "return_type": "abstractPendingResult<Leaderboards.LoadScoresResult>",
                        "description": "Asynchronously load the top page of scores for a given leaderboard."
                    },
                    {
                        "name": "loadTopScores(GoogleApiClient apiClient, String leaderboardId, int span, int leaderboardCollection, int maxResults)",
                        "return_type": "abstractPendingResult<Leaderboards.LoadScoresResult>",
                        "description": "Asynchronously load the top page of scores for a given leaderboard."
                    },
                    {
                        "name": "submitScore(GoogleApiClient apiClient, String leaderboardId, long score)",
                        "return_type": "abstract void",
                        "description": "Submit a score to a leaderboard for the currently signed in player."
                    },
                    {
                        "name": "submitScore(GoogleApiClient apiClient, String leaderboardId, long score, String scoreTag)",
                        "return_type": "abstract void",
                        "description": "Submit a score to a leaderboard for the currently signed in player."
                    },
                    {
                        "name": "submitScoreImmediate(GoogleApiClient apiClient, String leaderboardId, long score, String scoreTag)",
                        "return_type": "abstractPendingResult<Leaderboards.SubmitScoreResult>",
                        "description": "Submit a score to a leaderboard for the currently signed in player."
                    },
                    {
                        "name": "submitScoreImmediate(GoogleApiClient apiClient, String leaderboardId, long score)",
                        "return_type": "abstractPendingResult<Leaderboards.SubmitScoreResult>",
                        "description": "Submit a score to a leaderboard for the currently signed in player."
                    }
                ]
            },
            {
                "name": "Leaderboards.LeaderboardMetadataResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.LeaderboardMetadataResult",
                "description": "This interface is deprecated. LeaderboardBuffer is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getLeaderboards()",
                        "return_type": "abstractLeaderboardBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.LoadPlayerScoreResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.LoadPlayerScoreResult",
                "description": "This interface is deprecated. LeaderboardScore is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getScore()",
                        "return_type": "abstractLeaderboardScore",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.LoadScoresResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.LoadScoresResult",
                "description": "This interface is deprecated. LeaderboardsClient.LeaderboardScores is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getLeaderboard()",
                        "return_type": "abstractLeaderboard",
                        "description": ""
                    },
                    {
                        "name": "getScores()",
                        "return_type": "abstractLeaderboardScoreBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.SubmitScoreResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.SubmitScoreResult",
                "description": "This interface is deprecated. ScoreSubmissionData is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getScoreData()",
                        "return_type": "abstractScoreSubmissionData",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LeaderboardScore",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/LeaderboardScore",
                "description": "Data interface representing a single score on a leaderboard.",
                "methods": [
                    {
                        "name": "getDisplayRank(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Load the formatted display rank into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDisplayRank()",
                        "return_type": "abstractString",
                        "description": "Retrieves a formatted string to display for this rank."
                    },
                    {
                        "name": "getDisplayScore()",
                        "return_type": "abstractString",
                        "description": "Retrieves a formatted string to display for this score."
                    },
                    {
                        "name": "getDisplayScore(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the formatted display score into the given CharArrayBuffer."
                    },
                    {
                        "name": "getRank()",
                        "return_type": "abstract long",
                        "description": "Retrieves the rank returned from the server for this score."
                    },
                    {
                        "name": "getRawScore()",
                        "return_type": "abstract long",
                        "description": "Retrieves the raw score value."
                    },
                    {
                        "name": "getScoreHolder()",
                        "return_type": "abstractPlayer",
                        "description": "Retrieves the player that scored this particular score."
                    },
                    {
                        "name": "getScoreHolderDisplayName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Load the display name of the player who scored this score into the provided CharArrayBuffer."
                    },
                    {
                        "name": "getScoreHolderDisplayName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the name to display for the player who scored this score."
                    },
                    {
                        "name": "getScoreHolderHiResImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves the URI of the hi-res image to display for the player who scored this score."
                    },
                    {
                        "name": "getScoreHolderIconImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves the URI of the icon image to display for the player who scored this score."
                    },
                    {
                        "name": "getScoreTag()",
                        "return_type": "abstractString",
                        "description": "Retrieve the optional score tag associated with this score, if any."
                    },
                    {
                        "name": "getTimestampMillis()",
                        "return_type": "abstract long",
                        "description": "Retrieves the timestamp (in milliseconds from epoch"
                    }
                ]
            },
            {
                "name": "LeaderboardVariant",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/LeaderboardVariant",
                "description": "Data interface for a specific variant of a leaderboard; a variant is defined by the combination of the leaderboard's collection (public or friends) and time span (daily, weekly, or all-time).",
                "methods": [
                    {
                        "name": "getCollection()",
                        "return_type": "abstract int",
                        "description": "Retrieves the collection of scores contained by this variant."
                    },
                    {
                        "name": "getDisplayPlayerRank()",
                        "return_type": "abstractString",
                        "description": "Retrieves the viewing player's formatted rank for this variant, if any."
                    },
                    {
                        "name": "getDisplayPlayerScore()",
                        "return_type": "abstractString",
                        "description": "Retrieves the viewing player's score for this variant, if any."
                    },
                    {
                        "name": "getNumScores()",
                        "return_type": "abstract long",
                        "description": "Retrieves the total number of scores for this variant."
                    },
                    {
                        "name": "getPlayerRank()",
                        "return_type": "abstract long",
                        "description": "Retrieves the viewing player's rank for this variant, if any."
                    },
                    {
                        "name": "getPlayerScoreTag()",
                        "return_type": "abstractString",
                        "description": "Retrieves the viewing player's score tag for this variant, if any."
                    },
                    {
                        "name": "getRawPlayerScore()",
                        "return_type": "abstract long",
                        "description": "Retrieves the viewing player's score for this variant, if any."
                    },
                    {
                        "name": "getTimeSpan()",
                        "return_type": "abstract int",
                        "description": "Retrieves the time span that the scores for this variant are drawn from."
                    },
                    {
                        "name": "hasPlayerInfo()",
                        "return_type": "abstract boolean",
                        "description": "Get whether or not this variant contains score information for the viewing player or not."
                    }
                ]
            },
            {
                "name": "ScoreSubmissionData.Result",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/ScoreSubmissionData.Result",
                "description": "Simple data class containing the result data for a particular time span.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.LeaderboardMetadataResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.LeaderboardMetadataResult",
                "description": "This interface is deprecated. LeaderboardBuffer is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getLeaderboards()",
                        "return_type": "abstractLeaderboardBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.LoadPlayerScoreResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.LoadPlayerScoreResult",
                "description": "This interface is deprecated. LeaderboardScore is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getScore()",
                        "return_type": "abstractLeaderboardScore",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.LoadScoresResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.LoadScoresResult",
                "description": "This interface is deprecated. LeaderboardsClient.LeaderboardScores is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getLeaderboard()",
                        "return_type": "abstractLeaderboard",
                        "description": ""
                    },
                    {
                        "name": "getScores()",
                        "return_type": "abstractLeaderboardScoreBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Leaderboards.SubmitScoreResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/leaderboard/Leaderboards.SubmitScoreResult",
                "description": "This interface is deprecated. ScoreSubmissionData is returned directly in the LeaderboardsClient.",
                "methods": [
                    {
                        "name": "getScoreData()",
                        "return_type": "abstractScoreSubmissionData",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "events",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/drive/events/package-summary",
        "classes": [
            {
                "name": "ChangeEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/events/ChangeEvent",
                "description": "Sent when a DriveResource has had a change to its DriveContents or Metadata.",
                "methods": [
                    {
                        "name": "getDriveId()",
                        "return_type": "DriveId",
                        "description": "Returns the id of the Drive resource that triggered the event."
                    },
                    {
                        "name": "hasBeenDeleted()",
                        "return_type": "boolean",
                        "description": "Returns true if the resource has been deleted."
                    },
                    {
                        "name": "hasContentChanged()",
                        "return_type": "boolean",
                        "description": "Returns true if the content has changed for this resource."
                    },
                    {
                        "name": "hasMetadataChanged()",
                        "return_type": "boolean",
                        "description": "Returns true if the metadata has changed for this resource."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CompletionEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/events/CompletionEvent",
                "description": "An event delivered after the client requests a completion notification using setNotifyOnCompletion(boolean) and that action has either succeeded or failed on the server.",
                "methods": [
                    {
                        "name": "dismiss()",
                        "return_type": "void",
                        "description": "Indicates to the Drive API that the caller has finished interacting with this event and any related resources should be cleaned up."
                    },
                    {
                        "name": "getAccountName()",
                        "return_type": "String",
                        "description": "Returns the account name that was used by the GoogleSignInAccount that requested this notification, or null if the default account was used."
                    },
                    {
                        "name": "getBaseContentsInputStream()",
                        "return_type": "InputStream",
                        "description": "Returns an InputStream for the initial contents of a file, in the case of a notification with status STATUS_CONFLICT."
                    },
                    {
                        "name": "getDriveId()",
                        "return_type": "DriveId",
                        "description": "Returns the id of the Drive resource that triggered the event."
                    },
                    {
                        "name": "getModifiedContentsInputStream()",
                        "return_type": "InputStream",
                        "description": "Returns an InputStream for the modified contents that generated this event."
                    },
                    {
                        "name": "getModifiedMetadataChangeSet()",
                        "return_type": "MetadataChangeSet",
                        "description": "Returns the MetadataChangeSet that was committed during the update that generated this event."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "int",
                        "description": "Returns a status indicating the result of the action that generated this event."
                    },
                    {
                        "name": "getTrackingTags()",
                        "return_type": "List<String>",
                        "description": "Returns a List of tracking tags provided through setTrackingTag(String"
                    },
                    {
                        "name": "snooze()",
                        "return_type": "void",
                        "description": "Indicates that the client could not process the event at the current time, for example because of connectivity issues."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveEventService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/events/DriveEventService",
                "description": "Abstract base class for a bound service that handles all DriveEvent instances.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "synchronized finalIBinder",
                        "description": ""
                    },
                    {
                        "name": "onChange(ChangeEvent event)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCompletion(CompletionEvent event)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "synchronized void",
                        "description": ""
                    },
                    {
                        "name": "onUnbind(Intent intent)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            },
            {
                "name": "OpenFileCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/events/OpenFileCallback",
                "description": "A callback for progress events on an active file contents download.",
                "methods": [
                    {
                        "name": "onContents(DriveContents contents)",
                        "return_type": "abstract void",
                        "description": "Called when the file is downloaded."
                    },
                    {
                        "name": "onError(Exception exception)",
                        "return_type": "abstract void",
                        "description": "Called when there is an error opening the file."
                    },
                    {
                        "name": "onProgress(long bytesDownloaded, long bytesExpected)",
                        "return_type": "abstract void",
                        "description": "Called while the file is being downloaded to report download progress."
                    }
                ]
            },
            {
                "name": "ChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/events/ChangeListener",
                "description": "This interface was deprecated. Use OnChangeListener instead.",
                "methods": [
                    {
                        "name": "onChange(ChangeEvent event)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CompletionListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/events/CompletionListener",
                "description": "Event listener interface for CompletionEvent.",
                "methods": [
                    {
                        "name": "onCompletion(CompletionEvent event)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DriveEvent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/events/DriveEvent",
                "description": "Base interface implemented by all Drive event types.",
                "methods": []
            },
            {
                "name": "ListenerToken",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/events/ListenerToken",
                "description": "Token for identifying registered listeners.",
                "methods": []
            },
            {
                "name": "OnChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/events/OnChangeListener",
                "description": "Event listener interface that enables handling of ChangeEvent.",
                "methods": [
                    {
                        "name": "onChange(ChangeEvent event)",
                        "return_type": "abstract void",
                        "description": "A hook that is called when a new event is available for processing."
                    }
                ]
            },
            {
                "name": "ResourceEvent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/events/ResourceEvent",
                "description": "Base interface for DriveEvent types related to a specific resource.",
                "methods": [
                    {
                        "name": "getDriveId()",
                        "return_type": "abstractDriveId",
                        "description": "Returns the id of the Drive resource that triggered the event."
                    }
                ]
            }
        ]
    },
    {
        "name": "data",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/common/data/package-summary",
        "classes": [
            {
                "name": "AbstractDataBuffer<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/data/AbstractDataBuffer",
                "description": "Default implementation of DataBuffer.",
                "methods": [
                    {
                        "name": "close()",
                        "return_type": "final void",
                        "description": "Releases the data buffer, for use in try-with-resources."
                    },
                    {
                        "name": "get(int position)",
                        "return_type": "abstract T",
                        "description": "Get the item at the specified position."
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isClosed()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. release("
                    },
                    {
                        "name": "iterator()",
                        "return_type": "Iterator<T>",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Releases resources used by the buffer."
                    },
                    {
                        "name": "singleRefIterator()",
                        "return_type": "Iterator<T>",
                        "description": "In order to use this you should correctly override DataBufferRef.setDataRow(int"
                    }
                ]
            },
            {
                "name": "DataBufferObserverSet",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/data/DataBufferObserverSet",
                "description": "Utility class for managing a set of observers and distributing their notifications.",
                "methods": [
                    {
                        "name": "addObserver(DataBufferObserver observer)",
                        "return_type": "void",
                        "description": "Register the given observer for receiving change notifications."
                    },
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears the set of observers."
                    },
                    {
                        "name": "hasObservers()",
                        "return_type": "boolean",
                        "description": "Returns true if this has any registered observers."
                    },
                    {
                        "name": "onDataChanged()",
                        "return_type": "void",
                        "description": "Called when the overall data changes."
                    },
                    {
                        "name": "onDataRangeChanged(int position, int count)",
                        "return_type": "void",
                        "description": "Called when a range of items changes."
                    },
                    {
                        "name": "onDataRangeInserted(int position, int count)",
                        "return_type": "void",
                        "description": "Called when a range of items is inserted."
                    },
                    {
                        "name": "onDataRangeMoved(int fromPosition, int toPosition, int count)",
                        "return_type": "void",
                        "description": "Called when a range of items is moved."
                    },
                    {
                        "name": "onDataRangeRemoved(int position, int count)",
                        "return_type": "void",
                        "description": "Called when a range of items is removed."
                    },
                    {
                        "name": "removeObserver(DataBufferObserver observer)",
                        "return_type": "void",
                        "description": "Unregister the given observer from receiving change notifications."
                    }
                ]
            },
            {
                "name": "DataBufferUtils",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/data/DataBufferUtils",
                "description": "Utilities for working with DataBuffer objects.",
                "methods": [
                    {
                        "name": "freezeAndClose(DataBuffer<E> buffer)",
                        "return_type": "static <T, E extendsFreezable<T>>ArrayList<T>",
                        "description": "Utility helper method to freeze a DataBuffer into a list of concrete entities."
                    },
                    {
                        "name": "hasData(DataBuffer<?> buffer)",
                        "return_type": "static boolean",
                        "description": "Utility function to determine whether a data buffer has data or not."
                    },
                    {
                        "name": "hasNextPage(DataBuffer<?> buffer)",
                        "return_type": "static boolean",
                        "description": "Utility function to get the \"next page\" pagination token from a data buffer."
                    },
                    {
                        "name": "hasPrevPage(DataBuffer<?> buffer)",
                        "return_type": "static boolean",
                        "description": "Utility function to get the \"prev page\" pagination token from a data buffer."
                    }
                ]
            },
            {
                "name": "FreezableUtils",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/data/FreezableUtils",
                "description": "Utilities for working with Freezable objects.",
                "methods": [
                    {
                        "name": "freeze(E[] array)",
                        "return_type": "static <T, E extendsFreezable<T>>ArrayList<T>",
                        "description": "Utility helper method to freeze an array of freezable entities into a list of concrete entities."
                    },
                    {
                        "name": "freeze(ArrayList<E> list)",
                        "return_type": "static <T, E extendsFreezable<T>>ArrayList<T>",
                        "description": "Utility helper method to freeze a list of freezable entities into a list of concrete entities."
                    },
                    {
                        "name": "freezeIterable(Iterable<E> iterable)",
                        "return_type": "static <T, E extendsFreezable<T>>ArrayList<T>",
                        "description": "Utility helper method to freeze an array of freezable entities into a list of concrete entities."
                    }
                ]
            },
            {
                "name": "DataBuffer<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/data/DataBuffer",
                "description": "Interface for a buffer of typed data.",
                "methods": [
                    {
                        "name": "close()",
                        "return_type": "abstract void",
                        "description": "Releases the data buffer, for use in try-with-resources."
                    },
                    {
                        "name": "get(int position)",
                        "return_type": "abstract T",
                        "description": "Returns an element on specified position."
                    },
                    {
                        "name": "getCount()",
                        "return_type": "abstract int",
                        "description": ""
                    },
                    {
                        "name": "isClosed()",
                        "return_type": "abstract boolean",
                        "description": "This method is deprecated. release("
                    },
                    {
                        "name": "iterator()",
                        "return_type": "abstractIterator<T>",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Releases resources used by the buffer."
                    },
                    {
                        "name": "singleRefIterator()",
                        "return_type": "abstractIterator<T>",
                        "description": "In order to use this iterator it should be supported by particular DataBuffer."
                    }
                ]
            },
            {
                "name": "DataBufferObserver",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/data/DataBufferObserver",
                "description": "An interface for notifying an observer about changes to a DataBuffer.",
                "methods": [
                    {
                        "name": "onDataChanged()",
                        "return_type": "abstract void",
                        "description": "Called when the overall data changes."
                    },
                    {
                        "name": "onDataRangeChanged(int position, int count)",
                        "return_type": "abstract void",
                        "description": "Called when a range of items changes."
                    },
                    {
                        "name": "onDataRangeInserted(int position, int count)",
                        "return_type": "abstract void",
                        "description": "Called when a range of items is inserted."
                    },
                    {
                        "name": "onDataRangeMoved(int fromPosition, int toPosition, int count)",
                        "return_type": "abstract void",
                        "description": "Called when a range of items is moved."
                    },
                    {
                        "name": "onDataRangeRemoved(int position, int count)",
                        "return_type": "abstract void",
                        "description": "Called when a range of items is removed."
                    }
                ]
            },
            {
                "name": "DataBufferObserver.Observable",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/data/DataBufferObserver.Observable",
                "description": "Interface a data buffer can implement to expose the fact that it supports observation.",
                "methods": [
                    {
                        "name": "addObserver(DataBufferObserver observer)",
                        "return_type": "abstract void",
                        "description": "Register the given observer for receiving change notifications."
                    },
                    {
                        "name": "removeObserver(DataBufferObserver observer)",
                        "return_type": "abstract void",
                        "description": "Unregister the given observer from receiving change notifications."
                    }
                ]
            },
            {
                "name": "Freezable<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/data/Freezable",
                "description": "Interface for data objects that support being frozen into immutable representations.",
                "methods": [
                    {
                        "name": "freeze()",
                        "return_type": "abstract T",
                        "description": "Freeze a volatile representation into an immutable representation."
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "abstract boolean",
                        "description": "Check to see if this object is valid for use."
                    }
                ]
            },
            {
                "name": "DataBufferObserver.Observable",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/data/DataBufferObserver.Observable",
                "description": "Interface a data buffer can implement to expose the fact that it supports observation.",
                "methods": [
                    {
                        "name": "addObserver(DataBufferObserver observer)",
                        "return_type": "abstract void",
                        "description": "Register the given observer for receiving change notifications."
                    },
                    {
                        "name": "removeObserver(DataBufferObserver observer)",
                        "return_type": "abstract void",
                        "description": "Unregister the given observer from receiving change notifications."
                    }
                ]
            }
        ]
    },
    {
        "name": "common",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/common/package-summary",
        "classes": []
    },
    {
        "name": "instantapps",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/instantapps/package-summary",
        "classes": [
            {
                "name": "InstantAppIntentData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/instantapps/InstantAppIntentData",
                "description": "Data for resolved instant app Intent.",
                "methods": [
                    {
                        "name": "getIntent()",
                        "return_type": "Intent",
                        "description": "Retrieve the Activity Intent used to start the instant app."
                    },
                    {
                        "name": "getMatchResult()",
                        "return_type": "int",
                        "description": "Returns the result for the match attempt of the given URL."
                    },
                    {
                        "name": "getPackageName()",
                        "return_type": "String",
                        "description": "Returns the package name of the instant app if one exists for the URL."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "InstantApps",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/instantapps/InstantApps",
                "description": "Entry point for Instant Apps APIs.",
                "methods": [
                    {
                        "name": "getActivityCompat(Activity activity)",
                        "return_type": "staticActivityCompat",
                        "description": "Returns a helper for Activity functionality that can be used to retrieve information about running instant apps or installed apps."
                    },
                    {
                        "name": "getInstantAppsClient(Activity activity)",
                        "return_type": "staticInstantAppsClient",
                        "description": "Creates a new instance of InstantAppsClient for use in an Activity."
                    },
                    {
                        "name": "getInstantAppsClient(Context context)",
                        "return_type": "staticInstantAppsClient",
                        "description": "Creates a new instance of InstantAppsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getLauncher(Context context)",
                        "return_type": "staticLauncher",
                        "description": "Returns an API for launching instant apps by URL."
                    },
                    {
                        "name": "getPackageManagerCompat(Context context)",
                        "return_type": "staticPackageManagerCompat",
                        "description": "Returns a helper for PackageManager functionality that can be used to retrieve information about running instant apps or installed apps."
                    },
                    {
                        "name": "showInstallPrompt(Activity activity, Intent postInstallIntent, int requestCode, String referrer)",
                        "return_type": "static boolean",
                        "description": "Shows a dialog that allows the user to install the current instant app."
                    }
                ]
            },
            {
                "name": "InstantAppsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/instantapps/InstantAppsClient",
                "description": "Main entry point to APIs for Android instant apps.",
                "methods": [
                    {
                        "name": "areInstantAppsEnabledForDevice()",
                        "return_type": "Task<Boolean>",
                        "description": "Checks whether this device satisfied all preconditions to run instant apps."
                    },
                    {
                        "name": "getInstantAppData()",
                        "return_type": "Task<ParcelFileDescriptor>",
                        "description": "Retrieves a ParcelFileDescriptor to the caller's instant app's data."
                    }
                ]
            },
            {
                "name": "LaunchData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/instantapps/LaunchData",
                "description": "Data for launching an instant app.",
                "methods": [
                    {
                        "name": "getApplicationIcon()",
                        "return_type": "Bitmap",
                        "description": "Returns the application icon for the instant app."
                    },
                    {
                        "name": "getApplicationLabel()",
                        "return_type": "String",
                        "description": "Returns the label for the instant app."
                    },
                    {
                        "name": "getIntent()",
                        "return_type": "Intent",
                        "description": "Returns the Intent to launch the instant app."
                    },
                    {
                        "name": "getPackageName()",
                        "return_type": "String",
                        "description": "Returns the package name of the instant app."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ActivityCompat",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/instantapps/ActivityCompat",
                "description": "A helper for accessing features in Activity in a backwards compatible fashion.",
                "methods": [
                    {
                        "name": "getCallingActivity()",
                        "return_type": "abstractComponentName",
                        "description": "Gets the ComponentName of the activity that launched the intent to start this activity."
                    },
                    {
                        "name": "getCallingPackage()",
                        "return_type": "abstractString",
                        "description": "Gets the package name of the app that launched the intent to start this activity."
                    }
                ]
            },
            {
                "name": "Launcher",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/instantapps/Launcher",
                "description": "API for launching instant apps.",
                "methods": [
                    {
                        "name": "getInstantAppIntentData(String url, Intent fallbackIntent)",
                        "return_type": "abstractInstantAppIntentData",
                        "description": "Checks if the given URL can be launched as an instant app on this device."
                    },
                    {
                        "name": "getInstantAppLaunchData(String url)",
                        "return_type": "abstract Task<LaunchData>",
                        "description": "Returns LaunchData that can be used to start an instant app."
                    },
                    {
                        "name": "initializeIntentClient()",
                        "return_type": "abstract boolean",
                        "description": "Initializes the client for getting intents for launching instant apps."
                    }
                ]
            },
            {
                "name": "PackageManagerCompat",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/instantapps/PackageManagerCompat",
                "description": "A helper for accessing features in PackageManager in a backwards compatible fashion.",
                "methods": [
                    {
                        "name": "getApplicationInfo(String packageName, int flags)",
                        "return_type": "abstractApplicationInfo",
                        "description": "Retrieve all of the information we know about a particular package/application."
                    },
                    {
                        "name": "getApplicationLabel(ApplicationInfo info)",
                        "return_type": "abstractCharSequence",
                        "description": "Return the label to use for this application."
                    },
                    {
                        "name": "getInstallerPackageName(String packageName)",
                        "return_type": "abstractString",
                        "description": "Retrieve the package name of the application that installed a package."
                    },
                    {
                        "name": "getInstantAppCookie()",
                        "return_type": "abstract byte[]",
                        "description": "Gets the instant application cookie for this app."
                    },
                    {
                        "name": "getInstantAppCookieMaxSize()",
                        "return_type": "abstract int",
                        "description": "Gets the maximum size in bytes of the cookie data an instant app can store on the device."
                    },
                    {
                        "name": "getPackageInfo(String packageName, int flags)",
                        "return_type": "abstractPackageInfo",
                        "description": "Retrieve overall information about an application package that is installed on the system or a running instant app."
                    },
                    {
                        "name": "getPackagesForUid(int uid)",
                        "return_type": "abstractString[]",
                        "description": "Retrieve the names of all packages that are associated with a particular user id."
                    },
                    {
                        "name": "isInstantApp()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if this application is an instant app."
                    },
                    {
                        "name": "isInstantApp(String packageName)",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the provided package is that of a running instant app that has whitelisted the calling application."
                    },
                    {
                        "name": "setInstantAppCookie(byte[] cookie)",
                        "return_type": "abstract boolean",
                        "description": "Sets the instant application cookie for the calling app."
                    }
                ]
            }
        ]
    },
    {
        "name": "framework",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/framework/package-summary",
        "classes": [
            {
                "name": "CastButtonFactory",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastButtonFactory",
                "description": "A factory class to set up a MenuItem or a MediaRouteButton to be used as a Cast button.",
                "methods": [
                    {
                        "name": "setUpMediaRouteButton(Context context, MediaRouteButton button)",
                        "return_type": "static void",
                        "description": "Sets up the given MediaRouteButton."
                    },
                    {
                        "name": "setUpMediaRouteButton(Context context, Menu menu, int menuResourceId)",
                        "return_type": "staticMenuItem",
                        "description": "Sets up the MediaRouteActionProvider in menu."
                    }
                ]
            },
            {
                "name": "CastContext",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastContext",
                "description": "A singleton class containing global context for the Cast SDK.",
                "methods": [
                    {
                        "name": "addAppVisibilityListener(AppVisibilityListener listener)",
                        "return_type": "void",
                        "description": "This method is deprecated. Don't use the SDK to listen to app visibility changes. Use alternative ways for watching activity lifecycle changes such as by overriding Activity lifecycle change methods, or by using Application.ActivityLifecycleCallbacks. This deprecated method is now a no-op and will be removed in the next version."
                    },
                    {
                        "name": "addCastStateListener(CastStateListener listener)",
                        "return_type": "void",
                        "description": "Adds a CastStateListener to monitor changes of the current CastState."
                    },
                    {
                        "name": "getCastOptions()",
                        "return_type": "CastOptions",
                        "description": "Returns the CastOptions."
                    },
                    {
                        "name": "getCastReasonCodeForCastStatusCode(int castStatusCode)",
                        "return_type": "int",
                        "description": "Returns the CastReasonCodes for the given CastStatusCodes."
                    },
                    {
                        "name": "getCastState()",
                        "return_type": "int",
                        "description": "Returns the current CastState."
                    },
                    {
                        "name": "getMediaNotificationManager()",
                        "return_type": "MediaNotificationManager",
                        "description": "Returns the MediaNotificationManager."
                    },
                    {
                        "name": "getMergedSelector()",
                        "return_type": "MediaRouteSelector",
                        "description": "Returns the merged MediaRouteSelector used for discovering devices and deciding whether to show the MediaRouteButton."
                    },
                    {
                        "name": "getPrecacheManager()",
                        "return_type": "PrecacheManager",
                        "description": "Returns the PrecacheManager."
                    },
                    {
                        "name": "getSessionManager()",
                        "return_type": "SessionManager",
                        "description": "Returns the SessionManager, never returns null."
                    },
                    {
                        "name": "getSharedInstance(Context context)",
                        "return_type": "staticCastContext",
                        "description": "Returns a shared instance of CastContext."
                    },
                    {
                        "name": "getSharedInstance()",
                        "return_type": "staticCastContext",
                        "description": "Returns the shared instance of CastContext."
                    },
                    {
                        "name": "isAppVisible()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Don't use the SDK to listen to app visibility changes. Use alternative ways for watching activity lifecycle changes such as by overriding Activity lifecycle change methods, or by using Application.ActivityLifecycleCallbacks. This deprecated method always return false now and will be removed in the next version."
                    },
                    {
                        "name": "onDispatchVolumeKeyEventBeforeJellyBean(KeyEvent event)",
                        "return_type": "boolean",
                        "description": "If your application supports SDK versions before JELLY BEAN, you should call this method to delegate the handling of physical volume key events to the SDK so that users can use the physical volume keys to control device volume of the Cast receiver."
                    },
                    {
                        "name": "removeAppVisibilityListener(AppVisibilityListener listener)",
                        "return_type": "void",
                        "description": "This method is deprecated. Don't use the SDK to listen to app visibility changes. Use alternative ways for watching activity lifecycle changes such as by overriding Activity lifecycle change methods, or by using Application.ActivityLifecycleCallbacks. This deprecated method is now a no-op and will be removed in the next version."
                    },
                    {
                        "name": "removeCastStateListener(CastStateListener listener)",
                        "return_type": "void",
                        "description": "Removes a CastStateListener."
                    },
                    {
                        "name": "setLaunchCredentialsData(CredentialsData credentialsData)",
                        "return_type": "void",
                        "description": "Sets the credentials data of the current user."
                    },
                    {
                        "name": "setReceiverApplicationId(String applicationId)",
                        "return_type": "void",
                        "description": "Sets the receiver application ID."
                    }
                ]
            },
            {
                "name": "CastOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastOptions",
                "description": "Configuration parameters for initializing the CastContext.",
                "methods": [
                    {
                        "name": "getCastMediaOptions()",
                        "return_type": "CastMediaOptions",
                        "description": "Returns the CastMediaOptions that is used to configure a media session."
                    },
                    {
                        "name": "getEnableReconnectionService()",
                        "return_type": "boolean",
                        "description": "Returns true if ReconnectionService should be enabled when needed to better handle session recovery."
                    },
                    {
                        "name": "getLaunchOptions()",
                        "return_type": "LaunchOptions",
                        "description": "Returns the LaunchOptions."
                    },
                    {
                        "name": "getReceiverApplicationId()",
                        "return_type": "String",
                        "description": "Returns the cast receiver application ID."
                    },
                    {
                        "name": "getResumeSavedSession()",
                        "return_type": "boolean",
                        "description": "Returns true if the saved session should be resumed if it was dropped unexpectedly."
                    },
                    {
                        "name": "getStopReceiverApplicationWhenEndingSession()",
                        "return_type": "boolean",
                        "description": "Returns true if the receiver application should be stopped when the session is ended by the user."
                    },
                    {
                        "name": "getSupportedNamespaces()",
                        "return_type": "List<String>",
                        "description": "Returns the list of supported cast namespaces."
                    },
                    {
                        "name": "getVolumeDeltaBeforeIceCreamSandwich()",
                        "return_type": "double",
                        "description": "Returns the amount of receiver device volume to increase or decrease when the physical volume key is pressed on an Android device older than ICE CREAM SANDWICH."
                    }
                ]
            },
            {
                "name": "CastOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastOptions.Builder",
                "description": "A builder to create an instance of CastOptions which is used to initialize the CastContext.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastOptions",
                        "description": "Builds and returns the CastOptions object."
                    },
                    {
                        "name": "setCastMediaOptions(CastMediaOptions castMediaOptions)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the CastMediaOptions that will be used to configure the media session."
                    },
                    {
                        "name": "setEnableReconnectionService(boolean enableReconnectionService)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets whether ReconnectionService should be enabled when needed to better handle session recovery."
                    },
                    {
                        "name": "setLaunchOptions(LaunchOptions launchOptions)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the receiver launch options to use when launching the application."
                    },
                    {
                        "name": "setReceiverApplicationId(String applicationId)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the receiver application ID."
                    },
                    {
                        "name": "setResumeSavedSession(boolean resumeSavedSession)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets whether the saved session should be resumed if it was dropped unexpectedly."
                    },
                    {
                        "name": "setStopReceiverApplicationWhenEndingSession(boolean stopApp)",
                        "return_type": "CastOptions.Builder",
                        "description": "Specifies whether the receiver application should be terminated when a session is ended by the user via the \"Stop Casting\" button in the media router dialog."
                    },
                    {
                        "name": "setSupportedNamespaces(List<String> supportedNamespaces)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the list of supported namespaces."
                    },
                    {
                        "name": "setVolumeDeltaBeforeIceCreamSandwich(double volumeDelta)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the amount of receiver device volume to increase or decrease when the physical volume key is pressed on an Android device older than ICE CREAM SANDWICH."
                    }
                ]
            },
            {
                "name": "CastReasonCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastReasonCodes",
                "description": "A class containing developer-friendly error codes mapped from CastStatusCodes.",
                "methods": []
            },
            {
                "name": "CastSession",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastSession",
                "description": "An implementation of Session for managing connections to a Cast receiver device.",
                "methods": [
                    {
                        "name": "addCastListener(Cast.Listener listener)",
                        "return_type": "void",
                        "description": "Adds the Cast.Listener for Cast events, such as change of the application status and change of device volume."
                    },
                    {
                        "name": "getActiveInputState()",
                        "return_type": "int",
                        "description": "Returns the device's active-input state."
                    },
                    {
                        "name": "getApplicationConnectionResult()",
                        "return_type": "Cast.ApplicationConnectionResult",
                        "description": "Returns the Cast.ApplicationConnectionResult, the result of launching or joining the receiver application when starting or resuming this session."
                    },
                    {
                        "name": "getApplicationMetadata()",
                        "return_type": "ApplicationMetadata",
                        "description": "Returns the metadata for the currently running receiver application, or null if the metadata is unavailable."
                    },
                    {
                        "name": "getApplicationStatus()",
                        "return_type": "String",
                        "description": "Returns the current receiver application status, if any."
                    },
                    {
                        "name": "getCastDevice()",
                        "return_type": "CastDevice",
                        "description": "Returns the CastDevice this CastSession is casting to."
                    },
                    {
                        "name": "getRemoteMediaClient()",
                        "return_type": "RemoteMediaClient",
                        "description": "Returns the RemoteMediaClient for remote media control."
                    },
                    {
                        "name": "getSessionRemainingTimeMs()",
                        "return_type": "long",
                        "description": "Returns the amount of time that this CastSession instance should still be considered live by the SDK."
                    },
                    {
                        "name": "getStandbyState()",
                        "return_type": "int",
                        "description": "Returns the device's standby state."
                    },
                    {
                        "name": "getVolume()",
                        "return_type": "double",
                        "description": "Returns the device's volume, in the range [0.0, 1.0]."
                    },
                    {
                        "name": "isMute()",
                        "return_type": "boolean",
                        "description": "Returns the device's mute state."
                    },
                    {
                        "name": "removeCastListener(Cast.Listener listener)",
                        "return_type": "void",
                        "description": "Removes the Cast.Listener."
                    },
                    {
                        "name": "removeMessageReceivedCallbacks(String namespace)",
                        "return_type": "void",
                        "description": "Removes the Cast.MessageReceivedCallback from this session for a given namespace."
                    },
                    {
                        "name": "requestStatus()",
                        "return_type": "void",
                        "description": "Requests the latest status from the device."
                    },
                    {
                        "name": "sendMessage(String namespace, String message)",
                        "return_type": "PendingResult<Status>",
                        "description": "Sends a message to the currently connected application."
                    },
                    {
                        "name": "setMessageReceivedCallbacks(String namespace, Cast.MessageReceivedCallback callbacks)",
                        "return_type": "void",
                        "description": "Sets the new Cast.MessageReceivedCallback listener on this session for a given namespace."
                    },
                    {
                        "name": "setMute(boolean mute)",
                        "return_type": "void",
                        "description": "Mutes or unmutes the device's audio."
                    },
                    {
                        "name": "setVolume(double volume)",
                        "return_type": "void",
                        "description": "Sets the device volume."
                    }
                ]
            },
            {
                "name": "CastState",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastState",
                "description": "The possible casting states.",
                "methods": [
                    {
                        "name": "toString(int castState)",
                        "return_type": "staticString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IntroductoryOverlay.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/IntroductoryOverlay.Builder",
                "description": "The builder class that creates an instance of IntroductoryOverlay.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "IntroductoryOverlay",
                        "description": ""
                    },
                    {
                        "name": "setButtonText(String text)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the confirmation button on this overlay."
                    },
                    {
                        "name": "setButtonText(int stringId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the confirmation button on this overlay."
                    },
                    {
                        "name": "setFocusRadius(float radius)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the radius of the \"hole\" around the cast button."
                    },
                    {
                        "name": "setFocusRadiusId(int radiusId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the radius of the \"hole\" around the cast button."
                    },
                    {
                        "name": "setOnOverlayDismissedListener(IntroductoryOverlay.OnOverlayDismissedListener listener)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets an IntroductoryOverlay.OnOverlayDismissedListener listener that will be notified when the overlay is dismissed by pressing on the confirmation button."
                    },
                    {
                        "name": "setOverlayColor(int colorId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the background color of the overlay view."
                    },
                    {
                        "name": "setSingleTime()",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the maximum number of times that this overlay should be shown to 1."
                    },
                    {
                        "name": "setTitleText(int stringId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the Title area on the overlay."
                    },
                    {
                        "name": "setTitleText(String text)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the Title area on the overlay."
                    }
                ]
            },
            {
                "name": "MediaNotificationManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/MediaNotificationManager",
                "description": "A class that manages the media notification.",
                "methods": [
                    {
                        "name": "updateNotification()",
                        "return_type": "void",
                        "description": "Updates the current media notification if it is already started."
                    }
                ]
            },
            {
                "name": "PrecacheManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/PrecacheManager",
                "description": "The entry point of pre-cache APIs.",
                "methods": [
                    {
                        "name": "precache(String data)",
                        "return_type": "void",
                        "description": "Pre-caches the content that users intend to consume in order to reduce the loading time at playback."
                    }
                ]
            },
            {
                "name": "ReconnectionService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/ReconnectionService",
                "description": "A service to run in the background when the playback of a media starts, to help with reconnection if needed.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStartCommand(Intent intent, int flags, int startId)",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Session",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/Session",
                "description": "An abstract base class representing a session with a receiver application.",
                "methods": [
                    {
                        "name": "getCategory()",
                        "return_type": "finalString",
                        "description": "Returns the category associated with this Session."
                    },
                    {
                        "name": "getSessionId()",
                        "return_type": "finalString",
                        "description": "Returns the unique ID for this session."
                    },
                    {
                        "name": "getSessionRemainingTimeMs()",
                        "return_type": "long",
                        "description": "Subclass can override this method to provide a hint of how long the current session will live."
                    },
                    {
                        "name": "isConnected()",
                        "return_type": "boolean",
                        "description": "Returns true if the session is connected."
                    },
                    {
                        "name": "isConnecting()",
                        "return_type": "boolean",
                        "description": "Returns true if the session is connecting or resuming."
                    },
                    {
                        "name": "isDisconnected()",
                        "return_type": "boolean",
                        "description": "Returns true if the session is disconnected."
                    },
                    {
                        "name": "isDisconnecting()",
                        "return_type": "boolean",
                        "description": "Returns true if the session is disconnecting."
                    },
                    {
                        "name": "isResuming()",
                        "return_type": "boolean",
                        "description": "Returns true if the session is resuming."
                    },
                    {
                        "name": "isSuspended()",
                        "return_type": "boolean",
                        "description": "Returns true if the session is suspended."
                    }
                ]
            },
            {
                "name": "SessionManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/SessionManager",
                "description": "A class that manages Session instances.",
                "methods": [
                    {
                        "name": "addSessionManagerListener(SessionManagerListener<Session> listener)",
                        "return_type": "void",
                        "description": "Adds a SessionManagerListener to monitor events from any type of Session instance."
                    },
                    {
                        "name": "addSessionManagerListener(SessionManagerListener<T> listener, Class<T> sessionClass)",
                        "return_type": "<T extendsSession>\n                void",
                        "description": "Adds a SessionManagerListener to monitor events from a Session instance whose class is sessionClass."
                    },
                    {
                        "name": "endCurrentSession(boolean stopCasting)",
                        "return_type": "void",
                        "description": "Ends the current session."
                    },
                    {
                        "name": "getCurrentCastSession()",
                        "return_type": "CastSession",
                        "description": "Returns the current session if it is an instance of CastSession, otherwise returns null."
                    },
                    {
                        "name": "getCurrentSession()",
                        "return_type": "Session",
                        "description": "Returns the currently active session."
                    },
                    {
                        "name": "removeSessionManagerListener(SessionManagerListener<Session> listener)",
                        "return_type": "void",
                        "description": "Removes the SessionManagerListener."
                    },
                    {
                        "name": "removeSessionManagerListener(SessionManagerListener<T> listener, Class sessionClass)",
                        "return_type": "<T extendsSession>\n                void",
                        "description": "Removes the SessionManagerListener."
                    },
                    {
                        "name": "startSession(Intent startSessionIntent)",
                        "return_type": "void",
                        "description": "Starts a session."
                    }
                ]
            },
            {
                "name": "SessionProvider",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/SessionProvider",
                "description": "An abstract base class for performing session construction.",
                "methods": [
                    {
                        "name": "createSession(String sessionId)",
                        "return_type": "abstractSession",
                        "description": "Constructs a new Session."
                    },
                    {
                        "name": "getCategory()",
                        "return_type": "finalString",
                        "description": "Returns the category string for this SessionProvider."
                    },
                    {
                        "name": "getContext()",
                        "return_type": "finalContext",
                        "description": "Returns the application Context used to construct this instance."
                    },
                    {
                        "name": "isSessionRecoverable()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if a previously constructed session can be resumed."
                    }
                ]
            },
            {
                "name": "AppVisibilityListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/AppVisibilityListener",
                "description": "This interface is deprecated. Don't use the SDK to listen to app visibility changes. Use alternative ways for watching activity lifecycle changes such as by overriding Activity lifecycle change methods, or by using Application.ActivityLifecycleCallbacks.",
                "methods": [
                    {
                        "name": "onAppEnteredBackground()",
                        "return_type": "abstract void",
                        "description": "Called when the application's UI enters the background."
                    },
                    {
                        "name": "onAppEnteredForeground()",
                        "return_type": "abstract void",
                        "description": "Called when the application's UI enters the foreground."
                    }
                ]
            },
            {
                "name": "CastStateListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastStateListener",
                "description": "A listener interface for monitoring the current CastState.",
                "methods": [
                    {
                        "name": "onCastStateChanged(int newState)",
                        "return_type": "abstract void",
                        "description": "Called when the current CastState changes."
                    }
                ]
            },
            {
                "name": "IntroductoryOverlay",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/IntroductoryOverlay",
                "description": "A simple overlay view that highlights the Cast button to the user.",
                "methods": [
                    {
                        "name": "remove()",
                        "return_type": "abstract void",
                        "description": "Removes the overlay and frees the resources used."
                    },
                    {
                        "name": "show()",
                        "return_type": "abstract void",
                        "description": "Shows the overlay if it is not visible already."
                    }
                ]
            },
            {
                "name": "IntroductoryOverlay.OnOverlayDismissedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/IntroductoryOverlay.OnOverlayDismissedListener",
                "description": "An interface to notify the clients when the overlay is dismissed explicitly when the user taps on the confirmation button.",
                "methods": [
                    {
                        "name": "onOverlayDismissed()",
                        "return_type": "abstract void",
                        "description": "Called when the overlay is dismissed."
                    }
                ]
            },
            {
                "name": "OptionsProvider",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/OptionsProvider",
                "description": "Developers should implement this interface to provide options needed to create and initialize CastContext.",
                "methods": [
                    {
                        "name": "getAdditionalSessionProviders(Context appContext)",
                        "return_type": "abstractList<SessionProvider>",
                        "description": "Provides a list of custom SessionProvider instances for non-Cast devices."
                    },
                    {
                        "name": "getCastOptions(Context appContext)",
                        "return_type": "abstractCastOptions",
                        "description": "Provides CastOptions, which affects discovery and session management of a Cast device."
                    }
                ]
            },
            {
                "name": "SessionManagerListener<T extendsSession>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/framework/SessionManagerListener",
                "description": "A listener interface for monitoring events of a particular type of Session instance.",
                "methods": [
                    {
                        "name": "onSessionEnded(T session, int error)",
                        "return_type": "abstract void",
                        "description": "Called when a session has ended."
                    },
                    {
                        "name": "onSessionEnding(T session)",
                        "return_type": "abstract void",
                        "description": "Called when a session is ending."
                    },
                    {
                        "name": "onSessionResumeFailed(T session, int error)",
                        "return_type": "abstract void",
                        "description": "Called when a previous saved session failed to resume."
                    },
                    {
                        "name": "onSessionResumed(T session, boolean wasSuspended)",
                        "return_type": "abstract void",
                        "description": "Called when session has been successfully resumed."
                    },
                    {
                        "name": "onSessionResuming(T session, String sessionId)",
                        "return_type": "abstract void",
                        "description": "Called when a session is attempting to resume."
                    },
                    {
                        "name": "onSessionStartFailed(T session, int error)",
                        "return_type": "abstract void",
                        "description": "Called when a session failed to start."
                    },
                    {
                        "name": "onSessionStarted(T session, String sessionId)",
                        "return_type": "abstract void",
                        "description": "Called when a session has been successfully started."
                    },
                    {
                        "name": "onSessionStarting(T session)",
                        "return_type": "abstract void",
                        "description": "Called when a session is attempting to start."
                    },
                    {
                        "name": "onSessionSuspended(T session, int reason)",
                        "return_type": "abstract void",
                        "description": "Called when a session has been suspended."
                    }
                ]
            },
            {
                "name": "CastOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/CastOptions.Builder",
                "description": "A builder to create an instance of CastOptions which is used to initialize the CastContext.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastOptions",
                        "description": "Builds and returns the CastOptions object."
                    },
                    {
                        "name": "setCastMediaOptions(CastMediaOptions castMediaOptions)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the CastMediaOptions that will be used to configure the media session."
                    },
                    {
                        "name": "setEnableReconnectionService(boolean enableReconnectionService)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets whether ReconnectionService should be enabled when needed to better handle session recovery."
                    },
                    {
                        "name": "setLaunchOptions(LaunchOptions launchOptions)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the receiver launch options to use when launching the application."
                    },
                    {
                        "name": "setReceiverApplicationId(String applicationId)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the receiver application ID."
                    },
                    {
                        "name": "setResumeSavedSession(boolean resumeSavedSession)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets whether the saved session should be resumed if it was dropped unexpectedly."
                    },
                    {
                        "name": "setStopReceiverApplicationWhenEndingSession(boolean stopApp)",
                        "return_type": "CastOptions.Builder",
                        "description": "Specifies whether the receiver application should be terminated when a session is ended by the user via the \"Stop Casting\" button in the media router dialog."
                    },
                    {
                        "name": "setSupportedNamespaces(List<String> supportedNamespaces)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the list of supported namespaces."
                    },
                    {
                        "name": "setVolumeDeltaBeforeIceCreamSandwich(double volumeDelta)",
                        "return_type": "CastOptions.Builder",
                        "description": "Sets the amount of receiver device volume to increase or decrease when the physical volume key is pressed on an Android device older than ICE CREAM SANDWICH."
                    }
                ]
            },
            {
                "name": "IntroductoryOverlay.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/framework/IntroductoryOverlay.Builder",
                "description": "The builder class that creates an instance of IntroductoryOverlay.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "IntroductoryOverlay",
                        "description": ""
                    },
                    {
                        "name": "setButtonText(String text)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the confirmation button on this overlay."
                    },
                    {
                        "name": "setButtonText(int stringId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the confirmation button on this overlay."
                    },
                    {
                        "name": "setFocusRadius(float radius)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the radius of the \"hole\" around the cast button."
                    },
                    {
                        "name": "setFocusRadiusId(int radiusId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the radius of the \"hole\" around the cast button."
                    },
                    {
                        "name": "setOnOverlayDismissedListener(IntroductoryOverlay.OnOverlayDismissedListener listener)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets an IntroductoryOverlay.OnOverlayDismissedListener listener that will be notified when the overlay is dismissed by pressing on the confirmation button."
                    },
                    {
                        "name": "setOverlayColor(int colorId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the background color of the overlay view."
                    },
                    {
                        "name": "setSingleTime()",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the maximum number of times that this overlay should be shown to 1."
                    },
                    {
                        "name": "setTitleText(int stringId)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the Title area on the overlay."
                    },
                    {
                        "name": "setTitleText(String text)",
                        "return_type": "IntroductoryOverlay.Builder",
                        "description": "Sets the text used in the Title area on the overlay."
                    }
                ]
            },
            {
                "name": "IntroductoryOverlay.OnOverlayDismissedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/framework/IntroductoryOverlay.OnOverlayDismissedListener",
                "description": "An interface to notify the clients when the overlay is dismissed explicitly when the user taps on the confirmation button.",
                "methods": [
                    {
                        "name": "onOverlayDismissed()",
                        "return_type": "abstract void",
                        "description": "Called when the overlay is dismissed."
                    }
                ]
            }
        ]
    },
    {
        "name": "accounttransfer",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/api/accounttransfer/package-summary",
        "classes": [
            {
                "name": "AccountTransfer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/accounttransfer/AccountTransfer",
                "description": "Main entry point for AccountTransfer API's.",
                "methods": [
                    {
                        "name": "getAccountTransferClient(Context context)",
                        "return_type": "staticAccountTransferClient",
                        "description": "Creates a new instance of AccountTransferClient for use in a non-activity Context."
                    },
                    {
                        "name": "getAccountTransferClient(Activity activity)",
                        "return_type": "staticAccountTransferClient",
                        "description": "Creates a new instance of AccountTransferClient for use in an Activity."
                    }
                ]
            },
            {
                "name": "AccountTransferClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/accounttransfer/AccountTransferClient",
                "description": "Contains api's used by authenticators for bootstrapping accounts.",
                "methods": [
                    {
                        "name": "getDeviceMetaData(String accountType)",
                        "return_type": "Task<DeviceMetaData>",
                        "description": "Retrieves DeviceMetaData associated with the device, which authenticators can use to figure out if they can challenge on the device."
                    },
                    {
                        "name": "notifyCompletion(String accountType, int completionStatus)",
                        "return_type": "Task<Void>",
                        "description": "Notifies the completion of the account transfer."
                    },
                    {
                        "name": "retrieveData(String accountType)",
                        "return_type": "Task<byte[]>",
                        "description": "Retrieves data that was transferred over from other side."
                    },
                    {
                        "name": "sendData(String accountType, byte[] transferData)",
                        "return_type": "Task<Void>",
                        "description": "Transfers data that will be transferred over to the other side."
                    },
                    {
                        "name": "showUserChallenge(String accountType, PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Sends a user facing challenge, specified by PendingIntent."
                    }
                ]
            },
            {
                "name": "AccountTransferStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/accounttransfer/AccountTransferStatusCodes",
                "description": "Account Transfer specific status codes, for use in Status#getStatusCode().",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly"
                    }
                ]
            },
            {
                "name": "DeviceMetaData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/accounttransfer/DeviceMetaData",
                "description": "Contains meta information like source device auth info and whether an authenticator is allowed to throw challenge.",
                "methods": [
                    {
                        "name": "getMinAgeOfLockScreen()",
                        "return_type": "long",
                        "description": "Returns the duration since the lock screen was setup."
                    },
                    {
                        "name": "isChallengeAllowed()",
                        "return_type": "boolean",
                        "description": "Returns if the calling authenticator is allowed to challenge on the device this call is made."
                    },
                    {
                        "name": "isLockScreenSolved()",
                        "return_type": "boolean",
                        "description": "Returns whether the lock screen was solved by user prior to starting the account transfer flow."
                    }
                ]
            }
        ]
    },
    {
        "name": "snapshot",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/awareness/snapshot/package-summary",
        "classes": [
            {
                "name": "BeaconStateResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/BeaconStateResponse",
                "description": "Result from getBeaconState(Collection).",
                "methods": [
                    {
                        "name": "getBeaconState()",
                        "return_type": "BeaconState",
                        "description": "Returns the current nearby beacon states."
                    }
                ]
            },
            {
                "name": "DetectedActivityResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/DetectedActivityResponse",
                "description": "Result from getDetectedActivity().",
                "methods": [
                    {
                        "name": "getActivityRecognitionResult()",
                        "return_type": "ActivityRecognitionResult",
                        "description": "Returns the current detected activity."
                    }
                ]
            },
            {
                "name": "HeadphoneStateResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/HeadphoneStateResponse",
                "description": "Result from getHeadphoneState().",
                "methods": [
                    {
                        "name": "getHeadphoneState()",
                        "return_type": "HeadphoneState",
                        "description": "Returns the current headphone state."
                    }
                ]
            },
            {
                "name": "LocationResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/LocationResponse",
                "description": "Result from getLocation().",
                "methods": [
                    {
                        "name": "getLocation()",
                        "return_type": "Location",
                        "description": "Returns the current lat/lng location of the device."
                    }
                ]
            },
            {
                "name": "TimeIntervalsResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/TimeIntervalsResponse",
                "description": "Result from getTimeIntervals().",
                "methods": [
                    {
                        "name": "getTimeIntervals()",
                        "return_type": "TimeIntervals",
                        "description": "Returns the attributes corresponding to the current day at the device's current locale"
                    }
                ]
            },
            {
                "name": "BeaconStateResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/BeaconStateResult",
                "description": "Result from getBeaconState(GoogleApiClient, Collection).",
                "methods": [
                    {
                        "name": "getBeaconState()",
                        "return_type": "abstractBeaconState",
                        "description": "Returns the current nearby beacon states."
                    }
                ]
            },
            {
                "name": "DetectedActivityResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/DetectedActivityResult",
                "description": "Result from getDetectedActivity(GoogleApiClient).",
                "methods": [
                    {
                        "name": "getActivityRecognitionResult()",
                        "return_type": "abstractActivityRecognitionResult",
                        "description": "Returns the current detected activity."
                    }
                ]
            },
            {
                "name": "HeadphoneStateResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/HeadphoneStateResult",
                "description": "Result from getHeadphoneState(GoogleApiClient).",
                "methods": [
                    {
                        "name": "getHeadphoneState()",
                        "return_type": "abstractHeadphoneState",
                        "description": "Returns the current headphone state."
                    }
                ]
            },
            {
                "name": "LocationResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/LocationResult",
                "description": "Result from getLocation(GoogleApiClient).",
                "methods": [
                    {
                        "name": "getLocation()",
                        "return_type": "abstractLocation",
                        "description": "Returns the current lat/lng location of the device."
                    }
                ]
            },
            {
                "name": "TimeIntervalsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/snapshot/TimeIntervalsResult",
                "description": "Result from getTimeIntervals(GoogleApiClient).",
                "methods": [
                    {
                        "name": "getTimeIntervals()",
                        "return_type": "abstractTimeIntervals",
                        "description": "Returns the attributes corresponding to the current day at the device's current locale"
                    }
                ]
            }
        ]
    },
    {
        "name": "achievement",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/achievement/package-summary",
        "classes": [
            {
                "name": "AchievementBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/achievement/AchievementBuffer",
                "description": "Data structure providing access to a list of achievements.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "Achievement",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AchievementEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/achievement/AchievementEntity",
                "description": "Data object representing a set of Achievement data.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "freeze()",
                        "return_type": "Achievement",
                        "description": ""
                    },
                    {
                        "name": "getAchievementId()",
                        "return_type": "String",
                        "description": "Retrieves the ID of this achievement."
                    },
                    {
                        "name": "getCurrentSteps()",
                        "return_type": "int",
                        "description": "Retrieves the number of steps this user has gone toward unlocking this achievement; only applicable for TYPE_INCREMENTAL achievement types."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "Retrieves the description for this achievement."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the achievement description into the given CharArrayBuffer."
                    },
                    {
                        "name": "getFormattedCurrentSteps()",
                        "return_type": "String",
                        "description": "Retrieves the number of steps this user has gone toward unlocking this achievement (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedCurrentSteps(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Retrieves the number of steps this user has gone toward unlocking this achievement (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedTotalSteps(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the total number of steps necessary to unlock this achievement (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedTotalSteps()",
                        "return_type": "String",
                        "description": "Retrieves the total number of steps necessary to unlock this achievement, formatted for the user's locale; only applicable for TYPE_INCREMENTAL achievement types."
                    },
                    {
                        "name": "getLastUpdatedTimestamp()",
                        "return_type": "long",
                        "description": "Retrieves the timestamp (in millseconds since epoch"
                    },
                    {
                        "name": "getName(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the achievement name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Retrieves the name of this achievement."
                    },
                    {
                        "name": "getPlayer()",
                        "return_type": "Player",
                        "description": "Retrieves the player information associated with this achievement."
                    },
                    {
                        "name": "getRevealedImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves a URI that can be used to load the achievement's revealed image icon."
                    },
                    {
                        "name": "getRevealedImageUrl()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getState()",
                        "return_type": "int",
                        "description": "Returns the Achievement.AchievementState of the achievement."
                    },
                    {
                        "name": "getTotalSteps()",
                        "return_type": "int",
                        "description": "Retrieves the total number of steps necessary to unlock this achievement; only applicable for TYPE_INCREMENTAL achievement types."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the Achievement.AchievementType of this achievement."
                    },
                    {
                        "name": "getUnlockedImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves a URI that can be used to load the achievement's unlocked image icon."
                    },
                    {
                        "name": "getUnlockedImageUrl()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getXpValue()",
                        "return_type": "long",
                        "description": "Retrieves the XP value of this achievement."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Achievement",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/achievement/Achievement",
                "description": "Data interface for retrieving achievement information.",
                "methods": [
                    {
                        "name": "getAchievementId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of this achievement."
                    },
                    {
                        "name": "getCurrentSteps()",
                        "return_type": "abstract int",
                        "description": "Retrieves the number of steps this user has gone toward unlocking this achievement; only applicable for TYPE_INCREMENTAL achievement types."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "Retrieves the description for this achievement."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the achievement description into the given CharArrayBuffer."
                    },
                    {
                        "name": "getFormattedCurrentSteps(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Retrieves the number of steps this user has gone toward unlocking this achievement (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedCurrentSteps()",
                        "return_type": "abstractString",
                        "description": "Retrieves the number of steps this user has gone toward unlocking this achievement (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedTotalSteps(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the total number of steps necessary to unlock this achievement (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedTotalSteps()",
                        "return_type": "abstractString",
                        "description": "Retrieves the total number of steps necessary to unlock this achievement, formatted for the user's locale; only applicable for TYPE_INCREMENTAL achievement types."
                    },
                    {
                        "name": "getLastUpdatedTimestamp()",
                        "return_type": "abstract long",
                        "description": "Retrieves the timestamp (in millseconds since epoch"
                    },
                    {
                        "name": "getName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the achievement name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the name of this achievement."
                    },
                    {
                        "name": "getPlayer()",
                        "return_type": "abstractPlayer",
                        "description": "Retrieves the player information associated with this achievement."
                    },
                    {
                        "name": "getRevealedImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves a URI that can be used to load the achievement's revealed image icon."
                    },
                    {
                        "name": "getState()",
                        "return_type": "abstract int",
                        "description": "Returns the Achievement.AchievementState of the achievement."
                    },
                    {
                        "name": "getTotalSteps()",
                        "return_type": "abstract int",
                        "description": "Retrieves the total number of steps necessary to unlock this achievement; only applicable for TYPE_INCREMENTAL achievement types."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstract int",
                        "description": "Returns the Achievement.AchievementType of this achievement."
                    },
                    {
                        "name": "getUnlockedImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves a URI that can be used to load the achievement's unlocked image icon."
                    },
                    {
                        "name": "getXpValue()",
                        "return_type": "abstract long",
                        "description": "Retrieves the XP value of this achievement."
                    }
                ]
            },
            {
                "name": "Achievements",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/achievement/Achievements",
                "description": "This interface is deprecated. Use AchievementsClient instead",
                "methods": [
                    {
                        "name": "getAchievementsIntent(GoogleApiClient apiClient)",
                        "return_type": "abstractIntent",
                        "description": "Gets an intent to show the list of achievements for a game."
                    },
                    {
                        "name": "increment(GoogleApiClient apiClient, String id, int numSteps)",
                        "return_type": "abstract void",
                        "description": "Increments an achievement by the given number of steps."
                    },
                    {
                        "name": "incrementImmediate(GoogleApiClient apiClient, String id, int numSteps)",
                        "return_type": "abstractPendingResult<Achievements.UpdateAchievementResult>",
                        "description": "Increments an achievement by the given number of steps."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, boolean forceReload)",
                        "return_type": "abstractPendingResult<Achievements.LoadAchievementsResult>",
                        "description": "Asynchronously load achievement data for the currently signed in player."
                    },
                    {
                        "name": "reveal(GoogleApiClient apiClient, String id)",
                        "return_type": "abstract void",
                        "description": "Reveal a hidden achievement to the currently signed in player."
                    },
                    {
                        "name": "revealImmediate(GoogleApiClient apiClient, String id)",
                        "return_type": "abstractPendingResult<Achievements.UpdateAchievementResult>",
                        "description": "Reveal a hidden achievement to the currently signed in player."
                    },
                    {
                        "name": "setSteps(GoogleApiClient apiClient, String id, int numSteps)",
                        "return_type": "abstract void",
                        "description": "Set an achievement to have at least the given number of steps completed."
                    },
                    {
                        "name": "setStepsImmediate(GoogleApiClient apiClient, String id, int numSteps)",
                        "return_type": "abstractPendingResult<Achievements.UpdateAchievementResult>",
                        "description": "Set an achievement to have at least the given number of steps completed."
                    },
                    {
                        "name": "unlock(GoogleApiClient apiClient, String id)",
                        "return_type": "abstract void",
                        "description": "Unlock an achievement for the currently signed in player."
                    },
                    {
                        "name": "unlockImmediate(GoogleApiClient apiClient, String id)",
                        "return_type": "abstractPendingResult<Achievements.UpdateAchievementResult>",
                        "description": "Unlock an achievement for the currently signed in player."
                    }
                ]
            },
            {
                "name": "Achievements.LoadAchievementsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/achievement/Achievements.LoadAchievementsResult",
                "description": "This interface is deprecated. AchievementBuffer is returned directly in the AchievementsClient.",
                "methods": [
                    {
                        "name": "getAchievements()",
                        "return_type": "abstractAchievementBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Achievements.UpdateAchievementResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/achievement/Achievements.UpdateAchievementResult",
                "description": "This interface is deprecated. Is not used in the AchievementsClient.",
                "methods": [
                    {
                        "name": "getAchievementId()",
                        "return_type": "abstractString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Achievements.LoadAchievementsResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/achievement/Achievements.LoadAchievementsResult",
                "description": "This interface is deprecated. AchievementBuffer is returned directly in the AchievementsClient.",
                "methods": [
                    {
                        "name": "getAchievements()",
                        "return_type": "abstractAchievementBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Achievements.UpdateAchievementResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/achievement/Achievements.UpdateAchievementResult",
                "description": "This interface is deprecated. Is not used in the AchievementsClient.",
                "methods": [
                    {
                        "name": "getAchievementId()",
                        "return_type": "abstractString",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "exposurenotification",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/nearby/exposurenotification/package-summary",
        "classes": [
            {
                "name": "DailySummariesConfig",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DailySummariesConfig",
                "description": "Configuration of per-day summary of exposures.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttenuationBucketThresholdDb()",
                        "return_type": "List<Integer>",
                        "description": "Thresholds defining the BLE attenuation buckets edges."
                    },
                    {
                        "name": "getAttenuationBucketWeights()",
                        "return_type": "List<Double>",
                        "description": "Scoring weights to associate with ScanInstances depending on the attenuation bucket in which their typicalAttenuationDb falls."
                    },
                    {
                        "name": "getDaysSinceExposureThreshold()",
                        "return_type": "int",
                        "description": "Day summaries older than this are not returned."
                    },
                    {
                        "name": "getInfectiousnessWeights()",
                        "return_type": "Map<Integer,Double>",
                        "description": "Scoring weights to associate with exposures with different Infectiousness."
                    },
                    {
                        "name": "getMinimumWindowScore()",
                        "return_type": "double",
                        "description": "Minimum score that ExposureWindows must reach in order to be included in the DailySummary.ExposureSummaryData."
                    },
                    {
                        "name": "getReportTypeWeights()",
                        "return_type": "Map<Integer,Double>",
                        "description": "Scoring weights to associate with exposures with different ReportTypes."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DailySummariesConfig.DailySummariesConfigBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DailySummariesConfig.DailySummariesConfigBuilder",
                "description": "A builder for DailySummariesConfig.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DailySummariesConfig",
                        "description": "Builds an instance of DailySummariesConfig."
                    },
                    {
                        "name": "setAttenuationBuckets(List<Integer> thresholds, List<Double> weights)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getAttenuationBucketThresholdDb("
                    },
                    {
                        "name": "setDaysSinceExposureThreshold(int daysSinceExposureThreshold)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getDaysSinceExposureThreshold("
                    },
                    {
                        "name": "setInfectiousnessWeight(int infectiousness, double weight)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getInfectiousnessWeights("
                    },
                    {
                        "name": "setMinimumWindowScore(double minimumWindowScore)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getMinimumWindowScore("
                    },
                    {
                        "name": "setReportTypeWeight(int reportType, double weight)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getReportTypeWeights("
                    }
                ]
            },
            {
                "name": "DailySummary",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DailySummary",
                "description": "Daily exposure summary to pass to client side.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDaysSinceEpoch()",
                        "return_type": "int",
                        "description": "Returns days since epoch of the ExposureWindows that went into this summary."
                    },
                    {
                        "name": "getSummaryData()",
                        "return_type": "DailySummary.ExposureSummaryData",
                        "description": "Summary of all exposures on this day."
                    },
                    {
                        "name": "getSummaryDataForReportType(int reportType)",
                        "return_type": "DailySummary.ExposureSummaryData",
                        "description": "Summary of all exposures on this day of a specific diagnosis ReportType."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DailySummary.ExposureSummaryData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DailySummary.ExposureSummaryData",
                "description": "Stores different scores for specific ReportType.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getMaximumScore()",
                        "return_type": "double",
                        "description": "Highest score of all ExposureWindows aggregated into this summary."
                    },
                    {
                        "name": "getScoreSum()",
                        "return_type": "double",
                        "description": "Sum of scores for all ExposureWindows aggregated into this summary."
                    },
                    {
                        "name": "getWeightedDurationSum()",
                        "return_type": "double",
                        "description": "Sum of weighted durations for all ExposureWindows aggregated into this summary."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DiagnosisKeyFileProvider",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DiagnosisKeyFileProvider",
                "description": "Provider which holds a list of diagnosis key files and can open/supply them one by one as they are ready to be processed.",
                "methods": []
            },
            {
                "name": "DiagnosisKeysDataMapping",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DiagnosisKeysDataMapping",
                "description": "Mappings from diagnosis keys data to concepts returned by the API.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDaysSinceOnsetToInfectiousness()",
                        "return_type": "Map<Integer,Integer>",
                        "description": "Mapping from diagnosisKey.daysSinceOnsetOfSymptoms to Infectiousness."
                    },
                    {
                        "name": "getInfectiousnessWhenDaysSinceOnsetMissing()",
                        "return_type": "int",
                        "description": "Infectiousness of TEKs for which onset of symptoms is not set."
                    },
                    {
                        "name": "getReportTypeWhenMissing()",
                        "return_type": "int",
                        "description": "Report type to default to when a TEK has no report type set."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                "description": "A builder for DiagnosisKeysDataMapping.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DiagnosisKeysDataMapping",
                        "description": "Builds an instance of DiagnosisKeysDataMapping."
                    },
                    {
                        "name": "setDaysSinceOnsetToInfectiousness(Map<Integer, Integer> daysSinceOnsetToInfectiousness)",
                        "return_type": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                        "description": "Sets the days since onset to infectiousness."
                    },
                    {
                        "name": "setInfectiousnessWhenDaysSinceOnsetMissing(int infectiousnessWhenDaysSinceOnsetMissing)",
                        "return_type": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                        "description": "Sets the infectiousness when days since onset missing."
                    },
                    {
                        "name": "setReportTypeWhenMissing(int reportTypeWhenMissing)",
                        "return_type": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                        "description": "Sets the report type when missing."
                    }
                ]
            },
            {
                "name": "ExposureConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureConfiguration",
                "description": "This class is deprecated. no longer used with Exposure Windows API.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttenuationScores()",
                        "return_type": "int[]",
                        "description": "Scores for attenuation buckets."
                    },
                    {
                        "name": "getAttenuationWeight()",
                        "return_type": "int",
                        "description": "Weight to apply to the attenuation score."
                    },
                    {
                        "name": "getDaysSinceLastExposureScores()",
                        "return_type": "int[]",
                        "description": "Scores for days since last exposure buckets."
                    },
                    {
                        "name": "getDaysSinceLastExposureWeight()",
                        "return_type": "int",
                        "description": "Weight to apply to the days since last exposure score."
                    },
                    {
                        "name": "getDurationAtAttenuationThresholds()",
                        "return_type": "int[]",
                        "description": "Attenuation thresholds to apply when calculating duration at attenuation."
                    },
                    {
                        "name": "getDurationScores()",
                        "return_type": "int[]",
                        "description": "Scores for duration buckets."
                    },
                    {
                        "name": "getDurationWeight()",
                        "return_type": "int",
                        "description": "Weight to apply to the duration score."
                    },
                    {
                        "name": "getMinimumRiskScore()",
                        "return_type": "int",
                        "description": "Minimum risk score."
                    },
                    {
                        "name": "getTransmissionRiskScores()",
                        "return_type": "int[]",
                        "description": "Scores for transmission risk buckets."
                    },
                    {
                        "name": "getTransmissionRiskWeight()",
                        "return_type": "int",
                        "description": "Weight to apply to the transmission risk score."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExposureConfiguration.ExposureConfigurationBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureConfiguration.ExposureConfigurationBuilder",
                "description": "A builder for ExposureConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureConfiguration",
                        "description": "Builds an instance of ExposureConfiguration."
                    },
                    {
                        "name": "setAttenuationScores(int... attenuationScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the attenuation scores."
                    },
                    {
                        "name": "setAttenuationWeight(int attenuationWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the attenuation weight."
                    },
                    {
                        "name": "setDaysSinceLastExposureScores(int... daysSinceLastExposureScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the days since last exposure scores."
                    },
                    {
                        "name": "setDaysSinceLastExposureWeight(int daysSinceLastExposureWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the days since last exposure weight."
                    },
                    {
                        "name": "setDurationAtAttenuationThresholds(int... durationAtAttenuationThresholds)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the duration at attenuation thresholds."
                    },
                    {
                        "name": "setDurationScores(int... durationScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the duration scores."
                    },
                    {
                        "name": "setDurationWeight(int durationWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the duration weight."
                    },
                    {
                        "name": "setMinimumRiskScore(int minimumRiskScore)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the minimum risk score."
                    },
                    {
                        "name": "setTransmissionRiskScores(int... transmissionRiskScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the transmission risk scores."
                    },
                    {
                        "name": "setTransmissionRiskWeight(int transmissionRiskWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the transmission risk weight."
                    }
                ]
            },
            {
                "name": "ExposureInformation",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureInformation",
                "description": "This class is deprecated. no longer used with Exposure Window API.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttenuationDurationsInMinutes()",
                        "return_type": "int[]",
                        "description": "Array of durations in minutes at certain radio signal attenuations."
                    },
                    {
                        "name": "getAttenuationValue()",
                        "return_type": "int",
                        "description": "The time-weighted signal strength attenuation value which goes into getTotalRiskScore("
                    },
                    {
                        "name": "getDateMillisSinceEpoch()",
                        "return_type": "long",
                        "description": "Day-level resolution that the exposure occurred, in milliseconds since epoch."
                    },
                    {
                        "name": "getDurationMinutes()",
                        "return_type": "int",
                        "description": "Length of exposure in 5 minute increments, with a 30 minute maximum."
                    },
                    {
                        "name": "getTotalRiskScore()",
                        "return_type": "int",
                        "description": "The total risk calculated for the exposure."
                    },
                    {
                        "name": "getTransmissionRiskLevel()",
                        "return_type": "int",
                        "description": "The transmission risk associated with the matched diagnosis key."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExposureInformation.ExposureInformationBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureInformation.ExposureInformationBuilder",
                "description": "A builder for ExposureInformation.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureInformation",
                        "description": "Builds an instance of ExposureInformation."
                    },
                    {
                        "name": "setAttenuationDurations(int[] attenuationDurations)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the attenuation durations."
                    },
                    {
                        "name": "setAttenuationValue(int attenuationValue)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the attenuation value."
                    },
                    {
                        "name": "setDateMillisSinceEpoch(long dateMillisSinceEpoch)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the date in milliseconds since epoch."
                    },
                    {
                        "name": "setDurationMinutes(int durationMinutes)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the duration in minutes."
                    },
                    {
                        "name": "setTotalRiskScore(int totalRiskScore)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the total risk score."
                    },
                    {
                        "name": "setTransmissionRiskLevel(int transmissionRiskLevel)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the transmission risk level."
                    }
                ]
            },
            {
                "name": "ExposureNotificationStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureNotificationStatusCodes",
                "description": "Status codes for nearby contact tracing results.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly!"
                    }
                ]
            },
            {
                "name": "ExposureSummary",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureSummary",
                "description": "This class is deprecated. no longer used with Exposure Window API.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttenuationDurationsInMinutes()",
                        "return_type": "int[]",
                        "description": "Array of durations in minutes at certain radio signal attenuations."
                    },
                    {
                        "name": "getDaysSinceLastExposure()",
                        "return_type": "int",
                        "description": "Days since last match to a diagnosis key from the server."
                    },
                    {
                        "name": "getMatchedKeyCount()",
                        "return_type": "int",
                        "description": "Number of matched diagnosis keys."
                    },
                    {
                        "name": "getMaximumRiskScore()",
                        "return_type": "int",
                        "description": "The highest risk score of all exposure incidents, it will be a value 0-4096."
                    },
                    {
                        "name": "getSummationRiskScore()",
                        "return_type": "int",
                        "description": "The summation of risk scores of all exposure incidents."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExposureSummary.ExposureSummaryBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureSummary.ExposureSummaryBuilder",
                "description": "A builder for ExposureSummary.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureSummary",
                        "description": "Builds an instance of ExposureSummary."
                    },
                    {
                        "name": "setAttenuationDurations(int[] attenuationDurations)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the attenuation durations."
                    },
                    {
                        "name": "setDaysSinceLastExposure(int daysSinceLastExposure)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the days since last exposure."
                    },
                    {
                        "name": "setMatchedKeyCount(int matchedKeyCount)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the matched key count."
                    },
                    {
                        "name": "setMaximumRiskScore(int maximumRiskScore)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the maximum risk score."
                    },
                    {
                        "name": "setSummationRiskScore(int summationRiskScore)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the summation risk score."
                    }
                ]
            },
            {
                "name": "ExposureWindow",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureWindow",
                "description": "A duration of up to 30 minutes during which beacons from a TEK were observed.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCalibrationConfidence()",
                        "return_type": "int",
                        "description": "Confidence of the BLE Transmit power calibration of the transmitting device."
                    },
                    {
                        "name": "getDateMillisSinceEpoch()",
                        "return_type": "long",
                        "description": "Returns the epoch time in milliseconds the exposure occurred."
                    },
                    {
                        "name": "getInfectiousness()",
                        "return_type": "int",
                        "description": "Infectiousness of the TEK that caused this exposure, computed from the days since onset of symptoms using the daysToInfectiousnessMapping."
                    },
                    {
                        "name": "getReportType()",
                        "return_type": "int",
                        "description": "Report Type of the TEK that caused this exposure TEKs with no report type set are returned with reportType=CONFIRMED_TEST."
                    },
                    {
                        "name": "getScanInstances()",
                        "return_type": "List<ScanInstance>",
                        "description": "Sightings of this ExposureWindow, time-ordered."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ExposureWindow.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureWindow.Builder",
                "description": "Builder for ExposureWindow.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureWindow",
                        "description": "Builds an instance of ExposureWindow."
                    },
                    {
                        "name": "setCalibrationConfidence(int calibrationConfidence)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the calibration confidence."
                    },
                    {
                        "name": "setDateMillisSinceEpoch(long dateMillisSinceEpoch)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the date in milliseconds since epoch."
                    },
                    {
                        "name": "setDeviceName(String deviceName)",
                        "return_type": "ExposureWindow.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfectiousness(int infectiousness)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the infectiousness."
                    },
                    {
                        "name": "setReportType(int reportType)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the report type."
                    },
                    {
                        "name": "setScanInstances(List<ScanInstance> scanInstances)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the scan instances."
                    }
                ]
            },
            {
                "name": "PackageConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/PackageConfiguration",
                "description": "Holds configuration values that can be passed onto the client app after it has finished installing via ExposureNotificationClient.getPackageConfiguration().",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getValues()",
                        "return_type": "Bundle",
                        "description": "Returns a Bundle containing all configuration options."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PackageConfiguration.PackageConfigurationBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/PackageConfiguration.PackageConfigurationBuilder",
                "description": "A builder for PackageConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PackageConfiguration",
                        "description": "Builds a PackageConfiguration."
                    },
                    {
                        "name": "setValues(Bundle values)",
                        "return_type": "PackageConfiguration.PackageConfigurationBuilder",
                        "description": "Sets a Bundle containing configuration options."
                    }
                ]
            },
            {
                "name": "ScanInstance",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ScanInstance",
                "description": "Information about the sighting of a TEK within a BLE scan (of a few seconds).",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getMinAttenuationDb()",
                        "return_type": "int",
                        "description": "Minimum attenuation of all of this TEK's beacons received during the scan, in dB."
                    },
                    {
                        "name": "getSecondsSinceLastScan()",
                        "return_type": "int",
                        "description": "Seconds elapsed since the previous scan, typically used as a weight."
                    },
                    {
                        "name": "getTypicalAttenuationDb()",
                        "return_type": "int",
                        "description": "Aggregation of the attenuations of all of this TEK's beacons received during the scan, in dB."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ScanInstance.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ScanInstance.Builder",
                "description": "Builder for ScanInstance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ScanInstance",
                        "description": "Builds a new instance of ScanInstance."
                    },
                    {
                        "name": "setMinAttenuationDb(int minAttenuationDb)",
                        "return_type": "ScanInstance.Builder",
                        "description": "Sets the minimum attenuation in db."
                    },
                    {
                        "name": "setSecondsSinceLastScan(int secondsSinceLastScan)",
                        "return_type": "ScanInstance.Builder",
                        "description": "Sets the seconds since las scan."
                    },
                    {
                        "name": "setTypicalAttenuationDb(int typicalAttenuationDb)",
                        "return_type": "ScanInstance.Builder",
                        "description": "Sets the typical attenuation in db."
                    }
                ]
            },
            {
                "name": "TemporaryExposureKey",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/TemporaryExposureKey",
                "description": "A key generated for advertising over a window of time.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDaysSinceOnsetOfSymptoms()",
                        "return_type": "int",
                        "description": "Number of days elapsed between symptom onset and the key being used."
                    },
                    {
                        "name": "getKeyData()",
                        "return_type": "byte[]",
                        "description": "The randomly generated Temporary Exposure Key information."
                    },
                    {
                        "name": "getReportType()",
                        "return_type": "int",
                        "description": "Type of diagnosis associated with a key."
                    },
                    {
                        "name": "getRollingPeriod()",
                        "return_type": "int",
                        "description": "A number describing how long a key is valid."
                    },
                    {
                        "name": "getRollingStartIntervalNumber()",
                        "return_type": "int",
                        "description": "A number describing when a key starts."
                    },
                    {
                        "name": "getTransmissionRiskLevel()",
                        "return_type": "int",
                        "description": "Risk of transmission associated with the person this key came from."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/TemporaryExposureKey.TemporaryExposureKeyBuilder",
                "description": "A builder for TemporaryExposureKey.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TemporaryExposureKey",
                        "description": "Builds an instance of TemporaryExposureKey."
                    },
                    {
                        "name": "setDaysSinceOnsetOfSymptoms(int daysSinceOnsetOfSymptoms)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the number of days since the onset of symptoms."
                    },
                    {
                        "name": "setKeyData(byte[] keyData)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the Temporary Exposure Key data."
                    },
                    {
                        "name": "setReportType(int reportType)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the key's report type."
                    },
                    {
                        "name": "setRollingPeriod(int rollingPeriod)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the rolling period which this key is valid for."
                    },
                    {
                        "name": "setRollingStartIntervalNumber(int rollingStartIntervalNumber)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the rolling start interval number."
                    },
                    {
                        "name": "setTransmissionRiskLevel(int transmissionRiskLevel)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the transmission risk level."
                    }
                ]
            },
            {
                "name": "ExposureNotificationClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureNotificationClient",
                "description": "Interface for contact tracing APIs.",
                "methods": [
                    {
                        "name": "deviceSupportsLocationlessScanning()",
                        "return_type": "abstract boolean",
                        "description": "Checks whether the device supports Exposure Notification BLE scanning without requiring location to be enabled first."
                    },
                    {
                        "name": "getCalibrationConfidence()",
                        "return_type": "abstract Task<Integer>",
                        "description": "Gets CalibrationConfidence of the current device."
                    },
                    {
                        "name": "getDailySummaries(DailySummariesConfig dailySummariesConfig)",
                        "return_type": "abstract Task<List<DailySummary>>",
                        "description": "Retrieves the per-day exposure summaries associated with the provided configuration."
                    },
                    {
                        "name": "getDiagnosisKeysDataMapping()",
                        "return_type": "abstract Task<DiagnosisKeysDataMapping>",
                        "description": "Retrieves the current DiagnosisKeysDataMapping."
                    },
                    {
                        "name": "getExposureInformation(String token)",
                        "return_type": "abstract Task<List<ExposureInformation>>",
                        "description": "This method is deprecated. When using the ExposureWindow API, use getExposureWindows("
                    },
                    {
                        "name": "getExposureSummary(String token)",
                        "return_type": "abstract Task<ExposureSummary>",
                        "description": "This method is deprecated. When using the ExposureWindow API, use getDailySummaries(DailySummariesConfig"
                    },
                    {
                        "name": "getExposureWindows()",
                        "return_type": "abstract Task<List<ExposureWindow>>",
                        "description": "Retrieves the list of exposure windows corresponding to the TEKs given to provideDiagnosisKeys(DiagnosisKeyFileProvider"
                    },
                    {
                        "name": "getExposureWindows(String token)",
                        "return_type": "abstract Task<List<ExposureWindow>>",
                        "description": "This method is deprecated. Tokens are no longer used. Instead, prefer using the tokenless version of getExposureWindows("
                    },
                    {
                        "name": "getPackageConfiguration()",
                        "return_type": "abstract Task<PackageConfiguration>",
                        "description": "Retrieves the associated PackageConfiguration for the calling package."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "abstract Task<Set<ExposureNotificationStatus>>",
                        "description": "Gets the current Exposure Notification status."
                    },
                    {
                        "name": "getTemporaryExposureKeyHistory()",
                        "return_type": "abstract Task<List<TemporaryExposureKey>>",
                        "description": "Gets TemporaryExposureKey history to be stored on the server."
                    },
                    {
                        "name": "getVersion()",
                        "return_type": "abstract Task<Long>",
                        "description": "Gets the current Exposure Notification version."
                    },
                    {
                        "name": "isEnabled()",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Indicates whether contact tracing is currently running for the requesting app."
                    },
                    {
                        "name": "provideDiagnosisKeys(List<File> keyFiles)",
                        "return_type": "abstract Task<Void>",
                        "description": "Provides a list of diagnosis key files for exposure checking."
                    },
                    {
                        "name": "provideDiagnosisKeys(DiagnosisKeyFileProvider provider)",
                        "return_type": "abstract Task<Void>",
                        "description": "Provides diagnosis key files for exposure checking."
                    },
                    {
                        "name": "provideDiagnosisKeys(List<File> keyFiles, ExposureConfiguration configuration, String token)",
                        "return_type": "abstract Task<Void>",
                        "description": "This method is deprecated. Tokens and configuration are no longer used. Instead, prefer using the tokenless, configuration-less version of provideDiagnosisKeys(DiagnosisKeyFileProvider"
                    },
                    {
                        "name": "requestPreAuthorizedTemporaryExposureKeyHistory()",
                        "return_type": "abstract Task<Void>",
                        "description": "Shows a dialog to the user asking for authorization to get TemporaryExposureKeys in the background."
                    },
                    {
                        "name": "requestPreAuthorizedTemporaryExposureKeyRelease()",
                        "return_type": "abstract Task<Void>",
                        "description": "If consent has previously been requested and granted by the user using requestPreAuthorizedTemporaryExposureKeyHistory("
                    },
                    {
                        "name": "setDiagnosisKeysDataMapping(DiagnosisKeysDataMapping diagnosisKeysMetadataMapping)",
                        "return_type": "abstract Task<Void>",
                        "description": "Sets the diagnosis keys data mapping if it wasn't already changed recently."
                    },
                    {
                        "name": "start()",
                        "return_type": "abstract Task<Void>",
                        "description": "Starts BLE broadcasts and scanning based on the defined protocol."
                    },
                    {
                        "name": "stop()",
                        "return_type": "abstract Task<Void>",
                        "description": "Disables advertising and scanning."
                    }
                ]
            },
            {
                "name": "DailySummariesConfig.DailySummariesConfigBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DailySummariesConfig.DailySummariesConfigBuilder",
                "description": "A builder for DailySummariesConfig.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DailySummariesConfig",
                        "description": "Builds an instance of DailySummariesConfig."
                    },
                    {
                        "name": "setAttenuationBuckets(List<Integer> thresholds, List<Double> weights)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getAttenuationBucketThresholdDb("
                    },
                    {
                        "name": "setDaysSinceExposureThreshold(int daysSinceExposureThreshold)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getDaysSinceExposureThreshold("
                    },
                    {
                        "name": "setInfectiousnessWeight(int infectiousness, double weight)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getInfectiousnessWeights("
                    },
                    {
                        "name": "setMinimumWindowScore(double minimumWindowScore)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getMinimumWindowScore("
                    },
                    {
                        "name": "setReportTypeWeight(int reportType, double weight)",
                        "return_type": "DailySummariesConfig.DailySummariesConfigBuilder",
                        "description": "See DailySummariesConfig.getReportTypeWeights("
                    }
                ]
            },
            {
                "name": "DailySummary.ExposureSummaryData",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DailySummary.ExposureSummaryData",
                "description": "Stores different scores for specific ReportType.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getMaximumScore()",
                        "return_type": "double",
                        "description": "Highest score of all ExposureWindows aggregated into this summary."
                    },
                    {
                        "name": "getScoreSum()",
                        "return_type": "double",
                        "description": "Sum of scores for all ExposureWindows aggregated into this summary."
                    },
                    {
                        "name": "getWeightedDurationSum()",
                        "return_type": "double",
                        "description": "Sum of weighted durations for all ExposureWindows aggregated into this summary."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                "description": "A builder for DiagnosisKeysDataMapping.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DiagnosisKeysDataMapping",
                        "description": "Builds an instance of DiagnosisKeysDataMapping."
                    },
                    {
                        "name": "setDaysSinceOnsetToInfectiousness(Map<Integer, Integer> daysSinceOnsetToInfectiousness)",
                        "return_type": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                        "description": "Sets the days since onset to infectiousness."
                    },
                    {
                        "name": "setInfectiousnessWhenDaysSinceOnsetMissing(int infectiousnessWhenDaysSinceOnsetMissing)",
                        "return_type": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                        "description": "Sets the infectiousness when days since onset missing."
                    },
                    {
                        "name": "setReportTypeWhenMissing(int reportTypeWhenMissing)",
                        "return_type": "DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder",
                        "description": "Sets the report type when missing."
                    }
                ]
            },
            {
                "name": "ExposureConfiguration.ExposureConfigurationBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureConfiguration.ExposureConfigurationBuilder",
                "description": "A builder for ExposureConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureConfiguration",
                        "description": "Builds an instance of ExposureConfiguration."
                    },
                    {
                        "name": "setAttenuationScores(int... attenuationScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the attenuation scores."
                    },
                    {
                        "name": "setAttenuationWeight(int attenuationWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the attenuation weight."
                    },
                    {
                        "name": "setDaysSinceLastExposureScores(int... daysSinceLastExposureScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the days since last exposure scores."
                    },
                    {
                        "name": "setDaysSinceLastExposureWeight(int daysSinceLastExposureWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the days since last exposure weight."
                    },
                    {
                        "name": "setDurationAtAttenuationThresholds(int... durationAtAttenuationThresholds)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the duration at attenuation thresholds."
                    },
                    {
                        "name": "setDurationScores(int... durationScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the duration scores."
                    },
                    {
                        "name": "setDurationWeight(int durationWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the duration weight."
                    },
                    {
                        "name": "setMinimumRiskScore(int minimumRiskScore)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the minimum risk score."
                    },
                    {
                        "name": "setTransmissionRiskScores(int... transmissionRiskScores)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the transmission risk scores."
                    },
                    {
                        "name": "setTransmissionRiskWeight(int transmissionRiskWeight)",
                        "return_type": "ExposureConfiguration.ExposureConfigurationBuilder",
                        "description": "Sets the transmission risk weight."
                    }
                ]
            },
            {
                "name": "ExposureInformation.ExposureInformationBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureInformation.ExposureInformationBuilder",
                "description": "A builder for ExposureInformation.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureInformation",
                        "description": "Builds an instance of ExposureInformation."
                    },
                    {
                        "name": "setAttenuationDurations(int[] attenuationDurations)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the attenuation durations."
                    },
                    {
                        "name": "setAttenuationValue(int attenuationValue)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the attenuation value."
                    },
                    {
                        "name": "setDateMillisSinceEpoch(long dateMillisSinceEpoch)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the date in milliseconds since epoch."
                    },
                    {
                        "name": "setDurationMinutes(int durationMinutes)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the duration in minutes."
                    },
                    {
                        "name": "setTotalRiskScore(int totalRiskScore)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the total risk score."
                    },
                    {
                        "name": "setTransmissionRiskLevel(int transmissionRiskLevel)",
                        "return_type": "ExposureInformation.ExposureInformationBuilder",
                        "description": "Sets the transmission risk level."
                    }
                ]
            },
            {
                "name": "ExposureSummary.ExposureSummaryBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureSummary.ExposureSummaryBuilder",
                "description": "A builder for ExposureSummary.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureSummary",
                        "description": "Builds an instance of ExposureSummary."
                    },
                    {
                        "name": "setAttenuationDurations(int[] attenuationDurations)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the attenuation durations."
                    },
                    {
                        "name": "setDaysSinceLastExposure(int daysSinceLastExposure)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the days since last exposure."
                    },
                    {
                        "name": "setMatchedKeyCount(int matchedKeyCount)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the matched key count."
                    },
                    {
                        "name": "setMaximumRiskScore(int maximumRiskScore)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the maximum risk score."
                    },
                    {
                        "name": "setSummationRiskScore(int summationRiskScore)",
                        "return_type": "ExposureSummary.ExposureSummaryBuilder",
                        "description": "Sets the summation risk score."
                    }
                ]
            },
            {
                "name": "ExposureWindow.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ExposureWindow.Builder",
                "description": "Builder for ExposureWindow.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ExposureWindow",
                        "description": "Builds an instance of ExposureWindow."
                    },
                    {
                        "name": "setCalibrationConfidence(int calibrationConfidence)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the calibration confidence."
                    },
                    {
                        "name": "setDateMillisSinceEpoch(long dateMillisSinceEpoch)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the date in milliseconds since epoch."
                    },
                    {
                        "name": "setDeviceName(String deviceName)",
                        "return_type": "ExposureWindow.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfectiousness(int infectiousness)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the infectiousness."
                    },
                    {
                        "name": "setReportType(int reportType)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the report type."
                    },
                    {
                        "name": "setScanInstances(List<ScanInstance> scanInstances)",
                        "return_type": "ExposureWindow.Builder",
                        "description": "Sets the scan instances."
                    }
                ]
            },
            {
                "name": "PackageConfiguration.PackageConfigurationBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/PackageConfiguration.PackageConfigurationBuilder",
                "description": "A builder for PackageConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PackageConfiguration",
                        "description": "Builds a PackageConfiguration."
                    },
                    {
                        "name": "setValues(Bundle values)",
                        "return_type": "PackageConfiguration.PackageConfigurationBuilder",
                        "description": "Sets a Bundle containing configuration options."
                    }
                ]
            },
            {
                "name": "ScanInstance.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/ScanInstance.Builder",
                "description": "Builder for ScanInstance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ScanInstance",
                        "description": "Builds a new instance of ScanInstance."
                    },
                    {
                        "name": "setMinAttenuationDb(int minAttenuationDb)",
                        "return_type": "ScanInstance.Builder",
                        "description": "Sets the minimum attenuation in db."
                    },
                    {
                        "name": "setSecondsSinceLastScan(int secondsSinceLastScan)",
                        "return_type": "ScanInstance.Builder",
                        "description": "Sets the seconds since las scan."
                    },
                    {
                        "name": "setTypicalAttenuationDb(int typicalAttenuationDb)",
                        "return_type": "ScanInstance.Builder",
                        "description": "Sets the typical attenuation in db."
                    }
                ]
            },
            {
                "name": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/exposurenotification/TemporaryExposureKey.TemporaryExposureKeyBuilder",
                "description": "A builder for TemporaryExposureKey.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TemporaryExposureKey",
                        "description": "Builds an instance of TemporaryExposureKey."
                    },
                    {
                        "name": "setDaysSinceOnsetOfSymptoms(int daysSinceOnsetOfSymptoms)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the number of days since the onset of symptoms."
                    },
                    {
                        "name": "setKeyData(byte[] keyData)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the Temporary Exposure Key data."
                    },
                    {
                        "name": "setReportType(int reportType)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the key's report type."
                    },
                    {
                        "name": "setRollingPeriod(int rollingPeriod)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the rolling period which this key is valid for."
                    },
                    {
                        "name": "setRollingStartIntervalNumber(int rollingStartIntervalNumber)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the rolling start interval number."
                    },
                    {
                        "name": "setTransmissionRiskLevel(int transmissionRiskLevel)",
                        "return_type": "TemporaryExposureKey.TemporaryExposureKeyBuilder",
                        "description": "Sets the transmission risk level."
                    }
                ]
            }
        ]
    },
    {
        "name": "messages",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/nearby/messages/package-summary",
        "classes": [
            {
                "name": "EddystoneUid",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/EddystoneUid",
                "description": "An Eddystone UID, broadcast by BLE beacons.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "from(Message message)",
                        "return_type": "staticEddystoneUid",
                        "description": "Converts a Message of type Message.MESSAGE_TYPE_EDDYSTONE_UID to an EddystoneUid."
                    },
                    {
                        "name": "getHex()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getInstance()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getNamespace()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IBeaconId",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/IBeaconId",
                "description": "An iBeacon ID, which can be broadcast by BLE beacons and iOS devices.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "from(Message message)",
                        "return_type": "staticIBeaconId",
                        "description": "Converts a Message of type Message.MESSAGE_TYPE_I_BEACON_ID to an IBeaconId."
                    },
                    {
                        "name": "getMajor()",
                        "return_type": "short",
                        "description": ""
                    },
                    {
                        "name": "getMinor()",
                        "return_type": "short",
                        "description": ""
                    },
                    {
                        "name": "getProximityUuid()",
                        "return_type": "UUID",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Message",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/Message",
                "description": "A message that will be shared with nearby devices.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": "Message objects are equal if the namespace, type, and content are equal."
                    },
                    {
                        "name": "getContent()",
                        "return_type": "byte[]",
                        "description": "Returns the raw bytes content of the message."
                    },
                    {
                        "name": "getNamespace()",
                        "return_type": "String",
                        "description": "Returns the non-empty string for a public namespace or empty for the private one."
                    },
                    {
                        "name": "getType()",
                        "return_type": "String",
                        "description": "Returns the type that describes the content of the message."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MessageFilter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessageFilter",
                "description": "Used to specify the set of messages to be received.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MessageFilter.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessageFilter.Builder",
                "description": "Builder for MessageFilter.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MessageFilter",
                        "description": "Builds an instance of MessageFilter."
                    },
                    {
                        "name": "includeAllMyTypes()",
                        "return_type": "MessageFilter.Builder",
                        "description": "Filters for all messages published by this application (and any other applications in the same Google Developers Console project"
                    },
                    {
                        "name": "includeAudioBytes(int numAudioBytes)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes raw audio byte messages."
                    },
                    {
                        "name": "includeEddystoneUids(String hexNamespace, String hexInstance)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes Eddystone UIDs."
                    },
                    {
                        "name": "includeFilter(MessageFilter filter)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes the previously constructed filter."
                    },
                    {
                        "name": "includeIBeaconIds(UUID proximityUuid, Short major, Short minor)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes iBeacon IDs."
                    },
                    {
                        "name": "includeNamespacedType(String namespace, String type)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Filters for all messages in the given namespace with the given type."
                    }
                ]
            },
            {
                "name": "MessageListener",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessageListener",
                "description": "A listener for receiving subscribed messages.",
                "methods": [
                    {
                        "name": "onBleSignalChanged(Message message, BleSignal bleSignal)",
                        "return_type": "void",
                        "description": "Called when the Bluetooth Low Energy (BLE"
                    },
                    {
                        "name": "onDistanceChanged(Message message, Distance distance)",
                        "return_type": "void",
                        "description": "Called when Nearby's estimate of the distance to a message changes."
                    },
                    {
                        "name": "onFound(Message message)",
                        "return_type": "void",
                        "description": "Called when messages are found."
                    },
                    {
                        "name": "onLost(Message message)",
                        "return_type": "void",
                        "description": "Called when a message is no longer detectable nearby."
                    }
                ]
            },
            {
                "name": "MessagesOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessagesOptions",
                "description": "Configuration parameters for the Messages API.",
                "methods": []
            },
            {
                "name": "MessagesOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessagesOptions.Builder",
                "description": "Builder for MessagesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MessagesOptions",
                        "description": "Builds the MessagesOptions."
                    },
                    {
                        "name": "setPermissions(int permissions)",
                        "return_type": "MessagesOptions.Builder",
                        "description": "Sets which NearbyPermissions are requested for Nearby."
                    }
                ]
            },
            {
                "name": "NearbyMessagesStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/NearbyMessagesStatusCodes",
                "description": "Nearby.Messages specific status codes, for use in Status.getStatusCode().",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublishCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/PublishCallback",
                "description": "Callback for events which affect published messages.",
                "methods": [
                    {
                        "name": "onExpired()",
                        "return_type": "void",
                        "description": "The published message is expired."
                    }
                ]
            },
            {
                "name": "PublishOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/PublishOptions",
                "description": "Options for calls to Messages.publish(GoogleApiClient, Message).",
                "methods": [
                    {
                        "name": "getCallback()",
                        "return_type": "PublishCallback",
                        "description": "Gets the publishing callback."
                    },
                    {
                        "name": "getStrategy()",
                        "return_type": "Strategy",
                        "description": "Gets the publishing strategy."
                    }
                ]
            },
            {
                "name": "PublishOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/PublishOptions.Builder",
                "description": "Builder for instances of PublishOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublishOptions",
                        "description": "Builds an instance of PublishOptions."
                    },
                    {
                        "name": "setCallback(PublishCallback callback)",
                        "return_type": "PublishOptions.Builder",
                        "description": "Sets a callback which will be notified when significant events occur that affect this publish."
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "PublishOptions.Builder",
                        "description": "Sets the strategy for publishing."
                    }
                ]
            },
            {
                "name": "StatusCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/StatusCallback",
                "description": "Callbacks for global status changes that affect a client of Nearby Messages.",
                "methods": [
                    {
                        "name": "onPermissionChanged(boolean permissionGranted)",
                        "return_type": "void",
                        "description": "Called when permission is granted or revoked for this app to use Nearby."
                    }
                ]
            },
            {
                "name": "Strategy",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/Strategy",
                "description": "Describes a set of strategies for publishing or subscribing for nearby messages.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Strategy.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/Strategy.Builder",
                "description": "Builder for Strategy.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Strategy",
                        "description": "Builds an instance of Strategy."
                    },
                    {
                        "name": "setDiscoveryMode(int discoveryMode)",
                        "return_type": "Strategy.Builder",
                        "description": "Sets the desired discovery mode that determines how devices will detect each other."
                    },
                    {
                        "name": "setDistanceType(int distanceType)",
                        "return_type": "Strategy.Builder",
                        "description": "If used with a publish, the published message will only be delivered to subscribing devices that are at most the specified distance from this device."
                    },
                    {
                        "name": "setTtlSeconds(int ttlSeconds)",
                        "return_type": "Strategy.Builder",
                        "description": "Sets the time to live in seconds for the publish or subscribe."
                    }
                ]
            },
            {
                "name": "SubscribeCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/SubscribeCallback",
                "description": "Callback for events which affect subscriptions.",
                "methods": [
                    {
                        "name": "onExpired()",
                        "return_type": "void",
                        "description": "The subscription is expired."
                    }
                ]
            },
            {
                "name": "SubscribeOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/SubscribeOptions",
                "description": "Options for calls to Messages.subscribe(GoogleApiClient, PendingIntent).",
                "methods": [
                    {
                        "name": "getCallback()",
                        "return_type": "SubscribeCallback",
                        "description": "Gets the subscription callback."
                    },
                    {
                        "name": "getFilter()",
                        "return_type": "MessageFilter",
                        "description": "Gets the subscription filter."
                    },
                    {
                        "name": "getStrategy()",
                        "return_type": "Strategy",
                        "description": "Gets the subscription strategy."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SubscribeOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/SubscribeOptions.Builder",
                "description": "Builder for instances of SubscribeOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SubscribeOptions",
                        "description": "Builds an instance of SubscribeOptions."
                    },
                    {
                        "name": "setCallback(SubscribeCallback callback)",
                        "return_type": "SubscribeOptions.Builder",
                        "description": "Sets a callback which will be notified when significant events occur that affect this subscription."
                    },
                    {
                        "name": "setFilter(MessageFilter filter)",
                        "return_type": "SubscribeOptions.Builder",
                        "description": "Sets a filter to specify which messages to receive."
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "SubscribeOptions.Builder",
                        "description": "Sets a strategy for subscribing."
                    }
                ]
            },
            {
                "name": "BleSignal",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/messages/BleSignal",
                "description": "Represents properties of the BLE signal associated with a Message.",
                "methods": [
                    {
                        "name": "getRssi()",
                        "return_type": "abstract int",
                        "description": "Returns the received signal strength indicator (RSSI"
                    },
                    {
                        "name": "getTxPower()",
                        "return_type": "abstract int",
                        "description": "Returns the transmission power level at 1 meter, in dBm."
                    }
                ]
            },
            {
                "name": "Distance",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/messages/Distance",
                "description": "Represents the distance to a Message.",
                "methods": [
                    {
                        "name": "compareTo(Distance other)",
                        "return_type": "abstract int",
                        "description": "Note: This compares only getMeters("
                    },
                    {
                        "name": "getAccuracy()",
                        "return_type": "abstract int",
                        "description": "The accuracy of the distance estimate."
                    },
                    {
                        "name": "getMeters()",
                        "return_type": "abstract double",
                        "description": "The distance estimate, in meters."
                    }
                ]
            },
            {
                "name": "Messages",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/messages/Messages",
                "description": "This interface is deprecated. Use MessagesClient.",
                "methods": [
                    {
                        "name": "getPermissionStatus(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. This call will always succeed now that permission status is handled at connection time."
                    },
                    {
                        "name": "handleIntent(Intent intent, MessageListener messageListener)",
                        "return_type": "abstract void",
                        "description": "Extracts information from an Intent sent as a subscription callback, and calls the corresponding methods on the given MessageListener."
                    },
                    {
                        "name": "publish(GoogleApiClient client, Message message)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Publishes a message so that it is visible to nearby devices, using the default options from PublishOptions.DEFAULT."
                    },
                    {
                        "name": "publish(GoogleApiClient client, Message message, PublishOptions options)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Publishes a message so that it is visible to nearby devices."
                    },
                    {
                        "name": "registerStatusCallback(GoogleApiClient client, StatusCallback statusCallback)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a status callback, which will be notified when significant events occur that affect Nearby for your app."
                    },
                    {
                        "name": "subscribe(GoogleApiClient client, PendingIntent pendingIntent, SubscribeOptions options)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Note: Currently, this method only finds messages attached to BLE beacons."
                    },
                    {
                        "name": "subscribe(GoogleApiClient client, MessageListener listener, SubscribeOptions options)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Subscribes for published messages from nearby devices."
                    },
                    {
                        "name": "subscribe(GoogleApiClient client, MessageListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Subscribes for published messages from nearby devices, using the default options in SubscribeOptions.DEFAULT."
                    },
                    {
                        "name": "subscribe(GoogleApiClient client, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Note: Currently, this method only finds messages attached to BLE beacons."
                    },
                    {
                        "name": "unpublish(GoogleApiClient client, Message message)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Cancels an existing published message."
                    },
                    {
                        "name": "unregisterStatusCallback(GoogleApiClient client, StatusCallback statusCallback)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Unregisters a status callback previously registered with registerStatusCallback(GoogleApiClient, StatusCallback"
                    },
                    {
                        "name": "unsubscribe(GoogleApiClient client, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Cancels an existing subscription."
                    },
                    {
                        "name": "unsubscribe(GoogleApiClient client, MessageListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Cancels an existing subscription."
                    }
                ]
            },
            {
                "name": "MessagesClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessagesClient",
                "description": "API which allows your app to publish simple messages and subscribe to receive those messages from nearby devices.",
                "methods": [
                    {
                        "name": "handleIntent(Intent intent, MessageListener messageListener)",
                        "return_type": "abstract void",
                        "description": "Extracts information from an Intent sent as a subscription callback, and calls the corresponding methods on the given MessageListener."
                    },
                    {
                        "name": "publish(Message message)",
                        "return_type": "abstract Task<Void>",
                        "description": "Publishes a message so that it is visible to nearby devices, using the default options from PublishOptions.DEFAULT."
                    },
                    {
                        "name": "publish(Message message, PublishOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Publishes a message so that it is visible to nearby devices."
                    },
                    {
                        "name": "registerStatusCallback(StatusCallback statusCallback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a status callback, which will be notified when significant events occur that affect Nearby for your app."
                    },
                    {
                        "name": "subscribe(MessageListener listener, SubscribeOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Subscribes for published messages from nearby devices."
                    },
                    {
                        "name": "subscribe(MessageListener listener)",
                        "return_type": "abstract Task<Void>",
                        "description": "Subscribes for published messages from nearby devices, using the default options in SubscribeOptions.DEFAULT."
                    },
                    {
                        "name": "subscribe(PendingIntent pendingIntent, SubscribeOptions options)",
                        "return_type": "abstract Task<Void>",
                        "description": "Note: Currently, this method only finds messages attached to BLE beacons."
                    },
                    {
                        "name": "subscribe(PendingIntent pendingIntent)",
                        "return_type": "abstract Task<Void>",
                        "description": "Note: Currently, this method only finds messages attached to BLE beacons."
                    },
                    {
                        "name": "unpublish(Message message)",
                        "return_type": "abstract Task<Void>",
                        "description": "Cancels an existing published message."
                    },
                    {
                        "name": "unregisterStatusCallback(StatusCallback statusCallback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Unregisters a status callback previously registered with registerStatusCallback(StatusCallback"
                    },
                    {
                        "name": "unsubscribe(MessageListener listener)",
                        "return_type": "abstract Task<Void>",
                        "description": "Cancels an existing subscription."
                    },
                    {
                        "name": "unsubscribe(PendingIntent pendingIntent)",
                        "return_type": "abstract Task<Void>",
                        "description": "Cancels an existing subscription."
                    }
                ]
            },
            {
                "name": "MessageFilter.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessageFilter.Builder",
                "description": "Builder for MessageFilter.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MessageFilter",
                        "description": "Builds an instance of MessageFilter."
                    },
                    {
                        "name": "includeAllMyTypes()",
                        "return_type": "MessageFilter.Builder",
                        "description": "Filters for all messages published by this application (and any other applications in the same Google Developers Console project"
                    },
                    {
                        "name": "includeAudioBytes(int numAudioBytes)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes raw audio byte messages."
                    },
                    {
                        "name": "includeEddystoneUids(String hexNamespace, String hexInstance)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes Eddystone UIDs."
                    },
                    {
                        "name": "includeFilter(MessageFilter filter)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes the previously constructed filter."
                    },
                    {
                        "name": "includeIBeaconIds(UUID proximityUuid, Short major, Short minor)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Includes iBeacon IDs."
                    },
                    {
                        "name": "includeNamespacedType(String namespace, String type)",
                        "return_type": "MessageFilter.Builder",
                        "description": "Filters for all messages in the given namespace with the given type."
                    }
                ]
            },
            {
                "name": "MessagesOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/messages/MessagesOptions.Builder",
                "description": "Builder for MessagesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MessagesOptions",
                        "description": "Builds the MessagesOptions."
                    },
                    {
                        "name": "setPermissions(int permissions)",
                        "return_type": "MessagesOptions.Builder",
                        "description": "Sets which NearbyPermissions are requested for Nearby."
                    }
                ]
            },
            {
                "name": "PublishOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/messages/PublishOptions.Builder",
                "description": "Builder for instances of PublishOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublishOptions",
                        "description": "Builds an instance of PublishOptions."
                    },
                    {
                        "name": "setCallback(PublishCallback callback)",
                        "return_type": "PublishOptions.Builder",
                        "description": "Sets a callback which will be notified when significant events occur that affect this publish."
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "PublishOptions.Builder",
                        "description": "Sets the strategy for publishing."
                    }
                ]
            },
            {
                "name": "Strategy.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/messages/Strategy.Builder",
                "description": "Builder for Strategy.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Strategy",
                        "description": "Builds an instance of Strategy."
                    },
                    {
                        "name": "setDiscoveryMode(int discoveryMode)",
                        "return_type": "Strategy.Builder",
                        "description": "Sets the desired discovery mode that determines how devices will detect each other."
                    },
                    {
                        "name": "setDistanceType(int distanceType)",
                        "return_type": "Strategy.Builder",
                        "description": "If used with a publish, the published message will only be delivered to subscribing devices that are at most the specified distance from this device."
                    },
                    {
                        "name": "setTtlSeconds(int ttlSeconds)",
                        "return_type": "Strategy.Builder",
                        "description": "Sets the time to live in seconds for the publish or subscribe."
                    }
                ]
            },
            {
                "name": "SubscribeOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/nearby/messages/SubscribeOptions.Builder",
                "description": "Builder for instances of SubscribeOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SubscribeOptions",
                        "description": "Builds an instance of SubscribeOptions."
                    },
                    {
                        "name": "setCallback(SubscribeCallback callback)",
                        "return_type": "SubscribeOptions.Builder",
                        "description": "Sets a callback which will be notified when significant events occur that affect this subscription."
                    },
                    {
                        "name": "setFilter(MessageFilter filter)",
                        "return_type": "SubscribeOptions.Builder",
                        "description": "Sets a filter to specify which messages to receive."
                    },
                    {
                        "name": "setStrategy(Strategy strategy)",
                        "return_type": "SubscribeOptions.Builder",
                        "description": "Sets a strategy for subscribing."
                    }
                ]
            }
        ]
    },
    {
        "name": "result",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fitness/result/package-summary",
        "classes": [
            {
                "name": "BleDevicesResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/BleDevicesResult",
                "description": "This class is deprecated. Use BluetoothManager directly.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getClaimedBleDevices(DataType dataType)",
                        "return_type": "List<BleDevice>",
                        "description": "Returns all found claimed BLE devices for the given dataType"
                    },
                    {
                        "name": "getClaimedBleDevices()",
                        "return_type": "List<BleDevice>",
                        "description": "Returns all of the found claimed BLE devices."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DailyTotalResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/DailyTotalResult",
                "description": "Result of readDailyTotal(com.google.android.gms.common.api.GoogleApiClient, DataType).",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "getTotal()",
                        "return_type": "DataSet",
                        "description": "Returns the resulting data set containing the daily total for the requested data type."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataReadResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/DataReadResponse",
                "description": "Result of readData(com.google.android.gms.fitness.request.DataReadRequest).",
                "methods": [
                    {
                        "name": "getBuckets()",
                        "return_type": "List<Bucket>",
                        "description": "Returns all of the Buckets with aggregated data."
                    },
                    {
                        "name": "getDataSet(DataType dataType)",
                        "return_type": "DataSet",
                        "description": "Returns the resulting data set for the given dataType."
                    },
                    {
                        "name": "getDataSet(DataSource dataSource)",
                        "return_type": "DataSet",
                        "description": "Returns the resulting data set for the given dataSource."
                    },
                    {
                        "name": "getDataSets()",
                        "return_type": "List<DataSet>",
                        "description": "Returns all of the data sets in the result."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataReadResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/DataReadResult",
                "description": "Result of readData(GoogleApiClient, com.google.android.gms.fitness.request.DataReadRequest).",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getBuckets()",
                        "return_type": "List<Bucket>",
                        "description": "Returns all of the Buckets with aggregated data."
                    },
                    {
                        "name": "getDataSet(DataType dataType)",
                        "return_type": "DataSet",
                        "description": "Returns the resulting data set for the given dataType."
                    },
                    {
                        "name": "getDataSet(DataSource dataSource)",
                        "return_type": "DataSet",
                        "description": "Returns the resulting data set for the given dataSource."
                    },
                    {
                        "name": "getDataSets()",
                        "return_type": "List<DataSet>",
                        "description": "Returns all of the data sets in the result."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataSourcesResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/DataSourcesResult",
                "description": "Result of findDataSources(GoogleApiClient, com.google.android.gms.fitness.request.DataSourcesRequest).",
                "methods": [
                    {
                        "name": "equals(Object that)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSources()",
                        "return_type": "List<DataSource>",
                        "description": "Returns all of the found data sources."
                    },
                    {
                        "name": "getDataSources(DataType dataType)",
                        "return_type": "List<DataSource>",
                        "description": "Returns all of the found data sources for the given dataType"
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataTypeResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/DataTypeResult",
                "description": "This class is deprecated. No replacement.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the new custom data type inserted, or null if the request failed."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoalsResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/GoalsResult",
                "description": "This class is deprecated. No replacement.",
                "methods": [
                    {
                        "name": "getGoals()",
                        "return_type": "List<Goal>",
                        "description": "Returns all current goals that matched the request."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ListSubscriptionsResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/ListSubscriptionsResult",
                "description": "This class is deprecated. No replacement.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "getSubscriptions(DataType dataType)",
                        "return_type": "List<Subscription>",
                        "description": "Returns all of the found subscriptions for the given dataType"
                    },
                    {
                        "name": "getSubscriptions()",
                        "return_type": "List<Subscription>",
                        "description": "Returns all of the found subscriptions."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SessionReadResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/SessionReadResponse",
                "description": "Result of readSession(com.google.android.gms.fitness.request.SessionReadRequest).",
                "methods": [
                    {
                        "name": "getDataSet(Session session, DataType dataType)",
                        "return_type": "List<DataSet>",
                        "description": "Returns the data sets for a given session and dataType."
                    },
                    {
                        "name": "getDataSet(Session session)",
                        "return_type": "List<DataSet>",
                        "description": "Returns the data sets for all data sources for a given session."
                    },
                    {
                        "name": "getSessions()",
                        "return_type": "List<Session>",
                        "description": "Returns all sessions that matched the requested filters."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SessionReadResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/SessionReadResult",
                "description": "Result of readSession(GoogleApiClient, com.google.android.gms.fitness.request.SessionReadRequest).",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSet(Session session, DataType dataType)",
                        "return_type": "List<DataSet>",
                        "description": "Returns the data sets for a given session and dataType."
                    },
                    {
                        "name": "getDataSet(Session session)",
                        "return_type": "List<DataSet>",
                        "description": "Returns the data sets for all data sources for a given session."
                    },
                    {
                        "name": "getSessions()",
                        "return_type": "List<Session>",
                        "description": "Returns all sessions that matched the requested filters."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SessionStopResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/result/SessionStopResult",
                "description": "Result of stopSession(GoogleApiClient, String).",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getSessions()",
                        "return_type": "List<Session>",
                        "description": "Returns the list of sessions that were stopped by the request."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "Returns the status of the call to Google Fit."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "audio",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/nearby/messages/audio/package-summary",
        "classes": [
            {
                "name": "AudioBytes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/nearby/messages/audio/AudioBytes",
                "description": "A message that will be sent directly over near-ultrasound audio.",
                "methods": [
                    {
                        "name": "from(Message message)",
                        "return_type": "staticAudioBytes",
                        "description": "Converts a Message of type Message.MESSAGE_TYPE_AUDIO_BYTES to an AudioBytes object."
                    },
                    {
                        "name": "getBytes()",
                        "return_type": "byte[]",
                        "description": "Returns the byte array payload."
                    },
                    {
                        "name": "toMessage()",
                        "return_type": "Message",
                        "description": "Obtain a Message object for use with the Messages.publish(GoogleApiClient, Message"
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "event",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/event/package-summary",
        "classes": [
            {
                "name": "EventBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/event/EventBuffer",
                "description": "Data structure providing access to a list of events.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "Event",
                        "description": ""
                    }
                ]
            },
            {
                "name": "EventEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/event/EventEntity",
                "description": "Data object representing the data for a event.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "freeze()",
                        "return_type": "Event",
                        "description": ""
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "Retrieves the description for this event."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the event description into the given CharArrayBuffer."
                    },
                    {
                        "name": "getEventId()",
                        "return_type": "String",
                        "description": "Retrieves the ID of this event."
                    },
                    {
                        "name": "getFormattedValue(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Retrieves the sum of increments have been made to this event (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedValue()",
                        "return_type": "String",
                        "description": "Retrieves the sum of increments have been made to this event (formatted for the user's locale"
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves a URI that can be used to load the event's image icon."
                    },
                    {
                        "name": "getIconImageUrl()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getName(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the event name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Retrieves the name of this event."
                    },
                    {
                        "name": "getPlayer()",
                        "return_type": "Player",
                        "description": "Retrieves the player information associated with this event."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "long",
                        "description": "Retrieves the number of increments this user has made to this event."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Retrieves whether the event should be displayed to the user in any event related UIs."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Event",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/event/Event",
                "description": "Data interface for retrieving event information.",
                "methods": [
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "Retrieves the description for this event."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the event description into the given CharArrayBuffer."
                    },
                    {
                        "name": "getEventId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of this event."
                    },
                    {
                        "name": "getFormattedValue()",
                        "return_type": "abstractString",
                        "description": "Retrieves the sum of increments have been made to this event (formatted for the user's locale"
                    },
                    {
                        "name": "getFormattedValue(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Retrieves the sum of increments have been made to this event (formatted for the user's locale"
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves a URI that can be used to load the event's image icon."
                    },
                    {
                        "name": "getName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the name of this event."
                    },
                    {
                        "name": "getName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the event name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getPlayer()",
                        "return_type": "abstractPlayer",
                        "description": "Retrieves the player information associated with this event."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "abstract long",
                        "description": "Retrieves the number of increments this user has made to this event."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "abstract boolean",
                        "description": "Retrieves whether the event should be displayed to the user in any event related UIs."
                    }
                ]
            },
            {
                "name": "Events",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/event/Events",
                "description": "This interface is deprecated. Use EventsClient instead",
                "methods": [
                    {
                        "name": "increment(GoogleApiClient apiClient, String eventId, int incrementAmount)",
                        "return_type": "abstract void",
                        "description": "Increments an event by the given number of steps."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, boolean forceReload)",
                        "return_type": "abstractPendingResult<Events.LoadEventsResult>",
                        "description": "Asynchronously load event data for the currently signed in player."
                    },
                    {
                        "name": "loadByIds(GoogleApiClient apiClient, boolean forceReload, String... eventIds)",
                        "return_type": "abstractPendingResult<Events.LoadEventsResult>",
                        "description": "Asynchronously load event data for specified event IDs."
                    }
                ]
            },
            {
                "name": "Events.LoadEventsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/event/Events.LoadEventsResult",
                "description": "This interface is deprecated. EventBuffer is returned directly in the EventsClient.",
                "methods": [
                    {
                        "name": "getEvents()",
                        "return_type": "abstractEventBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Events.LoadEventsResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/event/Events.LoadEventsResult",
                "description": "This interface is deprecated. EventBuffer is returned directly in the EventsClient.",
                "methods": [
                    {
                        "name": "getEvents()",
                        "return_type": "abstractEventBuffer",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "fence",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/awareness/fence/package-summary",
        "classes": [
            {
                "name": "AwarenessFence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/AwarenessFence",
                "description": "A combination of conditions on two or more types of context, which trigger a callback to the app when satisfied.",
                "methods": [
                    {
                        "name": "and(AwarenessFence... fences)",
                        "return_type": "staticAwarenessFence",
                        "description": "Create an awareness fence that is the logical AND of the specified fences."
                    },
                    {
                        "name": "and(Collection<AwarenessFence> fences)",
                        "return_type": "staticAwarenessFence",
                        "description": "Create an awareness fence that is the logical AND of fences in the specified fence collection."
                    },
                    {
                        "name": "not(AwarenessFence fence)",
                        "return_type": "staticAwarenessFence",
                        "description": "Create an awareness fence that is the logical NOT of the specified fence."
                    },
                    {
                        "name": "or(AwarenessFence... fences)",
                        "return_type": "staticAwarenessFence",
                        "description": "Create an awareness fence that is the logical OR of the specified fences."
                    },
                    {
                        "name": "or(Collection<AwarenessFence> fences)",
                        "return_type": "staticAwarenessFence",
                        "description": "Create an awareness fence that is the logical OR of the specified fences."
                    }
                ]
            },
            {
                "name": "BeaconFence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/BeaconFence",
                "description": "Use this class to create beacon fences.",
                "methods": [
                    {
                        "name": "found(Collection<BeaconState.TypeFilter> beaconTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily TRUE (about 5 seconds"
                    },
                    {
                        "name": "found(TypeFilter... beaconTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily TRUE (about 5 seconds"
                    },
                    {
                        "name": "lost(TypeFilter... beaconTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily TRUE (about 5 seconds"
                    },
                    {
                        "name": "lost(Collection<BeaconState.TypeFilter> beaconTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily TRUE (about 5 seconds"
                    },
                    {
                        "name": "near(TypeFilter... beaconTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence evaluates to TRUE if any of the specified types is found but not lost."
                    },
                    {
                        "name": "near(Collection<BeaconState.TypeFilter> beaconTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence evaluates to TRUE if any of the specified types is found but not lost."
                    }
                ]
            },
            {
                "name": "DetectedActivityFence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/DetectedActivityFence",
                "description": "Use this class to create activity-based fences.",
                "methods": [
                    {
                        "name": "during(int... activityTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state when the user is currently engaged in one of the specified activityTypes, and FALSE otherwise."
                    },
                    {
                        "name": "starting(int... activityTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily (about 5 seconds"
                    },
                    {
                        "name": "stopping(int... activityTypes)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily (about 5 seconds"
                    }
                ]
            },
            {
                "name": "FenceQueryRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceQueryRequest",
                "description": "Defines the interface for querying fences in the FenceApi.",
                "methods": [
                    {
                        "name": "all()",
                        "return_type": "staticFenceQueryRequest",
                        "description": "Query all the fences from the FenceApi instance corresponding to the calling package."
                    },
                    {
                        "name": "forFences(String... fenceKeys)",
                        "return_type": "staticFenceQueryRequest",
                        "description": "Query the defined fences for the given keys."
                    },
                    {
                        "name": "forFences(Collection<String> fenceKeys)",
                        "return_type": "staticFenceQueryRequest",
                        "description": "Query the Awareness Manager Fences for the given keys."
                    }
                ]
            },
            {
                "name": "FenceQueryResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceQueryResponse",
                "description": "Result for query fence states Api",
                "methods": [
                    {
                        "name": "getFenceStateMap()",
                        "return_type": "FenceStateMap",
                        "description": "Provides FenceStateMap that can be used by clients to obtain all the fence keys that are returned in response or the FenceState for the given fence key."
                    }
                ]
            },
            {
                "name": "FenceState",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceState",
                "description": "Encapsulates the state of a fence in AwarenessFence.",
                "methods": [
                    {
                        "name": "extract(Intent intent)",
                        "return_type": "staticFenceState",
                        "description": "Extracts the fence state details from the intent."
                    },
                    {
                        "name": "getCurrentState()",
                        "return_type": "abstract int",
                        "description": "Returns the current fence state."
                    },
                    {
                        "name": "getFenceKey()",
                        "return_type": "abstractString",
                        "description": "Returns the fence key that identifies this fence in AwarenessFence."
                    },
                    {
                        "name": "getLastFenceUpdateTimeMillis()",
                        "return_type": "abstract long",
                        "description": "Returns the last time the fence state was changed in milliseconds since epoch."
                    },
                    {
                        "name": "getPreviousState()",
                        "return_type": "abstract int",
                        "description": "Returns the previous fence state."
                    }
                ]
            },
            {
                "name": "FenceUpdateRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceUpdateRequest.Builder",
                "description": "Builder for a FenceUpdateRequest.",
                "methods": [
                    {
                        "name": "addFence(String key, AwarenessFence fence, PendingIntent pendingIntent)",
                        "return_type": "FenceUpdateRequest.Builder",
                        "description": "Adds a fence identified by the given key to get callbacks to the pendingIntent when triggered."
                    },
                    {
                        "name": "build()",
                        "return_type": "FenceUpdateRequest",
                        "description": "Builds the fence update request."
                    },
                    {
                        "name": "removeFence(String key)",
                        "return_type": "FenceUpdateRequest.Builder",
                        "description": "Removes the fence with the given key."
                    },
                    {
                        "name": "removeFence(PendingIntent pendingIntent)",
                        "return_type": "FenceUpdateRequest.Builder",
                        "description": "Removes all fences associated with the pendingIntent."
                    }
                ]
            },
            {
                "name": "HeadphoneFence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/HeadphoneFence",
                "description": "Use this class to create headphone state fences.",
                "methods": [
                    {
                        "name": "during(int headphoneState)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state when the headphones are in the specified state."
                    },
                    {
                        "name": "pluggingIn()",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily (about 5 seconds"
                    },
                    {
                        "name": "unplugging()",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily (about 5 seconds"
                    }
                ]
            },
            {
                "name": "LocationFence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/LocationFence",
                "description": "Use this class to create location-based fences.",
                "methods": [
                    {
                        "name": "entering(double latitude, double longitude, double radius)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily (about 5 seconds"
                    },
                    {
                        "name": "exiting(double latitude, double longitude, double radius)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is momentarily (about 5 seconds"
                    },
                    {
                        "name": "in(double latitude, double longitude, double radius, long dwellTimeMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state when the user's location is within the specified circle, and the user has been in the circle for at least the dwellTimeMillis that was specified."
                    }
                ]
            },
            {
                "name": "TimeFence",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/fence/TimeFence",
                "description": "Use this class to create time-based fences.",
                "methods": [
                    {
                        "name": "aroundTimeInstant(int timeInstant, long startOffsetMillis, long stopOffsetMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "This is a time fence that is in the TRUE state during a time interval defined with respect to TIME_INSTANT_SUNRISE or TIME_INSTANT_SUNSET instants."
                    },
                    {
                        "name": "inDailyInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state during the interval specified by startTimeOfDayMillis and stopTimeOfDayMillis in the given timeZone."
                    },
                    {
                        "name": "inFridayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    },
                    {
                        "name": "inInterval(long startTimeMillis, long stopTimeMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state when the current time is within the absolute times indicated by startTimeMillis and stopTimeMillis."
                    },
                    {
                        "name": "inIntervalOfDay(int dayOfWeek, TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state on dayOfWeek during the interval specified by startTimeOfDayMillis to stopTimeOfDayMillis in the given timeZone."
                    },
                    {
                        "name": "inMondayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    },
                    {
                        "name": "inSaturdayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    },
                    {
                        "name": "inSundayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    },
                    {
                        "name": "inThursdayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    },
                    {
                        "name": "inTimeInterval(int timeInterval)",
                        "return_type": "staticAwarenessFence",
                        "description": "This fence is in the TRUE state if the day attributes for the present day/time is one of the attributes specified in the given dayAttributes."
                    },
                    {
                        "name": "inTuesdayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    },
                    {
                        "name": "inWednesdayInterval(TimeZone timeZone, long startTimeOfDayMillis, long stopTimeOfDayMillis)",
                        "return_type": "staticAwarenessFence",
                        "description": "DEPRECATED."
                    }
                ]
            },
            {
                "name": "FenceQueryResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceQueryResult",
                "description": "Result for query fence states Api",
                "methods": [
                    {
                        "name": "getFenceStateMap()",
                        "return_type": "abstractFenceStateMap",
                        "description": "Provides FenceStateMap that can be used by clients to obtain all the fence keys that are returned in response or the FenceState for the given fence key."
                    }
                ]
            },
            {
                "name": "FenceStateMap",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceStateMap",
                "description": "A map of fence states keyed off of the fence keys resulting from a FenceQueryRequest.",
                "methods": [
                    {
                        "name": "getFenceKeys()",
                        "return_type": "abstractSet<String>",
                        "description": "Returns the Set of fence keys that are contained in this FenceStateMap."
                    },
                    {
                        "name": "getFenceState(String fenceKey)",
                        "return_type": "abstractFenceState",
                        "description": "Returns a FenceState for the given fence key."
                    }
                ]
            },
            {
                "name": "FenceUpdateRequest",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceUpdateRequest",
                "description": "Request to add and/or remove multiple fences.",
                "methods": []
            },
            {
                "name": "FenceUpdateRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/awareness/fence/FenceUpdateRequest.Builder",
                "description": "Builder for a FenceUpdateRequest.",
                "methods": [
                    {
                        "name": "addFence(String key, AwarenessFence fence, PendingIntent pendingIntent)",
                        "return_type": "FenceUpdateRequest.Builder",
                        "description": "Adds a fence identified by the given key to get callbacks to the pendingIntent when triggered."
                    },
                    {
                        "name": "build()",
                        "return_type": "FenceUpdateRequest",
                        "description": "Builds the fence update request."
                    },
                    {
                        "name": "removeFence(String key)",
                        "return_type": "FenceUpdateRequest.Builder",
                        "description": "Removes the fence with the given key."
                    },
                    {
                        "name": "removeFence(PendingIntent pendingIntent)",
                        "return_type": "FenceUpdateRequest.Builder",
                        "description": "Removes all fences associated with the pendingIntent."
                    }
                ]
            }
        ]
    },
    {
        "name": "intents",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/identity/intents/package-summary",
        "classes": [
            {
                "name": "Address",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/identity/intents/Address",
                "description": "APIs for accessing a user's address.",
                "methods": [
                    {
                        "name": "requestUserAddress(GoogleApiClient googleApiClient, UserAddressRequest request, int requestCode)",
                        "return_type": "static void",
                        "description": "API to request an address from a user."
                    }
                ]
            },
            {
                "name": "Address.AddressOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/identity/intents/Address.AddressOptions",
                "description": "A class that encapsulates options for the Address APIs.",
                "methods": []
            },
            {
                "name": "UserAddressRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/identity/intents/UserAddressRequest",
                "description": "Object that encapsulates a request to requestUserAddress(GoogleApiClient, UserAddressRequest, int).",
                "methods": [
                    {
                        "name": "newBuilder()",
                        "return_type": "staticUserAddressRequest.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UserAddressRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/identity/intents/UserAddressRequest.Builder",
                "description": "Builder for creating a UserAddressRequest.",
                "methods": [
                    {
                        "name": "addAllowedCountrySpecification(CountrySpecification countrySpecification)",
                        "return_type": "UserAddressRequest.Builder",
                        "description": "Specifies a country whose addresses can be handled by your app."
                    },
                    {
                        "name": "addAllowedCountrySpecifications(Collection<CountrySpecification> countrySpecifications)",
                        "return_type": "UserAddressRequest.Builder",
                        "description": "Specifies multiple countries whose addresses can be handled by your app."
                    },
                    {
                        "name": "build()",
                        "return_type": "UserAddressRequest",
                        "description": "Builds an instance of UserAddressRequest and returns it."
                    }
                ]
            },
            {
                "name": "AddressConstants",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants",
                "description": "Constants used for Address APIs.",
                "methods": []
            },
            {
                "name": "AddressConstants.ErrorCodes",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.ErrorCodes",
                "description": "Error codes that could be returned in the data Intent returned to your Activity via its onActivityResult method.",
                "methods": []
            },
            {
                "name": "AddressConstants.Extras",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.Extras",
                "description": "Keys for Intent extras.",
                "methods": []
            },
            {
                "name": "AddressConstants.ResultCodes",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.ResultCodes",
                "description": "Custom result codes that can be returned to your Activity's onActivityResult method after you call requestUserAddress(GoogleApiClient, UserAddressRequest, int).",
                "methods": []
            },
            {
                "name": "AddressConstants.Themes",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.Themes",
                "description": "System themes that can be used to customize the UI elements shown when you call requestUserAddress(GoogleApiClient, UserAddressRequest, int).",
                "methods": []
            },
            {
                "name": "Address.AddressOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/identity/intents/Address.AddressOptions",
                "description": "A class that encapsulates options for the Address APIs.",
                "methods": []
            },
            {
                "name": "UserAddressRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/identity/intents/UserAddressRequest.Builder",
                "description": "Builder for creating a UserAddressRequest.",
                "methods": [
                    {
                        "name": "addAllowedCountrySpecification(CountrySpecification countrySpecification)",
                        "return_type": "UserAddressRequest.Builder",
                        "description": "Specifies a country whose addresses can be handled by your app."
                    },
                    {
                        "name": "addAllowedCountrySpecifications(Collection<CountrySpecification> countrySpecifications)",
                        "return_type": "UserAddressRequest.Builder",
                        "description": "Specifies multiple countries whose addresses can be handled by your app."
                    },
                    {
                        "name": "build()",
                        "return_type": "UserAddressRequest",
                        "description": "Builds an instance of UserAddressRequest and returns it."
                    }
                ]
            },
            {
                "name": "AddressConstants.ErrorCodes",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.ErrorCodes",
                "description": "Error codes that could be returned in the data Intent returned to your Activity via its onActivityResult method.",
                "methods": []
            },
            {
                "name": "AddressConstants.Extras",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.Extras",
                "description": "Keys for Intent extras.",
                "methods": []
            },
            {
                "name": "AddressConstants.ResultCodes",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.ResultCodes",
                "description": "Custom result codes that can be returned to your Activity's onActivityResult method after you call requestUserAddress(GoogleApiClient, UserAddressRequest, int).",
                "methods": []
            },
            {
                "name": "AddressConstants.Themes",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/identity/intents/AddressConstants.Themes",
                "description": "System themes that can be used to customize the UI elements shown when you call requestUserAddress(GoogleApiClient, UserAddressRequest, int).",
                "methods": []
            }
        ]
    },
    {
        "name": "recaptcha",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/recaptcha/package-summary",
        "classes": [
            {
                "name": "Recaptcha",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/Recaptcha",
                "description": "The reCAPTCHA API provides access to Google Cloud services that help you protect your app from spam and other abusive actions.",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticRecaptchaClient",
                        "description": "Returns a RecaptchaClient that is used to access all APIs that are called when the app has a foreground Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticRecaptchaClient",
                        "description": "Returns a RecaptchaClient that is used to access all APIs that are called without access to a foreground Activity."
                    }
                ]
            },
            {
                "name": "RecaptchaAction",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaAction",
                "description": "Actions (e.g., login) intended to be protected by reCAPTCHA.",
                "methods": [
                    {
                        "name": "getAction()",
                        "return_type": "RecaptchaActionType",
                        "description": "Gets RecaptchaActionType."
                    },
                    {
                        "name": "getAdditionalArgs()",
                        "return_type": "Bundle",
                        "description": "Gets the additional arg map specified by this action."
                    },
                    {
                        "name": "getCustomAction()",
                        "return_type": "String",
                        "description": "Gets custom action that user inputs."
                    },
                    {
                        "name": "getVerificationHistoryToken()",
                        "return_type": "String",
                        "description": "Gets the verification history token specified by this action."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Gets the String value of RecaptchaAction."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RecaptchaActionType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaActionType",
                "description": "Collection of predefined actions used by RecaptchaHandle.",
                "methods": [
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RecaptchaHandle",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaHandle",
                "description": "Information pertaining to reCAPTCHA handle, which is used to identify the initialized reCAPTCHA service.",
                "methods": [
                    {
                        "name": "getAcceptableAdditionalArgs()",
                        "return_type": "List<String>",
                        "description": "Returns a list of strings indicating the additional argument keys that reCAPTCHA server accepts."
                    },
                    {
                        "name": "getClientPackageName()",
                        "return_type": "String",
                        "description": "Returns the package name of the app that calls reCAPTCHA API."
                    },
                    {
                        "name": "getSiteKey()",
                        "return_type": "String",
                        "description": "Returns the reCAPTCHA Site Key you registered to help protect your application."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RecaptchaOptionalObject<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaOptionalObject",
                "description": "Class for wrapping an optional object (i.e., an immutable object that may contain a non-null reference to another object) to be used in VerificationResult.",
                "methods": [
                    {
                        "name": "ofNullable(T object)",
                        "return_type": "static <T>RecaptchaOptionalObject<T>",
                        "description": "Returns a RecaptchaOptionalObject wrapping the specified object, which can be null."
                    },
                    {
                        "name": "orNull()",
                        "return_type": "T",
                        "description": "Returns the wrapped object."
                    }
                ]
            },
            {
                "name": "RecaptchaResultData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaResultData",
                "description": "Information pertaining to reCAPTCHA result data.",
                "methods": [
                    {
                        "name": "getTokenResult()",
                        "return_type": "String",
                        "description": "Returns a reCAPTCHA token."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RecaptchaStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaStatusCodes",
                "description": "Status codes for the reCAPTCHA API.",
                "methods": []
            },
            {
                "name": "VerificationHandle",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/VerificationHandle",
                "description": "Stores the information required to verify an account.",
                "methods": [
                    {
                        "name": "getCodeLength()",
                        "return_type": "abstract int",
                        "description": "Returns the length of the PIN code."
                    },
                    {
                        "name": "getOperationAbortedToken()",
                        "return_type": "abstractString",
                        "description": "Returns a reCAPTCHA token in the case challengeAccount(RecaptchaHandle, String"
                    },
                    {
                        "name": "getSiteKey()",
                        "return_type": "abstractString",
                        "description": "Returns the site public key you registered for using reCAPTCHA."
                    },
                    {
                        "name": "getTimeoutMinutes()",
                        "return_type": "abstract long",
                        "description": "Returns the validity duration of the object since its creation in minutes."
                    },
                    {
                        "name": "getVerificationToken()",
                        "return_type": "abstractString",
                        "description": "Returns an encrypted version of the internal verification token that will be used in verifyAccount(String, VerificationHandle"
                    },
                    {
                        "name": "isValid()",
                        "return_type": "boolean",
                        "description": "Returns a boolean indicating if the VerificationHandle is valid for verifyAccount(String, VerificationHandle"
                    }
                ]
            },
            {
                "name": "VerificationResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/recaptcha/VerificationResult",
                "description": "Immmutable object to hold the result of a verification operation.",
                "methods": [
                    {
                        "name": "getVerificationStatus()",
                        "return_type": "abstract Status",
                        "description": "Returns a status to provide more info on the result of the verification operation."
                    },
                    {
                        "name": "recaptchaToken()",
                        "return_type": "abstractRecaptchaOptionalObject<String>",
                        "description": "Returns an optional containing the reCAPTCHA token if the verification operation was successful or aborted."
                    },
                    {
                        "name": "verificationHandle()",
                        "return_type": "abstractRecaptchaOptionalObject<VerificationHandle>",
                        "description": "Returns an optional containing a verification handle if the verification operation failed and the client is allowed to retry."
                    }
                ]
            },
            {
                "name": "RecaptchaClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/recaptcha/RecaptchaClient",
                "description": "The main entry point for interacting with the reCAPTCHA API.",
                "methods": [
                    {
                        "name": "challengeAccount(RecaptchaHandle recaptchaHandle, String challengeRequestToken)",
                        "return_type": "abstract Task<VerificationHandle>",
                        "description": "Sends a challenge to an account in order to verify the identity of the user."
                    },
                    {
                        "name": "close(RecaptchaHandle handle)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Closes the initialized RecaptchaHandle."
                    },
                    {
                        "name": "execute(RecaptchaHandle handle, RecaptchaAction action)",
                        "return_type": "abstract Task<RecaptchaResultData>",
                        "description": "Returns a score indicating how likely the action was triggered by a real user."
                    },
                    {
                        "name": "init(String siteKey)",
                        "return_type": "abstract Task<RecaptchaHandle>",
                        "description": "Prepares and initializes a RecaptchaHandle."
                    },
                    {
                        "name": "verifyAccount(String pin, VerificationHandle verificationHandle)",
                        "return_type": "abstract Task<VerificationResult>",
                        "description": "Verifies a PIN against a verification handle obtained through a challengeAccount(RecaptchaHandle, String"
                    }
                ]
            }
        ]
    },
    {
        "name": "api",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/common/api/package-summary",
        "classes": [
            {
                "name": "Api<O extendsApi.ApiOptions>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Api",
                "description": "Describes a section of the Google Play Services API that should be made available.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.NoOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.NoOptions",
                "description": "Api.ApiOptions implementation for Apis that do not take any options.",
                "methods": []
            },
            {
                "name": "Batch",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Batch",
                "description": "Handles a batch of PendingResult items.",
                "methods": [
                    {
                        "name": "await()",
                        "return_type": "final R extendsResult",
                        "description": "Blocks until the task is completed."
                    },
                    {
                        "name": "await(long time, TimeUnit units)",
                        "return_type": "final R extendsResult",
                        "description": "Blocks until the task is completed or has timed out waiting for the result."
                    },
                    {
                        "name": "cancel()",
                        "return_type": "void",
                        "description": "Requests that the batch be canceled."
                    },
                    {
                        "name": "clearResultCallback()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "createFailedResult(Status status)",
                        "return_type": "BatchResult",
                        "description": "Creates a result of type <R> that represents a failure with the specified Status."
                    },
                    {
                        "name": "isCanceled()",
                        "return_type": "boolean",
                        "description": "Indicates whether the pending result has been canceled either due to calling GoogleApiClient.disconnect("
                    },
                    {
                        "name": "setResultCallback(ResultCallback<? super R extends Result> callback)",
                        "return_type": "final void",
                        "description": "Set the callback here if you want the result to be delivered via a callback when the result is ready."
                    },
                    {
                        "name": "setResultCallback(ResultCallback<? super R extends Result> callback, long time, TimeUnit units)",
                        "return_type": "final void",
                        "description": "Set the callback here if you want the result to be delivered via a callback when the result is ready or has timed out waiting for the result."
                    }
                ]
            },
            {
                "name": "Batch.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Batch.Builder",
                "description": "Builder for Batch objects.",
                "methods": [
                    {
                        "name": "add(PendingResult<R> pendingResult)",
                        "return_type": "<R extendsResult>BatchResultToken<R>",
                        "description": "Adds a PendingResult to the batch."
                    },
                    {
                        "name": "build()",
                        "return_type": "Batch",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BatchResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/BatchResult",
                "description": "The result of a batch operation.",
                "methods": [
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "Returns the status of this result."
                    },
                    {
                        "name": "take(BatchResultToken<R> resultToken)",
                        "return_type": "<R extendsResult> R",
                        "description": "Retrieves a result from the batch."
                    }
                ]
            },
            {
                "name": "BatchResultToken<R extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/BatchResultToken",
                "description": "Result token used to retrieve the result of individual operations from a batch.",
                "methods": []
            },
            {
                "name": "BooleanResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/BooleanResult",
                "description": "A Result with a boolean value.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "final boolean",
                        "description": ""
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "Returns the status of this result."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "final int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CommonStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/CommonStatusCodes",
                "description": "Common status codes that are often shared across API surfaces.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleApi<O extendsApi.ApiOptions>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApi",
                "description": "Base class for Google API entry points.",
                "methods": []
            },
            {
                "name": "GoogleApiActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiActivity",
                "description": "Helper activity used by Google Play services APIs to display resolutions for connection errors.",
                "methods": []
            },
            {
                "name": "GoogleApiClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient",
                "description": "This class is deprecated. Use GoogleApi based APIs instead. See Moving Past GoogleApiClient.",
                "methods": [
                    {
                        "name": "blockingConnect()",
                        "return_type": "abstractConnectionResult",
                        "description": "Connects the client to Google Play services."
                    },
                    {
                        "name": "blockingConnect(long timeout, TimeUnit unit)",
                        "return_type": "abstractConnectionResult",
                        "description": "Connects the client to Google Play services."
                    },
                    {
                        "name": "clearDefaultAccountAndReconnect()",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Clears the account selected by the user and reconnects the client asking the user to pick an account again if GoogleApiClient.Builder.useDefaultAccount("
                    },
                    {
                        "name": "connect(int signInMode)",
                        "return_type": "void",
                        "description": "Connects the client to Google Play services using the given sign in mode."
                    },
                    {
                        "name": "connect()",
                        "return_type": "abstract void",
                        "description": "Connects the client to Google Play services."
                    },
                    {
                        "name": "disconnect()",
                        "return_type": "abstract void",
                        "description": "Closes the connection to Google Play services."
                    },
                    {
                        "name": "dump(String prefix, FileDescriptor fd, PrintWriter writer, String[] args)",
                        "return_type": "abstract void",
                        "description": "Prints the GoogleApiClient's state into the given stream."
                    },
                    {
                        "name": "dumpAll(String prefix, FileDescriptor fd, PrintWriter writer, String[] args)",
                        "return_type": "static void",
                        "description": "Prints the state of all GoogleApiClients in the current process into the given stream."
                    },
                    {
                        "name": "getConnectionResult(Api<?> api)",
                        "return_type": "abstractConnectionResult",
                        "description": "Returns the ConnectionResult for the GoogleApiClient's connection to the specified API."
                    },
                    {
                        "name": "hasConnectedApi(Api<?> api)",
                        "return_type": "abstract boolean",
                        "description": "Returns whether or not this GoogleApiClient has the specified API in a connected state."
                    },
                    {
                        "name": "isConnected()",
                        "return_type": "abstract boolean",
                        "description": "Checks if the client is currently connected to the service, so that requests to other methods will succeed."
                    },
                    {
                        "name": "isConnecting()",
                        "return_type": "abstract boolean",
                        "description": "Checks if the client is attempting to connect to the service."
                    },
                    {
                        "name": "isConnectionCallbacksRegistered(GoogleApiClient.ConnectionCallbacks listener)",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the specified listener is currently registered to receive connection events."
                    },
                    {
                        "name": "isConnectionFailedListenerRegistered(GoogleApiClient.OnConnectionFailedListener listener)",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the specified listener is currently registered to receive connection failed events."
                    },
                    {
                        "name": "reconnect()",
                        "return_type": "abstract void",
                        "description": "Closes the current connection to Google Play services and creates a new connection."
                    },
                    {
                        "name": "registerConnectionCallbacks(GoogleApiClient.ConnectionCallbacks listener)",
                        "return_type": "abstract void",
                        "description": "Registers a listener to receive connection events from this GoogleApiClient."
                    },
                    {
                        "name": "registerConnectionFailedListener(GoogleApiClient.OnConnectionFailedListener listener)",
                        "return_type": "abstract void",
                        "description": "Registers a listener to receive connection failed events from this GoogleApiClient."
                    },
                    {
                        "name": "stopAutoManage(FragmentActivity lifecycleActivity)",
                        "return_type": "abstract void",
                        "description": "Disconnects the client and stops automatic lifecycle management."
                    },
                    {
                        "name": "unregisterConnectionCallbacks(GoogleApiClient.ConnectionCallbacks listener)",
                        "return_type": "abstract void",
                        "description": "Removes a connection listener from this GoogleApiClient."
                    },
                    {
                        "name": "unregisterConnectionFailedListener(GoogleApiClient.OnConnectionFailedListener listener)",
                        "return_type": "abstract void",
                        "description": "Removes a connection failed listener from the GoogleApiClient."
                    }
                ]
            },
            {
                "name": "GoogleApiClient.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient.Builder",
                "description": "This class is deprecated. Use GoogleApi based APIs instead. See Moving Past GoogleApiClient.",
                "methods": [
                    {
                        "name": "addApi(Api<O> api, O options)",
                        "return_type": "<O extendsApi.ApiOptions.HasOptions>GoogleApiClient.Builder",
                        "description": "Specify which Apis are requested by your app."
                    },
                    {
                        "name": "addApi(Api<? extends Api.ApiOptions.NotRequiredOptions> api)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify which Apis are requested by your app."
                    },
                    {
                        "name": "addApiIfAvailable(Api<O> api, O options, Scope... scopes)",
                        "return_type": "<O extendsApi.ApiOptions.HasOptions>GoogleApiClient.Builder",
                        "description": "Specify which Apis should attempt to connect, but are not strictly required for your app."
                    },
                    {
                        "name": "addApiIfAvailable(Api<? extends Api.ApiOptions.NotRequiredOptions> api, Scope... scopes)",
                        "return_type": "<T extendsApi.ApiOptions.NotRequiredOptions>GoogleApiClient.Builder",
                        "description": "Specify which Apis should attempt to connect, but are not strictly required for your app."
                    },
                    {
                        "name": "addConnectionCallbacks(GoogleApiClient.ConnectionCallbacks listener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Registers a listener to receive connection events from this GoogleApiClient."
                    },
                    {
                        "name": "addOnConnectionFailedListener(GoogleApiClient.OnConnectionFailedListener listener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Adds a listener to register to receive connection failed events from this GoogleApiClient."
                    },
                    {
                        "name": "addScope(Scope scope)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify the OAuth 2.0 scopes requested by your app."
                    },
                    {
                        "name": "build()",
                        "return_type": "GoogleApiClient",
                        "description": "Builds a new GoogleApiClient object for communicating with the Google APIs."
                    },
                    {
                        "name": "enableAutoManage(FragmentActivity fragmentActivity, GoogleApiClient.OnConnectionFailedListener unresolvedConnectionFailedListener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Enables automatic lifecycle management in a support library FragmentActivity that connects the client in FragmentActivity.onStart("
                    },
                    {
                        "name": "enableAutoManage(FragmentActivity fragmentActivity, int clientId, GoogleApiClient.OnConnectionFailedListener unresolvedConnectionFailedListener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Enables automatic lifecycle management in a support library FragmentActivity that connects the client in FragmentActivity.onStart("
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify an account name on the device that should be used."
                    },
                    {
                        "name": "setGravityForPopups(int gravityForPopups)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specifies the part of the screen at which games service popups (for example, \"welcome back\" or \"achievement unlocked\" popups"
                    },
                    {
                        "name": "setHandler(Handler handler)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Sets a Handler to indicate which thread to use when invoking callbacks."
                    },
                    {
                        "name": "setViewForPopups(View viewForPopups)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Sets the View to use as a content view for popups."
                    },
                    {
                        "name": "useDefaultAccount()",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify that the default account should be used when connecting to services."
                    }
                ]
            },
            {
                "name": "OptionalPendingResult<R extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/OptionalPendingResult",
                "description": "Each OptionalPendingResult is a PendingResult with additional support for non-blocking accessors.",
                "methods": [
                    {
                        "name": "get()",
                        "return_type": "abstract R",
                        "description": "Returns the Result immediately if it is available."
                    },
                    {
                        "name": "isDone()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the result is available immediately, false otherwise."
                    }
                ]
            },
            {
                "name": "PendingResult<R extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/PendingResult",
                "description": "Represents a pending result from calling an API method in Google Play services.",
                "methods": [
                    {
                        "name": "await()",
                        "return_type": "abstract R",
                        "description": "Blocks until the task is completed."
                    },
                    {
                        "name": "await(long time, TimeUnit units)",
                        "return_type": "abstract R",
                        "description": "Blocks until the task is completed or has timed out waiting for the result."
                    },
                    {
                        "name": "cancel()",
                        "return_type": "abstract void",
                        "description": "Requests that the PendingResult be canceled."
                    },
                    {
                        "name": "isCanceled()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the pending result has been canceled either due to calling GoogleApiClient.disconnect("
                    },
                    {
                        "name": "setResultCallback(ResultCallback<? super R> callback)",
                        "return_type": "abstract void",
                        "description": "Set the callback here if you want the result to be delivered via a callback when the result is ready."
                    },
                    {
                        "name": "setResultCallback(ResultCallback<? super R> callback, long time, TimeUnit units)",
                        "return_type": "abstract void",
                        "description": "Set the callback here if you want the result to be delivered via a callback when the result is ready or has timed out waiting for the result."
                    },
                    {
                        "name": "then(ResultTransform<? super R, ? extends S> transform)",
                        "return_type": "<S extendsResult>TransformedResult<S>",
                        "description": "Transforms the result by making another API call."
                    }
                ]
            },
            {
                "name": "PendingResults",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/PendingResults",
                "description": "Provides factory methods for PendingResult instances, primarily for use in tests.",
                "methods": [
                    {
                        "name": "canceledPendingResult()",
                        "return_type": "staticPendingResult<Status>",
                        "description": "Returns a PendingResult that has been canceled."
                    },
                    {
                        "name": "canceledPendingResult(R result)",
                        "return_type": "static <R extendsResult>PendingResult<R>",
                        "description": "Returns a PendingResult that has been canceled."
                    },
                    {
                        "name": "immediatePendingResult(R result)",
                        "return_type": "static <R extendsResult>OptionalPendingResult<R>",
                        "description": "Returns a PendingResult with the specified result."
                    },
                    {
                        "name": "immediatePendingResult(Status result)",
                        "return_type": "staticPendingResult<Status>",
                        "description": "Returns a PendingResult with the specified Status."
                    }
                ]
            },
            {
                "name": "ResolvingResultCallbacks<R extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/ResolvingResultCallbacks",
                "description": "ResultCallbacks which automatically start resolutions for failures.",
                "methods": [
                    {
                        "name": "onSuccess(R result)",
                        "return_type": "abstract void",
                        "description": "Called when the Result is ready and was successful."
                    },
                    {
                        "name": "onUnresolvableFailure(Status result)",
                        "return_type": "abstract void",
                        "description": "Called when a non-resolvable failure occurs or starting a resolution fails."
                    }
                ]
            },
            {
                "name": "Response<T extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Response",
                "description": "Represents the successful result of invoking an API method in Google Play services using a subclass of GoogleApi.",
                "methods": [
                    {
                        "name": "setResult(T result)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ResultCallbacks<R extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/ResultCallbacks",
                "description": "Callbacks for receiving a Result from a PendingResult as an asynchronous callback.",
                "methods": [
                    {
                        "name": "onFailure(Status result)",
                        "return_type": "abstract void",
                        "description": "Called when the Result is ready and a failure occurred."
                    },
                    {
                        "name": "onSuccess(R result)",
                        "return_type": "abstract void",
                        "description": "Called when the Result is ready and was successful."
                    }
                ]
            },
            {
                "name": "ResultTransform<R extendsResult, S extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/ResultTransform",
                "description": "Transforms a Result by making a subsequent API call.",
                "methods": [
                    {
                        "name": "createFailedResult(Status status)",
                        "return_type": "finalPendingResult<S>",
                        "description": "Creates a failed result with the given Status."
                    },
                    {
                        "name": "onFailure(Status status)",
                        "return_type": "Status",
                        "description": "Called when the PendingResult to be transformed returns a failure."
                    },
                    {
                        "name": "onSuccess(R result)",
                        "return_type": "abstractPendingResult<S>",
                        "description": "Transforms the result of a successful API call."
                    }
                ]
            },
            {
                "name": "Scope",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Scope",
                "description": "Describes an OAuth 2.0 scope to request.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Status",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/Status",
                "description": "Represents the results of work.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getConnectionResult()",
                        "return_type": "ConnectionResult",
                        "description": "Returns a failed ConnectionResult, if applicable."
                    },
                    {
                        "name": "getResolution()",
                        "return_type": "PendingIntent",
                        "description": "A pending intent to resolve the failure."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "Returns the status of this result."
                    },
                    {
                        "name": "getStatusCode()",
                        "return_type": "int",
                        "description": "Indicates the status of the operation."
                    },
                    {
                        "name": "getStatusMessage()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hasResolution()",
                        "return_type": "boolean",
                        "description": "Returns true if calling startResolutionForResult(Activity, int"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isCanceled()",
                        "return_type": "boolean",
                        "description": "Returns true if the operation was canceled."
                    },
                    {
                        "name": "isInterrupted()",
                        "return_type": "boolean",
                        "description": "Returns true if the operation was interrupted."
                    },
                    {
                        "name": "isSuccess()",
                        "return_type": "boolean",
                        "description": "Returns true if the operation was successful."
                    },
                    {
                        "name": "startResolutionForResult(Activity activity, int requestCode)",
                        "return_type": "void",
                        "description": "Resolves an error by starting any intents requiring user interaction."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TransformedResult<R extendsResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/api/TransformedResult",
                "description": "Represents a pending result that has been transformed by one or more subsequent API calls.",
                "methods": [
                    {
                        "name": "andFinally(ResultCallbacks<? super R> callbacks)",
                        "return_type": "abstract void",
                        "description": "Requests that the supplied callbacks are called when the result is ready."
                    },
                    {
                        "name": "then(ResultTransform<? super R, ? extends S> transform)",
                        "return_type": "abstract <S extendsResult>TransformedResult<S>",
                        "description": "Transforms the result by making another API call."
                    }
                ]
            },
            {
                "name": "Api.ApiOptions",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions",
                "description": "Base interface for API options.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.HasAccountOptions",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasAccountOptions",
                "description": "An interface for Api.ApiOptions that include an account.",
                "methods": [
                    {
                        "name": "getAccount()",
                        "return_type": "abstractAccount",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Api.ApiOptions.HasGoogleSignInAccountOptions",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasGoogleSignInAccountOptions",
                "description": "An interface for Api.ApiOptions that includes a GoogleSignInAccount",
                "methods": [
                    {
                        "name": "getGoogleSignInAccount()",
                        "return_type": "abstractGoogleSignInAccount",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Api.ApiOptions.HasOptions",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasOptions",
                "description": "Base interface for Api.ApiOptions in Apis that have options.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.NotRequiredOptions",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.NotRequiredOptions",
                "description": "Base interface for Api.ApiOptions that are not required, don't exist.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.Optional",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.Optional",
                "description": "Base interface for Api.ApiOptions that are optional.",
                "methods": []
            },
            {
                "name": "GoogleApiClient.ConnectionCallbacks",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient.ConnectionCallbacks",
                "description": "This interface is deprecated. use GoogleApi based APIs instead. see moving past googleapiclient. API implementors should use the stand-alone ConnectionCallbacks instead.",
                "methods": []
            },
            {
                "name": "GoogleApiClient.OnConnectionFailedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient.OnConnectionFailedListener",
                "description": "This interface is deprecated. use GoogleApi based apis instead. see moving past googleapiclient. api implementors should use the stand-alone OnConnectionFailedListener instead.",
                "methods": []
            },
            {
                "name": "HasApiKey<O extendsApi.ApiOptions>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/HasApiKey",
                "description": "Anything that has an ApiKey.",
                "methods": []
            },
            {
                "name": "Releasable",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Releasable",
                "description": "Represents a resource, or a holder of resources, which may be released once they are no longer needed.",
                "methods": [
                    {
                        "name": "release()",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Result",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/Result",
                "description": "Represents the final result of invoking an API method in Google Play services.",
                "methods": [
                    {
                        "name": "getStatus()",
                        "return_type": "abstractStatus",
                        "description": "Returns the status of this result."
                    }
                ]
            },
            {
                "name": "ResultCallback<R extendsResult>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/common/api/ResultCallback",
                "description": "An interface for receiving a Result from a PendingResult as an asynchronous callback.",
                "methods": [
                    {
                        "name": "onResult(R result)",
                        "return_type": "abstract void",
                        "description": "Called when the Result is ready."
                    }
                ]
            },
            {
                "name": "Api.ApiOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions",
                "description": "Base interface for API options.",
                "methods": []
            },
            {
                "name": "Batch.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/api/Batch.Builder",
                "description": "Builder for Batch objects.",
                "methods": [
                    {
                        "name": "add(PendingResult<R> pendingResult)",
                        "return_type": "<R extendsResult>BatchResultToken<R>",
                        "description": "Adds a PendingResult to the batch."
                    },
                    {
                        "name": "build()",
                        "return_type": "Batch",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleApiClient.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient.Builder",
                "description": "This class is deprecated. Use GoogleApi based APIs instead. See Moving Past GoogleApiClient.",
                "methods": [
                    {
                        "name": "addApi(Api<O> api, O options)",
                        "return_type": "<O extendsApi.ApiOptions.HasOptions>GoogleApiClient.Builder",
                        "description": "Specify which Apis are requested by your app."
                    },
                    {
                        "name": "addApi(Api<? extends Api.ApiOptions.NotRequiredOptions> api)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify which Apis are requested by your app."
                    },
                    {
                        "name": "addApiIfAvailable(Api<O> api, O options, Scope... scopes)",
                        "return_type": "<O extendsApi.ApiOptions.HasOptions>GoogleApiClient.Builder",
                        "description": "Specify which Apis should attempt to connect, but are not strictly required for your app."
                    },
                    {
                        "name": "addApiIfAvailable(Api<? extends Api.ApiOptions.NotRequiredOptions> api, Scope... scopes)",
                        "return_type": "<T extendsApi.ApiOptions.NotRequiredOptions>GoogleApiClient.Builder",
                        "description": "Specify which Apis should attempt to connect, but are not strictly required for your app."
                    },
                    {
                        "name": "addConnectionCallbacks(GoogleApiClient.ConnectionCallbacks listener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Registers a listener to receive connection events from this GoogleApiClient."
                    },
                    {
                        "name": "addOnConnectionFailedListener(GoogleApiClient.OnConnectionFailedListener listener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Adds a listener to register to receive connection failed events from this GoogleApiClient."
                    },
                    {
                        "name": "addScope(Scope scope)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify the OAuth 2.0 scopes requested by your app."
                    },
                    {
                        "name": "build()",
                        "return_type": "GoogleApiClient",
                        "description": "Builds a new GoogleApiClient object for communicating with the Google APIs."
                    },
                    {
                        "name": "enableAutoManage(FragmentActivity fragmentActivity, GoogleApiClient.OnConnectionFailedListener unresolvedConnectionFailedListener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Enables automatic lifecycle management in a support library FragmentActivity that connects the client in FragmentActivity.onStart("
                    },
                    {
                        "name": "enableAutoManage(FragmentActivity fragmentActivity, int clientId, GoogleApiClient.OnConnectionFailedListener unresolvedConnectionFailedListener)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Enables automatic lifecycle management in a support library FragmentActivity that connects the client in FragmentActivity.onStart("
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify an account name on the device that should be used."
                    },
                    {
                        "name": "setGravityForPopups(int gravityForPopups)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specifies the part of the screen at which games service popups (for example, \"welcome back\" or \"achievement unlocked\" popups"
                    },
                    {
                        "name": "setHandler(Handler handler)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Sets a Handler to indicate which thread to use when invoking callbacks."
                    },
                    {
                        "name": "setViewForPopups(View viewForPopups)",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Sets the View to use as a content view for popups."
                    },
                    {
                        "name": "useDefaultAccount()",
                        "return_type": "GoogleApiClient.Builder",
                        "description": "Specify that the default account should be used when connecting to services."
                    }
                ]
            },
            {
                "name": "GoogleApiClient.ConnectionCallbacks",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient.ConnectionCallbacks",
                "description": "This interface is deprecated. use GoogleApi based APIs instead. see moving past googleapiclient. API implementors should use the stand-alone ConnectionCallbacks instead.",
                "methods": []
            },
            {
                "name": "GoogleApiClient.OnConnectionFailedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/GoogleApiClient.OnConnectionFailedListener",
                "description": "This interface is deprecated. use GoogleApi based apis instead. see moving past googleapiclient. api implementors should use the stand-alone OnConnectionFailedListener instead.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.HasAccountOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasAccountOptions",
                "description": "An interface for Api.ApiOptions that include an account.",
                "methods": [
                    {
                        "name": "getAccount()",
                        "return_type": "abstractAccount",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Api.ApiOptions.HasGoogleSignInAccountOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasGoogleSignInAccountOptions",
                "description": "An interface for Api.ApiOptions that includes a GoogleSignInAccount",
                "methods": [
                    {
                        "name": "getGoogleSignInAccount()",
                        "return_type": "abstractGoogleSignInAccount",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Api.ApiOptions.HasOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasOptions",
                "description": "Base interface for Api.ApiOptions in Apis that have options.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.NoOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.NoOptions",
                "description": "Api.ApiOptions implementation for Apis that do not take any options.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.NotRequiredOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.NotRequiredOptions",
                "description": "Base interface for Api.ApiOptions that are not required, don't exist.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.Optional",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.Optional",
                "description": "Base interface for Api.ApiOptions that are optional.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.HasAccountOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasAccountOptions",
                "description": "An interface for Api.ApiOptions that include an account.",
                "methods": [
                    {
                        "name": "getAccount()",
                        "return_type": "abstractAccount",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Api.ApiOptions.HasGoogleSignInAccountOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasGoogleSignInAccountOptions",
                "description": "An interface for Api.ApiOptions that includes a GoogleSignInAccount",
                "methods": [
                    {
                        "name": "getGoogleSignInAccount()",
                        "return_type": "abstractGoogleSignInAccount",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Api.ApiOptions.HasOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.HasOptions",
                "description": "Base interface for Api.ApiOptions in Apis that have options.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.NoOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.NoOptions",
                "description": "Api.ApiOptions implementation for Apis that do not take any options.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.NotRequiredOptions",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.NotRequiredOptions",
                "description": "Base interface for Api.ApiOptions that are not required, don't exist.",
                "methods": []
            },
            {
                "name": "Api.ApiOptions.Optional",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/common/api/Api.ApiOptions.Optional",
                "description": "Base interface for Api.ApiOptions that are optional.",
                "methods": []
            }
        ]
    },
    {
        "name": "fitness",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fitness/package-summary",
        "classes": [
            {
                "name": "BleClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/BleClient",
                "description": "This class is deprecated. Use BluetoothManager directly. To get data from a Ble device into the Fit platform, use insertData(DataSet) to manually insert data obtained from local sensors. This API will be removed in the future, after which it will stop working for existing users.",
                "methods": [
                    {
                        "name": "claimBleDevice(String deviceAddress)",
                        "return_type": "Task<Void>",
                        "description": "Associates a BLE device with the current user, using only the device address."
                    },
                    {
                        "name": "claimBleDevice(BleDevice bleDevice)",
                        "return_type": "Task<Void>",
                        "description": "Associates a BLE device with the current user."
                    },
                    {
                        "name": "listClaimedBleDevices()",
                        "return_type": "Task<List<BleDevice>>",
                        "description": "Lists all BLE devices that are associated with the current user."
                    },
                    {
                        "name": "startBleScan(List<DataType> dataTypes, int timeoutSecs, BleScanCallback callback)",
                        "return_type": "Task<Void>",
                        "description": "Starts a scan for BLE devices compatible with Google Fit."
                    },
                    {
                        "name": "stopBleScan(BleScanCallback callback)",
                        "return_type": "Task<Boolean>",
                        "description": "Stops a BLE devices scan."
                    },
                    {
                        "name": "unclaimBleDevice(String deviceAddress)",
                        "return_type": "Task<Void>",
                        "description": "Disassociates a BLE device with the current user, using the device's address."
                    },
                    {
                        "name": "unclaimBleDevice(BleDevice bleDevice)",
                        "return_type": "Task<Void>",
                        "description": "Disassociates a BLE device with the current user."
                    }
                ]
            },
            {
                "name": "ConfigClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/ConfigClient",
                "description": "Client for accessing custom data types and settings in Google Fit.",
                "methods": [
                    {
                        "name": "createCustomDataType(DataTypeCreateRequest request)",
                        "return_type": "Task<DataType>",
                        "description": "This method is deprecated. Support for custom data types will be removed in a future version of Google Fit. Use one of the pre-defined data types listed in DataType."
                    },
                    {
                        "name": "disableFit()",
                        "return_type": "Task<Void>",
                        "description": "Disables Google Fit for an app."
                    },
                    {
                        "name": "readDataType(String dataTypeName)",
                        "return_type": "Task<DataType>",
                        "description": "This method is deprecated. Support for custom data types will be removed in a future version of Google Fit. Use one of the pre-defined data types listed in DataType."
                    }
                ]
            },
            {
                "name": "Fitness",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/Fitness",
                "description": "The main entry point to Google Fit APIs.",
                "methods": [
                    {
                        "name": "getBleClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticBleClient",
                        "description": "This method is deprecated. Use BluetoothManager directly."
                    },
                    {
                        "name": "getBleClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticBleClient",
                        "description": "This method is deprecated. Use BluetoothManager directly."
                    },
                    {
                        "name": "getConfigClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticConfigClient",
                        "description": "Create a new instance of ConfigClient for use in a non-activity Context."
                    },
                    {
                        "name": "getConfigClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticConfigClient",
                        "description": "Create a new instance of ConfigClient for use in an Activity."
                    },
                    {
                        "name": "getEndTime(Intent intent, TimeUnit timeUnit)",
                        "return_type": "static long",
                        "description": "Retrieves the end time extra from the given intent."
                    },
                    {
                        "name": "getGoalsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticGoalsClient",
                        "description": "Create a new instance of GoalsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getGoalsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticGoalsClient",
                        "description": "Create a new instance of GoalsClient for use in an Activity."
                    },
                    {
                        "name": "getHistoryClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticHistoryClient",
                        "description": "Create a new instance of HistoryClient for use in an Activity."
                    },
                    {
                        "name": "getHistoryClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticHistoryClient",
                        "description": "Create a new instance of HistoryClient for use in a non-activity Context."
                    },
                    {
                        "name": "getRecordingClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticRecordingClient",
                        "description": "Create a new instance of RecordingClient for use in an Activity."
                    },
                    {
                        "name": "getRecordingClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticRecordingClient",
                        "description": "Create a new instance of RecordingClient for use in a non-activity Context."
                    },
                    {
                        "name": "getSensorsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticSensorsClient",
                        "description": "Create a new instance of SensorsClient for use in an Activity."
                    },
                    {
                        "name": "getSensorsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticSensorsClient",
                        "description": "Create a new instance of SensorsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getSessionsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticSessionsClient",
                        "description": "Create a new instance of SessionsClient for use in an Activity."
                    },
                    {
                        "name": "getSessionsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticSessionsClient",
                        "description": "Create a new instance of SessionsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getStartTime(Intent intent, TimeUnit timeUnit)",
                        "return_type": "static long",
                        "description": "Retrieves the start time extra from the given intent."
                    }
                ]
            },
            {
                "name": "FitnessActivities",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/FitnessActivities",
                "description": "Constants representing different user activities, such as walking, running, and cycling.",
                "methods": [
                    {
                        "name": "getMimeType(String activity)",
                        "return_type": "staticString",
                        "description": "Returns the MIME type for a particular activity."
                    }
                ]
            },
            {
                "name": "FitnessOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/FitnessOptions",
                "description": "Fitness options for requesting permissions via requestPermissions(android.app.Activity, int, GoogleSignInAccount, GoogleSignInOptionsExtension).",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticFitnessOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getExtensionType()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getImpliedScopes()",
                        "return_type": "List<Scope>",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toBundle()",
                        "return_type": "Bundle",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FitnessOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/FitnessOptions.Builder",
                "description": "Builder to build FitnessOptions.",
                "methods": [
                    {
                        "name": "accessActivitySessions(int accessType)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for fitness activity sessions with read or write access."
                    },
                    {
                        "name": "accessSleepSessions(int accessType)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for sleep sessions with read or write access."
                    },
                    {
                        "name": "addDataType(DataType datatype, int accessType)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for given DataType with read or write access."
                    },
                    {
                        "name": "addDataType(DataType datatype)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for given DataType with read access."
                    },
                    {
                        "name": "build()",
                        "return_type": "FitnessOptions",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FitnessStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/FitnessStatusCodes",
                "description": "Google Fit specific status codes, for use in getStatusCode()",
                "methods": []
            },
            {
                "name": "GoalsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/GoalsClient",
                "description": "Client for reading fitness Goals created by users in Google Fit.",
                "methods": [
                    {
                        "name": "readCurrentGoals(GoalsReadRequest request)",
                        "return_type": "Task<List<Goal>>",
                        "description": "Reads current goals from the user's Google Fit store."
                    }
                ]
            },
            {
                "name": "HistoryApi.ViewIntentBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/HistoryApi.ViewIntentBuilder",
                "description": "Builder of intents to view data stored in Google Fit.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Intent",
                        "description": "Returns the built intent, which can be used with startActivity(Intent"
                    },
                    {
                        "name": "setDataSource(DataSource dataSource)",
                        "return_type": "HistoryApi.ViewIntentBuilder",
                        "description": "Sets the data source to display data for, if a specific data source is desired."
                    },
                    {
                        "name": "setPreferredApplication(String packageName)",
                        "return_type": "HistoryApi.ViewIntentBuilder",
                        "description": "Sets a preferred application to use for this intent."
                    },
                    {
                        "name": "setTimeInterval(long start, long end, TimeUnit timeUnit)",
                        "return_type": "HistoryApi.ViewIntentBuilder",
                        "description": "Sets the time interval to display data for."
                    }
                ]
            },
            {
                "name": "HistoryClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/HistoryClient",
                "description": "Client for inserting, deleting, and reading data in Google Fit.",
                "methods": [
                    {
                        "name": "deleteData(DataDeleteRequest request)",
                        "return_type": "Task<Void>",
                        "description": "Deletes data from the user's Google Fit history."
                    },
                    {
                        "name": "insertData(DataSet dataSet)",
                        "return_type": "Task<Void>",
                        "description": "Inserts data collected from a data source directly into the user's Google Fit history, on behalf of the current application."
                    },
                    {
                        "name": "readDailyTotal(DataType dataType)",
                        "return_type": "Task<DataSet>",
                        "description": "Reads the current daily total for the given dataType."
                    },
                    {
                        "name": "readDailyTotalFromLocalDevice(DataType dataType)",
                        "return_type": "Task<DataSet>",
                        "description": "Reads the current daily total for the given dataType from the local device only."
                    },
                    {
                        "name": "readData(DataReadRequest request)",
                        "return_type": "Task<DataReadResponse>",
                        "description": "Reads data from the user's Google Fit history."
                    },
                    {
                        "name": "registerDataUpdateListener(DataUpdateListenerRegistrationRequest request)",
                        "return_type": "Task<Void>",
                        "description": "Adds a PendingIntent listener to Google fitness store."
                    },
                    {
                        "name": "unregisterDataUpdateListener(PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes PendingIntent, previously registered for receiving data update notifications, from Google Fitness Store."
                    },
                    {
                        "name": "updateData(DataUpdateRequest request)",
                        "return_type": "Task<Void>",
                        "description": "Updates data collected from a data source directly into the user's Google Fit history, on behalf of the current application."
                    }
                ]
            },
            {
                "name": "RecordingClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/RecordingClient",
                "description": "Client which enables low-power, always-on background collection of sensor data into the Google Fit store.",
                "methods": [
                    {
                        "name": "listSubscriptions()",
                        "return_type": "Task<List<Subscription>>",
                        "description": "Reads all existing subscriptions for the current application."
                    },
                    {
                        "name": "listSubscriptions(DataType dataType)",
                        "return_type": "Task<List<Subscription>>",
                        "description": "Reads all existing subscriptions for the current application to a particular data type."
                    },
                    {
                        "name": "subscribe(DataSource dataSource)",
                        "return_type": "Task<Void>",
                        "description": "Subscribe to background collection of data from a specific source on behalf of the current application."
                    },
                    {
                        "name": "subscribe(DataType dataType)",
                        "return_type": "Task<Void>",
                        "description": "Subscribe to background collection of data of a specific type on behalf of the current application."
                    },
                    {
                        "name": "unsubscribe(Subscription subscription)",
                        "return_type": "Task<Void>",
                        "description": "Unsubscribes from background data collection for the current application."
                    },
                    {
                        "name": "unsubscribe(DataType dataType)",
                        "return_type": "Task<Void>",
                        "description": "Unsubscribes from background data collection for the current application for a particular data type."
                    },
                    {
                        "name": "unsubscribe(DataSource dataSource)",
                        "return_type": "Task<Void>",
                        "description": "Unsubscribes from background data collection for the current application for a particular data source."
                    }
                ]
            },
            {
                "name": "SensorsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/SensorsClient",
                "description": "Client which exposes different sources of fitness data in local and connected devices, and delivers live events to listeners.",
                "methods": [
                    {
                        "name": "add(SensorRequest request, OnDataPointListener listener)",
                        "return_type": "Task<Void>",
                        "description": "Adds a data point listener to a sensor data source."
                    },
                    {
                        "name": "add(SensorRequest request, PendingIntent intent)",
                        "return_type": "Task<Void>",
                        "description": "Adds a PendingIntent listener to a sensor data source."
                    },
                    {
                        "name": "findDataSources(DataSourcesRequest request)",
                        "return_type": "Task<List<DataSource>>",
                        "description": "Finds all available data sources, on the device and remotely."
                    },
                    {
                        "name": "remove(PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes PendingIntent listener from a sensor data source."
                    },
                    {
                        "name": "remove(OnDataPointListener listener)",
                        "return_type": "Task<Boolean>",
                        "description": "Removes a listener from a sensor data source."
                    }
                ]
            },
            {
                "name": "SessionsApi.ViewIntentBuilder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/SessionsApi.ViewIntentBuilder",
                "description": "Builder of intents to view sessions stored in Google Fit.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Intent",
                        "description": "Returns the built intent, which can be used with startActivity(Intent"
                    },
                    {
                        "name": "setPreferredApplication(String packageName)",
                        "return_type": "SessionsApi.ViewIntentBuilder",
                        "description": "Sets a preferred application to use for this intent."
                    },
                    {
                        "name": "setSession(Session session)",
                        "return_type": "SessionsApi.ViewIntentBuilder",
                        "description": "Sets the session to display data for."
                    }
                ]
            },
            {
                "name": "SessionsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/SessionsClient",
                "description": "Client for creating and managing sessions of user activity in Google Fit.",
                "methods": [
                    {
                        "name": "insertSession(SessionInsertRequest request)",
                        "return_type": "Task<Void>",
                        "description": "Inserts specified Session and corresponding data into the user's Google Fit store on behalf of the current application."
                    },
                    {
                        "name": "readSession(SessionReadRequest request)",
                        "return_type": "Task<SessionReadResponse>",
                        "description": "Reads data from the user's Google Fit store of the specific type(s"
                    },
                    {
                        "name": "registerForSessions(PendingIntent intent)",
                        "return_type": "Task<Void>",
                        "description": "Registers for notifications of session start and end events using a PendingIntent."
                    },
                    {
                        "name": "startSession(Session session)",
                        "return_type": "Task<Void>",
                        "description": "Starts a new active session for the current application."
                    },
                    {
                        "name": "stopSession(String identifier)",
                        "return_type": "Task<List<Session>>",
                        "description": "Stops active sessions for the current application."
                    },
                    {
                        "name": "unregisterForSessions(PendingIntent intent)",
                        "return_type": "Task<Void>",
                        "description": "Unregisters from session start and end notifications using a PendingIntent."
                    }
                ]
            },
            {
                "name": "BleApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/BleApi",
                "description": "This interface is deprecated. Use BluetoothManager directly. To get data from a Ble device into the Fit platform, use insertData(GoogleApiClient, DataSet) to manually insert data obtained from local sensors. This API will be removed in the future, after which it will stop working for existing users.",
                "methods": [
                    {
                        "name": "claimBleDevice(GoogleApiClient client, String deviceAddress)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Associates a BLE device with the current user, using only the device address."
                    },
                    {
                        "name": "claimBleDevice(GoogleApiClient client, BleDevice bleDevice)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Associates a BLE device with the current user."
                    },
                    {
                        "name": "listClaimedBleDevices(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<BleDevicesResult>",
                        "description": "Lists all BLE devices that are associated with the current user."
                    },
                    {
                        "name": "startBleScan(GoogleApiClient client, StartBleScanRequest request)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use startBleScan(List, int, BleScanCallback"
                    },
                    {
                        "name": "stopBleScan(GoogleApiClient client, BleScanCallback callback)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Stops a BLE devices scan."
                    },
                    {
                        "name": "unclaimBleDevice(GoogleApiClient client, String deviceAddress)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Disassociates a BLE device with the current user, using the device's address."
                    },
                    {
                        "name": "unclaimBleDevice(GoogleApiClient client, BleDevice bleDevice)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Disassociates a BLE device with the current user."
                    }
                ]
            },
            {
                "name": "ConfigApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/ConfigApi",
                "description": "This interface is deprecated. Use ConfigClient.",
                "methods": [
                    {
                        "name": "createCustomDataType(GoogleApiClient client, DataTypeCreateRequest request)",
                        "return_type": "abstractPendingResult<DataTypeResult>",
                        "description": "This method is deprecated. Support for custom data types will be removed in a future version of Google Fit. Use one of the pre-defined data types listed in DataType."
                    },
                    {
                        "name": "disableFit(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Disables Google Fit for an app."
                    },
                    {
                        "name": "readDataType(GoogleApiClient client, String dataTypeName)",
                        "return_type": "abstractPendingResult<DataTypeResult>",
                        "description": "This method is deprecated. Support for custom data types will be removed in a future version of Google Fit. Use one of the pre-defined data types listed in DataType."
                    }
                ]
            },
            {
                "name": "GoalsApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/GoalsApi",
                "description": "This interface is deprecated. Use GoalsClient.",
                "methods": [
                    {
                        "name": "readCurrentGoals(GoogleApiClient client, GoalsReadRequest request)",
                        "return_type": "abstractPendingResult<GoalsResult>",
                        "description": "Reads current goals from the user's Google Fit store."
                    }
                ]
            },
            {
                "name": "HistoryApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/HistoryApi",
                "description": "This interface is deprecated. Use HistoryClient.",
                "methods": [
                    {
                        "name": "deleteData(GoogleApiClient client, DataDeleteRequest request)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Deletes data from the user's Google Fit history."
                    },
                    {
                        "name": "insertData(GoogleApiClient client, DataSet dataSet)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Inserts data collected from a data source directly into the user's Google Fit history, on behalf of the current application."
                    },
                    {
                        "name": "readDailyTotal(GoogleApiClient client, DataType dataType)",
                        "return_type": "abstractPendingResult<DailyTotalResult>",
                        "description": "Reads the current daily total for the given dataType."
                    },
                    {
                        "name": "readDailyTotalFromLocalDevice(GoogleApiClient client, DataType dataType)",
                        "return_type": "abstractPendingResult<DailyTotalResult>",
                        "description": "Reads the current daily total for the given dataType from the local device only."
                    },
                    {
                        "name": "readData(GoogleApiClient client, DataReadRequest request)",
                        "return_type": "abstractPendingResult<DataReadResult>",
                        "description": "Reads data from the user's Google Fit history."
                    },
                    {
                        "name": "registerDataUpdateListener(GoogleApiClient client, DataUpdateListenerRegistrationRequest request)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Adds a PendingIntent listener to Google fitness store."
                    },
                    {
                        "name": "unregisterDataUpdateListener(GoogleApiClient client, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes PendingIntent, previously registered for receiving data update notifications, from Google Fitness Store."
                    },
                    {
                        "name": "updateData(GoogleApiClient client, DataUpdateRequest request)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Updates data collected from a data source directly into the user's Google Fit history, on behalf of the current application."
                    }
                ]
            },
            {
                "name": "RecordingApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/RecordingApi",
                "description": "This interface is deprecated. Use RecordingClient.",
                "methods": [
                    {
                        "name": "listSubscriptions(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<ListSubscriptionsResult>",
                        "description": "Reads all existing subscriptions for the current application."
                    },
                    {
                        "name": "listSubscriptions(GoogleApiClient client, DataType dataType)",
                        "return_type": "abstractPendingResult<ListSubscriptionsResult>",
                        "description": "Reads all existing subscriptions for the current application to a particular data type."
                    },
                    {
                        "name": "subscribe(GoogleApiClient client, DataType dataType)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Subscribe to background collection of data of a specific type on behalf of the current application."
                    },
                    {
                        "name": "subscribe(GoogleApiClient client, DataSource dataSource)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Subscribe to background collection of data from a specific source on behalf of the current application."
                    },
                    {
                        "name": "unsubscribe(GoogleApiClient client, DataSource dataSource)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Unsubscribes from background data collection for the current application for a particular data source."
                    },
                    {
                        "name": "unsubscribe(GoogleApiClient client, DataType dataType)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Unsubscribes from background data collection for the current application for a particular data type."
                    },
                    {
                        "name": "unsubscribe(GoogleApiClient client, Subscription subscription)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Unsubscribes from background data collection for the current application."
                    }
                ]
            },
            {
                "name": "SensorsApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/SensorsApi",
                "description": "This interface is deprecated. Use SensorsClient.",
                "methods": [
                    {
                        "name": "add(GoogleApiClient client, SensorRequest request, OnDataPointListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Adds a data point listener to a sensor data source."
                    },
                    {
                        "name": "add(GoogleApiClient client, SensorRequest request, PendingIntent intent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Adds a PendingIntent listener to a sensor data source."
                    },
                    {
                        "name": "findDataSources(GoogleApiClient client, DataSourcesRequest request)",
                        "return_type": "abstractPendingResult<DataSourcesResult>",
                        "description": "Finds all available data sources, on the device and remotely."
                    },
                    {
                        "name": "remove(GoogleApiClient client, OnDataPointListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a listener from a sensor data source."
                    },
                    {
                        "name": "remove(GoogleApiClient client, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes PendingIntent listener from a sensor data source."
                    }
                ]
            },
            {
                "name": "SessionsApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/SessionsApi",
                "description": "This interface is deprecated. Use SessionsClient.",
                "methods": [
                    {
                        "name": "insertSession(GoogleApiClient client, SessionInsertRequest request)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Inserts specified Session and corresponding data into the user's Google Fit store on behalf of the current application."
                    },
                    {
                        "name": "readSession(GoogleApiClient client, SessionReadRequest request)",
                        "return_type": "abstractPendingResult<SessionReadResult>",
                        "description": "Reads data from the user's Google Fit store of the specific type(s"
                    },
                    {
                        "name": "registerForSessions(GoogleApiClient client, PendingIntent intent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers for notifications of session start and end events using a PendingIntent."
                    },
                    {
                        "name": "startSession(GoogleApiClient client, Session session)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Starts a new active session for the current application."
                    },
                    {
                        "name": "stopSession(GoogleApiClient client, String identifier)",
                        "return_type": "abstractPendingResult<SessionStopResult>",
                        "description": "Stops active sessions for the current application."
                    },
                    {
                        "name": "unregisterForSessions(GoogleApiClient client, PendingIntent intent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Unregisters from session start and end notifications using a PendingIntent."
                    }
                ]
            },
            {
                "name": "FitnessOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/FitnessOptions.Builder",
                "description": "Builder to build FitnessOptions.",
                "methods": [
                    {
                        "name": "accessActivitySessions(int accessType)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for fitness activity sessions with read or write access."
                    },
                    {
                        "name": "accessSleepSessions(int accessType)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for sleep sessions with read or write access."
                    },
                    {
                        "name": "addDataType(DataType datatype, int accessType)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for given DataType with read or write access."
                    },
                    {
                        "name": "addDataType(DataType datatype)",
                        "return_type": "FitnessOptions.Builder",
                        "description": "Builder to build FitnessOptions for given DataType with read access."
                    },
                    {
                        "name": "build()",
                        "return_type": "FitnessOptions",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HistoryApi.ViewIntentBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/HistoryApi.ViewIntentBuilder",
                "description": "Builder of intents to view data stored in Google Fit.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Intent",
                        "description": "Returns the built intent, which can be used with startActivity(Intent"
                    },
                    {
                        "name": "setDataSource(DataSource dataSource)",
                        "return_type": "HistoryApi.ViewIntentBuilder",
                        "description": "Sets the data source to display data for, if a specific data source is desired."
                    },
                    {
                        "name": "setPreferredApplication(String packageName)",
                        "return_type": "HistoryApi.ViewIntentBuilder",
                        "description": "Sets a preferred application to use for this intent."
                    },
                    {
                        "name": "setTimeInterval(long start, long end, TimeUnit timeUnit)",
                        "return_type": "HistoryApi.ViewIntentBuilder",
                        "description": "Sets the time interval to display data for."
                    }
                ]
            },
            {
                "name": "SessionsApi.ViewIntentBuilder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/SessionsApi.ViewIntentBuilder",
                "description": "Builder of intents to view sessions stored in Google Fit.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Intent",
                        "description": "Returns the built intent, which can be used with startActivity(Intent"
                    },
                    {
                        "name": "setPreferredApplication(String packageName)",
                        "return_type": "SessionsApi.ViewIntentBuilder",
                        "description": "Sets a preferred application to use for this intent."
                    },
                    {
                        "name": "setSession(Session session)",
                        "return_type": "SessionsApi.ViewIntentBuilder",
                        "description": "Sets the session to display data for."
                    }
                ]
            }
        ]
    },
    {
        "name": "u2f",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/u2f/package-summary",
        "classes": [
            {
                "name": "U2fApiClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/U2fApiClient",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "getRegisterIntent(RegisterRequestParams requestParams)",
                        "return_type": "Task<U2fPendingIntent>",
                        "description": "Creates a Task with U2fPendingIntent."
                    },
                    {
                        "name": "getSignIntent(SignRequestParams requestParams)",
                        "return_type": "Task<U2fPendingIntent>",
                        "description": "Creates a Task with U2fPendingIntent."
                    }
                ]
            },
            {
                "name": "U2fPendingIntent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fido/u2f/U2fPendingIntent",
                "description": "This interface is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "hasPendingIntent()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if an Activity can launch the returned PendingIntent."
                    },
                    {
                        "name": "launchPendingIntent(Activity activity, int requestCode)",
                        "return_type": "abstract void",
                        "description": "Launches the Pending intent"
                    }
                ]
            }
        ]
    },
    {
        "name": "analytics",
        "path": "https://developers.google.com/android/reference/com/google/firebase/analytics/package-summary",
        "classes": [
            {
                "name": "FirebaseAnalytics",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics",
                "description": "The top level Firebase Analytics singleton that provides methods for logging events and setting user properties.",
                "methods": [
                    {
                        "name": "getAppInstanceId()",
                        "return_type": "Task<String>",
                        "description": "Retrieves the app instance id from the service, or null if FirebaseAnalytics.ConsentType.ANALYTICS_STORAGE has been set to FirebaseAnalytics.ConsentStatus.DENIED."
                    },
                    {
                        "name": "getInstance(Context context)",
                        "return_type": "staticFirebaseAnalytics",
                        "description": "Returns the singleton FirebaseAnalytics interface."
                    },
                    {
                        "name": "logEvent(String name, Bundle params)",
                        "return_type": "void",
                        "description": "Logs an app event."
                    },
                    {
                        "name": "resetAnalyticsData()",
                        "return_type": "void",
                        "description": "Clears all analytics data for this app from the device and resets the app instance id."
                    },
                    {
                        "name": "setAnalyticsCollectionEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets whether analytics collection is enabled for this app on this device."
                    },
                    {
                        "name": "setConsent(Map<FirebaseAnalytics.ConsentType, FirebaseAnalytics.ConsentStatus> consentSettings)",
                        "return_type": "void",
                        "description": "Sets the applicable end user consent state (e.g., for device identifiers"
                    },
                    {
                        "name": "setCurrentScreen(Activity activity, String screenName, String screenClassOverride)",
                        "return_type": "void",
                        "description": "This method is deprecated. To log screen view events, call mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SCREEN_VIEW, params"
                    },
                    {
                        "name": "setDefaultEventParameters(Bundle parameters)",
                        "return_type": "void",
                        "description": "Adds parameters that will be set on every event logged from the SDK, including automatic ones."
                    },
                    {
                        "name": "setSessionTimeoutDuration(long milliseconds)",
                        "return_type": "void",
                        "description": "Sets the duration of inactivity that terminates the current session. The default value is 1800000 (30 minutes"
                    },
                    {
                        "name": "setUserId(String id)",
                        "return_type": "void",
                        "description": "Sets the user ID property."
                    },
                    {
                        "name": "setUserProperty(String name, String value)",
                        "return_type": "void",
                        "description": "Sets a user property to a given value."
                    }
                ]
            },
            {
                "name": "FirebaseAnalytics.Event",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.Event",
                "description": "An Event is an important occurrence in your app that you want to measure.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.Param",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.Param",
                "description": "Params supply information that contextualize Events.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.UserProperty",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.UserProperty",
                "description": "A UserProperty is an attribute that describes the app-user.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.ConsentStatus",
                "type_obj": "enum",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.ConsentStatus",
                "description": "The status value of the consent type.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.ConsentType",
                "type_obj": "enum",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.ConsentType",
                "description": "The type of consent to set.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.Event",
                "type_obj": "class",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.Event",
                "description": "An Event is an important occurrence in your app that you want to measure.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.Param",
                "type_obj": "class",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.Param",
                "description": "Params supply information that contextualize Events.",
                "methods": []
            },
            {
                "name": "FirebaseAnalytics.UserProperty",
                "type_obj": "class",
                "link": "/android/reference/com/google/firebase/analytics/FirebaseAnalytics.UserProperty",
                "description": "A UserProperty is an attribute that describes the app-user.",
                "methods": []
            }
        ]
    },
    {
        "name": "vision",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/vision/package-summary",
        "classes": [
            {
                "name": "CameraSource",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource",
                "description": "Manages the camera in conjunction with an underlying Detector.",
                "methods": [
                    {
                        "name": "getCameraFacing()",
                        "return_type": "int",
                        "description": "Returns the selected camera; one of CAMERA_FACING_BACK or CAMERA_FACING_FRONT."
                    },
                    {
                        "name": "getPreviewSize()",
                        "return_type": "Size",
                        "description": "Returns the preview size that is currently in use by the underlying camera."
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Stops the camera and releases the resources of the camera and underlying detector."
                    },
                    {
                        "name": "start(SurfaceHolder surfaceHolder)",
                        "return_type": "CameraSource",
                        "description": "Opens the camera and starts sending preview frames to the underlying detector."
                    },
                    {
                        "name": "start()",
                        "return_type": "CameraSource",
                        "description": "Opens the camera and starts sending preview frames to the underlying detector."
                    },
                    {
                        "name": "stop()",
                        "return_type": "void",
                        "description": "Closes the camera and stops sending frames to the underlying frame detector."
                    },
                    {
                        "name": "takePicture(CameraSource.ShutterCallback shutter, CameraSource.PictureCallback jpeg)",
                        "return_type": "void",
                        "description": "Initiates taking a picture, which happens asynchronously."
                    }
                ]
            },
            {
                "name": "CameraSource.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource.Builder",
                "description": "Builder for configuring and creating an associated camera source.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CameraSource",
                        "description": "Creates an instance of the camera source."
                    },
                    {
                        "name": "setAutoFocusEnabled(boolean autoFocusEnabled)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets whether to enable camera auto focus."
                    },
                    {
                        "name": "setFacing(int facing)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets the camera to use (either CameraSource.CAMERA_FACING_BACK or CameraSource.CAMERA_FACING_FRONT"
                    },
                    {
                        "name": "setFocusMode(String focusMode)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets which FocusMode will be used for camera focus."
                    },
                    {
                        "name": "setRequestedFps(float fps)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets the requested frame rate in frames per second."
                    },
                    {
                        "name": "setRequestedPreviewSize(int width, int height)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets the desired width and height of the camera frames in pixels."
                    }
                ]
            },
            {
                "name": "Detector<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/Detector",
                "description": "Detector is the base class for implementing specific detector instances, such as a barcode detector or face detector.",
                "methods": [
                    {
                        "name": "detect(Frame frame)",
                        "return_type": "abstractSparseArray<T>",
                        "description": "Analyzes the supplied frame to find target item instances (e.g., the face detector finds faces"
                    },
                    {
                        "name": "isOperational()",
                        "return_type": "boolean",
                        "description": "Indicates whether the detector has all of the required dependencies available locally in order to do detection."
                    },
                    {
                        "name": "receiveFrame(Frame frame)",
                        "return_type": "void",
                        "description": "Pipeline method (see class level documentation above"
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Shuts down the detector, releasing any underlying resources."
                    },
                    {
                        "name": "setFocus(int id)",
                        "return_type": "boolean",
                        "description": "Sets the ID of the detected item in which to exclusively track in future use of the detector."
                    },
                    {
                        "name": "setProcessor(Processor<T> processor)",
                        "return_type": "void",
                        "description": "Pipeline method (see class level documentation above"
                    }
                ]
            },
            {
                "name": "Detector.Detections<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/Detector.Detections",
                "description": "Detection result object containing both detected items and the associated frame metadata.",
                "methods": [
                    {
                        "name": "detectorIsOperational()",
                        "return_type": "boolean",
                        "description": "Returns true if the detector is operational, false if it is not operational."
                    },
                    {
                        "name": "getDetectedItems()",
                        "return_type": "SparseArray<T>",
                        "description": "Returns a collection of the detected items that were identified in the frame."
                    },
                    {
                        "name": "getFrameMetadata()",
                        "return_type": "Frame.Metadata",
                        "description": "Returns the metadata of the associated frame in which the detection originated."
                    }
                ]
            },
            {
                "name": "FocusingProcessor<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/FocusingProcessor",
                "description": "Base class for implementing a processor which filters the set of detection results, consistently delivering a single detected item to an associated Tracker.",
                "methods": [
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Notifies the associated tracker that tracking has completed."
                    },
                    {
                        "name": "selectFocus(Detections<T> detections)",
                        "return_type": "abstract int",
                        "description": "Subclasses implement this method to select the item on which to focus."
                    }
                ]
            },
            {
                "name": "Frame",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/Frame",
                "description": "Image data with associated metadata.",
                "methods": [
                    {
                        "name": "getBitmap()",
                        "return_type": "Bitmap",
                        "description": "Returns the bitmap which was specified in creating this frame, or null if no bitmap was used to create this frame."
                    },
                    {
                        "name": "getGrayscaleImageData()",
                        "return_type": "ByteBuffer",
                        "description": "Returns the grayscale version of the frame data, with one byte per pixel."
                    },
                    {
                        "name": "getMetadata()",
                        "return_type": "Frame.Metadata",
                        "description": "Returns the metadata associated with the frame."
                    }
                ]
            },
            {
                "name": "Frame.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/Frame.Builder",
                "description": "Builder for creating a frame instance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Frame",
                        "description": "Creates the frame instance."
                    },
                    {
                        "name": "setBitmap(Bitmap image)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the image data for the frame from a supplied bitmap."
                    },
                    {
                        "name": "setId(int id)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the frame ID."
                    },
                    {
                        "name": "setImageData(ByteBuffer data, int width, int height, int format)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the image data from the supplied byte buffer, size, and format."
                    },
                    {
                        "name": "setRotation(int rotation)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the image rotation, indicating the rotation from the upright orientation."
                    },
                    {
                        "name": "setTimestampMillis(long timestampMillis)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the frame timestamp, in milliseconds."
                    }
                ]
            },
            {
                "name": "Frame.Metadata",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/Frame.Metadata",
                "description": "Frame metadata, describing the image dimensions, rotation, and sequencing information.",
                "methods": [
                    {
                        "name": "getFormat()",
                        "return_type": "int",
                        "description": "Returns the format of this image if image data is set."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "int",
                        "description": "Returns the frame height."
                    },
                    {
                        "name": "getId()",
                        "return_type": "int",
                        "description": "Returns the frame ID."
                    },
                    {
                        "name": "getRotation()",
                        "return_type": "int",
                        "description": "Returns the image rotation, indicating the counter-clockwise rotation from the upright orientation."
                    },
                    {
                        "name": "getTimestampMillis()",
                        "return_type": "long",
                        "description": "Returns the timestamp, in milliseconds."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "int",
                        "description": "Returns the frame width."
                    }
                ]
            },
            {
                "name": "MultiDetector",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/MultiDetector",
                "description": "A multi-detector is used to combine multiple detectors, so that multiple detectors can be used together on a frame or frames received from a source within a pipeline.",
                "methods": [
                    {
                        "name": "detect(Frame frame)",
                        "return_type": "SparseArray<Object>",
                        "description": "Runs detection on the supplied frame with each underlying detector, returning the combined detection results from all detectors."
                    },
                    {
                        "name": "isOperational()",
                        "return_type": "boolean",
                        "description": "Indicates whether the detector has all of the required dependencies available locally in order to do detection."
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Releases the underlying resources associated with the multi-detector and its underlying detectors."
                    },
                    {
                        "name": "setProcessor(Processor<Object> processor)",
                        "return_type": "void",
                        "description": "This method is not supported on MultiDetector."
                    }
                ]
            },
            {
                "name": "MultiDetector.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/MultiDetector.Builder",
                "description": "Builder for creating MultiDetector instances.",
                "methods": [
                    {
                        "name": "add(Detector<? extends Object> detector)",
                        "return_type": "MultiDetector.Builder",
                        "description": "Adds an underlying detector."
                    },
                    {
                        "name": "build()",
                        "return_type": "MultiDetector",
                        "description": "Builds and returns the MultiDetector instance."
                    }
                ]
            },
            {
                "name": "MultiProcessor<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/MultiProcessor",
                "description": "Detection processor which distributes the items of a detection result among individual trackers.",
                "methods": [
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Frees the resources associated with this detection processor."
                    }
                ]
            },
            {
                "name": "MultiProcessor.Builder<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/MultiProcessor.Builder",
                "description": "Builder for creating a multiprocessor instance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MultiProcessor<T>",
                        "description": "Builds the multiprocessor instance."
                    },
                    {
                        "name": "setMaxGapFrames(int maxGapFrames)",
                        "return_type": "Builder<T>",
                        "description": "Sets the maximum allowable gap for inferring whether a detected item will never be seen again in the series of frames that are being processed by the detector."
                    }
                ]
            },
            {
                "name": "Tracker<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/Tracker",
                "description": "A tracker is used to receive notifications for a detected item over time.",
                "methods": [
                    {
                        "name": "onDone()",
                        "return_type": "void",
                        "description": "Called to indicate that the item associated with the ID previously reported via onNewItem(int, Object"
                    },
                    {
                        "name": "onMissing(Detections<T> detections)",
                        "return_type": "void",
                        "description": "Called if either the tracked item was not detected at all in a frame, or if the specific item identity associated with the tracker is not present in the current frame."
                    },
                    {
                        "name": "onNewItem(int id, T item)",
                        "return_type": "void",
                        "description": "This method is called to initially assert a new item when it is detected."
                    },
                    {
                        "name": "onUpdate(Detections<T> detections, T item)",
                        "return_type": "void",
                        "description": "As an item is detected over time, this method is called to give an update for the item in the context of the overall detection."
                    }
                ]
            },
            {
                "name": "CameraSource.PictureCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource.PictureCallback",
                "description": "Callback interface used to supply image data from a photo capture.",
                "methods": [
                    {
                        "name": "onPictureTaken(byte[] data)",
                        "return_type": "abstract void",
                        "description": "Called when image data is available after a picture is taken."
                    }
                ]
            },
            {
                "name": "CameraSource.ShutterCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource.ShutterCallback",
                "description": "Callback interface used to signal the moment of actual image capture.",
                "methods": [
                    {
                        "name": "onShutter()",
                        "return_type": "abstract void",
                        "description": "Called as near as possible to the moment when a photo is captured from the sensor."
                    }
                ]
            },
            {
                "name": "Detector.Processor<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/vision/Detector.Processor",
                "description": "Interface for defining a post-processing action to be executed for each detection, when using the detector as part of a pipeline (see the class level docs above).",
                "methods": [
                    {
                        "name": "receiveDetections(Detections<T> detections)",
                        "return_type": "abstract void",
                        "description": "Called by the detector to deliver detection results to the processor."
                    },
                    {
                        "name": "release()",
                        "return_type": "abstract void",
                        "description": "Shuts down and releases associated processor resources."
                    }
                ]
            },
            {
                "name": "MultiProcessor.Factory<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/vision/MultiProcessor.Factory",
                "description": "Factory for creating new tracker instances.",
                "methods": [
                    {
                        "name": "create(T item)",
                        "return_type": "abstractTracker<T>",
                        "description": "Creates a tracker for receiving notifications for an associated item."
                    }
                ]
            },
            {
                "name": "CameraSource.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource.Builder",
                "description": "Builder for configuring and creating an associated camera source.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CameraSource",
                        "description": "Creates an instance of the camera source."
                    },
                    {
                        "name": "setAutoFocusEnabled(boolean autoFocusEnabled)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets whether to enable camera auto focus."
                    },
                    {
                        "name": "setFacing(int facing)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets the camera to use (either CameraSource.CAMERA_FACING_BACK or CameraSource.CAMERA_FACING_FRONT"
                    },
                    {
                        "name": "setFocusMode(String focusMode)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets which FocusMode will be used for camera focus."
                    },
                    {
                        "name": "setRequestedFps(float fps)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets the requested frame rate in frames per second."
                    },
                    {
                        "name": "setRequestedPreviewSize(int width, int height)",
                        "return_type": "CameraSource.Builder",
                        "description": "Sets the desired width and height of the camera frames in pixels."
                    }
                ]
            },
            {
                "name": "CameraSource.PictureCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource.PictureCallback",
                "description": "Callback interface used to supply image data from a photo capture.",
                "methods": [
                    {
                        "name": "onPictureTaken(byte[] data)",
                        "return_type": "abstract void",
                        "description": "Called when image data is available after a picture is taken."
                    }
                ]
            },
            {
                "name": "CameraSource.ShutterCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/vision/CameraSource.ShutterCallback",
                "description": "Callback interface used to signal the moment of actual image capture.",
                "methods": [
                    {
                        "name": "onShutter()",
                        "return_type": "abstract void",
                        "description": "Called as near as possible to the moment when a photo is captured from the sensor."
                    }
                ]
            },
            {
                "name": "Detector.Detections<T>",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/Detector.Detections<T>",
                "description": "Detection result object containing both detected items and the associated frame metadata.",
                "methods": []
            },
            {
                "name": "Detector.Processor<T>",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/vision/Detector.Processor<T>",
                "description": "Interface for defining a post-processing action to be executed for each detection, when using the detector as part of a pipeline (see the class level docs above).",
                "methods": []
            },
            {
                "name": "Frame.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/Frame.Builder",
                "description": "Builder for creating a frame instance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Frame",
                        "description": "Creates the frame instance."
                    },
                    {
                        "name": "setBitmap(Bitmap image)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the image data for the frame from a supplied bitmap."
                    },
                    {
                        "name": "setId(int id)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the frame ID."
                    },
                    {
                        "name": "setImageData(ByteBuffer data, int width, int height, int format)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the image data from the supplied byte buffer, size, and format."
                    },
                    {
                        "name": "setRotation(int rotation)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the image rotation, indicating the rotation from the upright orientation."
                    },
                    {
                        "name": "setTimestampMillis(long timestampMillis)",
                        "return_type": "Frame.Builder",
                        "description": "Sets the frame timestamp, in milliseconds."
                    }
                ]
            },
            {
                "name": "Frame.Metadata",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/Frame.Metadata",
                "description": "Frame metadata, describing the image dimensions, rotation, and sequencing information.",
                "methods": [
                    {
                        "name": "getFormat()",
                        "return_type": "int",
                        "description": "Returns the format of this image if image data is set."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "int",
                        "description": "Returns the frame height."
                    },
                    {
                        "name": "getId()",
                        "return_type": "int",
                        "description": "Returns the frame ID."
                    },
                    {
                        "name": "getRotation()",
                        "return_type": "int",
                        "description": "Returns the image rotation, indicating the counter-clockwise rotation from the upright orientation."
                    },
                    {
                        "name": "getTimestampMillis()",
                        "return_type": "long",
                        "description": "Returns the timestamp, in milliseconds."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "int",
                        "description": "Returns the frame width."
                    }
                ]
            },
            {
                "name": "MultiDetector.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/MultiDetector.Builder",
                "description": "Builder for creating MultiDetector instances.",
                "methods": [
                    {
                        "name": "add(Detector<? extends Object> detector)",
                        "return_type": "MultiDetector.Builder",
                        "description": "Adds an underlying detector."
                    },
                    {
                        "name": "build()",
                        "return_type": "MultiDetector",
                        "description": "Builds and returns the MultiDetector instance."
                    }
                ]
            },
            {
                "name": "MultiProcessor.Builder<T>",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/MultiProcessor.Builder<T>",
                "description": "Builder for creating a multiprocessor instance.",
                "methods": []
            },
            {
                "name": "MultiProcessor.Factory<T>",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/vision/MultiProcessor.Factory<T>",
                "description": "Factory for creating new tracker instances.",
                "methods": []
            }
        ]
    },
    {
        "name": "identifier",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/identifier/package-summary",
        "classes": [
            {
                "name": "AdvertisingIdClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient",
                "description": "Helper library for retrieval of advertising ID and related information such as the limit ad tracking setting.",
                "methods": [
                    {
                        "name": "getAdvertisingIdInfo(Context context)",
                        "return_type": "staticAdvertisingIdClient.Info",
                        "description": "Retrieves the user's advertising ID and limit ad tracking preference."
                    }
                ]
            },
            {
                "name": "AdvertisingIdClient.Info",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.Info",
                "description": "Includes both the advertising ID as well as the limit ad tracking setting.",
                "methods": [
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Retrieves the advertising ID."
                    },
                    {
                        "name": "isLimitAdTrackingEnabled()",
                        "return_type": "boolean",
                        "description": "Retrieves whether the user has limit ad tracking enabled or not."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AdvertisingIdClient.Info",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.Info",
                "description": "Includes both the advertising ID as well as the limit ad tracking setting.",
                "methods": [
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Retrieves the advertising ID."
                    },
                    {
                        "name": "isLimitAdTrackingEnabled()",
                        "return_type": "boolean",
                        "description": "Retrieves whether the user has limit ad tracking enabled or not."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "tasks",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/tasks/package-summary",
        "classes": [
            {
                "name": "CancellationToken",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tasks/CancellationToken",
                "description": "Propagates notification that operations should be canceled.",
                "methods": [
                    {
                        "name": "isCancellationRequested()",
                        "return_type": "abstract boolean",
                        "description": "Checks if cancellation has been requested from the CancellationTokenSource."
                    },
                    {
                        "name": "onCanceledRequested(OnTokenCanceledListener listener)",
                        "return_type": "abstractCancellationToken",
                        "description": "Adds an OnTokenCanceledListener to this CancellationToken."
                    }
                ]
            },
            {
                "name": "CancellationTokenSource",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tasks/CancellationTokenSource",
                "description": "Creates a new CancellationToken or cancels one that has already created.",
                "methods": [
                    {
                        "name": "cancel()",
                        "return_type": "void",
                        "description": "Cancels the CancellationToken if cancellation has not been requested yet."
                    },
                    {
                        "name": "getToken()",
                        "return_type": "CancellationToken",
                        "description": "Gets the CancellationToken for this CancellationTokenSource."
                    }
                ]
            },
            {
                "name": "Task<TResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tasks/Task",
                "description": "Represents an asynchronous operation.",
                "methods": [
                    {
                        "name": "addOnCanceledListener(OnCanceledListener listener)",
                        "return_type": "Task<TResult>",
                        "description": "Adds a listener that is called if the Task is canceled."
                    },
                    {
                        "name": "addOnCanceledListener(Executor executor, OnCanceledListener listener)",
                        "return_type": "Task<TResult>",
                        "description": "Adds a listener that is called if the Task is canceled."
                    },
                    {
                        "name": "addOnCanceledListener(Activity activity, OnCanceledListener listener)",
                        "return_type": "Task<TResult>",
                        "description": "Adds an Activity-scoped listener that is called if the Task is canceled."
                    },
                    {
                        "name": "addOnCompleteListener(OnCompleteListener<TResult> listener)",
                        "return_type": "Task<TResult>",
                        "description": "Adds a listener that is called when the Task completes."
                    },
                    {
                        "name": "addOnCompleteListener(Activity activity, OnCompleteListener<TResult> listener)",
                        "return_type": "Task<TResult>",
                        "description": "Adds an Activity-scoped listener that is called when the Task completes."
                    },
                    {
                        "name": "addOnCompleteListener(Executor executor, OnCompleteListener<TResult> listener)",
                        "return_type": "Task<TResult>",
                        "description": "Adds a listener that is called when the Task completes."
                    },
                    {
                        "name": "addOnFailureListener(Activity activity, OnFailureListener listener)",
                        "return_type": "abstractTask<TResult>",
                        "description": "Adds an Activity-scoped listener that is called if the Task fails."
                    },
                    {
                        "name": "addOnFailureListener(OnFailureListener listener)",
                        "return_type": "abstractTask<TResult>",
                        "description": "Adds a listener that is called if the Task fails."
                    },
                    {
                        "name": "addOnFailureListener(Executor executor, OnFailureListener listener)",
                        "return_type": "abstractTask<TResult>",
                        "description": "Adds a listener that is called if the Task fails."
                    },
                    {
                        "name": "addOnSuccessListener(Executor executor, OnSuccessListener<? super TResult> listener)",
                        "return_type": "abstractTask<TResult>",
                        "description": "Adds a listener that is called if the Task completes successfully."
                    },
                    {
                        "name": "addOnSuccessListener(OnSuccessListener<? super TResult> listener)",
                        "return_type": "abstractTask<TResult>",
                        "description": "Adds a listener that is called if the Task completes successfully."
                    },
                    {
                        "name": "addOnSuccessListener(Activity activity, OnSuccessListener<? super TResult> listener)",
                        "return_type": "abstractTask<TResult>",
                        "description": "Adds an Activity-scoped listener that is called if the Task completes successfully."
                    },
                    {
                        "name": "continueWith(Continuation<TResult, TContinuationResult> continuation)",
                        "return_type": "<TContinuationResult>Task<TContinuationResult>",
                        "description": "Returns a new Task that will be completed with the result of applying the specified Continuation to this Task."
                    },
                    {
                        "name": "continueWith(Executor executor, Continuation<TResult, TContinuationResult> continuation)",
                        "return_type": "<TContinuationResult>Task<TContinuationResult>",
                        "description": "Returns a new Task that will be completed with the result of applying the specified Continuation to this Task."
                    },
                    {
                        "name": "continueWithTask(Continuation<TResult, Task<TContinuationResult>> continuation)",
                        "return_type": "<TContinuationResult>Task<TContinuationResult>",
                        "description": "Returns a new Task that will be completed with the result of applying the specified Continuation to this Task."
                    },
                    {
                        "name": "continueWithTask(Executor executor, Continuation<TResult, Task<TContinuationResult>> continuation)",
                        "return_type": "<TContinuationResult>Task<TContinuationResult>",
                        "description": "Returns a new Task that will be completed with the result of applying the specified Continuation to this Task."
                    },
                    {
                        "name": "getException()",
                        "return_type": "abstractException",
                        "description": "Returns the exception that caused the Task to fail."
                    },
                    {
                        "name": "getResult()",
                        "return_type": "abstract TResult",
                        "description": "Gets the result of the Task, if it has already completed."
                    },
                    {
                        "name": "getResult(Class<X> exceptionType)",
                        "return_type": "abstract <X extendsThrowable>\n                TResult",
                        "description": "Gets the result of the Task, if it has already completed."
                    },
                    {
                        "name": "isCanceled()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the Task is canceled; false otherwise."
                    },
                    {
                        "name": "isComplete()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the Task is complete; false otherwise."
                    },
                    {
                        "name": "isSuccessful()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the Task has completed successfully; false otherwise."
                    },
                    {
                        "name": "onSuccessTask(Executor executor, SuccessContinuation<TResult, TContinuationResult> successContinuation)",
                        "return_type": "<TContinuationResult>Task<TContinuationResult>",
                        "description": "Returns a new Task that will be completed with the result of applying the specified SuccessContinuation to this Task when this Task completes successfully."
                    },
                    {
                        "name": "onSuccessTask(SuccessContinuation<TResult, TContinuationResult> successContinuation)",
                        "return_type": "<TContinuationResult>Task<TContinuationResult>",
                        "description": "Returns a new Task that will be completed with the result of applying the specified SuccessContinuation to this Task when this Task completes successfully."
                    }
                ]
            },
            {
                "name": "TaskCompletionSource<TResult>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tasks/TaskCompletionSource",
                "description": "Provides the ability to create Task-based APIs.",
                "methods": [
                    {
                        "name": "getTask()",
                        "return_type": "Task<TResult>",
                        "description": "Returns the Task."
                    },
                    {
                        "name": "setException(Exception e)",
                        "return_type": "void",
                        "description": "Completes the Task with the specified exception."
                    },
                    {
                        "name": "setResult(TResult result)",
                        "return_type": "void",
                        "description": "Completes the Task with the specified result."
                    },
                    {
                        "name": "trySetException(Exception e)",
                        "return_type": "boolean",
                        "description": "Completes the Task with the specified exception, unless the Task has already completed."
                    },
                    {
                        "name": "trySetResult(TResult result)",
                        "return_type": "boolean",
                        "description": "Completes the Task with the specified result, unless the Task has already completed."
                    }
                ]
            },
            {
                "name": "TaskExecutors",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tasks/TaskExecutors",
                "description": "Standard Executor instances for use with Task.",
                "methods": []
            },
            {
                "name": "Tasks",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tasks/Tasks",
                "description": "Task utility methods.",
                "methods": [
                    {
                        "name": "await(Task<TResult> task, long timeout, TimeUnit unit)",
                        "return_type": "static <TResult> TResult",
                        "description": "Blocks until the specified Task is complete."
                    },
                    {
                        "name": "await(Task<TResult> task)",
                        "return_type": "static <TResult> TResult",
                        "description": "Blocks until the specified Task is complete."
                    },
                    {
                        "name": "call(Callable<TResult> callable)",
                        "return_type": "static <TResult>Task<TResult>",
                        "description": "This method is deprecated. Use TaskCompletionSource instead, which allows the caller to manage their own Executor."
                    },
                    {
                        "name": "call(Executor executor, Callable<TResult> callable)",
                        "return_type": "static <TResult>Task<TResult>",
                        "description": "This method is deprecated. Use TaskCompletionSource instead, which allows the caller to manage their own Executor."
                    },
                    {
                        "name": "forCanceled()",
                        "return_type": "static <TResult>Task<TResult>",
                        "description": "Returns a canceled Task."
                    },
                    {
                        "name": "forException(Exception e)",
                        "return_type": "static <TResult>Task<TResult>",
                        "description": "Returns a completed Task with the specified exception."
                    },
                    {
                        "name": "forResult(TResult result)",
                        "return_type": "static <TResult>Task<TResult>",
                        "description": "Returns a completed Task with the specified result."
                    },
                    {
                        "name": "whenAll(Collection<? extends Task<?>> tasks)",
                        "return_type": "staticTask<Void>",
                        "description": "Returns a Task that completes successfully when all of the specified Tasks complete successfully."
                    },
                    {
                        "name": "whenAll(Task...<?> tasks)",
                        "return_type": "staticTask<Void>",
                        "description": "Returns a Task that completes successfully when all of the specified Tasks complete successfully."
                    },
                    {
                        "name": "whenAllComplete(Task...<?> tasks)",
                        "return_type": "staticTask<List<Task<?>>>",
                        "description": "Returns a Task with a list of Tasks that completes successfully when all of the specified Tasks complete."
                    },
                    {
                        "name": "whenAllComplete(Collection<? extends Task<?>> tasks)",
                        "return_type": "staticTask<List<Task<?>>>",
                        "description": "Returns a Task with a list of Tasks that completes successfully when all of the specified Tasks complete."
                    },
                    {
                        "name": "whenAllSuccess(Task...<?> tasks)",
                        "return_type": "static <TResult>Task<List<TResult>>",
                        "description": "Returns a Task with a list of Task results that completes successfully when all of the specified Tasks complete successfully."
                    },
                    {
                        "name": "whenAllSuccess(Collection<? extends Task<?>> tasks)",
                        "return_type": "static <TResult>Task<List<TResult>>",
                        "description": "Returns a Task with a list of Task results that completes successfully when all of the specified Tasks complete successfully."
                    },
                    {
                        "name": "withTimeout(Task<T> task, long timeout, TimeUnit unit)",
                        "return_type": "static <T>Task<T>",
                        "description": "Returns a new Task which will return a TimeoutException if a result is not returned within the specified time period."
                    }
                ]
            },
            {
                "name": "Continuation<TResult, TContinuationResult>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/Continuation",
                "description": "A function that is called to continue execution after completion of a Task.",
                "methods": [
                    {
                        "name": "then(Task<TResult> task)",
                        "return_type": "abstract TContinuationResult",
                        "description": "Returns the result of applying this Continuation to task."
                    }
                ]
            },
            {
                "name": "OnCanceledListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/OnCanceledListener",
                "description": "Listener called when a Task is canceled.",
                "methods": [
                    {
                        "name": "onCanceled()",
                        "return_type": "abstract void",
                        "description": "Called when the Task is canceled successfully."
                    }
                ]
            },
            {
                "name": "OnCompleteListener<TResult>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/OnCompleteListener",
                "description": "Listener called when a Task completes.",
                "methods": [
                    {
                        "name": "onComplete(Task<TResult> task)",
                        "return_type": "abstract void",
                        "description": "Called when the Task completes."
                    }
                ]
            },
            {
                "name": "OnFailureListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/OnFailureListener",
                "description": "Listener called when a Task fails with an exception.",
                "methods": [
                    {
                        "name": "onFailure(Exception e)",
                        "return_type": "abstract void",
                        "description": "Called when the Task fails with an exception."
                    }
                ]
            },
            {
                "name": "OnSuccessListener<TResult>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/OnSuccessListener",
                "description": "Listener called when a Task completes successfully.",
                "methods": [
                    {
                        "name": "onSuccess(TResult result)",
                        "return_type": "abstract void",
                        "description": "Called when the Task completes successfully."
                    }
                ]
            },
            {
                "name": "OnTokenCanceledListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/OnTokenCanceledListener",
                "description": "Listener called when a CancellationToken is canceled successfully.",
                "methods": [
                    {
                        "name": "onCanceled()",
                        "return_type": "abstract void",
                        "description": "Called when the CancellationToken is canceled successfully."
                    }
                ]
            },
            {
                "name": "SuccessContinuation<TResult, TContinuationResult>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tasks/SuccessContinuation",
                "description": "A function that is called to continue execution then a Task succeeds.",
                "methods": [
                    {
                        "name": "then(TResult result)",
                        "return_type": "abstractTask<TContinuationResult>",
                        "description": "Returns the result of applying this SuccessContinuation to Task."
                    }
                ]
            }
        ]
    },
    {
        "name": "cloudmessaging",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cloudmessaging/package-summary",
        "classes": [
            {
                "name": "CloudMessage",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/CloudMessage",
                "description": "A Cloud Messaging message.",
                "methods": [
                    {
                        "name": "getCollapseKey()",
                        "return_type": "String",
                        "description": "Gets the collapse key of the message."
                    },
                    {
                        "name": "getData()",
                        "return_type": "synchronizedMap<String,String>",
                        "description": "Gets the message payload data."
                    },
                    {
                        "name": "getFrom()",
                        "return_type": "String",
                        "description": "Get the sender of this message."
                    },
                    {
                        "name": "getIntent()",
                        "return_type": "Intent",
                        "description": "Gets the broadcast Intent that this message was sent through."
                    },
                    {
                        "name": "getMessageId()",
                        "return_type": "String",
                        "description": "Gets the message's ID."
                    },
                    {
                        "name": "getMessageType()",
                        "return_type": "String",
                        "description": "Gets the type of message."
                    },
                    {
                        "name": "getOriginalPriority()",
                        "return_type": "int",
                        "description": "Gets the original priority of message."
                    },
                    {
                        "name": "getPriority()",
                        "return_type": "int",
                        "description": "Gets the priority of message as delivered."
                    },
                    {
                        "name": "getRawData()",
                        "return_type": "byte[]",
                        "description": "Gets the raw data."
                    },
                    {
                        "name": "getSenderId()",
                        "return_type": "String",
                        "description": "Gets the Sender ID for the sender of this message."
                    },
                    {
                        "name": "getSentTime()",
                        "return_type": "long",
                        "description": "Gets the time in milliseconds from the Epoch that the message was sent."
                    },
                    {
                        "name": "getTo()",
                        "return_type": "String",
                        "description": "Gets the message destination."
                    },
                    {
                        "name": "getTtl()",
                        "return_type": "int",
                        "description": "Gets the message time to live (TTL"
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CloudMessagingReceiver",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/CloudMessagingReceiver",
                "description": "Direct use of play-services-cloud-messaging SDK is not supported.",
                "methods": [
                    {
                        "name": "onReceive(Context context, Intent intent)",
                        "return_type": "final void",
                        "description": "This method is called when the BroadcastReceiver is receiving an Intent broadcast."
                    }
                ]
            },
            {
                "name": "CloudMessagingReceiver.IntentActionKeys",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/CloudMessagingReceiver.IntentActionKeys",
                "description": "Actions for the wrapped Intent of notification action broadcasts to indicate the notification action type.",
                "methods": []
            },
            {
                "name": "CloudMessagingReceiver.IntentKeys",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/CloudMessagingReceiver.IntentKeys",
                "description": "Keys used to pass data within the broadcast Intent's extras.",
                "methods": []
            },
            {
                "name": "Rpc",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/Rpc",
                "description": "Direct use of play-services-cloud-messaging SDK is not supported.",
                "methods": [
                    {
                        "name": "send(Bundle data)",
                        "return_type": "Task<Bundle>",
                        "description": "Send a request to Google Play services."
                    }
                ]
            },
            {
                "name": "CloudMessagingReceiver.IntentActionKeys",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/CloudMessagingReceiver.IntentActionKeys",
                "description": "Actions for the wrapped Intent of notification action broadcasts to indicate the notification action type.",
                "methods": []
            },
            {
                "name": "CloudMessagingReceiver.IntentKeys",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cloudmessaging/CloudMessagingReceiver.IntentKeys",
                "description": "Keys used to pass data within the broadcast Intent's extras.",
                "methods": []
            }
        ]
    },
    {
        "name": "gcm",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/gcm/package-summary",
        "classes": [
            {
                "name": "GcmNetworkManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/GcmNetworkManager",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "cancelAllTasks(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "void",
                        "description": "Cancels all tasks previously scheduled against the provided GcmTaskService."
                    },
                    {
                        "name": "cancelTask(String tag, Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "void",
                        "description": "Cancel a task, specified by tag."
                    },
                    {
                        "name": "getInstance(Context context)",
                        "return_type": "staticGcmNetworkManager",
                        "description": "Use this function to access the GcmNetworkManager API."
                    },
                    {
                        "name": "schedule(Task task)",
                        "return_type": "synchronized void",
                        "description": "Entry point to schedule a task with the network manager."
                    }
                ]
            },
            {
                "name": "GcmTaskService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/GcmTaskService",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": "Receives the command to begin doing work, for which it spawns another thread."
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onInitializeTasks()",
                        "return_type": "void",
                        "description": "When your package is removed or updated, all of its network tasks are cleared by the GcmNetworkManager."
                    },
                    {
                        "name": "onRunTask(TaskParams params)",
                        "return_type": "abstract int",
                        "description": "Override this function to provide the logic for your task execution."
                    },
                    {
                        "name": "onStartCommand(Intent intent, int flags, int startId)",
                        "return_type": "int",
                        "description": "Receives the command to begin doing work, for which it spawns another thread."
                    }
                ]
            },
            {
                "name": "OneoffTask",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/OneoffTask",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "getWindowEnd()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getWindowStart()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "toBundle(Bundle bundle)",
                        "return_type": "void",
                        "description": "Insert the task object into the provided bundle for IPC."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "OneoffTask.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/OneoffTask.Builder",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "OneoffTask",
                        "description": ""
                    },
                    {
                        "name": "setExecutionWindow(long windowStartDelaySeconds, long windowEndDelaySeconds)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Mandatory setter for creating a one-off task."
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Optional setter for specifying any extra parameters necessary for the task."
                    },
                    {
                        "name": "setPersisted(boolean isPersisted)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Optional setter to specify whether this task should be persisted across reboots."
                    },
                    {
                        "name": "setRequiredNetwork(int requiredNetworkState)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Set the network state your task requires to run."
                    },
                    {
                        "name": "setRequiresCharging(boolean requiresCharging)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Set whether your task requires that the device be connected to power in order to execute."
                    },
                    {
                        "name": "setService(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Set whichever GcmTaskService you implement to execute the logic for this task."
                    },
                    {
                        "name": "setTag(String tag)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Mandatory setter for specifying the tag identifier for this task."
                    },
                    {
                        "name": "setUpdateCurrent(boolean updateCurrent)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Optional setter to specify whether this task should override any preexisting tasks with the same tag."
                    }
                ]
            },
            {
                "name": "PeriodicTask",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/PeriodicTask",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "getFlex()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getPeriod()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "toBundle(Bundle bundle)",
                        "return_type": "void",
                        "description": "Insert the task object into the provided bundle for IPC."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PeriodicTask.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/PeriodicTask.Builder",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PeriodicTask",
                        "description": ""
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter for specifying any extra parameters necessary for the task."
                    },
                    {
                        "name": "setFlex(long flexInSeconds)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter for specifying how close to the end of the period set in setPeriod(long"
                    },
                    {
                        "name": "setPeriod(long periodInSeconds)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Mandatory setter for creating a periodic task."
                    },
                    {
                        "name": "setPersisted(boolean isPersisted)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter to specify whether this task should be persisted across reboots."
                    },
                    {
                        "name": "setRequiredNetwork(int requiredNetworkState)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Set the network state your task requires to run."
                    },
                    {
                        "name": "setRequiresCharging(boolean requiresCharging)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Set whether your task requires that the device be connected to power in order to execute."
                    },
                    {
                        "name": "setService(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Set whichever GcmTaskService you implement to execute the logic for this task."
                    },
                    {
                        "name": "setTag(String tag)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Mandatory setter for specifying the tag identifier for this task."
                    },
                    {
                        "name": "setUpdateCurrent(boolean updateCurrent)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter to specify whether this task should override any preexisting tasks with the same tag."
                    }
                ]
            },
            {
                "name": "Task",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/Task",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "describeContents()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getExtras()",
                        "return_type": "Bundle",
                        "description": ""
                    },
                    {
                        "name": "getRequiredNetwork()",
                        "return_type": "int",
                        "description": "If the specified network is unavailable, your task will not be run until it is."
                    },
                    {
                        "name": "getRequiresCharging()",
                        "return_type": "boolean",
                        "description": "If the device is not charging and this is set to true, your task will not be run until it is."
                    },
                    {
                        "name": "getServiceName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getTag()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "isPersisted()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isUpdateCurrent()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int i)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Task.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/Task.Builder",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "abstractTask",
                        "description": ""
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "abstractTask.Builder",
                        "description": "Optional setter for specifying any extra parameters necessary for the task."
                    },
                    {
                        "name": "setPersisted(boolean isPersisted)",
                        "return_type": "abstractTask.Builder",
                        "description": "Optional setter to specify whether this task should be persisted across reboots."
                    },
                    {
                        "name": "setRequiredNetwork(int requiredNetworkState)",
                        "return_type": "abstractTask.Builder",
                        "description": "Set the network state your task requires to run."
                    },
                    {
                        "name": "setRequiresCharging(boolean requiresCharging)",
                        "return_type": "abstractTask.Builder",
                        "description": "Set whether your task requires that the device be connected to power in order to execute."
                    },
                    {
                        "name": "setService(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "abstractTask.Builder",
                        "description": "Set whichever GcmTaskService you implement to execute the logic for this task."
                    },
                    {
                        "name": "setTag(String tag)",
                        "return_type": "abstractTask.Builder",
                        "description": "Mandatory setter for specifying the tag identifier for this task."
                    },
                    {
                        "name": "setUpdateCurrent(boolean updateCurrent)",
                        "return_type": "abstractTask.Builder",
                        "description": "Optional setter to specify whether this task should override any preexisting tasks with the same tag."
                    }
                ]
            },
            {
                "name": "TaskParams",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/gcm/TaskParams",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "getExtras()",
                        "return_type": "Bundle",
                        "description": ""
                    },
                    {
                        "name": "getTag()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "OneoffTask.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/gcm/OneoffTask.Builder",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "OneoffTask",
                        "description": ""
                    },
                    {
                        "name": "setExecutionWindow(long windowStartDelaySeconds, long windowEndDelaySeconds)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Mandatory setter for creating a one-off task."
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Optional setter for specifying any extra parameters necessary for the task."
                    },
                    {
                        "name": "setPersisted(boolean isPersisted)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Optional setter to specify whether this task should be persisted across reboots."
                    },
                    {
                        "name": "setRequiredNetwork(int requiredNetworkState)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Set the network state your task requires to run."
                    },
                    {
                        "name": "setRequiresCharging(boolean requiresCharging)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Set whether your task requires that the device be connected to power in order to execute."
                    },
                    {
                        "name": "setService(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Set whichever GcmTaskService you implement to execute the logic for this task."
                    },
                    {
                        "name": "setTag(String tag)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Mandatory setter for specifying the tag identifier for this task."
                    },
                    {
                        "name": "setUpdateCurrent(boolean updateCurrent)",
                        "return_type": "OneoffTask.Builder",
                        "description": "Optional setter to specify whether this task should override any preexisting tasks with the same tag."
                    }
                ]
            },
            {
                "name": "PeriodicTask.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/gcm/PeriodicTask.Builder",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PeriodicTask",
                        "description": ""
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter for specifying any extra parameters necessary for the task."
                    },
                    {
                        "name": "setFlex(long flexInSeconds)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter for specifying how close to the end of the period set in setPeriod(long"
                    },
                    {
                        "name": "setPeriod(long periodInSeconds)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Mandatory setter for creating a periodic task."
                    },
                    {
                        "name": "setPersisted(boolean isPersisted)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter to specify whether this task should be persisted across reboots."
                    },
                    {
                        "name": "setRequiredNetwork(int requiredNetworkState)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Set the network state your task requires to run."
                    },
                    {
                        "name": "setRequiresCharging(boolean requiresCharging)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Set whether your task requires that the device be connected to power in order to execute."
                    },
                    {
                        "name": "setService(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Set whichever GcmTaskService you implement to execute the logic for this task."
                    },
                    {
                        "name": "setTag(String tag)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Mandatory setter for specifying the tag identifier for this task."
                    },
                    {
                        "name": "setUpdateCurrent(boolean updateCurrent)",
                        "return_type": "PeriodicTask.Builder",
                        "description": "Optional setter to specify whether this task should override any preexisting tasks with the same tag."
                    }
                ]
            },
            {
                "name": "Task.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/gcm/Task.Builder",
                "description": "This class is deprecated. As of November 1, 2020, GCMNetworkManager client libraries are no longer supported. GCMNetworkManager API calls no longer work on devices running Android M and later once your app targets future Android versions ( > Android 10). Migrate to Jetpack WorkManager for your background scheduling needs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "abstractTask",
                        "description": ""
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "abstractTask.Builder",
                        "description": "Optional setter for specifying any extra parameters necessary for the task."
                    },
                    {
                        "name": "setPersisted(boolean isPersisted)",
                        "return_type": "abstractTask.Builder",
                        "description": "Optional setter to specify whether this task should be persisted across reboots."
                    },
                    {
                        "name": "setRequiredNetwork(int requiredNetworkState)",
                        "return_type": "abstractTask.Builder",
                        "description": "Set the network state your task requires to run."
                    },
                    {
                        "name": "setRequiresCharging(boolean requiresCharging)",
                        "return_type": "abstractTask.Builder",
                        "description": "Set whether your task requires that the device be connected to power in order to execute."
                    },
                    {
                        "name": "setService(Class<? extends GcmTaskService> gcmTaskService)",
                        "return_type": "abstractTask.Builder",
                        "description": "Set whichever GcmTaskService you implement to execute the logic for this task."
                    },
                    {
                        "name": "setTag(String tag)",
                        "return_type": "abstractTask.Builder",
                        "description": "Mandatory setter for specifying the tag identifier for this task."
                    },
                    {
                        "name": "setUpdateCurrent(boolean updateCurrent)",
                        "return_type": "abstractTask.Builder",
                        "description": "Optional setter to specify whether this task should override any preexisting tasks with the same tag."
                    }
                ]
            }
        ]
    },
    {
        "name": "model",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/maps/model/package-summary",
        "classes": [
            {
                "name": "BitmapDescriptor",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/BitmapDescriptor",
                "description": "Defines a Bitmap image.",
                "methods": []
            },
            {
                "name": "BitmapDescriptorFactory",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/BitmapDescriptorFactory",
                "description": "Used to create a definition of a Bitmap image, used for marker icons and ground overlays.",
                "methods": [
                    {
                        "name": "defaultMarker(float hue)",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor that refers to a colorization of the default marker image."
                    },
                    {
                        "name": "defaultMarker()",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor that refers to the default marker image."
                    },
                    {
                        "name": "fromAsset(String assetName)",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor using the name of a Bitmap image in the assets directory."
                    },
                    {
                        "name": "fromBitmap(Bitmap image)",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor from a given Bitmap image."
                    },
                    {
                        "name": "fromFile(String fileName)",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor using the name of a Bitmap image file located in the internal storage."
                    },
                    {
                        "name": "fromPath(String absolutePath)",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor from the absolute file path of a Bitmap image."
                    },
                    {
                        "name": "fromResource(int resourceId)",
                        "return_type": "staticBitmapDescriptor",
                        "description": "Creates a BitmapDescriptor using the resource ID of a Bitmap image."
                    }
                ]
            },
            {
                "name": "ButtCap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/ButtCap",
                "description": "Cap that is squared off exactly at the start or end vertex of a Polyline with solid stroke pattern, equivalent to having no additional cap beyond the start or end vertex.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CameraPosition",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/CameraPosition",
                "description": "An immutable class that aggregates all camera position parameters such as location, zoom level, tilt angle, and bearing.",
                "methods": [
                    {
                        "name": "builder(CameraPosition camera)",
                        "return_type": "staticCameraPosition.Builder",
                        "description": "Creates a builder for a camera position, initialized to a given position."
                    },
                    {
                        "name": "builder()",
                        "return_type": "staticCameraPosition.Builder",
                        "description": "Creates a builder for a camera position."
                    },
                    {
                        "name": "createFromAttributes(Context context, AttributeSet attrs)",
                        "return_type": "staticCameraPosition",
                        "description": "Creates a CameraPosition from the AttributeSet."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "fromLatLngZoom(LatLng target, float zoom)",
                        "return_type": "staticCameraPosition",
                        "description": "Constructs a CameraPosition pointed for a particular target and zoom level."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CameraPosition.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/CameraPosition.Builder",
                "description": "Builds camera position.",
                "methods": [
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the direction that the camera is pointing in, in degrees clockwise from north."
                    },
                    {
                        "name": "build()",
                        "return_type": "CameraPosition",
                        "description": "Builds a CameraPosition."
                    },
                    {
                        "name": "target(LatLng location)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the location that the camera is pointing at."
                    },
                    {
                        "name": "tilt(float tilt)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the angle, in degrees, of the camera from the nadir (directly facing the Earth"
                    },
                    {
                        "name": "zoom(float zoom)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the zoom level of the camera."
                    }
                ]
            },
            {
                "name": "Cap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Cap",
                "description": "Immutable cap that can be applied at the start or end vertex of a Polyline.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Circle",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Circle",
                "description": "A circle on the earth's surface (spherical cap).",
                "methods": [
                    {
                        "name": "getCenter()",
                        "return_type": "LatLng",
                        "description": "Returns the center as a LatLng."
                    },
                    {
                        "name": "getFillColor()",
                        "return_type": "int",
                        "description": "Returns the fill color of this Circle."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets this circle's id."
                    },
                    {
                        "name": "getRadius()",
                        "return_type": "double",
                        "description": "Returns the circle's radius, in meters."
                    },
                    {
                        "name": "getStrokeColor()",
                        "return_type": "int",
                        "description": "Returns the stroke color."
                    },
                    {
                        "name": "getStrokePattern()",
                        "return_type": "List<PatternItem>",
                        "description": "Returns the stroke pattern of this circle's outline."
                    },
                    {
                        "name": "getStrokeWidth()",
                        "return_type": "float",
                        "description": "Returns the stroke width."
                    },
                    {
                        "name": "getTag()",
                        "return_type": "Object",
                        "description": "Gets the tag for the circle."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Returns the zIndex."
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability of the circle."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Checks whether the circle is visible."
                    },
                    {
                        "name": "remove()",
                        "return_type": "void",
                        "description": "Removes this circle from the map."
                    },
                    {
                        "name": "setCenter(LatLng center)",
                        "return_type": "void",
                        "description": "Sets the center using a LatLng."
                    },
                    {
                        "name": "setClickable(boolean clickable)",
                        "return_type": "void",
                        "description": "Sets the clickability of the circle."
                    },
                    {
                        "name": "setFillColor(int color)",
                        "return_type": "void",
                        "description": "Sets the fill color."
                    },
                    {
                        "name": "setRadius(double radius)",
                        "return_type": "void",
                        "description": "Sets the radius in meters."
                    },
                    {
                        "name": "setStrokeColor(int color)",
                        "return_type": "void",
                        "description": "Sets the stroke color."
                    },
                    {
                        "name": "setStrokePattern(List<PatternItem> pattern)",
                        "return_type": "void",
                        "description": "Sets the stroke pattern of the circle's outline."
                    },
                    {
                        "name": "setStrokeWidth(float width)",
                        "return_type": "void",
                        "description": "Sets the stroke width."
                    },
                    {
                        "name": "setTag(Object tag)",
                        "return_type": "void",
                        "description": "Sets the tag for the circle."
                    },
                    {
                        "name": "setVisible(boolean visible)",
                        "return_type": "void",
                        "description": "Sets the visibility of the circle."
                    },
                    {
                        "name": "setZIndex(float zIndex)",
                        "return_type": "void",
                        "description": "Sets the zIndex."
                    }
                ]
            },
            {
                "name": "CircleOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/CircleOptions",
                "description": "Defines options for a Circle.",
                "methods": [
                    {
                        "name": "center(LatLng center)",
                        "return_type": "CircleOptions",
                        "description": "Sets the center using a LatLng."
                    },
                    {
                        "name": "clickable(boolean clickable)",
                        "return_type": "CircleOptions",
                        "description": "Specifies whether this circle is clickable."
                    },
                    {
                        "name": "fillColor(int color)",
                        "return_type": "CircleOptions",
                        "description": "Sets the fill color."
                    },
                    {
                        "name": "getCenter()",
                        "return_type": "LatLng",
                        "description": "Returns the center as a LatLng."
                    },
                    {
                        "name": "getFillColor()",
                        "return_type": "int",
                        "description": "Returns the fill color."
                    },
                    {
                        "name": "getRadius()",
                        "return_type": "double",
                        "description": "Returns the circle's radius, in meters."
                    },
                    {
                        "name": "getStrokeColor()",
                        "return_type": "int",
                        "description": "Returns the stroke color."
                    },
                    {
                        "name": "getStrokePattern()",
                        "return_type": "List<PatternItem>",
                        "description": "Returns the stroke pattern set in this CircleOptions object for the circle's outline."
                    },
                    {
                        "name": "getStrokeWidth()",
                        "return_type": "float",
                        "description": "Returns the stroke width."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Returns the zIndex."
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability setting for the circle."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Checks whether the circle is visible."
                    },
                    {
                        "name": "radius(double radius)",
                        "return_type": "CircleOptions",
                        "description": "Sets the radius in meters."
                    },
                    {
                        "name": "strokeColor(int color)",
                        "return_type": "CircleOptions",
                        "description": "Sets the stroke color."
                    },
                    {
                        "name": "strokePattern(List<PatternItem> pattern)",
                        "return_type": "CircleOptions",
                        "description": "Sets a stroke pattern for the circle's outline."
                    },
                    {
                        "name": "strokeWidth(float width)",
                        "return_type": "CircleOptions",
                        "description": "Sets the stroke width."
                    },
                    {
                        "name": "visible(boolean visible)",
                        "return_type": "CircleOptions",
                        "description": "Sets the visibility."
                    },
                    {
                        "name": "zIndex(float zIndex)",
                        "return_type": "CircleOptions",
                        "description": "Sets the zIndex."
                    }
                ]
            },
            {
                "name": "CustomCap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/CustomCap",
                "description": "Bitmap overlay centered at the start or end vertex of a Polyline, orientated according to the direction of the line's first or last edge and scaled with respect to the line's stroke width.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Dash",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Dash",
                "description": "An immutable class representing a dash used in the stroke pattern for a Polyline or the outline of a Polygon or Circle.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Dot",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Dot",
                "description": "An immutable class representing a dot used in the stroke pattern for a Polyline or the outline of a Polygon or Circle.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Gap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Gap",
                "description": "An immutable class representing a gap used in the stroke pattern for a Polyline or the outline of a Polygon or Circle.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GroundOverlay",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/GroundOverlay",
                "description": "A ground overlay is an image that is fixed to a map.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this GroundOverlay is equal to another."
                    },
                    {
                        "name": "getBearing()",
                        "return_type": "float",
                        "description": "Gets the bearing of the ground overlay in degrees clockwise from north."
                    },
                    {
                        "name": "getBounds()",
                        "return_type": "LatLngBounds",
                        "description": "Gets the bounds for the ground overlay."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "float",
                        "description": "Gets the height of the ground overlay."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets this ground overlay's id."
                    },
                    {
                        "name": "getPosition()",
                        "return_type": "LatLng",
                        "description": "Gets the location of the anchor point."
                    },
                    {
                        "name": "getTag()",
                        "return_type": "Object",
                        "description": "Gets the tag for the circle."
                    },
                    {
                        "name": "getTransparency()",
                        "return_type": "float",
                        "description": "Gets the transparency of this ground overlay."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "float",
                        "description": "Gets the width of the ground overlay."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex of this ground overlay."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability of the ground overlay."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility of this ground overlay."
                    },
                    {
                        "name": "remove()",
                        "return_type": "void",
                        "description": "Removes this ground overlay from the map."
                    },
                    {
                        "name": "setBearing(float bearing)",
                        "return_type": "void",
                        "description": "Sets the bearing of the ground overlay (the direction that the vertical axis of the ground overlay points"
                    },
                    {
                        "name": "setClickable(boolean clickable)",
                        "return_type": "void",
                        "description": "Sets the clickability of the ground overlay."
                    },
                    {
                        "name": "setDimensions(float width, float height)",
                        "return_type": "void",
                        "description": "Sets the dimensions of the ground overlay."
                    },
                    {
                        "name": "setDimensions(float width)",
                        "return_type": "void",
                        "description": "Sets the width of the ground overlay."
                    },
                    {
                        "name": "setImage(BitmapDescriptor imageDescriptor)",
                        "return_type": "void",
                        "description": "Sets the image for the Ground Overlay."
                    },
                    {
                        "name": "setPosition(LatLng latLng)",
                        "return_type": "void",
                        "description": "Sets the position of the ground overlay by changing the location of the anchor point."
                    },
                    {
                        "name": "setPositionFromBounds(LatLngBounds bounds)",
                        "return_type": "void",
                        "description": "Sets the position of the ground overlay by fitting it to the given LatLngBounds."
                    },
                    {
                        "name": "setTag(Object tag)",
                        "return_type": "void",
                        "description": "Sets the tag for the ground overlay."
                    },
                    {
                        "name": "setTransparency(float transparency)",
                        "return_type": "void",
                        "description": "Sets the transparency of this ground overlay."
                    },
                    {
                        "name": "setVisible(boolean visible)",
                        "return_type": "void",
                        "description": "Sets the visibility of this ground overlay."
                    },
                    {
                        "name": "setZIndex(float zIndex)",
                        "return_type": "void",
                        "description": "Sets the zIndex of this ground overlay."
                    }
                ]
            },
            {
                "name": "GroundOverlayOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/GroundOverlayOptions",
                "description": "Defines options for a ground overlay.",
                "methods": [
                    {
                        "name": "anchor(float u, float v)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the anchor."
                    },
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the bearing of the ground overlay in degrees clockwise from north."
                    },
                    {
                        "name": "clickable(boolean clickable)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies whether the ground overlay is clickable."
                    },
                    {
                        "name": "getAnchorU()",
                        "return_type": "float",
                        "description": "Horizontal relative anchor; 0.0 and 1.0 denote left and right edges respectively."
                    },
                    {
                        "name": "getAnchorV()",
                        "return_type": "float",
                        "description": "Vertical relative anchor; 0.0 and 1.0 denote top and bottom edges respectively."
                    },
                    {
                        "name": "getBearing()",
                        "return_type": "float",
                        "description": "Gets the bearing set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getBounds()",
                        "return_type": "LatLngBounds",
                        "description": "Gets the bounds set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "float",
                        "description": "Gets the height set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getImage()",
                        "return_type": "BitmapDescriptor",
                        "description": "Gets the image descriptor set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "LatLng",
                        "description": "Gets the location set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getTransparency()",
                        "return_type": "float",
                        "description": "Gets the transparency set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "float",
                        "description": "Gets the width set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex set for this GroundOverlayOptions object."
                    },
                    {
                        "name": "image(BitmapDescriptor imageDescriptor)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the image for this ground overlay."
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability setting for this GroundOverlayOptions object."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility setting for this GroundOverlayOptions object."
                    },
                    {
                        "name": "position(LatLng location, float width)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the position for this ground overlay using an anchor point (a LatLng"
                    },
                    {
                        "name": "position(LatLng location, float width, float height)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the position for this ground overlay using an anchor point (a LatLng"
                    },
                    {
                        "name": "positionFromBounds(LatLngBounds bounds)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the position for this ground overlay."
                    },
                    {
                        "name": "transparency(float transparency)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the transparency of the ground overlay."
                    },
                    {
                        "name": "visible(boolean visible)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the visibility for the ground overlay."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zIndex(float zIndex)",
                        "return_type": "GroundOverlayOptions",
                        "description": "Specifies the ground overlay's zIndex, i.e., the order in which it will be drawn."
                    }
                ]
            },
            {
                "name": "IndoorBuilding",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/IndoorBuilding",
                "description": "Represents a building.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this IndoorBuilding is equal to another."
                    },
                    {
                        "name": "getActiveLevelIndex()",
                        "return_type": "int",
                        "description": "Gets the index in the list returned by getLevels("
                    },
                    {
                        "name": "getDefaultLevelIndex()",
                        "return_type": "int",
                        "description": "Gets the index in the list returned by getLevels("
                    },
                    {
                        "name": "getLevels()",
                        "return_type": "List<IndoorLevel>",
                        "description": "Gets the levels in the building."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isUnderground()",
                        "return_type": "boolean",
                        "description": "Returns true if the building is entirely underground."
                    }
                ]
            },
            {
                "name": "IndoorLevel",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/IndoorLevel",
                "description": "Represents a level in a building.",
                "methods": [
                    {
                        "name": "activate()",
                        "return_type": "void",
                        "description": "Sets this level as the visible level in its building."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this IndoorLevel is equal to another."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Localized display name for the level, e.g."
                    },
                    {
                        "name": "getShortName()",
                        "return_type": "String",
                        "description": "Localized short display name for the level, e.g."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "JointType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/JointType",
                "description": "Joint types for Polyline and outline of Polygon.",
                "methods": []
            },
            {
                "name": "LatLng",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/LatLng",
                "description": "An immutable class representing a pair of latitude and longitude coordinates, stored as degrees.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": "Tests if this LatLng is equal to another."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LatLngBounds",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/LatLngBounds",
                "description": "An immutable class representing a latitude/longitude aligned rectangle.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticLatLngBounds.Builder",
                        "description": "Creates a new builder."
                    },
                    {
                        "name": "contains(LatLng point)",
                        "return_type": "boolean",
                        "description": "Returns whether this contains the given LatLng."
                    },
                    {
                        "name": "createFromAttributes(Context context, AttributeSet attrs)",
                        "return_type": "staticLatLngBounds",
                        "description": "Creates a LatLngBounds from the AttributeSet."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCenter()",
                        "return_type": "LatLng",
                        "description": "Returns the center of this LatLngBounds."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "including(LatLng point)",
                        "return_type": "LatLngBounds",
                        "description": "Returns a new LatLngBounds that extends this LatLngBounds to include the given LatLng."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LatLngBounds.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/LatLngBounds.Builder",
                "description": "This is a builder that is able to create a minimum bound based on a set of LatLng points.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LatLngBounds",
                        "description": "Creates the LatLng bounds."
                    },
                    {
                        "name": "include(LatLng point)",
                        "return_type": "LatLngBounds.Builder",
                        "description": "Includes this point for building of the bounds."
                    }
                ]
            },
            {
                "name": "MapStyleOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/MapStyleOptions",
                "description": "Defines styling options for a GoogleMap.",
                "methods": [
                    {
                        "name": "loadRawResourceStyle(Context clientContext, int resourceId)",
                        "return_type": "staticMapStyleOptions",
                        "description": "Creates a new set of map style options based on the a JSON styling string loaded from a raw resource identifier."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Marker",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Marker",
                "description": "An icon placed at a particular point on the map's surface.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this Marker is equal to another."
                    },
                    {
                        "name": "getAlpha()",
                        "return_type": "float",
                        "description": "Gets the alpha of the marker."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets this marker's id."
                    },
                    {
                        "name": "getPosition()",
                        "return_type": "LatLng",
                        "description": "Returns the position of the marker."
                    },
                    {
                        "name": "getRotation()",
                        "return_type": "float",
                        "description": "Gets the rotation of the marker."
                    },
                    {
                        "name": "getSnippet()",
                        "return_type": "String",
                        "description": "Gets the snippet of the marker."
                    },
                    {
                        "name": "getTag()",
                        "return_type": "Object",
                        "description": "Gets the tag for the marker."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Gets the title of the marker."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Returns the zIndex of the marker."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hideInfoWindow()",
                        "return_type": "void",
                        "description": "Hides the info window if it is shown from this marker."
                    },
                    {
                        "name": "isDraggable()",
                        "return_type": "boolean",
                        "description": "Gets the draggability of the marker."
                    },
                    {
                        "name": "isFlat()",
                        "return_type": "boolean",
                        "description": "Gets the flat setting of the Marker."
                    },
                    {
                        "name": "isInfoWindowShown()",
                        "return_type": "boolean",
                        "description": "Returns whether the info window is currently shown above this marker."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility setting of this marker."
                    },
                    {
                        "name": "remove()",
                        "return_type": "void",
                        "description": "Removes this marker from the map."
                    },
                    {
                        "name": "setAlpha(float alpha)",
                        "return_type": "void",
                        "description": "Sets the alpha (opacity"
                    },
                    {
                        "name": "setAnchor(float anchorU, float anchorV)",
                        "return_type": "void",
                        "description": "Sets the anchor point for the marker."
                    },
                    {
                        "name": "setDraggable(boolean draggable)",
                        "return_type": "void",
                        "description": "Sets the draggability of the marker."
                    },
                    {
                        "name": "setFlat(boolean flat)",
                        "return_type": "void",
                        "description": "Sets whether this marker should be flat against the map true or a billboard facing the camera false."
                    },
                    {
                        "name": "setIcon(BitmapDescriptor iconDescriptor)",
                        "return_type": "void",
                        "description": "Sets the icon for the marker."
                    },
                    {
                        "name": "setInfoWindowAnchor(float anchorU, float anchorV)",
                        "return_type": "void",
                        "description": "Specifies the point in the marker image at which to anchor the info window when it is displayed."
                    },
                    {
                        "name": "setPosition(LatLng latlng)",
                        "return_type": "void",
                        "description": "Sets the location of the marker."
                    },
                    {
                        "name": "setRotation(float rotation)",
                        "return_type": "void",
                        "description": "Sets the rotation of the marker in degrees clockwise about the marker's anchor point."
                    },
                    {
                        "name": "setSnippet(String snippet)",
                        "return_type": "void",
                        "description": "Sets the snippet of the marker."
                    },
                    {
                        "name": "setTag(Object tag)",
                        "return_type": "void",
                        "description": "Sets the tag for the marker."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "void",
                        "description": "Sets the title of the marker."
                    },
                    {
                        "name": "setVisible(boolean visible)",
                        "return_type": "void",
                        "description": "Sets the visibility of this marker."
                    },
                    {
                        "name": "setZIndex(float zIndex)",
                        "return_type": "void",
                        "description": "Sets the zIndex of the marker."
                    },
                    {
                        "name": "showInfoWindow()",
                        "return_type": "void",
                        "description": "Shows the info window of this marker on the map, if this marker isVisible("
                    }
                ]
            },
            {
                "name": "MarkerOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/MarkerOptions",
                "description": "Defines MarkerOptions for a marker.",
                "methods": [
                    {
                        "name": "alpha(float alpha)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the alpha (opacity"
                    },
                    {
                        "name": "anchor(float u, float v)",
                        "return_type": "MarkerOptions",
                        "description": "Specifies the anchor to be at a particular point in the marker image."
                    },
                    {
                        "name": "draggable(boolean draggable)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the draggability for the marker."
                    },
                    {
                        "name": "flat(boolean flat)",
                        "return_type": "MarkerOptions",
                        "description": "Sets whether this marker should be flat against the map true or a billboard facing the camera false."
                    },
                    {
                        "name": "getAlpha()",
                        "return_type": "float",
                        "description": "Gets the alpha set for this MarkerOptions object."
                    },
                    {
                        "name": "getAnchorU()",
                        "return_type": "float",
                        "description": "Horizontal distance, normalized to [0, 1], of the anchor from the left edge."
                    },
                    {
                        "name": "getAnchorV()",
                        "return_type": "float",
                        "description": "Vertical distance, normalized to [0, 1], of the anchor from the top edge."
                    },
                    {
                        "name": "getIcon()",
                        "return_type": "BitmapDescriptor",
                        "description": "Gets the custom icon descriptor set for this MarkerOptions object."
                    },
                    {
                        "name": "getInfoWindowAnchorU()",
                        "return_type": "float",
                        "description": "Horizontal distance, normalized to [0, 1], of the info window anchor from the left edge."
                    },
                    {
                        "name": "getInfoWindowAnchorV()",
                        "return_type": "float",
                        "description": "Vertical distance, normalized to [0, 1], of the info window anchor from the top edge."
                    },
                    {
                        "name": "getPosition()",
                        "return_type": "LatLng",
                        "description": "Returns the position set for this MarkerOptions object."
                    },
                    {
                        "name": "getRotation()",
                        "return_type": "float",
                        "description": "Gets the rotation set for this MarkerOptions object."
                    },
                    {
                        "name": "getSnippet()",
                        "return_type": "String",
                        "description": "Gets the snippet set for this MarkerOptions object."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Gets the title set for this MarkerOptions object."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex set for this MarkerOptions object."
                    },
                    {
                        "name": "icon(BitmapDescriptor iconDescriptor)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the icon for the marker."
                    },
                    {
                        "name": "infoWindowAnchor(float u, float v)",
                        "return_type": "MarkerOptions",
                        "description": "Specifies the anchor point of the info window on the marker image."
                    },
                    {
                        "name": "isDraggable()",
                        "return_type": "boolean",
                        "description": "Gets the draggability setting for this MarkerOptions object."
                    },
                    {
                        "name": "isFlat()",
                        "return_type": "boolean",
                        "description": "Gets the flat setting for this MarkerOptions object."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility setting for this MarkerOptions object."
                    },
                    {
                        "name": "position(LatLng latlng)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the location for the marker."
                    },
                    {
                        "name": "rotation(float rotation)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the rotation of the marker in degrees clockwise about the marker's anchor point."
                    },
                    {
                        "name": "snippet(String snippet)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the snippet for the marker."
                    },
                    {
                        "name": "title(String title)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the title for the marker."
                    },
                    {
                        "name": "visible(boolean visible)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the visibility for the marker."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zIndex(float zIndex)",
                        "return_type": "MarkerOptions",
                        "description": "Sets the zIndex for the marker."
                    }
                ]
            },
            {
                "name": "PatternItem",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/PatternItem",
                "description": "Immutable item used in the stroke pattern for a Polyline or the outline of a Polygon or Circle.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PointOfInterest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/PointOfInterest",
                "description": "Contains information about a PointOfInterest that was clicked on.",
                "methods": [
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Polygon",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Polygon",
                "description": "A polygon on the earth's surface.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this Polygon is equal to another."
                    },
                    {
                        "name": "getFillColor()",
                        "return_type": "int",
                        "description": "Gets the fill color of this polygon."
                    },
                    {
                        "name": "getHoles()",
                        "return_type": "List<List<LatLng>>",
                        "description": "Returns a snapshot of the holes of this polygon at this time ."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets this polygon's id."
                    },
                    {
                        "name": "getPoints()",
                        "return_type": "List<LatLng>",
                        "description": "Returns a snapshot of the vertices of this polygon at this time ."
                    },
                    {
                        "name": "getStrokeColor()",
                        "return_type": "int",
                        "description": "Gets the stroke color of this polygon."
                    },
                    {
                        "name": "getStrokeJointType()",
                        "return_type": "int",
                        "description": "Gets the stroke joint type used at all vertices of the polygon's outline."
                    },
                    {
                        "name": "getStrokePattern()",
                        "return_type": "List<PatternItem>",
                        "description": "Gets the stroke pattern of this polygon's outline."
                    },
                    {
                        "name": "getStrokeWidth()",
                        "return_type": "float",
                        "description": "Gets the stroke width of this polygon."
                    },
                    {
                        "name": "getTag()",
                        "return_type": "Object",
                        "description": "Gets the tag for the polygon."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex of this polygon."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability of the polygon."
                    },
                    {
                        "name": "isGeodesic()",
                        "return_type": "boolean",
                        "description": "Gets whether each segment of the line is drawn as a geodesic or not."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility of this polygon."
                    },
                    {
                        "name": "remove()",
                        "return_type": "void",
                        "description": "Removes the polygon from the map."
                    },
                    {
                        "name": "setClickable(boolean clickable)",
                        "return_type": "void",
                        "description": "Sets the clickability of the polygon."
                    },
                    {
                        "name": "setFillColor(int color)",
                        "return_type": "void",
                        "description": "Sets the fill color of this polygon."
                    },
                    {
                        "name": "setGeodesic(boolean geodesic)",
                        "return_type": "void",
                        "description": "Sets whether to draw each segment of the line as a geodesic or not."
                    },
                    {
                        "name": "setHoles(List<? extends List<LatLng>> holes)",
                        "return_type": "void",
                        "description": "Sets the holes of this polygon."
                    },
                    {
                        "name": "setPoints(List<LatLng> points)",
                        "return_type": "void",
                        "description": "Sets the points of this polygon."
                    },
                    {
                        "name": "setStrokeColor(int color)",
                        "return_type": "void",
                        "description": "Sets the stroke color of this polygon."
                    },
                    {
                        "name": "setStrokeJointType(int jointType)",
                        "return_type": "void",
                        "description": "Sets the joint type for all vertices of the polygon's outline."
                    },
                    {
                        "name": "setStrokePattern(List<PatternItem> pattern)",
                        "return_type": "void",
                        "description": "Sets the stroke pattern of the polygon's outline."
                    },
                    {
                        "name": "setStrokeWidth(float width)",
                        "return_type": "void",
                        "description": "Sets the stroke width of this polygon."
                    },
                    {
                        "name": "setTag(Object tag)",
                        "return_type": "void",
                        "description": "Sets the tag for the polygon."
                    },
                    {
                        "name": "setVisible(boolean visible)",
                        "return_type": "void",
                        "description": "Sets the visibility of this polygon."
                    },
                    {
                        "name": "setZIndex(float zIndex)",
                        "return_type": "void",
                        "description": "Sets the zIndex of this polygon."
                    }
                ]
            },
            {
                "name": "PolygonOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/PolygonOptions",
                "description": "Defines options for a polygon.",
                "methods": [
                    {
                        "name": "add(LatLng... points)",
                        "return_type": "PolygonOptions",
                        "description": "Adds vertices to the outline of the polygon being built."
                    },
                    {
                        "name": "add(LatLng point)",
                        "return_type": "PolygonOptions",
                        "description": "Adds a vertex to the outline of the polygon being built."
                    },
                    {
                        "name": "addAll(Iterable<LatLng> points)",
                        "return_type": "PolygonOptions",
                        "description": "Adds vertices to the outline of the polygon being built."
                    },
                    {
                        "name": "addHole(Iterable<LatLng> points)",
                        "return_type": "PolygonOptions",
                        "description": "Adds a hole to the polygon being built."
                    },
                    {
                        "name": "clickable(boolean clickable)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies whether this polygon is clickable."
                    },
                    {
                        "name": "fillColor(int color)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies the polygon's fill color, as 32-bit ARGB."
                    },
                    {
                        "name": "geodesic(boolean geodesic)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies whether to draw each segment of this polygon as a geodesic."
                    },
                    {
                        "name": "getFillColor()",
                        "return_type": "int",
                        "description": "Gets the fill color set for this PolygonOptions object."
                    },
                    {
                        "name": "getHoles()",
                        "return_type": "List<List<LatLng>>",
                        "description": "Gets the holes set for this PolygonOptions object."
                    },
                    {
                        "name": "getPoints()",
                        "return_type": "List<LatLng>",
                        "description": "Gets the outline set for this PolygonOptions object."
                    },
                    {
                        "name": "getStrokeColor()",
                        "return_type": "int",
                        "description": "Gets the stroke color set for this PolygonOptions object."
                    },
                    {
                        "name": "getStrokeJointType()",
                        "return_type": "int",
                        "description": "Gets the stroke joint type set in this PolygonOptions object for all vertices of the polygon's outline."
                    },
                    {
                        "name": "getStrokePattern()",
                        "return_type": "List<PatternItem>",
                        "description": "Gets the stroke pattern set in this PolygonOptions object for the polygon's outline."
                    },
                    {
                        "name": "getStrokeWidth()",
                        "return_type": "float",
                        "description": "Gets the stroke width set for this PolygonOptions object."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex set for this PolygonOptions object."
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability setting for this PolygonOptions object."
                    },
                    {
                        "name": "isGeodesic()",
                        "return_type": "boolean",
                        "description": "Gets the geodesic setting for this PolygonOptions object."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility setting for this PolygonOptions object."
                    },
                    {
                        "name": "strokeColor(int color)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies the polygon's stroke color, as 32-bit ARGB."
                    },
                    {
                        "name": "strokeJointType(int jointType)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies the joint type for all vertices of the polygon's outline."
                    },
                    {
                        "name": "strokePattern(List<PatternItem> pattern)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies a stroke pattern for the polygon's outline."
                    },
                    {
                        "name": "strokeWidth(float width)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies the polygon's stroke width, in display pixels."
                    },
                    {
                        "name": "visible(boolean visible)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies the visibility for the polygon."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zIndex(float zIndex)",
                        "return_type": "PolygonOptions",
                        "description": "Specifies the polygon's zIndex, i.e., the order in which it will be drawn."
                    }
                ]
            },
            {
                "name": "Polyline",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Polyline",
                "description": "A polyline is a list of points, where line segments are drawn between consecutive points.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this Polyline is equal to another."
                    },
                    {
                        "name": "getColor()",
                        "return_type": "int",
                        "description": "Gets the color of this polyline."
                    },
                    {
                        "name": "getEndCap()",
                        "return_type": "Cap",
                        "description": "Gets the cap at the end vertex of this polyline."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets this polyline's id."
                    },
                    {
                        "name": "getJointType()",
                        "return_type": "int",
                        "description": "Gets the joint type used at all vertices of the polyline except the start and end vertices."
                    },
                    {
                        "name": "getPattern()",
                        "return_type": "List<PatternItem>",
                        "description": "Gets the stroke pattern of this polyline."
                    },
                    {
                        "name": "getPoints()",
                        "return_type": "List<LatLng>",
                        "description": "Returns a snapshot of the vertices of this polyline at this time ."
                    },
                    {
                        "name": "getStartCap()",
                        "return_type": "Cap",
                        "description": "Gets the cap at the start vertex of this polyline."
                    },
                    {
                        "name": "getTag()",
                        "return_type": "Object",
                        "description": "Gets the tag for the polyline."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "float",
                        "description": "Gets the width of this polyline."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex of this polyline."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability of the polyline."
                    },
                    {
                        "name": "isGeodesic()",
                        "return_type": "boolean",
                        "description": "Gets whether each segment of the line is drawn as a geodesic or not."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility of this polyline."
                    },
                    {
                        "name": "remove()",
                        "return_type": "void",
                        "description": "Removes this polyline from the map."
                    },
                    {
                        "name": "setClickable(boolean clickable)",
                        "return_type": "void",
                        "description": "Sets the clickability of the polyline."
                    },
                    {
                        "name": "setColor(int color)",
                        "return_type": "void",
                        "description": "Sets the color of this polyline."
                    },
                    {
                        "name": "setEndCap(Cap endCap)",
                        "return_type": "void",
                        "description": "Sets the cap at the end vertex of this polyline."
                    },
                    {
                        "name": "setGeodesic(boolean geodesic)",
                        "return_type": "void",
                        "description": "Sets whether to draw each segment of the line as a geodesic or not."
                    },
                    {
                        "name": "setJointType(int jointType)",
                        "return_type": "void",
                        "description": "Sets the joint type for all vertices of the polyline except the start and end vertices."
                    },
                    {
                        "name": "setPattern(List<PatternItem> pattern)",
                        "return_type": "void",
                        "description": "Sets the stroke pattern of the polyline."
                    },
                    {
                        "name": "setPoints(List<LatLng> points)",
                        "return_type": "void",
                        "description": "Sets the points of this polyline."
                    },
                    {
                        "name": "setStartCap(Cap startCap)",
                        "return_type": "void",
                        "description": "Sets the cap at the start vertex of this polyline."
                    },
                    {
                        "name": "setTag(Object tag)",
                        "return_type": "void",
                        "description": "Sets the tag for the polyline."
                    },
                    {
                        "name": "setVisible(boolean visible)",
                        "return_type": "void",
                        "description": "Sets the visibility of this polyline."
                    },
                    {
                        "name": "setWidth(float width)",
                        "return_type": "void",
                        "description": "Sets the width of this polyline."
                    },
                    {
                        "name": "setZIndex(float zIndex)",
                        "return_type": "void",
                        "description": "Sets the zIndex of this polyline."
                    }
                ]
            },
            {
                "name": "PolylineOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/PolylineOptions",
                "description": "Defines options for a polyline.",
                "methods": [
                    {
                        "name": "add(LatLng... points)",
                        "return_type": "PolylineOptions",
                        "description": "Adds vertices to the end of the polyline being built."
                    },
                    {
                        "name": "add(LatLng point)",
                        "return_type": "PolylineOptions",
                        "description": "Adds a vertex to the end of the polyline being built."
                    },
                    {
                        "name": "addAll(Iterable<LatLng> points)",
                        "return_type": "PolylineOptions",
                        "description": "Adds vertices to the end of the polyline being built."
                    },
                    {
                        "name": "clickable(boolean clickable)",
                        "return_type": "PolylineOptions",
                        "description": "Specifies whether this polyline is clickable."
                    },
                    {
                        "name": "color(int color)",
                        "return_type": "PolylineOptions",
                        "description": "Sets the color of the polyline as a 32-bit ARGB color."
                    },
                    {
                        "name": "endCap(Cap endCap)",
                        "return_type": "PolylineOptions",
                        "description": "Sets the cap at the end vertex of the polyline."
                    },
                    {
                        "name": "geodesic(boolean geodesic)",
                        "return_type": "PolylineOptions",
                        "description": "Specifies whether to draw each segment of this polyline as a geodesic."
                    },
                    {
                        "name": "getColor()",
                        "return_type": "int",
                        "description": "Gets the color set for this PolylineOptions object."
                    },
                    {
                        "name": "getEndCap()",
                        "return_type": "Cap",
                        "description": "Gets the cap set for the end vertex in this PolylineOptions object."
                    },
                    {
                        "name": "getJointType()",
                        "return_type": "int",
                        "description": "Gets the joint type set in this PolylineOptions object for all vertices except the start and end vertices."
                    },
                    {
                        "name": "getPattern()",
                        "return_type": "List<PatternItem>",
                        "description": "Gets the stroke pattern set in this PolylineOptions object for the polyline."
                    },
                    {
                        "name": "getPoints()",
                        "return_type": "List<LatLng>",
                        "description": "Gets the points set for this PolylineOptions object."
                    },
                    {
                        "name": "getStartCap()",
                        "return_type": "Cap",
                        "description": "Gets the cap set for the start vertex in this PolylineOptions object."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "float",
                        "description": "Gets the width set for this PolylineOptions object."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex set for this PolylineOptions object."
                    },
                    {
                        "name": "isClickable()",
                        "return_type": "boolean",
                        "description": "Gets the clickability setting for this PolylineOptions object."
                    },
                    {
                        "name": "isGeodesic()",
                        "return_type": "boolean",
                        "description": "Gets the geodesic setting for this PolylineOptions object."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility setting for this PolylineOptions object."
                    },
                    {
                        "name": "jointType(int jointType)",
                        "return_type": "PolylineOptions",
                        "description": "Sets the joint type for all vertices of the polyline except the start and end vertices."
                    },
                    {
                        "name": "pattern(List<PatternItem> pattern)",
                        "return_type": "PolylineOptions",
                        "description": "Sets the stroke pattern for the polyline."
                    },
                    {
                        "name": "startCap(Cap startCap)",
                        "return_type": "PolylineOptions",
                        "description": "Sets the cap at the start vertex of the polyline."
                    },
                    {
                        "name": "visible(boolean visible)",
                        "return_type": "PolylineOptions",
                        "description": "Specifies the visibility for the polyline."
                    },
                    {
                        "name": "width(float width)",
                        "return_type": "PolylineOptions",
                        "description": "Sets the width of the polyline in screen pixels."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zIndex(float zIndex)",
                        "return_type": "PolylineOptions",
                        "description": "Specifies the polyline's zIndex, i.e., the order in which it will be drawn."
                    }
                ]
            },
            {
                "name": "RoundCap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/RoundCap",
                "description": "Cap that is a semicircle with radius equal to half the stroke width, centered at the start or end vertex of a Polyline with solid stroke pattern.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SquareCap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/SquareCap",
                "description": "Cap that is squared off after extending half the stroke width beyond the start or end vertex of a Polyline with solid stroke pattern.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaCamera",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaCamera",
                "description": "An immutable class that aggregates all camera position parameters.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticStreetViewPanoramaCamera.Builder",
                        "description": "Creates a builder for a Street View panorama camera."
                    },
                    {
                        "name": "builder(StreetViewPanoramaCamera camera)",
                        "return_type": "staticStreetViewPanoramaCamera.Builder",
                        "description": "Creates a builder for a Street View panorama camera."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getOrientation()",
                        "return_type": "StreetViewPanoramaOrientation",
                        "description": "Returns the particular camera's tilt and bearing as an orientation"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaCamera.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaCamera.Builder",
                "description": "Builds panorama cameras.",
                "methods": [
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the direction that the camera is pointing in, in degrees clockwise from north."
                    },
                    {
                        "name": "build()",
                        "return_type": "StreetViewPanoramaCamera",
                        "description": "Builds a StreetViewPanoramaCamera."
                    },
                    {
                        "name": "orientation(StreetViewPanoramaOrientation orientation)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the camera tilt and bearing based upon the given orientation's tilt and bearing."
                    },
                    {
                        "name": "tilt(float tilt)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the angle, in degrees, of the camera from the horizon of the panorama."
                    },
                    {
                        "name": "zoom(float zoom)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the zoom level of the camera."
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaLink",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaLink",
                "description": "An immutable class that represents a link to another Street View panorama.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaLocation",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaLocation",
                "description": "An immutable class that contains details of the user's current Street View panorama",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaOrientation",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaOrientation",
                "description": "An immutable class that aggregates all user point of view parameters.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticStreetViewPanoramaOrientation.Builder",
                        "description": "Creates a builder for a Street View panorama orientation."
                    },
                    {
                        "name": "builder(StreetViewPanoramaOrientation orientation)",
                        "return_type": "staticStreetViewPanoramaOrientation.Builder",
                        "description": "Creates a builder for a Street View panorama orientation"
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaOrientation.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaOrientation.Builder",
                "description": "Builds Street View panorama orientations.",
                "methods": [
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "StreetViewPanoramaOrientation.Builder",
                        "description": "Sets the direction of the orientation, in degrees clockwise from north."
                    },
                    {
                        "name": "build()",
                        "return_type": "StreetViewPanoramaOrientation",
                        "description": "Builds a StreetViewPanoramaOrientation."
                    },
                    {
                        "name": "tilt(float tilt)",
                        "return_type": "StreetViewPanoramaOrientation.Builder",
                        "description": "Sets the angle, in degrees, of the orientation This value is restricted to being between -90 (directly down"
                    }
                ]
            },
            {
                "name": "StreetViewSource",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewSource",
                "description": "Identifiers to limit Street View searches to selected sources.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Tile",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/Tile",
                "description": "Contains information about a Tile that is returned by a TileProvider.",
                "methods": [
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TileOverlay",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/TileOverlay",
                "description": "A Tile Overlay is a set of images which are displayed on top of the base map tiles.",
                "methods": [
                    {
                        "name": "clearTileCache()",
                        "return_type": "void",
                        "description": "Clears the tile cache so that all tiles will be requested again from the TileProvider."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Tests if this TileOverlay is equal to another."
                    },
                    {
                        "name": "getFadeIn()",
                        "return_type": "boolean",
                        "description": "Gets whether the overlay tiles should fade in."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets this tile overlay's id."
                    },
                    {
                        "name": "getTransparency()",
                        "return_type": "float",
                        "description": "Gets the transparency of this tile overlay."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex of this tile overlay."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility of this tile overlay."
                    },
                    {
                        "name": "remove()",
                        "return_type": "void",
                        "description": "Removes this tile overlay from the map."
                    },
                    {
                        "name": "setFadeIn(boolean fadeIn)",
                        "return_type": "void",
                        "description": "Sets whether the overlay tiles should fade in."
                    },
                    {
                        "name": "setTransparency(float transparency)",
                        "return_type": "void",
                        "description": "Sets the transparency of this tile overlay."
                    },
                    {
                        "name": "setVisible(boolean visible)",
                        "return_type": "void",
                        "description": "Sets the visibility of this tile overlay."
                    },
                    {
                        "name": "setZIndex(float zIndex)",
                        "return_type": "void",
                        "description": "Sets the zIndex of this tile overlay."
                    }
                ]
            },
            {
                "name": "TileOverlayOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/TileOverlayOptions",
                "description": "Defines options for a TileOverlay.",
                "methods": [
                    {
                        "name": "fadeIn(boolean fadeIn)",
                        "return_type": "TileOverlayOptions",
                        "description": "Specifies whether the tiles should fade in."
                    },
                    {
                        "name": "getFadeIn()",
                        "return_type": "boolean",
                        "description": "Gets whether the tiles should fade in."
                    },
                    {
                        "name": "getTileProvider()",
                        "return_type": "TileProvider",
                        "description": "Gets the tile provider set for this TileOverlayOptions object."
                    },
                    {
                        "name": "getTransparency()",
                        "return_type": "float",
                        "description": "Gets the transparency set for this TileOverlayOptions object."
                    },
                    {
                        "name": "getZIndex()",
                        "return_type": "float",
                        "description": "Gets the zIndex set for this TileOverlayOptions object."
                    },
                    {
                        "name": "isVisible()",
                        "return_type": "boolean",
                        "description": "Gets the visibility setting for this TileOverlayOptions object."
                    },
                    {
                        "name": "tileProvider(TileProvider tileProvider)",
                        "return_type": "TileOverlayOptions",
                        "description": "Specifies the tile provider to use for this tile overlay."
                    },
                    {
                        "name": "transparency(float transparency)",
                        "return_type": "TileOverlayOptions",
                        "description": "Specifies the transparency of the tile overlay."
                    },
                    {
                        "name": "visible(boolean visible)",
                        "return_type": "TileOverlayOptions",
                        "description": "Specifies the visibility for the tile overlay."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zIndex(float zIndex)",
                        "return_type": "TileOverlayOptions",
                        "description": "Specifies the tile overlay's zIndex, i.e., the order in which it will be drawn where overlays with larger values are drawn above those with lower values."
                    }
                ]
            },
            {
                "name": "UrlTileProvider",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/UrlTileProvider",
                "description": "A partial implementation of TileProvider that only requires a URL that points to an image to be provided.",
                "methods": [
                    {
                        "name": "getTile(int x, int y, int zoom)",
                        "return_type": "finalTile",
                        "description": "Returns the Tile to be used for this tile coordinate."
                    },
                    {
                        "name": "getTileUrl(int x, int y, int zoom)",
                        "return_type": "abstractURL",
                        "description": "Returns a URL that points to the image to be used for this tile."
                    }
                ]
            },
            {
                "name": "VisibleRegion",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/model/VisibleRegion",
                "description": "Contains the four points defining the four-sided polygon that is visible in a map's camera.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": "Compares this VisibleRegion to another object."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TileProvider",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/model/TileProvider",
                "description": "An interface for a class that provides the tile images for a TileOverlay.",
                "methods": [
                    {
                        "name": "getTile(int x, int y, int zoom)",
                        "return_type": "abstractTile",
                        "description": "Returns the tile to be used for this tile coordinate."
                    }
                ]
            },
            {
                "name": "CameraPosition.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/maps/model/CameraPosition.Builder",
                "description": "Builds camera position.",
                "methods": [
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the direction that the camera is pointing in, in degrees clockwise from north."
                    },
                    {
                        "name": "build()",
                        "return_type": "CameraPosition",
                        "description": "Builds a CameraPosition."
                    },
                    {
                        "name": "target(LatLng location)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the location that the camera is pointing at."
                    },
                    {
                        "name": "tilt(float tilt)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the angle, in degrees, of the camera from the nadir (directly facing the Earth"
                    },
                    {
                        "name": "zoom(float zoom)",
                        "return_type": "CameraPosition.Builder",
                        "description": "Sets the zoom level of the camera."
                    }
                ]
            },
            {
                "name": "LatLngBounds.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/maps/model/LatLngBounds.Builder",
                "description": "This is a builder that is able to create a minimum bound based on a set of LatLng points.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LatLngBounds",
                        "description": "Creates the LatLng bounds."
                    },
                    {
                        "name": "include(LatLng point)",
                        "return_type": "LatLngBounds.Builder",
                        "description": "Includes this point for building of the bounds."
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaCamera.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaCamera.Builder",
                "description": "Builds panorama cameras.",
                "methods": [
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the direction that the camera is pointing in, in degrees clockwise from north."
                    },
                    {
                        "name": "build()",
                        "return_type": "StreetViewPanoramaCamera",
                        "description": "Builds a StreetViewPanoramaCamera."
                    },
                    {
                        "name": "orientation(StreetViewPanoramaOrientation orientation)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the camera tilt and bearing based upon the given orientation's tilt and bearing."
                    },
                    {
                        "name": "tilt(float tilt)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the angle, in degrees, of the camera from the horizon of the panorama."
                    },
                    {
                        "name": "zoom(float zoom)",
                        "return_type": "StreetViewPanoramaCamera.Builder",
                        "description": "Sets the zoom level of the camera."
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaOrientation.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/maps/model/StreetViewPanoramaOrientation.Builder",
                "description": "Builds Street View panorama orientations.",
                "methods": [
                    {
                        "name": "bearing(float bearing)",
                        "return_type": "StreetViewPanoramaOrientation.Builder",
                        "description": "Sets the direction of the orientation, in degrees clockwise from north."
                    },
                    {
                        "name": "build()",
                        "return_type": "StreetViewPanoramaOrientation",
                        "description": "Builds a StreetViewPanoramaOrientation."
                    },
                    {
                        "name": "tilt(float tilt)",
                        "return_type": "StreetViewPanoramaOrientation.Builder",
                        "description": "Sets the angle, in degrees, of the orientation This value is restricted to being between -90 (directly down"
                    }
                ]
            }
        ]
    },
    {
        "name": "face",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/vision/face/package-summary",
        "classes": [
            {
                "name": "Contour",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/Contour",
                "description": "A set of points that outlines a facial landmark or region such as eye, face, or lips.",
                "methods": [
                    {
                        "name": "getPositions()",
                        "return_type": "PointF[]",
                        "description": "Returns a set of the (x, y"
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the type of contour (LEFT_EYE, RIGHT_EYE, FACE, etc."
                    }
                ]
            },
            {
                "name": "Face",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/Face",
                "description": "A human face detected in an image or video.",
                "methods": [
                    {
                        "name": "getContours()",
                        "return_type": "List<Contour>",
                        "description": "Returns a list of contours (eyes, nose, etc."
                    },
                    {
                        "name": "getEulerY()",
                        "return_type": "float",
                        "description": "Returns the rotation of the face about the vertical axis of the image."
                    },
                    {
                        "name": "getEulerZ()",
                        "return_type": "float",
                        "description": "Returns the rotation of the face about the axis pointing out of the image."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "float",
                        "description": "Returns the height of the face region in pixels."
                    },
                    {
                        "name": "getId()",
                        "return_type": "int",
                        "description": "Returns the face ID."
                    },
                    {
                        "name": "getIsLeftEyeOpenProbability()",
                        "return_type": "float",
                        "description": "Returns a value between 0.0 and 1.0 giving a probability that the face's left eye is open."
                    },
                    {
                        "name": "getIsRightEyeOpenProbability()",
                        "return_type": "float",
                        "description": "Returns a value between 0.0 and 1.0 giving a probability that the face's right eye is open."
                    },
                    {
                        "name": "getIsSmilingProbability()",
                        "return_type": "float",
                        "description": "Returns a value between 0.0 and 1.0 giving a probability that the face is smiling."
                    },
                    {
                        "name": "getLandmarks()",
                        "return_type": "List<Landmark>",
                        "description": "Returns a list of Landmarks (eyes, nose, etc."
                    },
                    {
                        "name": "getPosition()",
                        "return_type": "PointF",
                        "description": "Returns the top left position of the face within the image."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "float",
                        "description": "Returns the width of the face region in pixels."
                    }
                ]
            },
            {
                "name": "FaceDetector",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/FaceDetector",
                "description": "Detector for finding Faces in a supplied image.",
                "methods": [
                    {
                        "name": "detect(Frame frame)",
                        "return_type": "SparseArray<Face>",
                        "description": "Analyzes the supplied frame to find faces, returning faces with associated tracking ID mappings."
                    },
                    {
                        "name": "isOperational()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Releases the resources associated with this detector."
                    },
                    {
                        "name": "setFocus(int id)",
                        "return_type": "boolean",
                        "description": "Sets the ID of the face to exclusively track in future use of the detector."
                    }
                ]
            },
            {
                "name": "FaceDetector.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/FaceDetector.Builder",
                "description": "Builder for creating face detector instances.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "FaceDetector",
                        "description": "Builds a face detector instance."
                    },
                    {
                        "name": "setClassificationType(int classificationType)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Indicates whether to run additional classifiers for characterizing attributes such as \"smiling\" and \"eyes open\"."
                    },
                    {
                        "name": "setLandmarkType(int landmarkType)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Sets whether to detect no landmarks, all landmarks, or contour landmarks."
                    },
                    {
                        "name": "setMinFaceSize(float proportionalMinFaceSize)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Sets the smallest desired face size, expressed as a proportion of the width of the head to the image width."
                    },
                    {
                        "name": "setMode(int mode)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Extended option for controlling additional accuracy / speed trade-offs in performing face detection."
                    },
                    {
                        "name": "setProminentFaceOnly(boolean prominentFaceOnly)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Indicates whether to detect all faces, or to only detect the most prominent face (i.e., a large face that is most central within the frame"
                    },
                    {
                        "name": "setTrackingEnabled(boolean trackingEnabled)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Enables or disables face tracking, which will maintain a consistent ID for each face when processing consecutive frames."
                    }
                ]
            },
            {
                "name": "Landmark",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/Landmark",
                "description": "A point on a detected face, such as an eye, nose, or mouth.",
                "methods": [
                    {
                        "name": "getPosition()",
                        "return_type": "PointF",
                        "description": "Returns the (x, y"
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the type of landmark (LEFT_EYE, RIGHT_EYE, NOSE_BASE, etc."
                    }
                ]
            },
            {
                "name": "LargestFaceFocusingProcessor",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/LargestFaceFocusingProcessor",
                "description": "Face processor that focuses on tracking a single \"prominent face\", in conjunction with the associated FaceDetector.",
                "methods": []
            },
            {
                "name": "LargestFaceFocusingProcessor.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/face/LargestFaceFocusingProcessor.Builder",
                "description": "Builder for creating a LargestFaceFocusingProcessor.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LargestFaceFocusingProcessor",
                        "description": "Builds the LargestFaceFocusingProcessor instance."
                    },
                    {
                        "name": "setMaxGapFrames(int maxGapFrames)",
                        "return_type": "LargestFaceFocusingProcessor.Builder",
                        "description": "Sets the maximum allowable gap for inferring whether a face will never be seen again in the series of frames that are being processed by the detector."
                    }
                ]
            },
            {
                "name": "FaceDetector.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/face/FaceDetector.Builder",
                "description": "Builder for creating face detector instances.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "FaceDetector",
                        "description": "Builds a face detector instance."
                    },
                    {
                        "name": "setClassificationType(int classificationType)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Indicates whether to run additional classifiers for characterizing attributes such as \"smiling\" and \"eyes open\"."
                    },
                    {
                        "name": "setLandmarkType(int landmarkType)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Sets whether to detect no landmarks, all landmarks, or contour landmarks."
                    },
                    {
                        "name": "setMinFaceSize(float proportionalMinFaceSize)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Sets the smallest desired face size, expressed as a proportion of the width of the head to the image width."
                    },
                    {
                        "name": "setMode(int mode)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Extended option for controlling additional accuracy / speed trade-offs in performing face detection."
                    },
                    {
                        "name": "setProminentFaceOnly(boolean prominentFaceOnly)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Indicates whether to detect all faces, or to only detect the most prominent face (i.e., a large face that is most central within the frame"
                    },
                    {
                        "name": "setTrackingEnabled(boolean trackingEnabled)",
                        "return_type": "FaceDetector.Builder",
                        "description": "Enables or disables face tracking, which will maintain a consistent ID for each face when processing consecutive frames."
                    }
                ]
            },
            {
                "name": "LargestFaceFocusingProcessor.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/face/LargestFaceFocusingProcessor.Builder",
                "description": "Builder for creating a LargestFaceFocusingProcessor.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LargestFaceFocusingProcessor",
                        "description": "Builds the LargestFaceFocusingProcessor instance."
                    },
                    {
                        "name": "setMaxGapFrames(int maxGapFrames)",
                        "return_type": "LargestFaceFocusingProcessor.Builder",
                        "description": "Sets the maximum allowable gap for inferring whether a face will never be seen again in the series of frames that are being processed by the detector."
                    }
                ]
            }
        ]
    },
    {
        "name": "credentials",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/api/credentials/package-summary",
        "classes": [
            {
                "name": "Credential",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/Credential",
                "description": "A credential that can be used to authenticate a user, with additional user information used to distinguish this credential from other available credentials.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccountType()",
                        "return_type": "String",
                        "description": "Returns the type of federated identity account used to sign in the user."
                    },
                    {
                        "name": "getFamilyName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getGivenName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Returns the credential identifier."
                    },
                    {
                        "name": "getIdTokens()",
                        "return_type": "List<IdToken>",
                        "description": "Returns the ID tokens that assert the identity of the user, if available."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the display name of the credential, if available."
                    },
                    {
                        "name": "getPassword()",
                        "return_type": "String",
                        "description": "Returns the password used to sign in the user."
                    },
                    {
                        "name": "getProfilePictureUri()",
                        "return_type": "Uri",
                        "description": "Returns the URL to an image of the user, if available."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Credential.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/Credential.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Credential",
                        "description": ""
                    },
                    {
                        "name": "setAccountType(String accountType)",
                        "return_type": "Credential.Builder",
                        "description": "Specifies the account type for a federated credential."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Credential.Builder",
                        "description": "Sets the display name for the credential, which should be easy for the user to recognize as associated to the credential, and distinguishable from other credentials they may have."
                    },
                    {
                        "name": "setPassword(String password)",
                        "return_type": "Credential.Builder",
                        "description": "Sets the password for the credential."
                    },
                    {
                        "name": "setProfilePictureUri(Uri profilePictureUri)",
                        "return_type": "Credential.Builder",
                        "description": "Sets a profile picture associated with the credential, typically a picture the user has selected to represent the account."
                    }
                ]
            },
            {
                "name": "CredentialPickerConfig",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialPickerConfig",
                "description": "Configuration for credential picker.",
                "methods": [
                    {
                        "name": "isForNewAccount()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. It was determined that this method was not useful for developers."
                    },
                    {
                        "name": "shouldShowAddAccountButton()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "shouldShowCancelButton()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CredentialPickerConfig.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialPickerConfig.Builder",
                "description": "Builder for CredentialPickerConfig.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialPickerConfig",
                        "description": ""
                    },
                    {
                        "name": "setForNewAccount(boolean forNewAccount)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "This method is deprecated. Replaced by setPrompt(int"
                    },
                    {
                        "name": "setPrompt(int prompt)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "Sets the text prompt for the hint picker dialog title."
                    },
                    {
                        "name": "setShowAddAccountButton(boolean showAddAccountButton)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "Sets whether the add account button should be shown in credential picker dialog."
                    },
                    {
                        "name": "setShowCancelButton(boolean showCancelButton)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "Sets whether the cancel button should be shown in credential picker dialog."
                    }
                ]
            },
            {
                "name": "CredentialRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialRequest",
                "description": "Parameters for requesting a Credential, via CredentialsApi.request(com.google.android.gms.common.api.GoogleApiClient, CredentialRequest).",
                "methods": [
                    {
                        "name": "getAccountTypes()",
                        "return_type": "String[]",
                        "description": ""
                    },
                    {
                        "name": "getAccountTypesSet()",
                        "return_type": "Set<String>",
                        "description": ""
                    },
                    {
                        "name": "getCredentialHintPickerConfig()",
                        "return_type": "CredentialPickerConfig",
                        "description": ""
                    },
                    {
                        "name": "getCredentialPickerConfig()",
                        "return_type": "CredentialPickerConfig",
                        "description": ""
                    },
                    {
                        "name": "getIdTokenNonce()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getServerClientId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getSupportsPasswordLogin()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Use isPasswordLoginSupported("
                    },
                    {
                        "name": "isIdTokenRequested()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isPasswordLoginSupported()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CredentialRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialRequest.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialRequest",
                        "description": "Builds a CredentialRequest."
                    },
                    {
                        "name": "setAccountTypes(String... accountTypes)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Sets the account types (identity providers"
                    },
                    {
                        "name": "setCredentialHintPickerConfig(CredentialPickerConfig config)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Sets the configuration for credential hint picker."
                    },
                    {
                        "name": "setCredentialPickerConfig(CredentialPickerConfig config)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Sets the configuration for credential picker."
                    },
                    {
                        "name": "setIdTokenNonce(String idTokenNonce)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Specify a nonce value that should be included in any generated ID token for this request."
                    },
                    {
                        "name": "setIdTokenRequested(boolean idTokenRequested)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Specify whether an ID token should be acquired for retrieved credentials or hints, if available for the credential identifier."
                    },
                    {
                        "name": "setPasswordLoginSupported(boolean passwordLoginSupported)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Enables returning credentials with a password, that is verified by the application."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Specify the server client ID for the backend associated with this app."
                    },
                    {
                        "name": "setSupportsPasswordLogin(boolean supportsPasswordLogin)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "This method is deprecated. Use setPasswordLoginSupported(boolean"
                    }
                ]
            },
            {
                "name": "CredentialRequestResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialRequestResponse",
                "description": "Result returned from a request for a credential.",
                "methods": [
                    {
                        "name": "getCredential()",
                        "return_type": "Credential",
                        "description": "Gets a Credential that can be used to authenticate the user."
                    }
                ]
            },
            {
                "name": "Credentials",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/Credentials",
                "description": "Entry point for the Credentials API.",
                "methods": [
                    {
                        "name": "getClient(Context context, CredentialsOptions options)",
                        "return_type": "staticCredentialsClient",
                        "description": "Create a new instance of CredentialsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticCredentialsClient",
                        "description": "Create a new instance of CredentialsClient for use in an Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticCredentialsClient",
                        "description": "Create a new instance of CredentialsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getClient(Activity activity, CredentialsOptions options)",
                        "return_type": "staticCredentialsClient",
                        "description": "Create a new instance of CredentialsClient for use in an Activity."
                    }
                ]
            },
            {
                "name": "CredentialsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialsClient",
                "description": "Entry point for requesting a credential and indicating whether sign-in was successful using the credential.",
                "methods": [
                    {
                        "name": "delete(Credential credential)",
                        "return_type": "Task<Void>",
                        "description": "Deletes a credential that is no longer valid for signing into the app."
                    },
                    {
                        "name": "disableAutoSignIn()",
                        "return_type": "Task<Void>",
                        "description": "Disables auto sign-in for the calling app on the current device only, until a successful call to save(Credential"
                    },
                    {
                        "name": "getHintPickerIntent(HintRequest request)",
                        "return_type": "PendingIntent",
                        "description": "Provides an intent to directly display the hint picker to the user, to aid in new account creation."
                    },
                    {
                        "name": "request(CredentialRequest request)",
                        "return_type": "Task<CredentialRequestResponse>",
                        "description": "Tries to suggest a zero-click sign-in account."
                    },
                    {
                        "name": "save(Credential credential)",
                        "return_type": "Task<Void>",
                        "description": "Saves a credential that was used to sign in to the app."
                    }
                ]
            },
            {
                "name": "CredentialsOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialsOptions",
                "description": "Optional configuration for the Credentials API.",
                "methods": []
            },
            {
                "name": "CredentialsOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialsOptions.Builder",
                "description": "Builder for CredentialsOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialsOptions",
                        "description": "Returns a new CredentialsOptions."
                    },
                    {
                        "name": "forceEnableSaveDialog()",
                        "return_type": "CredentialsOptions.Builder",
                        "description": "Specifies that the save confirmation dialog should always be shown when required."
                    }
                ]
            },
            {
                "name": "HintRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/HintRequest",
                "description": "Parameters for requesting the display of the hint picker, via getHintPickerIntent().",
                "methods": [
                    {
                        "name": "getAccountTypes()",
                        "return_type": "String[]",
                        "description": ""
                    },
                    {
                        "name": "getHintPickerConfig()",
                        "return_type": "CredentialPickerConfig",
                        "description": ""
                    },
                    {
                        "name": "getIdTokenNonce()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getServerClientId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "isEmailAddressIdentifierSupported()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isIdTokenRequested()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "HintRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/HintRequest.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "HintRequest",
                        "description": "Builds a HintRequest."
                    },
                    {
                        "name": "setAccountTypes(String... accountTypes)",
                        "return_type": "HintRequest.Builder",
                        "description": "Sets the account types (identity providers"
                    },
                    {
                        "name": "setEmailAddressIdentifierSupported(boolean emailAddressIdentifierSupported)",
                        "return_type": "HintRequest.Builder",
                        "description": "Enables returning credential hints where the identifier is an email address, intended for use with a password chosen by the user."
                    },
                    {
                        "name": "setHintPickerConfig(CredentialPickerConfig hintPickerConfig)",
                        "return_type": "HintRequest.Builder",
                        "description": "Sets the configuration for the hint picker dialog."
                    },
                    {
                        "name": "setIdTokenNonce(String idTokenNonce)",
                        "return_type": "HintRequest.Builder",
                        "description": "Specify a nonce value that should be included in any generated ID token for this request."
                    },
                    {
                        "name": "setIdTokenRequested(boolean idTokenRequested)",
                        "return_type": "HintRequest.Builder",
                        "description": "Specify whether an ID token should be acquired for hints, if available for the selected credential identifier."
                    },
                    {
                        "name": "setPhoneNumberIdentifierSupported(boolean phoneNumberIdentifierSupported)",
                        "return_type": "HintRequest.Builder",
                        "description": "Enables returning credential hints where the identifier is a phone number, intended for use with a password chosen by the user or SMS verification."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "HintRequest.Builder",
                        "description": "Specify the server client ID for the backend associated with this app."
                    }
                ]
            },
            {
                "name": "IdentityProviders",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/IdentityProviders",
                "description": "Identity provider constants for use with CredentialRequest.Builder.setAccountTypes().",
                "methods": [
                    {
                        "name": "getIdentityProviderForAccount(Account account)",
                        "return_type": "staticString",
                        "description": "Attempts to translate the account type in the provided account into the string that should be used in the credentials API."
                    }
                ]
            },
            {
                "name": "IdToken",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/IdToken",
                "description": "A token that is signed by an Authenticator to confirm that the account specified in the idToken is a valid account of accountType.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccountType()",
                        "return_type": "String",
                        "description": "Returns AccountManager account type for the token."
                    },
                    {
                        "name": "getIdToken()",
                        "return_type": "String",
                        "description": "Returns the ID token, formatted according to the rules defined by the account type."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CredentialRequestResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialRequestResult",
                "description": "Result returned from a request for a credential.",
                "methods": [
                    {
                        "name": "getCredential()",
                        "return_type": "abstractCredential",
                        "description": "Gets a Credential that can be used to authenticate the user."
                    }
                ]
            },
            {
                "name": "CredentialsApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialsApi",
                "description": "Entry point for requesting a credential and indicating whether sign-in was successful using the credential.",
                "methods": [
                    {
                        "name": "delete(GoogleApiClient client, Credential credential)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Deletes a credential that is no longer valid for signing into the app."
                    },
                    {
                        "name": "disableAutoSignIn(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Disables auto sign-in for the calling app on the current device only, until a successful call to save is subsequently made."
                    },
                    {
                        "name": "getHintPickerIntent(GoogleApiClient client, HintRequest request)",
                        "return_type": "abstractPendingIntent",
                        "description": "Provides an intent to directly display the hint picker to the user, to aid in new account creation."
                    },
                    {
                        "name": "request(GoogleApiClient client, CredentialRequest request)",
                        "return_type": "abstractPendingResult<CredentialRequestResult>",
                        "description": "Tries to suggest a zero-click sign-in account."
                    },
                    {
                        "name": "save(GoogleApiClient client, Credential credential)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Saves a credential that was used to sign in to the app."
                    }
                ]
            },
            {
                "name": "Credential.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/Credential.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Credential",
                        "description": ""
                    },
                    {
                        "name": "setAccountType(String accountType)",
                        "return_type": "Credential.Builder",
                        "description": "Specifies the account type for a federated credential."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Credential.Builder",
                        "description": "Sets the display name for the credential, which should be easy for the user to recognize as associated to the credential, and distinguishable from other credentials they may have."
                    },
                    {
                        "name": "setPassword(String password)",
                        "return_type": "Credential.Builder",
                        "description": "Sets the password for the credential."
                    },
                    {
                        "name": "setProfilePictureUri(Uri profilePictureUri)",
                        "return_type": "Credential.Builder",
                        "description": "Sets a profile picture associated with the credential, typically a picture the user has selected to represent the account."
                    }
                ]
            },
            {
                "name": "CredentialPickerConfig.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialPickerConfig.Builder",
                "description": "Builder for CredentialPickerConfig.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialPickerConfig",
                        "description": ""
                    },
                    {
                        "name": "setForNewAccount(boolean forNewAccount)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "This method is deprecated. Replaced by setPrompt(int"
                    },
                    {
                        "name": "setPrompt(int prompt)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "Sets the text prompt for the hint picker dialog title."
                    },
                    {
                        "name": "setShowAddAccountButton(boolean showAddAccountButton)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "Sets whether the add account button should be shown in credential picker dialog."
                    },
                    {
                        "name": "setShowCancelButton(boolean showCancelButton)",
                        "return_type": "CredentialPickerConfig.Builder",
                        "description": "Sets whether the cancel button should be shown in credential picker dialog."
                    }
                ]
            },
            {
                "name": "CredentialRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialRequest.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialRequest",
                        "description": "Builds a CredentialRequest."
                    },
                    {
                        "name": "setAccountTypes(String... accountTypes)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Sets the account types (identity providers"
                    },
                    {
                        "name": "setCredentialHintPickerConfig(CredentialPickerConfig config)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Sets the configuration for credential hint picker."
                    },
                    {
                        "name": "setCredentialPickerConfig(CredentialPickerConfig config)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Sets the configuration for credential picker."
                    },
                    {
                        "name": "setIdTokenNonce(String idTokenNonce)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Specify a nonce value that should be included in any generated ID token for this request."
                    },
                    {
                        "name": "setIdTokenRequested(boolean idTokenRequested)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Specify whether an ID token should be acquired for retrieved credentials or hints, if available for the credential identifier."
                    },
                    {
                        "name": "setPasswordLoginSupported(boolean passwordLoginSupported)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Enables returning credentials with a password, that is verified by the application."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "Specify the server client ID for the backend associated with this app."
                    },
                    {
                        "name": "setSupportsPasswordLogin(boolean supportsPasswordLogin)",
                        "return_type": "CredentialRequest.Builder",
                        "description": "This method is deprecated. Use setPasswordLoginSupported(boolean"
                    }
                ]
            },
            {
                "name": "CredentialsOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/CredentialsOptions.Builder",
                "description": "Builder for CredentialsOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialsOptions",
                        "description": "Returns a new CredentialsOptions."
                    },
                    {
                        "name": "forceEnableSaveDialog()",
                        "return_type": "CredentialsOptions.Builder",
                        "description": "Specifies that the save confirmation dialog should always be shown when required."
                    }
                ]
            },
            {
                "name": "HintRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/credentials/HintRequest.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "HintRequest",
                        "description": "Builds a HintRequest."
                    },
                    {
                        "name": "setAccountTypes(String... accountTypes)",
                        "return_type": "HintRequest.Builder",
                        "description": "Sets the account types (identity providers"
                    },
                    {
                        "name": "setEmailAddressIdentifierSupported(boolean emailAddressIdentifierSupported)",
                        "return_type": "HintRequest.Builder",
                        "description": "Enables returning credential hints where the identifier is an email address, intended for use with a password chosen by the user."
                    },
                    {
                        "name": "setHintPickerConfig(CredentialPickerConfig hintPickerConfig)",
                        "return_type": "HintRequest.Builder",
                        "description": "Sets the configuration for the hint picker dialog."
                    },
                    {
                        "name": "setIdTokenNonce(String idTokenNonce)",
                        "return_type": "HintRequest.Builder",
                        "description": "Specify a nonce value that should be included in any generated ID token for this request."
                    },
                    {
                        "name": "setIdTokenRequested(boolean idTokenRequested)",
                        "return_type": "HintRequest.Builder",
                        "description": "Specify whether an ID token should be acquired for hints, if available for the selected credential identifier."
                    },
                    {
                        "name": "setPhoneNumberIdentifierSupported(boolean phoneNumberIdentifierSupported)",
                        "return_type": "HintRequest.Builder",
                        "description": "Enables returning credential hints where the identifier is a phone number, intended for use with a password chosen by the user or SMS verification."
                    },
                    {
                        "name": "setServerClientId(String serverClientId)",
                        "return_type": "HintRequest.Builder",
                        "description": "Specify the server client ID for the backend associated with this app."
                    }
                ]
            }
        ]
    },
    {
        "name": "appindexing",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/appindexing/package-summary",
        "classes": [
            {
                "name": "Action",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/Action",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "newAction(String actionType, String objectName, Uri objectId, Uri objectAppUri)",
                        "return_type": "staticAction",
                        "description": "Creates a new action."
                    },
                    {
                        "name": "newAction(String actionType, String objectName, Uri objectAppUri)",
                        "return_type": "staticAction",
                        "description": "Creates a new action."
                    }
                ]
            },
            {
                "name": "Action.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/Action.Builder",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Action",
                        "description": "Build the Action object."
                    },
                    {
                        "name": "put(String key, Thing value)",
                        "return_type": "Action.Builder",
                        "description": "Sets a property of the action."
                    },
                    {
                        "name": "put(String key, Thing[] values)",
                        "return_type": "Action.Builder",
                        "description": "Sets properties of the action."
                    },
                    {
                        "name": "put(String key, String value)",
                        "return_type": "Action.Builder",
                        "description": "Sets a property of the action."
                    },
                    {
                        "name": "put(String key, String[] values)",
                        "return_type": "Action.Builder",
                        "description": "Sets properties of the action."
                    },
                    {
                        "name": "put(String key, boolean value)",
                        "return_type": "Action.Builder",
                        "description": "Sets a property of the action."
                    },
                    {
                        "name": "setActionStatus(String actionStatusType)",
                        "return_type": "Action.Builder",
                        "description": "Specify the status of the action."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Action.Builder",
                        "description": "Sets the name of the action."
                    },
                    {
                        "name": "setObject(Thing thing)",
                        "return_type": "Action.Builder",
                        "description": "Sets the object of the action."
                    },
                    {
                        "name": "setUrl(Uri url)",
                        "return_type": "Action.Builder",
                        "description": "Sets the app URI of the action."
                    }
                ]
            },
            {
                "name": "AndroidAppUri",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/AndroidAppUri",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDeepLinkUri()",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "getPackageName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "newAndroidAppUri(String packageName, Uri deepLink)",
                        "return_type": "staticAndroidAppUri",
                        "description": "This method is deprecated. Please Handling App Links"
                    },
                    {
                        "name": "newAndroidAppUri(Uri uri)",
                        "return_type": "staticAndroidAppUri",
                        "description": "This method is deprecated. Please Handling App Links"
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "toUri()",
                        "return_type": "Uri",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AppIndex",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/AppIndex",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": []
            },
            {
                "name": "AppIndexApi.AppIndexingLink",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/AppIndexApi.AppIndexingLink",
                "description": "This class is deprecated. No replacement.",
                "methods": []
            },
            {
                "name": "Thing",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/Thing",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": []
            },
            {
                "name": "Thing.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appindexing/Thing.Builder",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Thing",
                        "description": "Build the Thing object."
                    },
                    {
                        "name": "put(String key, Thing value)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "put(String key, Thing[] values)",
                        "return_type": "Thing.Builder",
                        "description": "Sets properties of the content."
                    },
                    {
                        "name": "put(String key, String value)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "put(String key, String[] values)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "put(String key, boolean value)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the optional description of the content."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the optional web URL of the content."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the name of the content."
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the schema.org type of the content."
                    },
                    {
                        "name": "setUrl(Uri url)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the URL of the content in the app."
                    }
                ]
            },
            {
                "name": "AppIndexApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/appindexing/AppIndexApi",
                "description": "This interface is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "action(GoogleApiClient apiClient, Action action)",
                        "return_type": "abstractAppIndexApi.ActionResult",
                        "description": "This method is deprecated. Use start(GoogleApiClient, Action"
                    },
                    {
                        "name": "end(GoogleApiClient apiClient, Action action)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Indicates that the user has ended a specific action in your app."
                    },
                    {
                        "name": "start(GoogleApiClient apiClient, Action action)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Indicates that the user has started a specific action in your app."
                    },
                    {
                        "name": "view(GoogleApiClient apiClient, Activity activity, Intent viewIntent, String title, Uri webUrl, List<AppIndexApi.AppIndexingLink> outLinks)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use start(GoogleApiClient, Action"
                    },
                    {
                        "name": "view(GoogleApiClient apiClient, Activity activity, Uri appUri, String title, Uri webUrl, List<AppIndexApi.AppIndexingLink> outLinks)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use start(GoogleApiClient, Action"
                    },
                    {
                        "name": "viewEnd(GoogleApiClient apiClient, Activity activity, Intent viewIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use end(GoogleApiClient, Action"
                    },
                    {
                        "name": "viewEnd(GoogleApiClient apiClient, Activity activity, Uri appUri)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use start(GoogleApiClient, Action"
                    }
                ]
            },
            {
                "name": "AppIndexApi.ActionResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/appindexing/AppIndexApi.ActionResult",
                "description": "This interface is deprecated. Use AppIndexApi.start(GoogleApiClient, Action) and AppIndexApi.end(GoogleApiClient, Action).",
                "methods": [
                    {
                        "name": "end(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Indicates that a user completed an action."
                    },
                    {
                        "name": "getPendingResult()",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Represents the result of a call to the AppIndexApi.action(GoogleApiClient, Action"
                    }
                ]
            },
            {
                "name": "Action.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/appindexing/Action.Builder",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Action",
                        "description": "Build the Action object."
                    },
                    {
                        "name": "put(String key, Thing value)",
                        "return_type": "Action.Builder",
                        "description": "Sets a property of the action."
                    },
                    {
                        "name": "put(String key, Thing[] values)",
                        "return_type": "Action.Builder",
                        "description": "Sets properties of the action."
                    },
                    {
                        "name": "put(String key, String value)",
                        "return_type": "Action.Builder",
                        "description": "Sets a property of the action."
                    },
                    {
                        "name": "put(String key, String[] values)",
                        "return_type": "Action.Builder",
                        "description": "Sets properties of the action."
                    },
                    {
                        "name": "put(String key, boolean value)",
                        "return_type": "Action.Builder",
                        "description": "Sets a property of the action."
                    },
                    {
                        "name": "setActionStatus(String actionStatusType)",
                        "return_type": "Action.Builder",
                        "description": "Specify the status of the action."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Action.Builder",
                        "description": "Sets the name of the action."
                    },
                    {
                        "name": "setObject(Thing thing)",
                        "return_type": "Action.Builder",
                        "description": "Sets the object of the action."
                    },
                    {
                        "name": "setUrl(Uri url)",
                        "return_type": "Action.Builder",
                        "description": "Sets the app URI of the action."
                    }
                ]
            },
            {
                "name": "Thing.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/appindexing/Thing.Builder",
                "description": "This class is deprecated. Please Migrate to the Firebase App Indexing API",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Thing",
                        "description": "Build the Thing object."
                    },
                    {
                        "name": "put(String key, Thing value)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "put(String key, Thing[] values)",
                        "return_type": "Thing.Builder",
                        "description": "Sets properties of the content."
                    },
                    {
                        "name": "put(String key, String value)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "put(String key, String[] values)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "put(String key, boolean value)",
                        "return_type": "Thing.Builder",
                        "description": "Sets a property of the content."
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the optional description of the content."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the optional web URL of the content."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the name of the content."
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the schema.org type of the content."
                    },
                    {
                        "name": "setUrl(Uri url)",
                        "return_type": "Thing.Builder",
                        "description": "Sets the URL of the content in the app."
                    }
                ]
            },
            {
                "name": "AppIndexApi.ActionResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/appindexing/AppIndexApi.ActionResult",
                "description": "This interface is deprecated. Use AppIndexApi.start(GoogleApiClient, Action) and AppIndexApi.end(GoogleApiClient, Action).",
                "methods": [
                    {
                        "name": "end(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Indicates that a user completed an action."
                    },
                    {
                        "name": "getPendingResult()",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Represents the result of a call to the AppIndexApi.action(GoogleApiClient, Action"
                    }
                ]
            },
            {
                "name": "AppIndexApi.AppIndexingLink",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/appindexing/AppIndexApi.AppIndexingLink",
                "description": "This class is deprecated. No replacement.",
                "methods": []
            }
        ]
    },
    {
        "name": "places",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/location/places/package-summary",
        "classes": [
            {
                "name": "AddPlaceRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/AddPlaceRequest",
                "description": "This class is deprecated. The addPlace() method is deprecated as of June 30, 2017. This feature will be turned down on June 30, 2018, and will no longer be available after that date.",
                "methods": [
                    {
                        "name": "getAddress()",
                        "return_type": "String",
                        "description": "Returns the human-readable street address of the place."
                    },
                    {
                        "name": "getLatLng()",
                        "return_type": "LatLng",
                        "description": "Returns the geographic location of the place."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the name of the place."
                    },
                    {
                        "name": "getPhoneNumber()",
                        "return_type": "String",
                        "description": "Returns the phone number for the place."
                    },
                    {
                        "name": "getPlaceTypes()",
                        "return_type": "List<Integer>",
                        "description": "Returns the list of place types which characterize the place."
                    },
                    {
                        "name": "getWebsiteUri()",
                        "return_type": "Uri",
                        "description": "Returns the URI of the authoritative website for the place."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AutocompleteFilter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/AutocompleteFilter",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getTypeFilter()",
                        "return_type": "int",
                        "description": "A filter used to restrict the type of the results returned."
                    }
                ]
            },
            {
                "name": "AutocompleteFilter.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/AutocompleteFilter.Builder",
                "description": "Builder for an AutocompleteFilter.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AutocompleteFilter",
                        "description": "Returns an AutocompleteFilter that can be passed to getAutocompletePredictions(GoogleApiClient, String, LatLngBounds, AutocompleteFilter"
                    },
                    {
                        "name": "setCountry(String country)",
                        "return_type": "AutocompleteFilter.Builder",
                        "description": "The country to restrict results to."
                    },
                    {
                        "name": "setTypeFilter(int typeFilter)",
                        "return_type": "AutocompleteFilter.Builder",
                        "description": "Allows you to restrict the result set of a Place Autocomplete request."
                    }
                ]
            },
            {
                "name": "AutocompletePredictionBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/AutocompletePredictionBuffer",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "AutocompletePrediction",
                        "description": ""
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AutocompletePredictionBufferResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/AutocompletePredictionBufferResponse",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": []
            },
            {
                "name": "GeoDataClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/GeoDataClient",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "addPlace(AddPlaceRequest addPlaceRequest)",
                        "return_type": "Task<PlaceBufferResponse>",
                        "description": "This method is deprecated. The addPlace("
                    },
                    {
                        "name": "getAutocompletePredictions(String query, LatLngBounds bounds, AutocompleteFilter filter)",
                        "return_type": "Task<AutocompletePredictionBufferResponse>",
                        "description": "Returns autocomplete predictions for a query based on the names and addresses of places."
                    },
                    {
                        "name": "getAutocompletePredictions(String query, LatLngBounds bounds, int boundsMode, AutocompleteFilter filter)",
                        "return_type": "Task<AutocompletePredictionBufferResponse>",
                        "description": "Returns autocomplete predictions for a query based on the names and addresses of places."
                    },
                    {
                        "name": "getPhoto(PlacePhotoMetadata photoMetadata)",
                        "return_type": "Task<PlacePhotoResponse>",
                        "description": "Retrieves the image data for this photo at its maximum size."
                    },
                    {
                        "name": "getPlaceById(String... placeIds)",
                        "return_type": "Task<PlaceBufferResponse>",
                        "description": "Returns Place objects for each of the given place IDs."
                    },
                    {
                        "name": "getPlacePhotos(String placeId)",
                        "return_type": "Task<PlacePhotoMetadataResponse>",
                        "description": "Returns the metadata for up to 10 photos associated with a place."
                    },
                    {
                        "name": "getScaledPhoto(PlacePhotoMetadata photoMetadata, int width, int height)",
                        "return_type": "Task<PlacePhotoResponse>",
                        "description": "Retrieves the image data for this photo, scaled to fit the given dimensions."
                    }
                ]
            },
            {
                "name": "PlaceBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceBuffer",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "Place",
                        "description": ""
                    },
                    {
                        "name": "getAttributions()",
                        "return_type": "CharSequence",
                        "description": "Returns the attributions to be shown to the user."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlaceBufferResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceBufferResponse",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getAttributions()",
                        "return_type": "CharSequence",
                        "description": "Returns the attributions to be shown to the user."
                    }
                ]
            },
            {
                "name": "PlaceDetectionClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceDetectionClient",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getCurrentPlace(PlaceFilter filter)",
                        "return_type": "Task<PlaceLikelihoodBufferResponse>",
                        "description": "Returns an estimate of the place where the device is currently known to be located."
                    },
                    {
                        "name": "reportDeviceAtPlace(PlaceReport report)",
                        "return_type": "Task<Void>",
                        "description": "Reports that the device is currently at a particular place."
                    }
                ]
            },
            {
                "name": "PlaceFilter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceFilter",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getPlaceIds()",
                        "return_type": "Set<String>",
                        "description": "Returns the set of place IDs that this filter will allow."
                    },
                    {
                        "name": "isRestrictedToPlacesOpenNow()",
                        "return_type": "boolean",
                        "description": "Checks whether or not this filter will allow only places that are currently open."
                    },
                    {
                        "name": "matches(Place place)",
                        "return_type": "boolean",
                        "description": "Checks whether the given Place matches the constraints specified in this filter."
                    }
                ]
            },
            {
                "name": "PlaceLikelihoodBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceLikelihoodBuffer",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "PlaceLikelihood",
                        "description": ""
                    },
                    {
                        "name": "getAttributions()",
                        "return_type": "CharSequence",
                        "description": "Returns the attributions to be shown to the user."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlaceLikelihoodBufferResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceLikelihoodBufferResponse",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getAttributions()",
                        "return_type": "CharSequence",
                        "description": "Returns the attributions to be shown to the user."
                    }
                ]
            },
            {
                "name": "PlacePhotoMetadataBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacePhotoMetadataBuffer",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "PlacePhotoMetadata",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlacePhotoMetadataResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacePhotoMetadataResponse",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getPhotoMetadata()",
                        "return_type": "PlacePhotoMetadataBuffer",
                        "description": "Returns the photo metadata retrieved by the request."
                    }
                ]
            },
            {
                "name": "PlacePhotoMetadataResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacePhotoMetadataResult",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getPhotoMetadata()",
                        "return_type": "PlacePhotoMetadataBuffer",
                        "description": "Returns the photo metadata retrieved by the request."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlacePhotoResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacePhotoResponse",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getBitmap()",
                        "return_type": "Bitmap",
                        "description": "Returns the requested image data."
                    }
                ]
            },
            {
                "name": "PlacePhotoResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacePhotoResult",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getBitmap()",
                        "return_type": "Bitmap",
                        "description": "Returns the requested image data."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Places",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/Places",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getGeoDataClient(Activity activity)",
                        "return_type": "staticGeoDataClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getGeoDataClient(Activity activity, PlacesOptions options)",
                        "return_type": "staticGeoDataClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getGeoDataClient(Context context, PlacesOptions options)",
                        "return_type": "staticGeoDataClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getGeoDataClient(Context context)",
                        "return_type": "staticGeoDataClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getPlaceDetectionClient(Context context, PlacesOptions options)",
                        "return_type": "staticPlaceDetectionClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getPlaceDetectionClient(Activity activity)",
                        "return_type": "staticPlaceDetectionClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getPlaceDetectionClient(Activity activity, PlacesOptions options)",
                        "return_type": "staticPlaceDetectionClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    },
                    {
                        "name": "getPlaceDetectionClient(Context context)",
                        "return_type": "staticPlaceDetectionClient",
                        "description": "This method is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information."
                    }
                ]
            },
            {
                "name": "PlacesOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacesOptions",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlacesOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacesOptions.Builder",
                "description": "Builder used to create PlacesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PlacesOptions",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlacesStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlacesStatusCodes",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns a string containing the name of the given status code."
                    }
                ]
            },
            {
                "name": "PlaceTypes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceTypes",
                "description": "This class is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": []
            },
            {
                "name": "AutocompletePrediction",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/places/AutocompletePrediction",
                "description": "This interface is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getFullText(CharacterStyle matchStyle)",
                        "return_type": "abstractCharSequence",
                        "description": "The full text of a place."
                    },
                    {
                        "name": "getPlaceId()",
                        "return_type": "abstractString",
                        "description": "Returns the place ID of the place being referred to by this prediction."
                    },
                    {
                        "name": "getPlaceTypes()",
                        "return_type": "abstractList<Integer>",
                        "description": "Returns the list of place types associated with the place referred to by getPlaceId("
                    },
                    {
                        "name": "getPrimaryText(CharacterStyle matchStyle)",
                        "return_type": "abstractCharSequence",
                        "description": "The primary text of a place."
                    },
                    {
                        "name": "getSecondaryText(CharacterStyle matchStyle)",
                        "return_type": "abstractCharSequence",
                        "description": "The secondary text of a place."
                    }
                ]
            },
            {
                "name": "GeoDataApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/places/GeoDataApi",
                "description": "This interface is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "addPlace(GoogleApiClient client, AddPlaceRequest addPlaceRequest)",
                        "return_type": "abstractPendingResult<PlaceBuffer>",
                        "description": "This method is deprecated. The addPlace("
                    },
                    {
                        "name": "getAutocompletePredictions(GoogleApiClient client, String query, LatLngBounds bounds, AutocompleteFilter filter)",
                        "return_type": "abstractPendingResult<AutocompletePredictionBuffer>",
                        "description": "Returns autocomplete predictions for a query based on the names and addresses of places."
                    },
                    {
                        "name": "getPlaceById(GoogleApiClient client, String... placeIds)",
                        "return_type": "abstractPendingResult<PlaceBuffer>",
                        "description": "Returns Place objects for each of the given place IDs."
                    },
                    {
                        "name": "getPlacePhotos(GoogleApiClient client, String placeId)",
                        "return_type": "abstractPendingResult<PlacePhotoMetadataResult>",
                        "description": "Returns the metadata for up to 10 photos associated with a place."
                    }
                ]
            },
            {
                "name": "Place",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/places/Place",
                "description": "Represents a particular physical place.",
                "methods": [
                    {
                        "name": "getAddress()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns a human readable address for this Place."
                    },
                    {
                        "name": "getAttributions()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the attributions to be shown to the user if data from the Place is used."
                    },
                    {
                        "name": "getId()",
                        "return_type": "abstractString",
                        "description": "Returns the unique id of this Place."
                    },
                    {
                        "name": "getLatLng()",
                        "return_type": "abstract LatLng",
                        "description": "Returns the location of this Place."
                    },
                    {
                        "name": "getLocale()",
                        "return_type": "abstractLocale",
                        "description": "Returns the locale in which the names and addresses were localized."
                    },
                    {
                        "name": "getName()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the name of this Place."
                    },
                    {
                        "name": "getPhoneNumber()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the place's phone number in international format."
                    },
                    {
                        "name": "getPlaceTypes()",
                        "return_type": "abstractList<Integer>",
                        "description": "Returns a list of place types for this Place."
                    },
                    {
                        "name": "getPriceLevel()",
                        "return_type": "abstract int",
                        "description": "Returns the price level for this place on a scale from 0 (cheapest"
                    },
                    {
                        "name": "getRating()",
                        "return_type": "abstract float",
                        "description": "Returns the place's rating, from 1.0 to 5.0, based on aggregated user reviews."
                    },
                    {
                        "name": "getViewport()",
                        "return_type": "abstract LatLngBounds",
                        "description": "Returns a viewport for displaying this Place."
                    },
                    {
                        "name": "getWebsiteUri()",
                        "return_type": "abstractUri",
                        "description": "Returns the URI of the website of this Place."
                    }
                ]
            },
            {
                "name": "PlaceDetectionApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceDetectionApi",
                "description": "This interface is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getCurrentPlace(GoogleApiClient client, PlaceFilter filter)",
                        "return_type": "abstractPendingResult<PlaceLikelihoodBuffer>",
                        "description": "Returns an estimate of the place where the device is currently known to be located."
                    },
                    {
                        "name": "reportDeviceAtPlace(GoogleApiClient client, PlaceReport report)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Reports that the device is currently at a particular place."
                    }
                ]
            },
            {
                "name": "PlaceLikelihood",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/places/PlaceLikelihood",
                "description": "This interface is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getLikelihood()",
                        "return_type": "abstract float",
                        "description": "Returns a value indicating the degree of confidence that the device is at the corresponding Place."
                    },
                    {
                        "name": "getPlace()",
                        "return_type": "abstractPlace",
                        "description": "Returns the place associated with this PlaceLikelihood."
                    }
                ]
            },
            {
                "name": "PlacePhotoMetadata",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/places/PlacePhotoMetadata",
                "description": "This interface is deprecated. The Google Play Services Places SDK is deprecated. A new SDK is available. See the client migration guide for more information.",
                "methods": [
                    {
                        "name": "getAttributions()",
                        "return_type": "abstractCharSequence",
                        "description": "Returns the attributions that must be shown to the user if this photo is displayed."
                    },
                    {
                        "name": "getMaxHeight()",
                        "return_type": "abstract int",
                        "description": "Returns the maximum height in which this photo is available."
                    },
                    {
                        "name": "getMaxWidth()",
                        "return_type": "abstract int",
                        "description": "Returns the maximum width in which this photo is available."
                    },
                    {
                        "name": "getPhoto(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<PlacePhotoResult>",
                        "description": "Retrieves the image data for this photo at its maximum size."
                    },
                    {
                        "name": "getScaledPhoto(GoogleApiClient client, int width, int height)",
                        "return_type": "abstractPendingResult<PlacePhotoResult>",
                        "description": "Retrieves the image data for this photo, scaled to fit the given dimensions."
                    }
                ]
            },
            {
                "name": "AutocompleteFilter.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/location/places/AutocompleteFilter.Builder",
                "description": "Builder for an AutocompleteFilter.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AutocompleteFilter",
                        "description": "Returns an AutocompleteFilter that can be passed to getAutocompletePredictions(GoogleApiClient, String, LatLngBounds, AutocompleteFilter"
                    },
                    {
                        "name": "setCountry(String country)",
                        "return_type": "AutocompleteFilter.Builder",
                        "description": "The country to restrict results to."
                    },
                    {
                        "name": "setTypeFilter(int typeFilter)",
                        "return_type": "AutocompleteFilter.Builder",
                        "description": "Allows you to restrict the result set of a Place Autocomplete request."
                    }
                ]
            },
            {
                "name": "PlacesOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/location/places/PlacesOptions.Builder",
                "description": "Builder used to create PlacesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PlacesOptions",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "wallet",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/wallet/package-summary",
        "classes": [
            {
                "name": "AutoResolvableVoidResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/AutoResolvableVoidResult",
                "description": "A Void result that is an AutoResolvableResult.",
                "methods": [
                    {
                        "name": "putIntoIntent(Intent intent)",
                        "return_type": "void",
                        "description": "Saves the intent as an extra into the given Intent."
                    }
                ]
            },
            {
                "name": "AutoResolveHelper",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/AutoResolveHelper",
                "description": "Helper to auto resolve Tasks that may throw ResolvableApiException to request UI being shown before returning the result.",
                "methods": [
                    {
                        "name": "getStatusFromIntent(Intent data)",
                        "return_type": "staticStatus",
                        "description": "Returns the Status from the Intent received in onActivityResult(int, int, Intent"
                    },
                    {
                        "name": "putStatusIntoIntent(Intent data, Status status)",
                        "return_type": "static void",
                        "description": "Saves the given Status as an extra in the given Intent."
                    },
                    {
                        "name": "resolveTask(Task<TResult> task, Activity activity, int requestCode)",
                        "return_type": "static <TResult extendsAutoResolvableResult>\n                void",
                        "description": "Resolves the given task result showing UI if necessary and pipes back the final result back to the given activity's onActivityResult(int, int, Intent"
                    }
                ]
            },
            {
                "name": "CardInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/CardInfo",
                "description": "Parcelable representing more detailed information about a payment card.",
                "methods": [
                    {
                        "name": "getBillingAddress()",
                        "return_type": "UserAddress",
                        "description": "Gets the billing address associated with buyer's payment card."
                    },
                    {
                        "name": "getCardClass()",
                        "return_type": "int",
                        "description": "Gets the card class which can be either credit, debit or prepaid."
                    },
                    {
                        "name": "getCardDescription()",
                        "return_type": "String",
                        "description": "Gets a user-facing message to describe the card selected for funding this payment transaction."
                    },
                    {
                        "name": "getCardDetails()",
                        "return_type": "String",
                        "description": "Gets the last four digits of the selected card."
                    },
                    {
                        "name": "getCardNetwork()",
                        "return_type": "String",
                        "description": "Gets the card network of the selected card."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CardRequirements",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/CardRequirements",
                "description": "Card requirements for the returned payment card.",
                "methods": [
                    {
                        "name": "allowPrepaidCards()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAllowedCardNetworks()",
                        "return_type": "ArrayList<Integer>",
                        "description": ""
                    },
                    {
                        "name": "getBillingAddressFormat()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isBillingAddressRequired()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticCardRequirements.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CardRequirements.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/CardRequirements.Builder",
                "description": "Builder to create a CardRequirements.",
                "methods": [
                    {
                        "name": "addAllowedCardNetwork(int allowedCardNetwork)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Adds a card network supported for this purchase."
                    },
                    {
                        "name": "addAllowedCardNetworks(Collection<Integer> allowedCardNetworks)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Adds a set of card networks supported for this purchase."
                    },
                    {
                        "name": "build()",
                        "return_type": "CardRequirements",
                        "description": ""
                    },
                    {
                        "name": "setAllowPrepaidCards(boolean allowPrepaidCards)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Sets whether a prepaid card may be used for this transaction."
                    },
                    {
                        "name": "setBillingAddressFormat(int billingAddressFormat)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Sets billing address format."
                    },
                    {
                        "name": "setBillingAddressRequired(boolean billingAddressRequired)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Sets whether a billing address is required from the buyer."
                    }
                ]
            },
            {
                "name": "CreateWalletObjectsRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest",
                "description": "Parcelable representing request to create wallet objects.",
                "methods": [
                    {
                        "name": "getCreateMode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getGiftCardWalletObject()",
                        "return_type": "GiftCardWalletObject",
                        "description": ""
                    },
                    {
                        "name": "getLoyaltyWalletObject()",
                        "return_type": "LoyaltyWalletObject",
                        "description": ""
                    },
                    {
                        "name": "getOfferWalletObject()",
                        "return_type": "OfferWalletObject",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticCreateWalletObjectsRequest.Builder",
                        "description": "Create a CreateWalletObjectsRequest.Builder for building a CreateWalletObjectsRequest."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CreateWalletObjectsRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder",
                "description": "Builder to create a CreateWalletObjectsRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CreateWalletObjectsRequest",
                        "description": ""
                    },
                    {
                        "name": "setCreateMode(int createMode)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the creation mode to use."
                    },
                    {
                        "name": "setGiftCardWalletObject(GiftCardWalletObject giftCardWalletObject)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the Gift Card wallet object to be created."
                    },
                    {
                        "name": "setLoyaltyWalletObject(LoyaltyWalletObject loyaltyWalletObject)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the Loyalty wallet object to be created."
                    },
                    {
                        "name": "setOfferWalletObject(OfferWalletObject offerWalletObject)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the Offer wallet object to be created."
                    }
                ]
            },
            {
                "name": "GiftCardWalletObject",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/GiftCardWalletObject",
                "description": "Parcelable representing a gift card wallet object.",
                "methods": [
                    {
                        "name": "getBalanceCurrencyCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBalanceMicros()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getBalanceUpdateTime()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeAlternateText()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeLabel()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getBarcodeType()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeValue()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getCardIdentifier()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getCardNumber()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getClassId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getEventNumber()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getImageModuleDataMainImageUris()",
                        "return_type": "ArrayList<UriData>",
                        "description": ""
                    },
                    {
                        "name": "getInfoModuleDataHexBackgroundColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getInfoModuleDataHexFontColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getInfoModuleDataLabelValueRows()",
                        "return_type": "ArrayList<LabelValueRow>",
                        "description": ""
                    },
                    {
                        "name": "getInfoModuleDataShowLastUpdateTime()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getIssuerName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getLinksModuleDataUris()",
                        "return_type": "ArrayList<UriData>",
                        "description": ""
                    },
                    {
                        "name": "getLocations()",
                        "return_type": "ArrayList<LatLng>",
                        "description": ""
                    },
                    {
                        "name": "getMessages()",
                        "return_type": "ArrayList<WalletObjectMessage>",
                        "description": ""
                    },
                    {
                        "name": "getPin()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getState()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getTextModulesData()",
                        "return_type": "ArrayList<TextModuleData>",
                        "description": ""
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getValidTimeInterval()",
                        "return_type": "TimeInterval",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticGiftCardWalletObject.Builder",
                        "description": "Creates a helper instance whose implementation follows the builder pattern to create new objects of GiftCardWalletObject."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GiftCardWalletObject.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder",
                "description": "Builder for GiftCardWalletObject.",
                "methods": [
                    {
                        "name": "addImageModuleDataMainImageUri(UriData uri)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds an image module data image uri."
                    },
                    {
                        "name": "addImageModuleDataMainImageUris(Collection<UriData> uris)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of image module data image uris."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRow(LabelValueRow row)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds an info module data label value row."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRows(Collection<LabelValueRow> rows)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of info module data label value rows."
                    },
                    {
                        "name": "addLinksModuleDataUri(UriData uri)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Add a links module data."
                    },
                    {
                        "name": "addLinksModuleDataUris(Collection<UriData> uris)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of links module data."
                    },
                    {
                        "name": "addLocation(LatLng location)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds the location where the Wallet Object can be used."
                    },
                    {
                        "name": "addLocations(Collection<LatLng> locations)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds the collection of locations where the Wallet Object can be used."
                    },
                    {
                        "name": "addMessage(WalletObjectMessage message)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a message to be associated with this object."
                    },
                    {
                        "name": "addMessages(Collection<WalletObjectMessage> messages)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of messages to be associated with this object."
                    },
                    {
                        "name": "addTextModuleData(TextModuleData data)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a text module data."
                    },
                    {
                        "name": "addTextModulesData(Collection<TextModuleData> data)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of text modules data."
                    },
                    {
                        "name": "build()",
                        "return_type": "GiftCardWalletObject",
                        "description": ""
                    },
                    {
                        "name": "setBalanceCurrencyCode(String currencyCode)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Set the currency code for the current value of the gift card."
                    },
                    {
                        "name": "setBalanceMicros(long valueMicros)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the amount in the card balance, value represents micros."
                    },
                    {
                        "name": "setBalanceUpdateTime(long balanceUpdateTimeStamp)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets a value indicating when was this card last updated, value represents milliseconds in UNIX epoch."
                    },
                    {
                        "name": "setBarcodeAlternateText(String barcodeAlternateText)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeLabel(String barcodeLabel)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBarcodeType(String barcodeType)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the type of the barcode."
                    },
                    {
                        "name": "setBarcodeValue(String barcodeValue)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the value encoded in the barcode."
                    },
                    {
                        "name": "setCardIdentifier(String cardIdentifier)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setCardNumber(String cardNumber)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the number identifying this card."
                    },
                    {
                        "name": "setClassId(String classId)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the id of the class associated with this object."
                    },
                    {
                        "name": "setEventNumber(String eventNumber)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "The card's event number, an optional field used by some gift cards."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfoModuleDataHexBackgroundColor(String color)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataHexFontColor(String color)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataShowLastUpdateTime(boolean show)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the flag which determines whether to display the last update time of the Wallet Object."
                    },
                    {
                        "name": "setIssuerName(String issuerName)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the issuer name of this gift card object."
                    },
                    {
                        "name": "setPin(String pin)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the card PIN."
                    },
                    {
                        "name": "setState(int state)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets gift card object state."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the gift card title."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the time period this object will be active and can be used."
                    }
                ]
            },
            {
                "name": "InstrumentInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/InstrumentInfo",
                "description": "Parcelable representing more detailed information about a payment instrument.",
                "methods": [
                    {
                        "name": "getCardClass()",
                        "return_type": "int",
                        "description": "Class of a card that is either credit, debit or prepaid."
                    },
                    {
                        "name": "getInstrumentDetails()",
                        "return_type": "String",
                        "description": "Details of an instrument that has a finite set of formats."
                    },
                    {
                        "name": "getInstrumentType()",
                        "return_type": "String",
                        "description": "Type of an instrument that has a finite set of values."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IsReadyToPayRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest",
                "description": "A Parcelable request that can optionally be passed to isReadyToPay(IsReadyToPayRequest) to specify additional filtering criteria for determining if a user is considered ready to pay.",
                "methods": [
                    {
                        "name": "fromJson(String isReadyToPayRequestJson)",
                        "return_type": "staticIsReadyToPayRequest",
                        "description": "Constructs IsReadyToPayRequest from a JSON object serialized as a string."
                    },
                    {
                        "name": "getAllowedCardNetworks()",
                        "return_type": "ArrayList<Integer>",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "getAllowedPaymentMethods()",
                        "return_type": "ArrayList<Integer>",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "isExistingPaymentMethodRequired()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticIsReadyToPayRequest.Builder",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "toJson()",
                        "return_type": "String",
                        "description": "Returns IsReadyToPayRequest in JSON format."
                    }
                ]
            },
            {
                "name": "IsReadyToPayRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder",
                "description": "This class is deprecated. Use the JSON request format instead, see fromJson(String).",
                "methods": [
                    {
                        "name": "addAllowedCardNetwork(int allowedCardNetwork)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds a card network for cards allowed in the purchase."
                    },
                    {
                        "name": "addAllowedCardNetworks(Collection<Integer> allowedCardNetworks)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds a collection of card networks for cards allowed in the purchase."
                    },
                    {
                        "name": "addAllowedPaymentMethod(int allowedPaymentMethod)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds an allowed payment method."
                    },
                    {
                        "name": "addAllowedPaymentMethods(Collection<Integer> allowedPaymentMethods)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds a collection of allowed payment methods."
                    },
                    {
                        "name": "build()",
                        "return_type": "IsReadyToPayRequest",
                        "description": ""
                    },
                    {
                        "name": "setExistingPaymentMethodRequired(boolean existingPaymentMethodRequired)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "If set to true, then IsReadyToPay will only return true if the user has an existing payment method that matches the other criteria specified in the IsReadyToPayRequest."
                    }
                ]
            },
            {
                "name": "LoyaltyWalletObject",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject",
                "description": "Parcelable representing a loyalty wallet object.",
                "methods": [
                    {
                        "name": "getAccountId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAccountName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeAlternateText()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeLabel()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getBarcodeType()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeValue()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getClassId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getImageModuleDataMainImageUris()",
                        "return_type": "ArrayList<UriData>",
                        "description": ""
                    },
                    {
                        "name": "getInfoModuleDataHexBackgroundColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getInfoModuleDataHexFontColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getInfoModuleDataLabelValueRows()",
                        "return_type": "ArrayList<LabelValueRow>",
                        "description": ""
                    },
                    {
                        "name": "getInfoModuleDataShowLastUpdateTime()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getIssuerName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getLinksModuleDataUris()",
                        "return_type": "ArrayList<UriData>",
                        "description": ""
                    },
                    {
                        "name": "getLocations()",
                        "return_type": "ArrayList<LatLng>",
                        "description": ""
                    },
                    {
                        "name": "getLoyaltyPoints()",
                        "return_type": "LoyaltyPoints",
                        "description": ""
                    },
                    {
                        "name": "getMessages()",
                        "return_type": "ArrayList<WalletObjectMessage>",
                        "description": ""
                    },
                    {
                        "name": "getProgramName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getState()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getTextModulesData()",
                        "return_type": "ArrayList<TextModuleData>",
                        "description": ""
                    },
                    {
                        "name": "getValidTimeInterval()",
                        "return_type": "TimeInterval",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticLoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LoyaltyWalletObject.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder",
                "description": "Builder to create a LoyaltyWalletObject.",
                "methods": [
                    {
                        "name": "addImageModuleDataMainImageUri(UriData uri)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds an image module data image uri."
                    },
                    {
                        "name": "addImageModuleDataMainImageUris(Collection<UriData> uris)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of image module data image uris."
                    },
                    {
                        "name": "addInfoModuleDataLabeValueRow(LabelValueRow row)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds an info module data label value row."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRows(Collection<LabelValueRow> rows)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of info module data label value rows."
                    },
                    {
                        "name": "addLinksModuleDataUri(UriData uri)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Add a links module data."
                    },
                    {
                        "name": "addLinksModuleDataUris(Collection<UriData> uris)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of links module data."
                    },
                    {
                        "name": "addLocation(LatLng location)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds the location where the Wallet Object can be used."
                    },
                    {
                        "name": "addLocations(Collection<LatLng> locations)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds the collection of locations where the Wallet Object can be used."
                    },
                    {
                        "name": "addMessage(WalletObjectMessage message)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a message to be associated with this object."
                    },
                    {
                        "name": "addMessages(Collection<WalletObjectMessage> messages)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of messages to be associated with this object."
                    },
                    {
                        "name": "addTextModuleData(TextModuleData data)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a text module data."
                    },
                    {
                        "name": "addTextModulesData(Collection<TextModuleData> data)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of text modules data."
                    },
                    {
                        "name": "build()",
                        "return_type": "LoyaltyWalletObject",
                        "description": ""
                    },
                    {
                        "name": "setAccountId(String accountId)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeAlternateText(String barcodeAlternateText)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeLabel(String barcodeLabel)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBarcodeType(String barcodeType)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the type of the barcode."
                    },
                    {
                        "name": "setBarcodeValue(String barcodeValue)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the value encoded in the barcode."
                    },
                    {
                        "name": "setClassId(String classId)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the id of the class associated with this object."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfoModuleDataHexBackgroundColor(String color)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataHexFontColor(String color)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataShowLastUpdateTime(boolean show)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the flag which determines whether to display the last update time of the Wallet Object."
                    },
                    {
                        "name": "setIssuerName(String issuerName)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the issuer name of this loyalty program."
                    },
                    {
                        "name": "setLoyaltyPoints(LoyaltyPoints loyaltyPoints)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the loyalty reward points."
                    },
                    {
                        "name": "setProgramName(String programName)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the loyalty program name."
                    },
                    {
                        "name": "setState(int state)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets loyalty wallet object state."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the time period this object will be active and can be used."
                    }
                ]
            },
            {
                "name": "OfferWalletObject",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/OfferWalletObject",
                "description": "Parcelable representing an offer wallet object.",
                "methods": [
                    {
                        "name": "getBarcodeAlternateText()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeLabel()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getBarcodeType()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getBarcodeValue()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getClassId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getImageModuleDataMainImageUris()",
                        "return_type": "ArrayList<UriData>",
                        "description": ""
                    },
                    {
                        "name": "getInfoModuleDataHexBackgroundColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getInfoModuleDataHexFontColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getInfoModuleDataLabelValueRows()",
                        "return_type": "ArrayList<LabelValueRow>",
                        "description": ""
                    },
                    {
                        "name": "getInfoModuleDataShowLastUpdateTime()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getIssuerName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getLinksModuleDataUris()",
                        "return_type": "ArrayList<UriData>",
                        "description": ""
                    },
                    {
                        "name": "getLocations()",
                        "return_type": "ArrayList<LatLng>",
                        "description": ""
                    },
                    {
                        "name": "getMessages()",
                        "return_type": "ArrayList<WalletObjectMessage>",
                        "description": ""
                    },
                    {
                        "name": "getRedemptionCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getState()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getTextModulesData()",
                        "return_type": "ArrayList<TextModuleData>",
                        "description": ""
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getValidTimeInterval()",
                        "return_type": "TimeInterval",
                        "description": ""
                    },
                    {
                        "name": "getVersionCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticOfferWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "OfferWalletObject.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder",
                "description": "Builder to create a OfferWalletObject.",
                "methods": [
                    {
                        "name": "addImageModuleDataMainImageUri(UriData uri)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds an image module data image uri."
                    },
                    {
                        "name": "addImageModuleDataMainImageUris(Collection<UriData> uris)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of image module data image uris."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRow(LabelValueRow row)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds an info module data label value row."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRows(Collection<LabelValueRow> rows)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of info module data label value rows."
                    },
                    {
                        "name": "addLinksModuleDataUri(UriData uri)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Add a links module data."
                    },
                    {
                        "name": "addLinksModuleDataUris(Collection<UriData> uris)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of links module data."
                    },
                    {
                        "name": "addLocation(LatLng location)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds the location where the Wallet Object can be used."
                    },
                    {
                        "name": "addLocations(Collection<LatLng> locations)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds the collection of locations where the Wallet Object can be used."
                    },
                    {
                        "name": "addMessage(WalletObjectMessage message)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a message to be associated with this object."
                    },
                    {
                        "name": "addMessages(Collection<WalletObjectMessage> messages)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of messages to be associated with this object."
                    },
                    {
                        "name": "addTextModuleData(TextModuleData data)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a text module data."
                    },
                    {
                        "name": "addTextModulesData(Collection<TextModuleData> data)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of text modules data."
                    },
                    {
                        "name": "build()",
                        "return_type": "OfferWalletObject",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeAlternateText(String barcodeAlternateText)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeLabel(String barcodeLabel)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBarcodeType(String barcodeType)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the type of the barcode."
                    },
                    {
                        "name": "setBarcodeValue(String barcodeValue)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the value encoded in the barcode."
                    },
                    {
                        "name": "setClassId(String classId)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the id of the class associated with this object."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfoModuleDataHexBackgroundColor(String color)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataHexFontColor(String color)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataShowLastUpdateTime(boolean show)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the flag which determines whether to display the last update time of the Wallet Object."
                    },
                    {
                        "name": "setIssuerName(String issuerName)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the issuer name of this offer object."
                    },
                    {
                        "name": "setRedemptionCode(String redemptionCode)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the redemption code of the offer wallet object."
                    },
                    {
                        "name": "setState(int state)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets offer object state."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the offer title."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the time period this object will be active and can be used."
                    }
                ]
            },
            {
                "name": "PaymentData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentData",
                "description": "Parcelable representing a payment data response, which contains the necessary payment result to complete the payment.",
                "methods": [
                    {
                        "name": "fromJson(String paymentDataJson)",
                        "return_type": "staticPaymentData",
                        "description": "Constructs PaymentData from a JSON object serialized as a string."
                    },
                    {
                        "name": "getCardInfo()",
                        "return_type": "CardInfo",
                        "description": "This method is deprecated. Instead use the JSON request format (see fromJson(String"
                    },
                    {
                        "name": "getEmail()",
                        "return_type": "String",
                        "description": "This method is deprecated. Instead use the JSON request format (see fromJson(String"
                    },
                    {
                        "name": "getExtraData()",
                        "return_type": "Bundle",
                        "description": "This method is deprecated. Instead use the JSON request format (see fromJson(String"
                    },
                    {
                        "name": "getFromIntent(Intent intent)",
                        "return_type": "staticPaymentData",
                        "description": "Gets the PaymentData stored in the given Intent extra."
                    },
                    {
                        "name": "getGoogleTransactionId()",
                        "return_type": "String",
                        "description": "This method is deprecated. Instead use the JSON request format (see fromJson(String"
                    },
                    {
                        "name": "getPaymentMethodToken()",
                        "return_type": "PaymentMethodToken",
                        "description": "This method is deprecated. Instead use the JSON request format (see fromJson(String"
                    },
                    {
                        "name": "getShippingAddress()",
                        "return_type": "UserAddress",
                        "description": "This method is deprecated. Instead use the JSON request format (see fromJson(String"
                    },
                    {
                        "name": "putIntoIntent(Intent intent)",
                        "return_type": "void",
                        "description": "Saves the current PaymentData instance as an extra in the given Intent."
                    },
                    {
                        "name": "toJson()",
                        "return_type": "String",
                        "description": "Returns PaymentData in JSON format."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PaymentDataRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentDataRequest",
                "description": "Parcelable representing a payment data request, which provides necessary information to support a payment.",
                "methods": [
                    {
                        "name": "fromJson(String paymentDataRequestJson)",
                        "return_type": "staticPaymentDataRequest",
                        "description": "Constructs PaymentDataRequest from a JSON object serialized as a string."
                    },
                    {
                        "name": "getAllowedPaymentMethods()",
                        "return_type": "ArrayList<Integer>",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "getCardRequirements()",
                        "return_type": "CardRequirements",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "getPaymentMethodTokenizationParameters()",
                        "return_type": "PaymentMethodTokenizationParameters",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "getShippingAddressRequirements()",
                        "return_type": "ShippingAddressRequirements",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "getTransactionInfo()",
                        "return_type": "TransactionInfo",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "isEmailRequired()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "isPhoneNumberRequired()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "isShippingAddressRequired()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "isUiRequired()",
                        "return_type": "boolean",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticPaymentDataRequest.Builder",
                        "description": "This method is deprecated. Use the JSON request format instead, see fromJson(String"
                    },
                    {
                        "name": "toJson()",
                        "return_type": "String",
                        "description": "Returns PaymentDataRequest in JSON format."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PaymentDataRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder",
                "description": "This class is deprecated. Use the JSON request format instead, see fromJson(String).",
                "methods": [
                    {
                        "name": "addAllowedPaymentMethod(int allowedPaymentMethod)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Adds an allowed payment method."
                    },
                    {
                        "name": "addAllowedPaymentMethods(Collection<Integer> allowedPaymentMethods)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Adds a collection of allowed payment methods."
                    },
                    {
                        "name": "build()",
                        "return_type": "PaymentDataRequest",
                        "description": ""
                    },
                    {
                        "name": "setCardRequirements(CardRequirements cardRequirements)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets the card requirements."
                    },
                    {
                        "name": "setEmailRequired(boolean emailRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether buyer's email is required."
                    },
                    {
                        "name": "setPaymentMethodTokenizationParameters(PaymentMethodTokenizationParameters paymentMethodTokenizationParameters)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets payment method tokenization parameters which will be used to tokenize the payment method returned within getPaymentMethodToken("
                    },
                    {
                        "name": "setPhoneNumberRequired(boolean phoneNumberRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether a phone number is additionally required from the buyer in both shipping and billing addresses (the phone number will only be returned if an address is required, otherwise this is a no-op"
                    },
                    {
                        "name": "setShippingAddressRequired(boolean shippingAddressRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether a shipping address is required from the buyer."
                    },
                    {
                        "name": "setShippingAddressRequirements(ShippingAddressRequirements shippingAddressRequirements)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets the shipping address requirements."
                    },
                    {
                        "name": "setTransactionInfo(TransactionInfo transactionInfo)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets detailed transaction info."
                    },
                    {
                        "name": "setUiRequired(boolean uiRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether the UI to show the payment method or shipping address selection is required to be shown in the purchase flow."
                    }
                ]
            },
            {
                "name": "PaymentInstrumentType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentInstrumentType",
                "description": "Payment instrument types that a merchant can support.",
                "methods": [
                    {
                        "name": "getAll()",
                        "return_type": "staticArrayList<Integer>",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PaymentMethodToken",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentMethodToken",
                "description": "Parcelable representing payment method token.",
                "methods": [
                    {
                        "name": "getPaymentMethodTokenizationType()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getToken()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PaymentMethodTokenizationParameters",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters",
                "description": "Tokenization parameters passed by the integrator used to tokenize the credit card selected by the user.",
                "methods": [
                    {
                        "name": "getParameters()",
                        "return_type": "Bundle",
                        "description": "Payment method tokenization parameters."
                    },
                    {
                        "name": "getPaymentMethodTokenizationType()",
                        "return_type": "int",
                        "description": "Payment method tokenization type."
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticPaymentMethodTokenizationParameters.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PaymentMethodTokenizationParameters.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters.Builder",
                "description": "Builder to create a PaymentMethodTokenizationParameters.",
                "methods": [
                    {
                        "name": "addParameter(String name, String value)",
                        "return_type": "PaymentMethodTokenizationParameters.Builder",
                        "description": "Adds tokenization specific parameters."
                    },
                    {
                        "name": "build()",
                        "return_type": "PaymentMethodTokenizationParameters",
                        "description": ""
                    },
                    {
                        "name": "setPaymentMethodTokenizationType(int tokenizationType)",
                        "return_type": "PaymentMethodTokenizationParameters.Builder",
                        "description": "Sets payment method tokenization type."
                    }
                ]
            },
            {
                "name": "PaymentMethodTokenizationType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationType",
                "description": "Payment method tokenization types.",
                "methods": []
            },
            {
                "name": "PaymentsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentsClient",
                "description": "Client for interacting with the Google Pay API.",
                "methods": [
                    {
                        "name": "isReadyToPay(IsReadyToPayRequest request)",
                        "return_type": "Task<Boolean>",
                        "description": "Determines if the user can make payments using the Google Pay API."
                    },
                    {
                        "name": "loadPaymentData(PaymentDataRequest request)",
                        "return_type": "Task<PaymentData>",
                        "description": "Requests PaymentData, which contains the necessary information to complete a payment."
                    }
                ]
            },
            {
                "name": "ShippingAddressRequirements",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements",
                "description": "Optional shipping address requirements for the returned shipping address.",
                "methods": [
                    {
                        "name": "getAllowedCountryCodes()",
                        "return_type": "ArrayList<String>",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticShippingAddressRequirements.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ShippingAddressRequirements.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements.Builder",
                "description": "Builder to create a ShippingAddressRequirements.",
                "methods": [
                    {
                        "name": "addAllowedCountryCode(String allowedCountryCode)",
                        "return_type": "ShippingAddressRequirements.Builder",
                        "description": "Adds a country code of the country to which shipping is allowed in this transaction."
                    },
                    {
                        "name": "addAllowedCountryCodes(Collection<String> allowedCountryCodes)",
                        "return_type": "ShippingAddressRequirements.Builder",
                        "description": "Adds a collection of country codes of the countries to which shipping is allowed in this transaction."
                    },
                    {
                        "name": "build()",
                        "return_type": "ShippingAddressRequirements",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TransactionInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/TransactionInfo",
                "description": "Parcelable representing the detailed info about the transaction.",
                "methods": [
                    {
                        "name": "getCurrencyCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getTotalPrice()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getTotalPriceStatus()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticTransactionInfo.Builder",
                        "description": "Builder to create a TransactionInfo."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TransactionInfo.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder",
                "description": "Builder to create a TransactionInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TransactionInfo",
                        "description": ""
                    },
                    {
                        "name": "setCurrencyCode(String currencyCode)",
                        "return_type": "TransactionInfo.Builder",
                        "description": "Sets the ISO 4217 alphabetic currency code of the transaction."
                    },
                    {
                        "name": "setTotalPrice(String totalPrice)",
                        "return_type": "TransactionInfo.Builder",
                        "description": "Sets the total price of this transaction."
                    },
                    {
                        "name": "setTotalPriceStatus(int totalPriceStatus)",
                        "return_type": "TransactionInfo.Builder",
                        "description": "Sets the status of this transaction's total price."
                    }
                ]
            },
            {
                "name": "Wallet",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/Wallet",
                "description": "The main entry point for Wallet library integration.",
                "methods": [
                    {
                        "name": "getPaymentsClient(Activity activity, Wallet.WalletOptions options)",
                        "return_type": "staticPaymentsClient",
                        "description": "Create a new instance of PaymentsClient for use in an Activity."
                    },
                    {
                        "name": "getPaymentsClient(Context context, Wallet.WalletOptions options)",
                        "return_type": "staticPaymentsClient",
                        "description": "Create a new instance of PaymentsClient for use in a non-Activity Context."
                    },
                    {
                        "name": "getWalletObjectsClient(Activity activity, Wallet.WalletOptions options)",
                        "return_type": "staticWalletObjectsClient",
                        "description": "Create a new instance of WalletObjectsClient for use in an Activity."
                    }
                ]
            },
            {
                "name": "Wallet.WalletOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions",
                "description": "Options for using the Wallet API.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccount()",
                        "return_type": "Account",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Wallet.WalletOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder",
                "description": "Wallet builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Wallet.WalletOptions",
                        "description": ""
                    },
                    {
                        "name": "setEnvironment(int environment)",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTheme(int theme)",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "useGoogleWallet()",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": "This method is deprecated. Google Wallet is deprecated and will be removed."
                    }
                ]
            },
            {
                "name": "WalletConstants",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/WalletConstants",
                "description": "Collection of constant values used by the ClientLibrary.",
                "methods": []
            },
            {
                "name": "WalletObjectsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/WalletObjectsClient",
                "description": "Entry point for Wallet objects functionality.",
                "methods": [
                    {
                        "name": "createWalletObjects(CreateWalletObjectsRequest request)",
                        "return_type": "Task<AutoResolvableVoidResult>",
                        "description": "Launches a UI allowing the user to save a wallet object (loyalty card, gift card, or offer"
                    }
                ]
            },
            {
                "name": "AutoResolvableResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wallet/AutoResolvableResult",
                "description": "Marks Task results which may involve showing UI to be resolved through ResolvableApiException and that support automatic resolution through the use of AutoResolveHelper.",
                "methods": [
                    {
                        "name": "putIntoIntent(Intent intent)",
                        "return_type": "abstract void",
                        "description": "Saves the intent as an extra into the given Intent."
                    }
                ]
            },
            {
                "name": "CardRequirements.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/CardRequirements.Builder",
                "description": "Builder to create a CardRequirements.",
                "methods": [
                    {
                        "name": "addAllowedCardNetwork(int allowedCardNetwork)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Adds a card network supported for this purchase."
                    },
                    {
                        "name": "addAllowedCardNetworks(Collection<Integer> allowedCardNetworks)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Adds a set of card networks supported for this purchase."
                    },
                    {
                        "name": "build()",
                        "return_type": "CardRequirements",
                        "description": ""
                    },
                    {
                        "name": "setAllowPrepaidCards(boolean allowPrepaidCards)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Sets whether a prepaid card may be used for this transaction."
                    },
                    {
                        "name": "setBillingAddressFormat(int billingAddressFormat)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Sets billing address format."
                    },
                    {
                        "name": "setBillingAddressRequired(boolean billingAddressRequired)",
                        "return_type": "CardRequirements.Builder",
                        "description": "Sets whether a billing address is required from the buyer."
                    }
                ]
            },
            {
                "name": "CreateWalletObjectsRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/CreateWalletObjectsRequest.Builder",
                "description": "Builder to create a CreateWalletObjectsRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CreateWalletObjectsRequest",
                        "description": ""
                    },
                    {
                        "name": "setCreateMode(int createMode)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the creation mode to use."
                    },
                    {
                        "name": "setGiftCardWalletObject(GiftCardWalletObject giftCardWalletObject)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the Gift Card wallet object to be created."
                    },
                    {
                        "name": "setLoyaltyWalletObject(LoyaltyWalletObject loyaltyWalletObject)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the Loyalty wallet object to be created."
                    },
                    {
                        "name": "setOfferWalletObject(OfferWalletObject offerWalletObject)",
                        "return_type": "CreateWalletObjectsRequest.Builder",
                        "description": "Sets the Offer wallet object to be created."
                    }
                ]
            },
            {
                "name": "GiftCardWalletObject.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/GiftCardWalletObject.Builder",
                "description": "Builder for GiftCardWalletObject.",
                "methods": [
                    {
                        "name": "addImageModuleDataMainImageUri(UriData uri)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds an image module data image uri."
                    },
                    {
                        "name": "addImageModuleDataMainImageUris(Collection<UriData> uris)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of image module data image uris."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRow(LabelValueRow row)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds an info module data label value row."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRows(Collection<LabelValueRow> rows)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of info module data label value rows."
                    },
                    {
                        "name": "addLinksModuleDataUri(UriData uri)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Add a links module data."
                    },
                    {
                        "name": "addLinksModuleDataUris(Collection<UriData> uris)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of links module data."
                    },
                    {
                        "name": "addLocation(LatLng location)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds the location where the Wallet Object can be used."
                    },
                    {
                        "name": "addLocations(Collection<LatLng> locations)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds the collection of locations where the Wallet Object can be used."
                    },
                    {
                        "name": "addMessage(WalletObjectMessage message)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a message to be associated with this object."
                    },
                    {
                        "name": "addMessages(Collection<WalletObjectMessage> messages)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of messages to be associated with this object."
                    },
                    {
                        "name": "addTextModuleData(TextModuleData data)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a text module data."
                    },
                    {
                        "name": "addTextModulesData(Collection<TextModuleData> data)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Adds a collection of text modules data."
                    },
                    {
                        "name": "build()",
                        "return_type": "GiftCardWalletObject",
                        "description": ""
                    },
                    {
                        "name": "setBalanceCurrencyCode(String currencyCode)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Set the currency code for the current value of the gift card."
                    },
                    {
                        "name": "setBalanceMicros(long valueMicros)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the amount in the card balance, value represents micros."
                    },
                    {
                        "name": "setBalanceUpdateTime(long balanceUpdateTimeStamp)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets a value indicating when was this card last updated, value represents milliseconds in UNIX epoch."
                    },
                    {
                        "name": "setBarcodeAlternateText(String barcodeAlternateText)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeLabel(String barcodeLabel)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBarcodeType(String barcodeType)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the type of the barcode."
                    },
                    {
                        "name": "setBarcodeValue(String barcodeValue)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the value encoded in the barcode."
                    },
                    {
                        "name": "setCardIdentifier(String cardIdentifier)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setCardNumber(String cardNumber)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the number identifying this card."
                    },
                    {
                        "name": "setClassId(String classId)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the id of the class associated with this object."
                    },
                    {
                        "name": "setEventNumber(String eventNumber)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "The card's event number, an optional field used by some gift cards."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfoModuleDataHexBackgroundColor(String color)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataHexFontColor(String color)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataShowLastUpdateTime(boolean show)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the flag which determines whether to display the last update time of the Wallet Object."
                    },
                    {
                        "name": "setIssuerName(String issuerName)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the issuer name of this gift card object."
                    },
                    {
                        "name": "setPin(String pin)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the card PIN."
                    },
                    {
                        "name": "setState(int state)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets gift card object state."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the gift card title."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "GiftCardWalletObject.Builder",
                        "description": "Sets the time period this object will be active and can be used."
                    }
                ]
            },
            {
                "name": "IsReadyToPayRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/IsReadyToPayRequest.Builder",
                "description": "This class is deprecated. Use the JSON request format instead, see fromJson(String).",
                "methods": [
                    {
                        "name": "addAllowedCardNetwork(int allowedCardNetwork)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds a card network for cards allowed in the purchase."
                    },
                    {
                        "name": "addAllowedCardNetworks(Collection<Integer> allowedCardNetworks)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds a collection of card networks for cards allowed in the purchase."
                    },
                    {
                        "name": "addAllowedPaymentMethod(int allowedPaymentMethod)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds an allowed payment method."
                    },
                    {
                        "name": "addAllowedPaymentMethods(Collection<Integer> allowedPaymentMethods)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "Adds a collection of allowed payment methods."
                    },
                    {
                        "name": "build()",
                        "return_type": "IsReadyToPayRequest",
                        "description": ""
                    },
                    {
                        "name": "setExistingPaymentMethodRequired(boolean existingPaymentMethodRequired)",
                        "return_type": "IsReadyToPayRequest.Builder",
                        "description": "If set to true, then IsReadyToPay will only return true if the user has an existing payment method that matches the other criteria specified in the IsReadyToPayRequest."
                    }
                ]
            },
            {
                "name": "LoyaltyWalletObject.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/LoyaltyWalletObject.Builder",
                "description": "Builder to create a LoyaltyWalletObject.",
                "methods": [
                    {
                        "name": "addImageModuleDataMainImageUri(UriData uri)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds an image module data image uri."
                    },
                    {
                        "name": "addImageModuleDataMainImageUris(Collection<UriData> uris)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of image module data image uris."
                    },
                    {
                        "name": "addInfoModuleDataLabeValueRow(LabelValueRow row)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds an info module data label value row."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRows(Collection<LabelValueRow> rows)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of info module data label value rows."
                    },
                    {
                        "name": "addLinksModuleDataUri(UriData uri)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Add a links module data."
                    },
                    {
                        "name": "addLinksModuleDataUris(Collection<UriData> uris)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of links module data."
                    },
                    {
                        "name": "addLocation(LatLng location)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds the location where the Wallet Object can be used."
                    },
                    {
                        "name": "addLocations(Collection<LatLng> locations)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds the collection of locations where the Wallet Object can be used."
                    },
                    {
                        "name": "addMessage(WalletObjectMessage message)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a message to be associated with this object."
                    },
                    {
                        "name": "addMessages(Collection<WalletObjectMessage> messages)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of messages to be associated with this object."
                    },
                    {
                        "name": "addTextModuleData(TextModuleData data)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a text module data."
                    },
                    {
                        "name": "addTextModulesData(Collection<TextModuleData> data)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Adds a collection of text modules data."
                    },
                    {
                        "name": "build()",
                        "return_type": "LoyaltyWalletObject",
                        "description": ""
                    },
                    {
                        "name": "setAccountId(String accountId)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeAlternateText(String barcodeAlternateText)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeLabel(String barcodeLabel)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBarcodeType(String barcodeType)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the type of the barcode."
                    },
                    {
                        "name": "setBarcodeValue(String barcodeValue)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the value encoded in the barcode."
                    },
                    {
                        "name": "setClassId(String classId)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the id of the class associated with this object."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfoModuleDataHexBackgroundColor(String color)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataHexFontColor(String color)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataShowLastUpdateTime(boolean show)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the flag which determines whether to display the last update time of the Wallet Object."
                    },
                    {
                        "name": "setIssuerName(String issuerName)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the issuer name of this loyalty program."
                    },
                    {
                        "name": "setLoyaltyPoints(LoyaltyPoints loyaltyPoints)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the loyalty reward points."
                    },
                    {
                        "name": "setProgramName(String programName)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the loyalty program name."
                    },
                    {
                        "name": "setState(int state)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets loyalty wallet object state."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "LoyaltyWalletObject.Builder",
                        "description": "Sets the time period this object will be active and can be used."
                    }
                ]
            },
            {
                "name": "OfferWalletObject.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/OfferWalletObject.Builder",
                "description": "Builder to create a OfferWalletObject.",
                "methods": [
                    {
                        "name": "addImageModuleDataMainImageUri(UriData uri)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds an image module data image uri."
                    },
                    {
                        "name": "addImageModuleDataMainImageUris(Collection<UriData> uris)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of image module data image uris."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRow(LabelValueRow row)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds an info module data label value row."
                    },
                    {
                        "name": "addInfoModuleDataLabelValueRows(Collection<LabelValueRow> rows)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of info module data label value rows."
                    },
                    {
                        "name": "addLinksModuleDataUri(UriData uri)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Add a links module data."
                    },
                    {
                        "name": "addLinksModuleDataUris(Collection<UriData> uris)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of links module data."
                    },
                    {
                        "name": "addLocation(LatLng location)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds the location where the Wallet Object can be used."
                    },
                    {
                        "name": "addLocations(Collection<LatLng> locations)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds the collection of locations where the Wallet Object can be used."
                    },
                    {
                        "name": "addMessage(WalletObjectMessage message)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a message to be associated with this object."
                    },
                    {
                        "name": "addMessages(Collection<WalletObjectMessage> messages)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of messages to be associated with this object."
                    },
                    {
                        "name": "addTextModuleData(TextModuleData data)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a text module data."
                    },
                    {
                        "name": "addTextModulesData(Collection<TextModuleData> data)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Adds a collection of text modules data."
                    },
                    {
                        "name": "build()",
                        "return_type": "OfferWalletObject",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeAlternateText(String barcodeAlternateText)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setBarcodeLabel(String barcodeLabel)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBarcodeType(String barcodeType)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the type of the barcode."
                    },
                    {
                        "name": "setBarcodeValue(String barcodeValue)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the value encoded in the barcode."
                    },
                    {
                        "name": "setClassId(String classId)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the id of the class associated with this object."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": ""
                    },
                    {
                        "name": "setInfoModuleDataHexBackgroundColor(String color)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataHexFontColor(String color)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setInfoModuleDataShowLastUpdateTime(boolean show)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the flag which determines whether to display the last update time of the Wallet Object."
                    },
                    {
                        "name": "setIssuerName(String issuerName)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the issuer name of this offer object."
                    },
                    {
                        "name": "setRedemptionCode(String redemptionCode)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the redemption code of the offer wallet object."
                    },
                    {
                        "name": "setState(int state)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets offer object state."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the offer title."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "OfferWalletObject.Builder",
                        "description": "Sets the time period this object will be active and can be used."
                    }
                ]
            },
            {
                "name": "PaymentDataRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentDataRequest.Builder",
                "description": "This class is deprecated. Use the JSON request format instead, see fromJson(String).",
                "methods": [
                    {
                        "name": "addAllowedPaymentMethod(int allowedPaymentMethod)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Adds an allowed payment method."
                    },
                    {
                        "name": "addAllowedPaymentMethods(Collection<Integer> allowedPaymentMethods)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Adds a collection of allowed payment methods."
                    },
                    {
                        "name": "build()",
                        "return_type": "PaymentDataRequest",
                        "description": ""
                    },
                    {
                        "name": "setCardRequirements(CardRequirements cardRequirements)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets the card requirements."
                    },
                    {
                        "name": "setEmailRequired(boolean emailRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether buyer's email is required."
                    },
                    {
                        "name": "setPaymentMethodTokenizationParameters(PaymentMethodTokenizationParameters paymentMethodTokenizationParameters)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets payment method tokenization parameters which will be used to tokenize the payment method returned within getPaymentMethodToken("
                    },
                    {
                        "name": "setPhoneNumberRequired(boolean phoneNumberRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether a phone number is additionally required from the buyer in both shipping and billing addresses (the phone number will only be returned if an address is required, otherwise this is a no-op"
                    },
                    {
                        "name": "setShippingAddressRequired(boolean shippingAddressRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether a shipping address is required from the buyer."
                    },
                    {
                        "name": "setShippingAddressRequirements(ShippingAddressRequirements shippingAddressRequirements)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets the shipping address requirements."
                    },
                    {
                        "name": "setTransactionInfo(TransactionInfo transactionInfo)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets detailed transaction info."
                    },
                    {
                        "name": "setUiRequired(boolean uiRequired)",
                        "return_type": "PaymentDataRequest.Builder",
                        "description": "Sets whether the UI to show the payment method or shipping address selection is required to be shown in the purchase flow."
                    }
                ]
            },
            {
                "name": "PaymentMethodTokenizationParameters.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/PaymentMethodTokenizationParameters.Builder",
                "description": "Builder to create a PaymentMethodTokenizationParameters.",
                "methods": [
                    {
                        "name": "addParameter(String name, String value)",
                        "return_type": "PaymentMethodTokenizationParameters.Builder",
                        "description": "Adds tokenization specific parameters."
                    },
                    {
                        "name": "build()",
                        "return_type": "PaymentMethodTokenizationParameters",
                        "description": ""
                    },
                    {
                        "name": "setPaymentMethodTokenizationType(int tokenizationType)",
                        "return_type": "PaymentMethodTokenizationParameters.Builder",
                        "description": "Sets payment method tokenization type."
                    }
                ]
            },
            {
                "name": "ShippingAddressRequirements.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/ShippingAddressRequirements.Builder",
                "description": "Builder to create a ShippingAddressRequirements.",
                "methods": [
                    {
                        "name": "addAllowedCountryCode(String allowedCountryCode)",
                        "return_type": "ShippingAddressRequirements.Builder",
                        "description": "Adds a country code of the country to which shipping is allowed in this transaction."
                    },
                    {
                        "name": "addAllowedCountryCodes(Collection<String> allowedCountryCodes)",
                        "return_type": "ShippingAddressRequirements.Builder",
                        "description": "Adds a collection of country codes of the countries to which shipping is allowed in this transaction."
                    },
                    {
                        "name": "build()",
                        "return_type": "ShippingAddressRequirements",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TransactionInfo.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/TransactionInfo.Builder",
                "description": "Builder to create a TransactionInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TransactionInfo",
                        "description": ""
                    },
                    {
                        "name": "setCurrencyCode(String currencyCode)",
                        "return_type": "TransactionInfo.Builder",
                        "description": "Sets the ISO 4217 alphabetic currency code of the transaction."
                    },
                    {
                        "name": "setTotalPrice(String totalPrice)",
                        "return_type": "TransactionInfo.Builder",
                        "description": "Sets the total price of this transaction."
                    },
                    {
                        "name": "setTotalPriceStatus(int totalPriceStatus)",
                        "return_type": "TransactionInfo.Builder",
                        "description": "Sets the status of this transaction's total price."
                    }
                ]
            },
            {
                "name": "Wallet.WalletOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions",
                "description": "Options for using the Wallet API.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccount()",
                        "return_type": "Account",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Wallet.WalletOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder",
                "description": "Wallet builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Wallet.WalletOptions",
                        "description": ""
                    },
                    {
                        "name": "setEnvironment(int environment)",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTheme(int theme)",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "useGoogleWallet()",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": "This method is deprecated. Google Wallet is deprecated and will be removed."
                    }
                ]
            },
            {
                "name": "Wallet.WalletOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/Wallet.WalletOptions.Builder",
                "description": "Wallet builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Wallet.WalletOptions",
                        "description": ""
                    },
                    {
                        "name": "setEnvironment(int environment)",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTheme(int theme)",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "useGoogleWallet()",
                        "return_type": "Wallet.WalletOptions.Builder",
                        "description": "This method is deprecated. Google Wallet is deprecated and will be removed."
                    }
                ]
            }
        ]
    },
    {
        "name": "sourcedevice",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/sourcedevice/package-summary",
        "classes": [
            {
                "name": "SourceDirectTransferResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/sourcedevice/SourceDirectTransferResult",
                "description": "Result returned from the UI activity in Activity.onActivityResult(int, int, Intent) after the direct transfer finishes.",
                "methods": [
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "Gets the Status from the returned SourceDirectTransferResult."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SourceStartDirectTransferOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/sourcedevice/SourceStartDirectTransferOptions",
                "description": "Customized options to start direct transfer.",
                "methods": [
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SourceDirectTransferClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fido/sourcedevice/SourceDirectTransferClient",
                "description": "The entry point for interacting with the FIDO SourceDirectTransfer APIs.",
                "methods": [
                    {
                        "name": "getSourceDirectTransferResultFromIntent(Intent intent)",
                        "return_type": "abstractSourceDirectTransferResult",
                        "description": "Retrieves SourceDirectTransferResult from the intent received by Activity.onActivityResult(int, int, Intent"
                    },
                    {
                        "name": "startDirectTransfer(SourceStartDirectTransferOptions options, ParcelFileDescriptor input, ParcelFileDescriptor output)",
                        "return_type": "abstract Task<PendingIntent>",
                        "description": "Creates a Task with PendingIntent, which when started, will start direct transfer."
                    }
                ]
            }
        ]
    },
    {
        "name": "video",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/video/package-summary",
        "classes": [
            {
                "name": "CaptureState",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/video/CaptureState",
                "description": "Data class used to return the capture state to the client.",
                "methods": [
                    {
                        "name": "getCaptureMode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getCaptureQuality()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isCapturing()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isOverlayVisible()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isPaused()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "VideoCapabilities",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/video/VideoCapabilities",
                "description": "Contains information on what capabilities the current device has for video recording.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getSupportedCaptureModes()",
                        "return_type": "boolean[]",
                        "description": "Returns a collection of all supported capture modes."
                    },
                    {
                        "name": "getSupportedQualityLevels()",
                        "return_type": "boolean[]",
                        "description": "Returns a collection of all supported capture qualities."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isCameraSupported()",
                        "return_type": "boolean",
                        "description": "Returns whether the device has a front-facing camera and we can use it."
                    },
                    {
                        "name": "isFullySupported(int captureMode, int qualityLevel)",
                        "return_type": "boolean",
                        "description": "Checks if the capture mode and quality level are support, and camera, mic, and storage write."
                    },
                    {
                        "name": "isMicSupported()",
                        "return_type": "boolean",
                        "description": "Returns whether the device has a microphone and we can use it."
                    },
                    {
                        "name": "isWriteStorageSupported()",
                        "return_type": "boolean",
                        "description": "Returns whether the device has an external storage device and we can use it."
                    },
                    {
                        "name": "supportsCaptureMode(int captureMode)",
                        "return_type": "boolean",
                        "description": "Returns whether the device supports the given capture mode."
                    },
                    {
                        "name": "supportsQualityLevel(int qualityLevel)",
                        "return_type": "boolean",
                        "description": "Returns whether the device supports the given quality level."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "VideoConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/video/VideoConfiguration",
                "description": "Data class used to pass the video configuration from the client to the service.",
                "methods": [
                    {
                        "name": "getCameraEnabled()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCaptureMode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getMicEnabled()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getQualityLevel()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isValidCaptureMode(int captureMode, boolean allowUnknown)",
                        "return_type": "static boolean",
                        "description": ""
                    },
                    {
                        "name": "isValidQualityLevel(int qualityLevel, boolean allowUnknown)",
                        "return_type": "static boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "VideoConfiguration.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/video/VideoConfiguration.Builder",
                "description": "Builder class for VideoConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VideoConfiguration",
                        "description": ""
                    },
                    {
                        "name": "setCameraEnabled(boolean cameraEnabled)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": "Sets whether or not the front camera should record the user."
                    },
                    {
                        "name": "setCaptureMode(int captureMode)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": ""
                    },
                    {
                        "name": "setMicEnabled(boolean micEnabled)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": "Sets whether or not audio recording should be enabled."
                    },
                    {
                        "name": "setQualityLevel(int qualityLevel)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Videos",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/video/Videos",
                "description": "This interface is deprecated. Use VideosClient instead",
                "methods": [
                    {
                        "name": "getCaptureCapabilities(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Videos.CaptureCapabilitiesResult>",
                        "description": "Fetch the video capabilities of the service, whether the mic or front-facing camera are supported, if the service can write to external storage, and what capture modes and quality levels are available."
                    },
                    {
                        "name": "getCaptureOverlayIntent(GoogleApiClient apiClient)",
                        "return_type": "abstractIntent",
                        "description": "Return an intent to launch the capture overlay."
                    },
                    {
                        "name": "getCaptureState(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<Videos.CaptureStateResult>",
                        "description": "Fetch the current state of the capture service."
                    },
                    {
                        "name": "isCaptureAvailable(GoogleApiClient apiClient, int captureMode)",
                        "return_type": "abstractPendingResult<Videos.CaptureAvailableResult>",
                        "description": "Fetch if the capture service is already in use or not."
                    },
                    {
                        "name": "isCaptureSupported(GoogleApiClient apiClient)",
                        "return_type": "abstract boolean",
                        "description": "Synchronous simple check to determine if the device supports capture."
                    },
                    {
                        "name": "registerCaptureOverlayStateChangedListener(GoogleApiClient apiClient, Videos.CaptureOverlayStateListener listener)",
                        "return_type": "abstract void",
                        "description": "Register a listener to listen for changes to the overlay state launched by getCaptureOverlayIntent(GoogleApiClient"
                    },
                    {
                        "name": "unregisterCaptureOverlayStateChangedListener(GoogleApiClient apiClient)",
                        "return_type": "abstract void",
                        "description": "Unregisters this client's overlay state update listener, if any."
                    }
                ]
            },
            {
                "name": "Videos.CaptureAvailableResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureAvailableResult",
                "description": "This interface is deprecated. isAvailable is returned directly in the VideosClient.",
                "methods": [
                    {
                        "name": "isAvailable()",
                        "return_type": "abstract boolean",
                        "description": "Returns if the capture service is available or not."
                    }
                ]
            },
            {
                "name": "Videos.CaptureCapabilitiesResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureCapabilitiesResult",
                "description": "This interface is deprecated. VideoCapabilities is returned directly in the VideosClient.",
                "methods": [
                    {
                        "name": "getCapabilities()",
                        "return_type": "abstractVideoCapabilities",
                        "description": "Returns the video capabilities supported by the service or null if we failed to received data from the service."
                    }
                ]
            },
            {
                "name": "Videos.CaptureOverlayStateListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureOverlayStateListener",
                "description": "This interface is deprecated. Use VideosClient.OnCaptureOverlayStateListener instad.",
                "methods": [
                    {
                        "name": "onCaptureOverlayStateChanged(int overlayState)",
                        "return_type": "abstract void",
                        "description": "Called when the capture overlay state changes."
                    }
                ]
            },
            {
                "name": "Videos.CaptureStateResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureStateResult",
                "description": "This interface is deprecated. CaptureState is returned directly in the VideosClient.",
                "methods": [
                    {
                        "name": "getCaptureState()",
                        "return_type": "abstractCaptureState",
                        "description": "Returns the current state of the capture service."
                    }
                ]
            },
            {
                "name": "VideoConfiguration.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/video/VideoConfiguration.Builder",
                "description": "Builder class for VideoConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VideoConfiguration",
                        "description": ""
                    },
                    {
                        "name": "setCameraEnabled(boolean cameraEnabled)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": "Sets whether or not the front camera should record the user."
                    },
                    {
                        "name": "setCaptureMode(int captureMode)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": ""
                    },
                    {
                        "name": "setMicEnabled(boolean micEnabled)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": "Sets whether or not audio recording should be enabled."
                    },
                    {
                        "name": "setQualityLevel(int qualityLevel)",
                        "return_type": "VideoConfiguration.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Videos.CaptureAvailableResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureAvailableResult",
                "description": "This interface is deprecated. isAvailable is returned directly in the VideosClient.",
                "methods": [
                    {
                        "name": "isAvailable()",
                        "return_type": "abstract boolean",
                        "description": "Returns if the capture service is available or not."
                    }
                ]
            },
            {
                "name": "Videos.CaptureCapabilitiesResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureCapabilitiesResult",
                "description": "This interface is deprecated. VideoCapabilities is returned directly in the VideosClient.",
                "methods": [
                    {
                        "name": "getCapabilities()",
                        "return_type": "abstractVideoCapabilities",
                        "description": "Returns the video capabilities supported by the service or null if we failed to received data from the service."
                    }
                ]
            },
            {
                "name": "Videos.CaptureOverlayStateListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureOverlayStateListener",
                "description": "This interface is deprecated. Use VideosClient.OnCaptureOverlayStateListener instad.",
                "methods": [
                    {
                        "name": "onCaptureOverlayStateChanged(int overlayState)",
                        "return_type": "abstract void",
                        "description": "Called when the capture overlay state changes."
                    }
                ]
            },
            {
                "name": "Videos.CaptureStateResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/video/Videos.CaptureStateResult",
                "description": "This interface is deprecated. CaptureState is returned directly in the VideosClient.",
                "methods": [
                    {
                        "name": "getCaptureState()",
                        "return_type": "abstractCaptureState",
                        "description": "Returns the current state of the capture service."
                    }
                ]
            }
        ]
    },
    {
        "name": "uicontroller",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/framework/media/uicontroller/package-summary",
        "classes": [
            {
                "name": "UIController",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/uicontroller/UIController",
                "description": "Base class for implementing a UI controller that receives media status updates from the cast receiver.",
                "methods": [
                    {
                        "name": "onMediaStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when there is an updated MediaStatus on the RemoteMediaClient."
                    },
                    {
                        "name": "onSendingRemoteMediaRequest()",
                        "return_type": "void",
                        "description": "Called when there is a outgoing remote media request on the RemoteMediaClient."
                    },
                    {
                        "name": "onSessionConnected(CastSession castSession)",
                        "return_type": "void",
                        "description": "Called when a CastSession is connected."
                    },
                    {
                        "name": "onSessionEnded()",
                        "return_type": "void",
                        "description": "Called when a CastSession is ended."
                    }
                ]
            },
            {
                "name": "UIMediaController",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/framework/media/uicontroller/UIMediaController",
                "description": "A UIMediaController lets you bind the state of Android UI components to the state of a remote CastSession.",
                "methods": [
                    {
                        "name": "bindImageViewToImageOfCurrentItem(ImageView view, int imageType, int placeHolderDrawableResId)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use bindImageViewToImageOfCurrentItem(ImageView, ImageHints, int"
                    },
                    {
                        "name": "bindImageViewToImageOfCurrentItem(ImageView view, int imageType, View placeHolderView)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use bindImageViewToImageOfCurrentItem(ImageView, ImageHints, View"
                    },
                    {
                        "name": "bindImageViewToImageOfCurrentItem(ImageView view, ImageHints imageHints, int placeHolderDrawableResId)",
                        "return_type": "void",
                        "description": "Binds an ImageView to the first image of the current item."
                    },
                    {
                        "name": "bindImageViewToImageOfCurrentItem(ImageView view, ImageHints imageHints, View placeHolderView)",
                        "return_type": "void",
                        "description": "Binds an ImageView to an image of the current item."
                    },
                    {
                        "name": "bindImageViewToImageOfPreloadedItem(ImageView view, int imageType, int placeHolderDrawableResId)",
                        "return_type": "void",
                        "description": "This method is deprecated. Use bindImageViewToImageOfPreloadedItem(ImageView, ImageHints, int"
                    },
                    {
                        "name": "bindImageViewToImageOfPreloadedItem(ImageView view, ImageHints imageHints, int placeHolderDrawableResId)",
                        "return_type": "void",
                        "description": "Binds an ImageView to the first image of the preloaded item."
                    },
                    {
                        "name": "bindImageViewToMuteToggle(ImageView view)",
                        "return_type": "void",
                        "description": "Binds an ImageView to mute and unmute the Cast receiver device volume."
                    },
                    {
                        "name": "bindImageViewToPlayPauseToggle(ImageView view, Drawable playDrawable, Drawable pauseDrawable, Drawable stopDrawable, View loadingIndicator, boolean hideViewWhenLoading)",
                        "return_type": "void",
                        "description": "Binds an ImageView to toggle play / pause of the current item."
                    },
                    {
                        "name": "bindProgressBar(ProgressBar view)",
                        "return_type": "void",
                        "description": "Binds a ProgressBar to the playback progress of the current item."
                    },
                    {
                        "name": "bindProgressBar(ProgressBar view, long progressUpdateStepMs)",
                        "return_type": "void",
                        "description": "Binds a ProgressBar to the playback progress of the current item."
                    },
                    {
                        "name": "bindSeekBar(CastSeekBar view)",
                        "return_type": "void",
                        "description": "Binds a CastSeekBar to control the playback position of the current item."
                    },
                    {
                        "name": "bindSeekBar(SeekBar view, long progressUpdateStepMs)",
                        "return_type": "void",
                        "description": "Binds a SeekBar to control the playback position of the current item."
                    },
                    {
                        "name": "bindSeekBar(CastSeekBar view, long progressUpdateStepMs)",
                        "return_type": "void",
                        "description": "Binds a CastSeekBar to control the playback position of the current item."
                    },
                    {
                        "name": "bindSeekBar(SeekBar view)",
                        "return_type": "void",
                        "description": "Binds a SeekBar to control the playback position of the current item."
                    },
                    {
                        "name": "bindTextViewToMetadataOfCurrentItem(TextView view, String key)",
                        "return_type": "void",
                        "description": "Binds a TextView to the metadata of the current item, keyed by key."
                    },
                    {
                        "name": "bindTextViewToMetadataOfCurrentItem(TextView view, List<String> keysInPreference)",
                        "return_type": "void",
                        "description": "Binds a TextView to the metadata of the current item, keyed by a list of keys in the order of preferences."
                    },
                    {
                        "name": "bindTextViewToMetadataOfPreloadedItem(TextView view, List<String> keysInPreference)",
                        "return_type": "void",
                        "description": "Binds an TextView to the metadata of the preloaded item, keyed by a list of keys in the order of preferences."
                    },
                    {
                        "name": "bindTextViewToMetadataOfPreloadedItem(TextView view, String key)",
                        "return_type": "void",
                        "description": "Binds an TextView to the metadata of the preloaded item, keyed by key."
                    },
                    {
                        "name": "bindTextViewToSmartSubtitle(TextView textView)",
                        "return_type": "void",
                        "description": "Binds a TextView to the most appropriate item in MediaMetadata for subtitle."
                    },
                    {
                        "name": "bindTextViewToStreamDuration(TextView view, View liveStreamIndicator)",
                        "return_type": "void",
                        "description": "Binds a TextView to the playback duration of the current item."
                    },
                    {
                        "name": "bindTextViewToStreamDuration(TextView view)",
                        "return_type": "void",
                        "description": "Binds a TextView to the playback duration of the current item."
                    },
                    {
                        "name": "bindTextViewToStreamPosition(TextView view, boolean updateWhileScrubbing)",
                        "return_type": "void",
                        "description": "Binds a TextView to the playback position of the current item."
                    },
                    {
                        "name": "bindTextViewToStreamPosition(TextView view, boolean updateWhileScrubbing, long progressUpdateStepMs)",
                        "return_type": "void",
                        "description": "Binds a TextView to the playback position of the current item."
                    },
                    {
                        "name": "bindViewToClosedCaption(View view)",
                        "return_type": "void",
                        "description": "Binds a View to launching the TracksChooserDialogFragment when clicked."
                    },
                    {
                        "name": "bindViewToForward(View view, long skipStepMs)",
                        "return_type": "void",
                        "description": "Binds a View to skip forward playback of the current item skipStepMs milliseconds."
                    },
                    {
                        "name": "bindViewToLaunchExpandedController(View view)",
                        "return_type": "void",
                        "description": "Binds a View to launching the expanded controller Activity specified by the name in CastMediaOptions.getExpandedControllerActivityClassName("
                    },
                    {
                        "name": "bindViewToLoadingIndicator(View view)",
                        "return_type": "void",
                        "description": "Binds a View's visibility state to View.VISIBLE only when the remote receiver is either buffering, or loading the next item."
                    },
                    {
                        "name": "bindViewToRewind(View view, long skipStepMs)",
                        "return_type": "void",
                        "description": "Binds a View to rewind playback of the current item skipStepMs milliseconds."
                    },
                    {
                        "name": "bindViewToSkipNext(View view, int invisibleState)",
                        "return_type": "void",
                        "description": "Binds a View to skip to the next item in the queue."
                    },
                    {
                        "name": "bindViewToSkipPrev(View view, int invisibleState)",
                        "return_type": "void",
                        "description": "Binds a View to skip to the previous item in the queue."
                    },
                    {
                        "name": "bindViewToUIController(View view, UIController uiController)",
                        "return_type": "void",
                        "description": "Binds a View to a UIController."
                    },
                    {
                        "name": "bindViewVisibilityToMediaSession(View view, int invisibleState)",
                        "return_type": "void",
                        "description": "Binds a View's visibility state to the availability of a Cast media session."
                    },
                    {
                        "name": "bindViewVisibilityToPreloadingEvent(View view, int invisibleState)",
                        "return_type": "void",
                        "description": "Binds a View's visibility state to the availability of a preloaded item."
                    },
                    {
                        "name": "dispose()",
                        "return_type": "void",
                        "description": "Disposes this instance."
                    },
                    {
                        "name": "getRemoteMediaClient()",
                        "return_type": "RemoteMediaClient",
                        "description": "Returns the managed RemoteMediaClient of the current active CastSession."
                    },
                    {
                        "name": "isActive()",
                        "return_type": "boolean",
                        "description": "Returns true if there is an active connected Cast Session."
                    },
                    {
                        "name": "onAdBreakStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated ad break status information is received."
                    },
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "void",
                        "description": "Called when updated media metadata is received."
                    },
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player queue preload status information is received, for example, the next item to play has been preloaded."
                    },
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player queue status information is received."
                    },
                    {
                        "name": "onSendingRemoteMediaRequest()",
                        "return_type": "void",
                        "description": "Called when there is an outgoing request to the receiver."
                    },
                    {
                        "name": "onSessionEnded(CastSession session, int error)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionEnding(CastSession session)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionResumeFailed(CastSession session, int error)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionResumed(CastSession session, boolean wasSuspended)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionResuming(CastSession session, String sessionId)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionStartFailed(CastSession session, int error)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionStarted(CastSession session, String sessionId)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionStarting(CastSession session)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSessionSuspended(CastSession session, int reason)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "void",
                        "description": "Called when updated player status information is received."
                    },
                    {
                        "name": "setPostRemoteMediaClientListener(RemoteMediaClient.Listener listener)",
                        "return_type": "void",
                        "description": "Sets a RemoteMediaClient.Listener that will be called after all the other registered listeners in the UIMediaController instance are invoked."
                    }
                ]
            }
        ]
    },
    {
        "name": "net",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/net/package-summary",
        "classes": [
            {
                "name": "CronetProviderInstaller",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/net/CronetProviderInstaller",
                "description": "A utility class to install the Cronet Google Play Services Provider.",
                "methods": [
                    {
                        "name": "installProvider(Context context)",
                        "return_type": "static Task<Void>",
                        "description": "Installs Cronet provider if it is not already installed."
                    },
                    {
                        "name": "isInstalled()",
                        "return_type": "static boolean",
                        "description": "Checks whether the Cronet provider is already installed."
                    }
                ]
            }
        ]
    },
    {
        "name": "cast",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/package-summary",
        "classes": [
            {
                "name": "AdBreakClipInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakClipInfo",
                "description": "A class that aggregates information about an ad break clip.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getClickThroughUrl()",
                        "return_type": "String",
                        "description": "Returns this clip's click through URL."
                    },
                    {
                        "name": "getContentId()",
                        "return_type": "String",
                        "description": "Returns this clip's content ID."
                    },
                    {
                        "name": "getContentUrl()",
                        "return_type": "String",
                        "description": "Returns this clip's content URL."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns this clip's custom data."
                    },
                    {
                        "name": "getDurationInMs()",
                        "return_type": "long",
                        "description": "Returns this clip's duration in milliseconds."
                    },
                    {
                        "name": "getHlsSegmentFormat()",
                        "return_type": "String",
                        "description": "Returns HlsSegmentFormat of the ad break clip, or empty String if not set."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Returns this clip's ID."
                    },
                    {
                        "name": "getImageUrl()",
                        "return_type": "String",
                        "description": "Returns this clip's image URL."
                    },
                    {
                        "name": "getMimeType()",
                        "return_type": "String",
                        "description": "Returns this clip's mime type."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Returns this clip's title."
                    },
                    {
                        "name": "getVastAdsRequest()",
                        "return_type": "VastAdsRequest",
                        "description": "Returns the VastAdsRequest representing the VAST ad request configuration."
                    },
                    {
                        "name": "getWhenSkippableInMs()",
                        "return_type": "long",
                        "description": "Returns the time in milliseconds when this break clip becomes skippable."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AdBreakClipInfo.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakClipInfo.Builder",
                "description": "A builder for AdBreakClipInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdBreakClipInfo",
                        "description": ""
                    },
                    {
                        "name": "setClickThroughUrl(String clickThroughUrl)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's click through URL."
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's content ID."
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's content URL."
                    },
                    {
                        "name": "setCustomDataJsonString(String customDataJsonString)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's custom data as a string."
                    },
                    {
                        "name": "setDurationInMs(long durationInMs)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's duration in milliseconds."
                    },
                    {
                        "name": "setHlsSegmentFormat(String hlsSegmentFormat)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets HlsSegmentFormat of the ad break clip, or empty String if not set."
                    },
                    {
                        "name": "setImageUrl(String imageUrl)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's image URL."
                    },
                    {
                        "name": "setMimeType(String mimeType)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's mime type."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's title."
                    },
                    {
                        "name": "setVastAdsRequest(VastAdsRequest vastAdsRequest)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets the VastAdsRequest of a VAST ad break clip, representing the VAST ad request configuration."
                    },
                    {
                        "name": "setWhenSkippableInMs(long whenSkippableInMs)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets the time in milliseconds when this break clip becomes skippable."
                    }
                ]
            },
            {
                "name": "AdBreakInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakInfo",
                "description": "A class that aggregates information about an ad that is playing or will be played on the receiver.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getBreakClipIds()",
                        "return_type": "String[]",
                        "description": "Returns an unmodifiable list of ad break clip IDs in this break."
                    },
                    {
                        "name": "getDurationInMs()",
                        "return_type": "long",
                        "description": "Returns this break content’s duration in milliseconds."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Returns this break's ID."
                    },
                    {
                        "name": "getPlaybackPositionInMs()",
                        "return_type": "long",
                        "description": "Returns this break content’s playback position in milliseconds at which the ad will begin playing relative to the start of the video."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isEmbedded()",
                        "return_type": "boolean",
                        "description": "Returns true if this break doesn't have a URL and is part of the content."
                    },
                    {
                        "name": "isWatched()",
                        "return_type": "boolean",
                        "description": "Returns true if this break has been watched."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AdBreakInfo.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakInfo.Builder",
                "description": "A builder for AdBreakInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdBreakInfo",
                        "description": "Builds an AdBreakInfo instance."
                    },
                    {
                        "name": "setBreakClipIds(String[] breakClipIds)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Set an unmodifiable list of ad break clip IDs in this break."
                    },
                    {
                        "name": "setDurationInMs(long durationInMs)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Sets this break content’s duration in milliseconds."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Sets the ad break's ID."
                    },
                    {
                        "name": "setIsEmbedded(boolean isEmbedded)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Set to true if this break doesn't have a URL and is part of the content."
                    },
                    {
                        "name": "setIsWatched(boolean isWatched)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Set to true if this break has been watched."
                    }
                ]
            },
            {
                "name": "AdBreakStatus",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakStatus",
                "description": "A class that holds status information about an ad break.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getBreakClipId()",
                        "return_type": "String",
                        "description": "Returns the ID of the current ad break clip."
                    },
                    {
                        "name": "getBreakId()",
                        "return_type": "String",
                        "description": "Returns the ID of the current ad break."
                    },
                    {
                        "name": "getCurrentBreakClipTimeInMs()",
                        "return_type": "long",
                        "description": "Returns the current position of the ad break clip, in milliseconds, from the start of the ad break clip."
                    },
                    {
                        "name": "getCurrentBreakTimeInMs()",
                        "return_type": "long",
                        "description": "Returns the current position of the ad break, in milliseconds, from the start of the ad break."
                    },
                    {
                        "name": "getWhenSkippableInMs()",
                        "return_type": "long",
                        "description": "Returns the number of milliseconds after the ad break clip starts when the user can skip the ad break clip."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AdBreakStatus.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakStatus.Builder",
                "description": "Builder class for AdBreakStatus.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdBreakStatus",
                        "description": "Builds an AdBreakStatus."
                    },
                    {
                        "name": "setBreakClipId(String breakClipId)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the ID of the current ad break clip."
                    },
                    {
                        "name": "setBreakId(String breakId)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the ID of the current ad break."
                    },
                    {
                        "name": "setCurrentBreakClipTimeInMs(long currentBreakClipTimeInMs)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the current position of the ad break clip, in milliseconds, from the start of the ad break clip."
                    },
                    {
                        "name": "setCurrentBreakTimeInMs(long currentBreakTimeInMs)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the current position of the ad break, in milliseconds, from the start of the ad break."
                    },
                    {
                        "name": "setWhenSkippableInMs(long whenSkippableInMs)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the number of milliseconds after the ad break clip starts when the user can skip the ad break clip."
                    }
                ]
            },
            {
                "name": "ApplicationMetadata",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/ApplicationMetadata",
                "description": "Cast application metadata.",
                "methods": [
                    {
                        "name": "areNamespacesSupported(List<String> namespaces)",
                        "return_type": "boolean",
                        "description": "Tests if the application supports all of the given namespaces."
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getApplicationId()",
                        "return_type": "String",
                        "description": "Returns the application's ID."
                    },
                    {
                        "name": "getImages()",
                        "return_type": "List<WebImage>",
                        "description": "Returns the list of image metadata associated with the receiver application."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the application's human-readable name."
                    },
                    {
                        "name": "getSenderAppIdentifier()",
                        "return_type": "String",
                        "description": "If there is an Android sender application that is the counterpart to the receiver application, this method returns the unique identifier of that sender application in the Google Play Store."
                    },
                    {
                        "name": "getSupportedNamespaces()",
                        "return_type": "List<String>",
                        "description": "Returns an unmodifiable list of namespaces supported by the application."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isNamespaceSupported(String namespace)",
                        "return_type": "boolean",
                        "description": "Tests if the application supports the given namespace."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Cast",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/Cast",
                "description": "Main entry point for the Cast APIs.",
                "methods": []
            },
            {
                "name": "Cast.CastOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastOptions",
                "description": "API configuration parameters for Cast.",
                "methods": [
                    {
                        "name": "builder(CastDevice castDevice, Cast.Listener castListener)",
                        "return_type": "staticCast.CastOptions.Builder",
                        "description": "This method is deprecated. Use the Cast.CastOptions.Builder constructor instead."
                    },
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Cast.CastOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastOptions.Builder",
                "description": "A builder to create an instance of Cast.CastOptions to set API configuration parameters for Cast.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Cast.CastOptions",
                        "description": "Builds a CastOptions with the arguments supplied to this builder."
                    },
                    {
                        "name": "setVerboseLoggingEnabled(boolean enabled)",
                        "return_type": "Cast.CastOptions.Builder",
                        "description": "Enables or disables verbose logging for this Cast session."
                    }
                ]
            },
            {
                "name": "Cast.Listener",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/Cast.Listener",
                "description": "The list of Cast callbacks.",
                "methods": [
                    {
                        "name": "onActiveInputStateChanged(int activeInputState)",
                        "return_type": "void",
                        "description": "Called when the active-input state of the device has changed."
                    },
                    {
                        "name": "onApplicationDisconnected(int statusCode)",
                        "return_type": "void",
                        "description": "Called when the connection to the receiver application has been lost, such as when another client has launched a new application."
                    },
                    {
                        "name": "onApplicationMetadataChanged(ApplicationMetadata applicationMetadata)",
                        "return_type": "void",
                        "description": "Called when the application metadata of the currently running receiver application has changed."
                    },
                    {
                        "name": "onApplicationStatusChanged()",
                        "return_type": "void",
                        "description": "Called when the status of the connected application has changed."
                    },
                    {
                        "name": "onStandbyStateChanged(int standbyState)",
                        "return_type": "void",
                        "description": "Called when the standby state of the device has changed."
                    },
                    {
                        "name": "onVolumeChanged()",
                        "return_type": "void",
                        "description": "Called when the device's volume or mute state has changed."
                    }
                ]
            },
            {
                "name": "CastDevice",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastDevice",
                "description": "An object representing a Cast receiver device.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDeviceId()",
                        "return_type": "String",
                        "description": "Gets the unique ID for the device."
                    },
                    {
                        "name": "getDeviceVersion()",
                        "return_type": "String",
                        "description": "Gets the device's version."
                    },
                    {
                        "name": "getFriendlyName()",
                        "return_type": "String",
                        "description": "Gets the friendly name for the device."
                    },
                    {
                        "name": "getFromBundle(Bundle extras)",
                        "return_type": "staticCastDevice",
                        "description": "Returns the CastDevice from extras, otherwise null."
                    },
                    {
                        "name": "getIcon(int preferredWidth, int preferredHeight)",
                        "return_type": "WebImage",
                        "description": "Returns a best-fit icon for the requested icon size."
                    },
                    {
                        "name": "getIcons()",
                        "return_type": "List<WebImage>",
                        "description": "Returns a list of all of the device's icons."
                    },
                    {
                        "name": "getInetAddress()",
                        "return_type": "InetAddress",
                        "description": "Gets the InetAddress of the device."
                    },
                    {
                        "name": "getIpAddress()",
                        "return_type": "Inet4Address",
                        "description": "This method is deprecated. Use getInetAddress("
                    },
                    {
                        "name": "getModelName()",
                        "return_type": "String",
                        "description": "Gets the model name for the device."
                    },
                    {
                        "name": "getServicePort()",
                        "return_type": "int",
                        "description": "Gets the device's service port."
                    },
                    {
                        "name": "hasCapabilities(int[] capabilities)",
                        "return_type": "boolean",
                        "description": "Tests if the device supports a given set of capabilities."
                    },
                    {
                        "name": "hasCapability(int capability)",
                        "return_type": "boolean",
                        "description": "Tests if the device supports a given capability."
                    },
                    {
                        "name": "hasIPv4Address()",
                        "return_type": "boolean",
                        "description": "Returns true if the CastDevice has an Inet4Address IPv4 address."
                    },
                    {
                        "name": "hasIPv6Address()",
                        "return_type": "boolean",
                        "description": "Returns true if the CastDevice has an Inet6Address IPv6 address."
                    },
                    {
                        "name": "hasIcons()",
                        "return_type": "boolean",
                        "description": "Checks if the device has any icons."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": "Overridden to return a hashcode of the device ID."
                    },
                    {
                        "name": "isOnLocalNetwork()",
                        "return_type": "boolean",
                        "description": "Returns true if this CastDevice is on the local network."
                    },
                    {
                        "name": "isSameDevice(CastDevice castDevice)",
                        "return_type": "boolean",
                        "description": "Tests if this device refers to the same physical Cast device as CastDevice."
                    },
                    {
                        "name": "putInBundle(Bundle bundle)",
                        "return_type": "void",
                        "description": "Writes the CastDevice to bundle."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a string representation of the device."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CastMediaControlIntent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastMediaControlIntent",
                "description": "Intent constants for use with the Cast MediaRouteProvider.",
                "methods": [
                    {
                        "name": "categoryForCast(Collection<String> namespaces)",
                        "return_type": "staticString",
                        "description": "Returns a custom control category for discovering Cast devices currently running an application which supports the specified namespaces."
                    },
                    {
                        "name": "categoryForCast(String applicationId, Collection<String> namespaces)",
                        "return_type": "staticString",
                        "description": "Returns a custom control category for discovering Cast devices meeting both application ID and namespace restrictions."
                    },
                    {
                        "name": "categoryForCast(String applicationId)",
                        "return_type": "staticString",
                        "description": "Returns a custom control category for discovering Cast devices that support running the specified app, independent of whether the app is running or not."
                    },
                    {
                        "name": "categoryForRemotePlayback(String applicationId)",
                        "return_type": "staticString",
                        "description": "Returns a custom control category for discovering Cast devices which support the default Android remote playback actions using the specified Cast player."
                    },
                    {
                        "name": "categoryForRemotePlayback()",
                        "return_type": "staticString",
                        "description": "Returns a custom control category for discovering Cast devices which support the Default Media Receiver."
                    },
                    {
                        "name": "languageTagForLocale(Locale locale)",
                        "return_type": "staticString",
                        "description": "Returns an RFC-5646 language tag string fo the given locale."
                    }
                ]
            },
            {
                "name": "CastPresentation",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastPresentation",
                "description": "This class is deprecated. The RemoteDisplay feature is deprecated and will be removed in a future release.",
                "methods": []
            },
            {
                "name": "CastRemoteDisplay",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay",
                "description": "This class is deprecated. The RemoteDisplay feature is deprecated and will be removed in a future release.",
                "methods": [
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticCastRemoteDisplayClient",
                        "description": "The entry point for interacting with the CastRemoteDisplay API from a non-Activity context."
                    },
                    {
                        "name": "isRemoteDisplaySdkSupported(Context context)",
                        "return_type": "static boolean",
                        "description": "Returns true if the Remote Display SDK is supported on this device."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplayOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplayOptions",
                "description": "This class is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": []
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                "description": "This class is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastRemoteDisplay.CastRemoteDisplayOptions",
                        "description": "Builds a CastOptions with the arguments supplied to this builder."
                    },
                    {
                        "name": "setConfigPreset(int configPreset)",
                        "return_type": "CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                        "description": "Set the Remote Display configuration preset."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayClient",
                "description": "This class is deprecated. The RemoteDisplay feature is deprecated and will be removed in a future release.",
                "methods": [
                    {
                        "name": "startRemoteDisplay(CastDevice castDevice, String applicationId, int configPreset, PendingIntent sessionEndedPendingIntent)",
                        "return_type": "Task<Display>",
                        "description": "The low level API for starting a Cast Remote Display session."
                    },
                    {
                        "name": "stopRemoteDisplay()",
                        "return_type": "Task<Void>",
                        "description": "The low level API for stopping a Cast Remote Display session."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService",
                "description": "This class is deprecated. The RemoteDisplay feature is deprecated and will be removed in a future release.",
                "methods": [
                    {
                        "name": "getInstance()",
                        "return_type": "staticCastRemoteDisplayLocalService",
                        "description": "The singleton instance of the CastRemoteDisplayLocalService."
                    },
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreatePresentation(Display display)",
                        "return_type": "abstract void",
                        "description": "The API that will be called when the Cast Remote Display has been created."
                    },
                    {
                        "name": "onDismissPresentation()",
                        "return_type": "abstract void",
                        "description": "The API that will be called when the Cast Remote Display should be dismissed because the Cast Remote Display session is ending."
                    },
                    {
                        "name": "onStartCommand(Intent intent, int flags, int startId)",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "startService(Context activityContext, Class<? extends CastRemoteDisplayLocalService> serviceClass, String applicationId, CastDevice device, CastRemoteDisplayLocalService.NotificationSettings notificationSettings, CastRemoteDisplayLocalService.Callbacks callbacks)",
                        "return_type": "static void",
                        "description": "Starts the CastRemoteDisplayLocalService instance and initiates the remote display session."
                    },
                    {
                        "name": "startServiceWithOptions(Context activityContext, Class<? extends CastRemoteDisplayLocalService> serviceClass, String applicationId, CastDevice device, CastRemoteDisplayLocalService.Options options, CastRemoteDisplayLocalService.NotificationSettings notificationSettings, CastRemoteDisplayLocalService.Callbacks callbacks)",
                        "return_type": "static void",
                        "description": "Starts the CastRemoteDisplayLocalService instance and initiates the remote display session."
                    },
                    {
                        "name": "stopService()",
                        "return_type": "static void",
                        "description": "Stops the CastRemoteDisplayLocalService instance and terminates the remote display session."
                    },
                    {
                        "name": "updateNotificationSettings(CastRemoteDisplayLocalService.NotificationSettings notificationSettings)",
                        "return_type": "void",
                        "description": "Modifies the current notification settings."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.NotificationSettings",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.NotificationSettings",
                "description": "Notification settings.",
                "methods": []
            },
            {
                "name": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.NotificationSettings.Builder",
                "description": "Builder class for the CastRemoteDisplayLocalService.NotificationSettings object.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings",
                        "description": "Builds and returns the CastRemoteDisplayLocalService.NotificationSettings object."
                    },
                    {
                        "name": "setNotification(Notification notification)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "Sets a custom Notification."
                    },
                    {
                        "name": "setNotificationPendingIntent(PendingIntent notificationPendingIntent)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "Sets a PendingIntent that will be executed when the default notification is clicked."
                    },
                    {
                        "name": "setNotificationText(String notificationText)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "The default Notification text."
                    },
                    {
                        "name": "setNotificationTitle(String notificationTitle)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "The default Notification title."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.Options",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.Options",
                "description": "Options for a remote display session.",
                "methods": [
                    {
                        "name": "getConfigPreset()",
                        "return_type": "int",
                        "description": "Get the Remote Display configuration preset."
                    },
                    {
                        "name": "setConfigPreset(int configPreset)",
                        "return_type": "void",
                        "description": "Set the Remote Display configuration preset."
                    }
                ]
            },
            {
                "name": "CastStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CastStatusCodes",
                "description": "Status codes for the Cast APIs.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly!"
                    }
                ]
            },
            {
                "name": "CredentialsData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CredentialsData",
                "description": "Credentials data used to identify the credentials of the sender.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCredentials()",
                        "return_type": "String",
                        "description": "Returns the application-specific blob which identifies and possibly authenticates the user that's requesting to launch or join an receiver app."
                    },
                    {
                        "name": "getCredentialsType()",
                        "return_type": "String",
                        "description": "Returns the type of the credentials."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CredentialsData.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/CredentialsData.Builder",
                "description": "Builder for CredentialsData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialsData",
                        "description": "Builds a CredentialsData."
                    },
                    {
                        "name": "setCredentials(String credentials)",
                        "return_type": "CredentialsData.Builder",
                        "description": "Sets the credentials."
                    },
                    {
                        "name": "setCredentialsType(String credentialsType)",
                        "return_type": "CredentialsData.Builder",
                        "description": "Sets the credentials type."
                    }
                ]
            },
            {
                "name": "LaunchOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/LaunchOptions",
                "description": "An object that holds options that affect how a receiver application is launched.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAndroidReceiverCompatible()",
                        "return_type": "boolean",
                        "description": "Returns true if the sender app supports casting to an Android TV app."
                    },
                    {
                        "name": "getCredentialsData()",
                        "return_type": "CredentialsData",
                        "description": "Returns the CredentialsData."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Returns the language, or null if none was specified."
                    },
                    {
                        "name": "getRelaunchIfRunning()",
                        "return_type": "boolean",
                        "description": "Returns the \"relaunch if running\" flag."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": "Overridden to return a hashcode of the device ID."
                    },
                    {
                        "name": "setLanguage(String language)",
                        "return_type": "void",
                        "description": "Sets the language to be used by the receiver application."
                    },
                    {
                        "name": "setRelaunchIfRunning(boolean relaunchIfRunning)",
                        "return_type": "void",
                        "description": "Sets the \"relaunch if running\" flag."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a string representation of this object."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LaunchOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/LaunchOptions.Builder",
                "description": "A builder for LaunchOptions objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LaunchOptions",
                        "description": "Builds and returns the LaunchOptions object."
                    },
                    {
                        "name": "setAndroidReceiverCompatible(boolean androidReceiverCompatible)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets true if the sender app supports casting to an Android TV app."
                    },
                    {
                        "name": "setCredentialsData(CredentialsData credentialsData)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets the credentials data."
                    },
                    {
                        "name": "setLocale(Locale locale)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets the desired application locale."
                    },
                    {
                        "name": "setRelaunchIfRunning(boolean relaunchIfRunning)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets the \"relaunch if running\" flag."
                    }
                ]
            },
            {
                "name": "MediaError",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaError",
                "description": "Class for media errors.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the customized object for storing the media error."
                    },
                    {
                        "name": "getDetailedErrorCode()",
                        "return_type": "Integer",
                        "description": "Returns the API-specific detailed error code, or null if not specified."
                    },
                    {
                        "name": "getReason()",
                        "return_type": "String",
                        "description": "Returns the API-specific error reason."
                    },
                    {
                        "name": "getType()",
                        "return_type": "String",
                        "description": "Returns the type of the media error."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaError.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaError.Builder",
                "description": "Builder for MediaError.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaError",
                        "description": "Build a MediaError."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setDetailedErrorCode(Integer detailedErrorCode)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the detailed error code."
                    },
                    {
                        "name": "setReason(String reason)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the error reason."
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the type of the media error."
                    }
                ]
            },
            {
                "name": "MediaInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaInfo",
                "description": "A class that aggregates information about a media item.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAdBreakClips()",
                        "return_type": "List<AdBreakClipInfo>",
                        "description": "Returns an unmodifiable list of AdBreakClipInfos, or null if none have been specified."
                    },
                    {
                        "name": "getAdBreaks()",
                        "return_type": "List<AdBreakInfo>",
                        "description": "Returns an unmodifiable list of AdBreakInfos, or null if none have been specified."
                    },
                    {
                        "name": "getContentId()",
                        "return_type": "String",
                        "description": "Returns the content ID."
                    },
                    {
                        "name": "getContentType()",
                        "return_type": "String",
                        "description": "Returns the content (MIME"
                    },
                    {
                        "name": "getContentUrl()",
                        "return_type": "String",
                        "description": "Returns the URL of the content to be played."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data, if any."
                    },
                    {
                        "name": "getEntity()",
                        "return_type": "String",
                        "description": "Returns the entity: a URI that identifies content in an application-specific way."
                    },
                    {
                        "name": "getHlsSegmentFormat()",
                        "return_type": "String",
                        "description": "Returns the HlsSegmentFormat, or null if none have been specified."
                    },
                    {
                        "name": "getHlsVideoSegmentFormat()",
                        "return_type": "String",
                        "description": "Returns the HlsVideoSegmentFormat, or null if none have been specified."
                    },
                    {
                        "name": "getMediaTracks()",
                        "return_type": "List<MediaTrack>",
                        "description": "Returns the list of media tracks, or null if none have been specified."
                    },
                    {
                        "name": "getMetadata()",
                        "return_type": "MediaMetadata",
                        "description": "Returns the media item metadata."
                    },
                    {
                        "name": "getStartAbsoluteTime()",
                        "return_type": "long",
                        "description": "Returns the start absolute time in milliseconds in epoch time, or UNKNOWN_START_ABSOLUTE_TIME if it is not available."
                    },
                    {
                        "name": "getStreamDuration()",
                        "return_type": "long",
                        "description": "Returns the stream duration, in milliseconds."
                    },
                    {
                        "name": "getStreamType()",
                        "return_type": "int",
                        "description": "Returns the stream type; one of the STREAM_TYPE_ constants."
                    },
                    {
                        "name": "getTextTrackStyle()",
                        "return_type": "TextTrackStyle",
                        "description": "Returns the text track style, or null if none has been specified."
                    },
                    {
                        "name": "getVmapAdsRequest()",
                        "return_type": "VastAdsRequest",
                        "description": "Gets the VMAP ad request configuration, which is a collection of VAST ads."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "setTextTrackStyle(TextTrackStyle textTrackStyle)",
                        "return_type": "void",
                        "description": "Sets the text track style."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaInfo.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaInfo.Builder",
                "description": "A builder for MediaInfo objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaInfo",
                        "description": "Builds and returns the MediaInfo object."
                    },
                    {
                        "name": "setAdBreakClips(List<AdBreakClipInfo> adBreakClips)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the list of AdBreakClipInfos, each containing the content of a specific ad."
                    },
                    {
                        "name": "setAdBreaks(List<AdBreakInfo> adBreaks)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the list of AdBreakInfo, which describes where each ad break is located and what AdBreakClipInfos each break includes."
                    },
                    {
                        "name": "setAtvEntity(String atvEntity)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the alternate entity to be used for loading the item on Android TV."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the content (MIME"
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the URL of the content to be played."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the custom application-specific data."
                    },
                    {
                        "name": "setEntity(String entity)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the entity, an application-specific deep link for loading the media."
                    },
                    {
                        "name": "setHlsSegmentFormat(String hlsSegmentFormat)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the HlsSegmentFormat."
                    },
                    {
                        "name": "setHlsVideoSegmentFormat(String hlsVideoSegmentFormat)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the HlsVideoSegmentFormat."
                    },
                    {
                        "name": "setMediaTracks(List<MediaTrack> mediaTracks)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the media tracks."
                    },
                    {
                        "name": "setMetadata(MediaMetadata metadata)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the media item metadata."
                    },
                    {
                        "name": "setStreamDuration(long duration)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the stream duration, in milliseconds."
                    },
                    {
                        "name": "setStreamType(int streamType)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the stream type; one of the STREAM_TYPE_ constants."
                    },
                    {
                        "name": "setTextTrackStyle(TextTrackStyle textTrackStyle)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the text track style."
                    },
                    {
                        "name": "setVmapAdsRequest(VastAdsRequest vmapAdsRequest)",
                        "return_type": "MediaInfo.Builder",
                        "description": "VMAP is a collection of VAST ads."
                    }
                ]
            },
            {
                "name": "MediaLiveSeekableRange",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaLiveSeekableRange",
                "description": "A class that aggregates information about the seekable range of a media stream.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getEndTime()",
                        "return_type": "long",
                        "description": "Returns the end time, in milliseconds, of the seekable range (which ranges from 0 to the end of the duration"
                    },
                    {
                        "name": "getStartTime()",
                        "return_type": "long",
                        "description": "Returns the start time, in milliseconds, of the seekable range (which ranges from 0 to the end time as returned by getEndTime("
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isLiveDone()",
                        "return_type": "boolean",
                        "description": "Returns the flag indicating whether the current live stream is done."
                    },
                    {
                        "name": "isMovingWindow()",
                        "return_type": "boolean",
                        "description": "Returns true if the current seekable range is a fixed-length moving window or false if it is an expanding range."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaLiveSeekableRange.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaLiveSeekableRange.Builder",
                "description": "Builder for MediaLiveSeekableRange.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaLiveSeekableRange",
                        "description": "Builds a MediaLiveSeekableRange."
                    },
                    {
                        "name": "setEndTime(long endTime)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets the end time in milliseconds."
                    },
                    {
                        "name": "setIsLiveDone(boolean isLiveDone)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets whether the live stream is done."
                    },
                    {
                        "name": "setIsMovingWindow(boolean isMovingWindow)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets whether the seekable range is a moving window."
                    },
                    {
                        "name": "setStartTime(long startTime)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets the start time in milliseconds."
                    }
                ]
            },
            {
                "name": "MediaLoadOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaLoadOptions",
                "description": "An object that holds options that affect how a receiver application should load a media item.",
                "methods": [
                    {
                        "name": "getActiveTrackIds()",
                        "return_type": "long[]",
                        "description": "Returns the array of the active tracks."
                    },
                    {
                        "name": "getAutoplay()",
                        "return_type": "boolean",
                        "description": "Returns the value of whether playback should start immediately."
                    },
                    {
                        "name": "getCredentials()",
                        "return_type": "String",
                        "description": "Returns the credentials string, as passed in with MediaLoadOptions.Builder.setCredentials(String"
                    },
                    {
                        "name": "getCredentialsType()",
                        "return_type": "String",
                        "description": "Returns the credentials type string, as passed in with MediaLoadOptions.Builder.setCredentialsType(String"
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom application-specific data to pass along with the load request."
                    },
                    {
                        "name": "getPlayPosition()",
                        "return_type": "long",
                        "description": "Returns the initial playback position, in milliseconds from the beginning of the stream."
                    },
                    {
                        "name": "getPlaybackRate()",
                        "return_type": "double",
                        "description": "Returns the playback rate, as the multiplier of the normal playback rate."
                    }
                ]
            },
            {
                "name": "MediaLoadOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaLoadOptions.Builder",
                "description": "Builder class for MediaLoadOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaLoadOptions",
                        "description": "Builds a MediaLoadOptions object."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the array of the active tracks."
                    },
                    {
                        "name": "setAutoplay(boolean autoplay)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the value of whether playback should start immediately."
                    },
                    {
                        "name": "setCredentials(String credentials)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the user credentials to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCredentialsType(String credentialsType)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the user credentials type to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the custom application-specific data to pass along with the load request."
                    },
                    {
                        "name": "setPlayPosition(long playPosition)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the initial playback position, in milliseconds from the beginning of the stream."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the playback rate, as the multiplier of the normal playback rate."
                    }
                ]
            },
            {
                "name": "MediaLoadRequestData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaLoadRequestData",
                "description": "The class used in load commands for specifying how a receiver application should load media.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActiveTrackIds()",
                        "return_type": "long[]",
                        "description": "Returns the array of the active tracks."
                    },
                    {
                        "name": "getAutoplay()",
                        "return_type": "Boolean",
                        "description": "Returns the value of whether playback should start immediately."
                    },
                    {
                        "name": "getCredentials()",
                        "return_type": "String",
                        "description": "Returns the credentials string, as passed in with MediaLoadOptions.Builder.setCredentials(String"
                    },
                    {
                        "name": "getCredentialsType()",
                        "return_type": "String",
                        "description": "Returns the credentials type string, as passed in with MediaLoadOptions.Builder.setCredentialsType(String"
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "long",
                        "description": "Returns the initial playback position, in milliseconds from the beginning of the stream."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom application-specific data to pass along with the load request."
                    },
                    {
                        "name": "getMediaInfo()",
                        "return_type": "MediaInfo",
                        "description": "Returns the MediaInfo of the load request."
                    },
                    {
                        "name": "getPlaybackRate()",
                        "return_type": "double",
                        "description": "Returns the playback rate, as the multiplier of the normal playback rate."
                    },
                    {
                        "name": "getQueueData()",
                        "return_type": "MediaQueueData",
                        "description": "Returns the MediaQueueData of the load request."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaLoadRequestData.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaLoadRequestData.Builder",
                "description": "Builder class for MediaLoadRequestData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaLoadRequestData",
                        "description": "Builds a MediaLoadRequestData object."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the array of the active tracks."
                    },
                    {
                        "name": "setAtvCredentials(String atvCredentials)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the alternate Android TV credentials in the load request."
                    },
                    {
                        "name": "setAtvCredentialsType(String atvCredentialsType)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the alternate Android TV credentials type in the load request."
                    },
                    {
                        "name": "setAutoplay(Boolean autoplay)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the value of whether playback should start immediately."
                    },
                    {
                        "name": "setCredentials(String credentials)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the user credentials to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCredentialsType(String credentialsType)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the user credentials type to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCurrentTime(long currentTime)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the initial playback position, in milliseconds from the beginning of the stream."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the custom application-specific data to pass along with the load request."
                    },
                    {
                        "name": "setMediaInfo(MediaInfo mediaInfo)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the MediaInfo of the load request."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the playback rate, as the multiplier of the normal playback rate."
                    },
                    {
                        "name": "setQueueData(MediaQueueData queueData)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the MediaQueueData of the load request."
                    }
                ]
            },
            {
                "name": "MediaMetadata",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaMetadata",
                "description": "Container class for media metadata.",
                "methods": [
                    {
                        "name": "addImage(WebImage image)",
                        "return_type": "void",
                        "description": "Adds an image to the list of images."
                    },
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Clears this object."
                    },
                    {
                        "name": "clearImages()",
                        "return_type": "void",
                        "description": "Clears the list of images."
                    },
                    {
                        "name": "containsKey(String key)",
                        "return_type": "boolean",
                        "description": "Tests if the object contains a field with the given key."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDate(String key)",
                        "return_type": "Calendar",
                        "description": "Reads the value of a date field."
                    },
                    {
                        "name": "getDateAsString(String key)",
                        "return_type": "String",
                        "description": "Reads the value of a date field, as a string."
                    },
                    {
                        "name": "getDouble(String key)",
                        "return_type": "double",
                        "description": "Reads the value of a double field."
                    },
                    {
                        "name": "getImages()",
                        "return_type": "List<WebImage>",
                        "description": "Returns the list of images."
                    },
                    {
                        "name": "getInt(String key)",
                        "return_type": "int",
                        "description": "Reads the value of an int field."
                    },
                    {
                        "name": "getMediaType()",
                        "return_type": "int",
                        "description": "Gets the media type."
                    },
                    {
                        "name": "getString(String key)",
                        "return_type": "String",
                        "description": "Reads the value of a String field."
                    },
                    {
                        "name": "getTimeMillis(String key)",
                        "return_type": "long",
                        "description": "Reads the value of a time field, as a long in milliseconds."
                    },
                    {
                        "name": "hasImages()",
                        "return_type": "boolean",
                        "description": "Checks if the metadata includes any images."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "keySet()",
                        "return_type": "Set<String>",
                        "description": "Returns a set of keys for all fields that are present in the object."
                    },
                    {
                        "name": "putDate(String key, Calendar value)",
                        "return_type": "void",
                        "description": "Stores a value in a date field."
                    },
                    {
                        "name": "putDouble(String key, double value)",
                        "return_type": "void",
                        "description": "Stores a value in a double field."
                    },
                    {
                        "name": "putInt(String key, int value)",
                        "return_type": "void",
                        "description": "Stores a value in an int field."
                    },
                    {
                        "name": "putString(String key, String value)",
                        "return_type": "void",
                        "description": "Stores a value in a String field."
                    },
                    {
                        "name": "putTimeMillis(String key, long value)",
                        "return_type": "void",
                        "description": "Stores a value in a time field."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaQueueContainerMetadata",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueContainerMetadata",
                "description": "Additional metadata for the media queue container.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getContainerDuration()",
                        "return_type": "double",
                        "description": "Returns the total playback time for the container."
                    },
                    {
                        "name": "getContainerImages()",
                        "return_type": "List<WebImage>",
                        "description": "Returns the images associated with the queue."
                    },
                    {
                        "name": "getContainerType()",
                        "return_type": "int",
                        "description": "Returns the container type."
                    },
                    {
                        "name": "getSections()",
                        "return_type": "List<MediaMetadata>",
                        "description": "Returns the information about the sections of the media stream, if any."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Returns the container title."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaQueueContainerMetadata.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueContainerMetadata.Builder",
                "description": "Builder class for constructing a MediaQueueContainerMetadata.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaQueueContainerMetadata",
                        "description": "Builds a MediaQueueContainerMetadata from the builder."
                    },
                    {
                        "name": "setContainerDuration(double containerDuration)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the total playback time for the container."
                    },
                    {
                        "name": "setContainerImages(List<WebImage> containerImages)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the images associated with the queue."
                    },
                    {
                        "name": "setContainerType(int containerType)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the container type."
                    },
                    {
                        "name": "setSections(List<MediaMetadata> sections)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the sections of the media stream."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the container title."
                    }
                ]
            },
            {
                "name": "MediaQueueData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueData",
                "description": "A class that holds the information of the playing queue or media container.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getContainerMetadata()",
                        "return_type": "MediaQueueContainerMetadata",
                        "description": "Returns the additional description for the queue."
                    },
                    {
                        "name": "getEntity()",
                        "return_type": "String",
                        "description": "Returns the queue deep link."
                    },
                    {
                        "name": "getItems()",
                        "return_type": "List<MediaQueueItem>",
                        "description": "Returns the list of queue items."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the display name for the queue."
                    },
                    {
                        "name": "getQueueId()",
                        "return_type": "String",
                        "description": "Returns the queue ID."
                    },
                    {
                        "name": "getQueueType()",
                        "return_type": "int",
                        "description": "Returns the type of the queue."
                    },
                    {
                        "name": "getRepeatMode()",
                        "return_type": "int",
                        "description": "Returns the repeat mode of the queue."
                    },
                    {
                        "name": "getStartIndex()",
                        "return_type": "int",
                        "description": "Returns the index of the item that should play first."
                    },
                    {
                        "name": "getStartTime()",
                        "return_type": "long",
                        "description": "Returns the playback start time, in milliseconds."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaQueueData.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueData.Builder",
                "description": "Builder class for constructing a MediaQueueData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaQueueData",
                        "description": "Builds a MediaQueueData from the builder."
                    },
                    {
                        "name": "setContainerMetadata(MediaQueueContainerMetadata containerMetadata)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the additional description for the queue, including an optional list of media sections metadata, images, etc."
                    },
                    {
                        "name": "setEntity(String entity)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the queue deep link (for example, the deep link of an album, playlist or radio station"
                    },
                    {
                        "name": "setItems(List<MediaQueueItem> items)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the list of queue items."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the display name for the queue."
                    },
                    {
                        "name": "setQueueId(String queueId)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the queue ID."
                    },
                    {
                        "name": "setQueueType(int queueType)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the type of the queue."
                    },
                    {
                        "name": "setRepeatMode(int repeatMode)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the repeat mode."
                    },
                    {
                        "name": "setStartIndex(int startIndex)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the index of the item that should play first."
                    },
                    {
                        "name": "setStartTime(long startTime)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the playback start time, in milliseconds."
                    }
                ]
            },
            {
                "name": "MediaQueueItem",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueItem",
                "description": "A class that aggregates information about an item in a media queue.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActiveTrackIds()",
                        "return_type": "long[]",
                        "description": "Returns the list of active media tracks, or null if none have been specified."
                    },
                    {
                        "name": "getAutoplay()",
                        "return_type": "boolean",
                        "description": "Returns the autoplay state."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data, if any."
                    },
                    {
                        "name": "getItemId()",
                        "return_type": "int",
                        "description": "Returns the item ID, or INVALID_ITEM_ID if not assigned."
                    },
                    {
                        "name": "getMedia()",
                        "return_type": "MediaInfo",
                        "description": "Returns the MediaInfo information associated with this queue item."
                    },
                    {
                        "name": "getPlaybackDuration()",
                        "return_type": "double",
                        "description": "Returns the playback duration in seconds."
                    },
                    {
                        "name": "getPreloadTime()",
                        "return_type": "double",
                        "description": "Returns the preload time in seconds."
                    },
                    {
                        "name": "getStartTime()",
                        "return_type": "double",
                        "description": "Returns the start time of the item in seconds."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaQueueItem.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueItem.Builder",
                "description": "A builder for MediaQueueItem objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaQueueItem",
                        "description": "Builds and returns the MediaQueueItem object."
                    },
                    {
                        "name": "clearItemId()",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setAutoplay(boolean autoplay)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setItemId(int itemId)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Sets the item ID."
                    },
                    {
                        "name": "setPlaybackDuration(double playbackDuration)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setPreloadTime(double preloadTime)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setStartTime(double startTime)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    }
                ]
            },
            {
                "name": "MediaSeekOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaSeekOptions",
                "description": "The class for specifying options for seek requests.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom application-specific data to pass along with the seek request."
                    },
                    {
                        "name": "getPosition()",
                        "return_type": "long",
                        "description": "Returns the position to seek to, in milliseconds."
                    },
                    {
                        "name": "getResumeState()",
                        "return_type": "int",
                        "description": "Returns the action to take after the seek operation has finished."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSeekToInfinite()",
                        "return_type": "boolean",
                        "description": "Returns whether to seek to the end of stream or live position."
                    }
                ]
            },
            {
                "name": "MediaSeekOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaSeekOptions.Builder",
                "description": "Builder for MediaSeekOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaSeekOptions",
                        "description": "Builds a MediaSeekOptions object."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets the custom application-specific data to pass along with the seek request."
                    },
                    {
                        "name": "setIsSeekToInfinite(boolean isSeekToInfinite)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets whether to seek to the end of stream or live position."
                    },
                    {
                        "name": "setPosition(long position)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets the position to seek to, in milliseconds."
                    },
                    {
                        "name": "setResumeState(int resumeState)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets the action to take after the seek operation has finished."
                    }
                ]
            },
            {
                "name": "MediaStatus",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaStatus",
                "description": "A class that holds status information about some media or media queue.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActiveTrackIds()",
                        "return_type": "long[]",
                        "description": "Returns the list of active track IDs set by the cast receiver, if any, otherwise null."
                    },
                    {
                        "name": "getAdBreakStatus()",
                        "return_type": "AdBreakStatus",
                        "description": "Returns the received AdBreakStatus."
                    },
                    {
                        "name": "getCurrentAdBreak()",
                        "return_type": "AdBreakInfo",
                        "description": "Returns the AdBreakInfo of the currently playing ad break on the cast receiver."
                    },
                    {
                        "name": "getCurrentAdBreakClip()",
                        "return_type": "AdBreakClipInfo",
                        "description": "Returns the AdBreakClipInfo of the currently playing ad break clip on the cast receiver."
                    },
                    {
                        "name": "getCurrentItemId()",
                        "return_type": "int",
                        "description": "Returns the item ID of the item that that was active in the queue (it may not be playing"
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns any custom data that is associated with the media item."
                    },
                    {
                        "name": "getIdleReason()",
                        "return_type": "int",
                        "description": "Gets the player state idle reason."
                    },
                    {
                        "name": "getIndexById(int itemId)",
                        "return_type": "Integer",
                        "description": "Returns the index of the MediaQueueItem with the given itemId in the playback queue, or null if there is no such item in the queue."
                    },
                    {
                        "name": "getItemById(int itemId)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem of the give item ID."
                    },
                    {
                        "name": "getItemByIndex(int index)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem at index, or null if index is out of bounds."
                    },
                    {
                        "name": "getLiveSeekableRange()",
                        "return_type": "MediaLiveSeekableRange",
                        "description": "Returns the seekable range of a live stream."
                    },
                    {
                        "name": "getLoadingItemId()",
                        "return_type": "int",
                        "description": "Returns the item ID of the item that is currently loading (but isn't active in the queue"
                    },
                    {
                        "name": "getMediaInfo()",
                        "return_type": "MediaInfo",
                        "description": "Returns the MediaInfo for this item."
                    },
                    {
                        "name": "getPlaybackRate()",
                        "return_type": "double",
                        "description": "Gets the current stream playback rate."
                    },
                    {
                        "name": "getPlayerState()",
                        "return_type": "int",
                        "description": "Gets the current media player state."
                    },
                    {
                        "name": "getPreloadedItemId()",
                        "return_type": "int",
                        "description": "If the next item has been preloaded this returns the preloaded item ID."
                    },
                    {
                        "name": "getQueueData()",
                        "return_type": "MediaQueueData",
                        "description": "Returns the last received MediaQueueData."
                    },
                    {
                        "name": "getQueueItem(int index)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem at index, or null if index out of bounds."
                    },
                    {
                        "name": "getQueueItemById(int itemId)",
                        "return_type": "MediaQueueItem",
                        "description": "Returns the MediaQueueItem of the give item ID."
                    },
                    {
                        "name": "getQueueItemCount()",
                        "return_type": "int",
                        "description": "Returns the number of items in the media queue."
                    },
                    {
                        "name": "getQueueItems()",
                        "return_type": "List<MediaQueueItem>",
                        "description": "Returns the list of MediaQueueItem as an unmodifiable list."
                    },
                    {
                        "name": "getQueueRepeatMode()",
                        "return_type": "int",
                        "description": "Returns the repeat mode of the media queue."
                    },
                    {
                        "name": "getStreamPosition()",
                        "return_type": "long",
                        "description": "Returns the current stream position, in milliseconds."
                    },
                    {
                        "name": "getStreamVolume()",
                        "return_type": "double",
                        "description": "Returns the stream's volume."
                    },
                    {
                        "name": "getVideoInfo()",
                        "return_type": "VideoInfo",
                        "description": "Returns the last received VideoInfo."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isMediaCommandSupported(long mediaCommand)",
                        "return_type": "boolean",
                        "description": "Tests if the stream supports a given control command."
                    },
                    {
                        "name": "isMute()",
                        "return_type": "boolean",
                        "description": "Returns the stream's mute state."
                    },
                    {
                        "name": "isPlayingAd()",
                        "return_type": "boolean",
                        "description": "Returns true is the receiver is playing an ad."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaTrack",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaTrack",
                "description": "A class that represents a media track, such as a language track or closed caption text track in a video.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getContentId()",
                        "return_type": "String",
                        "description": "Returns the content ID of the media track."
                    },
                    {
                        "name": "getContentType()",
                        "return_type": "String",
                        "description": "Returns the content type (MIME type"
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the custom data object for this media track, or null if none was specified."
                    },
                    {
                        "name": "getId()",
                        "return_type": "long",
                        "description": "Returns the unique ID of the media track."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Returns the language of this media track in RFC-5464 format, or null if none was specified."
                    },
                    {
                        "name": "getLanguageLocale()",
                        "return_type": "Locale",
                        "description": "Returns the Locale representing the track language defined by the language field."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the name of the media track, or null if none was specified."
                    },
                    {
                        "name": "getRoles()",
                        "return_type": "List<String>",
                        "description": "Returns the roles of this media track."
                    },
                    {
                        "name": "getSubtype()",
                        "return_type": "int",
                        "description": "Returns the subtype of this media track; one of the SUBTYPE_ constants."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the type of the track; one of the TYPE_ constants."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "void",
                        "description": "Sets the content ID for the media track."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "void",
                        "description": "Sets the content type (MIME type"
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MediaTrack.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/MediaTrack.Builder",
                "description": "A builder for MediaTrack objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaTrack",
                        "description": "Builds and returns the MediaTrack object."
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track content ID."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track content type."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track's custom data object."
                    },
                    {
                        "name": "setLanguage(String language)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the RFC-5464 formatted track language."
                    },
                    {
                        "name": "setLanguage(Locale locale)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track language from a Locale in RFC-5464 format."
                    },
                    {
                        "name": "setName(String trackName)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track name."
                    },
                    {
                        "name": "setRoles(List<String> roles)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the roles for this track."
                    },
                    {
                        "name": "setSubtype(int subtype)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track subtype with one of the SUBTYPE_ constants."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer",
                "description": "This class is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "getApproximateStreamPosition()",
                        "return_type": "long",
                        "description": "Returns the approximate stream position as calculated from the last received stream information and the elapsed wall-time since that update."
                    },
                    {
                        "name": "getMediaInfo()",
                        "return_type": "MediaInfo",
                        "description": "Returns the current media information, if any."
                    },
                    {
                        "name": "getMediaStatus()",
                        "return_type": "MediaStatus",
                        "description": "Returns the current media status, if any."
                    },
                    {
                        "name": "getNamespace()",
                        "return_type": "String",
                        "description": "Returns the media control namespace."
                    },
                    {
                        "name": "getStreamDuration()",
                        "return_type": "long",
                        "description": "Convenience method for getting the stream duration."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, MediaInfo mediaInfo, boolean autoplay, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new media item."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, MediaInfo mediaInfo, boolean autoplay, long playPosition)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new media item."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, MediaInfo mediaInfo)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and automatically starts playback of a new media item."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, MediaInfo mediaInfo, boolean autoplay)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new media item."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, MediaInfo mediaInfo, boolean autoplay, long playPosition, long[] activeTrackIds, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new media item."
                    },
                    {
                        "name": "onMessageReceived(CastDevice castDevice, String namespace, String message)",
                        "return_type": "void",
                        "description": "Called when a message is received from a given CastDevice."
                    },
                    {
                        "name": "pause(GoogleApiClient apiClient)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Pauses playback of the current media item."
                    },
                    {
                        "name": "pause(GoogleApiClient apiClient, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Pauses playback of the current media item."
                    },
                    {
                        "name": "play(GoogleApiClient apiClient, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Begins (or resumes"
                    },
                    {
                        "name": "play(GoogleApiClient apiClient)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Begins (or resumes"
                    },
                    {
                        "name": "queueAppendItem(GoogleApiClient apiClient, MediaQueueItem item, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Appends a new media item to the end of the queue."
                    },
                    {
                        "name": "queueInsertAndPlayItem(GoogleApiClient apiClient, MediaQueueItem item, int insertBeforeItemId, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "A convenience method that inserts a single item into the queue and starts playing it at the specified position."
                    },
                    {
                        "name": "queueInsertAndPlayItem(GoogleApiClient apiClient, MediaQueueItem item, int insertBeforeItemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "A convenience method that inserts a single item into the queue and starts playing it."
                    },
                    {
                        "name": "queueInsertItems(GoogleApiClient apiClient, MediaQueueItem[] itemsToInsert, int insertBeforeItemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Inserts a list of new media items into the queue."
                    },
                    {
                        "name": "queueJumpToItem(GoogleApiClient apiClient, int itemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Plays the item with itemId in the queue."
                    },
                    {
                        "name": "queueJumpToItem(GoogleApiClient apiClient, int itemId, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Plays the item with itemId in the queue."
                    },
                    {
                        "name": "queueLoad(GoogleApiClient apiClient, MediaQueueItem[] items, int startIndex, int repeatMode, long playPosition, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new queue of media items."
                    },
                    {
                        "name": "queueLoad(GoogleApiClient apiClient, MediaQueueItem[] items, int startIndex, int repeatMode, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Loads and optionally starts playback of a new queue of media items."
                    },
                    {
                        "name": "queueMoveItemToNewIndex(GoogleApiClient apiClient, int itemId, int newIndex, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Moves the item with itemId to a new position in the queue."
                    },
                    {
                        "name": "queueNext(GoogleApiClient apiClient, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Jumps to the next item in the queue."
                    },
                    {
                        "name": "queuePrev(GoogleApiClient apiClient, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Jumps to the previous item in the queue."
                    },
                    {
                        "name": "queueRemoveItem(GoogleApiClient apiClient, int itemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Removes the item with itemId from the queue."
                    },
                    {
                        "name": "queueRemoveItems(GoogleApiClient apiClient, int[] itemIdsToRemove, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Removes a list of items from the queue."
                    },
                    {
                        "name": "queueReorderItems(GoogleApiClient apiClient, int[] itemIdsToReorder, int insertBeforeItemId, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Reorder a list of media items in the queue."
                    },
                    {
                        "name": "queueSetRepeatMode(GoogleApiClient apiClient, int repeatMode, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Sets the repeat mode of the queue."
                    },
                    {
                        "name": "queueUpdateItems(GoogleApiClient apiClient, MediaQueueItem[] itemsToUpdate, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Updates properties of a subset of the existing items in the media queue."
                    },
                    {
                        "name": "requestStatus(GoogleApiClient apiClient)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Requests updated media status information from the receiver."
                    },
                    {
                        "name": "seek(GoogleApiClient apiClient, long position)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Seeks to a new position within the current media item."
                    },
                    {
                        "name": "seek(GoogleApiClient apiClient, long position, int resumeState, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Seeks to a new position within the current media item."
                    },
                    {
                        "name": "seek(GoogleApiClient apiClient, long position, int resumeState)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Seeks to a new position within the current media item."
                    },
                    {
                        "name": "setActiveMediaTracks(GoogleApiClient apiClient, long[] trackIds)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Sets the active media tracks."
                    },
                    {
                        "name": "setOnMetadataUpdatedListener(RemoteMediaPlayer.OnMetadataUpdatedListener listener)",
                        "return_type": "void",
                        "description": "Sets the RemoteMediaPlayer.OnMetadataUpdatedListener to get metadata updates."
                    },
                    {
                        "name": "setOnPreloadStatusUpdatedListener(RemoteMediaPlayer.OnPreloadStatusUpdatedListener listener)",
                        "return_type": "void",
                        "description": "Sets the RemoteMediaPlayer.OnPreloadStatusUpdatedListener to get status updates."
                    },
                    {
                        "name": "setOnQueueStatusUpdatedListener(RemoteMediaPlayer.OnQueueStatusUpdatedListener listener)",
                        "return_type": "void",
                        "description": "Sets the RemoteMediaPlayer.OnQueueStatusUpdatedListener to get status updates."
                    },
                    {
                        "name": "setOnStatusUpdatedListener(RemoteMediaPlayer.OnStatusUpdatedListener listener)",
                        "return_type": "void",
                        "description": "Sets the RemoteMediaPlayer.OnStatusUpdatedListener to get status updates."
                    },
                    {
                        "name": "setStreamMute(GoogleApiClient apiClient, boolean muteState, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Toggles the stream muting."
                    },
                    {
                        "name": "setStreamMute(GoogleApiClient apiClient, boolean muteState)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Toggles the stream muting."
                    },
                    {
                        "name": "setStreamVolume(GoogleApiClient apiClient, double volume, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Sets the stream volume."
                    },
                    {
                        "name": "setStreamVolume(GoogleApiClient apiClient, double volume)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Sets the stream volume of the current media item."
                    },
                    {
                        "name": "setTextTrackStyle(GoogleApiClient apiClient, TextTrackStyle trackStyle)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Sets the text track style."
                    },
                    {
                        "name": "stop(GoogleApiClient apiClient, JSONObject customData)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Stops playback of the current media item."
                    },
                    {
                        "name": "stop(GoogleApiClient apiClient)",
                        "return_type": "PendingResult<RemoteMediaPlayer.MediaChannelResult>",
                        "description": "Stops playback of the current media item."
                    }
                ]
            },
            {
                "name": "SessionState",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/SessionState",
                "description": "The data structure for a resume session request.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Returns the customizable object for storing the state."
                    },
                    {
                        "name": "getLoadRequestData()",
                        "return_type": "MediaLoadRequestData",
                        "description": "Returns the load request data."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SessionState.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/SessionState.Builder",
                "description": "Builder for SessionState.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SessionState",
                        "description": "Builds a SessionState."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "SessionState.Builder",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setLoadRequestData(MediaLoadRequestData loadRequestData)",
                        "return_type": "SessionState.Builder",
                        "description": "Sets the load request data."
                    }
                ]
            },
            {
                "name": "TextTrackStyle",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/TextTrackStyle",
                "description": "A class that specifies how a text track's text will be displayed on-screen.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "fromSystemSettings(Context context)",
                        "return_type": "staticTextTrackStyle",
                        "description": "Constructs a new TextTrackStyle based on the system's current closed caption style settings."
                    },
                    {
                        "name": "getBackgroundColor()",
                        "return_type": "int",
                        "description": "Gets the text's background color."
                    },
                    {
                        "name": "getCustomData()",
                        "return_type": "JSONObject",
                        "description": "Gets the custom data object."
                    },
                    {
                        "name": "getEdgeColor()",
                        "return_type": "int",
                        "description": "Gets the window's edge color."
                    },
                    {
                        "name": "getEdgeType()",
                        "return_type": "int",
                        "description": "Gets the caption window's edge type."
                    },
                    {
                        "name": "getFontFamily()",
                        "return_type": "String",
                        "description": "Gets the text's font family."
                    },
                    {
                        "name": "getFontGenericFamily()",
                        "return_type": "int",
                        "description": "Gets the text's generic font family."
                    },
                    {
                        "name": "getFontScale()",
                        "return_type": "float",
                        "description": "Gets the font scale factor."
                    },
                    {
                        "name": "getFontStyle()",
                        "return_type": "int",
                        "description": "Gets the text font style."
                    },
                    {
                        "name": "getForegroundColor()",
                        "return_type": "int",
                        "description": "Gets the text's foreground color."
                    },
                    {
                        "name": "getWindowColor()",
                        "return_type": "int",
                        "description": "Gets the window's color."
                    },
                    {
                        "name": "getWindowCornerRadius()",
                        "return_type": "int",
                        "description": "Gets the window corner radius."
                    },
                    {
                        "name": "getWindowType()",
                        "return_type": "int",
                        "description": "Gets the caption window type."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "setBackgroundColor(int backgroundColor)",
                        "return_type": "void",
                        "description": "Sets the text's background color."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "void",
                        "description": "Sets the custom data object."
                    },
                    {
                        "name": "setEdgeColor(int edgeColor)",
                        "return_type": "void",
                        "description": "Sets the window's edge color."
                    },
                    {
                        "name": "setEdgeType(int edgeType)",
                        "return_type": "void",
                        "description": "Sets the caption window's edge type."
                    },
                    {
                        "name": "setFontFamily(String fontFamily)",
                        "return_type": "void",
                        "description": "Sets the text's font family."
                    },
                    {
                        "name": "setFontGenericFamily(int fontGenericFamily)",
                        "return_type": "void",
                        "description": "Sets the text's generic font family."
                    },
                    {
                        "name": "setFontScale(float fontScale)",
                        "return_type": "void",
                        "description": "Sets the font scale factor."
                    },
                    {
                        "name": "setFontStyle(int fontStyle)",
                        "return_type": "void",
                        "description": "Sets the text font style."
                    },
                    {
                        "name": "setForegroundColor(int foregroundColor)",
                        "return_type": "void",
                        "description": "Sets the text's foreground color."
                    },
                    {
                        "name": "setWindowColor(int windowColor)",
                        "return_type": "void",
                        "description": "Sets the window's color."
                    },
                    {
                        "name": "setWindowCornerRadius(int windowCornerRadius)",
                        "return_type": "void",
                        "description": "If the window type is WINDOW_TYPE_ROUNDED, sets the radius for the window's corners."
                    },
                    {
                        "name": "setWindowType(int windowType)",
                        "return_type": "void",
                        "description": "Sets the window type."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "VastAdsRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/VastAdsRequest",
                "description": "A class that represents configuration of a VAST ad request.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "fromJson(JSONObject json)",
                        "return_type": "staticVastAdsRequest",
                        "description": "Parses a JSON Object sent by the receiver."
                    },
                    {
                        "name": "getAdTagUrl()",
                        "return_type": "String",
                        "description": "Returns the URL for the VAST file, used to retrieve and identify the ad."
                    },
                    {
                        "name": "getAdsResponse()",
                        "return_type": "String",
                        "description": "Returns the VAST XML document that can be used as the ads response instead of making a request via an ad tag url."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "VastAdsRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/VastAdsRequest.Builder",
                "description": "A builder for VastAdsRequest",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VastAdsRequest",
                        "description": ""
                    },
                    {
                        "name": "setAdTagUrl(String adTagUrl)",
                        "return_type": "VastAdsRequest.Builder",
                        "description": "Sets the URL for the VAST file, used to retrieve and identify the ad."
                    },
                    {
                        "name": "setAdsResponse(String adsResponse)",
                        "return_type": "VastAdsRequest.Builder",
                        "description": "Sets the VAST XML document that can be used as the ads response instead of making a request via an ad tag url."
                    }
                ]
            },
            {
                "name": "VideoInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/VideoInfo",
                "description": "A class that holds video properties of the current media session.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getHdrType()",
                        "return_type": "int",
                        "description": "Returns the HDR type of the current media session."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "int",
                        "description": "Returns the width of the height in pixels."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "int",
                        "description": "Returns the width of the video in pixels."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "VideoInfo.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/VideoInfo.Builder",
                "description": "Builder for VideoInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VideoInfo",
                        "description": "Builds a VideoInfo."
                    },
                    {
                        "name": "setHdrType(int hdrType)",
                        "return_type": "VideoInfo.Builder",
                        "description": "Sets the HDR type of the current media session."
                    },
                    {
                        "name": "setHeight(int height)",
                        "return_type": "VideoInfo.Builder",
                        "description": "Sets the height of the video in pixels."
                    },
                    {
                        "name": "setWidth(int width)",
                        "return_type": "VideoInfo.Builder",
                        "description": "Sets the width of the video in pixels."
                    }
                ]
            },
            {
                "name": "Cast.ApplicationConnectionResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/Cast.ApplicationConnectionResult",
                "description": "The result of a call to one of the Cast.CastApi.launchApplication(GoogleApiClient, String) or Cast.CastApi.joinApplication(GoogleApiClient) methods.",
                "methods": [
                    {
                        "name": "getApplicationMetadata()",
                        "return_type": "abstractApplicationMetadata",
                        "description": "Returns the current application's metadata."
                    },
                    {
                        "name": "getApplicationStatus()",
                        "return_type": "abstractString",
                        "description": "Returns the current application's human-readable status."
                    },
                    {
                        "name": "getSessionId()",
                        "return_type": "abstractString",
                        "description": "Returns the current application's unique session ID as an opaque string."
                    },
                    {
                        "name": "getWasLaunched()",
                        "return_type": "abstract boolean",
                        "description": "Returns whether the application was launched as the result of this call of Cast.CastApi.launchApplication(GoogleApiClient, String"
                    }
                ]
            },
            {
                "name": "Cast.CastApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastApi",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "getActiveInputState(GoogleApiClient client)",
                        "return_type": "abstract int",
                        "description": "Returns the device's active-input state."
                    },
                    {
                        "name": "getApplicationMetadata(GoogleApiClient client)",
                        "return_type": "abstractApplicationMetadata",
                        "description": "Returns the metadata for the currently running receiver application, if any."
                    },
                    {
                        "name": "getApplicationStatus(GoogleApiClient client)",
                        "return_type": "abstractString",
                        "description": "Returns the current receiver application status, if any."
                    },
                    {
                        "name": "getStandbyState(GoogleApiClient client)",
                        "return_type": "abstract int",
                        "description": "Returns the device's standby state."
                    },
                    {
                        "name": "getVolume(GoogleApiClient client)",
                        "return_type": "abstract double",
                        "description": "Returns the device's volume, in the range [0.0, 1.0]."
                    },
                    {
                        "name": "isMute(GoogleApiClient client)",
                        "return_type": "abstract boolean",
                        "description": "Returns the device's mute state."
                    },
                    {
                        "name": "joinApplication(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Joins (connects to"
                    },
                    {
                        "name": "joinApplication(GoogleApiClient client, String applicationId)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Joins (connects to"
                    },
                    {
                        "name": "joinApplication(GoogleApiClient client, String applicationId, String sessionId)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Joins (connects to"
                    },
                    {
                        "name": "launchApplication(GoogleApiClient client, String applicationId, boolean relaunchIfRunning)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "This method is deprecated. Use launchApplication(GoogleApiClient, String, LaunchOptions"
                    },
                    {
                        "name": "launchApplication(GoogleApiClient client, String applicationId)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Launches an application on the receiver."
                    },
                    {
                        "name": "launchApplication(GoogleApiClient client, String applicationId, LaunchOptions launchOptions)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Launches an application on the receiver."
                    },
                    {
                        "name": "leaveApplication(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Leaves (disconnects from"
                    },
                    {
                        "name": "removeMessageReceivedCallbacks(GoogleApiClient client, String namespace)",
                        "return_type": "abstract void",
                        "description": "Removes a Cast.MessageReceivedCallback from this controller for a given namespace."
                    },
                    {
                        "name": "requestStatus(GoogleApiClient client)",
                        "return_type": "abstract void",
                        "description": "Requests the receiver's current status."
                    },
                    {
                        "name": "sendMessage(GoogleApiClient client, String namespace, String message)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sends a message to the currently connected application."
                    },
                    {
                        "name": "setMessageReceivedCallbacks(GoogleApiClient client, String namespace, MessageReceivedCallback callbacks)",
                        "return_type": "abstract void",
                        "description": "Sets a new Cast.MessageReceivedCallback listener on this controller for a given namespace."
                    },
                    {
                        "name": "setMute(GoogleApiClient client, boolean mute)",
                        "return_type": "abstract void",
                        "description": "Mutes or unmutes the device's audio."
                    },
                    {
                        "name": "setVolume(GoogleApiClient client, double volume)",
                        "return_type": "abstract void",
                        "description": "Sets the device volume."
                    },
                    {
                        "name": "stopApplication(GoogleApiClient client, String sessionId)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Stops the currently running receiver application, optionally doing so only if its session ID matches the supplied one."
                    },
                    {
                        "name": "stopApplication(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Stops any running receiver application(s"
                    }
                ]
            },
            {
                "name": "MessageReceivedCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/Cast.MessageReceivedCallback",
                "description": "The interface to process received messages from a CastDevice.",
                "methods": [
                    {
                        "name": "onMessageReceived(CastDevice castDevice, String namespace, String message)",
                        "return_type": "abstract void",
                        "description": "Called when a message is received from a given CastDevice."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplaySessionCallbacks",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplaySessionCallbacks",
                "description": "This interface is deprecated. Pass a PendingIntent in CastRemoteDisplayClient.startRemoteDisplay(CastDevice, String, int, android.app.PendingIntent) to get notified when the remote display session is ended.",
                "methods": [
                    {
                        "name": "onRemoteDisplayEnded(Status status)",
                        "return_type": "abstract void",
                        "description": "Called when the remote display session ends."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplaySessionResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplaySessionResult",
                "description": "This interface is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": [
                    {
                        "name": "getPresentationDisplay()",
                        "return_type": "abstractDisplay",
                        "description": "Returns the virtual display of the current remote display session."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayApi",
                "description": "This interface is deprecated. The RemoteDisplay feature is deprecated and will be removed in a future release.",
                "methods": [
                    {
                        "name": "startRemoteDisplay(GoogleApiClient apiClient, String applicationId)",
                        "return_type": "abstractPendingResult<CastRemoteDisplay.CastRemoteDisplaySessionResult>",
                        "description": "The low level API for starting a Cast Remote Display session."
                    },
                    {
                        "name": "stopRemoteDisplay(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<CastRemoteDisplay.CastRemoteDisplaySessionResult>",
                        "description": "The low level API for stopping a Cast Remote Display session."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.Callbacks",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.Callbacks",
                "description": "Callbacks for the Cast Remote Display session initiated using CastRemoteDisplayLocalService.",
                "methods": [
                    {
                        "name": "onRemoteDisplayMuteStateChanged(boolean isMuted)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session's audio mute state is changed."
                    },
                    {
                        "name": "onRemoteDisplaySessionEnded(CastRemoteDisplayLocalService service)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session has been ended."
                    },
                    {
                        "name": "onRemoteDisplaySessionError(Status status)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session could not be successfully created."
                    },
                    {
                        "name": "onRemoteDisplaySessionStarted(CastRemoteDisplayLocalService service)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session has been successfully created."
                    },
                    {
                        "name": "onServiceCreated(CastRemoteDisplayLocalService service)",
                        "return_type": "abstract void",
                        "description": "Called when the local service has been created."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.MediaChannelResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.MediaChannelResult",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "abstractJSONObject",
                        "description": "Custom data received from the receiver application, when a media command fails."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnMetadataUpdatedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnMetadataUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated media metadata is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnPreloadStatusUpdatedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnPreloadStatusUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue preload status information is received, e.g."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnQueueStatusUpdatedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnQueueStatusUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue status information is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnStatusUpdatedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnStatusUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player status information is received."
                    }
                ]
            },
            {
                "name": "RequestData",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/RequestData",
                "description": "Data structure for media command requests.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "abstractJSONObject",
                        "description": "Returns the custom data."
                    }
                ]
            },
            {
                "name": "AdBreakClipInfo.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakClipInfo.Builder",
                "description": "A builder for AdBreakClipInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdBreakClipInfo",
                        "description": ""
                    },
                    {
                        "name": "setClickThroughUrl(String clickThroughUrl)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's click through URL."
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's content ID."
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's content URL."
                    },
                    {
                        "name": "setCustomDataJsonString(String customDataJsonString)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's custom data as a string."
                    },
                    {
                        "name": "setDurationInMs(long durationInMs)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's duration in milliseconds."
                    },
                    {
                        "name": "setHlsSegmentFormat(String hlsSegmentFormat)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets HlsSegmentFormat of the ad break clip, or empty String if not set."
                    },
                    {
                        "name": "setImageUrl(String imageUrl)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's image URL."
                    },
                    {
                        "name": "setMimeType(String mimeType)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's mime type."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets this clip's title."
                    },
                    {
                        "name": "setVastAdsRequest(VastAdsRequest vastAdsRequest)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets the VastAdsRequest of a VAST ad break clip, representing the VAST ad request configuration."
                    },
                    {
                        "name": "setWhenSkippableInMs(long whenSkippableInMs)",
                        "return_type": "AdBreakClipInfo.Builder",
                        "description": "Sets the time in milliseconds when this break clip becomes skippable."
                    }
                ]
            },
            {
                "name": "AdBreakInfo.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakInfo.Builder",
                "description": "A builder for AdBreakInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdBreakInfo",
                        "description": "Builds an AdBreakInfo instance."
                    },
                    {
                        "name": "setBreakClipIds(String[] breakClipIds)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Set an unmodifiable list of ad break clip IDs in this break."
                    },
                    {
                        "name": "setDurationInMs(long durationInMs)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Sets this break content’s duration in milliseconds."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Sets the ad break's ID."
                    },
                    {
                        "name": "setIsEmbedded(boolean isEmbedded)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Set to true if this break doesn't have a URL and is part of the content."
                    },
                    {
                        "name": "setIsWatched(boolean isWatched)",
                        "return_type": "AdBreakInfo.Builder",
                        "description": "Set to true if this break has been watched."
                    }
                ]
            },
            {
                "name": "AdBreakStatus.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/AdBreakStatus.Builder",
                "description": "Builder class for AdBreakStatus.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdBreakStatus",
                        "description": "Builds an AdBreakStatus."
                    },
                    {
                        "name": "setBreakClipId(String breakClipId)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the ID of the current ad break clip."
                    },
                    {
                        "name": "setBreakId(String breakId)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the ID of the current ad break."
                    },
                    {
                        "name": "setCurrentBreakClipTimeInMs(long currentBreakClipTimeInMs)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the current position of the ad break clip, in milliseconds, from the start of the ad break clip."
                    },
                    {
                        "name": "setCurrentBreakTimeInMs(long currentBreakTimeInMs)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the current position of the ad break, in milliseconds, from the start of the ad break."
                    },
                    {
                        "name": "setWhenSkippableInMs(long whenSkippableInMs)",
                        "return_type": "AdBreakStatus.Builder",
                        "description": "Sets the number of milliseconds after the ad break clip starts when the user can skip the ad break clip."
                    }
                ]
            },
            {
                "name": "Cast.ApplicationConnectionResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/Cast.ApplicationConnectionResult",
                "description": "The result of a call to one of the Cast.CastApi.launchApplication(GoogleApiClient, String) or Cast.CastApi.joinApplication(GoogleApiClient) methods.",
                "methods": [
                    {
                        "name": "getApplicationMetadata()",
                        "return_type": "abstractApplicationMetadata",
                        "description": "Returns the current application's metadata."
                    },
                    {
                        "name": "getApplicationStatus()",
                        "return_type": "abstractString",
                        "description": "Returns the current application's human-readable status."
                    },
                    {
                        "name": "getSessionId()",
                        "return_type": "abstractString",
                        "description": "Returns the current application's unique session ID as an opaque string."
                    },
                    {
                        "name": "getWasLaunched()",
                        "return_type": "abstract boolean",
                        "description": "Returns whether the application was launched as the result of this call of Cast.CastApi.launchApplication(GoogleApiClient, String"
                    }
                ]
            },
            {
                "name": "Cast.CastApi",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastApi",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "getActiveInputState(GoogleApiClient client)",
                        "return_type": "abstract int",
                        "description": "Returns the device's active-input state."
                    },
                    {
                        "name": "getApplicationMetadata(GoogleApiClient client)",
                        "return_type": "abstractApplicationMetadata",
                        "description": "Returns the metadata for the currently running receiver application, if any."
                    },
                    {
                        "name": "getApplicationStatus(GoogleApiClient client)",
                        "return_type": "abstractString",
                        "description": "Returns the current receiver application status, if any."
                    },
                    {
                        "name": "getStandbyState(GoogleApiClient client)",
                        "return_type": "abstract int",
                        "description": "Returns the device's standby state."
                    },
                    {
                        "name": "getVolume(GoogleApiClient client)",
                        "return_type": "abstract double",
                        "description": "Returns the device's volume, in the range [0.0, 1.0]."
                    },
                    {
                        "name": "isMute(GoogleApiClient client)",
                        "return_type": "abstract boolean",
                        "description": "Returns the device's mute state."
                    },
                    {
                        "name": "joinApplication(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Joins (connects to"
                    },
                    {
                        "name": "joinApplication(GoogleApiClient client, String applicationId)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Joins (connects to"
                    },
                    {
                        "name": "joinApplication(GoogleApiClient client, String applicationId, String sessionId)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Joins (connects to"
                    },
                    {
                        "name": "launchApplication(GoogleApiClient client, String applicationId, boolean relaunchIfRunning)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "This method is deprecated. Use launchApplication(GoogleApiClient, String, LaunchOptions"
                    },
                    {
                        "name": "launchApplication(GoogleApiClient client, String applicationId)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Launches an application on the receiver."
                    },
                    {
                        "name": "launchApplication(GoogleApiClient client, String applicationId, LaunchOptions launchOptions)",
                        "return_type": "abstractPendingResult<Cast.ApplicationConnectionResult>",
                        "description": "Launches an application on the receiver."
                    },
                    {
                        "name": "leaveApplication(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Leaves (disconnects from"
                    },
                    {
                        "name": "removeMessageReceivedCallbacks(GoogleApiClient client, String namespace)",
                        "return_type": "abstract void",
                        "description": "Removes a Cast.MessageReceivedCallback from this controller for a given namespace."
                    },
                    {
                        "name": "requestStatus(GoogleApiClient client)",
                        "return_type": "abstract void",
                        "description": "Requests the receiver's current status."
                    },
                    {
                        "name": "sendMessage(GoogleApiClient client, String namespace, String message)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sends a message to the currently connected application."
                    },
                    {
                        "name": "setMessageReceivedCallbacks(GoogleApiClient client, String namespace, MessageReceivedCallback callbacks)",
                        "return_type": "abstract void",
                        "description": "Sets a new Cast.MessageReceivedCallback listener on this controller for a given namespace."
                    },
                    {
                        "name": "setMute(GoogleApiClient client, boolean mute)",
                        "return_type": "abstract void",
                        "description": "Mutes or unmutes the device's audio."
                    },
                    {
                        "name": "setVolume(GoogleApiClient client, double volume)",
                        "return_type": "abstract void",
                        "description": "Sets the device volume."
                    },
                    {
                        "name": "stopApplication(GoogleApiClient client, String sessionId)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Stops the currently running receiver application, optionally doing so only if its session ID matches the supplied one."
                    },
                    {
                        "name": "stopApplication(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Stops any running receiver application(s"
                    }
                ]
            },
            {
                "name": "Cast.CastOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastOptions",
                "description": "API configuration parameters for Cast.",
                "methods": [
                    {
                        "name": "builder(CastDevice castDevice, Cast.Listener castListener)",
                        "return_type": "staticCast.CastOptions.Builder",
                        "description": "This method is deprecated. Use the Cast.CastOptions.Builder constructor instead."
                    },
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Cast.Listener",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/Cast.Listener",
                "description": "The list of Cast callbacks.",
                "methods": [
                    {
                        "name": "onActiveInputStateChanged(int activeInputState)",
                        "return_type": "void",
                        "description": "Called when the active-input state of the device has changed."
                    },
                    {
                        "name": "onApplicationDisconnected(int statusCode)",
                        "return_type": "void",
                        "description": "Called when the connection to the receiver application has been lost, such as when another client has launched a new application."
                    },
                    {
                        "name": "onApplicationMetadataChanged(ApplicationMetadata applicationMetadata)",
                        "return_type": "void",
                        "description": "Called when the application metadata of the currently running receiver application has changed."
                    },
                    {
                        "name": "onApplicationStatusChanged()",
                        "return_type": "void",
                        "description": "Called when the status of the connected application has changed."
                    },
                    {
                        "name": "onStandbyStateChanged(int standbyState)",
                        "return_type": "void",
                        "description": "Called when the standby state of the device has changed."
                    },
                    {
                        "name": "onVolumeChanged()",
                        "return_type": "void",
                        "description": "Called when the device's volume or mute state has changed."
                    }
                ]
            },
            {
                "name": "MessageReceivedCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/MessageReceivedCallback",
                "description": "The interface to process received messages from a CastDevice.",
                "methods": []
            },
            {
                "name": "Cast.CastOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastOptions.Builder",
                "description": "A builder to create an instance of Cast.CastOptions to set API configuration parameters for Cast.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Cast.CastOptions",
                        "description": "Builds a CastOptions with the arguments supplied to this builder."
                    },
                    {
                        "name": "setVerboseLoggingEnabled(boolean enabled)",
                        "return_type": "Cast.CastOptions.Builder",
                        "description": "Enables or disables verbose logging for this Cast session."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplayOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplayOptions",
                "description": "This class is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": []
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplaySessionCallbacks",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplaySessionCallbacks",
                "description": "This interface is deprecated. Pass a PendingIntent in CastRemoteDisplayClient.startRemoteDisplay(CastDevice, String, int, android.app.PendingIntent) to get notified when the remote display session is ended.",
                "methods": [
                    {
                        "name": "onRemoteDisplayEnded(Status status)",
                        "return_type": "abstract void",
                        "description": "Called when the remote display session ends."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplaySessionResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplaySessionResult",
                "description": "This interface is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": [
                    {
                        "name": "getPresentationDisplay()",
                        "return_type": "abstractDisplay",
                        "description": "Returns the virtual display of the current remote display session."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                "description": "This class is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastRemoteDisplay.CastRemoteDisplayOptions",
                        "description": "Builds a CastOptions with the arguments supplied to this builder."
                    },
                    {
                        "name": "setConfigPreset(int configPreset)",
                        "return_type": "CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                        "description": "Set the Remote Display configuration preset."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.Callbacks",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.Callbacks",
                "description": "Callbacks for the Cast Remote Display session initiated using CastRemoteDisplayLocalService.",
                "methods": [
                    {
                        "name": "onRemoteDisplayMuteStateChanged(boolean isMuted)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session's audio mute state is changed."
                    },
                    {
                        "name": "onRemoteDisplaySessionEnded(CastRemoteDisplayLocalService service)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session has been ended."
                    },
                    {
                        "name": "onRemoteDisplaySessionError(Status status)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session could not be successfully created."
                    },
                    {
                        "name": "onRemoteDisplaySessionStarted(CastRemoteDisplayLocalService service)",
                        "return_type": "abstract void",
                        "description": "Called when the Cast Remote Display session has been successfully created."
                    },
                    {
                        "name": "onServiceCreated(CastRemoteDisplayLocalService service)",
                        "return_type": "abstract void",
                        "description": "Called when the local service has been created."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.NotificationSettings",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.NotificationSettings",
                "description": "Notification settings.",
                "methods": []
            },
            {
                "name": "CastRemoteDisplayLocalService.Options",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.Options",
                "description": "Options for a remote display session.",
                "methods": [
                    {
                        "name": "getConfigPreset()",
                        "return_type": "int",
                        "description": "Get the Remote Display configuration preset."
                    },
                    {
                        "name": "setConfigPreset(int configPreset)",
                        "return_type": "void",
                        "description": "Set the Remote Display configuration preset."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.NotificationSettings.Builder",
                "description": "Builder class for the CastRemoteDisplayLocalService.NotificationSettings object.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings",
                        "description": "Builds and returns the CastRemoteDisplayLocalService.NotificationSettings object."
                    },
                    {
                        "name": "setNotification(Notification notification)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "Sets a custom Notification."
                    },
                    {
                        "name": "setNotificationPendingIntent(PendingIntent notificationPendingIntent)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "Sets a PendingIntent that will be executed when the default notification is clicked."
                    },
                    {
                        "name": "setNotificationText(String notificationText)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "The default Notification text."
                    },
                    {
                        "name": "setNotificationTitle(String notificationTitle)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "The default Notification title."
                    }
                ]
            },
            {
                "name": "CredentialsData.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CredentialsData.Builder",
                "description": "Builder for CredentialsData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CredentialsData",
                        "description": "Builds a CredentialsData."
                    },
                    {
                        "name": "setCredentials(String credentials)",
                        "return_type": "CredentialsData.Builder",
                        "description": "Sets the credentials."
                    },
                    {
                        "name": "setCredentialsType(String credentialsType)",
                        "return_type": "CredentialsData.Builder",
                        "description": "Sets the credentials type."
                    }
                ]
            },
            {
                "name": "LaunchOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/LaunchOptions.Builder",
                "description": "A builder for LaunchOptions objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LaunchOptions",
                        "description": "Builds and returns the LaunchOptions object."
                    },
                    {
                        "name": "setAndroidReceiverCompatible(boolean androidReceiverCompatible)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets true if the sender app supports casting to an Android TV app."
                    },
                    {
                        "name": "setCredentialsData(CredentialsData credentialsData)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets the credentials data."
                    },
                    {
                        "name": "setLocale(Locale locale)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets the desired application locale."
                    },
                    {
                        "name": "setRelaunchIfRunning(boolean relaunchIfRunning)",
                        "return_type": "LaunchOptions.Builder",
                        "description": "Sets the \"relaunch if running\" flag."
                    }
                ]
            },
            {
                "name": "MediaError.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaError.Builder",
                "description": "Builder for MediaError.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaError",
                        "description": "Build a MediaError."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setDetailedErrorCode(Integer detailedErrorCode)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the detailed error code."
                    },
                    {
                        "name": "setReason(String reason)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the error reason."
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "MediaError.Builder",
                        "description": "Sets the type of the media error."
                    }
                ]
            },
            {
                "name": "MediaInfo.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaInfo.Builder",
                "description": "A builder for MediaInfo objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaInfo",
                        "description": "Builds and returns the MediaInfo object."
                    },
                    {
                        "name": "setAdBreakClips(List<AdBreakClipInfo> adBreakClips)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the list of AdBreakClipInfos, each containing the content of a specific ad."
                    },
                    {
                        "name": "setAdBreaks(List<AdBreakInfo> adBreaks)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the list of AdBreakInfo, which describes where each ad break is located and what AdBreakClipInfos each break includes."
                    },
                    {
                        "name": "setAtvEntity(String atvEntity)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the alternate entity to be used for loading the item on Android TV."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the content (MIME"
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the URL of the content to be played."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the custom application-specific data."
                    },
                    {
                        "name": "setEntity(String entity)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the entity, an application-specific deep link for loading the media."
                    },
                    {
                        "name": "setHlsSegmentFormat(String hlsSegmentFormat)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the HlsSegmentFormat."
                    },
                    {
                        "name": "setHlsVideoSegmentFormat(String hlsVideoSegmentFormat)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the HlsVideoSegmentFormat."
                    },
                    {
                        "name": "setMediaTracks(List<MediaTrack> mediaTracks)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the media tracks."
                    },
                    {
                        "name": "setMetadata(MediaMetadata metadata)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the media item metadata."
                    },
                    {
                        "name": "setStreamDuration(long duration)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the stream duration, in milliseconds."
                    },
                    {
                        "name": "setStreamType(int streamType)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the stream type; one of the STREAM_TYPE_ constants."
                    },
                    {
                        "name": "setTextTrackStyle(TextTrackStyle textTrackStyle)",
                        "return_type": "MediaInfo.Builder",
                        "description": "Sets the text track style."
                    },
                    {
                        "name": "setVmapAdsRequest(VastAdsRequest vmapAdsRequest)",
                        "return_type": "MediaInfo.Builder",
                        "description": "VMAP is a collection of VAST ads."
                    }
                ]
            },
            {
                "name": "MediaLiveSeekableRange.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaLiveSeekableRange.Builder",
                "description": "Builder for MediaLiveSeekableRange.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaLiveSeekableRange",
                        "description": "Builds a MediaLiveSeekableRange."
                    },
                    {
                        "name": "setEndTime(long endTime)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets the end time in milliseconds."
                    },
                    {
                        "name": "setIsLiveDone(boolean isLiveDone)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets whether the live stream is done."
                    },
                    {
                        "name": "setIsMovingWindow(boolean isMovingWindow)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets whether the seekable range is a moving window."
                    },
                    {
                        "name": "setStartTime(long startTime)",
                        "return_type": "MediaLiveSeekableRange.Builder",
                        "description": "Sets the start time in milliseconds."
                    }
                ]
            },
            {
                "name": "MediaLoadOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaLoadOptions.Builder",
                "description": "Builder class for MediaLoadOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaLoadOptions",
                        "description": "Builds a MediaLoadOptions object."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the array of the active tracks."
                    },
                    {
                        "name": "setAutoplay(boolean autoplay)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the value of whether playback should start immediately."
                    },
                    {
                        "name": "setCredentials(String credentials)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the user credentials to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCredentialsType(String credentialsType)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the user credentials type to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the custom application-specific data to pass along with the load request."
                    },
                    {
                        "name": "setPlayPosition(long playPosition)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the initial playback position, in milliseconds from the beginning of the stream."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate)",
                        "return_type": "MediaLoadOptions.Builder",
                        "description": "Sets the playback rate, as the multiplier of the normal playback rate."
                    }
                ]
            },
            {
                "name": "MediaLoadRequestData.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaLoadRequestData.Builder",
                "description": "Builder class for MediaLoadRequestData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaLoadRequestData",
                        "description": "Builds a MediaLoadRequestData object."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the array of the active tracks."
                    },
                    {
                        "name": "setAtvCredentials(String atvCredentials)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the alternate Android TV credentials in the load request."
                    },
                    {
                        "name": "setAtvCredentialsType(String atvCredentialsType)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the alternate Android TV credentials type in the load request."
                    },
                    {
                        "name": "setAutoplay(Boolean autoplay)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the value of whether playback should start immediately."
                    },
                    {
                        "name": "setCredentials(String credentials)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the user credentials to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCredentialsType(String credentialsType)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the user credentials type to pass along with the load request to the receiver."
                    },
                    {
                        "name": "setCurrentTime(long currentTime)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the initial playback position, in milliseconds from the beginning of the stream."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the custom application-specific data to pass along with the load request."
                    },
                    {
                        "name": "setMediaInfo(MediaInfo mediaInfo)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the MediaInfo of the load request."
                    },
                    {
                        "name": "setPlaybackRate(double playbackRate)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the playback rate, as the multiplier of the normal playback rate."
                    },
                    {
                        "name": "setQueueData(MediaQueueData queueData)",
                        "return_type": "MediaLoadRequestData.Builder",
                        "description": "Sets the MediaQueueData of the load request."
                    }
                ]
            },
            {
                "name": "MediaQueueContainerMetadata.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueContainerMetadata.Builder",
                "description": "Builder class for constructing a MediaQueueContainerMetadata.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaQueueContainerMetadata",
                        "description": "Builds a MediaQueueContainerMetadata from the builder."
                    },
                    {
                        "name": "setContainerDuration(double containerDuration)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the total playback time for the container."
                    },
                    {
                        "name": "setContainerImages(List<WebImage> containerImages)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the images associated with the queue."
                    },
                    {
                        "name": "setContainerType(int containerType)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the container type."
                    },
                    {
                        "name": "setSections(List<MediaMetadata> sections)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the sections of the media stream."
                    },
                    {
                        "name": "setTitle(String title)",
                        "return_type": "MediaQueueContainerMetadata.Builder",
                        "description": "Sets the container title."
                    }
                ]
            },
            {
                "name": "MediaQueueData.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueData.Builder",
                "description": "Builder class for constructing a MediaQueueData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaQueueData",
                        "description": "Builds a MediaQueueData from the builder."
                    },
                    {
                        "name": "setContainerMetadata(MediaQueueContainerMetadata containerMetadata)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the additional description for the queue, including an optional list of media sections metadata, images, etc."
                    },
                    {
                        "name": "setEntity(String entity)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the queue deep link (for example, the deep link of an album, playlist or radio station"
                    },
                    {
                        "name": "setItems(List<MediaQueueItem> items)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the list of queue items."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the display name for the queue."
                    },
                    {
                        "name": "setQueueId(String queueId)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the queue ID."
                    },
                    {
                        "name": "setQueueType(int queueType)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the type of the queue."
                    },
                    {
                        "name": "setRepeatMode(int repeatMode)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the repeat mode."
                    },
                    {
                        "name": "setStartIndex(int startIndex)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the index of the item that should play first."
                    },
                    {
                        "name": "setStartTime(long startTime)",
                        "return_type": "MediaQueueData.Builder",
                        "description": "Sets the playback start time, in milliseconds."
                    }
                ]
            },
            {
                "name": "MediaQueueItem.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaQueueItem.Builder",
                "description": "A builder for MediaQueueItem objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaQueueItem",
                        "description": "Builds and returns the MediaQueueItem object."
                    },
                    {
                        "name": "clearItemId()",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setActiveTrackIds(long[] activeTrackIds)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setAutoplay(boolean autoplay)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setItemId(int itemId)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Sets the item ID."
                    },
                    {
                        "name": "setPlaybackDuration(double playbackDuration)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setPreloadTime(double preloadTime)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    },
                    {
                        "name": "setStartTime(double startTime)",
                        "return_type": "MediaQueueItem.Builder",
                        "description": "Optional."
                    }
                ]
            },
            {
                "name": "MediaSeekOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaSeekOptions.Builder",
                "description": "Builder for MediaSeekOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaSeekOptions",
                        "description": "Builds a MediaSeekOptions object."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets the custom application-specific data to pass along with the seek request."
                    },
                    {
                        "name": "setIsSeekToInfinite(boolean isSeekToInfinite)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets whether to seek to the end of stream or live position."
                    },
                    {
                        "name": "setPosition(long position)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets the position to seek to, in milliseconds."
                    },
                    {
                        "name": "setResumeState(int resumeState)",
                        "return_type": "MediaSeekOptions.Builder",
                        "description": "Sets the action to take after the seek operation has finished."
                    }
                ]
            },
            {
                "name": "MediaTrack.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/MediaTrack.Builder",
                "description": "A builder for MediaTrack objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "MediaTrack",
                        "description": "Builds and returns the MediaTrack object."
                    },
                    {
                        "name": "setContentId(String contentId)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track content ID."
                    },
                    {
                        "name": "setContentType(String contentType)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track content type."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track's custom data object."
                    },
                    {
                        "name": "setLanguage(String language)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the RFC-5464 formatted track language."
                    },
                    {
                        "name": "setLanguage(Locale locale)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track language from a Locale in RFC-5464 format."
                    },
                    {
                        "name": "setName(String trackName)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track name."
                    },
                    {
                        "name": "setRoles(List<String> roles)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the roles for this track."
                    },
                    {
                        "name": "setSubtype(int subtype)",
                        "return_type": "MediaTrack.Builder",
                        "description": "Sets the track subtype with one of the SUBTYPE_ constants."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.MediaChannelResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.MediaChannelResult",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "abstractJSONObject",
                        "description": "Custom data received from the receiver application, when a media command fails."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnMetadataUpdatedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnMetadataUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onMetadataUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated media metadata is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnPreloadStatusUpdatedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnPreloadStatusUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onPreloadStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue preload status information is received, e.g."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnQueueStatusUpdatedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnQueueStatusUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onQueueStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player queue status information is received."
                    }
                ]
            },
            {
                "name": "RemoteMediaPlayer.OnStatusUpdatedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/RemoteMediaPlayer.OnStatusUpdatedListener",
                "description": "This interface is deprecated. See Migrate Android Sender App from Cast SDK v2 to v3.",
                "methods": [
                    {
                        "name": "onStatusUpdated()",
                        "return_type": "abstract void",
                        "description": "Called when updated player status information is received."
                    }
                ]
            },
            {
                "name": "SessionState.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/SessionState.Builder",
                "description": "Builder for SessionState.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SessionState",
                        "description": "Builds a SessionState."
                    },
                    {
                        "name": "setCustomData(JSONObject customData)",
                        "return_type": "SessionState.Builder",
                        "description": "Sets the custom data."
                    },
                    {
                        "name": "setLoadRequestData(MediaLoadRequestData loadRequestData)",
                        "return_type": "SessionState.Builder",
                        "description": "Sets the load request data."
                    }
                ]
            },
            {
                "name": "VastAdsRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/VastAdsRequest.Builder",
                "description": "A builder for VastAdsRequest",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VastAdsRequest",
                        "description": ""
                    },
                    {
                        "name": "setAdTagUrl(String adTagUrl)",
                        "return_type": "VastAdsRequest.Builder",
                        "description": "Sets the URL for the VAST file, used to retrieve and identify the ad."
                    },
                    {
                        "name": "setAdsResponse(String adsResponse)",
                        "return_type": "VastAdsRequest.Builder",
                        "description": "Sets the VAST XML document that can be used as the ads response instead of making a request via an ad tag url."
                    }
                ]
            },
            {
                "name": "VideoInfo.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/VideoInfo.Builder",
                "description": "Builder for VideoInfo.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VideoInfo",
                        "description": "Builds a VideoInfo."
                    },
                    {
                        "name": "setHdrType(int hdrType)",
                        "return_type": "VideoInfo.Builder",
                        "description": "Sets the HDR type of the current media session."
                    },
                    {
                        "name": "setHeight(int height)",
                        "return_type": "VideoInfo.Builder",
                        "description": "Sets the height of the video in pixels."
                    },
                    {
                        "name": "setWidth(int width)",
                        "return_type": "VideoInfo.Builder",
                        "description": "Sets the width of the video in pixels."
                    }
                ]
            },
            {
                "name": "Cast.CastOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/Cast.CastOptions.Builder",
                "description": "A builder to create an instance of Cast.CastOptions to set API configuration parameters for Cast.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Cast.CastOptions",
                        "description": "Builds a CastOptions with the arguments supplied to this builder."
                    },
                    {
                        "name": "setVerboseLoggingEnabled(boolean enabled)",
                        "return_type": "Cast.CastOptions.Builder",
                        "description": "Enables or disables verbose logging for this Cast session."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                "description": "This class is deprecated. Use the CastRemoteDisplayClient via CastRemoteDisplay.getClient(Context) instead.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastRemoteDisplay.CastRemoteDisplayOptions",
                        "description": "Builds a CastOptions with the arguments supplied to this builder."
                    },
                    {
                        "name": "setConfigPreset(int configPreset)",
                        "return_type": "CastRemoteDisplay.CastRemoteDisplayOptions.Builder",
                        "description": "Set the Remote Display configuration preset."
                    }
                ]
            },
            {
                "name": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/CastRemoteDisplayLocalService.NotificationSettings.Builder",
                "description": "Builder class for the CastRemoteDisplayLocalService.NotificationSettings object.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings",
                        "description": "Builds and returns the CastRemoteDisplayLocalService.NotificationSettings object."
                    },
                    {
                        "name": "setNotification(Notification notification)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "Sets a custom Notification."
                    },
                    {
                        "name": "setNotificationPendingIntent(PendingIntent notificationPendingIntent)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "Sets a PendingIntent that will be executed when the default notification is clicked."
                    },
                    {
                        "name": "setNotificationText(String notificationText)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "The default Notification text."
                    },
                    {
                        "name": "setNotificationTitle(String notificationTitle)",
                        "return_type": "CastRemoteDisplayLocalService.NotificationSettings.Builder",
                        "description": "The default Notification title."
                    }
                ]
            }
        ]
    },
    {
        "name": "rewarded",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/rewarded/package-summary",
        "classes": [
            {
                "name": "RewardedAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/RewardedAd",
                "description": "This class is used to request and display a rewarded ad.",
                "methods": [
                    {
                        "name": "getAdMetadata()",
                        "return_type": "abstractBundle",
                        "description": "Gets all available ad metadata for this RewardedAd."
                    },
                    {
                        "name": "getAdUnitId()",
                        "return_type": "abstractString",
                        "description": "Returns the ad unit ID."
                    },
                    {
                        "name": "getFullScreenContentCallback()",
                        "return_type": "abstractFullScreenContentCallback",
                        "description": "Gets the FullScreenContentCallback for this RewardedAd."
                    },
                    {
                        "name": "getOnAdMetadataChangedListener()",
                        "return_type": "abstractOnAdMetadataChangedListener",
                        "description": "Gets the OnAdMetadataChangedListener for this RewardedAd."
                    },
                    {
                        "name": "getOnPaidEventListener()",
                        "return_type": "abstractOnPaidEventListener",
                        "description": "Gets the OnPaidEventListener for this RewardedAd."
                    },
                    {
                        "name": "getResponseInfo()",
                        "return_type": "abstractResponseInfo",
                        "description": "Returns the ResponseInfo object for the loaded ad."
                    },
                    {
                        "name": "getRewardItem()",
                        "return_type": "abstractRewardItem",
                        "description": "Gets reward item for the loaded rewarded ad."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdRequest adRequest, RewardedAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads a RewardedAd."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdManagerAdRequest adManagerAdRequest, RewardedAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads a RewardedAd."
                    },
                    {
                        "name": "setFullScreenContentCallback(FullScreenContentCallback fullScreenContentCallback)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when ads show and dismiss full screen content."
                    },
                    {
                        "name": "setImmersiveMode(boolean immersiveModeEnabled)",
                        "return_type": "abstract void",
                        "description": "Sets a flag that controls if this rewarded ad object will be displayed in immersive mode."
                    },
                    {
                        "name": "setOnAdMetadataChangedListener(OnAdMetadataChangedListener listener)",
                        "return_type": "abstract void",
                        "description": "Sets the OnAdMetadataChangedListener for this RewardedAd."
                    },
                    {
                        "name": "setOnPaidEventListener(OnPaidEventListener listener)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when this ad is estimated to have earned money."
                    },
                    {
                        "name": "setServerSideVerificationOptions(ServerSideVerificationOptions options)",
                        "return_type": "abstract void",
                        "description": "Sets ServerSideVerificationOptions for this RewardedAd."
                    },
                    {
                        "name": "show(Activity activity, OnUserEarnedRewardListener onUserEarnedRewardListener)",
                        "return_type": "abstract void",
                        "description": "Shows the rewarded ad."
                    }
                ]
            },
            {
                "name": "RewardedAdLoadCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/RewardedAdLoadCallback",
                "description": "An object for receiving event notifications of loading a rewarded ad.",
                "methods": []
            },
            {
                "name": "ServerSideVerificationOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/ServerSideVerificationOptions",
                "description": "Options for RewardedAd server-side verification callbacks.",
                "methods": [
                    {
                        "name": "getCustomData()",
                        "return_type": "String",
                        "description": "Returns the custom data set by ServerSideVerificationOptions.Builder.setCustomData(String"
                    },
                    {
                        "name": "getUserId()",
                        "return_type": "String",
                        "description": "Returns the user id set by ServerSideVerificationOptions.Builder.setUserId(String"
                    }
                ]
            },
            {
                "name": "ServerSideVerificationOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/ServerSideVerificationOptions.Builder",
                "description": "Builder for ServerSideVerificationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ServerSideVerificationOptions",
                        "description": ""
                    },
                    {
                        "name": "setCustomData(String customData)",
                        "return_type": "ServerSideVerificationOptions.Builder",
                        "description": "Sets custom data."
                    },
                    {
                        "name": "setUserId(String userId)",
                        "return_type": "ServerSideVerificationOptions.Builder",
                        "description": "Sets the user id of the current user."
                    }
                ]
            },
            {
                "name": "OnAdMetadataChangedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/OnAdMetadataChangedListener",
                "description": "A listener interface for ad metadata changed event.",
                "methods": [
                    {
                        "name": "onAdMetadataChanged()",
                        "return_type": "abstract void",
                        "description": "Called when an ad's metadata is loaded for the first time or when the ad's metadata changes."
                    }
                ]
            },
            {
                "name": "RewardItem",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/RewardItem",
                "description": "This class describes a reward credited to a user for interacting with a RewardedAd.",
                "methods": [
                    {
                        "name": "getAmount()",
                        "return_type": "abstract int",
                        "description": "Returns the reward amount."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstractString",
                        "description": "Returns the type of the reward."
                    }
                ]
            },
            {
                "name": "ServerSideVerificationOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/rewarded/ServerSideVerificationOptions.Builder",
                "description": "Builder for ServerSideVerificationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ServerSideVerificationOptions",
                        "description": ""
                    },
                    {
                        "name": "setCustomData(String customData)",
                        "return_type": "ServerSideVerificationOptions.Builder",
                        "description": "Sets custom data."
                    },
                    {
                        "name": "setUserId(String userId)",
                        "return_type": "ServerSideVerificationOptions.Builder",
                        "description": "Sets the user id of the current user."
                    }
                ]
            }
        ]
    },
    {
        "name": "appset",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/appset/package-summary",
        "classes": [
            {
                "name": "AppSet",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appset/AppSet",
                "description": "Entry point of the app set APIs.",
                "methods": [
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticAppSetIdClient",
                        "description": "Creates a new instance of AppSetIdClient."
                    }
                ]
            },
            {
                "name": "AppSetIdInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/appset/AppSetIdInfo",
                "description": "Contains information about app set ID.",
                "methods": [
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Gets the app set ID."
                    },
                    {
                        "name": "getScope()",
                        "return_type": "int",
                        "description": "Returns the AppSetIdInfo.Scope of the app set ID."
                    }
                ]
            },
            {
                "name": "AppSetIdClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/appset/AppSetIdClient",
                "description": "A client for interacting with the AppSetIdInfo API.",
                "methods": [
                    {
                        "name": "getAppSetIdInfo()",
                        "return_type": "abstract Task<AppSetIdInfo>",
                        "description": "Gets the AppSetIdInfo asynchronously."
                    }
                ]
            }
        ]
    },
    {
        "name": "request",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fitness/request/package-summary",
        "classes": [
            {
                "name": "BleScanCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/BleScanCallback",
                "description": "This class is deprecated. Use BluetoothManager directly.",
                "methods": [
                    {
                        "name": "onDeviceFound(BleDevice device)",
                        "return_type": "abstract void",
                        "description": "Called once for each device found."
                    },
                    {
                        "name": "onScanStopped()",
                        "return_type": "abstract void",
                        "description": "Called when the scan is stopped (normally because the timeout expired"
                    }
                ]
            },
            {
                "name": "DataDeleteRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataDeleteRequest",
                "description": "A request to delete data and sessions added by the app from the Google Fit store in the time interval specified.",
                "methods": [
                    {
                        "name": "deleteAllData()",
                        "return_type": "boolean",
                        "description": "Returns true if all data types are marked for deletion."
                    },
                    {
                        "name": "deleteAllSessions()",
                        "return_type": "boolean",
                        "description": "Returns true if all sessions are marked for deletion."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSources()",
                        "return_type": "List<DataSource>",
                        "description": "Returns the list of data sources specified for data deletion."
                    },
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns the list of data types specified for data deletion."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time of the query, in the given unit since epoch."
                    },
                    {
                        "name": "getSessions()",
                        "return_type": "List<Session>",
                        "description": "Returns the list of sessions specified for deletion."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time of the query, in the given unit since epoch."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataDeleteRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataDeleteRequest.Builder",
                "description": "Builder used to create new DataDeleteRequests.",
                "methods": [
                    {
                        "name": "addDataSource(DataSource dataSource)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds a specific data source to delete data from the Google Fit store."
                    },
                    {
                        "name": "addDataType(DataType dataType)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds a specific data type to delete data from the Google Fit store."
                    },
                    {
                        "name": "addSession(Session session)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds a specific session to delete from the Google Fit store."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataDeleteRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "deleteAllData()",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds option to delete data for all data types."
                    },
                    {
                        "name": "deleteAllSessions()",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Sets the time interval for the data delete query."
                    }
                ]
            },
            {
                "name": "DataReadRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataReadRequest",
                "description": "Request for reading data from Google Fit.",
                "methods": [
                    {
                        "name": "equals(Object that)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActivityDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the data source used to get activity segments for creating buckets for data aggregation in this request."
                    },
                    {
                        "name": "getAggregatedDataSources()",
                        "return_type": "List<DataSource>",
                        "description": "Returns all of the data sources that will be read then aggregated as part of this request."
                    },
                    {
                        "name": "getAggregatedDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns all of the data types that will be read then aggregated as part of this request."
                    },
                    {
                        "name": "getBucketDuration(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the bucket duration for this request in the given time unit."
                    },
                    {
                        "name": "getBucketType()",
                        "return_type": "int",
                        "description": "Returns the bucket type for data aggregation for this request."
                    },
                    {
                        "name": "getDataSources()",
                        "return_type": "List<DataSource>",
                        "description": "Returns the data sources that should be read in this request."
                    },
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns the data types for which default data sources should be read in this request."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time for our query, in the specified time unit"
                    },
                    {
                        "name": "getLimit()",
                        "return_type": "int",
                        "description": "Returns the max number of data points to return in the result."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time for our query, in the specified time unit"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataReadRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataReadRequest.Builder",
                "description": "Builder used to create new DataReadRequests.",
                "methods": [
                    {
                        "name": "aggregate(DataSource dataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds a specific data source we want aggregate data from for this request."
                    },
                    {
                        "name": "aggregate(DataType inputDataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds the default data source for the given aggregate dataType to this request."
                    },
                    {
                        "name": "aggregate(DataSource dataSource, DataType outputDataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "This method is deprecated. Use aggregate(DataSource"
                    },
                    {
                        "name": "aggregate(DataType inputDataType, DataType outputDataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "This method is deprecated. Use aggregate(DataType"
                    },
                    {
                        "name": "bucketByActivitySegment(int minDuration, TimeUnit timeUnit, DataSource activityDataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_SEGMENT, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for the bucket."
                    },
                    {
                        "name": "bucketByActivitySegment(int minDuration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_SEGMENT, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for the bucket."
                    },
                    {
                        "name": "bucketByActivityType(int minDuration, TimeUnit timeUnit, DataSource activityDataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_TYPE, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for computing the buckets and sets the activity data source to be used to read activity segments from."
                    },
                    {
                        "name": "bucketByActivityType(int minDuration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_TYPE, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for computing the buckets."
                    },
                    {
                        "name": "bucketBySession(int minDuration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_SESSION and sets the minimum duration of each Session for the bucket."
                    },
                    {
                        "name": "bucketByTime(int duration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_TIME and sets the duration of each bucket."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataReadRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "enableServerQueries()",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Enable querying the Google Fit server to fetch query results, in case the local store doesn't have data for the full requested time range."
                    },
                    {
                        "name": "read(DataSource dataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds a specific data source we want to read data from to this request."
                    },
                    {
                        "name": "read(DataType dataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds the default data source to read for the given dataType to this request."
                    },
                    {
                        "name": "setLimit(int limit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Limits results to the latest limit data points."
                    },
                    {
                        "name": "setTimeRange(long start, long end, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Sets the time range for our query."
                    }
                ]
            },
            {
                "name": "DataSourcesRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataSourcesRequest",
                "description": "Request for finding data sources in Google Fit.",
                "methods": [
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns all of the data types requested."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataSourcesRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataSourcesRequest.Builder",
                "description": "Builder used to create new DataSourceRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataSourcesRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setDataSourceTypes(int... dataSourceTypes)",
                        "return_type": "DataSourcesRequest.Builder",
                        "description": "Sets the data source types that should be searched for in the data sources request."
                    },
                    {
                        "name": "setDataTypes(DataType... dataTypes)",
                        "return_type": "DataSourcesRequest.Builder",
                        "description": "Sets the desired data types to search for on the data sources request."
                    }
                ]
            },
            {
                "name": "DataTypeCreateRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataTypeCreateRequest",
                "description": "This class is deprecated. Support for custom data types will be removed in a future version of Google Fit. Use one of the pre-defined data types listed in DataType.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getFields()",
                        "return_type": "List<Field>",
                        "description": "Returns the specified fields for the created data type."
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the specified name for the crated data type."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataTypeCreateRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataTypeCreateRequest.Builder",
                "description": "Builder used to create new DataTypeInsertRequests.",
                "methods": [
                    {
                        "name": "addField(String name, int format)",
                        "return_type": "DataTypeCreateRequest.Builder",
                        "description": "Adds a new field with the specified name and format to the new data type."
                    },
                    {
                        "name": "addField(Field field)",
                        "return_type": "DataTypeCreateRequest.Builder",
                        "description": "Adds the specified field to the new data type."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataTypeCreateRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "DataTypeCreateRequest.Builder",
                        "description": "Set the name for the new data type."
                    }
                ]
            },
            {
                "name": "DataUpdateListenerRegistrationRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataUpdateListenerRegistrationRequest",
                "description": "Registration request to register a listener for data updates, including dataSource and dataType as well as PendingIntent associated with the registration.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the data source for this request."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the data type for this request."
                    },
                    {
                        "name": "getIntent()",
                        "return_type": "PendingIntent",
                        "description": "Returns the PendingIntent for this request"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataUpdateListenerRegistrationRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataUpdateListenerRegistrationRequest.Builder",
                "description": "Builder for creating DataUpdateListenerRegistrationRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataUpdateListenerRegistrationRequest",
                        "description": "Builds the DataUpdateListenerRegistrationRequest object from the builder."
                    },
                    {
                        "name": "setDataSource(DataSource dataSource)",
                        "return_type": "DataUpdateListenerRegistrationRequest.Builder",
                        "description": "Sets the DataSource for which we want to listen for data updates."
                    },
                    {
                        "name": "setDataType(DataType dataType)",
                        "return_type": "DataUpdateListenerRegistrationRequest.Builder",
                        "description": "Sets the DataType for which we want to listen for data updates."
                    },
                    {
                        "name": "setPendingIntent(PendingIntent pendingIntent)",
                        "return_type": "DataUpdateListenerRegistrationRequest.Builder",
                        "description": "Sets the PendingIntent which will receive data update notification for updates."
                    }
                ]
            },
            {
                "name": "DataUpdateRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataUpdateRequest",
                "description": "A request to update data added by the app from the Google Fit store in the time interval specified.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSet()",
                        "return_type": "DataSet",
                        "description": "Returns the data set that you're inserting."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time of the query, in the given unit since epoch."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time of the query, in the given unit since epoch."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataUpdateRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataUpdateRequest.Builder",
                "description": "Builder used to create new DataUpdateRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataUpdateRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setDataSet(DataSet dataSet)",
                        "return_type": "DataUpdateRequest.Builder",
                        "description": "Sets the dataSet for the data update query"
                    },
                    {
                        "name": "setTimeInterval(long startTimeMillis, long endTimeMillis, TimeUnit timeUnit)",
                        "return_type": "DataUpdateRequest.Builder",
                        "description": "Sets the time interval for the data update query."
                    }
                ]
            },
            {
                "name": "GoalsReadRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/GoalsReadRequest",
                "description": "Request for reading current Goals from Google Fit.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActivityNames()",
                        "return_type": "List<String>",
                        "description": "Returns the names of the activities specified in the request."
                    },
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns the data types specified in the request."
                    },
                    {
                        "name": "getObjectiveTypes()",
                        "return_type": "List<Integer>",
                        "description": "Returns the objective types specified in the request."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoalsReadRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/GoalsReadRequest.Builder",
                "description": "Builder used to create new GoalsReadRequest.",
                "methods": [
                    {
                        "name": "addActivity(String activityName)",
                        "return_type": "GoalsReadRequest.Builder",
                        "description": "Adds a specific activity to this request."
                    },
                    {
                        "name": "addDataType(DataType dataType)",
                        "return_type": "GoalsReadRequest.Builder",
                        "description": "Adds a specific data type to this request."
                    },
                    {
                        "name": "addObjectiveType(int objectiveType)",
                        "return_type": "GoalsReadRequest.Builder",
                        "description": "Adds a objective type to this request."
                    },
                    {
                        "name": "build()",
                        "return_type": "GoalsReadRequest",
                        "description": "Finishes building and returns the request."
                    }
                ]
            },
            {
                "name": "SensorRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/SensorRequest",
                "description": "Request for registering for live updates from a data source.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccuracyMode()",
                        "return_type": "int",
                        "description": "Returns the accuracy mode for this request."
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the specified data source for this request."
                    },
                    {
                        "name": "getDataType()",
                        "return_type": "DataType",
                        "description": "Returns the specified data type for this request."
                    },
                    {
                        "name": "getFastestRate(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the fastest rate for this request, in the given time unit."
                    },
                    {
                        "name": "getMaxDeliveryLatency(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the max delivery latency for this request, in the given time unit."
                    },
                    {
                        "name": "getSamplingRate(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the sampling rate for this request, in the given time unit."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SensorRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/SensorRequest.Builder",
                "description": "Builder used to create new SensorRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SensorRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setAccuracyMode(int accuracyMode)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the accuracy policy (mode"
                    },
                    {
                        "name": "setDataSource(DataSource dataSource)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the specific data source for this registration."
                    },
                    {
                        "name": "setDataType(DataType dataType)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the data type for the request."
                    },
                    {
                        "name": "setFastestRate(int fastestInterval, TimeUnit unit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the fastest interval between two consecutive data points, in the given unit."
                    },
                    {
                        "name": "setMaxDeliveryLatency(int interval, TimeUnit unit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the maximum latency between a data point being detected and reported to the application."
                    },
                    {
                        "name": "setSamplingRate(long interval, TimeUnit unit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the desired interval between two consecutive data points, in the given unit."
                    },
                    {
                        "name": "setTimeout(long timeout, TimeUnit timeUnit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the timeout for the registration for the sensor request to expire."
                    }
                ]
            },
            {
                "name": "SessionInsertRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/SessionInsertRequest",
                "description": "A request for inserting a Session and associated DataSet and/or aggregated DataPoint into the Google Fit store.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAggregateDataPoints()",
                        "return_type": "List<DataPoint>",
                        "description": "Returns the aggregate data points we are inserting."
                    },
                    {
                        "name": "getDataSets()",
                        "return_type": "List<DataSet>",
                        "description": "Returns the data sets we are inserting."
                    },
                    {
                        "name": "getSession()",
                        "return_type": "Session",
                        "description": "Returns the session we are inserting."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SessionInsertRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/SessionInsertRequest.Builder",
                "description": "Builder used to create new SessionInsertRequest.",
                "methods": [
                    {
                        "name": "addAggregateDataPoint(DataPoint aggregateDataPoint)",
                        "return_type": "SessionInsertRequest.Builder",
                        "description": "Adds the specified aggregate data point to this request."
                    },
                    {
                        "name": "addDataSet(DataSet dataSet)",
                        "return_type": "SessionInsertRequest.Builder",
                        "description": "Adds the specified data set to this request."
                    },
                    {
                        "name": "build()",
                        "return_type": "SessionInsertRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setSession(Session session)",
                        "return_type": "SessionInsertRequest.Builder",
                        "description": "Sets the session for this request."
                    }
                ]
            },
            {
                "name": "SessionReadRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/SessionReadRequest",
                "description": "Request for reading Session data from Google Fit.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDataSources()",
                        "return_type": "List<DataSource>",
                        "description": "Returns the data sources to be read in this request."
                    },
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns the data types for which default data sources should be read in this request."
                    },
                    {
                        "name": "getEndTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the end time for our query, in the given time unit"
                    },
                    {
                        "name": "getExcludedPackages()",
                        "return_type": "List<String>",
                        "description": "Returns any app package names that were excluded from the request."
                    },
                    {
                        "name": "getSessionId()",
                        "return_type": "String",
                        "description": "Returns the session id we are requesting data for."
                    },
                    {
                        "name": "getSessionName()",
                        "return_type": "String",
                        "description": "Returns the session name we are requesting data for."
                    },
                    {
                        "name": "getStartTime(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the start time for our query, in the given time unit"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "includeSessionsFromAllApps()",
                        "return_type": "boolean",
                        "description": "Returns true if the read data should include sessions from other apps."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SessionReadRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/SessionReadRequest.Builder",
                "description": "Builder used to create a new SessionReadRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SessionReadRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "enableServerQueries()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Enable querying the Google Fit server to fetch query results, in case the local store doesn't have data for the full requested time range."
                    },
                    {
                        "name": "excludePackage(String appPackageName)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Exclude sessions from a particular package name from the read result."
                    },
                    {
                        "name": "includeActivitySessions()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Requests to include activity sessions."
                    },
                    {
                        "name": "includeSleepSessions()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Requests to include sleep sessions."
                    },
                    {
                        "name": "read(DataSource dataSource)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Reads data from a given dataSource for each session selected by this request."
                    },
                    {
                        "name": "read(DataType dataType)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Reads data from the default data source of the given dataType for each session selected by this request."
                    },
                    {
                        "name": "readSessionsFromAllApps()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Enables reading sessions inserted by any app."
                    },
                    {
                        "name": "setSessionId(String sessionId)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Adds an optional session identifier to this request."
                    },
                    {
                        "name": "setSessionName(String sessionName)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Adds an optional session name to this request."
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Sets the time range for the sessions we want to select in our query, in a specific TimeUnit."
                    }
                ]
            },
            {
                "name": "StartBleScanRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/StartBleScanRequest",
                "description": "This class is deprecated. Use BluetoothManager directly.",
                "methods": [
                    {
                        "name": "getDataTypes()",
                        "return_type": "List<DataType>",
                        "description": "Returns the list of data types that constrain the list of scanned devices."
                    },
                    {
                        "name": "getTimeoutSecs()",
                        "return_type": "int",
                        "description": "Returns the timeout for the scan, in seconds."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StartBleScanRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/request/StartBleScanRequest.Builder",
                "description": "Builder used to create new DataSourceRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StartBleScanRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setBleScanCallback(BleScanCallback bleScanCallback)",
                        "return_type": "StartBleScanRequest.Builder",
                        "description": "Sets the callback to be used when devices are found."
                    },
                    {
                        "name": "setDataTypes(DataType... dataTypes)",
                        "return_type": "StartBleScanRequest.Builder",
                        "description": "Sets the desired data types to search for on the BLE scan."
                    },
                    {
                        "name": "setTimeoutSecs(int stopTimeSecs)",
                        "return_type": "StartBleScanRequest.Builder",
                        "description": "Sets how long to wait before automatically stopping the scan, in seconds."
                    }
                ]
            },
            {
                "name": "OnDataPointListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/request/OnDataPointListener",
                "description": "Listener used to register to live data updates from a DataSource.",
                "methods": [
                    {
                        "name": "onDataPoint(DataPoint dataPoint)",
                        "return_type": "abstract void",
                        "description": "Handle a new data point from the data source."
                    }
                ]
            },
            {
                "name": "DataDeleteRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataDeleteRequest.Builder",
                "description": "Builder used to create new DataDeleteRequests.",
                "methods": [
                    {
                        "name": "addDataSource(DataSource dataSource)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds a specific data source to delete data from the Google Fit store."
                    },
                    {
                        "name": "addDataType(DataType dataType)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds a specific data type to delete data from the Google Fit store."
                    },
                    {
                        "name": "addSession(Session session)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds a specific session to delete from the Google Fit store."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataDeleteRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "deleteAllData()",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Adds option to delete data for all data types."
                    },
                    {
                        "name": "deleteAllSessions()",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "DataDeleteRequest.Builder",
                        "description": "Sets the time interval for the data delete query."
                    }
                ]
            },
            {
                "name": "DataReadRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataReadRequest.Builder",
                "description": "Builder used to create new DataReadRequests.",
                "methods": [
                    {
                        "name": "aggregate(DataSource dataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds a specific data source we want aggregate data from for this request."
                    },
                    {
                        "name": "aggregate(DataType inputDataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds the default data source for the given aggregate dataType to this request."
                    },
                    {
                        "name": "aggregate(DataSource dataSource, DataType outputDataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "This method is deprecated. Use aggregate(DataSource"
                    },
                    {
                        "name": "aggregate(DataType inputDataType, DataType outputDataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "This method is deprecated. Use aggregate(DataType"
                    },
                    {
                        "name": "bucketByActivitySegment(int minDuration, TimeUnit timeUnit, DataSource activityDataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_SEGMENT, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for the bucket."
                    },
                    {
                        "name": "bucketByActivitySegment(int minDuration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_SEGMENT, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for the bucket."
                    },
                    {
                        "name": "bucketByActivityType(int minDuration, TimeUnit timeUnit, DataSource activityDataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_TYPE, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for computing the buckets and sets the activity data source to be used to read activity segments from."
                    },
                    {
                        "name": "bucketByActivityType(int minDuration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_ACTIVITY_TYPE, sets the minimum duration of each TYPE_ACTIVITY_SEGMENT for computing the buckets."
                    },
                    {
                        "name": "bucketBySession(int minDuration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_SESSION and sets the minimum duration of each Session for the bucket."
                    },
                    {
                        "name": "bucketByTime(int duration, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Specifies bucket type as TYPE_TIME and sets the duration of each bucket."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataReadRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "enableServerQueries()",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Enable querying the Google Fit server to fetch query results, in case the local store doesn't have data for the full requested time range."
                    },
                    {
                        "name": "read(DataSource dataSource)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds a specific data source we want to read data from to this request."
                    },
                    {
                        "name": "read(DataType dataType)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Adds the default data source to read for the given dataType to this request."
                    },
                    {
                        "name": "setLimit(int limit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Limits results to the latest limit data points."
                    },
                    {
                        "name": "setTimeRange(long start, long end, TimeUnit timeUnit)",
                        "return_type": "DataReadRequest.Builder",
                        "description": "Sets the time range for our query."
                    }
                ]
            },
            {
                "name": "DataSourcesRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataSourcesRequest.Builder",
                "description": "Builder used to create new DataSourceRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataSourcesRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setDataSourceTypes(int... dataSourceTypes)",
                        "return_type": "DataSourcesRequest.Builder",
                        "description": "Sets the data source types that should be searched for in the data sources request."
                    },
                    {
                        "name": "setDataTypes(DataType... dataTypes)",
                        "return_type": "DataSourcesRequest.Builder",
                        "description": "Sets the desired data types to search for on the data sources request."
                    }
                ]
            },
            {
                "name": "DataTypeCreateRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataTypeCreateRequest.Builder",
                "description": "Builder used to create new DataTypeInsertRequests.",
                "methods": [
                    {
                        "name": "addField(String name, int format)",
                        "return_type": "DataTypeCreateRequest.Builder",
                        "description": "Adds a new field with the specified name and format to the new data type."
                    },
                    {
                        "name": "addField(Field field)",
                        "return_type": "DataTypeCreateRequest.Builder",
                        "description": "Adds the specified field to the new data type."
                    },
                    {
                        "name": "build()",
                        "return_type": "DataTypeCreateRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setName(String name)",
                        "return_type": "DataTypeCreateRequest.Builder",
                        "description": "Set the name for the new data type."
                    }
                ]
            },
            {
                "name": "DataUpdateListenerRegistrationRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataUpdateListenerRegistrationRequest.Builder",
                "description": "Builder for creating DataUpdateListenerRegistrationRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataUpdateListenerRegistrationRequest",
                        "description": "Builds the DataUpdateListenerRegistrationRequest object from the builder."
                    },
                    {
                        "name": "setDataSource(DataSource dataSource)",
                        "return_type": "DataUpdateListenerRegistrationRequest.Builder",
                        "description": "Sets the DataSource for which we want to listen for data updates."
                    },
                    {
                        "name": "setDataType(DataType dataType)",
                        "return_type": "DataUpdateListenerRegistrationRequest.Builder",
                        "description": "Sets the DataType for which we want to listen for data updates."
                    },
                    {
                        "name": "setPendingIntent(PendingIntent pendingIntent)",
                        "return_type": "DataUpdateListenerRegistrationRequest.Builder",
                        "description": "Sets the PendingIntent which will receive data update notification for updates."
                    }
                ]
            },
            {
                "name": "DataUpdateRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/DataUpdateRequest.Builder",
                "description": "Builder used to create new DataUpdateRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "DataUpdateRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setDataSet(DataSet dataSet)",
                        "return_type": "DataUpdateRequest.Builder",
                        "description": "Sets the dataSet for the data update query"
                    },
                    {
                        "name": "setTimeInterval(long startTimeMillis, long endTimeMillis, TimeUnit timeUnit)",
                        "return_type": "DataUpdateRequest.Builder",
                        "description": "Sets the time interval for the data update query."
                    }
                ]
            },
            {
                "name": "GoalsReadRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/GoalsReadRequest.Builder",
                "description": "Builder used to create new GoalsReadRequest.",
                "methods": [
                    {
                        "name": "addActivity(String activityName)",
                        "return_type": "GoalsReadRequest.Builder",
                        "description": "Adds a specific activity to this request."
                    },
                    {
                        "name": "addDataType(DataType dataType)",
                        "return_type": "GoalsReadRequest.Builder",
                        "description": "Adds a specific data type to this request."
                    },
                    {
                        "name": "addObjectiveType(int objectiveType)",
                        "return_type": "GoalsReadRequest.Builder",
                        "description": "Adds a objective type to this request."
                    },
                    {
                        "name": "build()",
                        "return_type": "GoalsReadRequest",
                        "description": "Finishes building and returns the request."
                    }
                ]
            },
            {
                "name": "SensorRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/SensorRequest.Builder",
                "description": "Builder used to create new SensorRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SensorRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setAccuracyMode(int accuracyMode)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the accuracy policy (mode"
                    },
                    {
                        "name": "setDataSource(DataSource dataSource)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the specific data source for this registration."
                    },
                    {
                        "name": "setDataType(DataType dataType)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the data type for the request."
                    },
                    {
                        "name": "setFastestRate(int fastestInterval, TimeUnit unit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the fastest interval between two consecutive data points, in the given unit."
                    },
                    {
                        "name": "setMaxDeliveryLatency(int interval, TimeUnit unit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the maximum latency between a data point being detected and reported to the application."
                    },
                    {
                        "name": "setSamplingRate(long interval, TimeUnit unit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the desired interval between two consecutive data points, in the given unit."
                    },
                    {
                        "name": "setTimeout(long timeout, TimeUnit timeUnit)",
                        "return_type": "SensorRequest.Builder",
                        "description": "Sets the timeout for the registration for the sensor request to expire."
                    }
                ]
            },
            {
                "name": "SessionInsertRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/SessionInsertRequest.Builder",
                "description": "Builder used to create new SessionInsertRequest.",
                "methods": [
                    {
                        "name": "addAggregateDataPoint(DataPoint aggregateDataPoint)",
                        "return_type": "SessionInsertRequest.Builder",
                        "description": "Adds the specified aggregate data point to this request."
                    },
                    {
                        "name": "addDataSet(DataSet dataSet)",
                        "return_type": "SessionInsertRequest.Builder",
                        "description": "Adds the specified data set to this request."
                    },
                    {
                        "name": "build()",
                        "return_type": "SessionInsertRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setSession(Session session)",
                        "return_type": "SessionInsertRequest.Builder",
                        "description": "Sets the session for this request."
                    }
                ]
            },
            {
                "name": "SessionReadRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/SessionReadRequest.Builder",
                "description": "Builder used to create a new SessionReadRequest.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SessionReadRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "enableServerQueries()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Enable querying the Google Fit server to fetch query results, in case the local store doesn't have data for the full requested time range."
                    },
                    {
                        "name": "excludePackage(String appPackageName)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Exclude sessions from a particular package name from the read result."
                    },
                    {
                        "name": "includeActivitySessions()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Requests to include activity sessions."
                    },
                    {
                        "name": "includeSleepSessions()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Requests to include sleep sessions."
                    },
                    {
                        "name": "read(DataSource dataSource)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Reads data from a given dataSource for each session selected by this request."
                    },
                    {
                        "name": "read(DataType dataType)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Reads data from the default data source of the given dataType for each session selected by this request."
                    },
                    {
                        "name": "readSessionsFromAllApps()",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Enables reading sessions inserted by any app."
                    },
                    {
                        "name": "setSessionId(String sessionId)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Adds an optional session identifier to this request."
                    },
                    {
                        "name": "setSessionName(String sessionName)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Adds an optional session name to this request."
                    },
                    {
                        "name": "setTimeInterval(long startTime, long endTime, TimeUnit timeUnit)",
                        "return_type": "SessionReadRequest.Builder",
                        "description": "Sets the time range for the sessions we want to select in our query, in a specific TimeUnit."
                    }
                ]
            },
            {
                "name": "StartBleScanRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fitness/request/StartBleScanRequest.Builder",
                "description": "Builder used to create new DataSourceRequests.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StartBleScanRequest",
                        "description": "Finishes building and returns the request."
                    },
                    {
                        "name": "setBleScanCallback(BleScanCallback bleScanCallback)",
                        "return_type": "StartBleScanRequest.Builder",
                        "description": "Sets the callback to be used when devices are found."
                    },
                    {
                        "name": "setDataTypes(DataType... dataTypes)",
                        "return_type": "StartBleScanRequest.Builder",
                        "description": "Sets the desired data types to search for on the BLE scan."
                    },
                    {
                        "name": "setTimeoutSecs(int stopTimeSecs)",
                        "return_type": "StartBleScanRequest.Builder",
                        "description": "Sets how long to wait before automatically stopping the scan, in seconds."
                    }
                ]
            }
        ]
    },
    {
        "name": "widget",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/drive/widget/package-summary",
        "classes": [
            {
                "name": "DataBufferAdapter<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/widget/DataBufferAdapter",
                "description": "A concrete BaseAdapter that is backed by concatenated DataBuffers.",
                "methods": [
                    {
                        "name": "append(DataBuffer<T> buffer)",
                        "return_type": "void",
                        "description": "Appends the specified buffer to the end of the adapter."
                    },
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Closes and removes all buffers, and so all elements, from the adapter."
                    },
                    {
                        "name": "getContext()",
                        "return_type": "Context",
                        "description": ""
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getDropDownView(int position, View convertView, ViewGroup parent)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "getItem(int position)",
                        "return_type": "T",
                        "description": ""
                    },
                    {
                        "name": "getItemId(int position)",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getView(int position, View convertView, ViewGroup parent)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "notifyDataSetChanged()",
                        "return_type": "void",
                        "description": "This will also re-enable automatic notifications."
                    },
                    {
                        "name": "setDropDownViewResource(int resource)",
                        "return_type": "void",
                        "description": "Sets the layout resource to create the drop down views."
                    },
                    {
                        "name": "setNotifyOnChange(boolean notifyOnChange)",
                        "return_type": "void",
                        "description": "Control whether methods that change the list (append(DataBuffer"
                    }
                ]
            }
        ]
    },
    {
        "name": "stats",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/stats/package-summary",
        "classes": [
            {
                "name": "PlayerStatsBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/stats/PlayerStatsBuffer",
                "description": "AbstractDataBuffer implementation containing Player Stats.",
                "methods": []
            },
            {
                "name": "PlayerStats",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/stats/PlayerStats",
                "description": "The PlayerStats API allows you to retrieve information about the player's activity in your application.",
                "methods": [
                    {
                        "name": "getAverageSessionLength()",
                        "return_type": "abstract float",
                        "description": "The average session length of the player in minutes."
                    },
                    {
                        "name": "getChurnProbability()",
                        "return_type": "abstract float",
                        "description": "This method is deprecated. This field will always return UNSET_VALUE."
                    },
                    {
                        "name": "getDaysSinceLastPlayed()",
                        "return_type": "abstract int",
                        "description": "The approximate number of days since the player last played."
                    },
                    {
                        "name": "getHighSpenderProbability()",
                        "return_type": "abstract float",
                        "description": "This method is deprecated. This field will always return UNSET_VALUE."
                    },
                    {
                        "name": "getNumberOfPurchases()",
                        "return_type": "abstract int",
                        "description": "The approximate number of in-app purchases for the player."
                    },
                    {
                        "name": "getNumberOfSessions()",
                        "return_type": "abstract int",
                        "description": "The approximate number of sessions of the player."
                    },
                    {
                        "name": "getSessionPercentile()",
                        "return_type": "abstract float",
                        "description": "The approximation of sessions percentile for the player."
                    },
                    {
                        "name": "getSpendPercentile()",
                        "return_type": "abstract float",
                        "description": "The approximate spend percentile of the player."
                    },
                    {
                        "name": "getSpendProbability()",
                        "return_type": "abstract float",
                        "description": "This method is deprecated. This field will always return UNSET_VALUE."
                    },
                    {
                        "name": "getTotalSpendNext28Days()",
                        "return_type": "abstract float",
                        "description": "This method is deprecated. This field will always return UNSET_VALUE."
                    }
                ]
            },
            {
                "name": "Stats",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/stats/Stats",
                "description": "This interface is deprecated. Use PlayerStatsClient instead",
                "methods": [
                    {
                        "name": "loadPlayerStats(GoogleApiClient apiClient, boolean forceReload)",
                        "return_type": "abstractPendingResult<Stats.LoadPlayerStatsResult>",
                        "description": "Asynchronously load the player stats data for the currently signed-in player and game into a single result."
                    }
                ]
            },
            {
                "name": "Stats.LoadPlayerStatsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/stats/Stats.LoadPlayerStatsResult",
                "description": "This interface is deprecated. PlayerStats is returned directly in the PlayerStatsClient.",
                "methods": [
                    {
                        "name": "getPlayerStats()",
                        "return_type": "abstractPlayerStats",
                        "description": "Retrieves the player stats."
                    }
                ]
            },
            {
                "name": "Stats.LoadPlayerStatsResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/stats/Stats.LoadPlayerStatsResult",
                "description": "This interface is deprecated. PlayerStats is returned directly in the PlayerStatsClient.",
                "methods": [
                    {
                        "name": "getPlayerStats()",
                        "return_type": "abstractPlayerStats",
                        "description": "Retrieves the player stats."
                    }
                ]
            }
        ]
    },
    {
        "name": "tagmanager",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/tagmanager/package-summary",
        "classes": [
            {
                "name": "Container",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/Container",
                "description": "An object that provides access to container values.",
                "methods": [
                    {
                        "name": "getBoolean(String key)",
                        "return_type": "boolean",
                        "description": "Returns a boolean representing the configuration value for the given key."
                    },
                    {
                        "name": "getContainerId()",
                        "return_type": "String",
                        "description": "Returns the container id."
                    },
                    {
                        "name": "getDouble(String key)",
                        "return_type": "double",
                        "description": "Returns a double representing the configuration value for the given key."
                    },
                    {
                        "name": "getLastRefreshTime()",
                        "return_type": "long",
                        "description": "Returns the last time (in milliseconds since midnight, January 1, 1970 UTC"
                    },
                    {
                        "name": "getLong(String key)",
                        "return_type": "long",
                        "description": "Returns a long representing the configuration value for the given key."
                    },
                    {
                        "name": "getString(String key)",
                        "return_type": "String",
                        "description": "Returns a string representing the configuration value for the given key."
                    },
                    {
                        "name": "isDefault()",
                        "return_type": "boolean",
                        "description": "Returns whether this is a default container, or one refreshed from the server."
                    },
                    {
                        "name": "registerFunctionCallMacroCallback(String customMacroName, Container.FunctionCallMacroCallback customMacroCallback)",
                        "return_type": "void",
                        "description": "Registers the given macro callback to handle a given function call macro."
                    },
                    {
                        "name": "registerFunctionCallTagCallback(String customTagName, Container.FunctionCallTagCallback customTagCallback)",
                        "return_type": "void",
                        "description": "Registers the tag callback to handle a given function call tag."
                    },
                    {
                        "name": "unregisterFunctionCallMacroCallback(String customMacroName)",
                        "return_type": "void",
                        "description": "Unregisters any macro callback for the given macro."
                    },
                    {
                        "name": "unregisterFunctionCallTagCallback(String customTagName)",
                        "return_type": "void",
                        "description": "Unregisters any tag callback for the given tag."
                    }
                ]
            },
            {
                "name": "DataLayer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/DataLayer",
                "description": "The data layer is a map holding generic information about the application.",
                "methods": [
                    {
                        "name": "get(String key)",
                        "return_type": "Object",
                        "description": "Returns the object in the model associated with the given key."
                    },
                    {
                        "name": "listOf(Object... objects)",
                        "return_type": "staticList<Object>",
                        "description": "Utility method that creates a list."
                    },
                    {
                        "name": "mapOf(Object... objects)",
                        "return_type": "staticMap<String,Object>",
                        "description": "Utility method that creates a map."
                    },
                    {
                        "name": "push(Map<String, Object> update)",
                        "return_type": "void",
                        "description": "Merges the given update object into the existing data model, calling any listeners with the update (after the merge occurs"
                    },
                    {
                        "name": "push(String key, Object value)",
                        "return_type": "void",
                        "description": "Pushes a key/value pair of data to the data layer."
                    },
                    {
                        "name": "pushEvent(String eventName, Map<String, Object> update)",
                        "return_type": "void",
                        "description": "Pushes an event, along with an update map, to the data layer."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a human readable string representing the Data Layer object."
                    }
                ]
            },
            {
                "name": "InstallReferrerReceiver",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/InstallReferrerReceiver",
                "description": "The Google Play com.android.vending.INSTALL_REFERRER Intent is broadcast when an app is installed from the Google Play Store.",
                "methods": []
            },
            {
                "name": "InstallReferrerService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/InstallReferrerService",
                "description": "IntentService for handling the Google Play Store's INSTALL_REFERRER intent.",
                "methods": []
            },
            {
                "name": "PreviewActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/PreviewActivity",
                "description": "An Activity to preview the app with previewed container version.",
                "methods": [
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "Prepares for previewing a non-published container and then launches the launch activity for this package."
                    }
                ]
            },
            {
                "name": "TagManager",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/TagManager",
                "description": "This is the mobile implementation of Google Tag Manager (GTM).",
                "methods": [
                    {
                        "name": "dispatch()",
                        "return_type": "void",
                        "description": "Manually dispatches queued events (tracking pixels, etc"
                    },
                    {
                        "name": "getDataLayer()",
                        "return_type": "DataLayer",
                        "description": "Returns the data layer object that is used by the tag manager."
                    },
                    {
                        "name": "getInstance(Context context)",
                        "return_type": "staticTagManager",
                        "description": "Get the singleton instance of the TagManager class, creating it if necessary."
                    },
                    {
                        "name": "loadContainerDefaultOnly(String containerId, int defaultContainerResourceId)",
                        "return_type": "PendingResult<ContainerHolder>",
                        "description": "The ContainerHolder will be available from the returned PendingResult as soon as either of the following happens: the default container is loaded, or no default container is found."
                    },
                    {
                        "name": "loadContainerDefaultOnly(String containerId, int defaultContainerResourceId, Handler handler)",
                        "return_type": "PendingResult<ContainerHolder>",
                        "description": "The ContainerHolder will be available from the returned PendingResult as soon as either of the following happens: the default container is loaded, or no default container is found."
                    },
                    {
                        "name": "loadContainerPreferFresh(String containerId, int defaultContainerResourceId)",
                        "return_type": "PendingResult<ContainerHolder>",
                        "description": "The ContainerHolder will be available from the returned PendingResult as soon as one of the following happens: a saved container which has been recently refreshed is loaded, a network container is loaded or a network error occurs, or a timeout occurs (as specified in await(long, java.util.concurrent.TimeUnit"
                    },
                    {
                        "name": "loadContainerPreferFresh(String containerId, int defaultContainerResourceId, Handler handler)",
                        "return_type": "PendingResult<ContainerHolder>",
                        "description": "The ContainerHolder will be available from the returned PendingResult as soon as one of the following happens: a saved container which has been recently refreshed is loaded, a network container is loaded or a network error occurs, or a timeout occurs (as specified in await(long, java.util.concurrent.TimeUnit"
                    },
                    {
                        "name": "loadContainerPreferNonDefault(String containerId, int defaultContainerResourceId)",
                        "return_type": "PendingResult<ContainerHolder>",
                        "description": "The ContainerHolder will be available from the returned PendingResult as soon as one of the following happens: a saved container is loaded, or if there is no saved container, a network container is loaded or a network error occurs, or a timeout occurs (as specified in await(long, java.util.concurrent.TimeUnit"
                    },
                    {
                        "name": "loadContainerPreferNonDefault(String containerId, int defaultContainerResourceId, Handler handler)",
                        "return_type": "PendingResult<ContainerHolder>",
                        "description": "The ContainerHolder will be available from the returned PendingResult as soon as one of the following happens: a saved container is loaded, if there is no saved container, a network container is loaded or a network error occurs, or a timeout occurs (as specified in await(long, java.util.concurrent.TimeUnit"
                    },
                    {
                        "name": "setVerboseLoggingEnabled(boolean enableVerboseLogging)",
                        "return_type": "void",
                        "description": "Sets whether or not verbose logging is enabled."
                    }
                ]
            },
            {
                "name": "TagManagerPreviewActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/TagManagerPreviewActivity",
                "description": "An Activity to preview or stop previewing a Google Tag Manager container.",
                "methods": [
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "Prepares for previewing a non-published container and then launches the launch activity for this package."
                    }
                ]
            },
            {
                "name": "TagManagerService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tagmanager/TagManagerService",
                "description": "A Service used by TagManager to process and send tags.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Container.FunctionCallMacroCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tagmanager/Container.FunctionCallMacroCallback",
                "description": "Callback that is provided by the application to calculate the value of a custom macro.",
                "methods": [
                    {
                        "name": "getValue(String functionName, Map<String, Object> parameters)",
                        "return_type": "abstractObject",
                        "description": "Callback is given the Function Name of the macro and a map of named parameters (the map may contain String, Double, Boolean, Integer, Long, Map, or List values"
                    }
                ]
            },
            {
                "name": "Container.FunctionCallTagCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tagmanager/Container.FunctionCallTagCallback",
                "description": "Callback that is provided by the application to execute a custom tag.",
                "methods": [
                    {
                        "name": "execute(String functionName, Map<String, Object> parameters)",
                        "return_type": "abstract void",
                        "description": "Callback is given the Function Name of the macro and a map of named parameters (the map may contain String, Double, Boolean, Integer, Long, Map, or List values"
                    }
                ]
            },
            {
                "name": "ContainerHolder",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tagmanager/ContainerHolder",
                "description": "Holder for an active container.",
                "methods": [
                    {
                        "name": "getContainer()",
                        "return_type": "abstractContainer",
                        "description": "Returns the last loaded container."
                    },
                    {
                        "name": "refresh()",
                        "return_type": "abstract void",
                        "description": "Requests a refresh from the network."
                    },
                    {
                        "name": "setContainerAvailableListener(ContainerHolder.ContainerAvailableListener listener)",
                        "return_type": "abstract void",
                        "description": "Sets a listener that will be called when a new container becomes available (whether in response to an explicit refresh("
                    }
                ]
            },
            {
                "name": "ContainerHolder.ContainerAvailableListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tagmanager/ContainerHolder.ContainerAvailableListener",
                "description": "Listener object that is called when a new container is available.",
                "methods": [
                    {
                        "name": "onContainerAvailable(ContainerHolder containerHolder, String containerVersion)",
                        "return_type": "abstract void",
                        "description": "Called to signify that a new container is available in the container holder."
                    }
                ]
            },
            {
                "name": "CustomTagProvider",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tagmanager/CustomTagProvider",
                "description": "Callback that is provided by the application to execute a custom tag.",
                "methods": [
                    {
                        "name": "execute(Map<String, Object> parameters)",
                        "return_type": "abstract\n\n\n\n\n                void",
                        "description": "execute(Map"
                    }
                ]
            },
            {
                "name": "CustomVariableProvider",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/tagmanager/CustomVariableProvider",
                "description": "Callback that is provided by the application to provide a custom variable.",
                "methods": [
                    {
                        "name": "getValue(Map<String, Object> parameters)",
                        "return_type": "abstractString",
                        "description": "getValue(Map"
                    }
                ]
            },
            {
                "name": "Container.FunctionCallMacroCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/tagmanager/Container.FunctionCallMacroCallback",
                "description": "Callback that is provided by the application to calculate the value of a custom macro.",
                "methods": [
                    {
                        "name": "getValue(String functionName, Map<String, Object> parameters)",
                        "return_type": "abstractObject",
                        "description": "Callback is given the Function Name of the macro and a map of named parameters (the map may contain String, Double, Boolean, Integer, Long, Map, or List values"
                    }
                ]
            },
            {
                "name": "Container.FunctionCallTagCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/tagmanager/Container.FunctionCallTagCallback",
                "description": "Callback that is provided by the application to execute a custom tag.",
                "methods": [
                    {
                        "name": "execute(String functionName, Map<String, Object> parameters)",
                        "return_type": "abstract void",
                        "description": "Callback is given the Function Name of the macro and a map of named parameters (the map may contain String, Double, Boolean, Integer, Long, Map, or List values"
                    }
                ]
            },
            {
                "name": "ContainerHolder.ContainerAvailableListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/tagmanager/ContainerHolder.ContainerAvailableListener",
                "description": "Listener object that is called when a new container is available.",
                "methods": [
                    {
                        "name": "onContainerAvailable(ContainerHolder containerHolder, String containerVersion)",
                        "return_type": "abstract void",
                        "description": "Called to signify that a new container is available in the container holder."
                    }
                ]
            }
        ]
    },
    {
        "name": "interstitial",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/interstitial/package-summary",
        "classes": [
            {
                "name": "InterstitialAd",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/interstitial/InterstitialAd",
                "description": "A full page ad experience at natural transition points such as a page change, an app launch, or a game level load.",
                "methods": [
                    {
                        "name": "getAdUnitId()",
                        "return_type": "abstractString",
                        "description": "Returns the ad unit ID."
                    },
                    {
                        "name": "getFullScreenContentCallback()",
                        "return_type": "abstractFullScreenContentCallback",
                        "description": "Gets the FullScreenContentCallback for this InterstitialAd."
                    },
                    {
                        "name": "getOnPaidEventListener()",
                        "return_type": "abstractOnPaidEventListener",
                        "description": "Gets the OnPaidEventListener for this InterstitialAd."
                    },
                    {
                        "name": "getResponseInfo()",
                        "return_type": "abstractResponseInfo",
                        "description": "Returns the ResponseInfo object for the loaded ad."
                    },
                    {
                        "name": "load(Context context, String adUnitId, AdRequest adRequest, InterstitialAdLoadCallback loadCallback)",
                        "return_type": "static void",
                        "description": "Loads an InterstitialAd."
                    },
                    {
                        "name": "setFullScreenContentCallback(FullScreenContentCallback fullScreenContentCallback)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when ads show and dismiss full screen content."
                    },
                    {
                        "name": "setImmersiveMode(boolean immersiveModeEnabled)",
                        "return_type": "abstract void",
                        "description": "Sets a flag that controls if this interstitial object will be displayed in immersive mode."
                    },
                    {
                        "name": "setOnPaidEventListener(OnPaidEventListener listener)",
                        "return_type": "abstract void",
                        "description": "Registers a callback to be invoked when this ad is estimated to have earned money."
                    },
                    {
                        "name": "show(Activity activity)",
                        "return_type": "abstract void",
                        "description": "Shows the interstitial ad."
                    }
                ]
            },
            {
                "name": "InterstitialAdLoadCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/interstitial/InterstitialAdLoadCallback",
                "description": "Callback to be invoked when an interstitial ad finishes loading.",
                "methods": []
            }
        ]
    },
    {
        "name": "barcode",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/vision/barcode/package-summary",
        "classes": [
            {
                "name": "Barcode",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode",
                "description": "Barcode represents a single recognized barcode and its value.",
                "methods": [
                    {
                        "name": "getBoundingBox()",
                        "return_type": "Rect",
                        "description": "Returns the barcode's axis-aligned bounding box."
                    }
                ]
            },
            {
                "name": "Barcode.Address",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Address",
                "description": "An address.",
                "methods": []
            },
            {
                "name": "Barcode.CalendarDateTime",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.CalendarDateTime",
                "description": "DateTime data type used in calendar events.",
                "methods": []
            },
            {
                "name": "Barcode.CalendarEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.CalendarEvent",
                "description": "A calendar event extracted from QRCode.",
                "methods": []
            },
            {
                "name": "Barcode.ContactInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.ContactInfo",
                "description": "A person's or organization's business card.",
                "methods": []
            },
            {
                "name": "Barcode.DriverLicense",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.DriverLicense",
                "description": "A driver license or ID card.",
                "methods": []
            },
            {
                "name": "Barcode.Email",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Email",
                "description": "An email message from a 'MAILTO:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.GeoPoint",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.GeoPoint",
                "description": "GPS coordinates from a 'GEO:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.PersonName",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.PersonName",
                "description": "A person's name, both formatted version and individual name components.",
                "methods": []
            },
            {
                "name": "Barcode.Phone",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Phone",
                "description": "A phone number from a 'TEL:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.Sms",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Sms",
                "description": "An sms message from an 'SMS:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.UrlBookmark",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.UrlBookmark",
                "description": "A URL and title from a 'MEBKM:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.WiFi",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.WiFi",
                "description": "A wifi network parameters from a 'WIFI:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "BarcodeDetector",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/BarcodeDetector",
                "description": "Recognizes barcodes (in a variety of 1D and 2D formats) in a supplied Frame.",
                "methods": [
                    {
                        "name": "detect(Frame frame)",
                        "return_type": "SparseArray<Barcode>",
                        "description": "Recognizes barcodes in the supplied Frame."
                    },
                    {
                        "name": "isOperational()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BarcodeDetector.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/barcode/BarcodeDetector.Builder",
                "description": "Barcode detector builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BarcodeDetector",
                        "description": "Builds a barcode detector instance using the provided settings."
                    },
                    {
                        "name": "setBarcodeFormats(int format)",
                        "return_type": "BarcodeDetector.Builder",
                        "description": "Bit mask (containing values like Barcode.QR_CODE and so on"
                    }
                ]
            },
            {
                "name": "Barcode.Address",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Address",
                "description": "An address.",
                "methods": []
            },
            {
                "name": "Barcode.CalendarDateTime",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.CalendarDateTime",
                "description": "DateTime data type used in calendar events.",
                "methods": []
            },
            {
                "name": "Barcode.CalendarEvent",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.CalendarEvent",
                "description": "A calendar event extracted from QRCode.",
                "methods": []
            },
            {
                "name": "Barcode.ContactInfo",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.ContactInfo",
                "description": "A person's or organization's business card.",
                "methods": []
            },
            {
                "name": "Barcode.DriverLicense",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.DriverLicense",
                "description": "A driver license or ID card.",
                "methods": []
            },
            {
                "name": "Barcode.Email",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Email",
                "description": "An email message from a 'MAILTO:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.GeoPoint",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.GeoPoint",
                "description": "GPS coordinates from a 'GEO:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.PersonName",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.PersonName",
                "description": "A person's name, both formatted version and individual name components.",
                "methods": []
            },
            {
                "name": "Barcode.Phone",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Phone",
                "description": "A phone number from a 'TEL:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.Sms",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.Sms",
                "description": "An sms message from an 'SMS:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.UrlBookmark",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.UrlBookmark",
                "description": "A URL and title from a 'MEBKM:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "Barcode.WiFi",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/Barcode.WiFi",
                "description": "A wifi network parameters from a 'WIFI:' or similar QRCode type.",
                "methods": []
            },
            {
                "name": "BarcodeDetector.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/barcode/BarcodeDetector.Builder",
                "description": "Barcode detector builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BarcodeDetector",
                        "description": "Builds a barcode detector instance using the provided settings."
                    },
                    {
                        "name": "setBarcodeFormats(int format)",
                        "return_type": "BarcodeDetector.Builder",
                        "description": "Bit mask (containing values like Barcode.QR_CODE and so on"
                    }
                ]
            }
        ]
    },
    {
        "name": "common",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/common/package-summary",
        "classes": [
            {
                "name": "AccountPicker",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/AccountPicker",
                "description": "Common account picker similar to the standard framework account picker introduced in ICS: newChooseAccountIntent.",
                "methods": [
                    {
                        "name": "newChooseAccountIntent(AccountPicker.AccountChooserOptions options)",
                        "return_type": "staticIntent",
                        "description": "Returns an intent to an Activity that prompts the user to choose from a list of accounts."
                    },
                    {
                        "name": "newChooseAccountIntent(Account selectedAccount, ArrayList<Account> allowableAccounts, String[] allowableAccountTypes, boolean alwaysPromptForAccount, String descriptionOverrideText, String addAccountAuthTokenType, String[] addAccountRequiredFeatures, Bundle addAccountOptions)",
                        "return_type": "staticIntent",
                        "description": "This method is deprecated. use newChooseAccountIntent(AccountChooserOptions"
                    }
                ]
            },
            {
                "name": "AccountPicker.AccountChooserOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/AccountPicker.AccountChooserOptions",
                "description": "Options for building an appropriate intent to launch the Account Picker.",
                "methods": []
            },
            {
                "name": "AccountPicker.AccountChooserOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/AccountPicker.AccountChooserOptions.Builder",
                "description": "The builder for creating an instance of the AccountPicker.AccountChooserOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AccountPicker.AccountChooserOptions",
                        "description": "Builds an instance of AccountPicker.AccountChooserOptions."
                    },
                    {
                        "name": "setAllowableAccounts(List<Account> allowableAccounts)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "A list of Accounts that limit the accounts that are shown in the Account Picker to those in this list."
                    },
                    {
                        "name": "setAllowableAccountsTypes(List<String> allowableAccountTypes)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the type of allowed types of accounts."
                    },
                    {
                        "name": "setAlwaysShowAccountPicker(boolean alwaysShowAccountPicker)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "If true then shows the Account Picker even if there is just one account to choose from."
                    },
                    {
                        "name": "setOptionsForAddingAccount(Bundle options)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the options to be passed as the addAccountOptions parameter in AccountManager#addAccount("
                    },
                    {
                        "name": "setSelectedAccount(Account selectedAccount)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the specified account to \"selected\" in the Account Picker if this account is shown there."
                    },
                    {
                        "name": "setTitleOverrideText(String titleOverrideText)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Overrides the default title of the Account Picker."
                    }
                ]
            },
            {
                "name": "ConnectionResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/ConnectionResult",
                "description": "Contains all possible error codes for when a client fails to connect to Google Play services.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getErrorCode()",
                        "return_type": "int",
                        "description": "Indicates the type of error that interrupted connection."
                    },
                    {
                        "name": "getErrorMessage()",
                        "return_type": "String",
                        "description": "Returns an error message for connection result."
                    },
                    {
                        "name": "getResolution()",
                        "return_type": "PendingIntent",
                        "description": "A pending intent to resolve the connection failure."
                    },
                    {
                        "name": "hasResolution()",
                        "return_type": "boolean",
                        "description": "Returns true if calling startResolutionForResult(Activity, int"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isSuccess()",
                        "return_type": "boolean",
                        "description": "Returns true if the connection was successful."
                    },
                    {
                        "name": "startResolutionForResult(Activity activity, int requestCode)",
                        "return_type": "void",
                        "description": "Resolves an error by starting any intents requiring user interaction."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ErrorDialogFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/ErrorDialogFragment",
                "description": "Wraps the Dialog returned by GoogleApiAvailability.getErrorDialog(Activity, int, int) by using DialogFragment so that it can be properly managed by the Activity.",
                "methods": [
                    {
                        "name": "newInstance(Dialog dialog, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "staticErrorDialogFragment",
                        "description": "Create a DialogFragment for displaying the GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "newInstance(Dialog dialog)",
                        "return_type": "staticErrorDialogFragment",
                        "description": "Create a DialogFragment for displaying the GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "onCancel(DialogInterface dialog)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateDialog(Bundle savedInstanceState)",
                        "return_type": "Dialog",
                        "description": "Returns a Dialog created by GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "show(FragmentManager manager, String tag)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleApiAvailability",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/GoogleApiAvailability",
                "description": "Helper class for verifying that the Google Play services APK is available and up-to-date on this device.",
                "methods": [
                    {
                        "name": "checkApiAvailability(HasApiKey<?> api, HasApiKey...<?> apis)",
                        "return_type": "Task<Void>",
                        "description": "Checks the availability of the specified APIs."
                    },
                    {
                        "name": "checkApiAvailability(GoogleApi<?> api, GoogleApi...<?> apis)",
                        "return_type": "Task<Void>",
                        "description": "Checks the availability of the specified APIs."
                    },
                    {
                        "name": "getErrorDialog(Activity activity, int errorCode, int requestCode)",
                        "return_type": "Dialog",
                        "description": "Returns a dialog to address the provided errorCode."
                    },
                    {
                        "name": "getErrorDialog(Fragment fragment, int errorCode, int requestCode, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "Dialog",
                        "description": "Returns a dialog to address the provided errorCode."
                    },
                    {
                        "name": "getErrorDialog(Activity activity, int errorCode, int requestCode, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "Dialog",
                        "description": "Returns a dialog to address the provided errorCode."
                    },
                    {
                        "name": "getErrorDialog(Fragment fragment, int errorCode, int requestCode)",
                        "return_type": "Dialog",
                        "description": "Returns a dialog to address the provided errorCode."
                    },
                    {
                        "name": "getErrorResolutionPendingIntent(Context context, ConnectionResult result)",
                        "return_type": "PendingIntent",
                        "description": "Returns a PendingIntent to address the provided connection failure."
                    },
                    {
                        "name": "getErrorResolutionPendingIntent(Context context, int errorCode, int requestCode)",
                        "return_type": "PendingIntent",
                        "description": "Returns a PendingIntent to address the provided errorCode."
                    },
                    {
                        "name": "getErrorString(int errorCode)",
                        "return_type": "finalString",
                        "description": "Returns a human-readable string of the error code returned from isGooglePlayServicesAvailable(Context"
                    },
                    {
                        "name": "getInstance()",
                        "return_type": "staticGoogleApiAvailability",
                        "description": "Returns the singleton instance of GoogleApiAvailability."
                    },
                    {
                        "name": "isGooglePlayServicesAvailable(Context context)",
                        "return_type": "int",
                        "description": "Verifies that Google Play services is installed and enabled on this device, and that the version installed on this device is no older than the one required by this client."
                    },
                    {
                        "name": "isGooglePlayServicesAvailable(Context context, int minApkVersion)",
                        "return_type": "int",
                        "description": "Verifies that Google Play services is installed and enabled on this device, and that the version installed on this device is no older than the one required by this client or the version is not older than the one specified in minApkVersion."
                    },
                    {
                        "name": "isUserResolvableError(int errorCode)",
                        "return_type": "final boolean",
                        "description": "Determines whether an error can be resolved via user action."
                    },
                    {
                        "name": "makeGooglePlayServicesAvailable(Activity activity)",
                        "return_type": "Task<Void>",
                        "description": "Attempts to make Google Play services available on this device."
                    },
                    {
                        "name": "setDefaultNotificationChannelId(Context context, String notificationChannelId)",
                        "return_type": "void",
                        "description": "Overrides the default notification channel for Google Play services availability notifications."
                    },
                    {
                        "name": "showErrorDialogFragment(Activity activity, int errorCode, int requestCode)",
                        "return_type": "boolean",
                        "description": "Displays a DialogFragment for an error code returned by isGooglePlayServicesAvailable(Context"
                    },
                    {
                        "name": "showErrorDialogFragment(Activity activity, int errorCode, int requestCode, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "boolean",
                        "description": "Displays a DialogFragment for an error code returned by isGooglePlayServicesAvailable(Context"
                    },
                    {
                        "name": "showErrorNotification(Context context, int errorCode)",
                        "return_type": "void",
                        "description": "Displays a notification for an error code returned from isGooglePlayServicesAvailable(Context"
                    },
                    {
                        "name": "showErrorNotification(Context context, ConnectionResult result)",
                        "return_type": "void",
                        "description": "Displays a notification for a connection failure, if it is resolvable by the user."
                    }
                ]
            },
            {
                "name": "GooglePlayServicesUtil",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/GooglePlayServicesUtil",
                "description": "Utility class for verifying that the Google Play services APK is available and up-to-date on this device.",
                "methods": [
                    {
                        "name": "getErrorDialog(int errorCode, Activity activity, int requestCode)",
                        "return_type": "staticDialog",
                        "description": "This method is deprecated. Use GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "getErrorDialog(int errorCode, Activity activity, int requestCode, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "staticDialog",
                        "description": "This method is deprecated. Use GoogleApiAvailability.getErrorDialog(Activity, int, int, OnCancelListener"
                    },
                    {
                        "name": "getErrorPendingIntent(int errorCode, Context context, int requestCode)",
                        "return_type": "staticPendingIntent",
                        "description": "This method is deprecated. Use GoogleApiAvailability.getErrorResolutionPendingIntent(Context, ConnectionResult"
                    },
                    {
                        "name": "getErrorString(int errorCode)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use GoogleApiAvailability.getErrorString(int"
                    },
                    {
                        "name": "getOpenSourceSoftwareLicenseInfo(Context context)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. This license information is displayed in Settings > Google > Open Source on any device running Google Play services. Applications do not need to display this license text, and this method will be removed in a future version of Google Play services."
                    },
                    {
                        "name": "getRemoteContext(Context context)",
                        "return_type": "staticContext",
                        "description": "This gets the Context object of the Buddy APK."
                    },
                    {
                        "name": "getRemoteResource(Context context)",
                        "return_type": "staticResources",
                        "description": "This gets the Resources object of the Buddy APK."
                    },
                    {
                        "name": "isGooglePlayServicesAvailable(Context context)",
                        "return_type": "static int",
                        "description": "This method is deprecated. Use GoogleApiAvailability.isGooglePlayServicesAvailable(Context"
                    },
                    {
                        "name": "isGooglePlayServicesAvailable(Context context, int minApkVersion)",
                        "return_type": "static int",
                        "description": "This method is deprecated. Use GoogleApiAvailability.isGooglePlayServicesAvailable(Context"
                    },
                    {
                        "name": "isUserRecoverableError(int errorCode)",
                        "return_type": "static boolean",
                        "description": "This method is deprecated. Use GoogleApiAvailability.isUserResolvableError(int"
                    },
                    {
                        "name": "showErrorDialogFragment(int errorCode, Activity activity, int requestCode, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "static boolean",
                        "description": "This method is deprecated. Use GoogleApiAvailability.showErrorDialogFragment(Activity, int, int, OnCancelListener"
                    },
                    {
                        "name": "showErrorDialogFragment(int errorCode, Activity activity, Fragment fragment, int requestCode, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "static boolean",
                        "description": ""
                    },
                    {
                        "name": "showErrorDialogFragment(int errorCode, Activity activity, int requestCode)",
                        "return_type": "static boolean",
                        "description": "This method is deprecated. Use GoogleApiAvailability.showErrorDialogFragment(Activity, int, int"
                    },
                    {
                        "name": "showErrorNotification(int errorCode, Context context)",
                        "return_type": "static void",
                        "description": "This method is deprecated. Use GoogleApiAvailability.showErrorNotification(Context, int"
                    }
                ]
            },
            {
                "name": "Scopes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/Scopes",
                "description": "OAuth 2.0 scopes for use with Google Play services.",
                "methods": []
            },
            {
                "name": "SignInButton",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/SignInButton",
                "description": "The Google sign-in button to authenticate the user.",
                "methods": [
                    {
                        "name": "onClick(View view)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setColorScheme(int colorScheme)",
                        "return_type": "void",
                        "description": "Set the color scheme of the button to use."
                    },
                    {
                        "name": "setEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setOnClickListener(View.OnClickListener listener)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setScopes(Scope[] scopes)",
                        "return_type": "void",
                        "description": "This method is deprecated. Setting scopes will no longer impact the branding."
                    },
                    {
                        "name": "setSize(int buttonSize)",
                        "return_type": "void",
                        "description": "Set the size of the button to use."
                    },
                    {
                        "name": "setStyle(int buttonSize, int colorScheme, Scope[] scopes)",
                        "return_type": "void",
                        "description": "This method is deprecated. Setting scopes will no longer impact the branding. Use setStyle(int, int"
                    },
                    {
                        "name": "setStyle(int buttonSize, int colorScheme)",
                        "return_type": "void",
                        "description": "Set the desired style of button to use."
                    }
                ]
            },
            {
                "name": "SupportErrorDialogFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/common/SupportErrorDialogFragment",
                "description": "Wraps the Dialog returned by GoogleApiAvailability.getErrorDialog(Activity, int, int) by using DialogFragment so that it can be properly managed by the Activity.",
                "methods": [
                    {
                        "name": "newInstance(Dialog dialog, DialogInterface.OnCancelListener cancelListener)",
                        "return_type": "staticSupportErrorDialogFragment",
                        "description": "Create a DialogFragment for displaying the GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "newInstance(Dialog dialog)",
                        "return_type": "staticSupportErrorDialogFragment",
                        "description": "Create a DialogFragment for displaying the GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "onCancel(DialogInterface dialog)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateDialog(Bundle savedInstanceState)",
                        "return_type": "Dialog",
                        "description": "Returns a Dialog created by GoogleApiAvailability.getErrorDialog(Activity, int, int"
                    },
                    {
                        "name": "show(FragmentManager manager, String tag)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AccountPicker.AccountChooserOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/AccountPicker.AccountChooserOptions",
                "description": "Options for building an appropriate intent to launch the Account Picker.",
                "methods": []
            },
            {
                "name": "AccountPicker.AccountChooserOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/AccountPicker.AccountChooserOptions.Builder",
                "description": "The builder for creating an instance of the AccountPicker.AccountChooserOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AccountPicker.AccountChooserOptions",
                        "description": "Builds an instance of AccountPicker.AccountChooserOptions."
                    },
                    {
                        "name": "setAllowableAccounts(List<Account> allowableAccounts)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "A list of Accounts that limit the accounts that are shown in the Account Picker to those in this list."
                    },
                    {
                        "name": "setAllowableAccountsTypes(List<String> allowableAccountTypes)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the type of allowed types of accounts."
                    },
                    {
                        "name": "setAlwaysShowAccountPicker(boolean alwaysShowAccountPicker)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "If true then shows the Account Picker even if there is just one account to choose from."
                    },
                    {
                        "name": "setOptionsForAddingAccount(Bundle options)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the options to be passed as the addAccountOptions parameter in AccountManager#addAccount("
                    },
                    {
                        "name": "setSelectedAccount(Account selectedAccount)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the specified account to \"selected\" in the Account Picker if this account is shown there."
                    },
                    {
                        "name": "setTitleOverrideText(String titleOverrideText)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Overrides the default title of the Account Picker."
                    }
                ]
            },
            {
                "name": "AccountPicker.AccountChooserOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/common/AccountPicker.AccountChooserOptions.Builder",
                "description": "The builder for creating an instance of the AccountPicker.AccountChooserOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AccountPicker.AccountChooserOptions",
                        "description": "Builds an instance of AccountPicker.AccountChooserOptions."
                    },
                    {
                        "name": "setAllowableAccounts(List<Account> allowableAccounts)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "A list of Accounts that limit the accounts that are shown in the Account Picker to those in this list."
                    },
                    {
                        "name": "setAllowableAccountsTypes(List<String> allowableAccountTypes)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the type of allowed types of accounts."
                    },
                    {
                        "name": "setAlwaysShowAccountPicker(boolean alwaysShowAccountPicker)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "If true then shows the Account Picker even if there is just one account to choose from."
                    },
                    {
                        "name": "setOptionsForAddingAccount(Bundle options)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the options to be passed as the addAccountOptions parameter in AccountManager#addAccount("
                    },
                    {
                        "name": "setSelectedAccount(Account selectedAccount)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Sets the specified account to \"selected\" in the Account Picker if this account is shown there."
                    },
                    {
                        "name": "setTitleOverrideText(String titleOverrideText)",
                        "return_type": "AccountPicker.AccountChooserOptions.Builder",
                        "description": "Overrides the default title of the Account Picker."
                    }
                ]
            }
        ]
    },
    {
        "name": "ads",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/package-summary",
        "classes": [
            {
                "name": "AdapterResponseInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdapterResponseInfo",
                "description": "Response information for an individual ad network in an ad response.",
                "methods": [
                    {
                        "name": "getAdError()",
                        "return_type": "AdError",
                        "description": "Gets the error that occurred while rendering the ad."
                    },
                    {
                        "name": "getAdapterClassName()",
                        "return_type": "String",
                        "description": "Gets a class name that identifies the ad network adapter."
                    },
                    {
                        "name": "getCredentials()",
                        "return_type": "Bundle",
                        "description": "Gets a bundle containing adapter credentials specified in the AdMob or Ad Manager UI."
                    },
                    {
                        "name": "getLatencyMillis()",
                        "return_type": "long",
                        "description": "Gets the amount of time the ad network adapter spent loading an ad."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a log friendly string version of this object."
                    }
                ]
            },
            {
                "name": "AdError",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdError",
                "description": "Error information about why an ad operation failed.",
                "methods": [
                    {
                        "name": "getCause()",
                        "return_type": "AdError",
                        "description": "Gets the cause of this error or null if the cause is nonexistent or unknown."
                    },
                    {
                        "name": "getCode()",
                        "return_type": "int",
                        "description": "Gets the error's code."
                    },
                    {
                        "name": "getDomain()",
                        "return_type": "String",
                        "description": "Gets the domain of the error."
                    },
                    {
                        "name": "getMessage()",
                        "return_type": "String",
                        "description": "Gets the message describing the error."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a log friendly string version of this object."
                    }
                ]
            },
            {
                "name": "AdInspectorError",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdInspectorError",
                "description": "Error information about why the ad inspector failed.",
                "methods": [
                    {
                        "name": "getCode()",
                        "return_type": "int",
                        "description": "Gets the error's code."
                    }
                ]
            },
            {
                "name": "AdListener",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdListener",
                "description": "A listener for receiving notifications during the lifecycle of an ad.",
                "methods": [
                    {
                        "name": "onAdClicked()",
                        "return_type": "void",
                        "description": "Called when a click is recorded for an ad."
                    },
                    {
                        "name": "onAdClosed()",
                        "return_type": "void",
                        "description": "Called when the user is about to return to the application after clicking on an ad."
                    },
                    {
                        "name": "onAdFailedToLoad(LoadAdError adError)",
                        "return_type": "void",
                        "description": "Called when an ad request failed."
                    },
                    {
                        "name": "onAdImpression()",
                        "return_type": "void",
                        "description": "Called when an impression is recorded for an ad."
                    },
                    {
                        "name": "onAdLoaded()",
                        "return_type": "void",
                        "description": "Called when an ad is received."
                    },
                    {
                        "name": "onAdOpened()",
                        "return_type": "void",
                        "description": "Called when an ad opens an overlay that covers the screen."
                    }
                ]
            },
            {
                "name": "AdLoadCallback<AdT>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdLoadCallback",
                "description": "Callback to be invoked when an ad finishes loading.",
                "methods": [
                    {
                        "name": "onAdFailedToLoad(LoadAdError adError)",
                        "return_type": "void",
                        "description": "Called when an ad fails to load."
                    },
                    {
                        "name": "onAdLoaded(AdT adT)",
                        "return_type": "void",
                        "description": "Called when an ad successfully loads."
                    }
                ]
            },
            {
                "name": "AdLoader",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdLoader",
                "description": "An object for requesting ads.",
                "methods": [
                    {
                        "name": "isLoading()",
                        "return_type": "boolean",
                        "description": "Returns true if the ad is loading."
                    },
                    {
                        "name": "loadAd(AdRequest adRequest)",
                        "return_type": "void",
                        "description": "Loads an ad."
                    },
                    {
                        "name": "loadAd(AdManagerAdRequest adManagerAdRequest)",
                        "return_type": "void",
                        "description": "Loads an ad."
                    },
                    {
                        "name": "loadAds(AdRequest adRequest, int maxNumberOfAds)",
                        "return_type": "void",
                        "description": "Sends a request for maxNumberOfAds ads."
                    }
                ]
            },
            {
                "name": "AdLoader.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdLoader.Builder",
                "description": "Builder for a AdLoader.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdLoader",
                        "description": "Returns an AdLoader or empty if there was an error was encountered."
                    },
                    {
                        "name": "forAdManagerAdView(OnAdManagerAdViewLoadedListener listener, AdSize... adSizes)",
                        "return_type": "AdLoader.Builder",
                        "description": "Registers a listener to handle loading a Google Ad Manager banner ad."
                    },
                    {
                        "name": "forCustomFormatAd(String customFormatId, NativeCustomFormatAd.OnCustomFormatAdLoadedListener adLoadedListener, NativeCustomFormatAd.OnCustomClickListener customClickListener)",
                        "return_type": "AdLoader.Builder",
                        "description": "Enables the AdLoader to load custom format ads."
                    },
                    {
                        "name": "forCustomTemplateAd(String templateId, NativeCustomTemplateAd.OnCustomTemplateAdLoadedListener adLoadedListener, NativeCustomTemplateAd.OnCustomClickListener customClickListener)",
                        "return_type": "AdLoader.Builder",
                        "description": "This method is deprecated. Use forCustomFormatAd(String, NativeCustomFormatAd.OnCustomFormatAdLoadedListener, NativeCustomFormatAd.OnCustomClickListener"
                    },
                    {
                        "name": "forNativeAd(NativeAd.OnNativeAdLoadedListener listener)",
                        "return_type": "AdLoader.Builder",
                        "description": "Registers a listener to handle loading a NativeAd."
                    },
                    {
                        "name": "forUnifiedNativeAd(UnifiedNativeAd.OnUnifiedNativeAdLoadedListener listener)",
                        "return_type": "AdLoader.Builder",
                        "description": "This method is deprecated. Use forNativeAd(NativeAd.OnNativeAdLoadedListener"
                    },
                    {
                        "name": "withAdListener(AdListener listener)",
                        "return_type": "AdLoader.Builder",
                        "description": ""
                    },
                    {
                        "name": "withAdManagerAdViewOptions(AdManagerAdViewOptions options)",
                        "return_type": "AdLoader.Builder",
                        "description": "Sets options to use for loading a Google Ad Manager ad view."
                    },
                    {
                        "name": "withNativeAdOptions(NativeAdOptions options)",
                        "return_type": "AdLoader.Builder",
                        "description": "Sets the native ad options to the ad loader builder."
                    },
                    {
                        "name": "withNativeAdOptions(NativeAdOptions options)",
                        "return_type": "AdLoader.Builder",
                        "description": "This method is deprecated. Use withNativeAdOptions(NativeAdOptions"
                    }
                ]
            },
            {
                "name": "AdRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdRequest",
                "description": "An AdRequest contains targeting information used to fetch an ad.",
                "methods": [
                    {
                        "name": "getContentUrl()",
                        "return_type": "String",
                        "description": "Returns the content URL targeting information."
                    },
                    {
                        "name": "getCustomEventExtrasBundle(Class<T> adapterClass)",
                        "return_type": "<T extendsCustomEvent>Bundle",
                        "description": "Returns extra parameters to pass to a specific custom event adapter."
                    },
                    {
                        "name": "getKeywords()",
                        "return_type": "Set<String>",
                        "description": "Returns targeting information keywords."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "Location",
                        "description": "Returns the user's location targeting information."
                    },
                    {
                        "name": "getNeighboringContentUrls()",
                        "return_type": "List<String>",
                        "description": "Returns the list of neighboring content URLs or an empty list if no URLs were set."
                    },
                    {
                        "name": "getNetworkExtrasBundle(Class<T> adapterClass)",
                        "return_type": "<T extendsMediationExtrasReceiver>Bundle",
                        "description": "Returns extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "isTestDevice(Context context)",
                        "return_type": "boolean",
                        "description": "Returns true if this device will receive test ads."
                    }
                ]
            },
            {
                "name": "AdRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdRequest.Builder",
                "description": "Builds an AdRequest.",
                "methods": [
                    {
                        "name": "addCustomEventExtrasBundle(Class<? extends CustomEvent> adapterClass, Bundle customEventExtras)",
                        "return_type": "AdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific custom event adapter."
                    },
                    {
                        "name": "addKeyword(String keyword)",
                        "return_type": "AdRequest.Builder",
                        "description": "Adds a keyword for targeting purposes."
                    },
                    {
                        "name": "addNetworkExtras(NetworkExtras networkExtras)",
                        "return_type": "AdRequest.Builder",
                        "description": "This method is deprecated. Use addNetworkExtrasBundle(Class, Bundle"
                    },
                    {
                        "name": "addNetworkExtrasBundle(Class<? extends MediationExtrasReceiver> adapterClass, Bundle networkExtras)",
                        "return_type": "AdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "build()",
                        "return_type": "AdRequest",
                        "description": "Constructs an AdRequest with the specified attributes."
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets the content URL for a web site whose content matches the app's primary content."
                    },
                    {
                        "name": "setHttpTimeoutMillis(int httpTimeoutMillis)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets a custom timeout for HTTPS calls made by the Google Mobile Ads SDK during an ad request."
                    },
                    {
                        "name": "setLocation(Location location)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets the user's location for mediation targeting purposes."
                    },
                    {
                        "name": "setNeighboringContentUrls(List<String> neighboringContentUrls)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets URLs representing web content near an ad."
                    },
                    {
                        "name": "setRequestAgent(String requestAgent)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets the request agent string to identify the ad request's origin."
                    }
                ]
            },
            {
                "name": "AdSize",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdSize",
                "description": "The size of a banner ad.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": "Compares this AdSize with the specified object and indicates if they are equal."
                    },
                    {
                        "name": "getCurrentOrientationAnchoredAdaptiveBannerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a Google-optimized height to create a banner ad."
                    },
                    {
                        "name": "getCurrentOrientationInlineAdaptiveBannerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getCurrentOrientationInterscrollerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an interscroller AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getHeight()",
                        "return_type": "int",
                        "description": "Returns the height of this AdSize in density-independent pixels."
                    },
                    {
                        "name": "getHeightInPixels(Context context)",
                        "return_type": "int",
                        "description": "Returns the height of this AdSize in physical pixels."
                    },
                    {
                        "name": "getInlineAdaptiveBannerAdSize(int width, int maxHeight)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getLandscapeAnchoredAdaptiveBannerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a Google-optimized height to create a banner ad."
                    },
                    {
                        "name": "getLandscapeInlineAdaptiveBannerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getLandscapeInterscrollerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an interscroller AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getPortraitAnchoredAdaptiveBannerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a Google-optimized height to create a banner ad."
                    },
                    {
                        "name": "getPortraitInlineAdaptiveBannerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getPortraitInterscrollerAdSize(Context context, int width)",
                        "return_type": "staticAdSize",
                        "description": "Returns an interscroller AdSize with the given width and a height that is always 0."
                    },
                    {
                        "name": "getWidth()",
                        "return_type": "int",
                        "description": "Returns the width of this AdSize in density-independent pixels."
                    },
                    {
                        "name": "getWidthInPixels(Context context)",
                        "return_type": "int",
                        "description": "Returns the width of this AdSize in physical pixels."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isAutoHeight()",
                        "return_type": "boolean",
                        "description": "Returns whether this AdSize is auto-height."
                    },
                    {
                        "name": "isFluid()",
                        "return_type": "boolean",
                        "description": "Returns whether this AdSize is of fluid size or not."
                    },
                    {
                        "name": "isFullWidth()",
                        "return_type": "boolean",
                        "description": "Returns whether this AdSize is full-width."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AdValue",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdValue",
                "description": "The monetary value earned from an ad.",
                "methods": [
                    {
                        "name": "getCurrencyCode()",
                        "return_type": "String",
                        "description": "The value's ISO 4217 currency code."
                    },
                    {
                        "name": "getPrecisionType()",
                        "return_type": "int",
                        "description": "The precision type of the reported ad value."
                    },
                    {
                        "name": "getValueMicros()",
                        "return_type": "long",
                        "description": "The ad's value in micro-units, where 1,000,000 micro-units equal one unit of the currency."
                    }
                ]
            },
            {
                "name": "AdView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/AdView",
                "description": "The View to display banner ads.",
                "methods": []
            },
            {
                "name": "BaseAdView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/BaseAdView",
                "description": "The base ad View for displaying banner ads.",
                "methods": [
                    {
                        "name": "destroy()",
                        "return_type": "void",
                        "description": "Destroys the ad view."
                    },
                    {
                        "name": "getAdListener()",
                        "return_type": "AdListener",
                        "description": "Returns the AdListener for this ad view."
                    },
                    {
                        "name": "getAdSize()",
                        "return_type": "AdSize",
                        "description": "Returns the size of the ad."
                    },
                    {
                        "name": "getAdUnitId()",
                        "return_type": "String",
                        "description": "Returns the ad unit ID."
                    },
                    {
                        "name": "getOnPaidEventListener()",
                        "return_type": "OnPaidEventListener",
                        "description": "Gets the OnPaidEventListener for this ad view."
                    },
                    {
                        "name": "getResponseInfo()",
                        "return_type": "ResponseInfo",
                        "description": "Returns the ResponseInfo object for the loaded ad."
                    },
                    {
                        "name": "isLoading()",
                        "return_type": "boolean",
                        "description": "Returns true if the ad is loading."
                    },
                    {
                        "name": "loadAd(AdRequest adRequest)",
                        "return_type": "void",
                        "description": "Loads an ad."
                    },
                    {
                        "name": "pause()",
                        "return_type": "void",
                        "description": "Pauses any extra processing associated with this ad view."
                    },
                    {
                        "name": "resume()",
                        "return_type": "void",
                        "description": "Resumes an ad view after a previous call to pause("
                    },
                    {
                        "name": "setAdListener(AdListener adListener)",
                        "return_type": "void",
                        "description": "Sets an AdListener for this ad view."
                    },
                    {
                        "name": "setAdSize(AdSize adSize)",
                        "return_type": "void",
                        "description": "Sets the size of the ad."
                    },
                    {
                        "name": "setAdUnitId(String adUnitId)",
                        "return_type": "void",
                        "description": "Sets the ad unit ID."
                    },
                    {
                        "name": "setOnPaidEventListener(OnPaidEventListener listener)",
                        "return_type": "void",
                        "description": "Registers a callback to be invoked when this ad is estimated to have earned money."
                    }
                ]
            },
            {
                "name": "FullScreenContentCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/FullScreenContentCallback",
                "description": "Callback to be invoked when ads show and dismiss full screen content, such as a fullscreen ad experience or an in-app browser.",
                "methods": [
                    {
                        "name": "onAdClicked()",
                        "return_type": "void",
                        "description": "Called when a click is recorded for an ad."
                    },
                    {
                        "name": "onAdDismissedFullScreenContent()",
                        "return_type": "void",
                        "description": "Called when the ad dismissed full screen content."
                    },
                    {
                        "name": "onAdFailedToShowFullScreenContent(AdError adError)",
                        "return_type": "void",
                        "description": "Called when the ad failed to show full screen content."
                    },
                    {
                        "name": "onAdImpression()",
                        "return_type": "void",
                        "description": "Called when an impression is recorded for an ad."
                    },
                    {
                        "name": "onAdShowedFullScreenContent()",
                        "return_type": "void",
                        "description": "Called when the ad showed the full screen content."
                    }
                ]
            },
            {
                "name": "LoadAdError",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/LoadAdError",
                "description": "Error information about why an ad load operation failed.",
                "methods": [
                    {
                        "name": "getResponseInfo()",
                        "return_type": "ResponseInfo",
                        "description": "Gets the ResponseInfo of the error."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a log friendly string version of this object."
                    }
                ]
            },
            {
                "name": "MediationUtils",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/MediationUtils",
                "description": "Utility methods for mediation adapters.",
                "methods": [
                    {
                        "name": "findClosestSize(Context context, AdSize original, List<AdSize> potentials)",
                        "return_type": "staticAdSize",
                        "description": "Finds the closest supported AdSize from the list of potentials to the provided size."
                    }
                ]
            },
            {
                "name": "MobileAds",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/MobileAds",
                "description": "Class contains logic that applies to the Google Mobile Ads SDK as a whole.",
                "methods": [
                    {
                        "name": "disableMediationAdapterInitialization(Context context)",
                        "return_type": "static void",
                        "description": "Call before initialize(Context, OnInitializationCompleteListener"
                    },
                    {
                        "name": "getInitializationStatus()",
                        "return_type": "staticInitializationStatus",
                        "description": "Gets the SDK initialization status."
                    },
                    {
                        "name": "getRequestConfiguration()",
                        "return_type": "staticRequestConfiguration",
                        "description": "Gets the global RequestConfiguration."
                    },
                    {
                        "name": "getVersionString()",
                        "return_type": "staticString",
                        "description": "Gets the version string of Google Mobile Ads SDK."
                    },
                    {
                        "name": "initialize(Context context)",
                        "return_type": "static void",
                        "description": "Initializes the Google Mobile Ads SDK."
                    },
                    {
                        "name": "initialize(Context context, OnInitializationCompleteListener listener)",
                        "return_type": "static void",
                        "description": "Initializes the Google Mobile Ads SDK."
                    },
                    {
                        "name": "openAdInspector(Context context, OnAdInspectorClosedListener listener)",
                        "return_type": "static void",
                        "description": "Opens the ad inspector UI."
                    },
                    {
                        "name": "openDebugMenu(Context context, String adUnitId)",
                        "return_type": "static void",
                        "description": "Opens the debug menu."
                    },
                    {
                        "name": "setAppMuted(boolean muted)",
                        "return_type": "static void",
                        "description": "Sets the current app mute state."
                    },
                    {
                        "name": "setAppVolume(float volume)",
                        "return_type": "static void",
                        "description": "Sets the current app volume."
                    },
                    {
                        "name": "setRequestConfiguration(RequestConfiguration requestConfiguration)",
                        "return_type": "static void",
                        "description": "Sets the global RequestConfiguration that will be used for every AdRequest during the app's session."
                    }
                ]
            },
            {
                "name": "RequestConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/RequestConfiguration",
                "description": "Global configuration that will be used for every AdRequest.",
                "methods": [
                    {
                        "name": "getMaxAdContentRating()",
                        "return_type": "String",
                        "description": "Returns the value set by the corresponding RequestConfiguration.Builder.setMaxAdContentRating(String"
                    },
                    {
                        "name": "getTagForChildDirectedTreatment()",
                        "return_type": "int",
                        "description": "Returns the value set by the corresponding RequestConfiguration.Builder.setTagForChildDirectedTreatment(int"
                    },
                    {
                        "name": "getTagForUnderAgeOfConsent()",
                        "return_type": "int",
                        "description": "Returns the value set by the corresponding RequestConfiguration.Builder.setTagForUnderAgeOfConsent(int"
                    },
                    {
                        "name": "getTestDeviceIds()",
                        "return_type": "List<String>",
                        "description": "Returns the test device IDs corresponding to test device which will always request test ads."
                    },
                    {
                        "name": "toBuilder()",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "Returns a RequestConfiguration.Builder with values from this RequestConfiguration."
                    }
                ]
            },
            {
                "name": "RequestConfiguration.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/RequestConfiguration.Builder",
                "description": "Builder for RequestConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "RequestConfiguration",
                        "description": "Builds the RequestConfiguration."
                    },
                    {
                        "name": "setMaxAdContentRating(String maxAdContentRating)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "Sets a maximum ad content rating."
                    },
                    {
                        "name": "setTagForChildDirectedTreatment(int tagForChildDirectedTreatment)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "This method allows you to specify whether you would like your app to be treated as child-directed for purposes of the Children’s Online Privacy Protection Act (COPPA"
                    },
                    {
                        "name": "setTagForUnderAgeOfConsent(int tagForUnderAgeOfConsent)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "This method allows you to mark your app to receive treatment for users in the European Economic Area (EEA"
                    },
                    {
                        "name": "setTestDeviceIds(List<String> testDeviceIds)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "Sets a list of test device IDs corresponding to test devices which will always request test ads."
                    }
                ]
            },
            {
                "name": "ResponseInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/ResponseInfo",
                "description": "Information about an ad response.",
                "methods": [
                    {
                        "name": "getAdapterResponses()",
                        "return_type": "List<AdapterResponseInfo>",
                        "description": "Returns the list of AdapterResponseInfo containing metadata for each adapter included in the ad response."
                    },
                    {
                        "name": "getMediationAdapterClassName()",
                        "return_type": "String",
                        "description": "Returns the mediation adapter class name of the ad network that loaded the ad."
                    },
                    {
                        "name": "getResponseId()",
                        "return_type": "String",
                        "description": "Returns the response ID for the loaded ad."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": "Returns a log friendly string version of this object."
                    }
                ]
            },
            {
                "name": "VideoController",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/VideoController",
                "description": "An object that provides playback control for video ads.",
                "methods": [
                    {
                        "name": "getVideoLifecycleCallbacks()",
                        "return_type": "VideoController.VideoLifecycleCallbacks",
                        "description": "Returns the previously provided VideoController.VideoLifecycleCallbacks or null if no instance was provided."
                    },
                    {
                        "name": "hasVideoContent()",
                        "return_type": "boolean",
                        "description": "Returns true if the current ad has video content."
                    },
                    {
                        "name": "isClickToExpandEnabled()",
                        "return_type": "boolean",
                        "description": "Returns true if the video ad is using click to expand behavior."
                    },
                    {
                        "name": "isCustomControlsEnabled()",
                        "return_type": "boolean",
                        "description": "Returns true if the video ad is using custom player controls."
                    },
                    {
                        "name": "isMuted()",
                        "return_type": "boolean",
                        "description": "Returns true if the video is currently muted, false otherwise."
                    },
                    {
                        "name": "mute(boolean mute)",
                        "return_type": "void",
                        "description": "Sets the video mute state."
                    },
                    {
                        "name": "pause()",
                        "return_type": "void",
                        "description": "Pauses the video ad if applicable."
                    },
                    {
                        "name": "play()",
                        "return_type": "void",
                        "description": "Play the video ad if applicable."
                    },
                    {
                        "name": "setVideoLifecycleCallbacks(VideoController.VideoLifecycleCallbacks callbacks)",
                        "return_type": "void",
                        "description": "Sets a listener that will receive callbacks for video events."
                    },
                    {
                        "name": "stop()",
                        "return_type": "void",
                        "description": "Stops video playback."
                    }
                ]
            },
            {
                "name": "VideoController.VideoLifecycleCallbacks",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/VideoController.VideoLifecycleCallbacks",
                "description": "Callback for receiving updates on video ad lifecycle events.",
                "methods": [
                    {
                        "name": "onVideoEnd()",
                        "return_type": "void",
                        "description": "Called when video playback finishes."
                    },
                    {
                        "name": "onVideoMute(boolean isMuted)",
                        "return_type": "void",
                        "description": "Called when the video changes mute state."
                    },
                    {
                        "name": "onVideoPause()",
                        "return_type": "void",
                        "description": "Called when video playback is paused."
                    },
                    {
                        "name": "onVideoPlay()",
                        "return_type": "void",
                        "description": "Called when video playback is playing."
                    },
                    {
                        "name": "onVideoStart()",
                        "return_type": "void",
                        "description": "Called when video playback first begins."
                    }
                ]
            },
            {
                "name": "VideoOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/VideoOptions",
                "description": "Options for controlling video playback in supported ad formats (e.g.",
                "methods": [
                    {
                        "name": "getClickToExpandRequested()",
                        "return_type": "boolean",
                        "description": "Returns true if click to expand behavior is requested."
                    },
                    {
                        "name": "getCustomControlsRequested()",
                        "return_type": "boolean",
                        "description": "Returns true if custom video controls are requested."
                    },
                    {
                        "name": "getStartMuted()",
                        "return_type": "boolean",
                        "description": "Returns the initial mute state of the video."
                    }
                ]
            },
            {
                "name": "VideoOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/VideoOptions.Builder",
                "description": "Builder for VideoOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VideoOptions",
                        "description": "Constructs a VideoOptions object with the specified attributes."
                    },
                    {
                        "name": "setClickToExpandRequested(boolean clickToExpandRequested)",
                        "return_type": "VideoOptions.Builder",
                        "description": "Sets whether the AdLoader should request ads with the Click to Expand behavior enabled."
                    },
                    {
                        "name": "setCustomControlsRequested(boolean customControlsRequested)",
                        "return_type": "VideoOptions.Builder",
                        "description": "Requests custom video controls for video ads."
                    },
                    {
                        "name": "setStartMuted(boolean startMuted)",
                        "return_type": "VideoOptions.Builder",
                        "description": "Sets the initial mute state of the video."
                    }
                ]
            },
            {
                "name": "MediaContent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/MediaContent",
                "description": "Provides media content information.",
                "methods": [
                    {
                        "name": "getAspectRatio()",
                        "return_type": "abstract float",
                        "description": "Returns the aspect ratio of the media content."
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "abstract float",
                        "description": "Gets the current time of the video in seconds."
                    },
                    {
                        "name": "getDuration()",
                        "return_type": "abstract float",
                        "description": "Returns the duration of the video in seconds."
                    },
                    {
                        "name": "getMainImage()",
                        "return_type": "abstractDrawable",
                        "description": "Returns the main image to be displayed if the media content doesn't contain video."
                    },
                    {
                        "name": "getVideoController()",
                        "return_type": "abstractVideoController",
                        "description": "Returns the media content's video controller."
                    },
                    {
                        "name": "hasVideoContent()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the media content has video content."
                    },
                    {
                        "name": "setMainImage(Drawable drawable)",
                        "return_type": "abstract void",
                        "description": "Sets the optional main image to be displayed if the media content doesn't contain video."
                    }
                ]
            },
            {
                "name": "MuteThisAdListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/MuteThisAdListener",
                "description": "A listener that can be used to receive events when an ad is muted.",
                "methods": [
                    {
                        "name": "onAdMuted()",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MuteThisAdReason",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/MuteThisAdReason",
                "description": "An object used to represent the Mute This Ad reason.",
                "methods": [
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "Returns the text representing the mute reason."
                    }
                ]
            },
            {
                "name": "OnAdInspectorClosedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/OnAdInspectorClosedListener",
                "description": "Interface definition for a callback to be invoked when the ad inspector UI closes.",
                "methods": [
                    {
                        "name": "onAdInspectorClosed(AdInspectorError error)",
                        "return_type": "abstract void",
                        "description": "Called when the ad inspector UI has been closed."
                    }
                ]
            },
            {
                "name": "OnPaidEventListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/OnPaidEventListener",
                "description": "Interface definition for a callback to be invoked when an ad is estimated to have earned money.",
                "methods": [
                    {
                        "name": "onPaidEvent(AdValue value)",
                        "return_type": "abstract void",
                        "description": "Called when an ad is estimated to have earned money."
                    }
                ]
            },
            {
                "name": "OnUserEarnedRewardListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/OnUserEarnedRewardListener",
                "description": "Interface definition for a callback to be invoked when the user earned a reward.",
                "methods": [
                    {
                        "name": "onUserEarnedReward(RewardItem reward)",
                        "return_type": "abstract void",
                        "description": "Called when the user earned a reward."
                    }
                ]
            },
            {
                "name": "AdLoader.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/AdLoader.Builder",
                "description": "Builder for a AdLoader.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AdLoader",
                        "description": "Returns an AdLoader or empty if there was an error was encountered."
                    },
                    {
                        "name": "forAdManagerAdView(OnAdManagerAdViewLoadedListener listener, AdSize... adSizes)",
                        "return_type": "AdLoader.Builder",
                        "description": "Registers a listener to handle loading a Google Ad Manager banner ad."
                    },
                    {
                        "name": "forCustomFormatAd(String customFormatId, NativeCustomFormatAd.OnCustomFormatAdLoadedListener adLoadedListener, NativeCustomFormatAd.OnCustomClickListener customClickListener)",
                        "return_type": "AdLoader.Builder",
                        "description": "Enables the AdLoader to load custom format ads."
                    },
                    {
                        "name": "forCustomTemplateAd(String templateId, NativeCustomTemplateAd.OnCustomTemplateAdLoadedListener adLoadedListener, NativeCustomTemplateAd.OnCustomClickListener customClickListener)",
                        "return_type": "AdLoader.Builder",
                        "description": "This method is deprecated. Use forCustomFormatAd(String, NativeCustomFormatAd.OnCustomFormatAdLoadedListener, NativeCustomFormatAd.OnCustomClickListener"
                    },
                    {
                        "name": "forNativeAd(NativeAd.OnNativeAdLoadedListener listener)",
                        "return_type": "AdLoader.Builder",
                        "description": "Registers a listener to handle loading a NativeAd."
                    },
                    {
                        "name": "forUnifiedNativeAd(UnifiedNativeAd.OnUnifiedNativeAdLoadedListener listener)",
                        "return_type": "AdLoader.Builder",
                        "description": "This method is deprecated. Use forNativeAd(NativeAd.OnNativeAdLoadedListener"
                    },
                    {
                        "name": "withAdListener(AdListener listener)",
                        "return_type": "AdLoader.Builder",
                        "description": ""
                    },
                    {
                        "name": "withAdManagerAdViewOptions(AdManagerAdViewOptions options)",
                        "return_type": "AdLoader.Builder",
                        "description": "Sets options to use for loading a Google Ad Manager ad view."
                    },
                    {
                        "name": "withNativeAdOptions(NativeAdOptions options)",
                        "return_type": "AdLoader.Builder",
                        "description": "Sets the native ad options to the ad loader builder."
                    },
                    {
                        "name": "withNativeAdOptions(NativeAdOptions options)",
                        "return_type": "AdLoader.Builder",
                        "description": "This method is deprecated. Use withNativeAdOptions(NativeAdOptions"
                    }
                ]
            },
            {
                "name": "AdRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/AdRequest.Builder",
                "description": "Builds an AdRequest.",
                "methods": [
                    {
                        "name": "addCustomEventExtrasBundle(Class<? extends CustomEvent> adapterClass, Bundle customEventExtras)",
                        "return_type": "AdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific custom event adapter."
                    },
                    {
                        "name": "addKeyword(String keyword)",
                        "return_type": "AdRequest.Builder",
                        "description": "Adds a keyword for targeting purposes."
                    },
                    {
                        "name": "addNetworkExtras(NetworkExtras networkExtras)",
                        "return_type": "AdRequest.Builder",
                        "description": "This method is deprecated. Use addNetworkExtrasBundle(Class, Bundle"
                    },
                    {
                        "name": "addNetworkExtrasBundle(Class<? extends MediationExtrasReceiver> adapterClass, Bundle networkExtras)",
                        "return_type": "AdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "build()",
                        "return_type": "AdRequest",
                        "description": "Constructs an AdRequest with the specified attributes."
                    },
                    {
                        "name": "setContentUrl(String contentUrl)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets the content URL for a web site whose content matches the app's primary content."
                    },
                    {
                        "name": "setHttpTimeoutMillis(int httpTimeoutMillis)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets a custom timeout for HTTPS calls made by the Google Mobile Ads SDK during an ad request."
                    },
                    {
                        "name": "setLocation(Location location)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets the user's location for mediation targeting purposes."
                    },
                    {
                        "name": "setNeighboringContentUrls(List<String> neighboringContentUrls)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets URLs representing web content near an ad."
                    },
                    {
                        "name": "setRequestAgent(String requestAgent)",
                        "return_type": "AdRequest.Builder",
                        "description": "Sets the request agent string to identify the ad request's origin."
                    }
                ]
            },
            {
                "name": "RequestConfiguration.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/RequestConfiguration.Builder",
                "description": "Builder for RequestConfiguration.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "RequestConfiguration",
                        "description": "Builds the RequestConfiguration."
                    },
                    {
                        "name": "setMaxAdContentRating(String maxAdContentRating)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "Sets a maximum ad content rating."
                    },
                    {
                        "name": "setTagForChildDirectedTreatment(int tagForChildDirectedTreatment)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "This method allows you to specify whether you would like your app to be treated as child-directed for purposes of the Children’s Online Privacy Protection Act (COPPA"
                    },
                    {
                        "name": "setTagForUnderAgeOfConsent(int tagForUnderAgeOfConsent)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "This method allows you to mark your app to receive treatment for users in the European Economic Area (EEA"
                    },
                    {
                        "name": "setTestDeviceIds(List<String> testDeviceIds)",
                        "return_type": "RequestConfiguration.Builder",
                        "description": "Sets a list of test device IDs corresponding to test devices which will always request test ads."
                    }
                ]
            },
            {
                "name": "VideoController.VideoLifecycleCallbacks",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/VideoController.VideoLifecycleCallbacks",
                "description": "Callback for receiving updates on video ad lifecycle events.",
                "methods": [
                    {
                        "name": "onVideoEnd()",
                        "return_type": "void",
                        "description": "Called when video playback finishes."
                    },
                    {
                        "name": "onVideoMute(boolean isMuted)",
                        "return_type": "void",
                        "description": "Called when the video changes mute state."
                    },
                    {
                        "name": "onVideoPause()",
                        "return_type": "void",
                        "description": "Called when video playback is paused."
                    },
                    {
                        "name": "onVideoPlay()",
                        "return_type": "void",
                        "description": "Called when video playback is playing."
                    },
                    {
                        "name": "onVideoStart()",
                        "return_type": "void",
                        "description": "Called when video playback first begins."
                    }
                ]
            },
            {
                "name": "VideoOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/VideoOptions.Builder",
                "description": "Builder for VideoOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "VideoOptions",
                        "description": "Constructs a VideoOptions object with the specified attributes."
                    },
                    {
                        "name": "setClickToExpandRequested(boolean clickToExpandRequested)",
                        "return_type": "VideoOptions.Builder",
                        "description": "Sets whether the AdLoader should request ads with the Click to Expand behavior enabled."
                    },
                    {
                        "name": "setCustomControlsRequested(boolean customControlsRequested)",
                        "return_type": "VideoOptions.Builder",
                        "description": "Requests custom video controls for video ads."
                    },
                    {
                        "name": "setStartMuted(boolean startMuted)",
                        "return_type": "VideoOptions.Builder",
                        "description": "Sets the initial mute state of the video."
                    }
                ]
            }
        ]
    },
    {
        "name": "account",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/account/package-summary",
        "classes": [
            {
                "name": "WorkAccount",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/account/WorkAccount",
                "description": "WorkAccount provides APIs to manage work accounts (com.google.work).",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticWorkAccountClient",
                        "description": "Creates a new instance of WorkAccountClient for use in an Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticWorkAccountClient",
                        "description": "Creates a new instance of WorkAccountClient for use in a Context."
                    }
                ]
            },
            {
                "name": "WorkAccountClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/account/WorkAccountClient",
                "description": "Client to manage Android for Work Accounts.",
                "methods": [
                    {
                        "name": "addWorkAccount(String token)",
                        "return_type": "Task<Account>",
                        "description": "Adds a work account to AccountManager."
                    },
                    {
                        "name": "removeWorkAccount(Account account)",
                        "return_type": "Task<Void>",
                        "description": "Removes a work account from AccountManager."
                    },
                    {
                        "name": "setWorkAuthenticatorEnabled(boolean enabled)",
                        "return_type": "Task<Void>",
                        "description": "Changes the availability of work accounts in AccountManager."
                    }
                ]
            },
            {
                "name": "WorkAccountApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/account/WorkAccountApi",
                "description": "This interface is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity) instead.",
                "methods": [
                    {
                        "name": "addWorkAccount(GoogleApiClient apiClient, String token)",
                        "return_type": "abstractPendingResult<WorkAccountApi.AddAccountResult>",
                        "description": "This method is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity"
                    },
                    {
                        "name": "removeWorkAccount(GoogleApiClient apiClient, Account account)",
                        "return_type": "abstractPendingResult<Result>",
                        "description": "This method is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity"
                    },
                    {
                        "name": "setWorkAuthenticatorEnabled(GoogleApiClient apiClient, boolean enabled)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity"
                    },
                    {
                        "name": "setWorkAuthenticatorEnabledWithResult(GoogleApiClient apiClient, boolean enabled)",
                        "return_type": "abstractPendingResult<Result>",
                        "description": "This method is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity"
                    }
                ]
            },
            {
                "name": "WorkAccountApi.AddAccountResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/account/WorkAccountApi.AddAccountResult",
                "description": "This interface is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity) instead.",
                "methods": [
                    {
                        "name": "getAccount()",
                        "return_type": "abstractAccount",
                        "description": "Returns a Account that has been added."
                    }
                ]
            },
            {
                "name": "WorkAccountApi.AddAccountResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/auth/account/WorkAccountApi.AddAccountResult",
                "description": "This interface is deprecated. Use WorkAccountClient via WorkAccount.getClient(Activity) instead.",
                "methods": [
                    {
                        "name": "getAccount()",
                        "return_type": "abstractAccount",
                        "description": "Returns a Account that has been added."
                    }
                ]
            }
        ]
    },
    {
        "name": "maps",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/maps/package-summary",
        "classes": [
            {
                "name": "CameraUpdate",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/CameraUpdate",
                "description": "Defines a camera move.",
                "methods": []
            },
            {
                "name": "CameraUpdateFactory",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/CameraUpdateFactory",
                "description": "A class containing methods for creating CameraUpdate objects that change a map's camera.",
                "methods": [
                    {
                        "name": "newCameraPosition(CameraPosition cameraPosition)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that moves the camera to a specified CameraPosition."
                    },
                    {
                        "name": "newLatLng(LatLng latLng)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that moves the center of the screen to a latitude and longitude specified by a LatLng object."
                    },
                    {
                        "name": "newLatLngBounds(LatLngBounds bounds, int padding)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that transforms the camera such that the specified latitude/longitude bounds are centered on screen at the greatest possible zoom level."
                    },
                    {
                        "name": "newLatLngBounds(LatLngBounds bounds, int width, int height, int padding)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that transforms the camera such that the specified latitude/longitude bounds are centered on screen within a bounding box of specified dimensions at the greatest possible zoom level."
                    },
                    {
                        "name": "newLatLngZoom(LatLng latLng, float zoom)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that moves the center of the screen to a latitude and longitude specified by a LatLng object, and moves to the given zoom level."
                    },
                    {
                        "name": "scrollBy(float xPixel, float yPixel)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that scrolls the camera over the map, shifting the center of view by the specified number of pixels in the x and y directions."
                    },
                    {
                        "name": "zoomBy(float amount, Point focus)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that shifts the zoom level of the current camera viewpoint."
                    },
                    {
                        "name": "zoomBy(float amount)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that shifts the zoom level of the current camera viewpoint."
                    },
                    {
                        "name": "zoomIn()",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that zooms in on the map by moving the viewpoint's height closer to the Earth's surface."
                    },
                    {
                        "name": "zoomOut()",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that zooms out on the map by moving the viewpoint's height farther away from the Earth's surface."
                    },
                    {
                        "name": "zoomTo(float zoom)",
                        "return_type": "staticCameraUpdate",
                        "description": "Returns a CameraUpdate that moves the camera viewpoint to a particular zoom level."
                    }
                ]
            },
            {
                "name": "GoogleMap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap",
                "description": "This is the main class of the Google Maps SDK for Android and is the entry point for all methods related to the map.",
                "methods": [
                    {
                        "name": "addCircle(CircleOptions options)",
                        "return_type": "finalCircle",
                        "description": "Add a circle to this map."
                    },
                    {
                        "name": "addGroundOverlay(GroundOverlayOptions options)",
                        "return_type": "finalGroundOverlay",
                        "description": "Adds an image to this map."
                    },
                    {
                        "name": "addMarker(MarkerOptions options)",
                        "return_type": "finalMarker",
                        "description": "Adds a marker to this map."
                    },
                    {
                        "name": "addPolygon(PolygonOptions options)",
                        "return_type": "finalPolygon",
                        "description": "Adds a polygon to this map."
                    },
                    {
                        "name": "addPolyline(PolylineOptions options)",
                        "return_type": "finalPolyline",
                        "description": "Adds a polyline to this map."
                    },
                    {
                        "name": "addTileOverlay(TileOverlayOptions options)",
                        "return_type": "finalTileOverlay",
                        "description": "Adds a tile overlay to this map."
                    },
                    {
                        "name": "animateCamera(CameraUpdate update, GoogleMap.CancelableCallback callback)",
                        "return_type": "final void",
                        "description": "Animates the movement of the camera from the current position to the position defined in the update and calls an optional callback on completion."
                    },
                    {
                        "name": "animateCamera(CameraUpdate update)",
                        "return_type": "final void",
                        "description": "Animates the movement of the camera from the current position to the position defined in the update."
                    },
                    {
                        "name": "animateCamera(CameraUpdate update, int durationMs, GoogleMap.CancelableCallback callback)",
                        "return_type": "final void",
                        "description": "Moves the map according to the update with an animation over a specified duration, and calls an optional callback on completion."
                    },
                    {
                        "name": "clear()",
                        "return_type": "final void",
                        "description": "Removes all markers, polylines, polygons, overlays, etc from the map."
                    },
                    {
                        "name": "getCameraPosition()",
                        "return_type": "finalCameraPosition",
                        "description": "Gets the current position of the camera."
                    },
                    {
                        "name": "getFocusedBuilding()",
                        "return_type": "IndoorBuilding",
                        "description": "Gets the currently focused building."
                    },
                    {
                        "name": "getMapType()",
                        "return_type": "final int",
                        "description": "Gets the type of map that's currently displayed."
                    },
                    {
                        "name": "getMaxZoomLevel()",
                        "return_type": "final float",
                        "description": "Returns the maximum zoom level for the current camera position."
                    },
                    {
                        "name": "getMinZoomLevel()",
                        "return_type": "final float",
                        "description": "Returns the minimum zoom level."
                    },
                    {
                        "name": "getMyLocation()",
                        "return_type": "finalLocation",
                        "description": "This method is deprecated. Use com.google.android.gms.location.FusedLocationProviderApi instead. FusedLocationProviderApi provides improved location finding and power usage and is used by the \"My Location\" blue dot. See the MyLocationDemoActivity in the sample applications folder for example code, or the Location Developer Guide."
                    },
                    {
                        "name": "getProjection()",
                        "return_type": "finalProjection",
                        "description": "Returns a Projection object that you can use to convert between screen coordinates and latitude/longitude coordinates."
                    },
                    {
                        "name": "getUiSettings()",
                        "return_type": "finalUiSettings",
                        "description": "Gets the user interface settings for the map."
                    },
                    {
                        "name": "isBuildingsEnabled()",
                        "return_type": "final boolean",
                        "description": "Returns whether 3D buildings layer is enabled."
                    },
                    {
                        "name": "isIndoorEnabled()",
                        "return_type": "final boolean",
                        "description": "Gets whether indoor maps are currently enabled."
                    },
                    {
                        "name": "isMyLocationEnabled()",
                        "return_type": "final boolean",
                        "description": "Gets the status of the my-location layer."
                    },
                    {
                        "name": "isTrafficEnabled()",
                        "return_type": "final boolean",
                        "description": "Checks whether the map is drawing traffic data."
                    },
                    {
                        "name": "moveCamera(CameraUpdate update)",
                        "return_type": "final void",
                        "description": "Repositions the camera according to the instructions defined in the update."
                    },
                    {
                        "name": "resetMinMaxZoomPreference()",
                        "return_type": "void",
                        "description": "Removes any previously specified upper and lower zoom bounds."
                    },
                    {
                        "name": "setBuildingsEnabled(boolean enabled)",
                        "return_type": "final void",
                        "description": "Turns the 3D buildings layer on or off."
                    },
                    {
                        "name": "setContentDescription(String description)",
                        "return_type": "final void",
                        "description": "Sets a contentDescription for the map."
                    },
                    {
                        "name": "setIndoorEnabled(boolean enabled)",
                        "return_type": "final boolean",
                        "description": "Sets whether indoor maps should be enabled."
                    },
                    {
                        "name": "setInfoWindowAdapter(GoogleMap.InfoWindowAdapter adapter)",
                        "return_type": "final void",
                        "description": "Sets a custom renderer for the contents of info windows."
                    },
                    {
                        "name": "setLatLngBoundsForCameraTarget(LatLngBounds bounds)",
                        "return_type": "void",
                        "description": "Specifies a LatLngBounds to constrain the camera target, so that when users scroll and pan the map, the camera target does not move outside these bounds."
                    },
                    {
                        "name": "setLocationSource(LocationSource source)",
                        "return_type": "final void",
                        "description": "Replaces the location source of the my-location layer."
                    },
                    {
                        "name": "setMapStyle(MapStyleOptions style)",
                        "return_type": "boolean",
                        "description": "Sets the styling of the base map."
                    },
                    {
                        "name": "setMapType(int type)",
                        "return_type": "final void",
                        "description": "Sets the type of map tiles that should be displayed."
                    },
                    {
                        "name": "setMaxZoomPreference(float maxZoomPreference)",
                        "return_type": "void",
                        "description": "Sets a preferred upper bound for the camera zoom."
                    },
                    {
                        "name": "setMinZoomPreference(float minZoomPreference)",
                        "return_type": "void",
                        "description": "Sets a preferred lower bound for the camera zoom."
                    },
                    {
                        "name": "setMyLocationEnabled(boolean enabled)",
                        "return_type": "final void",
                        "description": "Enables or disables the my-location layer."
                    },
                    {
                        "name": "setOnCameraChangeListener(GoogleMap.OnCameraChangeListener listener)",
                        "return_type": "final void",
                        "description": "This method is deprecated. Replaced by setOnCameraMoveStartedListener(GoogleMap.OnCameraMoveStartedListener"
                    },
                    {
                        "name": "setOnCameraIdleListener(GoogleMap.OnCameraIdleListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that is invoked when camera movement has ended."
                    },
                    {
                        "name": "setOnCameraMoveCanceledListener(GoogleMap.OnCameraMoveCanceledListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that is invoked when camera motion is stopped or interrupted by a new type of animation."
                    },
                    {
                        "name": "setOnCameraMoveListener(GoogleMap.OnCameraMoveListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that is invoked repeatedly while the camera is in motion."
                    },
                    {
                        "name": "setOnCameraMoveStartedListener(GoogleMap.OnCameraMoveStartedListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the camera starts moving or the reason for camera motion has changed."
                    },
                    {
                        "name": "setOnCircleClickListener(GoogleMap.OnCircleClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a circle is clicked."
                    },
                    {
                        "name": "setOnGroundOverlayClickListener(GoogleMap.OnGroundOverlayClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a ground overlay is clicked."
                    },
                    {
                        "name": "setOnIndoorStateChangeListener(GoogleMap.OnIndoorStateChangeListener listener)",
                        "return_type": "final void",
                        "description": "Sets or clears the listener for indoor events."
                    },
                    {
                        "name": "setOnInfoWindowClickListener(GoogleMap.OnInfoWindowClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a marker info window is clicked."
                    },
                    {
                        "name": "setOnInfoWindowCloseListener(GoogleMap.OnInfoWindowCloseListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a marker's info window is closed."
                    },
                    {
                        "name": "setOnInfoWindowLongClickListener(GoogleMap.OnInfoWindowLongClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a marker's info window is long pressed."
                    },
                    {
                        "name": "setOnMapClickListener(GoogleMap.OnMapClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the map is tapped."
                    },
                    {
                        "name": "setOnMapLoadedCallback(GoogleMap.OnMapLoadedCallback callback)",
                        "return_type": "void",
                        "description": "Sets a callback that's invoked when this map has finished rendering."
                    },
                    {
                        "name": "setOnMapLongClickListener(GoogleMap.OnMapLongClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the map is long pressed."
                    },
                    {
                        "name": "setOnMarkerClickListener(GoogleMap.OnMarkerClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a marker is clicked."
                    },
                    {
                        "name": "setOnMarkerDragListener(GoogleMap.OnMarkerDragListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a marker is dragged."
                    },
                    {
                        "name": "setOnMyLocationButtonClickListener(GoogleMap.OnMyLocationButtonClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the my location button is clicked."
                    },
                    {
                        "name": "setOnMyLocationChangeListener(GoogleMap.OnMyLocationChangeListener listener)",
                        "return_type": "final void",
                        "description": "This method is deprecated. use com.google.android.gms.location.FusedLocationProviderApi instead. FusedLocationProviderApi provides improved location finding and power usage and is used by the \"My Location\" blue dot. See the MyLocationDemoActivity in the sample applications folder for example code, or the Location Developer Guide."
                    },
                    {
                        "name": "setOnMyLocationClickListener(GoogleMap.OnMyLocationClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the My Location dot (which signifies the user's location"
                    },
                    {
                        "name": "setOnPoiClickListener(GoogleMap.OnPoiClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a listener which will be triggered when a POI is clicked or tapped."
                    },
                    {
                        "name": "setOnPolygonClickListener(GoogleMap.OnPolygonClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a polygon is clicked."
                    },
                    {
                        "name": "setOnPolylineClickListener(GoogleMap.OnPolylineClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when a polyline is clicked."
                    },
                    {
                        "name": "setPadding(int left, int top, int right, int bottom)",
                        "return_type": "final void",
                        "description": "Sets padding on the map."
                    },
                    {
                        "name": "setTrafficEnabled(boolean enabled)",
                        "return_type": "final void",
                        "description": "Turns the traffic layer on or off."
                    },
                    {
                        "name": "snapshot(GoogleMap.SnapshotReadyCallback callback, Bitmap bitmap)",
                        "return_type": "final void",
                        "description": "Takes a snapshot of the map."
                    },
                    {
                        "name": "snapshot(GoogleMap.SnapshotReadyCallback callback)",
                        "return_type": "final void",
                        "description": "Takes a snapshot of the map."
                    },
                    {
                        "name": "stopAnimation()",
                        "return_type": "final void",
                        "description": "Stops the camera animation if there is one in progress."
                    }
                ]
            },
            {
                "name": "GoogleMapOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMapOptions",
                "description": "Defines configuration GoogleMapOptions for a GoogleMap.",
                "methods": [
                    {
                        "name": "ambientEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether ambient-mode styling should be enabled."
                    },
                    {
                        "name": "backgroundColor(Integer backgroundColor)",
                        "return_type": "GoogleMapOptions",
                        "description": "Sets the map background color."
                    },
                    {
                        "name": "camera(CameraPosition camera)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies the initial camera position for the map (specify null to use the default camera position"
                    },
                    {
                        "name": "compassEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether the compass should be enabled."
                    },
                    {
                        "name": "createFromAttributes(Context context, AttributeSet attrs)",
                        "return_type": "staticGoogleMapOptions",
                        "description": "Creates a GoogleMapsOptions from the AttributeSet."
                    },
                    {
                        "name": "getAmbientEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getBackgroundColor()",
                        "return_type": "Integer",
                        "description": "Returns the current backgroundColor for the map, or null if unspecified."
                    },
                    {
                        "name": "getCamera()",
                        "return_type": "CameraPosition",
                        "description": ""
                    },
                    {
                        "name": "getCompassEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getLatLngBoundsForCameraTarget()",
                        "return_type": "LatLngBounds",
                        "description": ""
                    },
                    {
                        "name": "getLiteMode()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getMapId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getMapToolbarEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getMapType()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getMaxZoomPreference()",
                        "return_type": "Float",
                        "description": ""
                    },
                    {
                        "name": "getMinZoomPreference()",
                        "return_type": "Float",
                        "description": ""
                    },
                    {
                        "name": "getRotateGesturesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getScrollGesturesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getScrollGesturesEnabledDuringRotateOrZoom()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getTiltGesturesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getUseViewLifecycleInFragment()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getZOrderOnTop()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getZoomControlsEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getZoomGesturesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "latLngBoundsForCameraTarget(LatLngBounds llbounds)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies a LatLngBounds to constrain the camera target, so that when users scroll and pan the map, the camera target does not move outside these bounds."
                    },
                    {
                        "name": "liteMode(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether the map should be created in lite mode."
                    },
                    {
                        "name": "mapId(String mapId)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies the map's ID."
                    },
                    {
                        "name": "mapToolbarEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether the mapToolbar should be enabled."
                    },
                    {
                        "name": "mapType(int mapType)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies a change to the initial map type."
                    },
                    {
                        "name": "maxZoomPreference(float maxZoomPreference)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies a preferred upper bound for camera zoom."
                    },
                    {
                        "name": "minZoomPreference(float minZoomPreference)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies a preferred lower bound for camera zoom."
                    },
                    {
                        "name": "rotateGesturesEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether rotate gestures should be enabled."
                    },
                    {
                        "name": "scrollGesturesEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether scroll gestures should be enabled."
                    },
                    {
                        "name": "scrollGesturesEnabledDuringRotateOrZoom(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether scroll gestures should be enabled during rotate and zoom gestures."
                    },
                    {
                        "name": "tiltGesturesEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether tilt gestures should be enabled."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "useViewLifecycleInFragment(boolean useViewLifecycleInFragment)",
                        "return_type": "GoogleMapOptions",
                        "description": "When using a MapFragment, this flag specifies whether the lifecycle of the map should be tied to the fragment's view or the fragment itself."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zOrderOnTop(boolean zOrderOnTop)",
                        "return_type": "GoogleMapOptions",
                        "description": "Control whether the map view's surface is placed on top of its window."
                    },
                    {
                        "name": "zoomControlsEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether the zoom controls should be enabled."
                    },
                    {
                        "name": "zoomGesturesEnabled(boolean enabled)",
                        "return_type": "GoogleMapOptions",
                        "description": "Specifies whether zoom gestures should be enabled."
                    }
                ]
            },
            {
                "name": "MapFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/MapFragment",
                "description": "A Map component in an app.",
                "methods": [
                    {
                        "name": "getMapAsync(OnMapReadyCallback callback)",
                        "return_type": "void",
                        "description": "Sets a callback object which will be triggered when the GoogleMap instance is ready to be used."
                    },
                    {
                        "name": "newInstance(GoogleMapOptions options)",
                        "return_type": "staticMapFragment",
                        "description": "Creates a map fragment with the given options."
                    },
                    {
                        "name": "newInstance()",
                        "return_type": "staticMapFragment",
                        "description": "Creates a map fragment, using default options."
                    },
                    {
                        "name": "onActivityCreated(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onAttach(Activity activity)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroyView()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onEnterAmbient(Bundle ambientDetails)",
                        "return_type": "final void",
                        "description": "You must call this method from the parent WearableActivity's corresponding method."
                    },
                    {
                        "name": "onExitAmbient()",
                        "return_type": "final void",
                        "description": "You must call this method from the parent WearableActivity's corresponding method."
                    },
                    {
                        "name": "onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "Parse attributes during inflation from a view hierarchy into the arguments we handle."
                    },
                    {
                        "name": "onLowMemory()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPause()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onResume()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSaveInstanceState(Bundle outState)",
                        "return_type": "void",
                        "description": "Provides a Bundle to store the state of the Fragment before it gets destroyed."
                    },
                    {
                        "name": "onStart()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStop()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setArguments(Bundle args)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MapsInitializer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/MapsInitializer",
                "description": "Use this class to initialize the Google Maps SDK for Android if features need to be used before obtaining a map.",
                "methods": [
                    {
                        "name": "initialize(Context context, MapsInitializer.Renderer preferredRenderer, OnMapsSdkInitializedCallback callback)",
                        "return_type": "synchronized static int",
                        "description": "Specifies which MapsInitializer.Renderer type you prefer to use to initialize the Google Maps SDK for Android, and provides a callback to receive the actual MapsInitializer.Renderer type."
                    },
                    {
                        "name": "initialize(Context context)",
                        "return_type": "synchronized static int",
                        "description": "Initializes the Google Maps SDK for Android so that its classes are ready for use."
                    }
                ]
            },
            {
                "name": "MapView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/MapView",
                "description": "A View which displays a map (with data obtained from the Google Maps service).",
                "methods": [
                    {
                        "name": "getMapAsync(OnMapReadyCallback callback)",
                        "return_type": "void",
                        "description": "Returns a instance of the GoogleMap through the callback, ready to be used."
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onEnterAmbient(Bundle ambientDetails)",
                        "return_type": "void",
                        "description": "You must call this method from the parent WearableActivity's corresponding method."
                    },
                    {
                        "name": "onExitAmbient()",
                        "return_type": "void",
                        "description": "You must call this method from the parent WearableActivity's corresponding method."
                    },
                    {
                        "name": "onLowMemory()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onPause()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onResume()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onSaveInstanceState(Bundle outState)",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onStart()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onStop()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    }
                ]
            },
            {
                "name": "Projection",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/Projection",
                "description": "A projection is used to translate between on screen location and geographic coordinates on the surface of the Earth (LatLng).",
                "methods": [
                    {
                        "name": "fromScreenLocation(Point point)",
                        "return_type": "LatLng",
                        "description": "Returns the geographic location that corresponds to a screen location."
                    },
                    {
                        "name": "getVisibleRegion()",
                        "return_type": "VisibleRegion",
                        "description": "Gets a projection of the viewing frustum for converting between screen coordinates and geo-latitude/longitude coordinates."
                    },
                    {
                        "name": "toScreenLocation(LatLng location)",
                        "return_type": "Point",
                        "description": "Returns a screen location that corresponds to a geographical coordinate (LatLng"
                    }
                ]
            },
            {
                "name": "StreetViewPanorama",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama",
                "description": "This is the main class of the Street View feature in the Google Maps SDK for Android and is the entry point for all methods related to Street View panoramas.",
                "methods": [
                    {
                        "name": "animateTo(StreetViewPanoramaCamera camera, long duration)",
                        "return_type": "void",
                        "description": "Changes the current camera position, orientation and zoom, to a given position over a specified duration"
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "StreetViewPanoramaLocation",
                        "description": "Returns the current location of the user and information regarding the current panorama's adjacent panoramas"
                    },
                    {
                        "name": "getPanoramaCamera()",
                        "return_type": "StreetViewPanoramaCamera",
                        "description": "Returns the current orientation and zoom"
                    },
                    {
                        "name": "isPanningGesturesEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether or not the panning gestures are enabled for the user"
                    },
                    {
                        "name": "isStreetNamesEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether or not the street names appear on the panorama"
                    },
                    {
                        "name": "isUserNavigationEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether or not the navigation is enabled for the user."
                    },
                    {
                        "name": "isZoomGesturesEnabled()",
                        "return_type": "boolean",
                        "description": "Returns whether or not the zoom gestures are enabled for the user"
                    },
                    {
                        "name": "orientationToPoint(StreetViewPanoramaOrientation orientation)",
                        "return_type": "Point",
                        "description": "Returns a screen location that corresponds to an orientation (StreetViewPanoramaOrientation"
                    },
                    {
                        "name": "pointToOrientation(Point point)",
                        "return_type": "StreetViewPanoramaOrientation",
                        "description": "Returns the orientation that corresponds to a screen location."
                    },
                    {
                        "name": "setOnStreetViewPanoramaCameraChangeListener(StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the camera changes"
                    },
                    {
                        "name": "setOnStreetViewPanoramaChangeListener(StreetViewPanorama.OnStreetViewPanoramaChangeListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the panorama changes"
                    },
                    {
                        "name": "setOnStreetViewPanoramaClickListener(StreetViewPanorama.OnStreetViewPanoramaClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the panorama is tapped."
                    },
                    {
                        "name": "setOnStreetViewPanoramaLongClickListener(StreetViewPanorama.OnStreetViewPanoramaLongClickListener listener)",
                        "return_type": "final void",
                        "description": "Sets a callback that's invoked when the panorama is long-pressed."
                    },
                    {
                        "name": "setPanningGesturesEnabled(boolean enablePanning)",
                        "return_type": "void",
                        "description": "Sets whether the user is able to use panning gestures"
                    },
                    {
                        "name": "setPosition(LatLng position, StreetViewSource source)",
                        "return_type": "void",
                        "description": "Sets the StreetViewPanorama to a given location"
                    },
                    {
                        "name": "setPosition(LatLng position)",
                        "return_type": "void",
                        "description": "Sets the StreetViewPanorama to a given location"
                    },
                    {
                        "name": "setPosition(LatLng position, int radius)",
                        "return_type": "void",
                        "description": "Sets the StreetViewPanorama to a given location"
                    },
                    {
                        "name": "setPosition(LatLng position, int radius, StreetViewSource source)",
                        "return_type": "void",
                        "description": "Sets the StreetViewPanorama to a given location"
                    },
                    {
                        "name": "setPosition(String panoId)",
                        "return_type": "void",
                        "description": "Sets the StreetViewPanorama to a given location"
                    },
                    {
                        "name": "setStreetNamesEnabled(boolean enableStreetNames)",
                        "return_type": "void",
                        "description": "Sets whether the user is able to see street names on panoramas"
                    },
                    {
                        "name": "setUserNavigationEnabled(boolean enableUserNavigation)",
                        "return_type": "void",
                        "description": "Sets whether the user is able to move to another panorama"
                    },
                    {
                        "name": "setZoomGesturesEnabled(boolean enableZoom)",
                        "return_type": "void",
                        "description": "Sets whether the user is able to use zoom gestures"
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanoramaFragment",
                "description": "A StreetViewPanorama component in an app.",
                "methods": [
                    {
                        "name": "getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback callback)",
                        "return_type": "void",
                        "description": "Sets a callback object which will be triggered when the StreetViewPanorama instance is ready to be used."
                    },
                    {
                        "name": "newInstance()",
                        "return_type": "staticStreetViewPanoramaFragment",
                        "description": "Creates a streetview panorama fragment, using default options."
                    },
                    {
                        "name": "newInstance(StreetViewPanoramaOptions options)",
                        "return_type": "staticStreetViewPanoramaFragment",
                        "description": "Creates a streetview panorama fragment with the given options."
                    },
                    {
                        "name": "onActivityCreated(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onAttach(Activity activity)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroyView()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "Parse attributes during inflation from a view hierarchy into the arguments we handle."
                    },
                    {
                        "name": "onLowMemory()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPause()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onResume()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSaveInstanceState(Bundle outState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStart()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStop()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setArguments(Bundle args)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanoramaOptions",
                "description": "Defines configuration PanoramaOptions for a StreetViewPanorama.",
                "methods": [
                    {
                        "name": "getPanningGesturesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getPanoramaId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getPosition()",
                        "return_type": "LatLng",
                        "description": ""
                    },
                    {
                        "name": "getRadius()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getSource()",
                        "return_type": "StreetViewSource",
                        "description": ""
                    },
                    {
                        "name": "getStreetNamesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getStreetViewPanoramaCamera()",
                        "return_type": "StreetViewPanoramaCamera",
                        "description": ""
                    },
                    {
                        "name": "getUseViewLifecycleInFragment()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getUserNavigationEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "getZoomGesturesEnabled()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "panningGesturesEnabled(boolean enabled)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Toggles the ability for users to use pan around on panoramas using gestures."
                    },
                    {
                        "name": "panoramaCamera(StreetViewPanoramaCamera camera)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Specifies the initial camera for the Street View panorama."
                    },
                    {
                        "name": "panoramaId(String panoId)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Specifies the initial position for the Street View panorama based on a panorama id."
                    },
                    {
                        "name": "position(LatLng position)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Specifies the initial position for the Street View panorama based upon location."
                    },
                    {
                        "name": "position(LatLng position, Integer radius, StreetViewSource source)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Specifies the initial position for the Street View panorama based upon location, radius and source."
                    },
                    {
                        "name": "position(LatLng position, Integer radius)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Specifies the initial position for the Street View panorama based upon location and radius."
                    },
                    {
                        "name": "position(LatLng position, StreetViewSource source)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Specifies the initial position for the Street View panorama based upon location and source."
                    },
                    {
                        "name": "streetNamesEnabled(boolean enabled)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Toggles the ability for users to see street names on panoramas."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "useViewLifecycleInFragment(boolean useViewLifecycleInFragment)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "When using a StreetViewPanoramaFragment, this flag specifies whether the lifecycle of the Street View panorama should be tied to the fragment's view or the fragment itself."
                    },
                    {
                        "name": "userNavigationEnabled(boolean enabled)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Toggles the ability for users to move between panoramas."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "zoomGesturesEnabled(boolean enabled)",
                        "return_type": "StreetViewPanoramaOptions",
                        "description": "Toggles the ability for users to zoom on panoramas using gestures."
                    }
                ]
            },
            {
                "name": "StreetViewPanoramaView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanoramaView",
                "description": "A View which displays a Street View panorama (with data obtained from the Google Maps service).",
                "methods": [
                    {
                        "name": "getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback callback)",
                        "return_type": "void",
                        "description": "Sets a callback object which will be triggered when the StreetViewPanorama instance is ready to be used."
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "final void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onLowMemory()",
                        "return_type": "final void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onPause()",
                        "return_type": "final void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onResume()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onSaveInstanceState(Bundle outState)",
                        "return_type": "final void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onStart()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    },
                    {
                        "name": "onStop()",
                        "return_type": "void",
                        "description": "You must call this method from the parent Activity/Fragment's corresponding method."
                    }
                ]
            },
            {
                "name": "SupportMapFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/SupportMapFragment",
                "description": "A Map component in an app.",
                "methods": [
                    {
                        "name": "getMapAsync(OnMapReadyCallback callback)",
                        "return_type": "void",
                        "description": "Sets a callback object which will be triggered when the GoogleMap instance is ready to be used."
                    },
                    {
                        "name": "newInstance(GoogleMapOptions options)",
                        "return_type": "staticSupportMapFragment",
                        "description": "Creates a map fragment with the given options."
                    },
                    {
                        "name": "newInstance()",
                        "return_type": "staticSupportMapFragment",
                        "description": "Creates a map fragment, using default options."
                    },
                    {
                        "name": "onActivityCreated(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onAttach(Activity activity)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroyView()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onEnterAmbient(Bundle ambientDetails)",
                        "return_type": "final void",
                        "description": "You must call this method from the parent WearableActivity's corresponding method."
                    },
                    {
                        "name": "onExitAmbient()",
                        "return_type": "final void",
                        "description": "You must call this method from the parent WearableActivity's corresponding method."
                    },
                    {
                        "name": "onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "Parse attributes during inflation from a view hierarchy into the arguments we handle."
                    },
                    {
                        "name": "onLowMemory()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPause()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onResume()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSaveInstanceState(Bundle outState)",
                        "return_type": "void",
                        "description": "Provides a Bundle to store the state of the Fragment before it gets destroyed."
                    },
                    {
                        "name": "onStart()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStop()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setArguments(Bundle args)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SupportStreetViewPanoramaFragment",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/SupportStreetViewPanoramaFragment",
                "description": "A StreetViewPanorama component in an app.",
                "methods": [
                    {
                        "name": "getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback callback)",
                        "return_type": "void",
                        "description": "Sets a callback object which will be triggered when the StreetViewPanorama instance is ready to be used."
                    },
                    {
                        "name": "newInstance()",
                        "return_type": "staticSupportStreetViewPanoramaFragment",
                        "description": "Creates a streetview panorama fragment, using default options."
                    },
                    {
                        "name": "newInstance(StreetViewPanoramaOptions options)",
                        "return_type": "staticSupportStreetViewPanoramaFragment",
                        "description": "Creates a streetview panorama fragment with the given options."
                    },
                    {
                        "name": "onActivityCreated(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onAttach(Activity activity)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreate(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",
                        "return_type": "View",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDestroyView()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": "Parse attributes during inflation from a view hierarchy into the arguments we handle."
                    },
                    {
                        "name": "onLowMemory()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPause()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onResume()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSaveInstanceState(Bundle outState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStart()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onStop()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setArguments(Bundle args)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UiSettings",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/maps/UiSettings",
                "description": "Settings for the user interface of a GoogleMap.",
                "methods": [
                    {
                        "name": "isCompassEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether the compass is enabled/disabled."
                    },
                    {
                        "name": "isIndoorLevelPickerEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether the indoor level picker is enabled/disabled."
                    },
                    {
                        "name": "isMapToolbarEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether the Map Toolbar is enabled/disabled."
                    },
                    {
                        "name": "isMyLocationButtonEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether the my-location button is enabled/disabled."
                    },
                    {
                        "name": "isRotateGesturesEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether rotate gestures are enabled/disabled."
                    },
                    {
                        "name": "isScrollGesturesEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether scroll gestures are enabled/disabled."
                    },
                    {
                        "name": "isScrollGesturesEnabledDuringRotateOrZoom()",
                        "return_type": "boolean",
                        "description": "Gets whether scroll gestures are enabled/disabled during rotation and zoom gestures."
                    },
                    {
                        "name": "isTiltGesturesEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether tilt gestures are enabled/disabled."
                    },
                    {
                        "name": "isZoomControlsEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether the zoom controls are enabled/disabled."
                    },
                    {
                        "name": "isZoomGesturesEnabled()",
                        "return_type": "boolean",
                        "description": "Gets whether zoom gestures are enabled/disabled."
                    },
                    {
                        "name": "setAllGesturesEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether all gestures should be enabled or disabled."
                    },
                    {
                        "name": "setCompassEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Enables or disables the compass."
                    },
                    {
                        "name": "setIndoorLevelPickerEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets whether the indoor level picker is enabled when indoor mode is enabled."
                    },
                    {
                        "name": "setMapToolbarEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether the Map Toolbar should be enabled or disabled."
                    },
                    {
                        "name": "setMyLocationButtonEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Enables or disables the my-location button."
                    },
                    {
                        "name": "setRotateGesturesEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether rotate gestures should be enabled or disabled."
                    },
                    {
                        "name": "setScrollGesturesEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether scroll gestures should be enabled or disabled."
                    },
                    {
                        "name": "setScrollGesturesEnabledDuringRotateOrZoom(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether scroll gestures can take place at the same time as a zoom or rotate gesture."
                    },
                    {
                        "name": "setTiltGesturesEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether tilt gestures should be enabled or disabled."
                    },
                    {
                        "name": "setZoomControlsEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Enables or disables the zoom controls."
                    },
                    {
                        "name": "setZoomGesturesEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "Sets the preference for whether zoom gestures should be enabled or disabled."
                    }
                ]
            },
            {
                "name": "GoogleMap.CancelableCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.CancelableCallback",
                "description": "A callback interface for reporting when a task is complete or canceled.",
                "methods": [
                    {
                        "name": "onCancel()",
                        "return_type": "abstract void",
                        "description": "Invoked when a task is canceled."
                    },
                    {
                        "name": "onFinish()",
                        "return_type": "abstract void",
                        "description": "Invoked when a task is complete."
                    }
                ]
            },
            {
                "name": "GoogleMap.InfoWindowAdapter",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.InfoWindowAdapter",
                "description": "Provides views for customized rendering of info windows.",
                "methods": [
                    {
                        "name": "getInfoContents(Marker marker)",
                        "return_type": "abstractView",
                        "description": "Provides custom contents for the default info window frame of a marker."
                    },
                    {
                        "name": "getInfoWindow(Marker marker)",
                        "return_type": "abstractView",
                        "description": "Provides a custom info window for a marker."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraChangeListener",
                "description": "This interface is deprecated. Replaced by GoogleMap.OnCameraMoveStartedListener, GoogleMap.OnCameraMoveListener and GoogleMap.OnCameraIdleListener. The order in which the deprecated onCameraChange method will be called in relation to the methods in the new camera change listeners is undefined.",
                "methods": [
                    {
                        "name": "onCameraChange(CameraPosition position)",
                        "return_type": "abstract void",
                        "description": "Called after the camera position has changed."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraIdleListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraIdleListener",
                "description": "Callback interface for when camera movement has ended.",
                "methods": [
                    {
                        "name": "onCameraIdle()",
                        "return_type": "abstract void",
                        "description": "Called when camera movement has ended, there are no pending animations and the user has stopped interacting with the map."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraMoveCanceledListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraMoveCanceledListener",
                "description": "Callback interface for when the camera's motion has been stopped or when the camera starts moving for a new reason.",
                "methods": [
                    {
                        "name": "onCameraMoveCanceled()",
                        "return_type": "abstract void",
                        "description": "Called when the developer explicitly calls the GoogleMap.stopAnimation("
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraMoveListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraMoveListener",
                "description": "Callback interface for when the camera changes position.",
                "methods": [
                    {
                        "name": "onCameraMove()",
                        "return_type": "abstract void",
                        "description": "Called repeatedly as the camera continues to move after an onCameraMoveStarted call."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraMoveStartedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraMoveStartedListener",
                "description": "Callback interface for when the camera motion starts.",
                "methods": [
                    {
                        "name": "onCameraMoveStarted(int reason)",
                        "return_type": "abstract void",
                        "description": "Called when the camera starts moving after it has been idle or when the reason for camera motion has changed."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCircleClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCircleClickListener",
                "description": "Callback interface for when a circle is clicked.",
                "methods": [
                    {
                        "name": "onCircleClick(Circle circle)",
                        "return_type": "abstract void",
                        "description": "Called when a circle is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnGroundOverlayClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnGroundOverlayClickListener",
                "description": "Callback interface for when a ground overlay is clicked.",
                "methods": [
                    {
                        "name": "onGroundOverlayClick(GroundOverlay groundOverlay)",
                        "return_type": "abstract void",
                        "description": "Called when a ground overlay is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnIndoorStateChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnIndoorStateChangeListener",
                "description": "A listener for when the indoor state changes.",
                "methods": [
                    {
                        "name": "onIndoorBuildingFocused()",
                        "return_type": "abstract void",
                        "description": "The map maintains a notion of focused building, which is the building currently centered in the viewport or otherwise selected by the user through the UI or the location provider."
                    },
                    {
                        "name": "onIndoorLevelActivated(IndoorBuilding building)",
                        "return_type": "abstract void",
                        "description": "The map keeps track of the active level for each building which has been visited or otherwise had a level selected."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnInfoWindowClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnInfoWindowClickListener",
                "description": "Callback interface for click/tap events on a marker's info window.",
                "methods": [
                    {
                        "name": "onInfoWindowClick(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when the marker's info window is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnInfoWindowCloseListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnInfoWindowCloseListener",
                "description": "Callback interface for close events on a marker's info window.",
                "methods": [
                    {
                        "name": "onInfoWindowClose(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when the marker's info window is closed."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnInfoWindowLongClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnInfoWindowLongClickListener",
                "description": "Callback interface for when the user long presses on a marker's info window.",
                "methods": [
                    {
                        "name": "onInfoWindowLongClick(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a long-press gesture on the marker's info window."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMapClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMapClickListener",
                "description": "Callback interface for when the user taps on the map.",
                "methods": [
                    {
                        "name": "onMapClick(LatLng point)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a tap gesture on the map, but only if none of the overlays of the map handled the gesture."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMapLoadedCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMapLoadedCallback",
                "description": "Callback interface for when the map has finished rendering.",
                "methods": [
                    {
                        "name": "onMapLoaded()",
                        "return_type": "abstract void",
                        "description": "Called when the map has finished rendering."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMapLongClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMapLongClickListener",
                "description": "Callback interface for when the user long presses on the map.",
                "methods": [
                    {
                        "name": "onMapLongClick(LatLng point)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a long-press gesture on the map, but only if none of the overlays of the map handled the gesture."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMarkerClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMarkerClickListener",
                "description": "Defines signatures for methods that are called when a marker is clicked or tapped.",
                "methods": [
                    {
                        "name": "onMarkerClick(Marker marker)",
                        "return_type": "abstract boolean",
                        "description": "Called when a marker has been clicked or tapped."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMarkerDragListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMarkerDragListener",
                "description": "Callback interface for drag events on markers.",
                "methods": [
                    {
                        "name": "onMarkerDrag(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called repeatedly while a marker is being dragged."
                    },
                    {
                        "name": "onMarkerDragEnd(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when a marker has finished being dragged."
                    },
                    {
                        "name": "onMarkerDragStart(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when a marker starts being dragged."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMyLocationButtonClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMyLocationButtonClickListener",
                "description": "Callback interface for when the My Location button is clicked.",
                "methods": [
                    {
                        "name": "onMyLocationButtonClick()",
                        "return_type": "abstract boolean",
                        "description": "Called when the my location button is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMyLocationChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMyLocationChangeListener",
                "description": "This interface is deprecated. Use com.google.android.gms.location.FusedLocationProviderApi instead. FusedLocationProviderApi provides improved location finding and power usage and is used by the \"My Location\" blue dot. See the Select Current Place tutorial, which uses the FusedLocationProviderApi, or the Location Developer Guide.",
                "methods": [
                    {
                        "name": "onMyLocationChange(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when the Location of the My Location dot has changed (be it latitude/longitude, bearing or accuracy"
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMyLocationClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMyLocationClickListener",
                "description": "Callback interface for when the My Location dot (which signifies the user's location) is clicked.",
                "methods": [
                    {
                        "name": "onMyLocationClick(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when the My Location dot is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnPoiClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnPoiClickListener",
                "description": "A listener for POI taps.",
                "methods": [
                    {
                        "name": "onPoiClick(PointOfInterest poi)",
                        "return_type": "abstract void",
                        "description": "Called when a POI is clicked or tapped."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnPolygonClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnPolygonClickListener",
                "description": "Callback interface for when a polygon is clicked.",
                "methods": [
                    {
                        "name": "onPolygonClick(Polygon polygon)",
                        "return_type": "abstract void",
                        "description": "Called when a polygon is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnPolylineClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnPolylineClickListener",
                "description": "Callback interface for when a polyline is clicked.",
                "methods": [
                    {
                        "name": "onPolylineClick(Polyline polyline)",
                        "return_type": "abstract void",
                        "description": "Called when a polyline is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.SnapshotReadyCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.SnapshotReadyCallback",
                "description": "Callback interface to notify when the snapshot has been taken.",
                "methods": [
                    {
                        "name": "onSnapshotReady(Bitmap snapshot)",
                        "return_type": "abstract void",
                        "description": "Invoked when the snapshot has been taken."
                    }
                ]
            },
            {
                "name": "LocationSource",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/LocationSource",
                "description": "Defines an interface for providing location data, typically to a GoogleMap object.",
                "methods": [
                    {
                        "name": "activate(LocationSource.OnLocationChangedListener listener)",
                        "return_type": "abstract void",
                        "description": "Activates this provider."
                    },
                    {
                        "name": "deactivate()",
                        "return_type": "abstract void",
                        "description": "Deactivates this provider."
                    }
                ]
            },
            {
                "name": "LocationSource.OnLocationChangedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/LocationSource.OnLocationChangedListener",
                "description": "Handles a location update.",
                "methods": [
                    {
                        "name": "onLocationChanged(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when a new user location is known."
                    }
                ]
            },
            {
                "name": "OnMapReadyCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/OnMapReadyCallback",
                "description": "Callback interface for when the map is ready to be used.",
                "methods": [
                    {
                        "name": "onMapReady(GoogleMap googleMap)",
                        "return_type": "abstract void",
                        "description": "Called when the map is ready to be used."
                    }
                ]
            },
            {
                "name": "OnMapsSdkInitializedCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/OnMapsSdkInitializedCallback",
                "description": "Callback interface used by the Maps SDK to inform you which maps MapsInitializer.Renderer type has been loaded for your application.",
                "methods": [
                    {
                        "name": "onMapsSdkInitialized(MapsInitializer.Renderer renderer)",
                        "return_type": "abstract void",
                        "description": "The Maps SDK calls this method to inform you which maps MapsInitializer.Renderer has been loaded for your application."
                    }
                ]
            },
            {
                "name": "OnStreetViewPanoramaReadyCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/OnStreetViewPanoramaReadyCallback",
                "description": "Callback interface for when the Street View panorama is ready to be used.",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaReady(StreetViewPanorama panorama)",
                        "return_type": "abstract void",
                        "description": "Called when the Street View panorama is ready to be used."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener",
                "description": "A listener for when the StreetViewPanoramaCamera changes",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaCameraChange(StreetViewPanoramaCamera camera)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes changes to the camera on the panorama or if the camera is changed programmatically."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaChangeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaChangeListener",
                "description": "A listener for when the Street View panorama loads a new panorama",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaChange(StreetViewPanoramaLocation location)",
                        "return_type": "abstract void",
                        "description": "The StreetViewPanorama performs an animated transition from one location to another when the user performs a manual navigation action."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaClickListener",
                "description": "Callback interface for when the user taps on the panorama.",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaClick(StreetViewPanoramaOrientation orientation)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a tap gesture on the panorama, but only if none of the overlays of the panorama handled the gesture."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaLongClickListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaLongClickListener",
                "description": "Callback interface for when the user long presses on the panorama.",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaLongClick(StreetViewPanoramaOrientation orientation)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a long-press gesture on the panorama, but only if none of the overlays of the panorama handled the gesture."
                    }
                ]
            },
            {
                "name": "GoogleMap.CancelableCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.CancelableCallback",
                "description": "A callback interface for reporting when a task is complete or canceled.",
                "methods": [
                    {
                        "name": "onCancel()",
                        "return_type": "abstract void",
                        "description": "Invoked when a task is canceled."
                    },
                    {
                        "name": "onFinish()",
                        "return_type": "abstract void",
                        "description": "Invoked when a task is complete."
                    }
                ]
            },
            {
                "name": "GoogleMap.InfoWindowAdapter",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.InfoWindowAdapter",
                "description": "Provides views for customized rendering of info windows.",
                "methods": [
                    {
                        "name": "getInfoContents(Marker marker)",
                        "return_type": "abstractView",
                        "description": "Provides custom contents for the default info window frame of a marker."
                    },
                    {
                        "name": "getInfoWindow(Marker marker)",
                        "return_type": "abstractView",
                        "description": "Provides a custom info window for a marker."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraChangeListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraChangeListener",
                "description": "This interface is deprecated. Replaced by GoogleMap.OnCameraMoveStartedListener, GoogleMap.OnCameraMoveListener and GoogleMap.OnCameraIdleListener. The order in which the deprecated onCameraChange method will be called in relation to the methods in the new camera change listeners is undefined.",
                "methods": [
                    {
                        "name": "onCameraChange(CameraPosition position)",
                        "return_type": "abstract void",
                        "description": "Called after the camera position has changed."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraIdleListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraIdleListener",
                "description": "Callback interface for when camera movement has ended.",
                "methods": [
                    {
                        "name": "onCameraIdle()",
                        "return_type": "abstract void",
                        "description": "Called when camera movement has ended, there are no pending animations and the user has stopped interacting with the map."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraMoveCanceledListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraMoveCanceledListener",
                "description": "Callback interface for when the camera's motion has been stopped or when the camera starts moving for a new reason.",
                "methods": [
                    {
                        "name": "onCameraMoveCanceled()",
                        "return_type": "abstract void",
                        "description": "Called when the developer explicitly calls the GoogleMap.stopAnimation("
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraMoveListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraMoveListener",
                "description": "Callback interface for when the camera changes position.",
                "methods": [
                    {
                        "name": "onCameraMove()",
                        "return_type": "abstract void",
                        "description": "Called repeatedly as the camera continues to move after an onCameraMoveStarted call."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCameraMoveStartedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCameraMoveStartedListener",
                "description": "Callback interface for when the camera motion starts.",
                "methods": [
                    {
                        "name": "onCameraMoveStarted(int reason)",
                        "return_type": "abstract void",
                        "description": "Called when the camera starts moving after it has been idle or when the reason for camera motion has changed."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnCircleClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnCircleClickListener",
                "description": "Callback interface for when a circle is clicked.",
                "methods": [
                    {
                        "name": "onCircleClick(Circle circle)",
                        "return_type": "abstract void",
                        "description": "Called when a circle is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnGroundOverlayClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnGroundOverlayClickListener",
                "description": "Callback interface for when a ground overlay is clicked.",
                "methods": [
                    {
                        "name": "onGroundOverlayClick(GroundOverlay groundOverlay)",
                        "return_type": "abstract void",
                        "description": "Called when a ground overlay is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnIndoorStateChangeListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnIndoorStateChangeListener",
                "description": "A listener for when the indoor state changes.",
                "methods": [
                    {
                        "name": "onIndoorBuildingFocused()",
                        "return_type": "abstract void",
                        "description": "The map maintains a notion of focused building, which is the building currently centered in the viewport or otherwise selected by the user through the UI or the location provider."
                    },
                    {
                        "name": "onIndoorLevelActivated(IndoorBuilding building)",
                        "return_type": "abstract void",
                        "description": "The map keeps track of the active level for each building which has been visited or otherwise had a level selected."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnInfoWindowClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnInfoWindowClickListener",
                "description": "Callback interface for click/tap events on a marker's info window.",
                "methods": [
                    {
                        "name": "onInfoWindowClick(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when the marker's info window is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnInfoWindowCloseListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnInfoWindowCloseListener",
                "description": "Callback interface for close events on a marker's info window.",
                "methods": [
                    {
                        "name": "onInfoWindowClose(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when the marker's info window is closed."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnInfoWindowLongClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnInfoWindowLongClickListener",
                "description": "Callback interface for when the user long presses on a marker's info window.",
                "methods": [
                    {
                        "name": "onInfoWindowLongClick(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a long-press gesture on the marker's info window."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMapClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMapClickListener",
                "description": "Callback interface for when the user taps on the map.",
                "methods": [
                    {
                        "name": "onMapClick(LatLng point)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a tap gesture on the map, but only if none of the overlays of the map handled the gesture."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMapLoadedCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMapLoadedCallback",
                "description": "Callback interface for when the map has finished rendering.",
                "methods": [
                    {
                        "name": "onMapLoaded()",
                        "return_type": "abstract void",
                        "description": "Called when the map has finished rendering."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMapLongClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMapLongClickListener",
                "description": "Callback interface for when the user long presses on the map.",
                "methods": [
                    {
                        "name": "onMapLongClick(LatLng point)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a long-press gesture on the map, but only if none of the overlays of the map handled the gesture."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMarkerClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMarkerClickListener",
                "description": "Defines signatures for methods that are called when a marker is clicked or tapped.",
                "methods": [
                    {
                        "name": "onMarkerClick(Marker marker)",
                        "return_type": "abstract boolean",
                        "description": "Called when a marker has been clicked or tapped."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMarkerDragListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMarkerDragListener",
                "description": "Callback interface for drag events on markers.",
                "methods": [
                    {
                        "name": "onMarkerDrag(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called repeatedly while a marker is being dragged."
                    },
                    {
                        "name": "onMarkerDragEnd(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when a marker has finished being dragged."
                    },
                    {
                        "name": "onMarkerDragStart(Marker marker)",
                        "return_type": "abstract void",
                        "description": "Called when a marker starts being dragged."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMyLocationButtonClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMyLocationButtonClickListener",
                "description": "Callback interface for when the My Location button is clicked.",
                "methods": [
                    {
                        "name": "onMyLocationButtonClick()",
                        "return_type": "abstract boolean",
                        "description": "Called when the my location button is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMyLocationChangeListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMyLocationChangeListener",
                "description": "This interface is deprecated. Use com.google.android.gms.location.FusedLocationProviderApi instead. FusedLocationProviderApi provides improved location finding and power usage and is used by the \"My Location\" blue dot. See the Select Current Place tutorial, which uses the FusedLocationProviderApi, or the Location Developer Guide.",
                "methods": [
                    {
                        "name": "onMyLocationChange(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when the Location of the My Location dot has changed (be it latitude/longitude, bearing or accuracy"
                    }
                ]
            },
            {
                "name": "GoogleMap.OnMyLocationClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnMyLocationClickListener",
                "description": "Callback interface for when the My Location dot (which signifies the user's location) is clicked.",
                "methods": [
                    {
                        "name": "onMyLocationClick(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when the My Location dot is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnPoiClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnPoiClickListener",
                "description": "A listener for POI taps.",
                "methods": [
                    {
                        "name": "onPoiClick(PointOfInterest poi)",
                        "return_type": "abstract void",
                        "description": "Called when a POI is clicked or tapped."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnPolygonClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnPolygonClickListener",
                "description": "Callback interface for when a polygon is clicked.",
                "methods": [
                    {
                        "name": "onPolygonClick(Polygon polygon)",
                        "return_type": "abstract void",
                        "description": "Called when a polygon is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.OnPolylineClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.OnPolylineClickListener",
                "description": "Callback interface for when a polyline is clicked.",
                "methods": [
                    {
                        "name": "onPolylineClick(Polyline polyline)",
                        "return_type": "abstract void",
                        "description": "Called when a polyline is clicked."
                    }
                ]
            },
            {
                "name": "GoogleMap.SnapshotReadyCallback",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/GoogleMap.SnapshotReadyCallback",
                "description": "Callback interface to notify when the snapshot has been taken.",
                "methods": [
                    {
                        "name": "onSnapshotReady(Bitmap snapshot)",
                        "return_type": "abstract void",
                        "description": "Invoked when the snapshot has been taken."
                    }
                ]
            },
            {
                "name": "MapsInitializer.Renderer",
                "type_obj": "enum",
                "link": "/android/reference/com/google/android/gms/maps/MapsInitializer.Renderer",
                "description": "Enables you to specify which MapsInitializer.Renderer you prefer to use for your application LATEST or LEGACY.",
                "methods": []
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener",
                "description": "A listener for when the StreetViewPanoramaCamera changes",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaCameraChange(StreetViewPanoramaCamera camera)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes changes to the camera on the panorama or if the camera is changed programmatically."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaChangeListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaChangeListener",
                "description": "A listener for when the Street View panorama loads a new panorama",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaChange(StreetViewPanoramaLocation location)",
                        "return_type": "abstract void",
                        "description": "The StreetViewPanorama performs an animated transition from one location to another when the user performs a manual navigation action."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaClickListener",
                "description": "Callback interface for when the user taps on the panorama.",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaClick(StreetViewPanoramaOrientation orientation)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a tap gesture on the panorama, but only if none of the overlays of the panorama handled the gesture."
                    }
                ]
            },
            {
                "name": "StreetViewPanorama.OnStreetViewPanoramaLongClickListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/StreetViewPanorama.OnStreetViewPanoramaLongClickListener",
                "description": "Callback interface for when the user long presses on the panorama.",
                "methods": [
                    {
                        "name": "onStreetViewPanoramaLongClick(StreetViewPanoramaOrientation orientation)",
                        "return_type": "abstract void",
                        "description": "Called when the user makes a long-press gesture on the panorama, but only if none of the overlays of the panorama handled the gesture."
                    }
                ]
            },
            {
                "name": "LocationSource.OnLocationChangedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/maps/LocationSource.OnLocationChangedListener",
                "description": "Handles a location update.",
                "methods": [
                    {
                        "name": "onLocationChanged(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when a new user location is known."
                    }
                ]
            }
        ]
    },
    {
        "name": "query",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/drive/query/package-summary",
        "classes": [
            {
                "name": "Filters",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/Filters",
                "description": "A factory for creating filters that are used to construct a Query.",
                "methods": [
                    {
                        "name": "and(Iterable<Filter> filters)",
                        "return_type": "staticFilter",
                        "description": "Returns a filter that matches items which are matched by every element of filters."
                    },
                    {
                        "name": "and(Filter filter, Filter... additionalFilters)",
                        "return_type": "staticFilter",
                        "description": "Returns a logical expression which combines filters with the 'AND' operator."
                    },
                    {
                        "name": "contains(SearchableMetadataField<String> field, String value)",
                        "return_type": "staticFilter",
                        "description": "Returns a filter which checks whether value is a substring of field."
                    },
                    {
                        "name": "eq(CustomPropertyKey key, String value)",
                        "return_type": "staticFilter",
                        "description": "Returns a filter which checks whether a custom property with the specified key exists and its value equals value."
                    },
                    {
                        "name": "eq(SearchableMetadataField<T> field, T value)",
                        "return_type": "static <T>Filter",
                        "description": "Returns a filter which checks if the value of field equals value."
                    },
                    {
                        "name": "greaterThan(SearchableOrderedMetadataField<T> field, T value)",
                        "return_type": "static <T extendsComparable<T>>Filter",
                        "description": "Returns a filter which checks if the value of field is greater than value."
                    },
                    {
                        "name": "greaterThanEquals(SearchableOrderedMetadataField<T> field, T value)",
                        "return_type": "static <T extendsComparable<T>>Filter",
                        "description": "Returns a filter which checks if the value of field is greater than or equal to value."
                    },
                    {
                        "name": "in(SearchableCollectionMetadataField<T> field, T value)",
                        "return_type": "static <T>Filter",
                        "description": "Returns a filter which checks whether value is an element of field."
                    },
                    {
                        "name": "lessThan(SearchableOrderedMetadataField<T> field, T value)",
                        "return_type": "static <T extendsComparable<T>>Filter",
                        "description": "Returns a filter which checks if the value of field is less than value."
                    },
                    {
                        "name": "lessThanEquals(SearchableOrderedMetadataField<T> field, T value)",
                        "return_type": "static <T extendsComparable<T>>Filter",
                        "description": "Returns a filter which checks if the value of field is less than or equal to value."
                    },
                    {
                        "name": "not(Filter toNegate)",
                        "return_type": "staticFilter",
                        "description": "Returns the negation of an filter."
                    },
                    {
                        "name": "openedByMe()",
                        "return_type": "staticFilter",
                        "description": "Returns a filter that matches only items that the current user has opened in the past."
                    },
                    {
                        "name": "or(Iterable<Filter> filters)",
                        "return_type": "staticFilter",
                        "description": "Returns a filter that matches items which are matched by any element of filters."
                    },
                    {
                        "name": "or(Filter filter, Filter... additionalFilters)",
                        "return_type": "staticFilter",
                        "description": "Returns a filter that matches items which are matched by any of the provided filter parameters."
                    },
                    {
                        "name": "ownedByMe()",
                        "return_type": "staticFilter",
                        "description": "Returns a filter that matches only items that the current user owns."
                    },
                    {
                        "name": "sharedWithMe()",
                        "return_type": "staticFilter",
                        "description": "Returns a filter that matches only items that are shared with the current user."
                    }
                ]
            },
            {
                "name": "Query",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/Query",
                "description": "The query object specifies constraints on a query result, including filters and sort order.",
                "methods": [
                    {
                        "name": "getFilter()",
                        "return_type": "Filter",
                        "description": "Get the filters that will restrict the query results."
                    },
                    {
                        "name": "getPageToken()",
                        "return_type": "String",
                        "description": "This method is deprecated. Paging is not supported."
                    },
                    {
                        "name": "getSortOrder()",
                        "return_type": "SortOrder",
                        "description": "Returns SortOrder containing information about sorting order of the query."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Query.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/Query.Builder",
                "description": "A builder for creating queries.",
                "methods": [
                    {
                        "name": "addFilter(Filter filter)",
                        "return_type": "Query.Builder",
                        "description": "Adds a search filter to the query."
                    },
                    {
                        "name": "build()",
                        "return_type": "Query",
                        "description": ""
                    },
                    {
                        "name": "setPageToken(String token)",
                        "return_type": "Query.Builder",
                        "description": "This method was deprecated. Paging is not supported."
                    },
                    {
                        "name": "setSortOrder(SortOrder sortOrder)",
                        "return_type": "Query.Builder",
                        "description": "Sets the SortOrder to be used to sort the query results."
                    }
                ]
            },
            {
                "name": "SearchableField",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/SearchableField",
                "description": "An attribute of the file that is to be searched.",
                "methods": []
            },
            {
                "name": "SortableField",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/SortableField",
                "description": "An attribute of the file that a query can be sorted upon.",
                "methods": []
            },
            {
                "name": "SortOrder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/SortOrder",
                "description": "SortOrder is used to specify the results order in the Query object using the setSortOrder(SortOrder) method.",
                "methods": [
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SortOrder.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/query/SortOrder.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "addSortAscending(SortableMetadataField sortField)",
                        "return_type": "SortOrder.Builder",
                        "description": "Adds the SortableMetadataField to be used to sort the query results in ascending order of the values of the sortField."
                    },
                    {
                        "name": "addSortDescending(SortableMetadataField sortField)",
                        "return_type": "SortOrder.Builder",
                        "description": "Adds the SortableMetadataField to be used to sort the query results in descending order of the values of the sortField."
                    },
                    {
                        "name": "build()",
                        "return_type": "SortOrder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Filter",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/query/Filter",
                "description": "A query filter that can be used to restrict the results on queries.",
                "methods": []
            },
            {
                "name": "Query.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/drive/query/Query.Builder",
                "description": "A builder for creating queries.",
                "methods": [
                    {
                        "name": "addFilter(Filter filter)",
                        "return_type": "Query.Builder",
                        "description": "Adds a search filter to the query."
                    },
                    {
                        "name": "build()",
                        "return_type": "Query",
                        "description": ""
                    },
                    {
                        "name": "setPageToken(String token)",
                        "return_type": "Query.Builder",
                        "description": "This method was deprecated. Paging is not supported."
                    },
                    {
                        "name": "setSortOrder(SortOrder sortOrder)",
                        "return_type": "Query.Builder",
                        "description": "Sets the SortOrder to be used to sort the query results."
                    }
                ]
            },
            {
                "name": "SortOrder.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/drive/query/SortOrder.Builder",
                "description": "",
                "methods": [
                    {
                        "name": "addSortAscending(SortableMetadataField sortField)",
                        "return_type": "SortOrder.Builder",
                        "description": "Adds the SortableMetadataField to be used to sort the query results in ascending order of the values of the sortField."
                    },
                    {
                        "name": "addSortDescending(SortableMetadataField sortField)",
                        "return_type": "SortOrder.Builder",
                        "description": "Adds the SortableMetadataField to be used to sort the query results in descending order of the values of the sortField."
                    },
                    {
                        "name": "build()",
                        "return_type": "SortOrder",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "streamprotect",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/streamprotect/package-summary",
        "classes": [
            {
                "name": "ClockType",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/streamprotect/ClockType",
                "description": "ClockType informs Stream Protect what is the clock of the packet receiving time (microseconds) in FrameInfo from client app.",
                "methods": [
                    {
                        "name": "getClockType()",
                        "return_type": "int",
                        "description": "Extracts ClockType."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FrameInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/streamprotect/FrameInfo",
                "description": "A FrameInfo instance is a Parcelable that contains data about a video frame of a streaming session.",
                "methods": [
                    {
                        "name": "getFrameId()",
                        "return_type": "int",
                        "description": "The ID of the frame, or frame number."
                    },
                    {
                        "name": "getFrameReceiveEndTimeUs()",
                        "return_type": "long",
                        "description": "The arrival time of the last packet for this frame in microseconds."
                    },
                    {
                        "name": "getFrameReceiveStartTimeUs()",
                        "return_type": "long",
                        "description": "The arrival time of the first packet for this frame in microseconds."
                    },
                    {
                        "name": "getFrameSizeBytes()",
                        "return_type": "int",
                        "description": "The size of the frame in bytes."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreamProtect",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/streamprotect/StreamProtect",
                "description": "Helpers for getting a StreamProtectClient for accessing the Stream Protect API.",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticStreamProtectClient",
                        "description": "Returns a StreamProtectClient that is used to access all APIs."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticStreamProtectClient",
                        "description": "Returns a StreamProtectClient that is used to access all APIs."
                    }
                ]
            },
            {
                "name": "StreamProtectEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/streamprotect/StreamProtectEvent",
                "description": "A StreamProtectEvent instance is a Parcelable that indicates the status of Stream Protect.",
                "methods": [
                    {
                        "name": "getEventCode()",
                        "return_type": "int",
                        "description": "Extracts the status of Stream Protect."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreamProtectOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/streamprotect/StreamProtectOptions",
                "description": "StreamProtectOptions configure Stream Protect.",
                "methods": [
                    {
                        "name": "getClockType()",
                        "return_type": "ClockType",
                        "description": "Returns ClockType."
                    },
                    {
                        "name": "getExpectedFps()",
                        "return_type": "int",
                        "description": "Returns the expected video frames per second for a session."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StreamProtectOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/streamprotect/StreamProtectOptions.Builder",
                "description": "Builder to create a StreamProtectOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StreamProtectOptions",
                        "description": "Create a mutable StreamProtectOptions."
                    },
                    {
                        "name": "setClockType(ClockType clockType)",
                        "return_type": "StreamProtectOptions.Builder",
                        "description": "Setter for clockType."
                    },
                    {
                        "name": "setExpectedFps(int expectedFps)",
                        "return_type": "StreamProtectOptions.Builder",
                        "description": "Setter for expectedFps."
                    }
                ]
            },
            {
                "name": "OnStreamProtectEventListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/streamprotect/OnStreamProtectEventListener",
                "description": "Listener for StreamProtectEvent.",
                "methods": [
                    {
                        "name": "onEvent(StreamProtectEvent event)",
                        "return_type": "abstract void",
                        "description": "Callback to handle StreamProtectEvent reported from Stream Protect core algorithm."
                    }
                ]
            },
            {
                "name": "StreamProtectClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/streamprotect/StreamProtectClient",
                "description": "Stream Protect client that handles API calls.",
                "methods": [
                    {
                        "name": "disable()",
                        "return_type": "abstract Task<Void>",
                        "description": "Disables/stops Stream Protect when the current session ends."
                    },
                    {
                        "name": "enable(StreamProtectOptions options, OnStreamProtectEventListener listener)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Enables Stream Protect for a streaming session."
                    },
                    {
                        "name": "isFeatureSupported()",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Returns whether the current device supports Stream Protect."
                    },
                    {
                        "name": "submitFrameInfo(FrameInfo frameInfo)",
                        "return_type": "abstract Task<Void>",
                        "description": "Informs Stream Protect a newly arrived frame using FrameInfo."
                    }
                ]
            },
            {
                "name": "StreamProtectOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/streamprotect/StreamProtectOptions.Builder",
                "description": "Builder to create a StreamProtectOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StreamProtectOptions",
                        "description": "Create a mutable StreamProtectOptions."
                    },
                    {
                        "name": "setClockType(ClockType clockType)",
                        "return_type": "StreamProtectOptions.Builder",
                        "description": "Setter for clockType."
                    },
                    {
                        "name": "setExpectedFps(int expectedFps)",
                        "return_type": "StreamProtectOptions.Builder",
                        "description": "Setter for expectedFps."
                    }
                ]
            }
        ]
    },
    {
        "name": "verifier",
        "path": "https://developers.google.com/android/reference/com/google/android/vending/verifier/package-summary",
        "classes": [
            {
                "name": "IListHarmfulAppsCallback.Stub",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/vending/verifier/IListHarmfulAppsCallback.Stub",
                "description": "",
                "methods": [
                    {
                        "name": "asInterface(IBinder obj)",
                        "return_type": "staticIListHarmfulAppsCallback",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IListHarmfulAppsCallback.Stub.Proxy",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/vending/verifier/IListHarmfulAppsCallback.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "onListHarmfulAppsResult(boolean success, byte[] result)",
                        "return_type": "void",
                        "description": "This will be called with the results of the listHarmfulApps API."
                    }
                ]
            },
            {
                "name": "IPackageVerificationApiService.Stub",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/vending/verifier/IPackageVerificationApiService.Stub",
                "description": "",
                "methods": [
                    {
                        "name": "asInterface(IBinder obj)",
                        "return_type": "staticIPackageVerificationApiService",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IPackageVerificationApiService.Stub.Proxy",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/vending/verifier/IPackageVerificationApiService.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "getVerifyAppsData(IVerifyAppsDataCallback callback, long flags)",
                        "return_type": "void",
                        "description": "This method can be used to get a variety of VerifyApps related data."
                    },
                    {
                        "name": "getVerifyAppsDataV2(IVerifyAppsDataCallback callback, Bundle bundle)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "listHarmfulApps(IListHarmfulAppsCallback callback)",
                        "return_type": "void",
                        "description": "Get a list of the harmful apps that are currently installed on the device."
                    }
                ]
            },
            {
                "name": "IVerifyAppsDataCallback.Stub",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/vending/verifier/IVerifyAppsDataCallback.Stub",
                "description": "",
                "methods": [
                    {
                        "name": "asInterface(IBinder obj)",
                        "return_type": "staticIVerifyAppsDataCallback",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IVerifyAppsDataCallback.Stub.Proxy",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/vending/verifier/IVerifyAppsDataCallback.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "onGetVerifyAppsDataResult(boolean success, Bundle result)",
                        "return_type": "void",
                        "description": "This will be called with the results of the getVerifyAppsData API."
                    }
                ]
            },
            {
                "name": "IListHarmfulAppsCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/vending/verifier/IListHarmfulAppsCallback",
                "description": "This is a callback object to return the results from the listHarmfulApps API in IPackageVerificationApiService.",
                "methods": [
                    {
                        "name": "onListHarmfulAppsResult(boolean success, byte[] result)",
                        "return_type": "abstract void",
                        "description": "This will be called with the results of the listHarmfulApps API."
                    }
                ]
            },
            {
                "name": "IPackageVerificationApiService",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/vending/verifier/IPackageVerificationApiService",
                "description": "This is the main binder interface for the PackageVerificationApiService",
                "methods": [
                    {
                        "name": "getVerifyAppsData(IVerifyAppsDataCallback callback, long flags)",
                        "return_type": "abstract void",
                        "description": "This method can be used to get a variety of VerifyApps related data."
                    },
                    {
                        "name": "getVerifyAppsDataV2(IVerifyAppsDataCallback callback, Bundle bundle)",
                        "return_type": "abstract void",
                        "description": ""
                    },
                    {
                        "name": "listHarmfulApps(IListHarmfulAppsCallback callback)",
                        "return_type": "abstract void",
                        "description": "Get a list of the harmful apps that are currently installed on the device."
                    }
                ]
            },
            {
                "name": "IVerifyAppsDataCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/vending/verifier/IVerifyAppsDataCallback",
                "description": "This is a callback object to return the results from the getVerifyAppsData API in IPackageVerificationApiService.",
                "methods": [
                    {
                        "name": "onGetVerifyAppsDataResult(boolean success, Bundle result)",
                        "return_type": "abstract void",
                        "description": "This will be called with the results of the getVerifyAppsData API."
                    }
                ]
            },
            {
                "name": "IListHarmfulAppsCallback.Stub.Proxy",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IListHarmfulAppsCallback.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "onListHarmfulAppsResult(boolean success, byte[] result)",
                        "return_type": "void",
                        "description": "This will be called with the results of the listHarmfulApps API."
                    }
                ]
            },
            {
                "name": "IPackageVerificationApiService.Stub.Proxy",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IPackageVerificationApiService.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "getVerifyAppsData(IVerifyAppsDataCallback callback, long flags)",
                        "return_type": "void",
                        "description": "This method can be used to get a variety of VerifyApps related data."
                    },
                    {
                        "name": "getVerifyAppsDataV2(IVerifyAppsDataCallback callback, Bundle bundle)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "listHarmfulApps(IListHarmfulAppsCallback callback)",
                        "return_type": "void",
                        "description": "Get a list of the harmful apps that are currently installed on the device."
                    }
                ]
            },
            {
                "name": "IVerifyAppsDataCallback.Stub.Proxy",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IVerifyAppsDataCallback.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "onGetVerifyAppsDataResult(boolean success, Bundle result)",
                        "return_type": "void",
                        "description": "This will be called with the results of the getVerifyAppsData API."
                    }
                ]
            },
            {
                "name": "IListHarmfulAppsCallback.Stub",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IListHarmfulAppsCallback.Stub",
                "description": "",
                "methods": [
                    {
                        "name": "asInterface(IBinder obj)",
                        "return_type": "staticIListHarmfulAppsCallback",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IPackageVerificationApiService.Stub",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IPackageVerificationApiService.Stub",
                "description": "",
                "methods": [
                    {
                        "name": "asInterface(IBinder obj)",
                        "return_type": "staticIPackageVerificationApiService",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IVerifyAppsDataCallback.Stub",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IVerifyAppsDataCallback.Stub",
                "description": "",
                "methods": [
                    {
                        "name": "asInterface(IBinder obj)",
                        "return_type": "staticIVerifyAppsDataCallback",
                        "description": ""
                    }
                ]
            },
            {
                "name": "IListHarmfulAppsCallback.Stub.Proxy",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IListHarmfulAppsCallback.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "onListHarmfulAppsResult(boolean success, byte[] result)",
                        "return_type": "void",
                        "description": "This will be called with the results of the listHarmfulApps API."
                    }
                ]
            },
            {
                "name": "IPackageVerificationApiService.Stub.Proxy",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IPackageVerificationApiService.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "getVerifyAppsData(IVerifyAppsDataCallback callback, long flags)",
                        "return_type": "void",
                        "description": "This method can be used to get a variety of VerifyApps related data."
                    },
                    {
                        "name": "getVerifyAppsDataV2(IVerifyAppsDataCallback callback, Bundle bundle)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "listHarmfulApps(IListHarmfulAppsCallback callback)",
                        "return_type": "void",
                        "description": "Get a list of the harmful apps that are currently installed on the device."
                    }
                ]
            },
            {
                "name": "IVerifyAppsDataCallback.Stub.Proxy",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/vending/verifier/IVerifyAppsDataCallback.Stub.Proxy",
                "description": "",
                "methods": [
                    {
                        "name": "onGetVerifyAppsDataResult(boolean success, Bundle result)",
                        "return_type": "void",
                        "description": "This will be called with the results of the getVerifyAppsData API."
                    }
                ]
            }
        ]
    },
    {
        "name": "text",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/vision/text/package-summary",
        "classes": [
            {
                "name": "Element",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/text/Element",
                "description": "Roughly equivalent to a space-separated \"word\" in most Latin languages, or a character in others.",
                "methods": [
                    {
                        "name": "getBoundingBox()",
                        "return_type": "Rect",
                        "description": "Axis-aligned bounding box containing the text."
                    },
                    {
                        "name": "getComponents()",
                        "return_type": "List<? extendsText>",
                        "description": "This class is the bottom of the tree, so this function always returns an empty list as it has no components."
                    },
                    {
                        "name": "getCornerPoints()",
                        "return_type": "Point[]",
                        "description": "Four corner points in clockwise direction starting with top-left."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Prevailing language in the text, if any."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "String",
                        "description": "Retrieve the recognized text as a string."
                    }
                ]
            },
            {
                "name": "Line",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/text/Line",
                "description": "A line of text.",
                "methods": [
                    {
                        "name": "getAngle()",
                        "return_type": "float",
                        "description": "Angle of rotation (in degrees, clockwise being positive"
                    },
                    {
                        "name": "getBoundingBox()",
                        "return_type": "Rect",
                        "description": "Axis-aligned bounding box containing the text."
                    },
                    {
                        "name": "getComponents()",
                        "return_type": "List<? extendsText>",
                        "description": "Smaller components that comprise this entity, if any."
                    },
                    {
                        "name": "getCornerPoints()",
                        "return_type": "Point[]",
                        "description": "Four corner points in clockwise direction starting with top-left."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Prevailing language in the text, if any."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "String",
                        "description": "Retrieve the recognized text as a string."
                    },
                    {
                        "name": "isVertical()",
                        "return_type": "boolean",
                        "description": "Whether or not the text layout is vertical."
                    }
                ]
            },
            {
                "name": "TextBlock",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/text/TextBlock",
                "description": "A block of text (think of it as a paragraph) as deemed by the OCR engine.",
                "methods": [
                    {
                        "name": "getBoundingBox()",
                        "return_type": "Rect",
                        "description": "Returns the TextBlock's axis-aligned bounding box."
                    },
                    {
                        "name": "getComponents()",
                        "return_type": "List<? extendsText>",
                        "description": "Smaller components that comprise this entity, if any."
                    },
                    {
                        "name": "getCornerPoints()",
                        "return_type": "Point[]",
                        "description": "4 corner points in clockwise direction starting with top-left."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "String",
                        "description": "Prevailing language in the TextBlock."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "String",
                        "description": "Retrieve the recognized text as a string."
                    }
                ]
            },
            {
                "name": "TextRecognizer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/text/TextRecognizer",
                "description": "Finds and recognizes text in a supplied Frame.",
                "methods": [
                    {
                        "name": "detect(Frame frame)",
                        "return_type": "SparseArray<TextBlock>",
                        "description": "Detects and recognizes text in a image."
                    },
                    {
                        "name": "isOperational()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TextRecognizer.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/vision/text/TextRecognizer.Builder",
                "description": "TextRecognizer Builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TextRecognizer",
                        "description": "Creates a TextRecognizer instance."
                    }
                ]
            },
            {
                "name": "Text",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/vision/text/Text",
                "description": "Common interface for every entity across the hierarchy of recognized text.",
                "methods": [
                    {
                        "name": "getBoundingBox()",
                        "return_type": "abstractRect",
                        "description": "Axis-aligned bounding box containing the text."
                    },
                    {
                        "name": "getComponents()",
                        "return_type": "abstractList<? extendsText>",
                        "description": "Smaller components that comprise this entity, if any."
                    },
                    {
                        "name": "getCornerPoints()",
                        "return_type": "abstractPoint[]",
                        "description": "Four corner points in clockwise direction starting with top-left."
                    },
                    {
                        "name": "getLanguage()",
                        "return_type": "abstractString",
                        "description": "Prevailing language in the text, if any."
                    },
                    {
                        "name": "getValue()",
                        "return_type": "abstractString",
                        "description": "Retrieve the recognized text as a string."
                    }
                ]
            },
            {
                "name": "TextRecognizer.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/vision/text/TextRecognizer.Builder",
                "description": "TextRecognizer Builder.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "TextRecognizer",
                        "description": "Creates a TextRecognizer instance."
                    }
                ]
            }
        ]
    },
    {
        "name": "service",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fitness/service/package-summary",
        "classes": [
            {
                "name": "FitnessSensorService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/service/FitnessSensorService",
                "description": "A service which allows an installed application to expose sensors to Google Fit, so that they can be used by other applications through the standard SensorsClient.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onFindDataSources(List<DataType> dataTypes)",
                        "return_type": "abstractList<DataSource>",
                        "description": "Find application data sources which match the given data types."
                    },
                    {
                        "name": "onRegister(FitnessSensorServiceRequest request)",
                        "return_type": "abstract boolean",
                        "description": "Registers for events from a particular data source at a given rate."
                    },
                    {
                        "name": "onUnregister(DataSource dataSource)",
                        "return_type": "abstract boolean",
                        "description": "Unregisters for events from a particular data source."
                    }
                ]
            },
            {
                "name": "FitnessSensorServiceRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fitness/service/FitnessSensorServiceRequest",
                "description": "Request for registering for sensor events from an application-exposed sensor data source.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getBatchInterval(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Sets the maximum delay between a data point being detected and reported."
                    },
                    {
                        "name": "getDataSource()",
                        "return_type": "DataSource",
                        "description": "Returns the data source the client is registering to."
                    },
                    {
                        "name": "getDispatcher()",
                        "return_type": "SensorEventDispatcher",
                        "description": "Returns a dispatcher that can be used to send events back to the Fitness Platform for this particular registration."
                    },
                    {
                        "name": "getSamplingRate(TimeUnit timeUnit)",
                        "return_type": "long",
                        "description": "Returns the desired delay between two consecutive collected data points, in the given time unit."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SensorEventDispatcher",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fitness/service/SensorEventDispatcher",
                "description": "Dispatcher that can be used by FitnessSensorService implementations to push events to the Fitness Platform.",
                "methods": [
                    {
                        "name": "publish(DataPoint dataPoint)",
                        "return_type": "abstract void",
                        "description": "Publishes a new data point to the Fitness Platform."
                    },
                    {
                        "name": "publish(List<DataPoint> dataPoints)",
                        "return_type": "abstract void",
                        "description": "Publishes a batch of data points to the Fitness Platform."
                    }
                ]
            }
        ]
    },
    {
        "name": "auth",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/package-summary",
        "classes": [
            {
                "name": "AccountChangeEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/AccountChangeEvent",
                "description": "AccountChangeEvent instances are Parcelables that contain data about an event for an account (e.g., the account was added, modified, etc.).",
                "methods": [
                    {
                        "name": "equals(Object that)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccountName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getChangeData()",
                        "return_type": "String",
                        "description": "Extra data about the change, if any."
                    },
                    {
                        "name": "getChangeType()",
                        "return_type": "int",
                        "description": "The change type of this event."
                    },
                    {
                        "name": "getEventIndex()",
                        "return_type": "int",
                        "description": "The index of the event."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AccountChangeEventsRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/AccountChangeEventsRequest",
                "description": "Requests for AccountChangeEvents.",
                "methods": [
                    {
                        "name": "getAccount()",
                        "return_type": "Account",
                        "description": ""
                    },
                    {
                        "name": "getAccountName()",
                        "return_type": "String",
                        "description": "This method is deprecated. use getAccount("
                    },
                    {
                        "name": "getEventIndex()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "setAccount(Account account)",
                        "return_type": "AccountChangeEventsRequest",
                        "description": "Sets the account to fetch events for."
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "AccountChangeEventsRequest",
                        "description": "This method is deprecated. use setAccount(android.accounts.Account"
                    },
                    {
                        "name": "setEventIndex(int eventIndex)",
                        "return_type": "AccountChangeEventsRequest",
                        "description": "Sets the event index to restrict the results by."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AccountChangeEventsResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/AccountChangeEventsResponse",
                "description": "Response to a AccountChangeEventsRequest.",
                "methods": [
                    {
                        "name": "getEvents()",
                        "return_type": "List<AccountChangeEvent>",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CookieUtil",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/CookieUtil",
                "description": "Helper class to build the cookie String from the given fields.",
                "methods": [
                    {
                        "name": "getCookieUrl(String domain, Boolean isSecure)",
                        "return_type": "staticString",
                        "description": ""
                    },
                    {
                        "name": "getCookieValue(String name, String value, String domain, String path, Boolean isHttpOnly, Boolean isSecure, Long maxAge)",
                        "return_type": "staticString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleAuthUtil",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/GoogleAuthUtil",
                "description": "GoogleAuthUtil provides static utility methods to acquire OAuth2 tokens for Google accounts; and also to invalidate OAuth2 tokens.",
                "methods": [
                    {
                        "name": "clearToken(Context context, String token)",
                        "return_type": "static void",
                        "description": "Clear the specified token in local cache with respect to the Context."
                    },
                    {
                        "name": "getAccountChangeEvents(Context context, int eventIndex, String accountName)",
                        "return_type": "staticList<AccountChangeEvent>",
                        "description": "Gets a list of events for the given account."
                    },
                    {
                        "name": "getAccountId(Context ctx, String accountName)",
                        "return_type": "staticString",
                        "description": "Gets a stable account id for the given account name."
                    },
                    {
                        "name": "getToken(Context context, Account account, String scope, Bundle extras)",
                        "return_type": "staticString",
                        "description": "Gets an access token directly."
                    },
                    {
                        "name": "getToken(Context context, Account account, String scope)",
                        "return_type": "staticString",
                        "description": ""
                    },
                    {
                        "name": "getToken(Context context, String accountName, String scope, Bundle extras)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use getToken(Context, Account, String, Bundle"
                    },
                    {
                        "name": "getToken(Context context, String accountName, String scope)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use getToken(Context, Account, String"
                    },
                    {
                        "name": "getTokenWithNotification(Context context, String accountName, String scope, Bundle extras, String authority, Bundle syncBundle)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use getTokenWithNotification(Context, Account, String, Bundle, String, Bundle"
                    },
                    {
                        "name": "getTokenWithNotification(Context context, Account account, String scope, Bundle extras)",
                        "return_type": "staticString",
                        "description": "Authenticates the user and returns a Google authentication token, or throws an Exception if there was an error while getting the token."
                    },
                    {
                        "name": "getTokenWithNotification(Context context, String accountName, String scope, Bundle extras, Intent callback)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use getTokenWithNotification(Context, Account, String, Bundle, Intent"
                    },
                    {
                        "name": "getTokenWithNotification(Context context, Account account, String scope, Bundle extras, String authority, Bundle syncBundle)",
                        "return_type": "staticString",
                        "description": "Authenticates the user and returns a Google authentication token, or throws an Exception if there was an error while getting the token."
                    },
                    {
                        "name": "getTokenWithNotification(Context context, String accountName, String scope, Bundle extras)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use getTokenWithNotification(Context, Account, String, Bundle"
                    },
                    {
                        "name": "getTokenWithNotification(Context context, Account account, String scope, Bundle extras, Intent callback)",
                        "return_type": "staticString",
                        "description": "Authenticates the user and returns a Google authentication token, or throws an Exception if there was an error while getting the token."
                    },
                    {
                        "name": "invalidateToken(Context context, String token)",
                        "return_type": "static void",
                        "description": "This method is deprecated. Deprecated because calling this function requires permissions MANAGE_ACCOUNTS and USE_CREDENTIALS. Please use clearToken(Context, String"
                    },
                    {
                        "name": "removeAccount(Context context, Account account)",
                        "return_type": "staticBundle",
                        "description": "Removes an account from the AccountManager."
                    },
                    {
                        "name": "requestGoogleAccountsAccess(Context context)",
                        "return_type": "staticBoolean",
                        "description": "Whitelists caller in Account Manager to see accounts of GOOGLE_ACCOUNT_TYPE."
                    }
                ]
            }
        ]
    },
    {
        "name": "common",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/u2f/api/common/package-summary",
        "classes": [
            {
                "name": "ChannelIdValue",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ChannelIdValue",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getObjectValue()",
                        "return_type": "JSONObject",
                        "description": ""
                    },
                    {
                        "name": "getObjectValueAsString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getStringValue()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getType()",
                        "return_type": "ChannelIdValue.ChannelIdValueType",
                        "description": ""
                    },
                    {
                        "name": "getTypeAsInt()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toChannelIdValueType(int type)",
                        "return_type": "staticChannelIdValue.ChannelIdValueType",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ClientData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ClientData",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toJsonString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ClientData.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ClientData.Builder",
                "description": "Builder for ClientData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ClientData",
                        "description": ""
                    },
                    {
                        "name": "clone()",
                        "return_type": "ClientData.Builder",
                        "description": "Clones this builder instance."
                    },
                    {
                        "name": "newInstance()",
                        "return_type": "staticClientData.Builder",
                        "description": ""
                    },
                    {
                        "name": "setChallenge(String challenge)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the client data challenge value."
                    },
                    {
                        "name": "setChannelId(ChannelIdValue cidValue)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the client data ChannelIdValue."
                    },
                    {
                        "name": "setOrigin(String origin)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the origin for the client data."
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the type of the ClientData."
                    }
                ]
            },
            {
                "name": "Error",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/Error",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "getErrorCode()",
                        "return_type": "ErrorCode",
                        "description": ""
                    },
                    {
                        "name": "getErrorMessage()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "toJsonObject()",
                        "return_type": "JSONObject",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ErrorResponseData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ErrorResponseData",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getErrorCode()",
                        "return_type": "ErrorCode",
                        "description": ""
                    },
                    {
                        "name": "getErrorCodeAsInt()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getErrorMessage()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "KeyHandle",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/KeyHandle",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getBytes()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getProtocolVersion()",
                        "return_type": "ProtocolVersion",
                        "description": ""
                    },
                    {
                        "name": "getTransports()",
                        "return_type": "List<Transport>",
                        "description": ""
                    },
                    {
                        "name": "getVersionCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "parseFromJson(JSONObject registeredKey)",
                        "return_type": "staticKeyHandle",
                        "description": "Parses a JSON object, which is assumed to be of a U2F signRequest or registeredKey type, as a KeyHandle."
                    },
                    {
                        "name": "toJson()",
                        "return_type": "JSONObject",
                        "description": "Create JSON representation of a KeyHandle."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RegisteredKey",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RegisteredKey",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": "Generated by Eclipse."
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getChallengeValue()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getKeyHandle()",
                        "return_type": "KeyHandle",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": "Generated by Eclipse."
                    },
                    {
                        "name": "parseFromJson(JSONObject signRequest)",
                        "return_type": "staticRegisteredKey",
                        "description": "Parses a U2F sign request JSON object as a RegisteredKey."
                    },
                    {
                        "name": "toJson()",
                        "return_type": "JSONObject",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RegisterRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RegisterRequest",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": "Generated by Eclipse."
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getChallengeValue()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getProtocolVersion()",
                        "return_type": "ProtocolVersion",
                        "description": ""
                    },
                    {
                        "name": "getVersionCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": "Generated by Eclipse."
                    },
                    {
                        "name": "parseFromJson(JSONObject registerRequest)",
                        "return_type": "staticRegisterRequest",
                        "description": "Parses a U2F register request JSON object as a RegisterRequest."
                    },
                    {
                        "name": "toJson()",
                        "return_type": "JSONObject",
                        "description": "Create JSON representation of a RegisterRequest."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RegisterRequestParams",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RegisterRequestParams",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAllAppIds()",
                        "return_type": "Set<Uri>",
                        "description": ""
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "getChannelIdValue()",
                        "return_type": "ChannelIdValue",
                        "description": ""
                    },
                    {
                        "name": "getDisplayHint()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getRegisterRequests()",
                        "return_type": "List<RegisterRequest>",
                        "description": ""
                    },
                    {
                        "name": "getRegisteredKeys()",
                        "return_type": "List<RegisteredKey>",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "Double",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RegisterRequestParams.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RegisterRequestParams.Builder",
                "description": "Builds RegisterRequestParams.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "RegisterRequestParams",
                        "description": "Builds a SignRequestParams."
                    },
                    {
                        "name": "setAppId(Uri appId)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets register request appId."
                    },
                    {
                        "name": "setChannelIdValue(ChannelIdValue channelIdValue)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets channelId value for the register request."
                    },
                    {
                        "name": "setDisplayHint(String displayHint)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets the display hint that is shown to the user."
                    },
                    {
                        "name": "setRegisterRequests(List<RegisterRequest> registerRequests)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets register requests in this RegisterRequestParams."
                    },
                    {
                        "name": "setRegisteredKeys(List<RegisteredKey> registeredKeys)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets registered keys for the register request."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single U2F request to the client and receives reply"
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets timeout in seconds, to indicate for how long this request remains valid."
                    }
                ]
            },
            {
                "name": "RegisterResponseData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RegisterResponseData",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getClientDataString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getProtocolVersion()",
                        "return_type": "ProtocolVersion",
                        "description": ""
                    },
                    {
                        "name": "getRegisterData()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getVersionCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toJsonObject()",
                        "return_type": "JSONObject",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RequestParams",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RequestParams",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "getAllAppIds()",
                        "return_type": "abstractSet<Uri>",
                        "description": ""
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "abstractUri",
                        "description": ""
                    },
                    {
                        "name": "getChannelIdValue()",
                        "return_type": "abstractChannelIdValue",
                        "description": ""
                    },
                    {
                        "name": "getDisplayHint()",
                        "return_type": "abstractString",
                        "description": ""
                    },
                    {
                        "name": "getRegisteredKeys()",
                        "return_type": "abstractList<RegisteredKey>",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "abstractInteger",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "abstractDouble",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ResponseData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ResponseData",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "toJsonObject()",
                        "return_type": "abstractJSONObject",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SignRequestParams",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/SignRequestParams",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAllAppIds()",
                        "return_type": "Set<Uri>",
                        "description": ""
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "getChannelIdValue()",
                        "return_type": "ChannelIdValue",
                        "description": ""
                    },
                    {
                        "name": "getDefaultSignChallenge()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getDisplayHint()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getRegisteredKeys()",
                        "return_type": "List<RegisteredKey>",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "Double",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SignRequestParams.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/SignRequestParams.Builder",
                "description": "Builds SignRequestParams.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SignRequestParams",
                        "description": "Builds a SignRequestParams."
                    },
                    {
                        "name": "setAppId(Uri appId)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets sign request appId."
                    },
                    {
                        "name": "setChannelIdValue(ChannelIdValue channelIdValue)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets channelId value for the sign request."
                    },
                    {
                        "name": "setDefaultSignChallenge(byte[] defaultSignChallenge)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets default sign challenge for the sign request."
                    },
                    {
                        "name": "setDisplayHint(String displayHint)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets the display hint that is shown to the user."
                    },
                    {
                        "name": "setRegisteredKeys(List<RegisteredKey> registeredKeys)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets registered keys for the sign request."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single U2F request to the client and receives a reply"
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets timeout in seconds, to indicate for how long this request remains valid."
                    }
                ]
            },
            {
                "name": "SignResponseData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/SignResponseData",
                "description": "This class is deprecated. Please use Fido APIs instead.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getClientDataString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getKeyHandle()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getSignatureData()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toJsonObject()",
                        "return_type": "JSONObject",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ChannelIdValue.ChannelIdValueType",
                "type_obj": "enum",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ChannelIdValue.ChannelIdValueType",
                "description": "The type of value stored by this ChannelIdValue.",
                "methods": []
            },
            {
                "name": "ChannelIdValue.UnsupportedChannelIdValueTypeException",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ChannelIdValue.UnsupportedChannelIdValueTypeException",
                "description": "Exception thrown when an unsupported or unrecognized ChannelIdValueType is encountered.",
                "methods": []
            },
            {
                "name": "ClientData.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/ClientData.Builder",
                "description": "Builder for ClientData.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ClientData",
                        "description": ""
                    },
                    {
                        "name": "clone()",
                        "return_type": "ClientData.Builder",
                        "description": "Clones this builder instance."
                    },
                    {
                        "name": "newInstance()",
                        "return_type": "staticClientData.Builder",
                        "description": ""
                    },
                    {
                        "name": "setChallenge(String challenge)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the client data challenge value."
                    },
                    {
                        "name": "setChannelId(ChannelIdValue cidValue)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the client data ChannelIdValue."
                    },
                    {
                        "name": "setOrigin(String origin)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the origin for the client data."
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "ClientData.Builder",
                        "description": "Set the type of the ClientData."
                    }
                ]
            },
            {
                "name": "RegisterRequestParams.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/RegisterRequestParams.Builder",
                "description": "Builds RegisterRequestParams.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "RegisterRequestParams",
                        "description": "Builds a SignRequestParams."
                    },
                    {
                        "name": "setAppId(Uri appId)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets register request appId."
                    },
                    {
                        "name": "setChannelIdValue(ChannelIdValue channelIdValue)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets channelId value for the register request."
                    },
                    {
                        "name": "setDisplayHint(String displayHint)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets the display hint that is shown to the user."
                    },
                    {
                        "name": "setRegisterRequests(List<RegisterRequest> registerRequests)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets register requests in this RegisterRequestParams."
                    },
                    {
                        "name": "setRegisteredKeys(List<RegisteredKey> registeredKeys)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets registered keys for the register request."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single U2F request to the client and receives reply"
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "RegisterRequestParams.Builder",
                        "description": "Sets timeout in seconds, to indicate for how long this request remains valid."
                    }
                ]
            },
            {
                "name": "SignRequestParams.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/u2f/api/common/SignRequestParams.Builder",
                "description": "Builds SignRequestParams.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SignRequestParams",
                        "description": "Builds a SignRequestParams."
                    },
                    {
                        "name": "setAppId(Uri appId)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets sign request appId."
                    },
                    {
                        "name": "setChannelIdValue(ChannelIdValue channelIdValue)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets channelId value for the sign request."
                    },
                    {
                        "name": "setDefaultSignChallenge(byte[] defaultSignChallenge)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets default sign challenge for the sign request."
                    },
                    {
                        "name": "setDisplayHint(String displayHint)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets the display hint that is shown to the user."
                    },
                    {
                        "name": "setRegisteredKeys(List<RegisteredKey> registeredKeys)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets registered keys for the sign request."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single U2F request to the client and receives a reply"
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "SignRequestParams.Builder",
                        "description": "Sets timeout in seconds, to indicate for how long this request remains valid."
                    }
                ]
            }
        ]
    },
    {
        "name": "common",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/fido2/api/common/package-summary",
        "classes": [
            {
                "name": "AuthenticationExtensions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticationExtensions",
                "description": "Represents extensions that can be passed into FIDO2 APIs.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getFidoAppIdExtension()",
                        "return_type": "FidoAppIdExtension",
                        "description": ""
                    },
                    {
                        "name": "getUserVerificationMethodExtension()",
                        "return_type": "UserVerificationMethodExtension",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticationExtensions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticationExtensions.Builder",
                "description": "Builder for AuthenticationExtensions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AuthenticationExtensions",
                        "description": "Builds the AuthenticationExtensions object."
                    },
                    {
                        "name": "setFido2Extension(FidoAppIdExtension appIdExtension)",
                        "return_type": "AuthenticationExtensions.Builder",
                        "description": "Sets the App ID extension, which allows for authentication of U2F authenticators previously registered under the supplied App ID."
                    },
                    {
                        "name": "setUserVerificationMethodExtension(UserVerificationMethodExtension userVerificationMethodExtension)",
                        "return_type": "AuthenticationExtensions.Builder",
                        "description": "Sets the User Verification Method extension, which allows the relying party to ascertain up to three authentication methods that were used."
                    }
                ]
            },
            {
                "name": "AuthenticationExtensionsClientOutputs",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticationExtensionsClientOutputs",
                "description": "This container class represents client output for extensions that can be passed into FIDO2 APIs.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticAuthenticationExtensionsClientOutputs",
                        "description": "De-serializes the AuthenticatorAssertionResponse from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getUvmEntries()",
                        "return_type": "UvmEntries",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the AuthenticationExtensionsClientOutputs to bytes."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticationExtensionsClientOutputs.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticationExtensionsClientOutputs.Builder",
                "description": "Builder for AuthenticationExtensionsClientOutputs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AuthenticationExtensionsClientOutputs",
                        "description": "Builds the AuthenticationExtensionsClientOutputs object."
                    },
                    {
                        "name": "setUserVerificationMethodEntries(UvmEntries uvmEntries)",
                        "return_type": "AuthenticationExtensionsClientOutputs.Builder",
                        "description": "Sets the User Verification Method extension entries."
                    }
                ]
            },
            {
                "name": "AuthenticatorAssertionResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorAssertionResponse",
                "description": "This structure contains cryptographic signatures produced by scoped credentials that provides proof of possession of a private key as well as evidence of user consent to a specific transaction.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticAuthenticatorAssertionResponse",
                        "description": "De-serializes the AuthenticatorAssertionResponse from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAuthenticatorData()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getClientDataJSON()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getKeyHandle()",
                        "return_type": "byte[]",
                        "description": "This method is deprecated. use PublicKeyCredential.getRawId("
                    },
                    {
                        "name": "getSignature()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getUserHandle()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the AuthenticatorAssertionResponse to bytes."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticatorAttestationResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorAttestationResponse",
                "description": "Represents a newly-created scoped credential, aka the response from a registration request.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticAuthenticatorAttestationResponse",
                        "description": "De-serializes the AuthenticatorAttestationResponse from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttestationObject()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getClientDataJSON()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getKeyHandle()",
                        "return_type": "byte[]",
                        "description": "This method is deprecated. use PublicKeyCredential.getRawId("
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the AuthenticatorAttestationResponse to bytes."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticatorErrorResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorErrorResponse",
                "description": "The response after an error occurred.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticAuthenticatorErrorResponse",
                        "description": "De-serializes the AuthenticatorErrorResponse from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getClientDataJSON()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getErrorCode()",
                        "return_type": "ErrorCode",
                        "description": ""
                    },
                    {
                        "name": "getErrorCodeAsInt()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getErrorMessage()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the AuthenticatorErrorResponse to bytes."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticatorResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorResponse",
                "description": "Authenticators respond to relying party requests by returning an object derived from this interface.",
                "methods": [
                    {
                        "name": "getClientDataJSON()",
                        "return_type": "abstract byte[]",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "abstract byte[]",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticatorSelectionCriteria",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorSelectionCriteria",
                "description": "Relying Parties may use AuthenticatorSelectionCriteria to specify their requirements regarding authenticator attributes.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttachment()",
                        "return_type": "Attachment",
                        "description": ""
                    },
                    {
                        "name": "getAttachmentAsString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getRequireResidentKey()",
                        "return_type": "Boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "AuthenticatorSelectionCriteria.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorSelectionCriteria.Builder",
                "description": "Builder for AuthenticatorSelectionCriteria.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AuthenticatorSelectionCriteria",
                        "description": "Builds the AuthenticatorSelectionCriteria object."
                    },
                    {
                        "name": "setAttachment(Attachment attachment)",
                        "return_type": "AuthenticatorSelectionCriteria.Builder",
                        "description": "Sets the attachment to use for this session."
                    },
                    {
                        "name": "setRequireResidentKey(Boolean requireResidentKey)",
                        "return_type": "AuthenticatorSelectionCriteria.Builder",
                        "description": "Sets whether the key created will be a resident key."
                    }
                ]
            },
            {
                "name": "BrowserPublicKeyCredentialCreationOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserPublicKeyCredentialCreationOptions",
                "description": "Parameters to a make credential request from a Web browser.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticBrowserPublicKeyCredentialCreationOptions",
                        "description": "De-serializes the BrowserPublicKeyCredentialCreationOptions from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAuthenticationExtensions()",
                        "return_type": "AuthenticationExtensions",
                        "description": ""
                    },
                    {
                        "name": "getChallenge()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getClientDataHash()",
                        "return_type": "byte[]",
                        "description": "Gets value of the client data hash."
                    },
                    {
                        "name": "getOrigin()",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "getPublicKeyCredentialCreationOptions()",
                        "return_type": "PublicKeyCredentialCreationOptions",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "Double",
                        "description": ""
                    },
                    {
                        "name": "getTokenBinding()",
                        "return_type": "TokenBinding",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the BrowserPublicKeyCredentialCreationOptions to bytes."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BrowserPublicKeyCredentialCreationOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserPublicKeyCredentialCreationOptions.Builder",
                "description": "Builder for BrowserPublicKeyCredentialCreationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions",
                        "description": "Builds the BrowserPublicKeyCredentialCreationOptions object."
                    },
                    {
                        "name": "setClientDataHash(byte[] clientDataHash)",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets a clientDataHash value to sign over in place of assembling and hashing clientDataJSON during the signature request."
                    },
                    {
                        "name": "setOrigin(Uri origin)",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the origin on whose behalf the calling browser is requesting a registration operation."
                    },
                    {
                        "name": "setPublicKeyCredentialCreationOptions(PublicKeyCredentialCreationOptions publicKeyCredentialCreationOptions)",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the parameters to dictate the client behavior during this registration session."
                    }
                ]
            },
            {
                "name": "BrowserPublicKeyCredentialRequestOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserPublicKeyCredentialRequestOptions",
                "description": "Parameters for a signature request from a Web Browser.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticBrowserPublicKeyCredentialRequestOptions",
                        "description": "De-serializes the BrowserPublicKeyCredentialRequestOptions from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAuthenticationExtensions()",
                        "return_type": "AuthenticationExtensions",
                        "description": ""
                    },
                    {
                        "name": "getChallenge()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getClientDataHash()",
                        "return_type": "byte[]",
                        "description": "Gets value of the client data hash."
                    },
                    {
                        "name": "getOrigin()",
                        "return_type": "Uri",
                        "description": ""
                    },
                    {
                        "name": "getPublicKeyCredentialRequestOptions()",
                        "return_type": "PublicKeyCredentialRequestOptions",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "Double",
                        "description": ""
                    },
                    {
                        "name": "getTokenBinding()",
                        "return_type": "TokenBinding",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the BrowserPublicKeyCredentialRequestOptions to bytes."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "BrowserPublicKeyCredentialRequestOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserPublicKeyCredentialRequestOptions.Builder",
                "description": "Builder for BrowserPublicKeyCredentialRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions",
                        "description": "Builds the BrowserPublicKeyCredentialRequestOptions object."
                    },
                    {
                        "name": "setClientDataHash(byte[] clientDataHash)",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets a clientDataHash value to sign over in place of assembling and hashing clientDataJSON during the signature request."
                    },
                    {
                        "name": "setOrigin(Uri origin)",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the origin on whose behalf the calling browser is requesting an authentication operation."
                    },
                    {
                        "name": "setPublicKeyCredentialRequestOptions(PublicKeyCredentialRequestOptions publicKeyCredentialRequestOptions)",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the parameters to dictate client behavior during this authentication session."
                    }
                ]
            },
            {
                "name": "BrowserRequestOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserRequestOptions",
                "description": "An abstract class representing browser-based request parameters.",
                "methods": [
                    {
                        "name": "getClientDataHash()",
                        "return_type": "abstract byte[]",
                        "description": "Gets value of the client data hash."
                    },
                    {
                        "name": "getOrigin()",
                        "return_type": "abstractUri",
                        "description": ""
                    }
                ]
            },
            {
                "name": "COSEAlgorithmIdentifier",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/COSEAlgorithmIdentifier",
                "description": "This class specifies the cryptographic signature algorithm with which the newly generated credential will be used, and thus the type of asymmetric key pair to be generated.",
                "methods": [
                    {
                        "name": "describeContents()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "fromCoseValue(int value)",
                        "return_type": "staticCOSEAlgorithmIdentifier",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toCoseValue()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FidoAppIdExtension",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/FidoAppIdExtension",
                "description": "Extension for FIDO appId, to support U2F backward compatibility in FIDO2 assertion requests.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "KeyProtectionTypes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/KeyProtectionTypes",
                "description": "The method used by the authenticator to protect the FIDO registration private key material.",
                "methods": []
            },
            {
                "name": "MatcherProtectionTypes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/MatcherProtectionTypes",
                "description": "The method used by the authenticator to protect the matcher that performs user verification.",
                "methods": []
            },
            {
                "name": "PublicKeyCredential",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredential",
                "description": "This class is contains the attributes that are returned to the caller when a new credential is created, or a new assertion is requested.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticPublicKeyCredential",
                        "description": "De-serializes the PublicKeyCredential from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getClientExtensionResults()",
                        "return_type": "AuthenticationExtensionsClientOutputs",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getRawId()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getResponse()",
                        "return_type": "AuthenticatorResponse",
                        "description": ""
                    },
                    {
                        "name": "getType()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the PublicKeyCredential to bytes."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublicKeyCredential.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredential.Builder",
                "description": "Builder for PublicKeyCredential.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublicKeyCredential",
                        "description": "Builds the PublicKeyCredential object."
                    },
                    {
                        "name": "setAuthenticationExtensionsClientOutputs(AuthenticationExtensionsClientOutputs extensionsClientOutputs)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the output produced by the client's processing of the extensions requested by the relying party."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the base64url encoding of the credential identifier."
                    },
                    {
                        "name": "setRawId(byte[] rawId)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the raw value of the credential identifier."
                    },
                    {
                        "name": "setResponse(AuthenticatorResponse response)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the authenticator's response to the clients register or sign request."
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialCreationOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialCreationOptions",
                "description": "This class is used to supply options when creating a new credential.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticPublicKeyCredentialCreationOptions",
                        "description": "De-serializes the PublicKeyCredentialCreationOptions from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAttestationConveyancePreference()",
                        "return_type": "AttestationConveyancePreference",
                        "description": ""
                    },
                    {
                        "name": "getAttestationConveyancePreferenceAsString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getAuthenticationExtensions()",
                        "return_type": "AuthenticationExtensions",
                        "description": ""
                    },
                    {
                        "name": "getAuthenticatorSelection()",
                        "return_type": "AuthenticatorSelectionCriteria",
                        "description": ""
                    },
                    {
                        "name": "getChallenge()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getExcludeList()",
                        "return_type": "List<PublicKeyCredentialDescriptor>",
                        "description": ""
                    },
                    {
                        "name": "getParameters()",
                        "return_type": "List<PublicKeyCredentialParameters>",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getRp()",
                        "return_type": "PublicKeyCredentialRpEntity",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "Double",
                        "description": ""
                    },
                    {
                        "name": "getTokenBinding()",
                        "return_type": "TokenBinding",
                        "description": ""
                    },
                    {
                        "name": "getUser()",
                        "return_type": "PublicKeyCredentialUserEntity",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the PublicKeyCredentialCreationOptions to bytes."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialCreationOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialCreationOptions.Builder",
                "description": "Builder for PublicKeyCredentialCreationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublicKeyCredentialCreationOptions",
                        "description": "Builds the PublicKeyCredentialCreationOptions object."
                    },
                    {
                        "name": "setAttestationConveyancePreference(AttestationConveyancePreference attestationConveyancePreference)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the preference for obfuscation level of the returned attestation data."
                    },
                    {
                        "name": "setAuthenticationExtensions(AuthenticationExtensions authenticationExtensions)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets additional extensions that may dictate some client behavior during an exchange with a connected authenticator."
                    },
                    {
                        "name": "setAuthenticatorSelection(AuthenticatorSelectionCriteria authenticatorSelection)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets constraints on the type of authenticator that is acceptable for this session."
                    },
                    {
                        "name": "setChallenge(byte[] challenge)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the challenge to sign when generating the attestation for this request."
                    },
                    {
                        "name": "setExcludeList(List<PublicKeyCredentialDescriptor> excludeList)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets a list of credentials that, if found on a connected authenticator, will preclude registration of that authenticator with the relying party."
                    },
                    {
                        "name": "setParameters(List<PublicKeyCredentialParameters> parameters)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the PublicKeyCredentialParameters that constrain the type of credential to generate."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single FIDO2 request to the client and receives reply"
                    },
                    {
                        "name": "setRp(PublicKeyCredentialRpEntity rp)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets information for a relying party, on whose behalf a given registration operation is being performed."
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets a timeout that limits the duration of the registration session provided to the user."
                    },
                    {
                        "name": "setTokenBinding(TokenBinding tokenBinding)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the TokenBinding associated with the calling origin."
                    },
                    {
                        "name": "setUser(PublicKeyCredentialUserEntity user)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets information about the user on whose behalf the relying party is registering a credential."
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialDescriptor",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialDescriptor",
                "description": "This class contains the attributes that are specified by a caller when referring to a credential as an input parameter to the registration or authentication method.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getTransports()",
                        "return_type": "List<Transport>",
                        "description": ""
                    },
                    {
                        "name": "getType()",
                        "return_type": "PublicKeyCredentialType",
                        "description": ""
                    },
                    {
                        "name": "getTypeAsString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialParameters",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialParameters",
                "description": "This class supplies additional parameters when creating a new credential.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAlgorithm()",
                        "return_type": "COSEAlgorithmIdentifier",
                        "description": ""
                    },
                    {
                        "name": "getAlgorithmIdAsInteger()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getType()",
                        "return_type": "PublicKeyCredentialType",
                        "description": ""
                    },
                    {
                        "name": "getTypeAsString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialRequestOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialRequestOptions",
                "description": "This class is used to supply an authentication request with the data it needs to generate an assertion.",
                "methods": [
                    {
                        "name": "deserializeFromBytes(byte[] serializedBytes)",
                        "return_type": "staticPublicKeyCredentialRequestOptions",
                        "description": "Deserializes the PublicKeyCredentialRequestOptions from bytes, reversing serializeToBytes("
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAllowList()",
                        "return_type": "List<PublicKeyCredentialDescriptor>",
                        "description": ""
                    },
                    {
                        "name": "getAuthenticationExtensions()",
                        "return_type": "AuthenticationExtensions",
                        "description": ""
                    },
                    {
                        "name": "getChallenge()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "Integer",
                        "description": ""
                    },
                    {
                        "name": "getRpId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "Double",
                        "description": ""
                    },
                    {
                        "name": "getTokenBinding()",
                        "return_type": "TokenBinding",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the PublicKeyCredentialRequestOptions to bytes."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialRequestOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialRequestOptions.Builder",
                "description": "Builder for PublicKeyCredentialRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublicKeyCredentialRequestOptions",
                        "description": "Builds the PublicKeyCredentialRequestOptions object."
                    },
                    {
                        "name": "setAllowList(List<PublicKeyCredentialDescriptor> allowList)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets a list of public key credentials which constrain authentication to authenticators that contain a private key for at least one of the supplied public keys."
                    },
                    {
                        "name": "setAuthenticationExtensions(AuthenticationExtensions authenticationExtensions)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets additional extensions that may dictate some client behavior during an exchange with a connected authenticator."
                    },
                    {
                        "name": "setChallenge(byte[] challenge)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the nonce value that the authenticator should sign using a private key corresponding to a public key credential that is acceptable for this authentication session."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single FIDO2 request to the client and receives reply"
                    },
                    {
                        "name": "setRpId(String rpId)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets identifier for a relying party, on whose behalf a given authentication operation is being performed."
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTokenBinding(TokenBinding tokenBinding)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the TokenBinding associated with the calling origin."
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialRpEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialRpEntity",
                "description": "Represents the information about a relying party with which a credential is associated.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getIcon()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialUserEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialUserEntity",
                "description": "This class is used to supply additional parameters about the user account when creating a new Credential.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getIcon()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "byte[]",
                        "description": ""
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "RequestOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/RequestOptions",
                "description": "An abstract class representing FIDO2 request options.",
                "methods": [
                    {
                        "name": "getChallenge()",
                        "return_type": "abstract byte[]",
                        "description": ""
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "abstractInteger",
                        "description": ""
                    },
                    {
                        "name": "getTimeoutSeconds()",
                        "return_type": "abstractDouble",
                        "description": ""
                    },
                    {
                        "name": "getTokenBinding()",
                        "return_type": "abstractTokenBinding",
                        "description": ""
                    },
                    {
                        "name": "serializeToBytes()",
                        "return_type": "byte[]",
                        "description": "Serializes the RequestOptions to bytes."
                    }
                ]
            },
            {
                "name": "TokenBinding",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/TokenBinding",
                "description": "Represents the Token binding information provided by the relying party.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getTokenBindingId()",
                        "return_type": "String",
                        "description": "Returns the token binding ID if the token binding status is PRESENT, otherwise returns null."
                    },
                    {
                        "name": "getTokenBindingStatusAsString()",
                        "return_type": "String",
                        "description": "Returns the stringified TokenBinding.TokenBindingStatus associated with this instance."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toJsonObject()",
                        "return_type": "JSONObject",
                        "description": "Returns this TokenBinding object as a JSONObject."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UserVerificationMethodExtension",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UserVerificationMethodExtension",
                "description": "Extension for FIDO User Verification Method.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getUvm()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UserVerificationMethods",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UserVerificationMethods",
                "description": "The authentication method/factor used by the authenticator to verify the user.",
                "methods": []
            },
            {
                "name": "UvmEntries",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UvmEntries",
                "description": "Represents up to three user verification methods used by the authenticator.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getUvmEntryList()",
                        "return_type": "List<UvmEntry>",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UvmEntries.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UvmEntries.Builder",
                "description": "Builder for UvmEntries.",
                "methods": [
                    {
                        "name": "addAll(List<UvmEntry> uvmEntryList)",
                        "return_type": "UvmEntries.Builder",
                        "description": ""
                    },
                    {
                        "name": "addUvmEntry(UvmEntry uvmEntry)",
                        "return_type": "UvmEntries.Builder",
                        "description": ""
                    },
                    {
                        "name": "build()",
                        "return_type": "UvmEntries",
                        "description": "Builds the UvmEntries object."
                    }
                ]
            },
            {
                "name": "UvmEntry",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UvmEntry",
                "description": "Represents a single User Verification Method Entry as defined at UVMEntry.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getKeyProtectionType()",
                        "return_type": "short",
                        "description": ""
                    },
                    {
                        "name": "getMatcherProtectionType()",
                        "return_type": "short",
                        "description": ""
                    },
                    {
                        "name": "getUserVerificationMethod()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UvmEntry.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UvmEntry.Builder",
                "description": "Builder for UvmEntry.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "UvmEntry",
                        "description": "Builds the UvmEntry object."
                    },
                    {
                        "name": "setKeyProtectionType(short keyProtectionType)",
                        "return_type": "UvmEntry.Builder",
                        "description": ""
                    },
                    {
                        "name": "setMatcherProtectionType(short matcherProtectionType)",
                        "return_type": "UvmEntry.Builder",
                        "description": ""
                    },
                    {
                        "name": "setUserVerificationMethod(int userVerificationMethod)",
                        "return_type": "UvmEntry.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Algorithm",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/Algorithm",
                "description": "An interface for an algorithm used in public key encryption.",
                "methods": [
                    {
                        "name": "fromAlgoValue(int algoValue)",
                        "return_type": "staticAlgorithm",
                        "description": ""
                    },
                    {
                        "name": "getAlgoValue()",
                        "return_type": "abstract int",
                        "description": "Gets the COSE value for the algorithm used in the encryption of the credential."
                    }
                ]
            },
            {
                "name": "AuthenticationExtensions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticationExtensions.Builder",
                "description": "Builder for AuthenticationExtensions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AuthenticationExtensions",
                        "description": "Builds the AuthenticationExtensions object."
                    },
                    {
                        "name": "setFido2Extension(FidoAppIdExtension appIdExtension)",
                        "return_type": "AuthenticationExtensions.Builder",
                        "description": "Sets the App ID extension, which allows for authentication of U2F authenticators previously registered under the supplied App ID."
                    },
                    {
                        "name": "setUserVerificationMethodExtension(UserVerificationMethodExtension userVerificationMethodExtension)",
                        "return_type": "AuthenticationExtensions.Builder",
                        "description": "Sets the User Verification Method extension, which allows the relying party to ascertain up to three authentication methods that were used."
                    }
                ]
            },
            {
                "name": "AuthenticationExtensionsClientOutputs.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticationExtensionsClientOutputs.Builder",
                "description": "Builder for AuthenticationExtensionsClientOutputs.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AuthenticationExtensionsClientOutputs",
                        "description": "Builds the AuthenticationExtensionsClientOutputs object."
                    },
                    {
                        "name": "setUserVerificationMethodEntries(UvmEntries uvmEntries)",
                        "return_type": "AuthenticationExtensionsClientOutputs.Builder",
                        "description": "Sets the User Verification Method extension entries."
                    }
                ]
            },
            {
                "name": "AuthenticatorSelectionCriteria.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/AuthenticatorSelectionCriteria.Builder",
                "description": "Builder for AuthenticatorSelectionCriteria.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "AuthenticatorSelectionCriteria",
                        "description": "Builds the AuthenticatorSelectionCriteria object."
                    },
                    {
                        "name": "setAttachment(Attachment attachment)",
                        "return_type": "AuthenticatorSelectionCriteria.Builder",
                        "description": "Sets the attachment to use for this session."
                    },
                    {
                        "name": "setRequireResidentKey(Boolean requireResidentKey)",
                        "return_type": "AuthenticatorSelectionCriteria.Builder",
                        "description": "Sets whether the key created will be a resident key."
                    }
                ]
            },
            {
                "name": "BrowserPublicKeyCredentialCreationOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserPublicKeyCredentialCreationOptions.Builder",
                "description": "Builder for BrowserPublicKeyCredentialCreationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions",
                        "description": "Builds the BrowserPublicKeyCredentialCreationOptions object."
                    },
                    {
                        "name": "setClientDataHash(byte[] clientDataHash)",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets a clientDataHash value to sign over in place of assembling and hashing clientDataJSON during the signature request."
                    },
                    {
                        "name": "setOrigin(Uri origin)",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the origin on whose behalf the calling browser is requesting a registration operation."
                    },
                    {
                        "name": "setPublicKeyCredentialCreationOptions(PublicKeyCredentialCreationOptions publicKeyCredentialCreationOptions)",
                        "return_type": "BrowserPublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the parameters to dictate the client behavior during this registration session."
                    }
                ]
            },
            {
                "name": "BrowserPublicKeyCredentialRequestOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/BrowserPublicKeyCredentialRequestOptions.Builder",
                "description": "Builder for BrowserPublicKeyCredentialRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions",
                        "description": "Builds the BrowserPublicKeyCredentialRequestOptions object."
                    },
                    {
                        "name": "setClientDataHash(byte[] clientDataHash)",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets a clientDataHash value to sign over in place of assembling and hashing clientDataJSON during the signature request."
                    },
                    {
                        "name": "setOrigin(Uri origin)",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the origin on whose behalf the calling browser is requesting an authentication operation."
                    },
                    {
                        "name": "setPublicKeyCredentialRequestOptions(PublicKeyCredentialRequestOptions publicKeyCredentialRequestOptions)",
                        "return_type": "BrowserPublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the parameters to dictate client behavior during this authentication session."
                    }
                ]
            },
            {
                "name": "COSEAlgorithmIdentifier.UnsupportedAlgorithmIdentifierException",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/COSEAlgorithmIdentifier.UnsupportedAlgorithmIdentifierException",
                "description": "Exception thrown when an unsupported or unrecognized algorithm identifier is encountered.",
                "methods": []
            },
            {
                "name": "PublicKeyCredential.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredential.Builder",
                "description": "Builder for PublicKeyCredential.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublicKeyCredential",
                        "description": "Builds the PublicKeyCredential object."
                    },
                    {
                        "name": "setAuthenticationExtensionsClientOutputs(AuthenticationExtensionsClientOutputs extensionsClientOutputs)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the output produced by the client's processing of the extensions requested by the relying party."
                    },
                    {
                        "name": "setId(String id)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the base64url encoding of the credential identifier."
                    },
                    {
                        "name": "setRawId(byte[] rawId)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the raw value of the credential identifier."
                    },
                    {
                        "name": "setResponse(AuthenticatorResponse response)",
                        "return_type": "PublicKeyCredential.Builder",
                        "description": "Sets the authenticator's response to the clients register or sign request."
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialCreationOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialCreationOptions.Builder",
                "description": "Builder for PublicKeyCredentialCreationOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublicKeyCredentialCreationOptions",
                        "description": "Builds the PublicKeyCredentialCreationOptions object."
                    },
                    {
                        "name": "setAttestationConveyancePreference(AttestationConveyancePreference attestationConveyancePreference)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the preference for obfuscation level of the returned attestation data."
                    },
                    {
                        "name": "setAuthenticationExtensions(AuthenticationExtensions authenticationExtensions)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets additional extensions that may dictate some client behavior during an exchange with a connected authenticator."
                    },
                    {
                        "name": "setAuthenticatorSelection(AuthenticatorSelectionCriteria authenticatorSelection)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets constraints on the type of authenticator that is acceptable for this session."
                    },
                    {
                        "name": "setChallenge(byte[] challenge)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the challenge to sign when generating the attestation for this request."
                    },
                    {
                        "name": "setExcludeList(List<PublicKeyCredentialDescriptor> excludeList)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets a list of credentials that, if found on a connected authenticator, will preclude registration of that authenticator with the relying party."
                    },
                    {
                        "name": "setParameters(List<PublicKeyCredentialParameters> parameters)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the PublicKeyCredentialParameters that constrain the type of credential to generate."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single FIDO2 request to the client and receives reply"
                    },
                    {
                        "name": "setRp(PublicKeyCredentialRpEntity rp)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets information for a relying party, on whose behalf a given registration operation is being performed."
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets a timeout that limits the duration of the registration session provided to the user."
                    },
                    {
                        "name": "setTokenBinding(TokenBinding tokenBinding)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets the TokenBinding associated with the calling origin."
                    },
                    {
                        "name": "setUser(PublicKeyCredentialUserEntity user)",
                        "return_type": "PublicKeyCredentialCreationOptions.Builder",
                        "description": "Sets information about the user on whose behalf the relying party is registering a credential."
                    }
                ]
            },
            {
                "name": "PublicKeyCredentialDescriptor.UnsupportedPubKeyCredDescriptorException",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialDescriptor.UnsupportedPubKeyCredDescriptorException",
                "description": "Exception thrown when an unsupported or unrecognized public key credential descriptor is encountered.",
                "methods": []
            },
            {
                "name": "PublicKeyCredentialRequestOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/PublicKeyCredentialRequestOptions.Builder",
                "description": "Builder for PublicKeyCredentialRequestOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "PublicKeyCredentialRequestOptions",
                        "description": "Builds the PublicKeyCredentialRequestOptions object."
                    },
                    {
                        "name": "setAllowList(List<PublicKeyCredentialDescriptor> allowList)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets a list of public key credentials which constrain authentication to authenticators that contain a private key for at least one of the supplied public keys."
                    },
                    {
                        "name": "setAuthenticationExtensions(AuthenticationExtensions authenticationExtensions)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets additional extensions that may dictate some client behavior during an exchange with a connected authenticator."
                    },
                    {
                        "name": "setChallenge(byte[] challenge)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the nonce value that the authenticator should sign using a private key corresponding to a public key credential that is acceptable for this authentication session."
                    },
                    {
                        "name": "setRequestId(Integer requestId)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the request id in order to link together events into a single session (the span of events between the time that the server initiates a single FIDO2 request to the client and receives reply"
                    },
                    {
                        "name": "setRpId(String rpId)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets identifier for a relying party, on whose behalf a given authentication operation is being performed."
                    },
                    {
                        "name": "setTimeoutSeconds(Double timeoutSeconds)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setTokenBinding(TokenBinding tokenBinding)",
                        "return_type": "PublicKeyCredentialRequestOptions.Builder",
                        "description": "Sets the TokenBinding associated with the calling origin."
                    }
                ]
            },
            {
                "name": "TokenBinding.TokenBindingStatus",
                "type_obj": "enum",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/TokenBinding.TokenBindingStatus",
                "description": "The token binding status specified by the client.",
                "methods": []
            },
            {
                "name": "TokenBinding.UnsupportedTokenBindingStatusException",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/TokenBinding.UnsupportedTokenBindingStatusException",
                "description": "Exception thrown when an unsupported or unrecognized TokenBinding.TokenBindingStatus is encountered.",
                "methods": []
            },
            {
                "name": "UvmEntries.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UvmEntries.Builder",
                "description": "Builder for UvmEntries.",
                "methods": [
                    {
                        "name": "addAll(List<UvmEntry> uvmEntryList)",
                        "return_type": "UvmEntries.Builder",
                        "description": ""
                    },
                    {
                        "name": "addUvmEntry(UvmEntry uvmEntry)",
                        "return_type": "UvmEntries.Builder",
                        "description": ""
                    },
                    {
                        "name": "build()",
                        "return_type": "UvmEntries",
                        "description": "Builds the UvmEntries object."
                    }
                ]
            },
            {
                "name": "UvmEntry.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/fido/fido2/api/common/UvmEntry.Builder",
                "description": "Builder for UvmEntry.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "UvmEntry",
                        "description": "Builds the UvmEntry object."
                    },
                    {
                        "name": "setKeyProtectionType(short keyProtectionType)",
                        "return_type": "UvmEntry.Builder",
                        "description": ""
                    },
                    {
                        "name": "setMatcherProtectionType(short matcherProtectionType)",
                        "return_type": "UvmEntry.Builder",
                        "description": ""
                    },
                    {
                        "name": "setUserVerificationMethod(int userVerificationMethod)",
                        "return_type": "UvmEntry.Builder",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "wobs",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/wallet/wobs/package-summary",
        "classes": [
            {
                "name": "LabelValue",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LabelValue",
                "description": "Parcelable representing label value.",
                "methods": [
                    {
                        "name": "getLabel()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getValue()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LabelValueRow",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow",
                "description": "Parcelable representing label value row data.",
                "methods": [
                    {
                        "name": "getColumns()",
                        "return_type": "ArrayList<LabelValue>",
                        "description": ""
                    },
                    {
                        "name": "getHexBackgroundColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getHexFontColor()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticLabelValueRow.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LabelValueRow.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder",
                "description": "Builder to create an LabelValueRow.",
                "methods": [
                    {
                        "name": "addColumn(LabelValue column)",
                        "return_type": "LabelValueRow.Builder",
                        "description": ""
                    },
                    {
                        "name": "addColumns(Collection<LabelValue> columns)",
                        "return_type": "LabelValueRow.Builder",
                        "description": "Adds the specified columns to this builder instance."
                    },
                    {
                        "name": "build()",
                        "return_type": "LabelValueRow",
                        "description": ""
                    },
                    {
                        "name": "setHexBackgroundColor(String color)",
                        "return_type": "LabelValueRow.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setHexFontColor(String color)",
                        "return_type": "LabelValueRow.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    }
                ]
            },
            {
                "name": "LoyaltyPoints",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints",
                "description": "Parcelable representing the loyalty reward points label, balance, and type.",
                "methods": [
                    {
                        "name": "getBalance()",
                        "return_type": "LoyaltyPointsBalance",
                        "description": ""
                    },
                    {
                        "name": "getLabel()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getType()",
                        "return_type": "String",
                        "description": "This method is deprecated. This value is no longer used."
                    },
                    {
                        "name": "getValidTimeInterval()",
                        "return_type": "TimeInterval",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticLoyaltyPoints.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LoyaltyPoints.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder",
                "description": "Builder to create a LoyaltyPoints.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LoyaltyPoints",
                        "description": ""
                    },
                    {
                        "name": "setBalance(LoyaltyPointsBalance balance)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "Sets the loyalty point balance, such as \"500\" or \"$10.00.\""
                    },
                    {
                        "name": "setLabel(String label)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "Sets the loyalty points label, such as \"Points.\""
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "This method is deprecated. This value is no longer used."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    }
                ]
            },
            {
                "name": "LoyaltyPointsBalance",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance",
                "description": "Parcelable representing loyalty points balance.",
                "methods": [
                    {
                        "name": "getCurrencyCode()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getCurrencyMicros()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getDouble()",
                        "return_type": "double",
                        "description": ""
                    },
                    {
                        "name": "getInt()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticLoyaltyPointsBalance.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LoyaltyPointsBalance.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder",
                "description": "Builder to create a LoyaltyPointsBalance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LoyaltyPointsBalance",
                        "description": ""
                    },
                    {
                        "name": "setDouble(double balance)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The double form of a balance."
                    },
                    {
                        "name": "setInt(int balance)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The integer form of a balance"
                    },
                    {
                        "name": "setMoney(String currencyCode, long currencyMicros)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The money form of a balance"
                    },
                    {
                        "name": "setString(String balance)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The string form of a balance"
                    }
                ]
            },
            {
                "name": "TextModuleData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/TextModuleData",
                "description": "Parcelable representing data for text module associated with wallet object.",
                "methods": [
                    {
                        "name": "getBody()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getHeader()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "TimeInterval",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/TimeInterval",
                "description": "Parcelable representing a time interval.",
                "methods": [
                    {
                        "name": "getEndTimestamp()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getStartTimestamp()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "UriData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/UriData",
                "description": "Parcelable representing an uri.",
                "methods": [
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getUri()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "WalletObjectMessage",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage",
                "description": "Parcelable representing a message associated with the wallet object.",
                "methods": [
                    {
                        "name": "getActionUri()",
                        "return_type": "UriData",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "getBody()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getDisplayInterval()",
                        "return_type": "TimeInterval",
                        "description": ""
                    },
                    {
                        "name": "getHeader()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getImageUri()",
                        "return_type": "UriData",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "newBuilder()",
                        "return_type": "staticWalletObjectMessage.Builder",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "WalletObjectMessage.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder",
                "description": "Builder to create a WalletObjectMessage.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "WalletObjectMessage",
                        "description": ""
                    },
                    {
                        "name": "setActionUri(UriData uri)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBody(String body)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "Sets the message body."
                    },
                    {
                        "name": "setDisplayInterval(TimeInterval interval)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "Sets the period of time that the message will be displayed to users."
                    },
                    {
                        "name": "setHeader(String header)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "Sets the message header."
                    },
                    {
                        "name": "setImageUri(UriData uri)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    }
                ]
            },
            {
                "name": "LoyaltyPointsBalance.Type",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type",
                "description": "Type of the loyalty points balance.",
                "methods": []
            },
            {
                "name": "WalletObjects",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjects",
                "description": "Entry point for Wallet objects functionality.",
                "methods": [
                    {
                        "name": "createWalletObjects(GoogleApiClient googleApiClient, CreateWalletObjectsRequest request, int requestCode)",
                        "return_type": "abstract void",
                        "description": "Launches a UI allowing the user to save a Loyalty Card wallet object to their Wallet."
                    }
                ]
            },
            {
                "name": "WalletObjectsConstants",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants",
                "description": "Collection of constant values used by wallet objects.",
                "methods": []
            },
            {
                "name": "WalletObjectsConstants.State",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State",
                "description": "The state of the Wallet Object.",
                "methods": []
            },
            {
                "name": "LabelValueRow.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LabelValueRow.Builder",
                "description": "Builder to create an LabelValueRow.",
                "methods": [
                    {
                        "name": "addColumn(LabelValue column)",
                        "return_type": "LabelValueRow.Builder",
                        "description": ""
                    },
                    {
                        "name": "addColumns(Collection<LabelValue> columns)",
                        "return_type": "LabelValueRow.Builder",
                        "description": "Adds the specified columns to this builder instance."
                    },
                    {
                        "name": "build()",
                        "return_type": "LabelValueRow",
                        "description": ""
                    },
                    {
                        "name": "setHexBackgroundColor(String color)",
                        "return_type": "LabelValueRow.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setHexFontColor(String color)",
                        "return_type": "LabelValueRow.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    }
                ]
            },
            {
                "name": "LoyaltyPoints.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPoints.Builder",
                "description": "Builder to create a LoyaltyPoints.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LoyaltyPoints",
                        "description": ""
                    },
                    {
                        "name": "setBalance(LoyaltyPointsBalance balance)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "Sets the loyalty point balance, such as \"500\" or \"$10.00.\""
                    },
                    {
                        "name": "setLabel(String label)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "Sets the loyalty points label, such as \"Points.\""
                    },
                    {
                        "name": "setType(String type)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "This method is deprecated. This value is no longer used."
                    },
                    {
                        "name": "setValidTimeInterval(TimeInterval interval)",
                        "return_type": "LoyaltyPoints.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    }
                ]
            },
            {
                "name": "LoyaltyPointsBalance.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Builder",
                "description": "Builder to create a LoyaltyPointsBalance.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "LoyaltyPointsBalance",
                        "description": ""
                    },
                    {
                        "name": "setDouble(double balance)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The double form of a balance."
                    },
                    {
                        "name": "setInt(int balance)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The integer form of a balance"
                    },
                    {
                        "name": "setMoney(String currencyCode, long currencyMicros)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The money form of a balance"
                    },
                    {
                        "name": "setString(String balance)",
                        "return_type": "LoyaltyPointsBalance.Builder",
                        "description": "The string form of a balance"
                    }
                ]
            },
            {
                "name": "LoyaltyPointsBalance.Type",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/LoyaltyPointsBalance.Type",
                "description": "Type of the loyalty points balance.",
                "methods": []
            },
            {
                "name": "WalletObjectMessage.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjectMessage.Builder",
                "description": "Builder to create a WalletObjectMessage.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "WalletObjectMessage",
                        "description": ""
                    },
                    {
                        "name": "setActionUri(UriData uri)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    },
                    {
                        "name": "setBody(String body)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "Sets the message body."
                    },
                    {
                        "name": "setDisplayInterval(TimeInterval interval)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "Sets the period of time that the message will be displayed to users."
                    },
                    {
                        "name": "setHeader(String header)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "Sets the message header."
                    },
                    {
                        "name": "setImageUri(UriData uri)",
                        "return_type": "WalletObjectMessage.Builder",
                        "description": "This method is deprecated. This value is unused by the platform and will be removed in the future."
                    }
                ]
            },
            {
                "name": "WalletObjectsConstants.State",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wallet/wobs/WalletObjectsConstants.State",
                "description": "The state of the Wallet Object.",
                "methods": []
            }
        ]
    },
    {
        "name": "phone",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/api/phone/package-summary",
        "classes": [
            {
                "name": "SmsCodeRetriever",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsCodeRetriever",
                "description": "SmsCodeRetriever is a variant of SmsRetriever, and it provides access to Google services that help you retrieve SMS verification codes sent to the user's device, without having to ask for android.permission.READ_SMS or android.permission.RECEIVE_SMS.",
                "methods": [
                    {
                        "name": "getAutofillClient(Activity activity)",
                        "return_type": "staticSmsCodeAutofillClient",
                        "description": "Creates a new instance of SmsCodeAutofillClient for use in an Activity."
                    },
                    {
                        "name": "getAutofillClient(Context context)",
                        "return_type": "staticSmsCodeAutofillClient",
                        "description": "Creates a new instance of SmsCodeAutofillClient for use in a Context."
                    },
                    {
                        "name": "getBrowserClient(Activity activity)",
                        "return_type": "staticSmsCodeBrowserClient",
                        "description": "Creates a new instance of SmsCodeBrowserClient for use in an Activity."
                    },
                    {
                        "name": "getBrowserClient(Context context)",
                        "return_type": "staticSmsCodeBrowserClient",
                        "description": "Creates a new instance of SmsCodeBrowserClient for use in a Context."
                    }
                ]
            },
            {
                "name": "SmsRetriever",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsRetriever",
                "description": "SmsRetriever provides access to Google services that help you retrieve SMS messages sent to your app without having to ask for android.permission.READ_SMS or android.permission.RECEIVE_SMS.",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticSmsRetrieverClient",
                        "description": "Create a new instance of SmsRetrieverClient for use in an Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticSmsRetrieverClient",
                        "description": "Create a new instance of SmsRetrieverClient for use in an Context."
                    }
                ]
            },
            {
                "name": "SmsRetrieverClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsRetrieverClient",
                "description": "The main entry point for interacting with SmsRetriever.",
                "methods": [
                    {
                        "name": "startSmsRetriever()",
                        "return_type": "abstractTask<Void>",
                        "description": "Starts SmsRetriever, which waits for a matching SMS message until timeout (5 minutes"
                    },
                    {
                        "name": "startSmsUserConsent(String senderAddress)",
                        "return_type": "abstractTask<Void>",
                        "description": "Starts SmsUserConsent, which waits for an OTP-containing SMS message until timeout (5 minutes"
                    }
                ]
            },
            {
                "name": "SmsRetrieverStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsRetrieverStatusCodes",
                "description": "SMS Retriever specific status codes, for use in getStatusCode().",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug string based on the given status code."
                    }
                ]
            },
            {
                "name": "SmsCodeAutofillClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsCodeAutofillClient",
                "description": "The interface for interacting with the SMS Code Autofill API.",
                "methods": [
                    {
                        "name": "checkPermissionState()",
                        "return_type": "abstractTask<Integer>",
                        "description": "Returns the SmsCodeAutofillClient.PermissionState of the current user-designated autofill service."
                    },
                    {
                        "name": "hasOngoingSmsRequest(String packageName)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "Returns true if there are requests from SmsRetriever in progress for the given package name."
                    },
                    {
                        "name": "startSmsCodeRetriever()",
                        "return_type": "abstractTask<Void>",
                        "description": "Starts SmsCodeRetriever, which looks for an SMS verification code from messages recently received (up to 1 minute prior"
                    }
                ]
            },
            {
                "name": "SmsCodeBrowserClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsCodeBrowserClient",
                "description": "The interface for interacting with the SMS Code Browser API.",
                "methods": [
                    {
                        "name": "startSmsCodeRetriever()",
                        "return_type": "abstractTask<Void>",
                        "description": "Starts SmsCodeRetriever, which looks for an origin-bound one-time code from SMS messages recently received (up to 1 minute prior"
                    }
                ]
            },
            {
                "name": "SmsRetrieverApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/phone/SmsRetrieverApi",
                "description": "API interface for SmsRetriever.",
                "methods": [
                    {
                        "name": "startSmsRetriever()",
                        "return_type": "abstractTask<Void>",
                        "description": "Starts SmsRetriever, which waits for a matching SMS message until timeout (5 minutes"
                    },
                    {
                        "name": "startSmsUserConsent(String senderAddress)",
                        "return_type": "abstractTask<Void>",
                        "description": "Starts SmsUserConsent, which waits for an OTP-containing SMS message until timeout (5 minutes"
                    }
                ]
            }
        ]
    },
    {
        "name": "search",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/search/package-summary",
        "classes": [
            {
                "name": "DynamicHeightSearchAdRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/search/DynamicHeightSearchAdRequest",
                "description": "Use to configure Custom Search Ad (CSA) ad requests.",
                "methods": [
                    {
                        "name": "getCustomEventExtrasBundle(Class<T> adapterClass)",
                        "return_type": "<T extendsCustomEvent>Bundle",
                        "description": "Returns extra parameters to pass to a specific custom event adapter."
                    },
                    {
                        "name": "getNetworkExtrasBundle(Class<T> adapterClass)",
                        "return_type": "<T extendsMediationAdapter>Bundle",
                        "description": "Returns extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "getQuery()",
                        "return_type": "String",
                        "description": "Returns the query of the search ad request."
                    },
                    {
                        "name": "isTestDevice(Context context)",
                        "return_type": "boolean",
                        "description": "Returns true if this device will receive test ads."
                    }
                ]
            },
            {
                "name": "DynamicHeightSearchAdRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/search/DynamicHeightSearchAdRequest.Builder",
                "description": "Builds a DynamicHeightSearchAdRequest.",
                "methods": [
                    {
                        "name": "addCustomEventExtrasBundle(Class<? extends CustomEvent> adapterClass, Bundle customEventExtras)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific custom event adapter."
                    },
                    {
                        "name": "addNetworkExtras(NetworkExtras networkExtras)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "addNetworkExtrasBundle(Class<? extends MediationAdapter> adapterClass, Bundle networkExtras)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "build()",
                        "return_type": "DynamicHeightSearchAdRequest",
                        "description": "Constructs a DynamicHeightSearchAdRequest with the specified attributes."
                    },
                    {
                        "name": "setAdBorderSelectors(String adBorderSelectors)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"adBorderSelections\" parameter."
                    },
                    {
                        "name": "setAdTest(boolean adTest)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"adTest\" parameter is enabled."
                    },
                    {
                        "name": "setAdjustableLineHeight(int adjustableLineHeight)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"adjustableLineHeight\" parameter."
                    },
                    {
                        "name": "setAdvancedOptionValue(String key, String value)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Sets an advanced option value for a specified key."
                    },
                    {
                        "name": "setAttributionSpacingBelow(int attributionSpacingBelow)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"attributionSpacingBelow\" parameter."
                    },
                    {
                        "name": "setBorderSelections(String borderSelections)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"borderSelections\" parameter."
                    },
                    {
                        "name": "setChannel(String channel)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"channel\" parameter."
                    },
                    {
                        "name": "setColorAdBorder(String colorAdBorder)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAdBorder\" parameter."
                    },
                    {
                        "name": "setColorAdSeparator(String colorAdSeparator)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAdSeparator\" parameter."
                    },
                    {
                        "name": "setColorAnnotation(String colorAnnotation)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAnnotation\" parameter."
                    },
                    {
                        "name": "setColorAttribution(String colorAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAttribution\" parameter."
                    },
                    {
                        "name": "setColorBackground(String colorBackground)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorBackground\" parameter."
                    },
                    {
                        "name": "setColorBorder(String colorBorder)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorBorder\" parameter."
                    },
                    {
                        "name": "setColorDomainLink(String colorDomainLink)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorDomainLink\" parameter."
                    },
                    {
                        "name": "setColorText(String colorText)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorText\" parameter."
                    },
                    {
                        "name": "setColorTitleLink(String colorTitleLink)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorTitleLink\" parameter."
                    },
                    {
                        "name": "setCssWidth(int width)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"width\" parameter."
                    },
                    {
                        "name": "setDetailedAttribution(boolean detailedAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"detailedAttribution\" parameter is enabled."
                    },
                    {
                        "name": "setFontFamily(String fontFamily)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontFamily\" parameter."
                    },
                    {
                        "name": "setFontFamilyAttribution(String fontFamilyAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontFamilyAttribution\" parameter."
                    },
                    {
                        "name": "setFontSizeAnnotation(int fontSizeAnnotation)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeAnnotation\" parameter."
                    },
                    {
                        "name": "setFontSizeAttribution(int fontSizeAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeAttribution\" parameter."
                    },
                    {
                        "name": "setFontSizeDescription(int fontSizeDescription)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeDescription\" parameter."
                    },
                    {
                        "name": "setFontSizeDomainLink(int fontSizeDomainLink)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeDomainLink\" parameter."
                    },
                    {
                        "name": "setFontSizeTitle(int fontSizeTitle)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeTitle\" parameter."
                    },
                    {
                        "name": "setHostLanguage(String hostLanguage)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"hl\" parameter."
                    },
                    {
                        "name": "setIsClickToCallEnabled(boolean isClickToCallEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"clickToCall\" parameter is enabled."
                    },
                    {
                        "name": "setIsLocationEnabled(boolean isLocationEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"location\" parameter is enabled."
                    },
                    {
                        "name": "setIsPlusOnesEnabled(boolean isPlusOnesEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"plusOnes\" parameter is enabled."
                    },
                    {
                        "name": "setIsSellerRatingsEnabled(boolean isSellerRatingsEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"sellerRatings\" parameter is enabled."
                    },
                    {
                        "name": "setIsSiteLinksEnabled(boolean isSiteLinksEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"siteLinks\" parameter is enabled."
                    },
                    {
                        "name": "setIsTitleBold(boolean isTitleBold)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"titleBold\" parameter is enabled."
                    },
                    {
                        "name": "setIsTitleUnderlined(boolean isTitleUnderlined)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"noTitleUnderline\" parameter is enabled."
                    },
                    {
                        "name": "setLocationColor(String locationColor)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorLocation\" parameter."
                    },
                    {
                        "name": "setLocationFontSize(int locationFontSize)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeLocation\" parameter."
                    },
                    {
                        "name": "setLongerHeadlines(boolean longerHeadlines)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"longerHeadlines\" parameter is enabled."
                    },
                    {
                        "name": "setNumber(int numberOfAds)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"number\" parameter."
                    },
                    {
                        "name": "setPage(int adPage)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"adPage\" parameter."
                    },
                    {
                        "name": "setQuery(String query)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Sets the query for requesting a search ad."
                    },
                    {
                        "name": "setStyleId(String styleId)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"Style ID\" parameter."
                    },
                    {
                        "name": "setVerticalSpacing(int verticalSpacing)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"verticalSpacing\" parameter."
                    }
                ]
            },
            {
                "name": "SearchAdView",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/search/SearchAdView",
                "description": "The View to display search banner ads for use with Search Ads for Apps.",
                "methods": [
                    {
                        "name": "destroy()",
                        "return_type": "void",
                        "description": "Destroy the SearchAdView."
                    },
                    {
                        "name": "getAdListener()",
                        "return_type": "AdListener",
                        "description": "Returns the AdListener for this SearchAdView."
                    },
                    {
                        "name": "getAdSize()",
                        "return_type": "AdSize",
                        "description": "Returns the size of the banner ad."
                    },
                    {
                        "name": "getAdUnitId()",
                        "return_type": "String",
                        "description": "Returns the ad unit ID."
                    },
                    {
                        "name": "loadAd(DynamicHeightSearchAdRequest dynamicHeightSearchAdRequest)",
                        "return_type": "void",
                        "description": "Start loading the ad on a background thread."
                    },
                    {
                        "name": "loadAd(SearchAdRequest searchAdRequest)",
                        "return_type": "void",
                        "description": "Start loading the ad on a background thread."
                    },
                    {
                        "name": "pause()",
                        "return_type": "void",
                        "description": "Pause any extra processing associated with this SearchAdView."
                    },
                    {
                        "name": "resume()",
                        "return_type": "void",
                        "description": "Resume an SearchAdView after a previous call to pause("
                    },
                    {
                        "name": "setAdListener(AdListener adListener)",
                        "return_type": "void",
                        "description": "Sets an AdListener for this SearchAdView."
                    },
                    {
                        "name": "setAdSize(AdSize adSize)",
                        "return_type": "void",
                        "description": "Sets the size of the banner ad."
                    },
                    {
                        "name": "setAdUnitId(String adUnitId)",
                        "return_type": "void",
                        "description": "Sets the ad unit ID."
                    }
                ]
            },
            {
                "name": "DynamicHeightSearchAdRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/ads/search/DynamicHeightSearchAdRequest.Builder",
                "description": "Builds a DynamicHeightSearchAdRequest.",
                "methods": [
                    {
                        "name": "addCustomEventExtrasBundle(Class<? extends CustomEvent> adapterClass, Bundle customEventExtras)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific custom event adapter."
                    },
                    {
                        "name": "addNetworkExtras(NetworkExtras networkExtras)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "addNetworkExtrasBundle(Class<? extends MediationAdapter> adapterClass, Bundle networkExtras)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Adds extra parameters to pass to a specific ad network adapter."
                    },
                    {
                        "name": "build()",
                        "return_type": "DynamicHeightSearchAdRequest",
                        "description": "Constructs a DynamicHeightSearchAdRequest with the specified attributes."
                    },
                    {
                        "name": "setAdBorderSelectors(String adBorderSelectors)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"adBorderSelections\" parameter."
                    },
                    {
                        "name": "setAdTest(boolean adTest)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"adTest\" parameter is enabled."
                    },
                    {
                        "name": "setAdjustableLineHeight(int adjustableLineHeight)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"adjustableLineHeight\" parameter."
                    },
                    {
                        "name": "setAdvancedOptionValue(String key, String value)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Sets an advanced option value for a specified key."
                    },
                    {
                        "name": "setAttributionSpacingBelow(int attributionSpacingBelow)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"attributionSpacingBelow\" parameter."
                    },
                    {
                        "name": "setBorderSelections(String borderSelections)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"borderSelections\" parameter."
                    },
                    {
                        "name": "setChannel(String channel)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"channel\" parameter."
                    },
                    {
                        "name": "setColorAdBorder(String colorAdBorder)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAdBorder\" parameter."
                    },
                    {
                        "name": "setColorAdSeparator(String colorAdSeparator)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAdSeparator\" parameter."
                    },
                    {
                        "name": "setColorAnnotation(String colorAnnotation)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAnnotation\" parameter."
                    },
                    {
                        "name": "setColorAttribution(String colorAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorAttribution\" parameter."
                    },
                    {
                        "name": "setColorBackground(String colorBackground)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorBackground\" parameter."
                    },
                    {
                        "name": "setColorBorder(String colorBorder)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorBorder\" parameter."
                    },
                    {
                        "name": "setColorDomainLink(String colorDomainLink)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorDomainLink\" parameter."
                    },
                    {
                        "name": "setColorText(String colorText)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorText\" parameter."
                    },
                    {
                        "name": "setColorTitleLink(String colorTitleLink)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorTitleLink\" parameter."
                    },
                    {
                        "name": "setCssWidth(int width)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"width\" parameter."
                    },
                    {
                        "name": "setDetailedAttribution(boolean detailedAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"detailedAttribution\" parameter is enabled."
                    },
                    {
                        "name": "setFontFamily(String fontFamily)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontFamily\" parameter."
                    },
                    {
                        "name": "setFontFamilyAttribution(String fontFamilyAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontFamilyAttribution\" parameter."
                    },
                    {
                        "name": "setFontSizeAnnotation(int fontSizeAnnotation)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeAnnotation\" parameter."
                    },
                    {
                        "name": "setFontSizeAttribution(int fontSizeAttribution)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeAttribution\" parameter."
                    },
                    {
                        "name": "setFontSizeDescription(int fontSizeDescription)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeDescription\" parameter."
                    },
                    {
                        "name": "setFontSizeDomainLink(int fontSizeDomainLink)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeDomainLink\" parameter."
                    },
                    {
                        "name": "setFontSizeTitle(int fontSizeTitle)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeTitle\" parameter."
                    },
                    {
                        "name": "setHostLanguage(String hostLanguage)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"hl\" parameter."
                    },
                    {
                        "name": "setIsClickToCallEnabled(boolean isClickToCallEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"clickToCall\" parameter is enabled."
                    },
                    {
                        "name": "setIsLocationEnabled(boolean isLocationEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"location\" parameter is enabled."
                    },
                    {
                        "name": "setIsPlusOnesEnabled(boolean isPlusOnesEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"plusOnes\" parameter is enabled."
                    },
                    {
                        "name": "setIsSellerRatingsEnabled(boolean isSellerRatingsEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"sellerRatings\" parameter is enabled."
                    },
                    {
                        "name": "setIsSiteLinksEnabled(boolean isSiteLinksEnabled)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"siteLinks\" parameter is enabled."
                    },
                    {
                        "name": "setIsTitleBold(boolean isTitleBold)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"titleBold\" parameter is enabled."
                    },
                    {
                        "name": "setIsTitleUnderlined(boolean isTitleUnderlined)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"noTitleUnderline\" parameter is enabled."
                    },
                    {
                        "name": "setLocationColor(String locationColor)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"colorLocation\" parameter."
                    },
                    {
                        "name": "setLocationFontSize(int locationFontSize)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"fontSizeLocation\" parameter."
                    },
                    {
                        "name": "setLongerHeadlines(boolean longerHeadlines)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Indicates if the CSA \"longerHeadlines\" parameter is enabled."
                    },
                    {
                        "name": "setNumber(int numberOfAds)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"number\" parameter."
                    },
                    {
                        "name": "setPage(int adPage)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"adPage\" parameter."
                    },
                    {
                        "name": "setQuery(String query)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "Sets the query for requesting a search ad."
                    },
                    {
                        "name": "setStyleId(String styleId)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"Style ID\" parameter."
                    },
                    {
                        "name": "setVerticalSpacing(int verticalSpacing)",
                        "return_type": "DynamicHeightSearchAdRequest.Builder",
                        "description": "The CSA \"verticalSpacing\" parameter."
                    }
                ]
            }
        ]
    },
    {
        "name": "h5",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/h5/package-summary",
        "classes": [
            {
                "name": "H5AdsRequestHandler",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/h5/H5AdsRequestHandler",
                "description": "Handles H5 ad requests.",
                "methods": [
                    {
                        "name": "clearAdObjects()",
                        "return_type": "void",
                        "description": "Destroys all ads being managed by H5 ads."
                    },
                    {
                        "name": "handleH5AdsRequest(String url)",
                        "return_type": "boolean",
                        "description": "Attempts to handle an H5 ads request."
                    },
                    {
                        "name": "shouldInterceptRequest(String url)",
                        "return_type": "boolean",
                        "description": "Returns true if request is for H5 ads, false otherwise."
                    }
                ]
            },
            {
                "name": "H5AdsWebViewClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/h5/H5AdsWebViewClient",
                "description": "A WebViewClient that intercepts and handles H5 ad requests.",
                "methods": [
                    {
                        "name": "clearAdObjects()",
                        "return_type": "void",
                        "description": "Destroys all ads being managed by H5 ads."
                    },
                    {
                        "name": "doUpdateVisitedHistory(WebView view, String url, boolean isReload)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "getDelegateWebViewClient()",
                        "return_type": "WebViewClient",
                        "description": "Gets the delegate WebViewClient."
                    },
                    {
                        "name": "onFormResubmission(WebView view, Message dontResend, Message resend)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onLoadResource(WebView view, String url)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPageCommitVisible(WebView view, String url)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPageFinished(WebView view, String url)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPageStarted(WebView view, String url, Bitmap favicon)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedClientCertRequest(WebView view, ClientCertRequest request)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedError(WebView view, int errorCode, String description, String failingUrl)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedError(WebView view, WebResourceRequest request, WebResourceError error)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedHttpAuthRequest(WebView view, HttpAuthHandler handler, String host, String realm)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedHttpError(WebView view, WebResourceRequest request, WebResourceResponse errorResponse)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedLoginRequest(WebView view, String realm, String account, String args)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onReceivedSslError(WebView view, SslErrorHandler handler, SslError error)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onRenderProcessGone(WebView view, RenderProcessGoneDetail detail)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onSafeBrowsingHit(WebView view, WebResourceRequest request, int threatType, SafeBrowsingResponse callback)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onScaleChanged(WebView view, float oldScale, float newScale)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onTooManyRedirects(WebView view, Message cancelMsg, Message continueMsg)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onUnhandledKeyEvent(WebView view, KeyEvent event)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "setDelegateWebViewClient(WebViewClient delegate)",
                        "return_type": "void",
                        "description": "Sets a WebViewClient to delegate methods not handled by H5AdsWebViewClient."
                    },
                    {
                        "name": "shouldInterceptRequest(WebView view, WebResourceRequest request)",
                        "return_type": "WebResourceResponse",
                        "description": ""
                    },
                    {
                        "name": "shouldInterceptRequest(WebView view, String url)",
                        "return_type": "WebResourceResponse",
                        "description": ""
                    },
                    {
                        "name": "shouldOverrideKeyEvent(WebView view, KeyEvent event)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "shouldOverrideUrlLoading(WebView view, WebResourceRequest request)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "shouldOverrideUrlLoading(WebView view, String url)",
                        "return_type": "boolean",
                        "description": ""
                    }
                ]
            },
            {
                "name": "OnH5AdsEventListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/h5/OnH5AdsEventListener",
                "description": "Interface definition for a callback to be invoked when JavaScript from an H5 ads event needs to be executed on a web view.",
                "methods": [
                    {
                        "name": "onH5AdsEvent(String jsSnippet)",
                        "return_type": "abstract void",
                        "description": "Called by JavaScript when an H5 ads event needs to be executed on a web view."
                    }
                ]
            }
        ]
    },
    {
        "name": "customevent",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/mediation/customevent/package-summary",
        "classes": [
            {
                "name": "CustomEventExtras",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventExtras",
                "description": "This class is deprecated. This class will only work with implementations of the old CustomEventAdapter which has been deprecated in favor of CustomEventBanner and CustomEventInterstitial. To pass extras to custom events that implement CustomEventBanner or CustomEventInterstitial, call AdRequest.Builder.addCustomEventExtrasBundle(Class , Bundle) with the class of your CustomEventBanner or CustomEventInterstitial implementation and a Bundle.",
                "methods": [
                    {
                        "name": "getExtra(String label)",
                        "return_type": "Object",
                        "description": "Returns the extra parameter for the custom event with the provided label."
                    },
                    {
                        "name": "setExtra(String label, Object value)",
                        "return_type": "void",
                        "description": "Sets an extra parameter for the custom event with the provided label."
                    }
                ]
            },
            {
                "name": "CustomEvent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEvent",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "onDestroy()",
                        "return_type": "abstract void",
                        "description": "Tears down the adapter control."
                    },
                    {
                        "name": "onPause()",
                        "return_type": "abstract void",
                        "description": "Called when the application calls BaseAdView.pause("
                    },
                    {
                        "name": "onResume()",
                        "return_type": "abstract void",
                        "description": "Called when the application calls BaseAdView.resume("
                    }
                ]
            },
            {
                "name": "CustomEventBanner",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventBanner",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "requestBannerAd(Context context, CustomEventBannerListener listener, String serverParameter, AdSize size, MediationAdRequest mediationAdRequest, Bundle customEventExtras)",
                        "return_type": "abstract void",
                        "description": "Called by the mediation library to request a view from the custom event."
                    }
                ]
            },
            {
                "name": "CustomEventBannerListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventBannerListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdLoaded(View view)",
                        "return_type": "abstract void",
                        "description": "Indicates that a view has been requested and successfully received."
                    }
                ]
            },
            {
                "name": "CustomEventInterstitial",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventInterstitial",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "requestInterstitialAd(Context context, CustomEventInterstitialListener listener, String serverParameter, MediationAdRequest mediationAdRequest, Bundle customEventExtras)",
                        "return_type": "abstract void",
                        "description": "Called by the mediation library to request an interstitial."
                    },
                    {
                        "name": "showInterstitial()",
                        "return_type": "abstract void",
                        "description": "Show the interstitial."
                    }
                ]
            },
            {
                "name": "CustomEventInterstitialListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventInterstitialListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdLoaded()",
                        "return_type": "abstract void",
                        "description": "Indicates that an interstitial has been requested and successfully received."
                    }
                ]
            },
            {
                "name": "CustomEventListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdClicked()",
                        "return_type": "abstract void",
                        "description": "Indicates that the user has clicked on this custom event."
                    },
                    {
                        "name": "onAdClosed()",
                        "return_type": "abstract void",
                        "description": "Indicates that the custom event rendered something in full screen and is now transferring control back to the application."
                    },
                    {
                        "name": "onAdFailedToLoad(int errorCode)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onAdFailedToLoad(AdError"
                    },
                    {
                        "name": "onAdFailedToLoad(AdError adError)",
                        "return_type": "abstract void",
                        "description": "Indicates that a custom event request has failed along with the underlying cause."
                    },
                    {
                        "name": "onAdLeftApplication()",
                        "return_type": "abstract void",
                        "description": "Indicates that user interaction with the custom event is causing the device to switch to a different application (such as a web browser"
                    },
                    {
                        "name": "onAdOpened()",
                        "return_type": "abstract void",
                        "description": "Indicates that the custom event is rendering something that is full screen."
                    }
                ]
            },
            {
                "name": "CustomEventNative",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventNative",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "requestNativeAd(Context context, CustomEventNativeListener listener, String serverParameter, NativeMediationAdRequest mediationAdRequest, Bundle customEventExtras)",
                        "return_type": "abstract void",
                        "description": "Called by the mediation library to request a native ad from the custom event."
                    }
                ]
            },
            {
                "name": "CustomEventNativeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/customevent/CustomEventNativeListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdImpression()",
                        "return_type": "abstract void",
                        "description": "Indicates that an impression has been recorded for the ad."
                    },
                    {
                        "name": "onAdLoaded(UnifiedNativeAdMapper mapper)",
                        "return_type": "abstract void",
                        "description": "Indicates that a unified native ad has been requested and successfully received."
                    }
                ]
            }
        ]
    },
    {
        "name": "tv",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/cast/tv/package-summary",
        "classes": [
            {
                "name": "CastLaunchRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastLaunchRequest",
                "description": "The information about an request to launch or join the application.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCredentialsData()",
                        "return_type": "CredentialsData",
                        "description": "Returns the credentials data in the launch request."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CastReceiverContext",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverContext",
                "description": "The singleton class as the entry point of the Cast TV SDK.",
                "methods": [
                    {
                        "name": "getInstance()",
                        "return_type": "staticCastReceiverContext",
                        "description": "Returns the shared instance."
                    },
                    {
                        "name": "getMediaManager()",
                        "return_type": "MediaManager",
                        "description": "Returns the MediaManager."
                    },
                    {
                        "name": "getReceiverOptions()",
                        "return_type": "CastReceiverOptions",
                        "description": "Returns the receiver options."
                    },
                    {
                        "name": "getSender(String senderId)",
                        "return_type": "SenderInfo",
                        "description": "Returns the SenderInfo with the given senderId."
                    },
                    {
                        "name": "getSenders()",
                        "return_type": "Collection<SenderInfo>",
                        "description": "Returns all senders."
                    },
                    {
                        "name": "initInstance(Context context)",
                        "return_type": "static void",
                        "description": "Initializes the shared instance."
                    },
                    {
                        "name": "registerEventCallback(CastReceiverContext.EventCallback callback)",
                        "return_type": "void",
                        "description": "Registers a CastReceiverContext.EventCallback"
                    },
                    {
                        "name": "removeMessageReceivedListener(String namespace)",
                        "return_type": "void",
                        "description": "Removes a listener for a given namespace."
                    },
                    {
                        "name": "sendMessage(String namespace, String senderId, String message)",
                        "return_type": "void",
                        "description": "Sends a message to a specific sender."
                    },
                    {
                        "name": "setMessageReceivedListener(String namespace, CastReceiverContext.MessageReceivedListener listener)",
                        "return_type": "void",
                        "description": "Sets a listener for a given namespace."
                    },
                    {
                        "name": "start()",
                        "return_type": "void",
                        "description": "Tells the Cast TV SDK that the receiver app has started and is ready to accept commands."
                    },
                    {
                        "name": "stop()",
                        "return_type": "void",
                        "description": "Tells the Cast TV SDK that the receiver app has stopped and won't accept commands any more."
                    },
                    {
                        "name": "unregisterEventCallback(CastReceiverContext.EventCallback callback)",
                        "return_type": "void",
                        "description": "Unregisters a CastReceiverContext.EventCallback"
                    }
                ]
            },
            {
                "name": "CastReceiverContext.EventCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverContext.EventCallback",
                "description": "Callback class for observing various events.",
                "methods": [
                    {
                        "name": "onSenderConnected(SenderInfo senderInfo)",
                        "return_type": "void",
                        "description": "Called when a sender is connected."
                    },
                    {
                        "name": "onSenderDisconnected(SenderDisconnectedEventInfo senderDisconnectedEventInfo)",
                        "return_type": "void",
                        "description": "Called when a sender is disconnected."
                    },
                    {
                        "name": "onStopApplication()",
                        "return_type": "void",
                        "description": "Called when a sender has requested to stop the application."
                    }
                ]
            },
            {
                "name": "CastReceiverOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverOptions",
                "description": "Options of Cast ATV receiver library.",
                "methods": [
                    {
                        "name": "getCustomNamespaces()",
                        "return_type": "List<String>",
                        "description": "Returns the list of custom namespaces."
                    },
                    {
                        "name": "getLaunchRequestChecker()",
                        "return_type": "CastReceiverOptions.LaunchRequestChecker",
                        "description": "Returns the callback to check if a launch request is supported."
                    },
                    {
                        "name": "getStatusText()",
                        "return_type": "String",
                        "description": "Returns the status text."
                    },
                    {
                        "name": "getVersionCode()",
                        "return_type": "int",
                        "description": "Returns the version code of the receiver app."
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CastReceiverOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverOptions.Builder",
                "description": "Builder for CastReceiverOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastReceiverOptions",
                        "description": "Builds a CastReceiverOptions object with the provided options."
                    },
                    {
                        "name": "setCustomNamespaces(List<String> namespaces)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the list of custom namespaces."
                    },
                    {
                        "name": "setLaunchRequestChecker(CastReceiverOptions.LaunchRequestChecker checker)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the callback to check if a launch request is supported."
                    },
                    {
                        "name": "setStatusText(String statusText)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the status text."
                    },
                    {
                        "name": "setVersionCode(int versionCode)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the version code of the receiver app."
                    }
                ]
            },
            {
                "name": "CastReceiverUtils",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverUtils",
                "description": "Utility class for miscellaneous helper methods.",
                "methods": [
                    {
                        "name": "parseCastLaunchRequestFromLaunchIntent(Intent intent)",
                        "return_type": "staticCastLaunchRequest",
                        "description": "Parse the CastLaunchRequest from a launch intent."
                    }
                ]
            },
            {
                "name": "SenderDisconnectedEventInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/SenderDisconnectedEventInfo",
                "description": "Information about a sender disconnected event.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDisconnectReason()",
                        "return_type": "int",
                        "description": "Returns the sender disconnect reason."
                    },
                    {
                        "name": "getSenderInfo()",
                        "return_type": "SenderInfo",
                        "description": "Returns the SenderInfo of the disconnected sender."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SenderInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/cast/tv/SenderInfo",
                "description": "The information about a sender.",
                "methods": [
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCastLaunchRequest()",
                        "return_type": "CastLaunchRequest",
                        "description": "Returns the CastLaunchRequest that the sender used to launch with."
                    },
                    {
                        "name": "getSenderId()",
                        "return_type": "String",
                        "description": "Returns the ID of the sender."
                    },
                    {
                        "name": "getUserAgent()",
                        "return_type": "String",
                        "description": "Returns the user agent of the sender."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CastReceiverContext.MessageReceivedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverContext.MessageReceivedListener",
                "description": "Listener for listening messages that come from the sender.",
                "methods": [
                    {
                        "name": "onMessageReceived(String namespace, String senderId, String message)",
                        "return_type": "abstract void",
                        "description": "Called when a new message is received from the sender."
                    }
                ]
            },
            {
                "name": "CastReceiverOptions.LaunchRequestChecker",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverOptions.LaunchRequestChecker",
                "description": "Interface for checking if a launch request is supported.",
                "methods": [
                    {
                        "name": "checkLaunchRequestSupported(CastLaunchRequest launchRequest)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Called when a sender requests to launch the app or join the current session."
                    }
                ]
            },
            {
                "name": "ReceiverOptionsProvider",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/cast/tv/ReceiverOptionsProvider",
                "description": "Provider of CastReceiverOptions.",
                "methods": [
                    {
                        "name": "getOptions(Context appContext)",
                        "return_type": "abstractCastReceiverOptions",
                        "description": "Provides CastReceiverOptions, which indicates the information about the receiver application."
                    }
                ]
            },
            {
                "name": "CastReceiverContext.EventCallback",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverContext.EventCallback",
                "description": "Callback class for observing various events.",
                "methods": [
                    {
                        "name": "onSenderConnected(SenderInfo senderInfo)",
                        "return_type": "void",
                        "description": "Called when a sender is connected."
                    },
                    {
                        "name": "onSenderDisconnected(SenderDisconnectedEventInfo senderDisconnectedEventInfo)",
                        "return_type": "void",
                        "description": "Called when a sender is disconnected."
                    },
                    {
                        "name": "onStopApplication()",
                        "return_type": "void",
                        "description": "Called when a sender has requested to stop the application."
                    }
                ]
            },
            {
                "name": "CastReceiverContext.MessageReceivedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverContext.MessageReceivedListener",
                "description": "Listener for listening messages that come from the sender.",
                "methods": [
                    {
                        "name": "onMessageReceived(String namespace, String senderId, String message)",
                        "return_type": "abstract void",
                        "description": "Called when a new message is received from the sender."
                    }
                ]
            },
            {
                "name": "CastReceiverOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverOptions.Builder",
                "description": "Builder for CastReceiverOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "CastReceiverOptions",
                        "description": "Builds a CastReceiverOptions object with the provided options."
                    },
                    {
                        "name": "setCustomNamespaces(List<String> namespaces)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the list of custom namespaces."
                    },
                    {
                        "name": "setLaunchRequestChecker(CastReceiverOptions.LaunchRequestChecker checker)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the callback to check if a launch request is supported."
                    },
                    {
                        "name": "setStatusText(String statusText)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the status text."
                    },
                    {
                        "name": "setVersionCode(int versionCode)",
                        "return_type": "CastReceiverOptions.Builder",
                        "description": "Sets the version code of the receiver app."
                    }
                ]
            },
            {
                "name": "CastReceiverOptions.LaunchRequestChecker",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/cast/tv/CastReceiverOptions.LaunchRequestChecker",
                "description": "Interface for checking if a launch request is supported.",
                "methods": [
                    {
                        "name": "checkLaunchRequestSupported(CastLaunchRequest launchRequest)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Called when a sender requests to launch the app or join the current session."
                    }
                ]
            }
        ]
    },
    {
        "name": "metadata",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/drive/metadata/package-summary",
        "classes": [
            {
                "name": "CustomPropertyKey",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/drive/metadata/CustomPropertyKey",
                "description": "The key to a Custom File Property key-value pair that can be serialized in a Parcel.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "fromJson(JSONObject jsonObject)",
                        "return_type": "staticCustomPropertyKey",
                        "description": ""
                    },
                    {
                        "name": "getKey()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "getVisibility()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toJson()",
                        "return_type": "JSONObject",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MetadataField<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/metadata/MetadataField",
                "description": "Base interface for the SearchableMetadataField and SortableMetadataField interfaces.",
                "methods": []
            },
            {
                "name": "SearchableCollectionMetadataField<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/metadata/SearchableCollectionMetadataField",
                "description": "Interface for metadata fields which hold a collection of values.",
                "methods": []
            },
            {
                "name": "SearchableMetadataField<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/metadata/SearchableMetadataField",
                "description": "Interface for metadata fields that can be used to filter results as part of file queries.",
                "methods": []
            },
            {
                "name": "SearchableOrderedMetadataField<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/metadata/SearchableOrderedMetadataField",
                "description": "Interface for metadata fields which holds an ordered value (such as a date) and which can be used for range queries.",
                "methods": []
            },
            {
                "name": "SortableMetadataField<T>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/drive/metadata/SortableMetadataField",
                "description": "Interface for metadata fields that can be used to sort results of the file queries.",
                "methods": []
            }
        ]
    },
    {
        "name": "awareness",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/awareness/package-summary",
        "classes": [
            {
                "name": "Awareness",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/Awareness",
                "description": "The main entry point for the Awareness service.",
                "methods": [
                    {
                        "name": "getFenceClient(Activity activity)",
                        "return_type": "staticFenceClient",
                        "description": "Creates a new instance of FenceClient for use in an Activity."
                    },
                    {
                        "name": "getFenceClient(Context context)",
                        "return_type": "staticFenceClient",
                        "description": "Creates a new instance of FenceClient for use in a non-activity Context."
                    },
                    {
                        "name": "getSnapshotClient(Activity activity)",
                        "return_type": "staticSnapshotClient",
                        "description": "Creates a new instance of SnapshotClient for use in an Activity."
                    },
                    {
                        "name": "getSnapshotClient(Context context)",
                        "return_type": "staticSnapshotClient",
                        "description": "Creates a new instance of FenceClient for use in a non-activity Context."
                    }
                ]
            },
            {
                "name": "AwarenessStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/AwarenessStatusCodes",
                "description": "Awareness specific status codes, for use in getStatusCode().",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "A human-readable String of the status code."
                    }
                ]
            },
            {
                "name": "FenceClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/FenceClient",
                "description": "Main entry point for the Awareness Fence API.",
                "methods": [
                    {
                        "name": "queryFences(FenceQueryRequest fenceQueryRequest)",
                        "return_type": "Task<FenceQueryResponse>",
                        "description": "Queries the state of a registered fence in the Awareness API."
                    },
                    {
                        "name": "updateFences(FenceUpdateRequest fenceUpdateRequest)",
                        "return_type": "Task<Void>",
                        "description": "Adds or removes a set of fences that are registered with the Awareness API."
                    }
                ]
            },
            {
                "name": "SnapshotClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/SnapshotClient",
                "description": "Main entry point for the Awareness Snapshot API.",
                "methods": [
                    {
                        "name": "getBeaconState(Collection<BeaconState.TypeFilter> beaconTypes)",
                        "return_type": "Task<BeaconStateResponse>",
                        "description": "Gets the current information about nearby beacons."
                    },
                    {
                        "name": "getBeaconState(TypeFilter... beaconTypes)",
                        "return_type": "Task<BeaconStateResponse>",
                        "description": "Gets the current information about nearby beacons."
                    },
                    {
                        "name": "getDetectedActivity()",
                        "return_type": "Task<DetectedActivityResponse>",
                        "description": "Gets the user's current activity (e.g., running, walking, biking, driving, etc."
                    },
                    {
                        "name": "getHeadphoneState()",
                        "return_type": "Task<HeadphoneStateResponse>",
                        "description": "Reports whether headphones are plugged into the device."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "Task<LocationResponse>",
                        "description": "Gets the device's current location (lat/lng"
                    },
                    {
                        "name": "getTimeIntervals()",
                        "return_type": "Task<TimeIntervalsResponse>",
                        "description": "Gets the semantic time intervals for the to the current time and location."
                    }
                ]
            },
            {
                "name": "FenceApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/FenceApi",
                "description": "This interface is deprecated. Use getFenceClient(Activity) instead.",
                "methods": [
                    {
                        "name": "queryFences(GoogleApiClient client, FenceQueryRequest fenceQueryRequest)",
                        "return_type": "abstractPendingResult<FenceQueryResult>",
                        "description": "This method is deprecated. Use queryFences(FenceQueryRequest"
                    },
                    {
                        "name": "updateFences(GoogleApiClient client, FenceUpdateRequest fenceUpdateRequest)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. Use updateFences(FenceUpdateRequest"
                    }
                ]
            },
            {
                "name": "SnapshotApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/SnapshotApi",
                "description": "This interface is deprecated. Use getSnapshotClient(Activity) instead.",
                "methods": [
                    {
                        "name": "getBeaconState(GoogleApiClient client, Collection<BeaconState.TypeFilter> beaconTypes)",
                        "return_type": "abstractPendingResult<BeaconStateResult>",
                        "description": "This method is deprecated. Use getBeaconState(BeaconState.TypeFilter..."
                    },
                    {
                        "name": "getBeaconState(GoogleApiClient client, TypeFilter... beaconTypes)",
                        "return_type": "abstractPendingResult<BeaconStateResult>",
                        "description": "This method is deprecated. Use getBeaconState(BeaconState.TypeFilter..."
                    },
                    {
                        "name": "getDetectedActivity(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<DetectedActivityResult>",
                        "description": "This method is deprecated. Use getDetectedActivity("
                    },
                    {
                        "name": "getHeadphoneState(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<HeadphoneStateResult>",
                        "description": "This method is deprecated. Use getHeadphoneState("
                    },
                    {
                        "name": "getLocation(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<LocationResult>",
                        "description": "This method is deprecated. Use getLocation("
                    },
                    {
                        "name": "getTimeIntervals(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<TimeIntervalsResult>",
                        "description": "This method is deprecated. Use getTimeIntervals("
                    }
                ]
            }
        ]
    },
    {
        "name": "state",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/awareness/state/package-summary",
        "classes": [
            {
                "name": "BeaconState.TypeFilter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/awareness/state/BeaconState.TypeFilter",
                "description": "The type of beacon to match.",
                "methods": [
                    {
                        "name": "with(String namespace, String type)",
                        "return_type": "staticBeaconState.TypeFilter",
                        "description": "Creates a BeaconState.TypeFilter that matches against beacons with the given namespace and type, regardless of the content."
                    },
                    {
                        "name": "with(String namespace, String type, byte[] content)",
                        "return_type": "staticBeaconState.TypeFilter",
                        "description": "Creates a BeaconState.TypeFilter that matches against beacons with the given namespace, type, and content."
                    }
                ]
            },
            {
                "name": "BeaconState",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/state/BeaconState",
                "description": "State of nearby beacon devices.",
                "methods": [
                    {
                        "name": "getBeaconInfo()",
                        "return_type": "abstractList<BeaconState.BeaconInfo>",
                        "description": "Get the list of all beacons that are nearby."
                    }
                ]
            },
            {
                "name": "BeaconState.BeaconInfo",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/state/BeaconState.BeaconInfo",
                "description": "Information from one beacon.",
                "methods": [
                    {
                        "name": "getContent()",
                        "return_type": "abstract byte[]",
                        "description": "Return the byte array content of the beacon attachment if it exists."
                    },
                    {
                        "name": "getNamespace()",
                        "return_type": "abstractString",
                        "description": "Return the beacon namespace."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstractString",
                        "description": "Return the beacon type."
                    }
                ]
            },
            {
                "name": "HeadphoneState",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/state/HeadphoneState",
                "description": "Headphone state.",
                "methods": [
                    {
                        "name": "getState()",
                        "return_type": "abstract int",
                        "description": "Returns the current state of the headphones."
                    }
                ]
            },
            {
                "name": "TimeIntervals",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/awareness/state/TimeIntervals",
                "description": "The semantic time intervals for the to the current time and location.",
                "methods": [
                    {
                        "name": "getTimeIntervals()",
                        "return_type": "abstract int[]",
                        "description": "Get the semantic time intervals for the to the current time and location."
                    },
                    {
                        "name": "hasTimeInterval(int desiredTimeInterval)",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the given semantic time interval is applicable to the current time and locale"
                    }
                ]
            },
            {
                "name": "BeaconState.BeaconInfo",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/awareness/state/BeaconState.BeaconInfo",
                "description": "Information from one beacon.",
                "methods": [
                    {
                        "name": "getContent()",
                        "return_type": "abstract byte[]",
                        "description": "Return the byte array content of the beacon attachment if it exists."
                    },
                    {
                        "name": "getNamespace()",
                        "return_type": "abstractString",
                        "description": "Return the beacon namespace."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstractString",
                        "description": "Return the beacon type."
                    }
                ]
            },
            {
                "name": "BeaconState.TypeFilter",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/awareness/state/BeaconState.TypeFilter",
                "description": "The type of beacon to match.",
                "methods": [
                    {
                        "name": "with(String namespace, String type)",
                        "return_type": "staticBeaconState.TypeFilter",
                        "description": "Creates a BeaconState.TypeFilter that matches against beacons with the given namespace and type, regardless of the content."
                    },
                    {
                        "name": "with(String namespace, String type, byte[] content)",
                        "return_type": "staticBeaconState.TypeFilter",
                        "description": "Creates a BeaconState.TypeFilter that matches against beacons with the given namespace, type, and content."
                    }
                ]
            }
        ]
    },
    {
        "name": "java",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/tflite/java/package-summary",
        "classes": [
            {
                "name": "TfLite",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/tflite/java/TfLite",
                "description": "Entry point for the TensorFlow Lite (TFLite) Java API provided by Google Play Services.",
                "methods": [
                    {
                        "name": "initialize(Context context)",
                        "return_type": "static Task<Void>",
                        "description": "Initialize the TFLite API."
                    }
                ]
            }
        ]
    },
    {
        "name": "password",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/managed/password/package-summary",
        "classes": [
            {
                "name": "PasswordComplexityServiceClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/managed/password/PasswordComplexityServiceClient",
                "description": "A GoogleApi client for password complexity check API.",
                "methods": [
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticPasswordComplexityServiceClient",
                        "description": ""
                    },
                    {
                        "name": "getPasswordComplexity()",
                        "return_type": "Task<Integer>",
                        "description": "Returns PasswordComplexityCheckResult indicating how complex the screen lock is, or the reason why the complexity cannot be determined."
                    }
                ]
            }
        ]
    },
    {
        "name": "blockstore",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/blockstore/package-summary",
        "classes": [
            {
                "name": "Blockstore",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/blockstore/Blockstore",
                "description": "Entry point for Block Store API.",
                "methods": [
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticBlockstoreClient",
                        "description": "Creates a new instance of BlockstoreClient"
                    }
                ]
            },
            {
                "name": "StoreBytesData",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/blockstore/StoreBytesData",
                "description": "Data passed by apps to Block Store.",
                "methods": [
                    {
                        "name": "getBytes()",
                        "return_type": "byte[]",
                        "description": "Raw bytes passed from apps to Block Store."
                    },
                    {
                        "name": "shouldBackupToCloud()",
                        "return_type": "boolean",
                        "description": "Whether the bytes to be stored should be backed up to the cloud in the next sync."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "StoreBytesData.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/blockstore/StoreBytesData.Builder",
                "description": "A builder for StoreBytesData objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StoreBytesData",
                        "description": "Builds and returns the StoreBytesData object."
                    },
                    {
                        "name": "setBytes(byte[] bytes)",
                        "return_type": "StoreBytesData.Builder",
                        "description": "Sets the raw bytes to be stored with Block Store."
                    },
                    {
                        "name": "setShouldBackupToCloud(boolean shouldBackupToCloud)",
                        "return_type": "StoreBytesData.Builder",
                        "description": "Sets whether the bytes to be stored should be backed up to the cloud in the next sync."
                    }
                ]
            },
            {
                "name": "BlockstoreClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/blockstore/BlockstoreClient",
                "description": "The interface for clients to access Block Store.",
                "methods": [
                    {
                        "name": "isEndToEndEncryptionAvailable()",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Returns a Task which asynchronously determines whether Block Store data backed up to the cloud will be end-to-end encrypted."
                    },
                    {
                        "name": "retrieveBytes()",
                        "return_type": "abstract Task<byte[]>",
                        "description": "Returns a Task which asynchronously retrieves the previously-stored bytes, if any."
                    },
                    {
                        "name": "storeBytes(StoreBytesData storeBytesData)",
                        "return_type": "abstract Task<Integer>",
                        "description": "Returns a Task which asynchronously stores the provided byte[] bytes."
                    }
                ]
            },
            {
                "name": "StoreBytesData.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/blockstore/StoreBytesData.Builder",
                "description": "A builder for StoreBytesData objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "StoreBytesData",
                        "description": "Builds and returns the StoreBytesData object."
                    },
                    {
                        "name": "setBytes(byte[] bytes)",
                        "return_type": "StoreBytesData.Builder",
                        "description": "Sets the raw bytes to be stored with Block Store."
                    },
                    {
                        "name": "setShouldBackupToCloud(boolean shouldBackupToCloud)",
                        "return_type": "StoreBytesData.Builder",
                        "description": "Sets whether the bytes to be stored should be backed up to the cloud in the next sync."
                    }
                ]
            }
        ]
    },
    {
        "name": "games",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/package-summary",
        "classes": [
            {
                "name": "AnnotatedData<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/AnnotatedData",
                "description": "Class to return annotated data.",
                "methods": [
                    {
                        "name": "get()",
                        "return_type": "T",
                        "description": "Returns the data that is annotated by this class."
                    },
                    {
                        "name": "isStale()",
                        "return_type": "boolean",
                        "description": "Returns true if the data returned by get("
                    }
                ]
            },
            {
                "name": "GameBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GameBuffer",
                "description": "Data structure providing access to a list of games.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "Game",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GameEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GameEntity",
                "description": "Data object representing a set of Game data.",
                "methods": [
                    {
                        "name": "areSnapshotsEnabled()",
                        "return_type": "boolean",
                        "description": "Indicates whether or not this game supports snapshots."
                    },
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "freeze()",
                        "return_type": "Game",
                        "description": ""
                    },
                    {
                        "name": "getAchievementTotalCount()",
                        "return_type": "int",
                        "description": "Retrieves the number of achievements registered for this game."
                    },
                    {
                        "name": "getApplicationId()",
                        "return_type": "String",
                        "description": "Retrieves the application ID for this game."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "Retrieves the description of this game."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the description string into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDeveloperName(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the developer name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDeveloperName()",
                        "return_type": "String",
                        "description": "Retrieves the name of the developer of this game."
                    },
                    {
                        "name": "getDisplayName(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the display name string into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "String",
                        "description": "Retrieves the display name for this game."
                    },
                    {
                        "name": "getFeaturedImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves an image URI that can be used to load the game's featured (banner"
                    },
                    {
                        "name": "getHiResImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves an image URI that can be used to load the game's hi-res image."
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves an image URI that can be used to load the game's icon."
                    },
                    {
                        "name": "getLeaderboardCount()",
                        "return_type": "int",
                        "description": "Gets the number of leaderboards registered for this game."
                    },
                    {
                        "name": "getPrimaryCategory()",
                        "return_type": "String",
                        "description": "Retrieves the primary category of the game - this is may be null."
                    },
                    {
                        "name": "getSecondaryCategory()",
                        "return_type": "String",
                        "description": "Retrieves the secondary category of the game - this may be null."
                    },
                    {
                        "name": "getThemeColor()",
                        "return_type": "String",
                        "description": "Retrieves the theme color for this game."
                    },
                    {
                        "name": "hasGamepadSupport()",
                        "return_type": "boolean",
                        "description": "Indicates whether or not this game is marked as supporting gamepads."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Games",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/Games",
                "description": "Main entry point for the Games APIs.",
                "methods": [
                    {
                        "name": "getAchievementsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticAchievementsClient",
                        "description": "Returns a new instance of AchievementsClient for use in an Activity."
                    },
                    {
                        "name": "getAchievementsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticAchievementsClient",
                        "description": "Returns a new instance of AchievementsClient for use in a Context."
                    },
                    {
                        "name": "getAchievementsClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticAchievementsClient",
                        "description": "Returns a new instance of AchievementsClient for use in a Context."
                    },
                    {
                        "name": "getAchievementsClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticAchievementsClient",
                        "description": "Returns a new instance of AchievementsClient for use in an Activity."
                    },
                    {
                        "name": "getCurrentAccountName(GoogleApiClient apiClient)",
                        "return_type": "staticString",
                        "description": "This method is deprecated. Use getCurrentAccountName("
                    },
                    {
                        "name": "getEventsClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticEventsClient",
                        "description": "Returns a new instance of EventsClient for use in a Context."
                    },
                    {
                        "name": "getEventsClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticEventsClient",
                        "description": "Returns a new instance of EventsClient for use in an Activity."
                    },
                    {
                        "name": "getEventsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticEventsClient",
                        "description": "Returns a new instance of EventsClient for use in an Activity."
                    },
                    {
                        "name": "getEventsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticEventsClient",
                        "description": "Returns a new instance of EventsClient for use in a Context."
                    },
                    {
                        "name": "getGamesClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticGamesClient",
                        "description": "Returns a new instance of GamesClient for use in an Activity."
                    },
                    {
                        "name": "getGamesClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticGamesClient",
                        "description": "Returns a new instance of GamesClient for use in an Activity."
                    },
                    {
                        "name": "getGamesClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticGamesClient",
                        "description": "Returns a new instance of GamesClient for use in a Context."
                    },
                    {
                        "name": "getGamesClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticGamesClient",
                        "description": "Returns a new instance of GamesClient for use in a Context."
                    },
                    {
                        "name": "getGamesMetadataClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticGamesMetadataClient",
                        "description": "Returns a new instance of GamesMetadataClient for use in a Context."
                    },
                    {
                        "name": "getGamesMetadataClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticGamesMetadataClient",
                        "description": "Returns a new instance of GamesMetadataClient for use in an Activity."
                    },
                    {
                        "name": "getGamesMetadataClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticGamesMetadataClient",
                        "description": "Returns a new instance of GamesMetadataClient for use in an Activity."
                    },
                    {
                        "name": "getGamesMetadataClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticGamesMetadataClient",
                        "description": "Returns a new instance of GamesMetadataClient for use in a Context."
                    },
                    {
                        "name": "getLeaderboardsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticLeaderboardsClient",
                        "description": "Returns a new instance of LeaderboardsClient for use in a Context."
                    },
                    {
                        "name": "getLeaderboardsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticLeaderboardsClient",
                        "description": "Returns a new instance of LeaderboardsClient for use in an Activity."
                    },
                    {
                        "name": "getLeaderboardsClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticLeaderboardsClient",
                        "description": "Returns a new instance of LeaderboardsClient for use in a Context."
                    },
                    {
                        "name": "getLeaderboardsClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticLeaderboardsClient",
                        "description": "Returns a new instance of LeaderboardsClient for use in an Activity."
                    },
                    {
                        "name": "getPlayerStatsClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticPlayerStatsClient",
                        "description": "Returns a new instance of PlayerStatsClient for use in a Context."
                    },
                    {
                        "name": "getPlayerStatsClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticPlayerStatsClient",
                        "description": "Returns a new instance of PlayerStatsClient for use in an Activity."
                    },
                    {
                        "name": "getPlayerStatsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticPlayerStatsClient",
                        "description": "Returns a new instance of PlayerStatsClient for use in an Activity."
                    },
                    {
                        "name": "getPlayerStatsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticPlayerStatsClient",
                        "description": "Returns a new instance of PlayerStatsClient for use in a Context."
                    },
                    {
                        "name": "getPlayersClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticPlayersClient",
                        "description": "Returns a new instance of PlayersClient for use in an Activity."
                    },
                    {
                        "name": "getPlayersClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticPlayersClient",
                        "description": "Returns a new instance of PlayersClient for use in a Context."
                    },
                    {
                        "name": "getPlayersClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticPlayersClient",
                        "description": "Returns a new instance of PlayersClient for use in an Activity."
                    },
                    {
                        "name": "getPlayersClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticPlayersClient",
                        "description": "Returns a new instance of PlayersClient for use in a Context."
                    },
                    {
                        "name": "getSnapshotsClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticSnapshotsClient",
                        "description": "Returns a new instance of SnapshotsClient for use in a Context."
                    },
                    {
                        "name": "getSnapshotsClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticSnapshotsClient",
                        "description": "Returns a new instance of SnapshotsClient for use in an Activity."
                    },
                    {
                        "name": "getSnapshotsClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticSnapshotsClient",
                        "description": "Returns a new instance of SnapshotsClient for use in a Context."
                    },
                    {
                        "name": "getSnapshotsClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticSnapshotsClient",
                        "description": "Returns a new instance of SnapshotsClient for use in an Activity."
                    },
                    {
                        "name": "getVideosClient(Context context, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticVideosClient",
                        "description": "Returns a new instance of VideosClient for use in a Context."
                    },
                    {
                        "name": "getVideosClient(Activity activity, GoogleSignInAccount account, Games.GamesOptions options)",
                        "return_type": "staticVideosClient",
                        "description": "Returns a new instance of VideosClient for use in an Activity."
                    },
                    {
                        "name": "getVideosClient(Context context, GoogleSignInAccount account)",
                        "return_type": "staticVideosClient",
                        "description": "Returns a new instance of VideosClient for use in a Context."
                    },
                    {
                        "name": "getVideosClient(Activity activity, GoogleSignInAccount account)",
                        "return_type": "staticVideosClient",
                        "description": "Returns a new instance of VideosClient for use in an Activity."
                    },
                    {
                        "name": "signOut(GoogleApiClient apiClient)",
                        "return_type": "staticPendingResult<Status>",
                        "description": "This method is deprecated. Use signOut("
                    }
                ]
            },
            {
                "name": "Games.GamesOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/Games.GamesOptions",
                "description": "API configuration parameters for Games.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticGames.GamesOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Games.GamesOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/Games.GamesOptions.Builder",
                "description": "Helper class to build Games.GamesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Games.GamesOptions",
                        "description": ""
                    },
                    {
                        "name": "setSdkVariant(int variant)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setShowConnectingPopup(boolean showConnectingPopup)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": "Sets whether a \"connecting\" popup should be displayed automatically at the start of the sign-in flow."
                    },
                    {
                        "name": "setShowConnectingPopup(boolean showConnectingPopup, int gravity)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": "Sets whether a \"connecting\" popup should be displayed automatically at the start of the sign-in flow."
                    }
                ]
            },
            {
                "name": "GamesActivityResultCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GamesActivityResultCodes",
                "description": "Result codes that can be set as result in Activities from the Client UI started with startActivityForResult(Intent, int).",
                "methods": []
            },
            {
                "name": "GamesCallbackStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GamesCallbackStatusCodes",
                "description": "Status codes for Games callbacks.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Get the string associated with the status code."
                    }
                ]
            },
            {
                "name": "GamesClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GamesClient",
                "description": "A client to interact with games basic functionality.",
                "methods": [
                    {
                        "name": "getActivationHint()",
                        "return_type": "Task<Bundle>",
                        "description": "Returns a Task which asynchronously loads a Bundle that may contain an information regarding to the previous user's action."
                    },
                    {
                        "name": "getAppId()",
                        "return_type": "Task<String>",
                        "description": "Returns a Task which asynchronously loads the application ID linked to this client instance."
                    },
                    {
                        "name": "getCurrentAccountName()",
                        "return_type": "Task<String>",
                        "description": "Returns a Task which asynchronously loads the name of the currently selected account."
                    },
                    {
                        "name": "getSettingsIntent()",
                        "return_type": "Task<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to show the Settings screen that allows the user to configure Games-related features for the current game."
                    },
                    {
                        "name": "setGravityForPopups(int gravity)",
                        "return_type": "Task<Void>",
                        "description": "Returns a Task which asynchronously sets the part of the screen at which games service pop-ups (for example, \"welcome back\" or \"achievement unlocked\" popups"
                    },
                    {
                        "name": "setViewForPopups(View gamesContentView)",
                        "return_type": "Task<Void>",
                        "description": "Returns a Task which asynchronously sets the View to use as a content view for popups."
                    }
                ]
            },
            {
                "name": "GamesClientStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GamesClientStatusCodes",
                "description": "Status codes for Games Clients methods result Task failures.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Get the string associated with the status code."
                    }
                ]
            },
            {
                "name": "GamesStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/GamesStatusCodes",
                "description": "This class is deprecated. Used only for GoogleApiClient Games API.",
                "methods": [
                    {
                        "name": "getStatusString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Get the string associated with the status code."
                    }
                ]
            },
            {
                "name": "LeaderboardsClient.LeaderboardScores",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/LeaderboardsClient.LeaderboardScores",
                "description": "Result delivered when leaderboard scores have been loaded.",
                "methods": [
                    {
                        "name": "getLeaderboard()",
                        "return_type": "Leaderboard",
                        "description": ""
                    },
                    {
                        "name": "getScores()",
                        "return_type": "LeaderboardScoreBuffer",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Release the LeaderboardScoreBuffer used for scores storage."
                    }
                ]
            },
            {
                "name": "PageDirection",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/PageDirection",
                "description": "Direction constants for pagination over data sets.",
                "methods": []
            },
            {
                "name": "PlayerBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/PlayerBuffer",
                "description": "Data structure providing access to a list of players.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "Player",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlayerEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/PlayerEntity",
                "description": "Data object representing a set of Player data.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "freeze()",
                        "return_type": "Player",
                        "description": ""
                    },
                    {
                        "name": "getBannerImageLandscapeUri()",
                        "return_type": "Uri",
                        "description": "Retrieves the URI for loading this player's landscape banner image."
                    },
                    {
                        "name": "getBannerImagePortraitUri()",
                        "return_type": "Uri",
                        "description": "Retrieves the URI for loading this player's portrait banner image."
                    },
                    {
                        "name": "getCurrentPlayerInfo()",
                        "return_type": "CurrentPlayerInfo",
                        "description": "Returns information only available for the signed-in user."
                    },
                    {
                        "name": "getDisplayName(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the player's display name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "String",
                        "description": "Retrieves the display name for this player."
                    },
                    {
                        "name": "getHiResImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves the URI for loading this player's hi-res profile image."
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves the URI for loading this player's icon-size profile image."
                    },
                    {
                        "name": "getLastPlayedWithTimestamp()",
                        "return_type": "long",
                        "description": "Retrieves the timestamp at which this player last played a multiplayer game with the currently signed in user."
                    },
                    {
                        "name": "getLevelInfo()",
                        "return_type": "PlayerLevelInfo",
                        "description": "Retrieves the player level associated information if any exists."
                    },
                    {
                        "name": "getPlayerId()",
                        "return_type": "String",
                        "description": "Retrieves the ID of this player."
                    },
                    {
                        "name": "getRelationshipInfo()",
                        "return_type": "PlayerRelationshipInfo",
                        "description": "Returns relationship information of this player."
                    },
                    {
                        "name": "getRetrievedTimestamp()",
                        "return_type": "long",
                        "description": "Retrieves the timestamp at which this player record was last updated locally."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "String",
                        "description": "Retrieves the title of the player."
                    },
                    {
                        "name": "getTitle(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the player's title into the given CharArrayBuffer."
                    },
                    {
                        "name": "hasHiResImage()",
                        "return_type": "boolean",
                        "description": "Indicates whether this player has a hi-res profile image to display."
                    },
                    {
                        "name": "hasIconImage()",
                        "return_type": "boolean",
                        "description": "Indicates whether this player has an icon-size profile image to display."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlayerLevel",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/PlayerLevel",
                "description": "Data object representing a level a player can obtain in the metagame.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getLevelNumber()",
                        "return_type": "int",
                        "description": "Returns the number for this level, e.g."
                    },
                    {
                        "name": "getMaxXp()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getMinXp()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlayerLevelInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/PlayerLevelInfo",
                "description": "Data object representing the current level information of a player in the metagame.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getCurrentLevel()",
                        "return_type": "PlayerLevel",
                        "description": "Getter for the player's current level object."
                    },
                    {
                        "name": "getCurrentXpTotal()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getLastLevelUpTimestamp()",
                        "return_type": "long",
                        "description": ""
                    },
                    {
                        "name": "getNextLevel()",
                        "return_type": "PlayerLevel",
                        "description": "Getter for the player's next level object."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isMaxLevel()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SnapshotsClient.DataOrConflict<T>",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/SnapshotsClient.DataOrConflict",
                "description": "Represents the result of attempting to open a snapshot or resolve a conflict from a previous attempt.",
                "methods": [
                    {
                        "name": "getConflict()",
                        "return_type": "SnapshotsClient.SnapshotConflict",
                        "description": ""
                    },
                    {
                        "name": "getData()",
                        "return_type": "T",
                        "description": "Returns data if the result was successful."
                    },
                    {
                        "name": "isConflict()",
                        "return_type": "boolean",
                        "description": "Returns true if there is conflict, in which case getConflict("
                    }
                ]
            },
            {
                "name": "SnapshotsClient.SnapshotConflict",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/SnapshotsClient.SnapshotConflict",
                "description": "Result delivered when a conflict was detected during open(SnapshotMetadata) or resolveConflict(String, Snapshot).",
                "methods": [
                    {
                        "name": "getConflictId()",
                        "return_type": "String",
                        "description": "Returns the ID of the conflict to resolve, if any."
                    },
                    {
                        "name": "getConflictingSnapshot()",
                        "return_type": "Snapshot",
                        "description": "Returns the modified version of the Snapshot in the case of a conflict."
                    },
                    {
                        "name": "getResolutionSnapshotContents()",
                        "return_type": "SnapshotContents",
                        "description": "Returns the SnapshotContents object used to update the data in case of a conflict."
                    },
                    {
                        "name": "getSnapshot()",
                        "return_type": "Snapshot",
                        "description": "Returns the server's version of the Snapshot that was opened."
                    }
                ]
            },
            {
                "name": "VideosClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/VideosClient",
                "description": "A client to interact with videos.",
                "methods": [
                    {
                        "name": "getCaptureCapabilities()",
                        "return_type": "abstractTask<VideoCapabilities>",
                        "description": "Returns a Task which asynchronously fetches the VideoCapabilities of the service, whether the mic or front-facing camera are supported, if the service can write to external storage, and what capture modes and quality levels are available."
                    },
                    {
                        "name": "getCaptureOverlayIntent()",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to launch the capture overlay."
                    },
                    {
                        "name": "getCaptureState()",
                        "return_type": "abstractTask<CaptureState>",
                        "description": "Returns a Task which asynchronously fetches the current CaptureState of the capture service."
                    },
                    {
                        "name": "isCaptureAvailable(int captureMode)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "Returns a Task which asynchronously fetches whether the capture service is already in use."
                    },
                    {
                        "name": "isCaptureSupported()",
                        "return_type": "abstractTask<Boolean>",
                        "description": "Returns a Task which asynchronously checks whether the device supports capture."
                    },
                    {
                        "name": "registerOnCaptureOverlayStateChangedListener(VideosClient.OnCaptureOverlayStateListener listener)",
                        "return_type": "abstractTask<Void>",
                        "description": "Returns a Task which asynchronously registers a VideosClient.OnCaptureOverlayStateListener to listen for changes to the overlay state launched by getCaptureOverlayIntent("
                    },
                    {
                        "name": "unregisterOnCaptureOverlayStateChangedListener(VideosClient.OnCaptureOverlayStateListener listener)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "Returns a Task which asynchronously unregisters this client's overlay state update listener, if any, and loads the result."
                    }
                ]
            },
            {
                "name": "AchievementsClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/AchievementsClient",
                "description": "A client to interact with achievements functionality.",
                "methods": [
                    {
                        "name": "getAchievementsIntent()",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to show the list of achievements for a game."
                    },
                    {
                        "name": "increment(String id, int numSteps)",
                        "return_type": "abstract void",
                        "description": "Increments an achievement by the given number of steps."
                    },
                    {
                        "name": "incrementImmediate(String id, int numSteps)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "Returns a Task which asynchronously increments an achievement by the given number of steps."
                    },
                    {
                        "name": "load(boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<AchievementBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated AchievementBuffer that represents the achievement data for the currently signed-in player."
                    },
                    {
                        "name": "reveal(String id)",
                        "return_type": "abstract void",
                        "description": "Reveals a hidden achievement to the currently signed-in player."
                    },
                    {
                        "name": "revealImmediate(String id)",
                        "return_type": "abstractTask<Void>",
                        "description": "Returns a Task which asynchronously reveals a hidden achievement to the currently signed in player."
                    },
                    {
                        "name": "setSteps(String id, int numSteps)",
                        "return_type": "abstract void",
                        "description": "Sets an achievement to have at least the given number of steps completed."
                    },
                    {
                        "name": "setStepsImmediate(String id, int numSteps)",
                        "return_type": "abstractTask<Boolean>",
                        "description": "Returns a Task which asynchronously sets an achievement to have at least the given number of steps completed."
                    },
                    {
                        "name": "unlock(String id)",
                        "return_type": "abstract void",
                        "description": "Unlocks an achievement for the currently signed in player."
                    },
                    {
                        "name": "unlockImmediate(String id)",
                        "return_type": "abstractTask<Void>",
                        "description": "Returns a Task which asynchronously unlocks an achievement for the currently signed in player."
                    }
                ]
            },
            {
                "name": "CurrentPlayerInfo",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/CurrentPlayerInfo",
                "description": "Data object representing the information related only to the signed in user.",
                "methods": [
                    {
                        "name": "getFriendsListVisibilityStatus()",
                        "return_type": "abstract int",
                        "description": "Retrieves if the user has shared the friends list with the game."
                    }
                ]
            },
            {
                "name": "EventsClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/EventsClient",
                "description": "A client to interact with events functionality.",
                "methods": [
                    {
                        "name": "increment(String eventId, int incrementAmount)",
                        "return_type": "abstract void",
                        "description": "Increments an event specified by eventId by the given number of steps."
                    },
                    {
                        "name": "load(boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<EventBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated EventBuffer that represents the event data for the currently signed-in player."
                    },
                    {
                        "name": "loadByIds(boolean forceReload, String... eventIds)",
                        "return_type": "abstractTask<AnnotatedData<EventBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated EventBuffer that represents the event data for the specified event IDs."
                    }
                ]
            },
            {
                "name": "Game",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/Game",
                "description": "Data interface for retrieving game information.",
                "methods": [
                    {
                        "name": "areSnapshotsEnabled()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether or not this game supports snapshots."
                    },
                    {
                        "name": "getAchievementTotalCount()",
                        "return_type": "abstract int",
                        "description": "Retrieves the number of achievements registered for this game."
                    },
                    {
                        "name": "getApplicationId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the application ID for this game."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "Retrieves the description of this game."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the description string into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDeveloperName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the developer name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDeveloperName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the name of the developer of this game."
                    },
                    {
                        "name": "getDisplayName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the display name string into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the display name for this game."
                    },
                    {
                        "name": "getFeaturedImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves an image URI that can be used to load the game's featured (banner"
                    },
                    {
                        "name": "getHiResImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves an image URI that can be used to load the game's hi-res image."
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves an image URI that can be used to load the game's icon."
                    },
                    {
                        "name": "getLeaderboardCount()",
                        "return_type": "abstract int",
                        "description": "Gets the number of leaderboards registered for this game."
                    },
                    {
                        "name": "getPrimaryCategory()",
                        "return_type": "abstractString",
                        "description": "Retrieves the primary category of the game - this is may be null."
                    },
                    {
                        "name": "getSecondaryCategory()",
                        "return_type": "abstractString",
                        "description": "Retrieves the secondary category of the game - this may be null."
                    },
                    {
                        "name": "getThemeColor()",
                        "return_type": "abstractString",
                        "description": "Retrieves the theme color for this game."
                    },
                    {
                        "name": "hasGamepadSupport()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether or not this game is marked as supporting gamepads."
                    }
                ]
            },
            {
                "name": "GamesMetadata",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/GamesMetadata",
                "description": "This interface is deprecated. Use GamesMetadataClient instead",
                "methods": [
                    {
                        "name": "getCurrentGame(GoogleApiClient apiClient)",
                        "return_type": "abstractGame",
                        "description": "Gets the metadata for the current game, if available."
                    },
                    {
                        "name": "loadGame(GoogleApiClient apiClient)",
                        "return_type": "abstractPendingResult<GamesMetadata.LoadGamesResult>",
                        "description": "Loads the details for the current game."
                    }
                ]
            },
            {
                "name": "GamesMetadata.LoadGamesResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/GamesMetadata.LoadGamesResult",
                "description": "This interface is deprecated. GameBuffer is returned directly in the GamesMetadataClient.",
                "methods": [
                    {
                        "name": "getGames()",
                        "return_type": "abstractGameBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GamesMetadataClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/GamesMetadataClient",
                "description": "A client to receive GamesMetadata.",
                "methods": [
                    {
                        "name": "getCurrentGame()",
                        "return_type": "abstractTask<Game>",
                        "description": "Returns a Task which asynchronously loads the Game metadata for the current game from the local cache."
                    },
                    {
                        "name": "loadGame()",
                        "return_type": "abstractTask<AnnotatedData<Game>>",
                        "description": "Returns a Task which asynchronously loads an annotated Game metadata for the current game."
                    }
                ]
            },
            {
                "name": "LeaderboardsClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/LeaderboardsClient",
                "description": "A client to interact with leaderboards functionality.",
                "methods": [
                    {
                        "name": "getAllLeaderboardsIntent()",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to show the list of leaderboards for a game."
                    },
                    {
                        "name": "getLeaderboardIntent(String leaderboardId, int timeSpan)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to show a leaderboard for a game specified by a leaderboardId."
                    },
                    {
                        "name": "getLeaderboardIntent(String leaderboardId)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to show a leaderboard for a game specified by a leaderboardId."
                    },
                    {
                        "name": "getLeaderboardIntent(String leaderboardId, int timeSpan, int collection)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent to show a leaderboard for a game specified by a leaderboardId."
                    },
                    {
                        "name": "loadCurrentPlayerLeaderboardScore(String leaderboardId, int span, int leaderboardCollection)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardScore>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardScore that represents the signed-in player's score for the leaderboard specified by leaderboardId."
                    },
                    {
                        "name": "loadLeaderboardMetadata(boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardBuffer that represents a list of leaderboards metadata for this game."
                    },
                    {
                        "name": "loadLeaderboardMetadata(String leaderboardId, boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<Leaderboard>>",
                        "description": "Returns a Task which asynchronously loads an annotated Leaderboard specified by leaderboardId."
                    },
                    {
                        "name": "loadMoreScores(LeaderboardScoreBuffer buffer, int maxResults, int pageDirection)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardsClient.LeaderboardScores>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardsClient.LeaderboardScores that represents an additional page of score data for the given score buffer."
                    },
                    {
                        "name": "loadPlayerCenteredScores(String leaderboardId, int span, int leaderboardCollection, int maxResults, boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardsClient.LeaderboardScores>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardsClient.LeaderboardScores that represents the player-centered page of scores for the leaderboard specified by leaderboardId."
                    },
                    {
                        "name": "loadPlayerCenteredScores(String leaderboardId, int span, int leaderboardCollection, int maxResults)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardsClient.LeaderboardScores>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardsClient.LeaderboardScores that represents the player-centered page of scores for the leaderboard specified by leaderboardId."
                    },
                    {
                        "name": "loadTopScores(String leaderboardId, int span, int leaderboardCollection, int maxResults)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardsClient.LeaderboardScores>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardsClient.LeaderboardScores that represents the top page of scores for a given leaderboard specified by leaderboardId."
                    },
                    {
                        "name": "loadTopScores(String leaderboardId, int span, int leaderboardCollection, int maxResults, boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<LeaderboardsClient.LeaderboardScores>>",
                        "description": "Returns a Task which asynchronously loads an annotated LeaderboardsClient.LeaderboardScores that represents the top page of scores for the leaderboard specified by leaderboardId."
                    },
                    {
                        "name": "submitScore(String leaderboardId, long score, String scoreTag)",
                        "return_type": "abstract void",
                        "description": "Submit a score to a leaderboard for the currently signed-in player."
                    },
                    {
                        "name": "submitScore(String leaderboardId, long score)",
                        "return_type": "abstract void",
                        "description": "Submit a score to a leaderboard for the currently signed-in player."
                    },
                    {
                        "name": "submitScoreImmediate(String leaderboardId, long score, String scoreTag)",
                        "return_type": "abstractTask<ScoreSubmissionData>",
                        "description": "Returns a Task which asynchronously submits the score to the leaderboard for the currently signed-in player."
                    },
                    {
                        "name": "submitScoreImmediate(String leaderboardId, long score)",
                        "return_type": "abstractTask<ScoreSubmissionData>",
                        "description": "Returns a Task which asynchronously submits the score to the leaderboard for the currently signed-in player."
                    }
                ]
            },
            {
                "name": "Player",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/Player",
                "description": "Data interface for retrieving player information.",
                "methods": [
                    {
                        "name": "getBannerImageLandscapeUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves the URI for loading this player's landscape banner image."
                    },
                    {
                        "name": "getBannerImagePortraitUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves the URI for loading this player's portrait banner image."
                    },
                    {
                        "name": "getCurrentPlayerInfo()",
                        "return_type": "abstractCurrentPlayerInfo",
                        "description": "Returns information only available for the signed-in user."
                    },
                    {
                        "name": "getDisplayName(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the player's display name into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the display name for this player."
                    },
                    {
                        "name": "getHiResImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves the URI for loading this player's hi-res profile image."
                    },
                    {
                        "name": "getIconImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves the URI for loading this player's icon-size profile image."
                    },
                    {
                        "name": "getLastPlayedWithTimestamp()",
                        "return_type": "abstract long",
                        "description": "This method is deprecated. Real-time multiplayer and Turn-based multiplayer support is being shut down on March 31, 2020. See Multiplayer deprecation"
                    },
                    {
                        "name": "getLevelInfo()",
                        "return_type": "abstractPlayerLevelInfo",
                        "description": "Retrieves the player level associated information if any exists."
                    },
                    {
                        "name": "getPlayerId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of this player."
                    },
                    {
                        "name": "getRelationshipInfo()",
                        "return_type": "abstractPlayerRelationshipInfo",
                        "description": "Returns relationship information of this player."
                    },
                    {
                        "name": "getRetrievedTimestamp()",
                        "return_type": "abstract long",
                        "description": "Retrieves the timestamp at which this player record was last updated locally."
                    },
                    {
                        "name": "getTitle()",
                        "return_type": "abstractString",
                        "description": "Retrieves the title of the player."
                    },
                    {
                        "name": "getTitle(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the player's title into the given CharArrayBuffer."
                    },
                    {
                        "name": "hasHiResImage()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether this player has a hi-res profile image to display."
                    },
                    {
                        "name": "hasIconImage()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether this player has an icon-size profile image to display."
                    }
                ]
            },
            {
                "name": "PlayerRelationshipInfo",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/PlayerRelationshipInfo",
                "description": "Data object representing the relationship information of a player.",
                "methods": [
                    {
                        "name": "getFriendStatus()",
                        "return_type": "abstract int",
                        "description": "Retrieves this player's friend status relative to the currently signed-in player."
                    }
                ]
            },
            {
                "name": "Players",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/Players",
                "description": "This interface is deprecated. Use PlayersClient instead",
                "methods": [
                    {
                        "name": "getCompareProfileIntent(GoogleApiClient apiClient, Player player)",
                        "return_type": "abstractIntent",
                        "description": "Returns an intent that will display a screen where the user can compare themselves against another player's profile."
                    },
                    {
                        "name": "getCurrentPlayer(GoogleApiClient apiClient)",
                        "return_type": "abstractPlayer",
                        "description": "Get the current signed in player, if available."
                    },
                    {
                        "name": "getCurrentPlayerId(GoogleApiClient apiClient)",
                        "return_type": "abstractString",
                        "description": "Get the current signed in player ID, if available."
                    },
                    {
                        "name": "getPlayerSearchIntent(GoogleApiClient apiClient)",
                        "return_type": "abstractIntent",
                        "description": "Returns an intent that will display a screen where the user can search for players."
                    },
                    {
                        "name": "loadConnectedPlayers(GoogleApiClient apiClient, boolean forceReload)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "This method is deprecated. Google+ no longer integrated so social APIs will not work as expected. See Play Games authentication adopting Google Sign-In API"
                    },
                    {
                        "name": "loadInvitablePlayers(GoogleApiClient apiClient, int pageSize, boolean forceReload)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "This method is deprecated. Google+ no longer integrated so social APIs will not work as expected. See Play Games authentication adopting Google Sign-In API"
                    },
                    {
                        "name": "loadMoreInvitablePlayers(GoogleApiClient apiClient, int pageSize)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "This method is deprecated. Google+ no longer integrated so social APIs will not work as expected. See Play Games authentication adopting Google Sign-In API"
                    },
                    {
                        "name": "loadMoreRecentlyPlayedWithPlayers(GoogleApiClient apiClient, int pageSize)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "Asynchronously loads an additional page of players that the signed-in player has played multiplayer games with recently."
                    },
                    {
                        "name": "loadPlayer(GoogleApiClient apiClient, String playerId)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "Loads the profile for the requested player ID."
                    },
                    {
                        "name": "loadPlayer(GoogleApiClient apiClient, String playerId, boolean forceReload)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "Loads the profile for the requested player ID."
                    },
                    {
                        "name": "loadRecentlyPlayedWithPlayers(GoogleApiClient apiClient, int pageSize, boolean forceReload)",
                        "return_type": "abstractPendingResult<Players.LoadPlayersResult>",
                        "description": "Load the initial page of players the currently signed-in player has played multiplayer games with recently, starting with the most recent."
                    }
                ]
            },
            {
                "name": "Players.LoadPlayersResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/Players.LoadPlayersResult",
                "description": "This interface is deprecated. Player is returned directly in the PlayersClient.",
                "methods": [
                    {
                        "name": "getPlayers()",
                        "return_type": "abstractPlayerBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PlayersClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/PlayersClient",
                "description": "A client to interact with Players.",
                "methods": [
                    {
                        "name": "getCompareProfileIntent(String otherPlayerId)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent that will display a screen where the user can see a comparison of their own profile against another player's profile."
                    },
                    {
                        "name": "getCompareProfileIntent(Player player)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent that will display a screen where the user can compare themselves against another player's profile."
                    },
                    {
                        "name": "getCompareProfileIntentWithAlternativeNameHints(String otherPlayerId, String otherPlayerInGameName, String currentPlayerInGameName)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent that will display a screen where the user can see a comparison of their own profile against another player's profile."
                    },
                    {
                        "name": "getCurrentPlayer(boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<Player>>",
                        "description": "Returns a Task which asynchronously loads the current signed-in Player, if available."
                    },
                    {
                        "name": "getCurrentPlayer()",
                        "return_type": "abstractTask<Player>",
                        "description": "Returns a Task which asynchronously loads the current signed-in Player, if available."
                    },
                    {
                        "name": "getCurrentPlayerId()",
                        "return_type": "abstractTask<String>",
                        "description": "Returns a Task which asynchronously loads the current signed-in player ID, if available."
                    },
                    {
                        "name": "getPlayerSearchIntent()",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent that will display a screen where the user can search for players."
                    },
                    {
                        "name": "loadFriends(int pageSize, boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<PlayerBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated PlayerBuffer that represents friends the user has."
                    },
                    {
                        "name": "loadMoreFriends(int pageSize)",
                        "return_type": "abstractTask<AnnotatedData<PlayerBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated PlayerBuffer that represents friends the user has."
                    },
                    {
                        "name": "loadMoreRecentlyPlayedWithPlayers(int pageSize)",
                        "return_type": "abstractTask<AnnotatedData<PlayerBuffer>>",
                        "description": "This method is deprecated. Real-time multiplayer and Turn-based multiplayer support is being shut down on March 31, 2020. See Multiplayer deprecation"
                    },
                    {
                        "name": "loadPlayer(String playerId, boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<Player>>",
                        "description": "Returns a Task which asynchronously loads an annotated Player profile specified by playerId."
                    },
                    {
                        "name": "loadPlayer(String playerId)",
                        "return_type": "abstractTask<AnnotatedData<Player>>",
                        "description": "Returns a Task which asynchronously loads an annotated Player profile specified by playerId."
                    },
                    {
                        "name": "loadRecentlyPlayedWithPlayers(int pageSize, boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<PlayerBuffer>>",
                        "description": "This method is deprecated. Real-time multiplayer and Turn-based multiplayer support is being shut down on March 31, 2020. See Multiplayer deprecation"
                    }
                ]
            },
            {
                "name": "PlayerStatsClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/PlayerStatsClient",
                "description": "A client to retrieve Player stats.",
                "methods": [
                    {
                        "name": "loadPlayerStats(boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<PlayerStats>>",
                        "description": "Returns a Task which asynchronously loads an annotated PlayerStats for the currently signed-in player and game into a single result."
                    }
                ]
            },
            {
                "name": "SnapshotsClient",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/SnapshotsClient",
                "description": "A client to interact with Snapshots.",
                "methods": [
                    {
                        "name": "commitAndClose(Snapshot snapshot, SnapshotMetadataChange metadataChange)",
                        "return_type": "abstractTask<SnapshotMetadata>",
                        "description": "Returns a Task which asynchronously commits any modifications in SnapshotMetadataChange made to the Snapshot and loads a SnapshotMetadata."
                    },
                    {
                        "name": "delete(SnapshotMetadata metadata)",
                        "return_type": "abstractTask<String>",
                        "description": "Returns a Task which asynchronously deletes the specified by SnapshotMetadata snapshot and loads the deleted snapshot ID."
                    },
                    {
                        "name": "discardAndClose(Snapshot snapshot)",
                        "return_type": "abstractTask<Void>",
                        "description": "Returns a Task which asynchronously discards the contents of the Snapshot and closes it."
                    },
                    {
                        "name": "getMaxCoverImageSize()",
                        "return_type": "abstractTask<Integer>",
                        "description": "Returns a Task which asynchronously loads the maximum data size per snapshot cover image in bytes."
                    },
                    {
                        "name": "getMaxDataSize()",
                        "return_type": "abstractTask<Integer>",
                        "description": "Returns a Task which asynchronously loads the maximum data size per snapshot in bytes."
                    },
                    {
                        "name": "getSelectSnapshotIntent(String title, boolean allowAddButton, boolean allowDelete, int maxSnapshots)",
                        "return_type": "abstractTask<Intent>",
                        "description": "Returns a Task which asynchronously loads an Intent that will let the user select a snapshot."
                    },
                    {
                        "name": "getSnapshotFromBundle(Bundle extras)",
                        "return_type": "staticSnapshotMetadata",
                        "description": "This method takes a Bundle object and extracts the Snapshot provided."
                    },
                    {
                        "name": "load(boolean forceReload)",
                        "return_type": "abstractTask<AnnotatedData<SnapshotMetadataBuffer>>",
                        "description": "Returns a Task which asynchronously loads an annotated SnapshotMetadataBuffer that represents the snapshot data for the currently signed-in player."
                    },
                    {
                        "name": "open(SnapshotMetadata metadata)",
                        "return_type": "abstractTask<DataOrConflict<Snapshot>>",
                        "description": "Returns a Task which asynchronously opens a snapshot with the given SnapshotMetadata (usually returned from load(boolean"
                    },
                    {
                        "name": "open(SnapshotMetadata metadata, int conflictPolicy)",
                        "return_type": "abstractTask<DataOrConflict<Snapshot>>",
                        "description": "Returns a Task which asynchronously opens a snapshot with the given SnapshotMetadata (usually returned from load(boolean"
                    },
                    {
                        "name": "open(String fileName, boolean createIfNotFound, int conflictPolicy)",
                        "return_type": "abstractTask<DataOrConflict<Snapshot>>",
                        "description": "Returns a Task which asynchronously opens a snapshot with the given fileName."
                    },
                    {
                        "name": "open(String fileName, boolean createIfNotFound)",
                        "return_type": "abstractTask<DataOrConflict<Snapshot>>",
                        "description": "Returns a Task which asynchronously opens a snapshot with the given fileName."
                    },
                    {
                        "name": "resolveConflict(String conflictId, String snapshotId, SnapshotMetadataChange metadataChange, SnapshotContents snapshotContents)",
                        "return_type": "abstractTask<DataOrConflict<Snapshot>>",
                        "description": "Returns a Task which asynchronously resolves a conflict using the provided data."
                    },
                    {
                        "name": "resolveConflict(String conflictId, Snapshot snapshot)",
                        "return_type": "abstractTask<DataOrConflict<Snapshot>>",
                        "description": "Returns a Task which asynchronously resolves a conflict using the data from the provided Snapshot."
                    }
                ]
            },
            {
                "name": "VideosClient.OnCaptureOverlayStateListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/VideosClient.OnCaptureOverlayStateListener",
                "description": "Listener that will notify about key user interactions with the overlay, such as starting/stopping capture or dismissing the overlay.",
                "methods": [
                    {
                        "name": "onCaptureOverlayStateChanged(int overlayState)",
                        "return_type": "abstract void",
                        "description": "Called when the capture overlay state changes."
                    }
                ]
            },
            {
                "name": "Games.GamesOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/Games.GamesOptions",
                "description": "API configuration parameters for Games.",
                "methods": [
                    {
                        "name": "builder()",
                        "return_type": "staticGames.GamesOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Games.GamesOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/Games.GamesOptions.Builder",
                "description": "Helper class to build Games.GamesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Games.GamesOptions",
                        "description": ""
                    },
                    {
                        "name": "setSdkVariant(int variant)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setShowConnectingPopup(boolean showConnectingPopup)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": "Sets whether a \"connecting\" popup should be displayed automatically at the start of the sign-in flow."
                    },
                    {
                        "name": "setShowConnectingPopup(boolean showConnectingPopup, int gravity)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": "Sets whether a \"connecting\" popup should be displayed automatically at the start of the sign-in flow."
                    }
                ]
            },
            {
                "name": "VideosClient.OnCaptureOverlayStateListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/VideosClient.OnCaptureOverlayStateListener",
                "description": "Listener that will notify about key user interactions with the overlay, such as starting/stopping capture or dismissing the overlay.",
                "methods": [
                    {
                        "name": "onCaptureOverlayStateChanged(int overlayState)",
                        "return_type": "abstract void",
                        "description": "Called when the capture overlay state changes."
                    }
                ]
            },
            {
                "name": "GamesMetadata.LoadGamesResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/GamesMetadata.LoadGamesResult",
                "description": "This interface is deprecated. GameBuffer is returned directly in the GamesMetadataClient.",
                "methods": [
                    {
                        "name": "getGames()",
                        "return_type": "abstractGameBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LeaderboardsClient.LeaderboardScores",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/LeaderboardsClient.LeaderboardScores",
                "description": "Result delivered when leaderboard scores have been loaded.",
                "methods": [
                    {
                        "name": "getLeaderboard()",
                        "return_type": "Leaderboard",
                        "description": ""
                    },
                    {
                        "name": "getScores()",
                        "return_type": "LeaderboardScoreBuffer",
                        "description": ""
                    },
                    {
                        "name": "release()",
                        "return_type": "void",
                        "description": "Release the LeaderboardScoreBuffer used for scores storage."
                    }
                ]
            },
            {
                "name": "Players.LoadPlayersResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/Players.LoadPlayersResult",
                "description": "This interface is deprecated. Player is returned directly in the PlayersClient.",
                "methods": [
                    {
                        "name": "getPlayers()",
                        "return_type": "abstractPlayerBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SnapshotsClient.DataOrConflict<T>",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/SnapshotsClient.DataOrConflict<T>",
                "description": "Represents the result of attempting to open a snapshot or resolve a conflict from a previous attempt.",
                "methods": []
            },
            {
                "name": "SnapshotsClient.SnapshotConflict",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/SnapshotsClient.SnapshotConflict",
                "description": "Result delivered when a conflict was detected during open(SnapshotMetadata) or resolveConflict(String, Snapshot).",
                "methods": [
                    {
                        "name": "getConflictId()",
                        "return_type": "String",
                        "description": "Returns the ID of the conflict to resolve, if any."
                    },
                    {
                        "name": "getConflictingSnapshot()",
                        "return_type": "Snapshot",
                        "description": "Returns the modified version of the Snapshot in the case of a conflict."
                    },
                    {
                        "name": "getResolutionSnapshotContents()",
                        "return_type": "SnapshotContents",
                        "description": "Returns the SnapshotContents object used to update the data in case of a conflict."
                    },
                    {
                        "name": "getSnapshot()",
                        "return_type": "Snapshot",
                        "description": "Returns the server's version of the Snapshot that was opened."
                    }
                ]
            },
            {
                "name": "SnapshotsClient.SnapshotContentUnavailableApiException",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/SnapshotsClient.SnapshotContentUnavailableApiException",
                "description": "Indicates that the snapshot contents are unavailable at the moment, but the SnapshotMetadata is available through getSnapshotMetadata().",
                "methods": [
                    {
                        "name": "getSnapshotMetadata()",
                        "return_type": "SnapshotMetadata",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Games.GamesOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/Games.GamesOptions.Builder",
                "description": "Helper class to build Games.GamesOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Games.GamesOptions",
                        "description": ""
                    },
                    {
                        "name": "setSdkVariant(int variant)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setShowConnectingPopup(boolean showConnectingPopup)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": "Sets whether a \"connecting\" popup should be displayed automatically at the start of the sign-in flow."
                    },
                    {
                        "name": "setShowConnectingPopup(boolean showConnectingPopup, int gravity)",
                        "return_type": "Games.GamesOptions.Builder",
                        "description": "Sets whether a \"connecting\" popup should be displayed automatically at the start of the sign-in flow."
                    }
                ]
            }
        ]
    },
    {
        "name": "panorama",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/panorama/package-summary",
        "classes": [
            {
                "name": "Panorama",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/panorama/Panorama",
                "description": "The main entry point for panorama integration.",
                "methods": []
            },
            {
                "name": "PanoramaApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/panorama/PanoramaApi",
                "description": "The main entry point for interacting with Panorama viewer.",
                "methods": [
                    {
                        "name": "loadPanoramaInfo(GoogleApiClient client, Uri uri)",
                        "return_type": "abstractPendingResult<PanoramaApi.PanoramaResult>",
                        "description": "Loads information about a panorama."
                    },
                    {
                        "name": "loadPanoramaInfoAndGrantAccess(GoogleApiClient client, Uri uri)",
                        "return_type": "abstractPendingResult<PanoramaApi.PanoramaResult>",
                        "description": "Loads information about a panorama from a content provider."
                    }
                ]
            },
            {
                "name": "PanoramaApi.PanoramaResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/panorama/PanoramaApi.PanoramaResult",
                "description": "Result interface for loading panorama info.",
                "methods": [
                    {
                        "name": "getViewerIntent()",
                        "return_type": "abstractIntent",
                        "description": ""
                    }
                ]
            },
            {
                "name": "PanoramaApi.PanoramaResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/panorama/PanoramaApi.PanoramaResult",
                "description": "Result interface for loading panorama info.",
                "methods": [
                    {
                        "name": "getViewerIntent()",
                        "return_type": "abstractIntent",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "actions",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/actions/package-summary",
        "classes": [
            {
                "name": "ItemListIntents",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/actions/ItemListIntents",
                "description": "Constants for intents to create and modify item lists from a Search Action.",
                "methods": []
            },
            {
                "name": "NoteIntents",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/actions/NoteIntents",
                "description": "Constants for intents to create and modify notes from a Search Action.",
                "methods": []
            },
            {
                "name": "ReserveIntents",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/actions/ReserveIntents",
                "description": "Constants for intents corresponding to Reserve Action.",
                "methods": []
            },
            {
                "name": "SearchIntents",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/actions/SearchIntents",
                "description": "Constants for intents to perform in-app search from a Search Action.",
                "methods": []
            }
        ]
    },
    {
        "name": "fido2",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/fido/fido2/package-summary",
        "classes": [
            {
                "name": "Fido2ApiClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/Fido2ApiClient",
                "description": "The entry point for interacting with FIDO2 APIs.",
                "methods": [
                    {
                        "name": "getRegisterIntent(PublicKeyCredentialCreationOptions requestOptions)",
                        "return_type": "Task<Fido2PendingIntent>",
                        "description": "This method is deprecated. use getRegisterPendingIntent(PublicKeyCredentialCreationOptions"
                    },
                    {
                        "name": "getRegisterPendingIntent(PublicKeyCredentialCreationOptions requestOptions)",
                        "return_type": "Task<PendingIntent>",
                        "description": "Creates a Task with PendingIntent, when started, will issue a FIDO2 registration request, which is done once per FIDO2 device per account for associating the new FIDO2 device with that account."
                    },
                    {
                        "name": "getSignIntent(PublicKeyCredentialRequestOptions requestOptions)",
                        "return_type": "Task<Fido2PendingIntent>",
                        "description": "This method is deprecated. use getSignPendingIntent(PublicKeyCredentialRequestOptions"
                    },
                    {
                        "name": "getSignPendingIntent(PublicKeyCredentialRequestOptions requestOptions)",
                        "return_type": "Task<PendingIntent>",
                        "description": "Creates a Task with PendingIntent, when started, will issue a FIDO2 signature request for a relying party to authenticate a user."
                    },
                    {
                        "name": "isUserVerifyingPlatformAuthenticatorAvailable()",
                        "return_type": "Task<Boolean>",
                        "description": "Creates a Task with Boolean, which check if a user verifying platform authenticator is available on the device."
                    }
                ]
            },
            {
                "name": "Fido2PrivilegedApiClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/fido/fido2/Fido2PrivilegedApiClient",
                "description": "The entry point for interacting with the privileged FIDO2 APIs.",
                "methods": [
                    {
                        "name": "getRegisterIntent(BrowserPublicKeyCredentialCreationOptions requestOptions)",
                        "return_type": "Task<Fido2PendingIntent>",
                        "description": "This method is deprecated. use getRegisterPendingIntent(BrowserPublicKeyCredentialCreationOptions"
                    },
                    {
                        "name": "getRegisterPendingIntent(BrowserPublicKeyCredentialCreationOptions requestOptions)",
                        "return_type": "Task<PendingIntent>",
                        "description": "Creates a Task with PendingIntent, when started, will issue a FIDO2 registration request for privileged apps."
                    },
                    {
                        "name": "getSignIntent(BrowserPublicKeyCredentialRequestOptions requestOptions)",
                        "return_type": "Task<Fido2PendingIntent>",
                        "description": "This method is deprecated. use getSignPendingIntent(BrowserPublicKeyCredentialRequestOptions"
                    },
                    {
                        "name": "getSignPendingIntent(BrowserPublicKeyCredentialRequestOptions requestOptions)",
                        "return_type": "Task<PendingIntent>",
                        "description": "Creates a Task with PendingIntent, when started, will issue a FIDO2 signature request for privileged apps."
                    },
                    {
                        "name": "isUserVerifyingPlatformAuthenticatorAvailable()",
                        "return_type": "Task<Boolean>",
                        "description": "Creates a Task with Boolean, which check if a user verifying platform authenticator is available on the device."
                    }
                ]
            },
            {
                "name": "Fido2PendingIntent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/fido/fido2/Fido2PendingIntent",
                "description": "This interface is deprecated. Use Fido2ApiClient.getRegisterPendingIntent(PublicKeyCredentialCreationOptions) or Fido2ApiClient.getSignPendingIntent(PublicKeyCredentialRequestOptions) to avoid a dependence on this.",
                "methods": [
                    {
                        "name": "hasPendingIntent()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if an Activity has a PendingIntent."
                    },
                    {
                        "name": "launchPendingIntent(Activity activity, int requestCode)",
                        "return_type": "abstract void",
                        "description": "Launches the PendingIntent."
                    }
                ]
            }
        ]
    },
    {
        "name": "search",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/search/package-summary",
        "classes": [
            {
                "name": "GoogleNowAuthState",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/search/GoogleNowAuthState",
                "description": "Output of SearchAuthApi.getGoogleNowAuth(com.google.android.gms.common.api.GoogleApiClient, String).",
                "methods": [
                    {
                        "name": "getAccessToken()",
                        "return_type": "String",
                        "description": "Returns the OAuth access token or null if access token is unavailable."
                    },
                    {
                        "name": "getAuthCode()",
                        "return_type": "String",
                        "description": "Returns the OAuth authorization code or null if authorization code is unavailable."
                    },
                    {
                        "name": "getNextAllowedTimeMillis()",
                        "return_type": "long",
                        "description": "If the request was rejected by the throttler then the next allowed request wall time (milliseconds since epoch"
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SearchAuth",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/search/SearchAuth",
                "description": "The main entry point to the SearchAuth APIs.",
                "methods": []
            },
            {
                "name": "SearchAuth.StatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/search/SearchAuth.StatusCodes",
                "description": "Status codes for SearchAuth API containing a combination of common status codes and custom status codes.",
                "methods": []
            },
            {
                "name": "SearchAuthApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/search/SearchAuthApi",
                "description": "API for Google Search auth.",
                "methods": [
                    {
                        "name": "clearToken(GoogleApiClient client, String accessToken)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Clears an access token from the cache."
                    },
                    {
                        "name": "getGoogleNowAuth(GoogleApiClient client, String webAppClientId)",
                        "return_type": "abstractPendingResult<SearchAuthApi.GoogleNowAuthResult>",
                        "description": "Obtains authorization for the caller to use the Now API to publish to the Google Now user, if any, on this device."
                    }
                ]
            },
            {
                "name": "SearchAuthApi.GoogleNowAuthResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/search/SearchAuthApi.GoogleNowAuthResult",
                "description": "Result of SearchAuthApi.getGoogleNowAuth(GoogleApiClient, String).",
                "methods": [
                    {
                        "name": "getGoogleNowAuthState()",
                        "return_type": "abstractGoogleNowAuthState",
                        "description": "Returns the auth state if Result.getStatus("
                    }
                ]
            },
            {
                "name": "SearchAuth.StatusCodes",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/search/SearchAuth.StatusCodes",
                "description": "Status codes for SearchAuth API containing a combination of common status codes and custom status codes.",
                "methods": []
            },
            {
                "name": "SearchAuthApi.GoogleNowAuthResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/search/SearchAuthApi.GoogleNowAuthResult",
                "description": "Result of SearchAuthApi.getGoogleNowAuth(GoogleApiClient, String).",
                "methods": [
                    {
                        "name": "getGoogleNowAuthState()",
                        "return_type": "abstractGoogleNowAuthState",
                        "description": "Returns the auth state if Result.getStatus("
                    }
                ]
            }
        ]
    },
    {
        "name": "firebase",
        "path": "https://developers.google.com/android/reference/com/google/firebase/package-summary",
        "classes": [
            {
                "name": "FirebaseApp",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/FirebaseApp",
                "description": "The entry point of Firebase SDKs.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getApplicationContext()",
                        "return_type": "Context",
                        "description": "Returns the application Context."
                    },
                    {
                        "name": "getApps(Context context)",
                        "return_type": "staticList<FirebaseApp>",
                        "description": "Returns a mutable list of all FirebaseApps."
                    },
                    {
                        "name": "getInstance(String name)",
                        "return_type": "staticFirebaseApp",
                        "description": "Returns the instance identified by the unique name, or throws if it does not exist."
                    },
                    {
                        "name": "getInstance()",
                        "return_type": "staticFirebaseApp",
                        "description": "Returns the default (first initialized"
                    },
                    {
                        "name": "getName()",
                        "return_type": "String",
                        "description": "Returns the unique name of this app."
                    },
                    {
                        "name": "getOptions()",
                        "return_type": "FirebaseOptions",
                        "description": "Returns the specified FirebaseOptions."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "initializeApp(Context context, FirebaseOptions options)",
                        "return_type": "staticFirebaseApp",
                        "description": "Initializes the default FirebaseApp instance."
                    },
                    {
                        "name": "initializeApp(Context context, FirebaseOptions options, String name)",
                        "return_type": "staticFirebaseApp",
                        "description": "A factory method to initialize a FirebaseApp."
                    },
                    {
                        "name": "initializeApp(Context context)",
                        "return_type": "staticFirebaseApp",
                        "description": "Initializes the default FirebaseApp instance using string resource values - populated from google-services.json."
                    },
                    {
                        "name": "setAutomaticResourceManagementEnabled(boolean enabled)",
                        "return_type": "void",
                        "description": "If set to true it indicates that Firebase should close database connections automatically when the app is in the background."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FirebaseOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/FirebaseOptions",
                "description": "Configurable Firebase options.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "fromResource(Context context)",
                        "return_type": "staticFirebaseOptions",
                        "description": "Creates a new FirebaseOptions instance that is populated from string resouces."
                    },
                    {
                        "name": "getApiKey()",
                        "return_type": "String",
                        "description": "API key used for authenticating requests from your app, e.g."
                    },
                    {
                        "name": "getApplicationId()",
                        "return_type": "String",
                        "description": "The Google App ID that is used to uniquely identify an instance of an app."
                    },
                    {
                        "name": "getDatabaseUrl()",
                        "return_type": "String",
                        "description": "The database root URL, e.g."
                    },
                    {
                        "name": "getGcmSenderId()",
                        "return_type": "String",
                        "description": "The Project Number from the Google Developer's console, for example 012345678901, used to configure Google Cloud Messaging."
                    },
                    {
                        "name": "getProjectId()",
                        "return_type": "String",
                        "description": "The Google Cloud project ID, e.g."
                    },
                    {
                        "name": "getStorageBucket()",
                        "return_type": "String",
                        "description": "The Google Cloud Storage bucket name, e.g."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FirebaseOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/FirebaseOptions.Builder",
                "description": "Builder for constructing FirebaseOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "FirebaseOptions",
                        "description": ""
                    },
                    {
                        "name": "setApiKey(String apiKey)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setApplicationId(String applicationId)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setDatabaseUrl(String databaseUrl)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setGcmSenderId(String gcmSenderId)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setProjectId(String projectId)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setStorageBucket(String storageBucket)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Timestamp",
                "type_obj": "classes",
                "link": "/android/reference/com/google/firebase/Timestamp",
                "description": "A Timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in UTC Epoch time.",
                "methods": [
                    {
                        "name": "compareTo(Timestamp other)",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "describeContents()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getNanoseconds()",
                        "return_type": "int",
                        "description": "Returns the sub-second part of the timestamp, in nanoseconds."
                    },
                    {
                        "name": "getSeconds()",
                        "return_type": "long",
                        "description": "Returns the seconds part of the timestamp."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "now()",
                        "return_type": "staticTimestamp",
                        "description": "Creates a new timestamp with the current date, with millisecond precision."
                    },
                    {
                        "name": "toDate()",
                        "return_type": "Date",
                        "description": "Returns a new Date corresponding to this timestamp."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FirebaseOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/firebase/FirebaseOptions.Builder",
                "description": "Builder for constructing FirebaseOptions.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "FirebaseOptions",
                        "description": ""
                    },
                    {
                        "name": "setApiKey(String apiKey)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setApplicationId(String applicationId)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setDatabaseUrl(String databaseUrl)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setGcmSenderId(String gcmSenderId)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setProjectId(String projectId)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    },
                    {
                        "name": "setStorageBucket(String storageBucket)",
                        "return_type": "FirebaseOptions.Builder",
                        "description": ""
                    }
                ]
            }
        ]
    },
    {
        "name": "snapshot",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/games/snapshot/package-summary",
        "classes": [
            {
                "name": "SnapshotEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotEntity",
                "description": "Data object representing the data for a saved game.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "freeze()",
                        "return_type": "Snapshot",
                        "description": ""
                    },
                    {
                        "name": "getMetadata()",
                        "return_type": "SnapshotMetadata",
                        "description": "Retrieves the metadata for this snapshot."
                    },
                    {
                        "name": "getSnapshotContents()",
                        "return_type": "SnapshotContents",
                        "description": "Retrieve the SnapshotContents associated with this snapshot."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SnapshotMetadataBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotMetadataBuffer",
                "description": "Data structure providing access to a list of snapshots.",
                "methods": [
                    {
                        "name": "get(int position)",
                        "return_type": "SnapshotMetadata",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SnapshotMetadataChange.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotMetadataChange.Builder",
                "description": "Builder for SnapshotMetadataChange objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SnapshotMetadataChange",
                        "description": ""
                    },
                    {
                        "name": "fromMetadata(SnapshotMetadata metadata)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setCoverImage(Bitmap coverImage)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setPlayedTimeMillis(long playedTimeMillis)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setProgressValue(long progressValue)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SnapshotMetadataEntity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotMetadataEntity",
                "description": "Data object representing the metadata for a saved game.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "freeze()",
                        "return_type": "SnapshotMetadata",
                        "description": ""
                    },
                    {
                        "name": "getCoverImageAspectRatio()",
                        "return_type": "float",
                        "description": "Retrieves the aspect ratio of the cover image for this snapshot, if any."
                    },
                    {
                        "name": "getCoverImageUri()",
                        "return_type": "Uri",
                        "description": "Retrieves an image URI that can be used to load the snapshot's cover image."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "String",
                        "description": "Retrieves the description of this snapshot."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "void",
                        "description": "Loads the snapshot description into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDeviceName()",
                        "return_type": "String",
                        "description": "Retrieves the name of the device that wrote this snapshot, if known."
                    },
                    {
                        "name": "getGame()",
                        "return_type": "Game",
                        "description": "Retrieves the game associated with this snapshot."
                    },
                    {
                        "name": "getLastModifiedTimestamp()",
                        "return_type": "long",
                        "description": "Retrieves the last time this snapshot was modified, in millis since epoch."
                    },
                    {
                        "name": "getOwner()",
                        "return_type": "Player",
                        "description": "Retrieves the player that owns this snapshot."
                    },
                    {
                        "name": "getPlayedTime()",
                        "return_type": "long",
                        "description": "Retrieves the played time of this snapshot in milliseconds."
                    },
                    {
                        "name": "getProgressValue()",
                        "return_type": "long",
                        "description": "Retrieves the progress value for this snapshot."
                    },
                    {
                        "name": "getSnapshotId()",
                        "return_type": "String",
                        "description": "Retrieves the ID of this snapshot."
                    },
                    {
                        "name": "getUniqueName()",
                        "return_type": "String",
                        "description": "Retrieves the unique identifier of this snapshot."
                    },
                    {
                        "name": "hasChangePending()",
                        "return_type": "boolean",
                        "description": "Indicates whether or not this snapshot has any changes pending that have not been uploaded to the server."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isDataValid()",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshot",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshot",
                "description": "Data interface for a representation of a saved game.",
                "methods": [
                    {
                        "name": "getMetadata()",
                        "return_type": "abstractSnapshotMetadata",
                        "description": "Retrieves the metadata for this snapshot."
                    },
                    {
                        "name": "getSnapshotContents()",
                        "return_type": "abstractSnapshotContents",
                        "description": "Retrieve the SnapshotContents associated with this snapshot."
                    }
                ]
            },
            {
                "name": "SnapshotContents",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotContents",
                "description": "Data interface for a representation of Snapshot contents.",
                "methods": [
                    {
                        "name": "getParcelFileDescriptor()",
                        "return_type": "abstractParcelFileDescriptor",
                        "description": "Retrieve the ParcelFileDescriptor associated with the underlying file for this snapshot contents."
                    },
                    {
                        "name": "isClosed()",
                        "return_type": "abstract boolean",
                        "description": ""
                    },
                    {
                        "name": "modifyBytes(int dstOffset, byte[] content, int srcOffset, int count)",
                        "return_type": "abstract boolean",
                        "description": "Write the specified data into the snapshot."
                    },
                    {
                        "name": "readFully()",
                        "return_type": "abstract byte[]",
                        "description": "Read the contents of a snapshot."
                    },
                    {
                        "name": "writeBytes(byte[] content)",
                        "return_type": "abstract boolean",
                        "description": "Write the specified data into the snapshot."
                    }
                ]
            },
            {
                "name": "SnapshotMetadata",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotMetadata",
                "description": "Data interface for the metadata of a saved game.",
                "methods": [
                    {
                        "name": "getCoverImageAspectRatio()",
                        "return_type": "abstract float",
                        "description": "Retrieves the aspect ratio of the cover image for this snapshot, if any."
                    },
                    {
                        "name": "getCoverImageUri()",
                        "return_type": "abstractUri",
                        "description": "Retrieves an image URI that can be used to load the snapshot's cover image."
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": "Retrieves the description of this snapshot."
                    },
                    {
                        "name": "getDescription(CharArrayBuffer dataOut)",
                        "return_type": "abstract void",
                        "description": "Loads the snapshot description into the given CharArrayBuffer."
                    },
                    {
                        "name": "getDeviceName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the name of the device that wrote this snapshot, if known."
                    },
                    {
                        "name": "getGame()",
                        "return_type": "abstractGame",
                        "description": "Retrieves the game associated with this snapshot."
                    },
                    {
                        "name": "getLastModifiedTimestamp()",
                        "return_type": "abstract long",
                        "description": "Retrieves the last time this snapshot was modified, in millis since epoch."
                    },
                    {
                        "name": "getOwner()",
                        "return_type": "abstractPlayer",
                        "description": "Retrieves the player that owns this snapshot."
                    },
                    {
                        "name": "getPlayedTime()",
                        "return_type": "abstract long",
                        "description": "Retrieves the played time of this snapshot in milliseconds."
                    },
                    {
                        "name": "getProgressValue()",
                        "return_type": "abstract long",
                        "description": "Retrieves the progress value for this snapshot."
                    },
                    {
                        "name": "getSnapshotId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of this snapshot."
                    },
                    {
                        "name": "getUniqueName()",
                        "return_type": "abstractString",
                        "description": "Retrieves the unique identifier of this snapshot."
                    },
                    {
                        "name": "hasChangePending()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether or not this snapshot has any changes pending that have not been uploaded to the server."
                    }
                ]
            },
            {
                "name": "SnapshotMetadataChange",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotMetadataChange",
                "description": "A collection of changes to apply to the metadata of a snapshot.",
                "methods": [
                    {
                        "name": "getCoverImage()",
                        "return_type": "abstractBitmap",
                        "description": ""
                    },
                    {
                        "name": "getDescription()",
                        "return_type": "abstractString",
                        "description": ""
                    },
                    {
                        "name": "getPlayedTimeMillis()",
                        "return_type": "abstractLong",
                        "description": ""
                    },
                    {
                        "name": "getProgressValue()",
                        "return_type": "abstractLong",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots",
                "description": "This interface is deprecated. Use SnapshotsClient instead",
                "methods": [
                    {
                        "name": "commitAndClose(GoogleApiClient apiClient, Snapshot snapshot, SnapshotMetadataChange metadataChange)",
                        "return_type": "abstractPendingResult<Snapshots.CommitSnapshotResult>",
                        "description": "Commit any modifications made to the snapshot."
                    },
                    {
                        "name": "delete(GoogleApiClient apiClient, SnapshotMetadata metadata)",
                        "return_type": "abstractPendingResult<Snapshots.DeleteSnapshotResult>",
                        "description": "Delete the specified snapshot."
                    },
                    {
                        "name": "discardAndClose(GoogleApiClient apiClient, Snapshot snapshot)",
                        "return_type": "abstract void",
                        "description": "Discard the contents of the snapshot and close the contents."
                    },
                    {
                        "name": "getMaxCoverImageSize(GoogleApiClient apiClient)",
                        "return_type": "abstract int",
                        "description": "Gets the maximum data size per snapshot cover image in bytes."
                    },
                    {
                        "name": "getMaxDataSize(GoogleApiClient apiClient)",
                        "return_type": "abstract int",
                        "description": "Gets the maximum data size per snapshot in bytes."
                    },
                    {
                        "name": "getSelectSnapshotIntent(GoogleApiClient apiClient, String title, boolean allowAddButton, boolean allowDelete, int maxSnapshots)",
                        "return_type": "abstractIntent",
                        "description": "Returns an intent that will let the user select a snapshot."
                    },
                    {
                        "name": "getSnapshotFromBundle(Bundle extras)",
                        "return_type": "abstractSnapshotMetadata",
                        "description": "This method takes a Bundle object and extracts the Snapshot provided."
                    },
                    {
                        "name": "load(GoogleApiClient apiClient, boolean forceReload)",
                        "return_type": "abstractPendingResult<Snapshots.LoadSnapshotsResult>",
                        "description": "Asynchronously load the snapshot data for the currently signed-in player."
                    },
                    {
                        "name": "open(GoogleApiClient apiClient, SnapshotMetadata metadata)",
                        "return_type": "abstractPendingResult<Snapshots.OpenSnapshotResult>",
                        "description": "Open a snapshot with the given metadata (usually returned from load(GoogleApiClient, boolean"
                    },
                    {
                        "name": "open(GoogleApiClient apiClient, String fileName, boolean createIfNotFound)",
                        "return_type": "abstractPendingResult<Snapshots.OpenSnapshotResult>",
                        "description": "Open a snapshot with the given name."
                    },
                    {
                        "name": "open(GoogleApiClient apiClient, String fileName, boolean createIfNotFound, int conflictPolicy)",
                        "return_type": "abstractPendingResult<Snapshots.OpenSnapshotResult>",
                        "description": "Open a snapshot with the given name."
                    },
                    {
                        "name": "open(GoogleApiClient apiClient, SnapshotMetadata metadata, int conflictPolicy)",
                        "return_type": "abstractPendingResult<Snapshots.OpenSnapshotResult>",
                        "description": "Open a snapshot with the given metadata (usually returned from load(GoogleApiClient, boolean"
                    },
                    {
                        "name": "resolveConflict(GoogleApiClient apiClient, String conflictId, String snapshotId, SnapshotMetadataChange metadataChange, SnapshotContents snapshotContents)",
                        "return_type": "abstractPendingResult<Snapshots.OpenSnapshotResult>",
                        "description": "Resolve a conflict using the provided data."
                    },
                    {
                        "name": "resolveConflict(GoogleApiClient apiClient, String conflictId, Snapshot snapshot)",
                        "return_type": "abstractPendingResult<Snapshots.OpenSnapshotResult>",
                        "description": "Resolve a conflict using the data from the provided snapshot."
                    }
                ]
            },
            {
                "name": "Snapshots.CommitSnapshotResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.CommitSnapshotResult",
                "description": "This interface is deprecated. SnapshotMetadata is returned directly in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getSnapshotMetadata()",
                        "return_type": "abstractSnapshotMetadata",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.DeleteSnapshotResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.DeleteSnapshotResult",
                "description": "This interface is deprecated. snapshotId is returned directly in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getSnapshotId()",
                        "return_type": "abstractString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.LoadSnapshotsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.LoadSnapshotsResult",
                "description": "This interface is deprecated. SnapshotMetadataBuffer is returned directly in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getSnapshots()",
                        "return_type": "abstractSnapshotMetadataBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.OpenSnapshotResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.OpenSnapshotResult",
                "description": "This interface is deprecated. SnapshotsClient.DataOrConflict is returned instead in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getConflictId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of the conflict to resolve, if any."
                    },
                    {
                        "name": "getConflictingSnapshot()",
                        "return_type": "abstractSnapshot",
                        "description": "Retrieves the modified version of this snapshot in the case of a conflict."
                    },
                    {
                        "name": "getResolutionSnapshotContents()",
                        "return_type": "abstractSnapshotContents",
                        "description": "Retrieve the SnapshotContents object used to update the data in case of a conflict."
                    },
                    {
                        "name": "getSnapshot()",
                        "return_type": "abstractSnapshot",
                        "description": "Retrieves the snapshot that was opened."
                    }
                ]
            },
            {
                "name": "SnapshotMetadataChange.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/games/snapshot/SnapshotMetadataChange.Builder",
                "description": "Builder for SnapshotMetadataChange objects.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "SnapshotMetadataChange",
                        "description": ""
                    },
                    {
                        "name": "fromMetadata(SnapshotMetadata metadata)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setCoverImage(Bitmap coverImage)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setDescription(String description)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setPlayedTimeMillis(long playedTimeMillis)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    },
                    {
                        "name": "setProgressValue(long progressValue)",
                        "return_type": "SnapshotMetadataChange.Builder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.CommitSnapshotResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.CommitSnapshotResult",
                "description": "This interface is deprecated. SnapshotMetadata is returned directly in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getSnapshotMetadata()",
                        "return_type": "abstractSnapshotMetadata",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.DeleteSnapshotResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.DeleteSnapshotResult",
                "description": "This interface is deprecated. snapshotId is returned directly in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getSnapshotId()",
                        "return_type": "abstractString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.LoadSnapshotsResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.LoadSnapshotsResult",
                "description": "This interface is deprecated. SnapshotMetadataBuffer is returned directly in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getSnapshots()",
                        "return_type": "abstractSnapshotMetadataBuffer",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Snapshots.OpenSnapshotResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/games/snapshot/Snapshots.OpenSnapshotResult",
                "description": "This interface is deprecated. SnapshotsClient.DataOrConflict is returned instead in the SnapshotsClient.",
                "methods": [
                    {
                        "name": "getConflictId()",
                        "return_type": "abstractString",
                        "description": "Retrieves the ID of the conflict to resolve, if any."
                    },
                    {
                        "name": "getConflictingSnapshot()",
                        "return_type": "abstractSnapshot",
                        "description": "Retrieves the modified version of this snapshot in the case of a conflict."
                    },
                    {
                        "name": "getResolutionSnapshotContents()",
                        "return_type": "abstractSnapshotContents",
                        "description": "Retrieve the SnapshotContents object used to update the data in case of a conflict."
                    },
                    {
                        "name": "getSnapshot()",
                        "return_type": "abstractSnapshot",
                        "description": "Retrieves the snapshot that was opened."
                    }
                ]
            }
        ]
    },
    {
        "name": "location",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/location/package-summary",
        "classes": [
            {
                "name": "ActivityRecognition",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityRecognition",
                "description": "The main entry point for activity recognition integration.",
                "methods": [
                    {
                        "name": "getClient(Activity activity)",
                        "return_type": "staticActivityRecognitionClient",
                        "description": "Create a new instance of ActivityRecognitionClient for use in an Activity."
                    },
                    {
                        "name": "getClient(Context context)",
                        "return_type": "staticActivityRecognitionClient",
                        "description": "Create a new instance of ActivityRecognitionClient for use in a non-activity Context."
                    }
                ]
            },
            {
                "name": "ActivityRecognitionClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityRecognitionClient",
                "description": "The main entry point for interacting with activity recognition.",
                "methods": [
                    {
                        "name": "removeActivityTransitionUpdates(PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes activity transition updates associated with the given pendingIntent."
                    },
                    {
                        "name": "removeActivityUpdates(PendingIntent callbackIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes all activity updates for the specified PendingIntent."
                    },
                    {
                        "name": "removeSleepSegmentUpdates(PendingIntent callbackIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes all sleep segment detection updates for the specified PendingIntent."
                    },
                    {
                        "name": "requestActivityTransitionUpdates(ActivityTransitionRequest activityTransitionRequest, PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Activity Recognition Transition API provides an ability for apps to subscribe to activity transitional conditions (enter, exit"
                    },
                    {
                        "name": "requestActivityUpdates(long detectionIntervalMillis, PendingIntent callbackIntent)",
                        "return_type": "Task<Void>",
                        "description": "Register for activity recognition updates."
                    },
                    {
                        "name": "requestSleepSegmentUpdates(PendingIntent callbackIntent, SleepSegmentRequest sleepSegmentRequest)",
                        "return_type": "Task<Void>",
                        "description": "Registers for detected user sleep time (SleepSegmentEvent"
                    }
                ]
            },
            {
                "name": "ActivityRecognitionResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityRecognitionResult",
                "description": "Result of an activity recognition.",
                "methods": [
                    {
                        "name": "extractResult(Intent intent)",
                        "return_type": "staticActivityRecognitionResult",
                        "description": "Extracts the ActivityRecognitionResult from an Intent."
                    },
                    {
                        "name": "getActivityConfidence(int activityType)",
                        "return_type": "int",
                        "description": "Returns the confidence of the given activity type."
                    },
                    {
                        "name": "getElapsedRealtimeMillis()",
                        "return_type": "long",
                        "description": "Returns the elapsed real time of this detection in milliseconds since boot, including time spent in sleep as obtained by SystemClock.elapsedRealtime("
                    },
                    {
                        "name": "getMostProbableActivity()",
                        "return_type": "DetectedActivity",
                        "description": "Returns the most probable activity of the user."
                    },
                    {
                        "name": "getProbableActivities()",
                        "return_type": "List<DetectedActivity>",
                        "description": "Returns the list of activities that were detected with the confidence value associated with each activity."
                    },
                    {
                        "name": "getTime()",
                        "return_type": "long",
                        "description": "Returns the UTC time of this detection, in milliseconds since January 1, 1970."
                    },
                    {
                        "name": "hasResult(Intent intent)",
                        "return_type": "static boolean",
                        "description": "Returns true if an Intent contains an ActivityRecognitionResult."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ActivityTransition",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityTransition",
                "description": "Represents an activity and the transition of it.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActivityType()",
                        "return_type": "int",
                        "description": "Gets the type of the activity to be detected."
                    },
                    {
                        "name": "getTransitionType()",
                        "return_type": "int",
                        "description": "Gets the interested transition type."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ActivityTransition.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityTransition.Builder",
                "description": "The builder to help create an ActivityTransition object.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ActivityTransition",
                        "description": "Builds a ActivityTransition object."
                    },
                    {
                        "name": "setActivityTransition(int transition)",
                        "return_type": "ActivityTransition.Builder",
                        "description": "Adds an interested transition type."
                    },
                    {
                        "name": "setActivityType(int activityType)",
                        "return_type": "ActivityTransition.Builder",
                        "description": "Sets the type of the activity to be detected."
                    }
                ]
            },
            {
                "name": "ActivityTransitionEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityTransitionEvent",
                "description": "Represents an activity transition event, for example start to walk, stop running etc.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getActivityType()",
                        "return_type": "int",
                        "description": "Gets the type of the activity of this transition."
                    },
                    {
                        "name": "getElapsedRealTimeNanos()",
                        "return_type": "long",
                        "description": "Gets the elapsed realtime when this transition happened."
                    },
                    {
                        "name": "getTransitionType()",
                        "return_type": "int",
                        "description": "Gets the type of the transition."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ActivityTransitionRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityTransitionRequest",
                "description": "The request object for apps to get notified when user's activity changes.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "serializeToIntentExtra(Intent intent)",
                        "return_type": "void",
                        "description": "Serializes this request to the given intent."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ActivityTransitionResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/ActivityTransitionResult",
                "description": "Represents the result of activity transitions.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extractResult(Intent intent)",
                        "return_type": "staticActivityTransitionResult",
                        "description": "Extracts the ActivityTransitionResult from the given Intent."
                    },
                    {
                        "name": "getTransitionEvents()",
                        "return_type": "List<ActivityTransitionEvent>",
                        "description": "Gets all the activity transition events in this result."
                    },
                    {
                        "name": "hasResult(Intent intent)",
                        "return_type": "static boolean",
                        "description": "Checks if the intent contains an ActivityTransitionResult."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DetectedActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/DetectedActivity",
                "description": "The detected activity of the device with an an associated confidence.",
                "methods": [
                    {
                        "name": "getConfidence()",
                        "return_type": "int",
                        "description": "Returns a value from 0 to 100 indicating the likelihood that the user is performing this activity."
                    },
                    {
                        "name": "getType()",
                        "return_type": "int",
                        "description": "Returns the type of activity that was detected."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "FusedLocationProviderClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/FusedLocationProviderClient",
                "description": "The main entry point for interacting with the fused location provider.",
                "methods": [
                    {
                        "name": "flushLocations()",
                        "return_type": "Task<Void>",
                        "description": "Flushes any locations currently being batched and sends them to all registered LocationListeners, LocationCallbacks, and PendingIntents."
                    },
                    {
                        "name": "getCurrentLocation(int priority, CancellationToken token)",
                        "return_type": "Task<Location>",
                        "description": "Returns a single current location fix on the device."
                    },
                    {
                        "name": "getLastLocation()",
                        "return_type": "Task<Location>",
                        "description": "Returns the best most recent location currently available."
                    },
                    {
                        "name": "getLocationAvailability()",
                        "return_type": "Task<LocationAvailability>",
                        "description": "Returns the availability of location data."
                    },
                    {
                        "name": "removeLocationUpdates(PendingIntent callbackIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes all location updates for the given pending intent."
                    },
                    {
                        "name": "removeLocationUpdates(LocationCallback callback)",
                        "return_type": "Task<Void>",
                        "description": "Removes all location updates for the given location result listener."
                    },
                    {
                        "name": "requestLocationUpdates(LocationRequest request, LocationCallback callback, Looper looper)",
                        "return_type": "Task<Void>",
                        "description": "Requests location updates with a callback on the specified Looper thread."
                    },
                    {
                        "name": "requestLocationUpdates(LocationRequest request, PendingIntent callbackIntent)",
                        "return_type": "Task<Void>",
                        "description": "Requests location updates with a callback on the specified PendingIntent."
                    },
                    {
                        "name": "setMockLocation(Location mockLocation)",
                        "return_type": "Task<Void>",
                        "description": "Sets the mock location to be used for the location provider."
                    },
                    {
                        "name": "setMockMode(boolean isMockMode)",
                        "return_type": "Task<Void>",
                        "description": "Sets whether or not the location provider is in mock mode."
                    }
                ]
            },
            {
                "name": "Geofence.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/Geofence.Builder",
                "description": "A builder that builds Geofence.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Geofence",
                        "description": "Creates a geofence object."
                    },
                    {
                        "name": "setCircularRegion(double latitude, double longitude, float radius)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the region of this geofence."
                    },
                    {
                        "name": "setExpirationDuration(long durationMillis)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the expiration duration of geofence."
                    },
                    {
                        "name": "setLoiteringDelay(int loiteringDelayMs)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the delay between GEOFENCE_TRANSITION_ENTER and GEOFENCE_TRANSITION_DWELLING in milliseconds."
                    },
                    {
                        "name": "setNotificationResponsiveness(int notificationResponsivenessMs)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the best-effort notification responsiveness of the geofence."
                    },
                    {
                        "name": "setRequestId(String requestId)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the request ID of the geofence."
                    },
                    {
                        "name": "setTransitionTypes(int transitionTypes)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the transition types of interest."
                    }
                ]
            },
            {
                "name": "GeofenceStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/GeofenceStatusCodes",
                "description": "Geofence specific status codes, for use in Status.getStatusCode()",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly!"
                    }
                ]
            },
            {
                "name": "GeofencingClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/GeofencingClient",
                "description": "The main entry point for interacting with the geofencing APIs.",
                "methods": [
                    {
                        "name": "addGeofences(GeofencingRequest geofencingRequest, PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Sets alerts to be notified when the device enters or exits one of the specified geofences."
                    },
                    {
                        "name": "removeGeofences(List<String> geofenceRequestIds)",
                        "return_type": "Task<Void>",
                        "description": "Removes geofences by their request IDs."
                    },
                    {
                        "name": "removeGeofences(PendingIntent pendingIntent)",
                        "return_type": "Task<Void>",
                        "description": "Removes all geofences associated with the given pendingIntent."
                    }
                ]
            },
            {
                "name": "GeofencingEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/GeofencingEvent",
                "description": "Represents an event from the GeofencingApi API.",
                "methods": [
                    {
                        "name": "fromIntent(Intent intent)",
                        "return_type": "staticGeofencingEvent",
                        "description": "Creates a GeofencingEvent object from the given intent."
                    },
                    {
                        "name": "getErrorCode()",
                        "return_type": "int",
                        "description": "Returns the error code that explains the error that triggered the intent specified in fromIntent(Intent"
                    },
                    {
                        "name": "getGeofenceTransition()",
                        "return_type": "int",
                        "description": "Returns the transition type of the geofence transition alert."
                    },
                    {
                        "name": "getTriggeringGeofences()",
                        "return_type": "List<Geofence>",
                        "description": "Returns a list of geofences that triggered this geofence transition alert."
                    },
                    {
                        "name": "getTriggeringLocation()",
                        "return_type": "Location",
                        "description": "Gets the location that triggered the geofence transition."
                    },
                    {
                        "name": "hasError()",
                        "return_type": "boolean",
                        "description": "Whether an error triggered this intent."
                    }
                ]
            },
            {
                "name": "GeofencingRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/GeofencingRequest",
                "description": "Specifies the list of geofences to be monitored and how the geofence notifications should be reported.",
                "methods": [
                    {
                        "name": "getGeofences()",
                        "return_type": "List<Geofence>",
                        "description": "Gets the list of geofences to be monitored."
                    },
                    {
                        "name": "getInitialTrigger()",
                        "return_type": "int",
                        "description": "Gets the triggering behavior at the moment when the geofences are added."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GeofencingRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/GeofencingRequest.Builder",
                "description": "A builder that builds GeofencingRequest.Pending",
                "methods": [
                    {
                        "name": "addGeofence(Geofence geofence)",
                        "return_type": "GeofencingRequest.Builder",
                        "description": "Adds a geofence to be monitored by geofencing service."
                    },
                    {
                        "name": "addGeofences(List<Geofence> geofences)",
                        "return_type": "GeofencingRequest.Builder",
                        "description": "Adds all the geofences in the given list to be monitored by geofencing service."
                    },
                    {
                        "name": "build()",
                        "return_type": "GeofencingRequest",
                        "description": "Builds the GeofencingRequest object."
                    },
                    {
                        "name": "setInitialTrigger(int initialTrigger)",
                        "return_type": "GeofencingRequest.Builder",
                        "description": "Sets the geofence notification behavior at the moment when the geofences are added."
                    }
                ]
            },
            {
                "name": "LocationAvailability",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationAvailability",
                "description": "Status on the availability of location data.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extractLocationAvailability(Intent intent)",
                        "return_type": "staticLocationAvailability",
                        "description": "Extracts the LocationAvailability from an Intent."
                    },
                    {
                        "name": "hasLocationAvailability(Intent intent)",
                        "return_type": "static boolean",
                        "description": "Returns true if an Intent contains a LocationAvailability."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isLocationAvailable()",
                        "return_type": "boolean",
                        "description": "Returns true if the device location is known and reasonably up to date within the hints requested by the active LocationRequests."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LocationCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationCallback",
                "description": "Used for receiving notifications from the FusedLocationProviderApi when the device location has changed or can no longer be determined.",
                "methods": [
                    {
                        "name": "onLocationAvailability(LocationAvailability locationAvailability)",
                        "return_type": "void",
                        "description": "Called when there is a change in the availability of location data."
                    },
                    {
                        "name": "onLocationResult(LocationResult result)",
                        "return_type": "void",
                        "description": "Called when device location information is available."
                    }
                ]
            },
            {
                "name": "LocationRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationRequest",
                "description": "A data object that contains quality of service parameters for requests to the FusedLocationProviderApi.",
                "methods": [
                    {
                        "name": "create()",
                        "return_type": "staticLocationRequest",
                        "description": "Create a location request with default parameters."
                    },
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getExpirationTime()",
                        "return_type": "long",
                        "description": "Get the request expiration time, in milliseconds since boot."
                    },
                    {
                        "name": "getFastestInterval()",
                        "return_type": "long",
                        "description": "Get the fastest interval of this request, in milliseconds."
                    },
                    {
                        "name": "getInterval()",
                        "return_type": "long",
                        "description": "Get the desired interval of this request, in milliseconds."
                    },
                    {
                        "name": "getMaxWaitTime()",
                        "return_type": "long",
                        "description": "Gets the maximum wait time in milliseconds for location updates."
                    },
                    {
                        "name": "getNumUpdates()",
                        "return_type": "int",
                        "description": "Get the number of updates requested."
                    },
                    {
                        "name": "getPriority()",
                        "return_type": "int",
                        "description": "Get the quality of the request."
                    },
                    {
                        "name": "getSmallestDisplacement()",
                        "return_type": "float",
                        "description": "Get the minimum displacement between location updates in meters By default this is 0."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isFastestIntervalExplicitlySet()",
                        "return_type": "boolean",
                        "description": "Returns whether or not the fastest interval was explicitly specified for the location request."
                    },
                    {
                        "name": "isWaitForAccurateLocation()",
                        "return_type": "boolean",
                        "description": "Returns whether the location services will wait a few seconds initially for accurate locations, if accurate locations cannot be computed on the device for PRIORITY_HIGH_ACCURACY requests."
                    },
                    {
                        "name": "setExpirationDuration(long millis)",
                        "return_type": "LocationRequest",
                        "description": "Set the duration of this request, in milliseconds."
                    },
                    {
                        "name": "setExpirationTime(long millis)",
                        "return_type": "LocationRequest",
                        "description": "Set the request expiration time, in millisecond since boot."
                    },
                    {
                        "name": "setFastestInterval(long millis)",
                        "return_type": "LocationRequest",
                        "description": "Explicitly set the fastest interval for location updates, in milliseconds."
                    },
                    {
                        "name": "setInterval(long millis)",
                        "return_type": "LocationRequest",
                        "description": "Set the desired interval for active location updates, in milliseconds."
                    },
                    {
                        "name": "setMaxWaitTime(long millis)",
                        "return_type": "LocationRequest",
                        "description": "Sets the maximum wait time in milliseconds for location updates."
                    },
                    {
                        "name": "setNumUpdates(int numUpdates)",
                        "return_type": "LocationRequest",
                        "description": "Set the number of location updates."
                    },
                    {
                        "name": "setPriority(int priority)",
                        "return_type": "LocationRequest",
                        "description": "Set the priority of the request."
                    },
                    {
                        "name": "setSmallestDisplacement(float smallestDisplacementMeters)",
                        "return_type": "LocationRequest",
                        "description": "Set the minimum displacement between location updates in meters By default this is 0."
                    },
                    {
                        "name": "setWaitForAccurateLocation(boolean waitForAccurateLocation)",
                        "return_type": "LocationRequest",
                        "description": "Sets whether the client wants the locations services to wait a few seconds for accurate locations initially, when accurate locations could not be computed on the device immediately after PRIORITY_HIGH_ACCURACY request is made."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LocationResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationResult",
                "description": "A data class representing a geographic location result from the fused location provider.",
                "methods": [
                    {
                        "name": "create(List<Location> locations)",
                        "return_type": "staticLocationResult",
                        "description": "Creates a LocationResult for the given locations."
                    },
                    {
                        "name": "equals(Object other)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extractResult(Intent intent)",
                        "return_type": "staticLocationResult",
                        "description": "Extracts the LocationResult from an Intent."
                    },
                    {
                        "name": "getLastLocation()",
                        "return_type": "Location",
                        "description": "Returns the most recent location available in this result, or null if no locations are available."
                    },
                    {
                        "name": "getLocations()",
                        "return_type": "List<Location>",
                        "description": "Returns locations computed, ordered from oldest to newest."
                    },
                    {
                        "name": "hasResult(Intent intent)",
                        "return_type": "static boolean",
                        "description": "Returns true if an Intent contains a LocationResult."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LocationServices",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationServices",
                "description": "The main entry point for location services integration.",
                "methods": [
                    {
                        "name": "getFusedLocationProviderClient(Activity activity)",
                        "return_type": "staticFusedLocationProviderClient",
                        "description": "Create a new instance of FusedLocationProviderClient for use in an Activity."
                    },
                    {
                        "name": "getFusedLocationProviderClient(Context context)",
                        "return_type": "staticFusedLocationProviderClient",
                        "description": "Create a new instance of FusedLocationProviderClient for use in a non-activity Context."
                    },
                    {
                        "name": "getGeofencingClient(Activity activity)",
                        "return_type": "staticGeofencingClient",
                        "description": "Create a new instance of GeofencingClient for use in an Activity."
                    },
                    {
                        "name": "getGeofencingClient(Context context)",
                        "return_type": "staticGeofencingClient",
                        "description": "Create a new instance of GeofencingClient for use in a non-activity Context."
                    },
                    {
                        "name": "getSettingsClient(Context context)",
                        "return_type": "staticSettingsClient",
                        "description": "Create a new instance of SettingsClient for use in a non-activity Context."
                    },
                    {
                        "name": "getSettingsClient(Activity activity)",
                        "return_type": "staticSettingsClient",
                        "description": "Create a new instance of SettingsClient for use in an Activity."
                    }
                ]
            },
            {
                "name": "LocationSettingsRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsRequest",
                "description": "Specifies the types of location services the client is interested in using.",
                "methods": [
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LocationSettingsRequest.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsRequest.Builder",
                "description": "A builder that builds LocationSettingsRequest.",
                "methods": [
                    {
                        "name": "addAllLocationRequests(Collection<LocationRequest> requests)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Adds a collection of LocationRequests that the client is interested in."
                    },
                    {
                        "name": "addLocationRequest(LocationRequest request)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Adds one LocationRequest that the client is interested in."
                    },
                    {
                        "name": "build()",
                        "return_type": "LocationSettingsRequest",
                        "description": "Creates a LocationSettingsRequest that can be used with SettingsApi."
                    },
                    {
                        "name": "setAlwaysShow(boolean show)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Whether or not location is required by the calling app in order to continue."
                    },
                    {
                        "name": "setNeedBle(boolean needBle)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Sets whether the client wants BLE scan to be enabled."
                    }
                ]
            },
            {
                "name": "LocationSettingsResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsResponse",
                "description": "Successful response of checking settings via SettingsApi.checkLocationSettings(GoogleApiClient, LocationSettingsRequest).",
                "methods": [
                    {
                        "name": "getLocationSettingsStates()",
                        "return_type": "LocationSettingsStates",
                        "description": "Retrieves the location settings states."
                    }
                ]
            },
            {
                "name": "LocationSettingsResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsResult",
                "description": "Result of checking settings via SettingsApi.checkLocationSettings(GoogleApiClient, LocationSettingsRequest), indicates whether a dialog should be shown to ask the user's consent to change their settings.",
                "methods": [
                    {
                        "name": "getLocationSettingsStates()",
                        "return_type": "LocationSettingsStates",
                        "description": "Retrieves the location settings states."
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LocationSettingsStates",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsStates",
                "description": "Stores the current states of all location-related settings.",
                "methods": [
                    {
                        "name": "fromIntent(Intent intent)",
                        "return_type": "staticLocationSettingsStates",
                        "description": "Retrieves the location settings states from the intent extras."
                    },
                    {
                        "name": "isBlePresent()",
                        "return_type": "boolean",
                        "description": "Whether BLE is present on the device."
                    },
                    {
                        "name": "isBleUsable()",
                        "return_type": "boolean",
                        "description": "Whether BLE is enabled and is usable by the app."
                    },
                    {
                        "name": "isGpsPresent()",
                        "return_type": "boolean",
                        "description": "Whether GPS provider is present on the device."
                    },
                    {
                        "name": "isGpsUsable()",
                        "return_type": "boolean",
                        "description": "Whether GPS provider is enabled and is usable by the app."
                    },
                    {
                        "name": "isLocationPresent()",
                        "return_type": "boolean",
                        "description": "Whether location is present on the device."
                    },
                    {
                        "name": "isLocationUsable()",
                        "return_type": "boolean",
                        "description": "Whether location is enabled and is usable by the app."
                    },
                    {
                        "name": "isNetworkLocationPresent()",
                        "return_type": "boolean",
                        "description": "Whether network location provider is present on the device."
                    },
                    {
                        "name": "isNetworkLocationUsable()",
                        "return_type": "boolean",
                        "description": "Whether network location provider is enabled and usable by the app."
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "LocationSettingsStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsStatusCodes",
                "description": "Location settings specific status codes, for use in Status.getStatusCode()",
                "methods": []
            },
            {
                "name": "LocationStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/LocationStatusCodes",
                "description": "This class is deprecated. Use GeofenceStatusCodes.",
                "methods": []
            },
            {
                "name": "SettingsClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/SettingsClient",
                "description": "The main entry point for interacting with the location settings-enabler APIs.",
                "methods": [
                    {
                        "name": "checkLocationSettings(LocationSettingsRequest locationSettingsRequest)",
                        "return_type": "Task<LocationSettingsResponse>",
                        "description": "Checks if the relevant system settings are enabled on the device to carry out the desired location requests."
                    }
                ]
            },
            {
                "name": "SleepClassifyEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/SleepClassifyEvent",
                "description": "Represents a sleep classification event including the classification timestamp, the sleep confidence, and the supporting data such as device motion and ambient light level.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extractEvents(Intent intent)",
                        "return_type": "staticList<SleepClassifyEvent>",
                        "description": "Extracts the SleepClassifyEvent from an Intent."
                    },
                    {
                        "name": "getConfidence()",
                        "return_type": "int",
                        "description": "Returns a sleep confidence value between 0 and 100."
                    },
                    {
                        "name": "getLight()",
                        "return_type": "int",
                        "description": "Returns the brightness of the space around the device, based on the device's ambient light sensor readings."
                    },
                    {
                        "name": "getMotion()",
                        "return_type": "int",
                        "description": "Returns the amount of device motion, based on the device's accelerometer readings."
                    },
                    {
                        "name": "getTimestampMillis()",
                        "return_type": "long",
                        "description": "Returns the UNIX epoch time when the event happened, expressed as the number of milliseconds since 1/1/1970 UTC."
                    },
                    {
                        "name": "hasEvents(Intent intent)",
                        "return_type": "static boolean",
                        "description": "Checks whether the Intent has any SleepClassifyEvent."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SleepSegmentEvent",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/SleepSegmentEvent",
                "description": "Represents the result of segmenting sleep after the user is awake.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "extractEvents(Intent intent)",
                        "return_type": "staticList<SleepSegmentEvent>",
                        "description": "Extract the detected sleep segment events from an Intent."
                    },
                    {
                        "name": "getEndTimeMillis()",
                        "return_type": "long",
                        "description": "If the status is STATUS_SUCCESS or STATUS_MISSING_DATA, this method returns the UNIX epoch time for the moment when the system detects that the user stops sleeping and wakes up."
                    },
                    {
                        "name": "getSegmentDurationMillis()",
                        "return_type": "long",
                        "description": "The amount of elapsed time, in milliseconds, that the system detected that the user was asleep based on the device sensor data."
                    },
                    {
                        "name": "getStartTimeMillis()",
                        "return_type": "long",
                        "description": "If the status is STATUS_SUCCESS or STATUS_MISSING_DATA, this method returns the UNIX epoch time (milliseconds since 1/1/1970 UTC"
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "int",
                        "description": "Get a status code that indicates whether the system succeeded in detecting sleep and gathering sleep data."
                    },
                    {
                        "name": "hasEvents(Intent intent)",
                        "return_type": "static boolean",
                        "description": "Check whether the Intent has any SleepSegmentEvent."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "SleepSegmentRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/location/SleepSegmentRequest",
                "description": "A request object that specifies what data to receive from the Sleep API.",
                "methods": [
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDefaultSleepSegmentRequest()",
                        "return_type": "staticSleepSegmentRequest",
                        "description": "Creates a default request that registers for both SleepSegmentEvent and SleepClassifyEvent data."
                    },
                    {
                        "name": "getRequestedDataType()",
                        "return_type": "int",
                        "description": "Returns the requested data type, which is one of SEGMENT_AND_CLASSIFY_EVENTS, SEGMENT_EVENTS_ONLY, or CLASSIFY_EVENTS_ONLY."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel parcel, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ActivityRecognitionApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/ActivityRecognitionApi",
                "description": "This interface is deprecated. Use the GoogleApi-based API ActivityRecognitionClient instead.",
                "methods": [
                    {
                        "name": "removeActivityUpdates(GoogleApiClient client, PendingIntent callbackIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes all activity updates for the specified PendingIntent."
                    },
                    {
                        "name": "requestActivityUpdates(GoogleApiClient client, long detectionIntervalMillis, PendingIntent callbackIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Register for activity recognition updates."
                    }
                ]
            },
            {
                "name": "FusedLocationProviderApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/FusedLocationProviderApi",
                "description": "This interface is deprecated. Use the GoogleApi-based API FusedLocationProviderClient instead.",
                "methods": [
                    {
                        "name": "flushLocations(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Flushes any locations currently being batched and sends them to all registered LocationListeners, LocationCallbacks, and PendingIntents."
                    },
                    {
                        "name": "getLastLocation(GoogleApiClient client)",
                        "return_type": "abstractLocation",
                        "description": "Returns the best most recent location currently available."
                    },
                    {
                        "name": "getLocationAvailability(GoogleApiClient client)",
                        "return_type": "abstractLocationAvailability",
                        "description": "Returns the availability of location data."
                    },
                    {
                        "name": "removeLocationUpdates(GoogleApiClient client, PendingIntent callbackIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes all location updates for the given pending intent."
                    },
                    {
                        "name": "removeLocationUpdates(GoogleApiClient client, LocationListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes all location updates for the given location listener."
                    },
                    {
                        "name": "removeLocationUpdates(GoogleApiClient client, LocationCallback callback)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes all location updates for the given location result listener."
                    },
                    {
                        "name": "requestLocationUpdates(GoogleApiClient client, LocationRequest request, LocationListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Requests location updates."
                    },
                    {
                        "name": "requestLocationUpdates(GoogleApiClient client, LocationRequest request, LocationCallback callback, Looper looper)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Requests location updates with a callback on the specified Looper thread."
                    },
                    {
                        "name": "requestLocationUpdates(GoogleApiClient client, LocationRequest request, LocationListener listener, Looper looper)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Requests location updates with a callback on the specified Looper thread."
                    },
                    {
                        "name": "requestLocationUpdates(GoogleApiClient client, LocationRequest request, PendingIntent callbackIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Requests location updates with a callback on the specified PendingIntent."
                    },
                    {
                        "name": "setMockLocation(GoogleApiClient client, Location mockLocation)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sets the mock location to be used for the location provider."
                    },
                    {
                        "name": "setMockMode(GoogleApiClient client, boolean isMockMode)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sets whether or not the location provider is in mock mode."
                    }
                ]
            },
            {
                "name": "Geofence",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/Geofence",
                "description": "Represents a geographical region, also known as a geofence.",
                "methods": [
                    {
                        "name": "getRequestId()",
                        "return_type": "abstractString",
                        "description": "Returns the request ID of this geofence."
                    }
                ]
            },
            {
                "name": "GeofencingApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/GeofencingApi",
                "description": "This interface is deprecated. Use the GoogleApi-based API GeofencingClient instead.",
                "methods": [
                    {
                        "name": "addGeofences(GoogleApiClient client, GeofencingRequest geofencingRequest, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Sets alerts to be notified when the device enters or exits one of the specified geofences."
                    },
                    {
                        "name": "addGeofences(GoogleApiClient client, List<Geofence> geofences, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "This method is deprecated. use addGeofences(GoogleApiClient, GeofencingRequest, PendingIntent"
                    },
                    {
                        "name": "removeGeofences(GoogleApiClient client, List<String> geofenceRequestIds)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes geofences by their request IDs."
                    },
                    {
                        "name": "removeGeofences(GoogleApiClient client, PendingIntent pendingIntent)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes all geofences associated with the given pendingIntent."
                    }
                ]
            },
            {
                "name": "LocationListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/LocationListener",
                "description": "Used for receiving notifications from the FusedLocationProviderApi when the location has changed.",
                "methods": [
                    {
                        "name": "onLocationChanged(Location location)",
                        "return_type": "abstract void",
                        "description": "Called when the location has changed."
                    }
                ]
            },
            {
                "name": "SettingsApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/location/SettingsApi",
                "description": "This interface is deprecated. Use GoogleApi-based API SettingsClient instead.",
                "methods": [
                    {
                        "name": "checkLocationSettings(GoogleApiClient client, LocationSettingsRequest locationSettingsRequest)",
                        "return_type": "abstractPendingResult<LocationSettingsResult>",
                        "description": "Checks if the relevant system settings are enabled on the device to carry out the desired location requests."
                    }
                ]
            },
            {
                "name": "ActivityTransition.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/location/ActivityTransition.Builder",
                "description": "The builder to help create an ActivityTransition object.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "ActivityTransition",
                        "description": "Builds a ActivityTransition object."
                    },
                    {
                        "name": "setActivityTransition(int transition)",
                        "return_type": "ActivityTransition.Builder",
                        "description": "Adds an interested transition type."
                    },
                    {
                        "name": "setActivityType(int activityType)",
                        "return_type": "ActivityTransition.Builder",
                        "description": "Sets the type of the activity to be detected."
                    }
                ]
            },
            {
                "name": "GeofencingRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/location/GeofencingRequest.Builder",
                "description": "A builder that builds GeofencingRequest.Pending",
                "methods": [
                    {
                        "name": "addGeofence(Geofence geofence)",
                        "return_type": "GeofencingRequest.Builder",
                        "description": "Adds a geofence to be monitored by geofencing service."
                    },
                    {
                        "name": "addGeofences(List<Geofence> geofences)",
                        "return_type": "GeofencingRequest.Builder",
                        "description": "Adds all the geofences in the given list to be monitored by geofencing service."
                    },
                    {
                        "name": "build()",
                        "return_type": "GeofencingRequest",
                        "description": "Builds the GeofencingRequest object."
                    },
                    {
                        "name": "setInitialTrigger(int initialTrigger)",
                        "return_type": "GeofencingRequest.Builder",
                        "description": "Sets the geofence notification behavior at the moment when the geofences are added."
                    }
                ]
            },
            {
                "name": "LocationSettingsRequest.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/location/LocationSettingsRequest.Builder",
                "description": "A builder that builds LocationSettingsRequest.",
                "methods": [
                    {
                        "name": "addAllLocationRequests(Collection<LocationRequest> requests)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Adds a collection of LocationRequests that the client is interested in."
                    },
                    {
                        "name": "addLocationRequest(LocationRequest request)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Adds one LocationRequest that the client is interested in."
                    },
                    {
                        "name": "build()",
                        "return_type": "LocationSettingsRequest",
                        "description": "Creates a LocationSettingsRequest that can be used with SettingsApi."
                    },
                    {
                        "name": "setAlwaysShow(boolean show)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Whether or not location is required by the calling app in order to continue."
                    },
                    {
                        "name": "setNeedBle(boolean needBle)",
                        "return_type": "LocationSettingsRequest.Builder",
                        "description": "Sets whether the client wants BLE scan to be enabled."
                    }
                ]
            },
            {
                "name": "Geofence.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/location/Geofence.Builder",
                "description": "A builder that builds Geofence.",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Geofence",
                        "description": "Creates a geofence object."
                    },
                    {
                        "name": "setCircularRegion(double latitude, double longitude, float radius)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the region of this geofence."
                    },
                    {
                        "name": "setExpirationDuration(long durationMillis)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the expiration duration of geofence."
                    },
                    {
                        "name": "setLoiteringDelay(int loiteringDelayMs)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the delay between GEOFENCE_TRANSITION_ENTER and GEOFENCE_TRANSITION_DWELLING in milliseconds."
                    },
                    {
                        "name": "setNotificationResponsiveness(int notificationResponsivenessMs)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the best-effort notification responsiveness of the geofence."
                    },
                    {
                        "name": "setRequestId(String requestId)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the request ID of the geofence."
                    },
                    {
                        "name": "setTransitionTypes(int transitionTypes)",
                        "return_type": "Geofence.Builder",
                        "description": "Sets the transition types of interest."
                    }
                ]
            }
        ]
    },
    {
        "name": "licenses",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/oss/licenses/package-summary",
        "classes": [
            {
                "name": "OssLicensesActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/oss/licenses/OssLicensesActivity",
                "description": "An Activity used to display the actual content of a license in res/raw/third_party_licenses generated by oss licenses gradle plugin.",
                "methods": [
                    {
                        "name": "onCreate(Bundle bundle)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onOptionsItemSelected(MenuItem item)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "onRestoreInstanceState(Bundle savedInstanceState)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onSaveInstanceState(Bundle bundle)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "OssLicensesMenuActivity",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/oss/licenses/OssLicensesMenuActivity",
                "description": "An Activity used to display a list of all third party licenses in res/raw/third_party_license_metadata generated by oss licenses gradle plugin.",
                "methods": [
                    {
                        "name": "onCreateLoader(int i, Bundle bundle)",
                        "return_type": "Loader<List<License>>",
                        "description": ""
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onLoadFinished(Loader<List<License>> loader, List<License> licenses)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onLoaderReset(Loader<List<License>> loader)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onOptionsItemSelected(MenuItem item)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "setActivityTitle(String title)",
                        "return_type": "static void",
                        "description": "Sets the title for OssLicensesMenuActivity."
                    }
                ]
            }
        ]
    },
    {
        "name": "signin",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/auth/api/signin/package-summary",
        "classes": [
            {
                "name": "GoogleSignIn",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignIn",
                "description": "Entry point for the Google Sign In API.",
                "methods": [
                    {
                        "name": "getAccountForExtension(Context context, GoogleSignInOptionsExtension extension)",
                        "return_type": "staticGoogleSignInAccount",
                        "description": "Gets a GoogleSignInAccount object to use with other authenticated APIs."
                    },
                    {
                        "name": "getAccountForScopes(Context context, Scope scope, Scope... scopes)",
                        "return_type": "staticGoogleSignInAccount",
                        "description": "Gets a GoogleSignInAccount object to use with other authenticated APIs."
                    },
                    {
                        "name": "getClient(Context context, GoogleSignInOptions options)",
                        "return_type": "staticGoogleSignInClient",
                        "description": "Create a new instance of GoogleSignInClient"
                    },
                    {
                        "name": "getClient(Activity activity, GoogleSignInOptions options)",
                        "return_type": "staticGoogleSignInClient",
                        "description": "Create a new instance of GoogleSignInClient"
                    },
                    {
                        "name": "getLastSignedInAccount(Context context)",
                        "return_type": "staticGoogleSignInAccount",
                        "description": "Gets the last account that the user signed in with."
                    },
                    {
                        "name": "getSignedInAccountFromIntent(Intent data)",
                        "return_type": "staticTask<GoogleSignInAccount>",
                        "description": "Returns a GoogleSignInAccount present in the result data for the associated Activity started via GoogleSignInClient.getSignInIntent("
                    },
                    {
                        "name": "hasPermissions(GoogleSignInAccount account, GoogleSignInOptionsExtension extension)",
                        "return_type": "static boolean",
                        "description": "Determines if the given account has been granted permission to all scopes associated with the given extension."
                    },
                    {
                        "name": "hasPermissions(GoogleSignInAccount account, Scope... scopes)",
                        "return_type": "static boolean",
                        "description": "Determines if the given account has been granted permission to all given scopes."
                    },
                    {
                        "name": "requestPermissions(Activity activity, int requestCode, GoogleSignInAccount account, Scope... scopes)",
                        "return_type": "static void",
                        "description": "Requests a collection of permissions to be granted to the given account."
                    },
                    {
                        "name": "requestPermissions(Activity activity, int requestCode, GoogleSignInAccount account, GoogleSignInOptionsExtension extension)",
                        "return_type": "static void",
                        "description": "Requests a collection of permissions associated with the given extension to be granted to the given account."
                    },
                    {
                        "name": "requestPermissions(Fragment fragment, int requestCode, GoogleSignInAccount account, GoogleSignInOptionsExtension extension)",
                        "return_type": "static void",
                        "description": "See requestPermissions(Activity, int, GoogleSignInAccount, GoogleSignInOptionsExtension"
                    },
                    {
                        "name": "requestPermissions(Fragment fragment, int requestCode, GoogleSignInAccount account, Scope... scopes)",
                        "return_type": "static void",
                        "description": "See requestPermissions(Activity, int, GoogleSignInAccount, Scope"
                    }
                ]
            },
            {
                "name": "GoogleSignInClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInClient",
                "description": "A client for interacting with the Google Sign In API.",
                "methods": [
                    {
                        "name": "getSignInIntent()",
                        "return_type": "Intent",
                        "description": "Gets an Intent to start the Google Sign In flow by calling Activity.startActivityForResult(Intent, int"
                    },
                    {
                        "name": "revokeAccess()",
                        "return_type": "Task<Void>",
                        "description": "Revokes access given to the current application."
                    },
                    {
                        "name": "signOut()",
                        "return_type": "Task<Void>",
                        "description": "Signs out the current signed-in user if any."
                    },
                    {
                        "name": "silentSignIn()",
                        "return_type": "Task<GoogleSignInAccount>",
                        "description": "Returns the ERROR(/GoogleSignInAccount"
                    }
                ]
            },
            {
                "name": "GoogleSignInResult",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInResult",
                "description": "GoogleSignInResults are Result implementations that potentially contain a ERROR(/GoogleSignInAccount).",
                "methods": [
                    {
                        "name": "getSignInAccount()",
                        "return_type": "GoogleSignInAccount",
                        "description": "Returns a ERROR(/GoogleSignInAccount"
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": "Returns a Status object indicating the status of the sign in attempt."
                    },
                    {
                        "name": "isSuccess()",
                        "return_type": "boolean",
                        "description": "Convenient method to help you tell if sign-in completed successfully."
                    }
                ]
            },
            {
                "name": "GoogleSignInAccount",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInAccount",
                "description": "Class that holds the basic account information of the signed in Google user.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getAccount()",
                        "return_type": "Account",
                        "description": "A convenient wrapper for getEmail("
                    },
                    {
                        "name": "getDisplayName()",
                        "return_type": "String",
                        "description": "Returns the display name of the signed in user if you built your configuration starting from new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN"
                    },
                    {
                        "name": "getEmail()",
                        "return_type": "String",
                        "description": "Returns the email address of the signed in user if GoogleSignInOptions.Builder.requestEmail("
                    },
                    {
                        "name": "getFamilyName()",
                        "return_type": "String",
                        "description": "Returns the family name of the signed in user if you built your configuration starting from new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN"
                    },
                    {
                        "name": "getGivenName()",
                        "return_type": "String",
                        "description": "Returns the given name of the signed in user if you built your configuration starting from new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN"
                    },
                    {
                        "name": "getGrantedScopes()",
                        "return_type": "Set<Scope>",
                        "description": "Returns all scopes that have been authorized to your application."
                    },
                    {
                        "name": "getId()",
                        "return_type": "String",
                        "description": "Returns the unique ID for the Google account if you built your configuration starting from new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN"
                    },
                    {
                        "name": "getIdToken()",
                        "return_type": "String",
                        "description": "Returns an ID token that you can send to your server if GoogleSignInOptions.Builder.requestIdToken(String"
                    },
                    {
                        "name": "getPhotoUrl()",
                        "return_type": "Uri",
                        "description": "Returns the photo url of the signed in user if the user has a profile picture and you built your configuration either starting from new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN"
                    },
                    {
                        "name": "getServerAuthCode()",
                        "return_type": "String",
                        "description": "Returns a one-time server auth code to send to your web server which can be exchanged for access token and sometimes refresh token if GoogleSignInOptions.Builder.requestServerAuthCode(String"
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleSignInStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInStatusCodes",
                "description": "Google Sign In specific status codes, for use in Status#getStatusCode().",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly"
                    }
                ]
            },
            {
                "name": "GoogleSignInOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInOptions",
                "description": "GoogleSignInOptions contains options used to configure the Auth.GOOGLE_SIGN_IN_API.",
                "methods": [
                    {
                        "name": "equals(Object obj)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getScopeArray()",
                        "return_type": "Scope[]",
                        "description": "Gets an array of all the requested scopes."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel out, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleSignInOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInOptions.Builder",
                "description": "Builder for GoogleSignInOptions,",
                "methods": [
                    {
                        "name": "addExtension(GoogleSignInOptionsExtension extension)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies additional sign-in options via the given extension."
                    },
                    {
                        "name": "build()",
                        "return_type": "GoogleSignInOptions",
                        "description": "Builds the GoogleSignInOptions object."
                    },
                    {
                        "name": "requestEmail()",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that email info is requested by your application."
                    },
                    {
                        "name": "requestId()",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that user ID is requested by your application."
                    },
                    {
                        "name": "requestIdToken(String serverClientId)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that an ID token for authenticated users is requested."
                    },
                    {
                        "name": "requestProfile()",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that user's profile info is requested by your application."
                    },
                    {
                        "name": "requestScopes(Scope scope, Scope... scopes)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies OAuth 2.0 scopes your application requests."
                    },
                    {
                        "name": "requestServerAuthCode(String serverClientId)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that offline access is requested."
                    },
                    {
                        "name": "requestServerAuthCode(String serverClientId, boolean forceCodeForRefreshToken)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that offline access is requested."
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies an account name on the device that should be used."
                    },
                    {
                        "name": "setHostedDomain(String hostedDomain)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies a hosted domain restriction."
                    }
                ]
            },
            {
                "name": "RevocationBoundService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/RevocationBoundService",
                "description": "Handles Google Sign-In user revocation.",
                "methods": [
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "IBinder",
                        "description": ""
                    }
                ]
            },
            {
                "name": "GoogleSignInApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInApi",
                "description": "Api interface for Sign In with Google.",
                "methods": [
                    {
                        "name": "getSignInIntent(GoogleApiClient client)",
                        "return_type": "abstractIntent",
                        "description": "Gets an Intent to start the Google Sign In flow by calling Activity.startActivityForResult(Intent, int"
                    },
                    {
                        "name": "getSignInResultFromIntent(Intent data)",
                        "return_type": "abstractGoogleSignInResult",
                        "description": "Helper function to extract out GoogleSignInResult from the Activity.onActivityResult(int, int, Intent"
                    },
                    {
                        "name": "revokeAccess(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Revokes access given to the current application."
                    },
                    {
                        "name": "signOut(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Signs out the current signed-in user if any."
                    },
                    {
                        "name": "silentSignIn(GoogleApiClient client)",
                        "return_type": "abstractOptionalPendingResult<GoogleSignInResult>",
                        "description": "Returns the ERROR(/GoogleSignInAccount"
                    }
                ]
            },
            {
                "name": "GoogleSignInOptionsExtension",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInOptionsExtension",
                "description": "An interface for API specific extension for GoogleSignInOptions.",
                "methods": []
            },
            {
                "name": "GoogleSignInOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInOptions.Builder",
                "description": "Builder for GoogleSignInOptions,",
                "methods": [
                    {
                        "name": "addExtension(GoogleSignInOptionsExtension extension)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies additional sign-in options via the given extension."
                    },
                    {
                        "name": "build()",
                        "return_type": "GoogleSignInOptions",
                        "description": "Builds the GoogleSignInOptions object."
                    },
                    {
                        "name": "requestEmail()",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that email info is requested by your application."
                    },
                    {
                        "name": "requestId()",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that user ID is requested by your application."
                    },
                    {
                        "name": "requestIdToken(String serverClientId)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that an ID token for authenticated users is requested."
                    },
                    {
                        "name": "requestProfile()",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that user's profile info is requested by your application."
                    },
                    {
                        "name": "requestScopes(Scope scope, Scope... scopes)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies OAuth 2.0 scopes your application requests."
                    },
                    {
                        "name": "requestServerAuthCode(String serverClientId)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that offline access is requested."
                    },
                    {
                        "name": "requestServerAuthCode(String serverClientId, boolean forceCodeForRefreshToken)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies that offline access is requested."
                    },
                    {
                        "name": "setAccountName(String accountName)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies an account name on the device that should be used."
                    },
                    {
                        "name": "setHostedDomain(String hostedDomain)",
                        "return_type": "GoogleSignInOptions.Builder",
                        "description": "Specifies a hosted domain restriction."
                    }
                ]
            }
        ]
    },
    {
        "name": "mediation",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/ads/mediation/package-summary",
        "classes": [
            {
                "name": "Adapter",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/Adapter",
                "description": "Adapter for third party ad networks.",
                "methods": [
                    {
                        "name": "getSDKVersionInfo()",
                        "return_type": "abstractVersionInfo",
                        "description": "Returns the version of the third party SDK built into the app."
                    },
                    {
                        "name": "getVersionInfo()",
                        "return_type": "abstractVersionInfo",
                        "description": "Returns the version of the mediation adapter."
                    },
                    {
                        "name": "initialize(Context context, InitializationCompleteCallback callback, List<MediationConfiguration> configurations)",
                        "return_type": "abstract void",
                        "description": "Called by the Google Mobile Ads SDK to initialize a third party adapter and SDK."
                    },
                    {
                        "name": "loadBannerAd(MediationBannerAdConfiguration adConfiguration, MediationAdLoadCallback<MediationBannerAd, MediationBannerAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading a third party banner ad given a MediationAdConfigurationUsed to load the winning ad from a mediation request."
                    },
                    {
                        "name": "loadInterscrollerAd(MediationBannerAdConfiguration adConfiguration, MediationAdLoadCallback<MediationInterscrollerAd, MediationBannerAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading a third party interscroller ad given a MediationAdConfigurationUsed to load the winning ad from a mediation request."
                    },
                    {
                        "name": "loadInterstitialAd(MediationInterstitialAdConfiguration adConfiguration, MediationAdLoadCallback<MediationInterstitialAd, MediationInterstitialAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading a third party interstitial ad given a MediationAdConfigurationUsed to load the winning ad from a mediation request."
                    },
                    {
                        "name": "loadNativeAd(MediationNativeAdConfiguration adConfiguration, MediationAdLoadCallback<UnifiedNativeAdMapper, MediationNativeAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading a third party native ad given a MediationAdConfigurationUsed to load the winning ad from a mediation request."
                    },
                    {
                        "name": "loadRewardedAd(MediationRewardedAdConfiguration adConfiguration, MediationAdLoadCallback<MediationRewardedAd, MediationRewardedAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading a third party rewarded ad given a MediationAdConfigurationUsed to load the winning ad from a mediation request."
                    },
                    {
                        "name": "loadRewardedInterstitialAd(MediationRewardedAdConfiguration adConfiguration, MediationAdLoadCallback<MediationRewardedAd, MediationRewardedAdCallback> callback)",
                        "return_type": "void",
                        "description": "Called by the Google Mobile Ads SDK to begin loading a third party rewarded interstitial ad given a MediationAdConfigurationUsed to load the winning ad from a mediation request."
                    }
                ]
            },
            {
                "name": "MediationAdConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationAdConfiguration",
                "description": "Data used to render mediation ads.",
                "methods": [
                    {
                        "name": "getBidResponse()",
                        "return_type": "String",
                        "description": "The encrypted data from the third party server containing information the third party SDK needs to render an ad."
                    },
                    {
                        "name": "getContext()",
                        "return_type": "Context",
                        "description": "The context passed by this publisher for this specific request."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "Location",
                        "description": "Returns the location of the user, if defined by the AdRequest."
                    },
                    {
                        "name": "getMaxAdContentRating()",
                        "return_type": "String",
                        "description": "Returns the maximum ad content rating for this request."
                    },
                    {
                        "name": "getMediationExtras()",
                        "return_type": "Bundle",
                        "description": "Additional parameters passed in by the publisher for this specific request."
                    },
                    {
                        "name": "getServerParameters()",
                        "return_type": "Bundle",
                        "description": "Parameters defined by the publisher in the AdMob or Google Ad Manager UI."
                    },
                    {
                        "name": "getWatermark()",
                        "return_type": "String",
                        "description": "Returns a base64-encoded watermark PNG file that identifies the source of the ad."
                    },
                    {
                        "name": "isTestRequest()",
                        "return_type": "boolean",
                        "description": "Returns true if the publisher is asking for test ads."
                    },
                    {
                        "name": "taggedForChildDirectedTreatment()",
                        "return_type": "int",
                        "description": "Returns whether the publisher indicated that the app is to be treated as child-directed for purposes of the Children’s Online Privacy Protection Act (COPPA"
                    },
                    {
                        "name": "taggedForUnderAgeTreatment()",
                        "return_type": "int",
                        "description": "Returns whether the publisher indicated that the ad request should receive treatment for users in the European Economic Area (EEA"
                    }
                ]
            },
            {
                "name": "MediationBannerAdConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationBannerAdConfiguration",
                "description": "Data used to render mediation banner ads.",
                "methods": [
                    {
                        "name": "getAdSize()",
                        "return_type": "AdSize",
                        "description": "Returns the ad size associated with the banner ad request."
                    }
                ]
            },
            {
                "name": "MediationConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationConfiguration",
                "description": "Contains a mediation configuration set by the publisher in the AdMob or DFP UI.",
                "methods": [
                    {
                        "name": "getFormat()",
                        "return_type": "AdFormat",
                        "description": "Returns the ad format associated with the configuration."
                    },
                    {
                        "name": "getServerParameters()",
                        "return_type": "Bundle",
                        "description": "Returns the settings set by the publisher in the UI."
                    }
                ]
            },
            {
                "name": "MediationInterstitialAdConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationInterstitialAdConfiguration",
                "description": "Data used to render mediation interstitial ads.",
                "methods": []
            },
            {
                "name": "MediationNativeAdConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationNativeAdConfiguration",
                "description": "Data used to render mediation native ads.",
                "methods": [
                    {
                        "name": "getNativeAdOptions()",
                        "return_type": "NativeAdOptions",
                        "description": "Returns the NativeAdOptions for this ad request."
                    }
                ]
            },
            {
                "name": "MediationRewardedAdConfiguration",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationRewardedAdConfiguration",
                "description": "Data used to render mediation rewarded ads.",
                "methods": []
            },
            {
                "name": "UnifiedNativeAdMapper",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/UnifiedNativeAdMapper",
                "description": "Mapping class for Google AdMob unified native ads.",
                "methods": [
                    {
                        "name": "getAdChoicesContent()",
                        "return_type": "View",
                        "description": "Returns the view being used as AdChoices content."
                    },
                    {
                        "name": "getAdvertiser()",
                        "return_type": "finalString",
                        "description": "Returns the text that identifies the advertiser."
                    },
                    {
                        "name": "getBody()",
                        "return_type": "finalString",
                        "description": "Returns body text."
                    },
                    {
                        "name": "getCallToAction()",
                        "return_type": "finalString",
                        "description": "Returns the text that encourages the user to take some action with the ad."
                    },
                    {
                        "name": "getCurrentTime()",
                        "return_type": "float",
                        "description": "Gets the video's current time."
                    },
                    {
                        "name": "getDuration()",
                        "return_type": "float",
                        "description": "Gets the video's duration."
                    },
                    {
                        "name": "getExtras()",
                        "return_type": "finalBundle",
                        "description": "Returns the bundle of extras passed in via the setExtras method."
                    },
                    {
                        "name": "getHeadline()",
                        "return_type": "finalString",
                        "description": "Returns the primary text headline."
                    },
                    {
                        "name": "getIcon()",
                        "return_type": "finalNativeAd.Image",
                        "description": "Returns a small image identifying the advertiser."
                    },
                    {
                        "name": "getImages()",
                        "return_type": "finalList<NativeAd.Image>",
                        "description": "Returns a list of large images."
                    },
                    {
                        "name": "getMediaContentAspectRatio()",
                        "return_type": "float",
                        "description": "Returns the aspect ratio of the media to be rendered in the MediaView."
                    },
                    {
                        "name": "getOverrideClickHandling()",
                        "return_type": "final boolean",
                        "description": "Returns true if the ad network does click handling on its own."
                    },
                    {
                        "name": "getOverrideImpressionRecording()",
                        "return_type": "final boolean",
                        "description": "Returns true if the ad network does impression tracking on its own."
                    },
                    {
                        "name": "getPrice()",
                        "return_type": "finalString",
                        "description": "For ads about apps, returns a string representing how much the app costs."
                    },
                    {
                        "name": "getStarRating()",
                        "return_type": "finalDouble",
                        "description": "For ads about apps, returns a star rating from 0 to 5 representing how many stars the app has in the store offering it."
                    },
                    {
                        "name": "getStore()",
                        "return_type": "finalString",
                        "description": "For ads about apps, returns the name of the store offering the app for download."
                    },
                    {
                        "name": "handleClick(View view)",
                        "return_type": "void",
                        "description": "Subclasses should implement this method if the network requires the developer to explicitly handle click events of views rendered to screen."
                    },
                    {
                        "name": "hasVideoContent()",
                        "return_type": "boolean",
                        "description": "Returns true if the current ad has video content."
                    },
                    {
                        "name": "recordImpression()",
                        "return_type": "void",
                        "description": "Subclasses should implement this method if the network requires the developer to explicitly record an impression of a view rendered to screen."
                    },
                    {
                        "name": "setAdChoicesContent(View adChoicesContent)",
                        "return_type": "void",
                        "description": "Sets a view to be used as AdChoices content."
                    },
                    {
                        "name": "setAdvertiser(String advertiser)",
                        "return_type": "final void",
                        "description": "Sets a text that identifies the advertiser."
                    },
                    {
                        "name": "setBody(String body)",
                        "return_type": "final void",
                        "description": "Sets body text."
                    },
                    {
                        "name": "setCallToAction(String callToAction)",
                        "return_type": "final void",
                        "description": "Sets the ad's call to action (such as \"Buy\" or \"Install\""
                    },
                    {
                        "name": "setExtras(Bundle extras)",
                        "return_type": "final void",
                        "description": "Sets a bundle of extras containing assets or attributes that do not directly map to those expected for a Google native ad object (headline, body, etc"
                    },
                    {
                        "name": "setHasVideoContent(boolean hasVideoContent)",
                        "return_type": "void",
                        "description": "Set to true if the current ad has video content."
                    },
                    {
                        "name": "setHeadline(String headline)",
                        "return_type": "final void",
                        "description": "Sets the primary text headline."
                    },
                    {
                        "name": "setIcon(NativeAd.Image icon)",
                        "return_type": "final void",
                        "description": "Sets a small image identifying the advertiser."
                    },
                    {
                        "name": "setImages(List<NativeAd.Image> images)",
                        "return_type": "final void",
                        "description": "Sets a list of large images."
                    },
                    {
                        "name": "setMediaContentAspectRatio(float mediaContentAspectRatio)",
                        "return_type": "void",
                        "description": "Sets the aspect ratio of the media to be rendered in the MediaView."
                    },
                    {
                        "name": "setMediaView(View mediaView)",
                        "return_type": "void",
                        "description": "Sets mediated view that displays media."
                    },
                    {
                        "name": "setOverrideClickHandling(boolean overrideClickHandling)",
                        "return_type": "final void",
                        "description": "Set to true if the ad network does click handling on its own."
                    },
                    {
                        "name": "setOverrideImpressionRecording(boolean overrideImpressionRecording)",
                        "return_type": "final void",
                        "description": "Set to true if the ad network does impression tracking on its own."
                    },
                    {
                        "name": "setPrice(String price)",
                        "return_type": "final void",
                        "description": "For ads about apps, sets a string representing how much the app costs."
                    },
                    {
                        "name": "setStarRating(Double starRating)",
                        "return_type": "final void",
                        "description": "For ads about apps, sets a star rating from 0 to 5 representing how many stars the app has in the store offering it."
                    },
                    {
                        "name": "setStore(String store)",
                        "return_type": "final void",
                        "description": "For ads about apps, sets the name of the store offering the app for download."
                    },
                    {
                        "name": "trackViews(View containerView, Map<String, View> clickableAssetViews, Map<String, View> nonclickableAssetViews)",
                        "return_type": "void",
                        "description": "Subclasses should implement this method if the network requires the developer to prepare state for recording an impression and/or click before a view is rendered to screen."
                    },
                    {
                        "name": "untrackView(View view)",
                        "return_type": "void",
                        "description": "Subclasses should implement this method if the mediated network's SDK offers a way to stop tracking a native ad view for the ad mapped by this object."
                    }
                ]
            },
            {
                "name": "VersionInfo",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/ads/mediation/VersionInfo",
                "description": "Version info for adapters and for third party SDKs.",
                "methods": [
                    {
                        "name": "getMajorVersion()",
                        "return_type": "int",
                        "description": "Major version."
                    },
                    {
                        "name": "getMicroVersion()",
                        "return_type": "int",
                        "description": "Micro version."
                    },
                    {
                        "name": "getMinorVersion()",
                        "return_type": "int",
                        "description": "Minor version."
                    }
                ]
            },
            {
                "name": "InitializationCompleteCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/InitializationCompleteCallback",
                "description": "Callbacks for a mediation adapter to communicate third party ad network initialization status back to the Google Mobile Ads SDK.",
                "methods": [
                    {
                        "name": "onInitializationFailed(String error)",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the third party SDK initialization failed."
                    },
                    {
                        "name": "onInitializationSucceeded()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the third party SDK initialization succeeded."
                    }
                ]
            },
            {
                "name": "MediationAdapter",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationAdapter",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "onDestroy()",
                        "return_type": "abstract void",
                        "description": "Tears down the adapter control."
                    },
                    {
                        "name": "onPause()",
                        "return_type": "abstract void",
                        "description": "Called when the application calls onPause on the AdView."
                    },
                    {
                        "name": "onResume()",
                        "return_type": "abstract void",
                        "description": "Called when the application calls onResume on the AdView."
                    }
                ]
            },
            {
                "name": "MediationAdCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationAdCallback",
                "description": "Ad callback for a mediation adapter to communicate back to the Google Mobile Ads SDK.",
                "methods": [
                    {
                        "name": "onAdClosed()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the ad closed."
                    },
                    {
                        "name": "onAdOpened()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the ad opened."
                    },
                    {
                        "name": "reportAdClicked()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the ad has been clicked."
                    },
                    {
                        "name": "reportAdImpression()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that an impression occurred on the ad."
                    }
                ]
            },
            {
                "name": "MediationAdLoadCallback<MediationAdT, MediationAdCallbackT>",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationAdLoadCallback",
                "description": "Callback to be invoked when a mediation adapter loads an ad.",
                "methods": [
                    {
                        "name": "onFailure(AdError adError)",
                        "return_type": "abstract void",
                        "description": "Called when a mediation adapter fails to load an ad."
                    },
                    {
                        "name": "onFailure(String failure)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onFailure(AdError"
                    },
                    {
                        "name": "onSuccess(MediationAdT ad)",
                        "return_type": "abstract MediationAdCallbackT",
                        "description": "Success callback for third party ad loading."
                    }
                ]
            },
            {
                "name": "MediationAdRequest",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationAdRequest",
                "description": "This interface is deprecated. Use Adapter and MediationAdConfiguration instead.",
                "methods": [
                    {
                        "name": "getBirthday()",
                        "return_type": "abstractDate",
                        "description": "This method is deprecated. No replacement."
                    },
                    {
                        "name": "getGender()",
                        "return_type": "abstract int",
                        "description": "This method is deprecated. No replacement."
                    },
                    {
                        "name": "getKeywords()",
                        "return_type": "abstractSet<String>",
                        "description": "Returns the set of keywords requested by the user, if defined by the AdRequest."
                    },
                    {
                        "name": "getLocation()",
                        "return_type": "abstractLocation",
                        "description": "Returns the location of the user, if defined by the AdRequest."
                    },
                    {
                        "name": "isDesignedForFamilies()",
                        "return_type": "abstract boolean",
                        "description": "This method is deprecated. No replacement."
                    },
                    {
                        "name": "isTesting()",
                        "return_type": "abstract boolean",
                        "description": "Returns true if the publisher is asking for test ads."
                    },
                    {
                        "name": "taggedForChildDirectedTreatment()",
                        "return_type": "abstract int",
                        "description": "Returns whether the publisher indicated that the app is to be treated as child-directed for purposes of the Children’s Online Privacy Protection Act (COPPA"
                    }
                ]
            },
            {
                "name": "MediationBannerAd",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationBannerAd",
                "description": "Mediated banner ad from a banner Adapter.",
                "methods": [
                    {
                        "name": "getView()",
                        "return_type": "abstractView",
                        "description": "Returns the view containing the third party rendered ad."
                    }
                ]
            },
            {
                "name": "MediationBannerAdapter",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationBannerAdapter",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "getBannerView()",
                        "return_type": "abstractView",
                        "description": "Returns a View that can be rendered to display the ad."
                    },
                    {
                        "name": "requestBannerAd(Context context, MediationBannerListener listener, Bundle serverParameters, AdSize adSize, MediationAdRequest mediationAdRequest, Bundle mediationExtras)",
                        "return_type": "abstract void",
                        "description": "Called by the mediation library to request a banner ad from the adapter."
                    }
                ]
            },
            {
                "name": "MediationBannerAdCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationBannerAdCallback",
                "description": "Banner ad callbacks for a mediation adapter to communicate back to the Google Mobile Ads SDK.",
                "methods": [
                    {
                        "name": "onAdLeftApplication()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the ad has caused the user to leave the application (for example, opened a browser"
                    }
                ]
            },
            {
                "name": "MediationBannerListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationBannerListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdClicked(MediationBannerAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the user has clicked on this ad."
                    },
                    {
                        "name": "onAdClosed(MediationBannerAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad control rendered something in full screen and is now transferring control back to the application."
                    },
                    {
                        "name": "onAdFailedToLoad(MediationBannerAdapter adapter, AdError adError)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad request failed to load."
                    },
                    {
                        "name": "onAdFailedToLoad(MediationBannerAdapter adapter, int error)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onAdFailedToLoad(MediationBannerAdapter, AdError"
                    },
                    {
                        "name": "onAdLeftApplication(MediationBannerAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad is causing the device to switch to a different application (such as a web browser"
                    },
                    {
                        "name": "onAdLoaded(MediationBannerAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad has been requested and successfully received."
                    },
                    {
                        "name": "onAdOpened(MediationBannerAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad control is rendering something that is full screen."
                    }
                ]
            },
            {
                "name": "MediationExtrasReceiver",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationExtrasReceiver",
                "description": "Interface that indicates a mediation adapter is capable of receiving extra custom parameters.",
                "methods": []
            },
            {
                "name": "MediationInterscrollerAd",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationInterscrollerAd",
                "description": "Mediated interscroller ad from an interscroller Adapter.",
                "methods": [
                    {
                        "name": "shouldDelegateInterscrollerEffect()",
                        "return_type": "abstract boolean",
                        "description": "Indicates whether the interscroller rendering effect should be delegated to the Google Mobile Ads SDK."
                    }
                ]
            },
            {
                "name": "MediationInterstitialAd",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationInterstitialAd",
                "description": "Mediated interstitial ad from an interstitial Adapter.",
                "methods": [
                    {
                        "name": "showAd(Context context)",
                        "return_type": "abstract void",
                        "description": "Shows the interstitial."
                    }
                ]
            },
            {
                "name": "MediationInterstitialAdapter",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationInterstitialAdapter",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "requestInterstitialAd(Context context, MediationInterstitialListener listener, Bundle serverParameters, MediationAdRequest mediationAdRequest, Bundle mediationExtras)",
                        "return_type": "abstract void",
                        "description": "Called by the mediation library to request an ad from the adapter."
                    },
                    {
                        "name": "showInterstitial()",
                        "return_type": "abstract void",
                        "description": "Shows the interstitial."
                    }
                ]
            },
            {
                "name": "MediationInterstitialAdCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationInterstitialAdCallback",
                "description": "Interstitial ad callbacks for a mediation adapter to communicate back to the Google Mobile Ads SDK.",
                "methods": [
                    {
                        "name": "onAdFailedToShow(String errorDescription)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onAdFailedToShow(AdError"
                    },
                    {
                        "name": "onAdFailedToShow(AdError adError)",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the interstitial ad failed to show."
                    },
                    {
                        "name": "onAdLeftApplication()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the ad has caused the user to leave the application (for example, opened a browser"
                    }
                ]
            },
            {
                "name": "MediationInterstitialListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationInterstitialListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdClicked(MediationInterstitialAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the user has clicked on this ad."
                    },
                    {
                        "name": "onAdClosed(MediationInterstitialAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad control rendered something in full screen and is now transferring control back to the application."
                    },
                    {
                        "name": "onAdFailedToLoad(MediationInterstitialAdapter adapter, int error)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onAdFailedToLoad(MediationInterstitialAdapter, AdError"
                    },
                    {
                        "name": "onAdFailedToLoad(MediationInterstitialAdapter adapter, AdError adError)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad request failed to load."
                    },
                    {
                        "name": "onAdLeftApplication(MediationInterstitialAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad is causing the device to switch to a different application (such as a web browser"
                    },
                    {
                        "name": "onAdLoaded(MediationInterstitialAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad has been requested and successfully received."
                    },
                    {
                        "name": "onAdOpened(MediationInterstitialAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad control is rendering something that is full screen."
                    }
                ]
            },
            {
                "name": "MediationNativeAdapter",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationNativeAdapter",
                "description": "This interface is deprecated. Use Adapter instead.",
                "methods": [
                    {
                        "name": "requestNativeAd(Context context, MediationNativeListener listener, Bundle serverParameters, NativeMediationAdRequest mediationAdRequest, Bundle mediationExtras)",
                        "return_type": "abstract void",
                        "description": "Called by the mediation library to request a native ad from the adapter."
                    }
                ]
            },
            {
                "name": "MediationNativeAdCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationNativeAdCallback",
                "description": "Native ad callbacks for a mediation adapter to communicate back to the Google Mobile Ads SDK.",
                "methods": [
                    {
                        "name": "onAdLeftApplication()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the ad has caused the user to leave the application (for example, opened a browser"
                    },
                    {
                        "name": "onVideoComplete()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that a video ad has completed playing."
                    },
                    {
                        "name": "onVideoMute()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that a video ad is muted."
                    },
                    {
                        "name": "onVideoPause()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that a video ad is paused."
                    },
                    {
                        "name": "onVideoPlay()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that a video ad is playing."
                    },
                    {
                        "name": "onVideoUnmute()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that a video ad is unmuted."
                    }
                ]
            },
            {
                "name": "MediationNativeListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationNativeListener",
                "description": "This interface is deprecated. Use Adapter and MediationAdLoadCallback instead.",
                "methods": [
                    {
                        "name": "onAdClicked(MediationNativeAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the user has clicked on this ad."
                    },
                    {
                        "name": "onAdClosed(MediationNativeAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad control rendered something in full screen and is now transferring control back to the application."
                    },
                    {
                        "name": "onAdFailedToLoad(MediationNativeAdapter adapter, int error)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onAdFailedToLoad(MediationNativeAdapter, AdError"
                    },
                    {
                        "name": "onAdFailedToLoad(MediationNativeAdapter adapter, AdError adError)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad request failed to load."
                    },
                    {
                        "name": "onAdImpression(MediationNativeAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that an impression has been recorded for the ad."
                    },
                    {
                        "name": "onAdLeftApplication(MediationNativeAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad is causing the device to switch to a different application (such as a web browser"
                    },
                    {
                        "name": "onAdLoaded(MediationNativeAdapter adapter, UnifiedNativeAdMapper unifiedNativeAdMapper)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad has been requested and successfully received."
                    },
                    {
                        "name": "onAdOpened(MediationNativeAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that the ad control is rendering something that is full screen."
                    },
                    {
                        "name": "onVideoEnd(MediationNativeAdapter adapter)",
                        "return_type": "abstract void",
                        "description": "Indicates that an ad has completely finished playing video."
                    }
                ]
            },
            {
                "name": "MediationRewardedAd",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationRewardedAd",
                "description": "Interface definition describing methods that may be invoked once a rewarded ad has loaded.",
                "methods": [
                    {
                        "name": "showAd(Context context)",
                        "return_type": "abstract void",
                        "description": "Called when a rewarded ad is to be shown."
                    }
                ]
            },
            {
                "name": "MediationRewardedAdCallback",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/MediationRewardedAdCallback",
                "description": "Rewarded ad callbacks for a mediation adapter to communicate back to the Google Mobile Ads SDK.",
                "methods": [
                    {
                        "name": "onAdFailedToShow(String errorDescription)",
                        "return_type": "abstract void",
                        "description": "This method is deprecated. Use onAdFailedToShow(AdError"
                    },
                    {
                        "name": "onAdFailedToShow(AdError adError)",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the rewarded ad failed to show."
                    },
                    {
                        "name": "onUserEarnedReward(RewardItem rewardItem)",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the user has earned a reward."
                    },
                    {
                        "name": "onVideoComplete()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that the rewarded ad finished playing."
                    },
                    {
                        "name": "onVideoStart()",
                        "return_type": "abstract void",
                        "description": "Notifies the Google Mobile Ads SDK that a rewarded ad started playing."
                    }
                ]
            },
            {
                "name": "NativeMediationAdRequest",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/NativeMediationAdRequest",
                "description": "This interface is deprecated. Use Adapter and MediationNativeAdConfiguration instead.",
                "methods": [
                    {
                        "name": "getAdVolume()",
                        "return_type": "abstract float",
                        "description": "Returns ad volume as a fraction of system volume."
                    },
                    {
                        "name": "getNativeAdOptions()",
                        "return_type": "abstractNativeAdOptions",
                        "description": "This method is deprecated. Use getNativeAdRequestOptions("
                    },
                    {
                        "name": "getNativeAdRequestOptions()",
                        "return_type": "abstractNativeAdOptions",
                        "description": "Returns the NativeAdOptions provided with the native ad request."
                    },
                    {
                        "name": "isAdMuted()",
                        "return_type": "abstract boolean",
                        "description": "Returns whether ad is muted."
                    },
                    {
                        "name": "isUnifiedNativeAdRequested()",
                        "return_type": "abstract boolean",
                        "description": "Returns whether an unified native ad is requested or not."
                    }
                ]
            },
            {
                "name": "NetworkExtras",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/NetworkExtras",
                "description": "This interface is deprecated. This interface is only used by implementations of com.google.ads.mediation.MediationAdapter, which has been deprecated in favor of MediationAdapter. Extras for new mediation adapters are passed in as a Bundle through AdRequest.Builder.addNetworkExtrasBundle(Class , Bundle).",
                "methods": []
            },
            {
                "name": "OnContextChangedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/OnContextChangedListener",
                "description": "An optional interface that mediation adapters can implement to be informed of context changes.",
                "methods": [
                    {
                        "name": "onContextChanged(Context newContext)",
                        "return_type": "abstract void",
                        "description": "Called when the publisher updates an ad object's current context."
                    }
                ]
            },
            {
                "name": "OnImmersiveModeUpdatedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/ads/mediation/OnImmersiveModeUpdatedListener",
                "description": "An optional interface that mediation adapters can implement to be informed of immersive mode updates.",
                "methods": [
                    {
                        "name": "onImmersiveModeUpdated(boolean immersiveModeEnabled)",
                        "return_type": "abstract void",
                        "description": "Sets immersive mode enable or disable for interstitial ad."
                    }
                ]
            }
        ]
    },
    {
        "name": "stats",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/stats/package-summary",
        "classes": []
    },

    {
        "name": "wearable",
        "path": "https://developers.google.com/android/reference/com/google/android/gms/wearable/package-summary",
        "classes": [
            {
                "name": "Asset",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/Asset",
                "description": "An asset is a binary blob shared between data items that is replicated across the wearable network on demand.",
                "methods": [
                    {
                        "name": "createFromBytes(byte[] assetData)",
                        "return_type": "staticAsset",
                        "description": "Creates an Asset using a byte array."
                    },
                    {
                        "name": "createFromFd(ParcelFileDescriptor fd)",
                        "return_type": "staticAsset",
                        "description": "Creates an Asset using a file descriptor."
                    },
                    {
                        "name": "createFromRef(String digest)",
                        "return_type": "staticAsset",
                        "description": "Create an Asset using an existing Asset's digest."
                    },
                    {
                        "name": "createFromUri(Uri uri)",
                        "return_type": "staticAsset",
                        "description": "Creates an Asset using a content URI."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "getDigest()",
                        "return_type": "String",
                        "description": "Returns the digest associated with the asset data."
                    },
                    {
                        "name": "getFd()",
                        "return_type": "ParcelFileDescriptor",
                        "description": "Returns the file descriptor referencing the asset."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "Uri",
                        "description": "Returns the uri referencing the asset data."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityClient",
                "description": "Exposes an API to learn about capabilities provided by nodes on the Wear network.",
                "methods": [
                    {
                        "name": "addListener(CapabilityClient.OnCapabilityChangedListener listener, String capability)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a listener to be notified of a specific capability being added to or removed from the Wear network."
                    },
                    {
                        "name": "addListener(CapabilityClient.OnCapabilityChangedListener listener, Uri uri, int filterType)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a listener to be notified of capabilities being added to or removed from the Wear network."
                    },
                    {
                        "name": "addLocalCapability(String capability)",
                        "return_type": "abstract Task<Void>",
                        "description": "Announces that a capability has become available on the local node."
                    },
                    {
                        "name": "getAllCapabilities(int nodeFilter)",
                        "return_type": "abstract Task<Map<String,CapabilityInfo>>",
                        "description": "Returns information about all capabilities, including the nodes that declare those capabilities."
                    },
                    {
                        "name": "getCapability(String capability, int nodeFilter)",
                        "return_type": "abstract Task<CapabilityInfo>",
                        "description": "Returns information about a capability, including the nodes that declare that capability."
                    },
                    {
                        "name": "removeListener(CapabilityClient.OnCapabilityChangedListener listener)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Removes a listener which was previously added through addListener(OnCapabilityChangedListener, Uri, int"
                    },
                    {
                        "name": "removeListener(CapabilityClient.OnCapabilityChangedListener listener, String capability)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Removes a listener which was previously added through addListener(OnCapabilityChangedListener, String"
                    },
                    {
                        "name": "removeLocalCapability(String capability)",
                        "return_type": "abstract Task<Void>",
                        "description": "Announces that a capability is no longer available on the local node."
                    }
                ]
            },
            {
                "name": "ChannelClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelClient",
                "description": "Client interface for Wearable Channel API.",
                "methods": [
                    {
                        "name": "close(ChannelClient.Channel channel, int errorCode)",
                        "return_type": "abstract Task<Void>",
                        "description": "Closes a channel, passing an application-defined error code to the remote node."
                    },
                    {
                        "name": "close(ChannelClient.Channel channel)",
                        "return_type": "abstract Task<Void>",
                        "description": "Closes a channel, making any future operations on it invalid."
                    },
                    {
                        "name": "getInputStream(ChannelClient.Channel channel)",
                        "return_type": "abstract Task<InputStream>",
                        "description": "Returns an input stream which can read data from the remote node."
                    },
                    {
                        "name": "getOutputStream(ChannelClient.Channel channel)",
                        "return_type": "abstract Task<OutputStream>",
                        "description": "Returns an output stream which can send data to a remote node."
                    },
                    {
                        "name": "openChannel(String nodeId, String path)",
                        "return_type": "abstract Task<ChannelClient.Channel>",
                        "description": "Opens a channel to exchange data with a remote node."
                    },
                    {
                        "name": "receiveFile(ChannelClient.Channel channel, Uri uri, boolean append)",
                        "return_type": "abstract Task<Void>",
                        "description": "Reads input from a channel into a file."
                    },
                    {
                        "name": "registerChannelCallback(ChannelClient.Channel channel, ChannelClient.ChannelCallback callback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a callback to be notified of events for a channel."
                    },
                    {
                        "name": "registerChannelCallback(ChannelClient.ChannelCallback callback)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a callback to be notified of channel events."
                    },
                    {
                        "name": "sendFile(ChannelClient.Channel channel, Uri uri)",
                        "return_type": "abstract Task<Void>",
                        "description": "Reads from a file into the output side of a channel."
                    },
                    {
                        "name": "sendFile(ChannelClient.Channel channel, Uri uri, long startOffset, long length)",
                        "return_type": "abstract Task<Void>",
                        "description": "Reads from a file into the output side of a channel."
                    },
                    {
                        "name": "unregisterChannelCallback(ChannelClient.Channel channel, ChannelClient.ChannelCallback callback)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Removes a callback which was previously added through registerChannelCallback(Channel, ChannelCallback"
                    },
                    {
                        "name": "unregisterChannelCallback(ChannelClient.ChannelCallback callback)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Removes a callback which was previously added through registerChannelCallback(ChannelCallback"
                    }
                ]
            },
            {
                "name": "ChannelClient.ChannelCallback",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelClient.ChannelCallback",
                "description": "A callback which will be notified on changes to channels.",
                "methods": [
                    {
                        "name": "onChannelClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when a channel is closed."
                    },
                    {
                        "name": "onChannelOpened(ChannelClient.Channel channel)",
                        "return_type": "void",
                        "description": "Called when a new channel is opened by a remote node."
                    },
                    {
                        "name": "onInputClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the input side of a channel is closed."
                    },
                    {
                        "name": "onOutputClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the output side of a channel is closed."
                    }
                ]
            },
            {
                "name": "DataClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/DataClient",
                "description": "Exposes an API for components to read or write {@linkplain DataItem data items} and {@linkplain Asset assets}.",
                "methods": [
                    {
                        "name": "addListener(DataClient.OnDataChangedListener listener)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a listener to receive data item changed and deleted events."
                    },
                    {
                        "name": "addListener(DataClient.OnDataChangedListener listener, Uri uri, int filterType)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a listener to receive data item changed and deleted events."
                    },
                    {
                        "name": "deleteDataItems(Uri uri, int filterType)",
                        "return_type": "abstract Task<Integer>",
                        "description": "Removes all specified data items from the Android Wear network."
                    },
                    {
                        "name": "deleteDataItems(Uri uri)",
                        "return_type": "abstract Task<Integer>",
                        "description": "Removes all specified data items from the Android Wear network."
                    },
                    {
                        "name": "getDataItem(Uri uri)",
                        "return_type": "abstract Task<DataItem>",
                        "description": "Retrieves a single DataItem from the Android Wear network."
                    },
                    {
                        "name": "getDataItems(Uri uri, int filterType)",
                        "return_type": "abstract Task<DataItemBuffer>",
                        "description": "Retrieves all data items matching the provided URI and filter type, from the Android Wear network."
                    },
                    {
                        "name": "getDataItems()",
                        "return_type": "abstract Task<DataItemBuffer>",
                        "description": "Retrieves all data items from the Android Wear network."
                    },
                    {
                        "name": "getDataItems(Uri uri)",
                        "return_type": "abstract Task<DataItemBuffer>",
                        "description": "Retrieves all data items matching the provided URI, from the Android Wear network."
                    },
                    {
                        "name": "getFdForAsset(DataItemAsset asset)",
                        "return_type": "abstract Task<DataClient.GetFdForAssetResponse>",
                        "description": "Retrieves a ParcelFileDescriptor pointing at the bytes of an asset."
                    },
                    {
                        "name": "getFdForAsset(Asset asset)",
                        "return_type": "abstract Task<DataClient.GetFdForAssetResponse>",
                        "description": "Retrieves a ParcelFileDescriptor pointing at the bytes of an asset."
                    },
                    {
                        "name": "putDataItem(PutDataRequest request)",
                        "return_type": "abstract Task<DataItem>",
                        "description": "Adds a DataItem to the Android Wear network."
                    },
                    {
                        "name": "removeListener(DataClient.OnDataChangedListener listener)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Removes a listener which was previously added through addListener(OnDataChangedListener"
                    }
                ]
            },
            {
                "name": "DataClient.GetFdForAssetResponse",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/DataClient.GetFdForAssetResponse",
                "description": "Contains a file descriptor for the requested asset.",
                "methods": [
                    {
                        "name": "getFdForAsset()",
                        "return_type": "abstractParcelFileDescriptor",
                        "description": "Returns a file descriptor for the requested asset."
                    },
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an input stream wrapping the file descriptor."
                    }
                ]
            },
            {
                "name": "DataEventBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/DataEventBuffer",
                "description": "Data structure holding references to a set of events.",
                "methods": [
                    {
                        "name": "get(int arg0)",
                        "return_type": "finalDataEvent",
                        "description": ""
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataItemBuffer",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/DataItemBuffer",
                "description": "Data structure holding reference to a set of DataItems.",
                "methods": [
                    {
                        "name": "get(int arg0)",
                        "return_type": "finalDataItem",
                        "description": ""
                    },
                    {
                        "name": "getCount()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "getStatus()",
                        "return_type": "Status",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataMap",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/DataMap",
                "description": "A map of data supported by PutDataMapRequest and DataMapItems.",
                "methods": [
                    {
                        "name": "arrayListFromBundleArrayList(ArrayList<Bundle> bundleArrayList)",
                        "return_type": "staticArrayList<DataMap>",
                        "description": "Returns an ArrayList of DataMaps from an ArrayList of Bundles."
                    },
                    {
                        "name": "clear()",
                        "return_type": "void",
                        "description": "Removes all elements from the mapping of this DataMap."
                    },
                    {
                        "name": "containsKey(String key)",
                        "return_type": "boolean",
                        "description": "Returns true if the given key is contained in the mapping of this DataMap."
                    },
                    {
                        "name": "equals(Object o)",
                        "return_type": "boolean",
                        "description": "Returns true if the given Object is a DataMap equivalent to this one."
                    },
                    {
                        "name": "fromBundle(Bundle bundle)",
                        "return_type": "staticDataMap",
                        "description": "Returns a DataMap from a Bundle."
                    },
                    {
                        "name": "fromByteArray(byte[] bytes)",
                        "return_type": "staticDataMap",
                        "description": "Returns a DataMap from a byte[]."
                    },
                    {
                        "name": "get(String key)",
                        "return_type": "<T> T",
                        "description": "Returns the entry with the given key as an object."
                    },
                    {
                        "name": "getAsset(String key)",
                        "return_type": "Asset",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getBoolean(String key, boolean defaultValue)",
                        "return_type": "boolean",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getBoolean(String key)",
                        "return_type": "boolean",
                        "description": "Returns the value associated with the given key, or false if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getByte(String key)",
                        "return_type": "byte",
                        "description": "Returns the value associated with the given key, or (byte"
                    },
                    {
                        "name": "getByte(String key, byte defaultValue)",
                        "return_type": "byte",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getByteArray(String key)",
                        "return_type": "byte[]",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getDataMap(String key)",
                        "return_type": "DataMap",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getDataMapArrayList(String key)",
                        "return_type": "ArrayList<DataMap>",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getDouble(String key, double defaultValue)",
                        "return_type": "double",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getDouble(String key)",
                        "return_type": "double",
                        "description": "Returns the value associated with the given key, or 0.0 if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getFloat(String key, float defaultValue)",
                        "return_type": "float",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getFloat(String key)",
                        "return_type": "float",
                        "description": "Returns the value associated with the given key, or 0.0f if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getFloatArray(String key)",
                        "return_type": "float[]",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getInt(String key, int defaultValue)",
                        "return_type": "int",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getInt(String key)",
                        "return_type": "int",
                        "description": "Returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getIntegerArrayList(String key)",
                        "return_type": "ArrayList<Integer>",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getLong(String key, long defaultValue)",
                        "return_type": "long",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getLong(String key)",
                        "return_type": "long",
                        "description": "Returns the value associated with the given key, or 0L if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getLongArray(String key)",
                        "return_type": "long[]",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getString(String key)",
                        "return_type": "String",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getString(String key, String defaultValue)",
                        "return_type": "String",
                        "description": "Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key."
                    },
                    {
                        "name": "getStringArray(String key)",
                        "return_type": "String[]",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "getStringArrayList(String key)",
                        "return_type": "ArrayList<String>",
                        "description": "Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key."
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    },
                    {
                        "name": "isEmpty()",
                        "return_type": "boolean",
                        "description": "Returns true if the mapping of this DataMap is empty, false otherwise."
                    },
                    {
                        "name": "keySet()",
                        "return_type": "Set<String>",
                        "description": "Returns a Set containing the Strings used as keys in this DataMap."
                    },
                    {
                        "name": "putAll(DataMap dataMap)",
                        "return_type": "void",
                        "description": "Inserts all mappings from the given DataMap into this DataMap."
                    },
                    {
                        "name": "putAsset(String key, Asset value)",
                        "return_type": "void",
                        "description": "Inserts an Asset into the mapping of this DataMap, replacing any existing Asset for the given key."
                    },
                    {
                        "name": "putBoolean(String key, boolean value)",
                        "return_type": "void",
                        "description": "Inserts a boolean value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putByte(String key, byte value)",
                        "return_type": "void",
                        "description": "Inserts a byte value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putByteArray(String key, byte[] value)",
                        "return_type": "void",
                        "description": "Inserts a byte array value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putDataMap(String key, DataMap value)",
                        "return_type": "void",
                        "description": "Inserts a DataMap into the mapping of this DataMap, replacing any existing DataMap for the given key."
                    },
                    {
                        "name": "putDataMapArrayList(String key, ArrayList<DataMap> value)",
                        "return_type": "void",
                        "description": "Inserts an ArrayList value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putDouble(String key, double value)",
                        "return_type": "void",
                        "description": "Inserts a double value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putFloat(String key, float value)",
                        "return_type": "void",
                        "description": "Inserts a float value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putFloatArray(String key, float[] value)",
                        "return_type": "void",
                        "description": "Inserts a float array value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putInt(String key, int value)",
                        "return_type": "void",
                        "description": "Inserts an int value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putIntegerArrayList(String key, ArrayList<Integer> value)",
                        "return_type": "void",
                        "description": "Inserts an ArrayList value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putLong(String key, long value)",
                        "return_type": "void",
                        "description": "Inserts a long value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putLongArray(String key, long[] value)",
                        "return_type": "void",
                        "description": "Inserts a long array value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putString(String key, String value)",
                        "return_type": "void",
                        "description": "Inserts a String value into the mapping of this DataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putStringArray(String key, String[] value)",
                        "return_type": "void",
                        "description": "Inserts a String array value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "putStringArrayList(String key, ArrayList<String> value)",
                        "return_type": "void",
                        "description": "Inserts an ArrayList value into the mapping of this dataMap, replacing any existing value for the given key."
                    },
                    {
                        "name": "remove(String key)",
                        "return_type": "Object",
                        "description": "Removes any entry with the given key from the mapping of this dataMap."
                    },
                    {
                        "name": "size()",
                        "return_type": "int",
                        "description": "Returns the number of key-value pairs in this map."
                    },
                    {
                        "name": "toBundle()",
                        "return_type": "Bundle",
                        "description": "Returns a Bundle containing all the elements on this DataMap."
                    },
                    {
                        "name": "toByteArray()",
                        "return_type": "byte[]",
                        "description": "Returns a serialized byte[] representing this DataMap."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    }
                ]
            },
            {
                "name": "DataMapItem",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/DataMapItem",
                "description": "Creates a new dataItem-like object containing structured and serializable data.",
                "methods": [
                    {
                        "name": "fromDataItem(DataItem dataItem)",
                        "return_type": "staticDataMapItem",
                        "description": "Provides a DataMapItem wrapping a dataItem."
                    },
                    {
                        "name": "getDataMap()",
                        "return_type": "DataMap",
                        "description": "Returns the DataMap."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "Uri",
                        "description": "Returns the underlying dataItem's Uri."
                    }
                ]
            },
            {
                "name": "MessageClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/MessageClient",
                "description": "Exposes an API for components to send messages to other nodes.",
                "methods": [
                    {
                        "name": "addListener(MessageClient.OnMessageReceivedListener listener, Uri uri, int filterType)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a listener to be notified of received messages."
                    },
                    {
                        "name": "addListener(MessageClient.OnMessageReceivedListener listener)",
                        "return_type": "abstract Task<Void>",
                        "description": "Registers a listener to be notified of received messages."
                    },
                    {
                        "name": "removeListener(MessageClient.OnMessageReceivedListener listener)",
                        "return_type": "abstract Task<Boolean>",
                        "description": "Removes a listener which was previously added through addListener(OnMessageReceivedListener"
                    },
                    {
                        "name": "sendMessage(String nodeId, String path, byte[] data)",
                        "return_type": "abstract Task<Integer>",
                        "description": "Sends byte[] data to the specified node."
                    },
                    {
                        "name": "sendMessage(String nodeId, String path, byte[] data, MessageOptions options)",
                        "return_type": "abstract Task<Integer>",
                        "description": "Sends byte[] data to the specified node."
                    }
                ]
            },
            {
                "name": "NodeClient",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/NodeClient",
                "description": "Exposes an API for learning about local or connected Nodes.",
                "methods": [
                    {
                        "name": "getCompanionPackageForNode(String watchNodeId)",
                        "return_type": "abstract Task<String>",
                        "description": "Gets the package name for the Companion application associated with this node."
                    },
                    {
                        "name": "getConnectedNodes()",
                        "return_type": "abstract Task<List<Node>>",
                        "description": "Gets a list of nodes to which this device is currently connected, either directly or indirectly via a directly connected node."
                    },
                    {
                        "name": "getLocalNode()",
                        "return_type": "abstract Task<Node>",
                        "description": "Gets the Node that refers to this device."
                    }
                ]
            },
            {
                "name": "PutDataMapRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/PutDataMapRequest",
                "description": "PutDataMapRequest is a DataMap-aware version of PutDataRequest.",
                "methods": [
                    {
                        "name": "asPutDataRequest()",
                        "return_type": "PutDataRequest",
                        "description": "Creates a PutDataRequest containing the data and assets in this PutDataMapRequest."
                    },
                    {
                        "name": "create(String path)",
                        "return_type": "staticPutDataMapRequest",
                        "description": "Creates a PutDataMapRequest with the provided, complete, path."
                    },
                    {
                        "name": "createFromDataMapItem(DataMapItem source)",
                        "return_type": "staticPutDataMapRequest",
                        "description": "Creates a PutDataMapRequest from a DataMapItem using the provided source."
                    },
                    {
                        "name": "createWithAutoAppendedId(String pathPrefix)",
                        "return_type": "staticPutDataMapRequest",
                        "description": "Creates a PutDataMapRequest with a randomly generated id prefixed with the provided path."
                    },
                    {
                        "name": "getDataMap()",
                        "return_type": "DataMap",
                        "description": ""
                    },
                    {
                        "name": "getUri()",
                        "return_type": "Uri",
                        "description": "Returns a Uri for the pending data item."
                    },
                    {
                        "name": "isUrgent()",
                        "return_type": "boolean",
                        "description": "Whether the DataItem for this request is urgent."
                    },
                    {
                        "name": "setUrgent()",
                        "return_type": "PutDataMapRequest",
                        "description": "Flags this DataItem for urgent transport."
                    }
                ]
            },
            {
                "name": "PutDataRequest",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/PutDataRequest",
                "description": "PutDataRequest is used to create new data items in the Android Wear network.",
                "methods": [
                    {
                        "name": "create(String path)",
                        "return_type": "staticPutDataRequest",
                        "description": "Creates a dataItem with the provided, complete, path."
                    },
                    {
                        "name": "createFromDataItem(DataItem source)",
                        "return_type": "staticPutDataRequest",
                        "description": "Creates a PutDataRequest from an existing DataItem using the provided source."
                    },
                    {
                        "name": "createWithAutoAppendedId(String pathPrefix)",
                        "return_type": "staticPutDataRequest",
                        "description": "Creates a PutDataRequest with a randomly generated id prefixed with the provided path."
                    },
                    {
                        "name": "getAsset(String key)",
                        "return_type": "Asset",
                        "description": "Returns an asset previously added with putAsset(String, Asset"
                    },
                    {
                        "name": "getAssets()",
                        "return_type": "Map<String,Asset>",
                        "description": ""
                    },
                    {
                        "name": "getData()",
                        "return_type": "byte[]",
                        "description": "An array of data stored at the specfied Uri."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "Uri",
                        "description": "Returns a Uri for the pending data item."
                    },
                    {
                        "name": "hasAsset(String key)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "isUrgent()",
                        "return_type": "boolean",
                        "description": "Whether the DataItem for this request is urgent."
                    },
                    {
                        "name": "putAsset(String key, Asset value)",
                        "return_type": "PutDataRequest",
                        "description": "Adds an asset to the data item."
                    },
                    {
                        "name": "removeAsset(String key)",
                        "return_type": "PutDataRequest",
                        "description": "Removes a previously added asset."
                    },
                    {
                        "name": "setData(byte[] data)",
                        "return_type": "PutDataRequest",
                        "description": "Sets the data in a data item."
                    },
                    {
                        "name": "setUrgent()",
                        "return_type": "PutDataRequest",
                        "description": "Flags this DataItem for urgent transport."
                    },
                    {
                        "name": "toString()",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "toString(boolean verbose)",
                        "return_type": "String",
                        "description": ""
                    },
                    {
                        "name": "writeToParcel(Parcel dest, int flags)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Wearable",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/Wearable",
                "description": "An API for the Android Wear platform.",
                "methods": [
                    {
                        "name": "getCapabilityClient(Context context)",
                        "return_type": "staticCapabilityClient",
                        "description": "Create a new instance of CapabilityClient for use in a non-activity Context."
                    },
                    {
                        "name": "getCapabilityClient(Activity activity, Wearable.WearableOptions options)",
                        "return_type": "staticCapabilityClient",
                        "description": "Create a new instance of CapabilityClient for use in an Activity."
                    },
                    {
                        "name": "getCapabilityClient(Context context, Wearable.WearableOptions options)",
                        "return_type": "staticCapabilityClient",
                        "description": "Create a new instance of CapabilityClient for use in a non-activity Context."
                    },
                    {
                        "name": "getCapabilityClient(Activity activity)",
                        "return_type": "staticCapabilityClient",
                        "description": "Create a new instance of CapabilityClient for use in an Activity."
                    },
                    {
                        "name": "getChannelClient(Context context, Wearable.WearableOptions options)",
                        "return_type": "staticChannelClient",
                        "description": "Create a new instance of ChannelClient for use in a non-activity Context."
                    },
                    {
                        "name": "getChannelClient(Context context)",
                        "return_type": "staticChannelClient",
                        "description": "Create a new instance of ChannelClient for use in a non-activity Context."
                    },
                    {
                        "name": "getChannelClient(Activity activity, Wearable.WearableOptions options)",
                        "return_type": "staticChannelClient",
                        "description": "Create a new instance of ChannelClient for use in an Activity."
                    },
                    {
                        "name": "getChannelClient(Activity activity)",
                        "return_type": "staticChannelClient",
                        "description": "Create a new instance of ChannelClient for use in an Activity."
                    },
                    {
                        "name": "getDataClient(Activity activity, Wearable.WearableOptions options)",
                        "return_type": "staticDataClient",
                        "description": "Create a new instance of DataClient for use in an Activity."
                    },
                    {
                        "name": "getDataClient(Activity activity)",
                        "return_type": "staticDataClient",
                        "description": "Create a new instance of DataClient for use in an Activity."
                    },
                    {
                        "name": "getDataClient(Context context, Wearable.WearableOptions options)",
                        "return_type": "staticDataClient",
                        "description": "Create a new instance of DataClient for use in a non-activity Context."
                    },
                    {
                        "name": "getDataClient(Context context)",
                        "return_type": "staticDataClient",
                        "description": "Create a new instance of DataClient for use in a non-activity Context."
                    },
                    {
                        "name": "getMessageClient(Context context, Wearable.WearableOptions options)",
                        "return_type": "staticMessageClient",
                        "description": "Create a new instance of MessageClient for use in a non-activity Context."
                    },
                    {
                        "name": "getMessageClient(Activity activity)",
                        "return_type": "staticMessageClient",
                        "description": "Create a new instance of MessageClient for use in an Activity."
                    },
                    {
                        "name": "getMessageClient(Context context)",
                        "return_type": "staticMessageClient",
                        "description": "Create a new instance of MessageClient for use in a non-activity Context."
                    },
                    {
                        "name": "getMessageClient(Activity activity, Wearable.WearableOptions options)",
                        "return_type": "staticMessageClient",
                        "description": "Create a new instance of MessageClient for use in an Activity."
                    },
                    {
                        "name": "getNodeClient(Context context)",
                        "return_type": "staticNodeClient",
                        "description": "Create a new instance of NodeClient for use in a non-activity Context."
                    },
                    {
                        "name": "getNodeClient(Activity activity)",
                        "return_type": "staticNodeClient",
                        "description": "Create a new instance of NodeClient for use in an Activity."
                    },
                    {
                        "name": "getNodeClient(Context context, Wearable.WearableOptions options)",
                        "return_type": "staticNodeClient",
                        "description": "Create a new instance of NodeClient for use in a non-activity Context."
                    },
                    {
                        "name": "getNodeClient(Activity activity, Wearable.WearableOptions options)",
                        "return_type": "staticNodeClient",
                        "description": "Create a new instance of NodeClient for use in an Activity."
                    }
                ]
            },
            {
                "name": "Wearable.WearableOptions",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/Wearable.WearableOptions",
                "description": "Options for the Wearable API.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Wearable.WearableOptions.Builder",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/Wearable.WearableOptions.Builder",
                "description": "Builder class for Wearable.WearableOptions",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Wearable.WearableOptions",
                        "description": "Builds a Wearable.WearableOptions"
                    },
                    {
                        "name": "setLooper(Looper looper)",
                        "return_type": "Wearable.WearableOptions.Builder",
                        "description": "Sets the Looper used for listener callbacks."
                    }
                ]
            },
            {
                "name": "WearableListenerService",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/WearableListenerService",
                "description": "Receives events from other nodes, such as data changes, messages or connectivity events.",
                "methods": [
                    {
                        "name": "getLooper()",
                        "return_type": "Looper",
                        "description": "This method is used to retrieve the looper all callbacks will run on."
                    },
                    {
                        "name": "onBind(Intent intent)",
                        "return_type": "finalIBinder",
                        "description": ""
                    },
                    {
                        "name": "onCapabilityChanged(CapabilityInfo capabilityInfo)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onChannelClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when a channel is closed."
                    },
                    {
                        "name": "onChannelClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when a channel is closed."
                    },
                    {
                        "name": "onChannelOpened(Channel channel)",
                        "return_type": "void",
                        "description": "Called when a new channel is opened by a remote node."
                    },
                    {
                        "name": "onChannelOpened(ChannelClient.Channel channel)",
                        "return_type": "void",
                        "description": "Called when a new channel is opened by a remote node."
                    },
                    {
                        "name": "onConnectedNodes(List<Node> connectedNodes)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onCreate()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onDataChanged(DataEventBuffer dataEvents)",
                        "return_type": "void",
                        "description": "Receives data changed events."
                    },
                    {
                        "name": "onDestroy()",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onInputClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the input side of a channel is closed."
                    },
                    {
                        "name": "onInputClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the input side of a channel is closed."
                    },
                    {
                        "name": "onMessageReceived(MessageEvent messageEvent)",
                        "return_type": "void",
                        "description": "Receives message events."
                    },
                    {
                        "name": "onOutputClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the output side of a channel is closed."
                    },
                    {
                        "name": "onOutputClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the output side of a channel is closed."
                    },
                    {
                        "name": "onPeerConnected(Node peer)",
                        "return_type": "void",
                        "description": ""
                    },
                    {
                        "name": "onPeerDisconnected(Node peer)",
                        "return_type": "void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "WearableStatusCodes",
                "type_obj": "classes",
                "link": "/android/reference/com/google/android/gms/wearable/WearableStatusCodes",
                "description": "Error codes for wearable API failures.",
                "methods": [
                    {
                        "name": "getStatusCodeString(int statusCode)",
                        "return_type": "staticString",
                        "description": "Returns an untranslated debug (not user-friendly!"
                    }
                ]
            },
            {
                "name": "CapabilityApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi",
                "description": "This interface is deprecated. Use CapabilityClient.",
                "methods": [
                    {
                        "name": "addCapabilityListener(GoogleApiClient client, CapabilityApi.CapabilityListener listener, String capability)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to be notified of a specific capability being added to or removed from the Wear network."
                    },
                    {
                        "name": "addListener(GoogleApiClient client, CapabilityApi.CapabilityListener listener, Uri uri, int filterType)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to be notified of capabilities being added to or removed from the Wear network."
                    },
                    {
                        "name": "addLocalCapability(GoogleApiClient client, String capability)",
                        "return_type": "abstractPendingResult<CapabilityApi.AddLocalCapabilityResult>",
                        "description": "Announces that a capability has become available on the local node."
                    },
                    {
                        "name": "getAllCapabilities(GoogleApiClient client, int nodeFilter)",
                        "return_type": "abstractPendingResult<CapabilityApi.GetAllCapabilitiesResult>",
                        "description": "Returns information about all capabilities, including the nodes that declare those capabilities."
                    },
                    {
                        "name": "getCapability(GoogleApiClient client, String capability, int nodeFilter)",
                        "return_type": "abstractPendingResult<CapabilityApi.GetCapabilityResult>",
                        "description": "Returns information about a capability, including the nodes that declare that capability."
                    },
                    {
                        "name": "removeCapabilityListener(GoogleApiClient client, CapabilityApi.CapabilityListener listener, String capability)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a listener which was previously added through addCapabilityListener(GoogleApiClient, CapabilityApi.CapabilityListener, String"
                    },
                    {
                        "name": "removeListener(GoogleApiClient client, CapabilityApi.CapabilityListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a listener which was previously added through addListener(GoogleApiClient, CapabilityApi.CapabilityListener, Uri, int"
                    },
                    {
                        "name": "removeLocalCapability(GoogleApiClient client, String capability)",
                        "return_type": "abstractPendingResult<CapabilityApi.RemoveLocalCapabilityResult>",
                        "description": "Announces that a capability is no longer available on the local node."
                    }
                ]
            },
            {
                "name": "CapabilityApi.AddLocalCapabilityResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.AddLocalCapabilityResult",
                "description": "This interface is deprecated. See CapabilityClient.addLocalCapability(String).",
                "methods": []
            },
            {
                "name": "CapabilityApi.CapabilityListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.CapabilityListener",
                "description": "This interface is deprecated. Use CapabilityClient.OnCapabilityChangedListener.",
                "methods": [
                    {
                        "name": "onCapabilityChanged(CapabilityInfo capabilityInfo)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityApi.GetAllCapabilitiesResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.GetAllCapabilitiesResult",
                "description": "This interface is deprecated. See CapabilityClient.getAllCapabilities(int).",
                "methods": [
                    {
                        "name": "getAllCapabilities()",
                        "return_type": "abstractMap<String,CapabilityInfo>",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityApi.GetCapabilityResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.GetCapabilityResult",
                "description": "This interface is deprecated. See CapabilityClient.getCapability(String, int).",
                "methods": [
                    {
                        "name": "getCapability()",
                        "return_type": "abstractCapabilityInfo",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityApi.RemoveLocalCapabilityResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.RemoveLocalCapabilityResult",
                "description": "This interface is deprecated. See CapabilityClient.removeLocalCapability(String).",
                "methods": []
            },
            {
                "name": "CapabilityClient.OnCapabilityChangedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityClient.OnCapabilityChangedListener",
                "description": "Listener for changes in the reachable nodes providing a capability.",
                "methods": [
                    {
                        "name": "onCapabilityChanged(CapabilityInfo capabilityInfo)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityInfo",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityInfo",
                "description": "Information about a Capability on the network and where it is available.",
                "methods": [
                    {
                        "name": "getName()",
                        "return_type": "abstractString",
                        "description": "Returns the name of the capability."
                    },
                    {
                        "name": "getNodes()",
                        "return_type": "abstractSet<Node>",
                        "description": "Returns the set of nodes for the capability."
                    }
                ]
            },
            {
                "name": "Channel",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/Channel",
                "description": "This interface is deprecated. Use ChannelClient.Channel.",
                "methods": [
                    {
                        "name": "addListener(GoogleApiClient client, ChannelApi.ChannelListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to be notified of events for this channel."
                    },
                    {
                        "name": "close(GoogleApiClient client, int errorCode)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Closes this channel, passing an application-defined error code to the remote node."
                    },
                    {
                        "name": "close(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Closes this channel, making any future operations on it invalid."
                    },
                    {
                        "name": "getInputStream(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Channel.GetInputStreamResult>",
                        "description": "Opens the input side of the channel to receive data from the remote node."
                    },
                    {
                        "name": "getNodeId()",
                        "return_type": "abstractString",
                        "description": "Returns the node ID of the node on the other side of the channel."
                    },
                    {
                        "name": "getOutputStream(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<Channel.GetOutputStreamResult>",
                        "description": "Opens the output side of the channel to send data to the remote node."
                    },
                    {
                        "name": "getPath()",
                        "return_type": "abstractString",
                        "description": "Returns the path that was used to open the channel."
                    },
                    {
                        "name": "receiveFile(GoogleApiClient client, Uri uri, boolean append)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Reads input from this channel into a file."
                    },
                    {
                        "name": "removeListener(GoogleApiClient client, ChannelApi.ChannelListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a listener which was previously added through addListener(GoogleApiClient, ChannelApi.ChannelListener"
                    },
                    {
                        "name": "sendFile(GoogleApiClient client, Uri uri)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Reads from a file into the output side of the channel."
                    },
                    {
                        "name": "sendFile(GoogleApiClient client, Uri uri, long startOffset, long length)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Reads from a file into the output side of the channel."
                    }
                ]
            },
            {
                "name": "Channel.GetInputStreamResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/Channel.GetInputStreamResult",
                "description": "This interface is deprecated. See ChannelClient.getInputStream(ChannelClient.Channel).",
                "methods": [
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an input stream which can read data from the remote node."
                    }
                ]
            },
            {
                "name": "Channel.GetOutputStreamResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/Channel.GetOutputStreamResult",
                "description": "This interface is deprecated. See ChannelClient.getOutputStream(ChannelClient.Channel).",
                "methods": [
                    {
                        "name": "getOutputStream()",
                        "return_type": "abstractOutputStream",
                        "description": "Returns an output stream which can send data to a remote node."
                    }
                ]
            },
            {
                "name": "ChannelApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelApi",
                "description": "This interface is deprecated. Use ChannelClient.",
                "methods": [
                    {
                        "name": "addListener(GoogleApiClient client, ChannelApi.ChannelListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to be notified of channel events."
                    },
                    {
                        "name": "openChannel(GoogleApiClient client, String nodeId, String path)",
                        "return_type": "abstractPendingResult<ChannelApi.OpenChannelResult>",
                        "description": "Opens a channel to exchange data with a remote node."
                    },
                    {
                        "name": "removeListener(GoogleApiClient client, ChannelApi.ChannelListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a listener which was previously added through addListener(GoogleApiClient, ChannelListener"
                    }
                ]
            },
            {
                "name": "ChannelApi.ChannelListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelApi.ChannelListener",
                "description": "This interface is deprecated. Use ChannelClient.ChannelCallback.",
                "methods": [
                    {
                        "name": "onChannelClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "abstract void",
                        "description": "Called when a channel is closed."
                    },
                    {
                        "name": "onChannelOpened(Channel channel)",
                        "return_type": "abstract void",
                        "description": "Called when a new channel is opened by a remote node."
                    },
                    {
                        "name": "onInputClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "abstract void",
                        "description": "Called when the input side of a channel is closed."
                    },
                    {
                        "name": "onOutputClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "abstract void",
                        "description": "Called when the output side of a channel is closed."
                    }
                ]
            },
            {
                "name": "ChannelApi.OpenChannelResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelApi.OpenChannelResult",
                "description": "This interface is deprecated. See ChannelClient.openChannel(String, String).",
                "methods": [
                    {
                        "name": "getChannel()",
                        "return_type": "abstractChannel",
                        "description": "Returns the newly created channel, or null, if the connection couldn't be opened."
                    }
                ]
            },
            {
                "name": "ChannelClient.Channel",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelClient.Channel",
                "description": "A channel created through ChannelClient.openChannel(String, String).",
                "methods": [
                    {
                        "name": "getNodeId()",
                        "return_type": "abstractString",
                        "description": "Returns the node ID of the node on the other side of the channel."
                    },
                    {
                        "name": "getPath()",
                        "return_type": "abstractString",
                        "description": "Returns the path that was used to open the channel."
                    }
                ]
            },
            {
                "name": "DataApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi",
                "description": "This interface is deprecated. Use DataClient.",
                "methods": [
                    {
                        "name": "addListener(GoogleApiClient client, DataApi.DataListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to receive data item changed and deleted events."
                    },
                    {
                        "name": "addListener(GoogleApiClient client, DataApi.DataListener listener, Uri uri, int filterType)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to receive data item changed and deleted events."
                    },
                    {
                        "name": "deleteDataItems(GoogleApiClient client, Uri uri, int filterType)",
                        "return_type": "abstractPendingResult<DataApi.DeleteDataItemsResult>",
                        "description": "Removes all specified data items from the Android Wear network."
                    },
                    {
                        "name": "deleteDataItems(GoogleApiClient client, Uri uri)",
                        "return_type": "abstractPendingResult<DataApi.DeleteDataItemsResult>",
                        "description": "Removes all specified data items from the Android Wear network."
                    },
                    {
                        "name": "getDataItem(GoogleApiClient client, Uri uri)",
                        "return_type": "abstractPendingResult<DataApi.DataItemResult>",
                        "description": "Retrieves a single DataItem from the Android Wear network."
                    },
                    {
                        "name": "getDataItems(GoogleApiClient client, Uri uri, int filterType)",
                        "return_type": "abstractPendingResult<DataItemBuffer>",
                        "description": "Retrieves all data items matching the provided URI and filter type, from the Android Wear network."
                    },
                    {
                        "name": "getDataItems(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<DataItemBuffer>",
                        "description": "Retrieves all data items from the Android Wear network."
                    },
                    {
                        "name": "getDataItems(GoogleApiClient client, Uri uri)",
                        "return_type": "abstractPendingResult<DataItemBuffer>",
                        "description": "Retrieves all data items matching the provided URI, from the Android Wear network."
                    },
                    {
                        "name": "getFdForAsset(GoogleApiClient client, Asset asset)",
                        "return_type": "abstractPendingResult<DataApi.GetFdForAssetResult>",
                        "description": "Retrieves a ParcelFileDescriptor pointing at the bytes of an asset."
                    },
                    {
                        "name": "getFdForAsset(GoogleApiClient client, DataItemAsset asset)",
                        "return_type": "abstractPendingResult<DataApi.GetFdForAssetResult>",
                        "description": "Retrieves a ParcelFileDescriptor pointing at the bytes of an asset."
                    },
                    {
                        "name": "putDataItem(GoogleApiClient client, PutDataRequest request)",
                        "return_type": "abstractPendingResult<DataApi.DataItemResult>",
                        "description": "Adds a DataItem to the Android Wear network."
                    },
                    {
                        "name": "removeListener(GoogleApiClient client, DataApi.DataListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a data listener which was previously added through addListener(GoogleApiClient, DataListener"
                    }
                ]
            },
            {
                "name": "DataApi.DataItemResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.DataItemResult",
                "description": "This interface is deprecated. See DataClient.getDataItem(Uri).",
                "methods": [
                    {
                        "name": "getDataItem()",
                        "return_type": "abstractDataItem",
                        "description": "Returns a data item, or null if the item does not exit."
                    }
                ]
            },
            {
                "name": "DataApi.DataListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.DataListener",
                "description": "This interface is deprecated. Use DataClient.OnDataChangedListener.",
                "methods": [
                    {
                        "name": "onDataChanged(DataEventBuffer dataEvents)",
                        "return_type": "abstract void",
                        "description": "Notification that a set of data items have been changed or deleted."
                    }
                ]
            },
            {
                "name": "DataApi.DeleteDataItemsResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.DeleteDataItemsResult",
                "description": "This interface is deprecated. See DataClient.deleteDataItems(Uri).",
                "methods": [
                    {
                        "name": "getNumDeleted()",
                        "return_type": "abstract int",
                        "description": "Returns the number of items deleted by DataApi.deleteDataItems(GoogleApiClient, Uri"
                    }
                ]
            },
            {
                "name": "DataApi.GetFdForAssetResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.GetFdForAssetResult",
                "description": "This interface is deprecated. Use DataClient.GetFdForAssetResponse.",
                "methods": [
                    {
                        "name": "getFd()",
                        "return_type": "abstractParcelFileDescriptor",
                        "description": "Returns a file descriptor for the requested asset."
                    },
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an input stream wrapping the file descriptor."
                    }
                ]
            },
            {
                "name": "DataClient.OnDataChangedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataClient.OnDataChangedListener",
                "description": "Used with DataClient.addListener(DataClient.OnDataChangedListener) to receive data events.",
                "methods": [
                    {
                        "name": "onDataChanged(DataEventBuffer dataEvents)",
                        "return_type": "abstract void",
                        "description": "Notification that a set of data items have been changed or deleted."
                    }
                ]
            },
            {
                "name": "DataEvent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataEvent",
                "description": "Data interface for data events.",
                "methods": [
                    {
                        "name": "getDataItem()",
                        "return_type": "abstractDataItem",
                        "description": "Returns the data item modified in this event."
                    },
                    {
                        "name": "getType()",
                        "return_type": "abstract int",
                        "description": "Returns the type of event this is."
                    }
                ]
            },
            {
                "name": "DataItem",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataItem",
                "description": "The base object of data stored in the Android Wear network.",
                "methods": [
                    {
                        "name": "getAssets()",
                        "return_type": "abstractMap<String,DataItemAsset>",
                        "description": "A map of assets associated with this data item."
                    },
                    {
                        "name": "getData()",
                        "return_type": "abstract byte[]",
                        "description": "An array of data stored at the specified Uri."
                    },
                    {
                        "name": "getUri()",
                        "return_type": "abstractUri",
                        "description": "Returns the DataItem's Uri."
                    },
                    {
                        "name": "setData(byte[] data)",
                        "return_type": "abstractDataItem",
                        "description": "Sets the data in a data item."
                    }
                ]
            },
            {
                "name": "DataItemAsset",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/DataItemAsset",
                "description": "A reference to an asset stored in a data item.",
                "methods": [
                    {
                        "name": "getDataItemKey()",
                        "return_type": "abstractString",
                        "description": ""
                    },
                    {
                        "name": "getId()",
                        "return_type": "abstractString",
                        "description": ""
                    }
                ]
            },
            {
                "name": "MessageApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/MessageApi",
                "description": "This interface is deprecated. Use MessageClient.",
                "methods": [
                    {
                        "name": "addListener(GoogleApiClient client, MessageApi.MessageListener listener, Uri uri, int filterType)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to be notified of received messages."
                    },
                    {
                        "name": "addListener(GoogleApiClient client, MessageApi.MessageListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Registers a listener to be notified of received messages."
                    },
                    {
                        "name": "removeListener(GoogleApiClient client, MessageApi.MessageListener listener)",
                        "return_type": "abstractPendingResult<Status>",
                        "description": "Removes a message listener which was previously added through addListener(GoogleApiClient, MessageListener"
                    },
                    {
                        "name": "sendMessage(GoogleApiClient client, String nodeId, String path, byte[] data)",
                        "return_type": "abstractPendingResult<MessageApi.SendMessageResult>",
                        "description": "Sends byte[] data to the specified node."
                    }
                ]
            },
            {
                "name": "MessageApi.MessageListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/MessageApi.MessageListener",
                "description": "This interface is deprecated. Use MessageClient.OnMessageReceivedListener.",
                "methods": [
                    {
                        "name": "onMessageReceived(MessageEvent messageEvent)",
                        "return_type": "abstract void",
                        "description": "Notification that a message has been received."
                    }
                ]
            },
            {
                "name": "MessageApi.SendMessageResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/MessageApi.SendMessageResult",
                "description": "This interface is deprecated. See MessageClient.sendMessage(String, String, byte[]).",
                "methods": [
                    {
                        "name": "getRequestId()",
                        "return_type": "abstract int",
                        "description": "Returns an ID used to identify the sent message."
                    }
                ]
            },
            {
                "name": "MessageClient.OnMessageReceivedListener",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/MessageClient.OnMessageReceivedListener",
                "description": "Used with MessageClient.addListener(MessageClient.OnMessageReceivedListener) to receive message events.",
                "methods": [
                    {
                        "name": "onMessageReceived(MessageEvent messageEvent)",
                        "return_type": "abstract void",
                        "description": "Notification that a message has been received."
                    }
                ]
            },
            {
                "name": "MessageEvent",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/MessageEvent",
                "description": "Information about a message received by a {@linkplain MessageApi.MessageListener listener}.",
                "methods": [
                    {
                        "name": "getData()",
                        "return_type": "abstract byte[]",
                        "description": "Returns the data passed by the message."
                    },
                    {
                        "name": "getPath()",
                        "return_type": "abstractString",
                        "description": "Returns the path the message is being delivered to"
                    },
                    {
                        "name": "getRequestId()",
                        "return_type": "abstract int",
                        "description": "Returns the request id of the message, generated by the sender"
                    },
                    {
                        "name": "getSourceNodeId()",
                        "return_type": "abstractString",
                        "description": "Returns the node ID of the sender."
                    }
                ]
            },
            {
                "name": "Node",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/Node",
                "description": "Information about a particular node in the Android Wear network.",
                "methods": [
                    {
                        "name": "getDisplayName()",
                        "return_type": "abstractString",
                        "description": "Returns a human readable description of the node."
                    },
                    {
                        "name": "getId()",
                        "return_type": "abstractString",
                        "description": "Returns an opaque string that represents a node in the Android Wear network."
                    },
                    {
                        "name": "isNearby()",
                        "return_type": "abstract boolean",
                        "description": "Indicates that this node can be considered geographically nearby the local node."
                    }
                ]
            },
            {
                "name": "NodeApi",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/NodeApi",
                "description": "This interface is deprecated. Use NodeClient.",
                "methods": [
                    {
                        "name": "getConnectedNodes(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<NodeApi.GetConnectedNodesResult>",
                        "description": "Gets a list of nodes to which this device is currently connected, either directly or indirectly via a directly connected node."
                    },
                    {
                        "name": "getLocalNode(GoogleApiClient client)",
                        "return_type": "abstractPendingResult<NodeApi.GetLocalNodeResult>",
                        "description": "Gets the Node that refers to this device."
                    }
                ]
            },
            {
                "name": "NodeApi.GetConnectedNodesResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/NodeApi.GetConnectedNodesResult",
                "description": "This interface is deprecated. See NodeClient.getConnectedNodes().",
                "methods": [
                    {
                        "name": "getNodes()",
                        "return_type": "abstractList<Node>",
                        "description": "Returns a list of connected nodes, either directly or indirectly via a directly connected node."
                    }
                ]
            },
            {
                "name": "NodeApi.GetLocalNodeResult",
                "type_obj": "interfaces",
                "link": "/android/reference/com/google/android/gms/wearable/NodeApi.GetLocalNodeResult",
                "description": "This interface is deprecated. See NodeClient.getLocalNode().",
                "methods": [
                    {
                        "name": "getNode()",
                        "return_type": "abstractNode",
                        "description": "Returns a Node object which represents this device."
                    }
                ]
            },
            {
                "name": "CapabilityClient.OnCapabilityChangedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityClient.OnCapabilityChangedListener",
                "description": "Listener for changes in the reachable nodes providing a capability.",
                "methods": [
                    {
                        "name": "onCapabilityChanged(CapabilityInfo capabilityInfo)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "ChannelClient.Channel",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelClient.Channel",
                "description": "A channel created through ChannelClient.openChannel(String, String).",
                "methods": [
                    {
                        "name": "getNodeId()",
                        "return_type": "abstractString",
                        "description": "Returns the node ID of the node on the other side of the channel."
                    },
                    {
                        "name": "getPath()",
                        "return_type": "abstractString",
                        "description": "Returns the path that was used to open the channel."
                    }
                ]
            },
            {
                "name": "ChannelClient.ChannelCallback",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelClient.ChannelCallback",
                "description": "A callback which will be notified on changes to channels.",
                "methods": [
                    {
                        "name": "onChannelClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when a channel is closed."
                    },
                    {
                        "name": "onChannelOpened(ChannelClient.Channel channel)",
                        "return_type": "void",
                        "description": "Called when a new channel is opened by a remote node."
                    },
                    {
                        "name": "onInputClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the input side of a channel is closed."
                    },
                    {
                        "name": "onOutputClosed(ChannelClient.Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "void",
                        "description": "Called when the output side of a channel is closed."
                    }
                ]
            },
            {
                "name": "DataClient.GetFdForAssetResponse",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wearable/DataClient.GetFdForAssetResponse",
                "description": "Contains a file descriptor for the requested asset.",
                "methods": [
                    {
                        "name": "getFdForAsset()",
                        "return_type": "abstractParcelFileDescriptor",
                        "description": "Returns a file descriptor for the requested asset."
                    },
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an input stream wrapping the file descriptor."
                    }
                ]
            },
            {
                "name": "DataClient.OnDataChangedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/DataClient.OnDataChangedListener",
                "description": "Used with DataClient.addListener(DataClient.OnDataChangedListener) to receive data events.",
                "methods": [
                    {
                        "name": "onDataChanged(DataEventBuffer dataEvents)",
                        "return_type": "abstract void",
                        "description": "Notification that a set of data items have been changed or deleted."
                    }
                ]
            },
            {
                "name": "MessageClient.OnMessageReceivedListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/MessageClient.OnMessageReceivedListener",
                "description": "Used with MessageClient.addListener(MessageClient.OnMessageReceivedListener) to receive message events.",
                "methods": [
                    {
                        "name": "onMessageReceived(MessageEvent messageEvent)",
                        "return_type": "abstract void",
                        "description": "Notification that a message has been received."
                    }
                ]
            },
            {
                "name": "Wearable.WearableOptions",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wearable/Wearable.WearableOptions",
                "description": "Options for the Wearable API.",
                "methods": [
                    {
                        "name": "equals(Object object)",
                        "return_type": "boolean",
                        "description": ""
                    },
                    {
                        "name": "hashCode()",
                        "return_type": "int",
                        "description": ""
                    }
                ]
            },
            {
                "name": "Wearable.WearableOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wearable/Wearable.WearableOptions.Builder",
                "description": "Builder class for Wearable.WearableOptions",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Wearable.WearableOptions",
                        "description": "Builds a Wearable.WearableOptions"
                    },
                    {
                        "name": "setLooper(Looper looper)",
                        "return_type": "Wearable.WearableOptions.Builder",
                        "description": "Sets the Looper used for listener callbacks."
                    }
                ]
            },
            {
                "name": "CapabilityApi.AddLocalCapabilityResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.AddLocalCapabilityResult",
                "description": "This interface is deprecated. See CapabilityClient.addLocalCapability(String).",
                "methods": []
            },
            {
                "name": "CapabilityApi.CapabilityListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.CapabilityListener",
                "description": "This interface is deprecated. Use CapabilityClient.OnCapabilityChangedListener.",
                "methods": [
                    {
                        "name": "onCapabilityChanged(CapabilityInfo capabilityInfo)",
                        "return_type": "abstract void",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityApi.GetAllCapabilitiesResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.GetAllCapabilitiesResult",
                "description": "This interface is deprecated. See CapabilityClient.getAllCapabilities(int).",
                "methods": [
                    {
                        "name": "getAllCapabilities()",
                        "return_type": "abstractMap<String,CapabilityInfo>",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityApi.GetCapabilityResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.GetCapabilityResult",
                "description": "This interface is deprecated. See CapabilityClient.getCapability(String, int).",
                "methods": [
                    {
                        "name": "getCapability()",
                        "return_type": "abstractCapabilityInfo",
                        "description": ""
                    }
                ]
            },
            {
                "name": "CapabilityApi.RemoveLocalCapabilityResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/CapabilityApi.RemoveLocalCapabilityResult",
                "description": "This interface is deprecated. See CapabilityClient.removeLocalCapability(String).",
                "methods": []
            },
            {
                "name": "Channel.GetInputStreamResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/Channel.GetInputStreamResult",
                "description": "This interface is deprecated. See ChannelClient.getInputStream(ChannelClient.Channel).",
                "methods": [
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an input stream which can read data from the remote node."
                    }
                ]
            },
            {
                "name": "Channel.GetOutputStreamResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/Channel.GetOutputStreamResult",
                "description": "This interface is deprecated. See ChannelClient.getOutputStream(ChannelClient.Channel).",
                "methods": [
                    {
                        "name": "getOutputStream()",
                        "return_type": "abstractOutputStream",
                        "description": "Returns an output stream which can send data to a remote node."
                    }
                ]
            },
            {
                "name": "ChannelApi.ChannelListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelApi.ChannelListener",
                "description": "This interface is deprecated. Use ChannelClient.ChannelCallback.",
                "methods": [
                    {
                        "name": "onChannelClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "abstract void",
                        "description": "Called when a channel is closed."
                    },
                    {
                        "name": "onChannelOpened(Channel channel)",
                        "return_type": "abstract void",
                        "description": "Called when a new channel is opened by a remote node."
                    },
                    {
                        "name": "onInputClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "abstract void",
                        "description": "Called when the input side of a channel is closed."
                    },
                    {
                        "name": "onOutputClosed(Channel channel, int closeReason, int appSpecificErrorCode)",
                        "return_type": "abstract void",
                        "description": "Called when the output side of a channel is closed."
                    }
                ]
            },
            {
                "name": "ChannelApi.OpenChannelResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/ChannelApi.OpenChannelResult",
                "description": "This interface is deprecated. See ChannelClient.openChannel(String, String).",
                "methods": [
                    {
                        "name": "getChannel()",
                        "return_type": "abstractChannel",
                        "description": "Returns the newly created channel, or null, if the connection couldn't be opened."
                    }
                ]
            },
            {
                "name": "DataApi.DataItemResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.DataItemResult",
                "description": "This interface is deprecated. See DataClient.getDataItem(Uri).",
                "methods": [
                    {
                        "name": "getDataItem()",
                        "return_type": "abstractDataItem",
                        "description": "Returns a data item, or null if the item does not exit."
                    }
                ]
            },
            {
                "name": "DataApi.DataListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.DataListener",
                "description": "This interface is deprecated. Use DataClient.OnDataChangedListener.",
                "methods": [
                    {
                        "name": "onDataChanged(DataEventBuffer dataEvents)",
                        "return_type": "abstract void",
                        "description": "Notification that a set of data items have been changed or deleted."
                    }
                ]
            },
            {
                "name": "DataApi.DeleteDataItemsResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.DeleteDataItemsResult",
                "description": "This interface is deprecated. See DataClient.deleteDataItems(Uri).",
                "methods": [
                    {
                        "name": "getNumDeleted()",
                        "return_type": "abstract int",
                        "description": "Returns the number of items deleted by DataApi.deleteDataItems(GoogleApiClient, Uri"
                    }
                ]
            },
            {
                "name": "DataApi.GetFdForAssetResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/DataApi.GetFdForAssetResult",
                "description": "This interface is deprecated. Use DataClient.GetFdForAssetResponse.",
                "methods": [
                    {
                        "name": "getFd()",
                        "return_type": "abstractParcelFileDescriptor",
                        "description": "Returns a file descriptor for the requested asset."
                    },
                    {
                        "name": "getInputStream()",
                        "return_type": "abstractInputStream",
                        "description": "Returns an input stream wrapping the file descriptor."
                    }
                ]
            },
            {
                "name": "MessageApi.MessageListener",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/MessageApi.MessageListener",
                "description": "This interface is deprecated. Use MessageClient.OnMessageReceivedListener.",
                "methods": [
                    {
                        "name": "onMessageReceived(MessageEvent messageEvent)",
                        "return_type": "abstract void",
                        "description": "Notification that a message has been received."
                    }
                ]
            },
            {
                "name": "MessageApi.SendMessageResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/MessageApi.SendMessageResult",
                "description": "This interface is deprecated. See MessageClient.sendMessage(String, String, byte[]).",
                "methods": [
                    {
                        "name": "getRequestId()",
                        "return_type": "abstract int",
                        "description": "Returns an ID used to identify the sent message."
                    }
                ]
            },
            {
                "name": "NodeApi.GetConnectedNodesResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/NodeApi.GetConnectedNodesResult",
                "description": "This interface is deprecated. See NodeClient.getConnectedNodes().",
                "methods": [
                    {
                        "name": "getNodes()",
                        "return_type": "abstractList<Node>",
                        "description": "Returns a list of connected nodes, either directly or indirectly via a directly connected node."
                    }
                ]
            },
            {
                "name": "NodeApi.GetLocalNodeResult",
                "type_obj": "interface",
                "link": "/android/reference/com/google/android/gms/wearable/NodeApi.GetLocalNodeResult",
                "description": "This interface is deprecated. See NodeClient.getLocalNode().",
                "methods": [
                    {
                        "name": "getNode()",
                        "return_type": "abstractNode",
                        "description": "Returns a Node object which represents this device."
                    }
                ]
            },
            {
                "name": "Wearable.WearableOptions.Builder",
                "type_obj": "class",
                "link": "/android/reference/com/google/android/gms/wearable/Wearable.WearableOptions.Builder",
                "description": "Builder class for Wearable.WearableOptions",
                "methods": [
                    {
                        "name": "build()",
                        "return_type": "Wearable.WearableOptions",
                        "description": "Builds a Wearable.WearableOptions"
                    },
                    {
                        "name": "setLooper(Looper looper)",
                        "return_type": "Wearable.WearableOptions.Builder",
                        "description": "Sets the Looper used for listener callbacks."
                    }
                ]
            }
        ]
    }
]